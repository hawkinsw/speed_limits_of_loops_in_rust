
target/release/rust_linz:     file format elf64-x86-64


Disassembly of section .init:

0000000000005000 <_init>:
    5000:	f3 0f 1e fa          	endbr64 
    5004:	48 83 ec 08          	sub    $0x8,%rsp
    5008:	48 8b 05 c9 0c 04 00 	mov    0x40cc9(%rip),%rax        # 45cd8 <__gmon_start__>
    500f:	48 85 c0             	test   %rax,%rax
    5012:	74 02                	je     5016 <_init+0x16>
    5014:	ff d0                	callq  *%rax
    5016:	48 83 c4 08          	add    $0x8,%rsp
    501a:	c3                   	retq   

Disassembly of section .plt:

0000000000005020 <.plt>:
    5020:	ff 35 6a 09 04 00    	pushq  0x4096a(%rip)        # 45990 <_GLOBAL_OFFSET_TABLE_+0x8>
    5026:	ff 25 6c 09 04 00    	jmpq   *0x4096c(%rip)        # 45998 <_GLOBAL_OFFSET_TABLE_+0x10>
    502c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005030 <__tls_get_addr@plt>:
    5030:	ff 25 6a 09 04 00    	jmpq   *0x4096a(%rip)        # 459a0 <__tls_get_addr@GLIBC_2.3>
    5036:	68 00 00 00 00       	pushq  $0x0
    503b:	e9 e0 ff ff ff       	jmpq   5020 <.plt>

0000000000005040 <__fxstat64@plt>:
    5040:	ff 25 62 09 04 00    	jmpq   *0x40962(%rip)        # 459a8 <__fxstat64@GLIBC_2.2.5>
    5046:	68 01 00 00 00       	pushq  $0x1
    504b:	e9 d0 ff ff ff       	jmpq   5020 <.plt>

0000000000005050 <_Unwind_Resume@plt>:
    5050:	ff 25 5a 09 04 00    	jmpq   *0x4095a(%rip)        # 459b0 <_Unwind_Resume@GCC_3.0>
    5056:	68 02 00 00 00       	pushq  $0x2
    505b:	e9 c0 ff ff ff       	jmpq   5020 <.plt>

Disassembly of section .plt.got:

0000000000005060 <__cxa_finalize@plt>:
    5060:	ff 25 4a 0f 04 00    	jmpq   *0x40f4a(%rip)        # 45fb0 <__cxa_finalize@GLIBC_2.2.5>
    5066:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000005070 <_start>:
    5070:	f3 0f 1e fa          	endbr64 
    5074:	31 ed                	xor    %ebp,%ebp
    5076:	49 89 d1             	mov    %rdx,%r9
    5079:	5e                   	pop    %rsi
    507a:	48 89 e2             	mov    %rsp,%rdx
    507d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    5081:	50                   	push   %rax
    5082:	54                   	push   %rsp
    5083:	4c 8d 05 76 08 03 00 	lea    0x30876(%rip),%r8        # 35900 <__libc_csu_fini>
    508a:	48 8d 0d ff 07 03 00 	lea    0x307ff(%rip),%rcx        # 35890 <__libc_csu_init>
    5091:	48 8d 3d 28 03 00 00 	lea    0x328(%rip),%rdi        # 53c0 <main>
    5098:	ff 15 da 0b 04 00    	callq  *0x40bda(%rip)        # 45c78 <__libc_start_main@GLIBC_2.2.5>
    509e:	f4                   	hlt    
    509f:	90                   	nop

00000000000050a0 <deregister_tm_clones>:
    50a0:	48 8d 3d 91 0f 04 00 	lea    0x40f91(%rip),%rdi        # 46038 <__TMC_END__>
    50a7:	48 8d 05 8a 0f 04 00 	lea    0x40f8a(%rip),%rax        # 46038 <__TMC_END__>
    50ae:	48 39 f8             	cmp    %rdi,%rax
    50b1:	74 15                	je     50c8 <deregister_tm_clones+0x28>
    50b3:	48 8b 05 76 09 04 00 	mov    0x40976(%rip),%rax        # 45a30 <_ITM_deregisterTMCloneTable>
    50ba:	48 85 c0             	test   %rax,%rax
    50bd:	74 09                	je     50c8 <deregister_tm_clones+0x28>
    50bf:	ff e0                	jmpq   *%rax
    50c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    50c8:	c3                   	retq   
    50c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000050d0 <register_tm_clones>:
    50d0:	48 8d 3d 61 0f 04 00 	lea    0x40f61(%rip),%rdi        # 46038 <__TMC_END__>
    50d7:	48 8d 35 5a 0f 04 00 	lea    0x40f5a(%rip),%rsi        # 46038 <__TMC_END__>
    50de:	48 29 fe             	sub    %rdi,%rsi
    50e1:	48 89 f0             	mov    %rsi,%rax
    50e4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    50e8:	48 c1 f8 03          	sar    $0x3,%rax
    50ec:	48 01 c6             	add    %rax,%rsi
    50ef:	48 d1 fe             	sar    %rsi
    50f2:	74 14                	je     5108 <register_tm_clones+0x38>
    50f4:	48 8b 05 55 0e 04 00 	mov    0x40e55(%rip),%rax        # 45f50 <_ITM_registerTMCloneTable>
    50fb:	48 85 c0             	test   %rax,%rax
    50fe:	74 08                	je     5108 <register_tm_clones+0x38>
    5100:	ff e0                	jmpq   *%rax
    5102:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5108:	c3                   	retq   
    5109:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005110 <__do_global_dtors_aux>:
    5110:	f3 0f 1e fa          	endbr64 
    5114:	80 3d 1d 0f 04 00 00 	cmpb   $0x0,0x40f1d(%rip)        # 46038 <__TMC_END__>
    511b:	75 2b                	jne    5148 <__do_global_dtors_aux+0x38>
    511d:	55                   	push   %rbp
    511e:	48 83 3d 8a 0e 04 00 	cmpq   $0x0,0x40e8a(%rip)        # 45fb0 <__cxa_finalize@GLIBC_2.2.5>
    5125:	00 
    5126:	48 89 e5             	mov    %rsp,%rbp
    5129:	74 0c                	je     5137 <__do_global_dtors_aux+0x27>
    512b:	48 8b 3d ce 0e 04 00 	mov    0x40ece(%rip),%rdi        # 46000 <__dso_handle>
    5132:	e8 29 ff ff ff       	callq  5060 <__cxa_finalize@plt>
    5137:	e8 64 ff ff ff       	callq  50a0 <deregister_tm_clones>
    513c:	c6 05 f5 0e 04 00 01 	movb   $0x1,0x40ef5(%rip)        # 46038 <__TMC_END__>
    5143:	5d                   	pop    %rbp
    5144:	c3                   	retq   
    5145:	0f 1f 00             	nopl   (%rax)
    5148:	c3                   	retq   
    5149:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005150 <frame_dummy>:
    5150:	f3 0f 1e fa          	endbr64 
    5154:	e9 77 ff ff ff       	jmpq   50d0 <register_tm_clones>
    5159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005160 <core::ptr::drop_in_place>:
    5160:	c3                   	retq   
    5161:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5168:	00 00 00 
    516b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000005170 <rust_linz::main>:
    5170:	41 57                	push   %r15
    5172:	41 56                	push   %r14
    5174:	53                   	push   %rbx
    5175:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
    517c:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
    5183:	00 
    5184:	48 8d 1d 45 2b 01 00 	lea    0x12b45(%rip),%rbx        # 17cd0 <std::time::SystemTime::now>
    518b:	ff d3                	callq  *%rbx
    518d:	ff d3                	callq  *%rbx
    518f:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
    5194:	48 89 54 24 68       	mov    %rdx,0x68(%rsp)
    5199:	ff d3                	callq  *%rbx
    519b:	ff d3                	callq  *%rbx
    519d:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
    51a2:	48 89 54 24 78       	mov    %rdx,0x78(%rsp)
    51a7:	ff d3                	callq  *%rbx
    51a9:	48 89 c3             	mov    %rax,%rbx
    51ac:	49 89 d6             	mov    %rdx,%r14
    51af:	b8 00 65 cd 1d       	mov    $0x1dcd6500,%eax
    51b4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    51bb:	00 00 00 
    51be:	66 90                	xchg   %ax,%ax

    51c0:	83 44 24 0c 01       	addl   $0x1,0xc(%rsp)
    51c5:	83 44 24 0c 01       	addl   $0x1,0xc(%rsp)
    51ca:	83 44 24 0c 01       	addl   $0x1,0xc(%rsp)
    51cf:	83 44 24 0c 01       	addl   $0x1,0xc(%rsp)
    51d4:	83 44 24 0c 01       	addl   $0x1,0xc(%rsp)
    51d9:	48 83 c0 fb          	add    $0xfffffffffffffffb,%rax
    51dd:	0f 85 dd ff ff ff    	jne    51c0 <rust_linz::main+0x50>

    51e3:	ff 15 3f 0d 04 00    	callq  *0x40d3f(%rip)        # 45f28 <_GLOBAL_OFFSET_TABLE_+0x5a0>
    51e9:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
    51ee:	48 89 54 24 68       	mov    %rdx,0x68(%rsp)
    51f3:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    51f8:	48 8d 74 24 60       	lea    0x60(%rsp),%rsi
    51fd:	48 89 da             	mov    %rbx,%rdx
    5200:	4c 89 f1             	mov    %r14,%rcx
    5203:	ff 15 7f 09 04 00    	callq  *0x4097f(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x200>
    5209:	83 7c 24 10 01       	cmpl   $0x1,0x10(%rsp)
    520e:	0f 84 40 01 00 00    	je     5354 <rust_linz::main+0x1e4>
    5214:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
    5218:	b8 40 42 0f 00       	mov    $0xf4240,%eax
    521d:	48 f7 64 24 18       	mulq   0x18(%rsp)
    5222:	48 69 c9 d3 4d 62 10 	imul   $0x10624dd3,%rcx,%rcx
    5229:	48 c1 e9 26          	shr    $0x26,%rcx
    522d:	48 01 c1             	add    %rax,%rcx
    5230:	48 83 d2 00          	adc    $0x0,%rdx
    5234:	48 89 8c 24 80 00 00 	mov    %rcx,0x80(%rsp)
    523b:	00 
    523c:	48 89 94 24 88 00 00 	mov    %rdx,0x88(%rsp)
    5243:	00 
    5244:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
    524b:	00 
    524c:	bb 00 65 cd 1d       	mov    $0x1dcd6500,%ebx
    5251:	ff 15 d1 0c 04 00    	callq  *0x40cd1(%rip)        # 45f28 <_GLOBAL_OFFSET_TABLE_+0x5a0>
    5257:	49 89 c7             	mov    %rax,%r15
    525a:	49 89 d6             	mov    %rdx,%r14
    525d:	0f 1f 00             	nopl   (%rax)

    5260:	83 44 24 0c 01       	addl   $0x1,0xc(%rsp)
    5265:	83 44 24 0c 01       	addl   $0x1,0xc(%rsp)
    526a:	83 44 24 0c 01       	addl   $0x1,0xc(%rsp)
    526f:	83 44 24 0c 01       	addl   $0x1,0xc(%rsp)
    5274:	83 44 24 0c 01       	addl   $0x1,0xc(%rsp)
    5279:	48 83 c3 fb          	add    $0xfffffffffffffffb,%rbx
    527d:	75 e1                	jne    5260 <rust_linz::main+0xf0>

    527f:	ff 15 a3 0c 04 00    	callq  *0x40ca3(%rip)        # 45f28 <_GLOBAL_OFFSET_TABLE_+0x5a0>
    5285:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
    528a:	48 89 54 24 78       	mov    %rdx,0x78(%rsp)
    528f:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    5294:	48 8d 74 24 70       	lea    0x70(%rsp),%rsi
    5299:	4c 89 fa             	mov    %r15,%rdx
    529c:	4c 89 f1             	mov    %r14,%rcx
    529f:	ff 15 e3 08 04 00    	callq  *0x408e3(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x200>
    52a5:	83 7c 24 10 01       	cmpl   $0x1,0x10(%rsp)
    52aa:	0f 84 cd 00 00 00    	je     537d <rust_linz::main+0x20d>
    52b0:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
    52b4:	b8 40 42 0f 00       	mov    $0xf4240,%eax
    52b9:	48 f7 64 24 18       	mulq   0x18(%rsp)
    52be:	48 69 c9 d3 4d 62 10 	imul   $0x10624dd3,%rcx,%rcx
    52c5:	48 c1 e9 26          	shr    $0x26,%rcx
    52c9:	48 01 c1             	add    %rax,%rcx
    52cc:	48 83 d2 00          	adc    $0x0,%rdx
    52d0:	48 89 8c 24 90 00 00 	mov    %rcx,0x90(%rsp)
    52d7:	00 
    52d8:	48 89 94 24 98 00 00 	mov    %rdx,0x98(%rsp)
    52df:	00 
    52e0:	48 8d 84 24 80 00 00 	lea    0x80(%rsp),%rax
    52e7:	00 
    52e8:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    52ed:	48 8d 05 2c b3 02 00 	lea    0x2b32c(%rip),%rax        # 30620 <core::fmt::num::<impl core::fmt::Display for u128>::fmt>
    52f4:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    52f9:	48 8d 8c 24 90 00 00 	lea    0x90(%rsp),%rcx
    5300:	00 
    5301:	48 89 4c 24 50       	mov    %rcx,0x50(%rsp)
    5306:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    530b:	48 8d 05 f6 e1 03 00 	lea    0x3e1f6(%rip),%rax        # 43508 <__do_global_dtors_aux_fini_array_entry+0x58>
    5312:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    5317:	48 c7 44 24 18 03 00 	movq   $0x3,0x18(%rsp)
    531e:	00 00 
    5320:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    5327:	00 00 
    5329:	48 8d 44 24 40       	lea    0x40(%rsp),%rax
    532e:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    5333:	48 c7 44 24 38 02 00 	movq   $0x2,0x38(%rsp)
    533a:	00 00 
    533c:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    5341:	ff 15 89 06 04 00    	callq  *0x40689(%rip)        # 459d0 <_GLOBAL_OFFSET_TABLE_+0x48>
    5347:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
    534e:	5b                   	pop    %rbx
    534f:	41 5e                	pop    %r14
    5351:	41 5f                	pop    %r15
    5353:	c3                   	retq   
    5354:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    5359:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
    535d:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    5362:	89 4c 24 48          	mov    %ecx,0x48(%rsp)
    5366:	48 8d 3d 93 0c 03 00 	lea    0x30c93(%rip),%rdi        # 36000 <_fini+0x6dc>
    536d:	48 8d 0d 44 e1 03 00 	lea    0x3e144(%rip),%rcx        # 434b8 <__do_global_dtors_aux_fini_array_entry+0x8>
    5374:	4c 8d 05 5d e1 03 00 	lea    0x3e15d(%rip),%r8        # 434d8 <__do_global_dtors_aux_fini_array_entry+0x28>
    537b:	eb 27                	jmp    53a4 <rust_linz::main+0x234>
    537d:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    5382:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
    5386:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    538b:	89 4c 24 48          	mov    %ecx,0x48(%rsp)
    538f:	48 8d 3d 6a 0c 03 00 	lea    0x30c6a(%rip),%rdi        # 36000 <_fini+0x6dc>
    5396:	48 8d 0d 1b e1 03 00 	lea    0x3e11b(%rip),%rcx        # 434b8 <__do_global_dtors_aux_fini_array_entry+0x8>
    539d:	4c 8d 05 4c e1 03 00 	lea    0x3e14c(%rip),%r8        # 434f0 <__do_global_dtors_aux_fini_array_entry+0x40>
    53a4:	48 8d 54 24 40       	lea    0x40(%rsp),%rdx
    53a9:	be 02 00 00 00       	mov    $0x2,%esi
    53ae:	ff 15 2c 08 04 00    	callq  *0x4082c(%rip)        # 45be0 <_GLOBAL_OFFSET_TABLE_+0x258>
    53b4:	0f 0b                	ud2    
    53b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    53bd:	00 00 00 

00000000000053c0 <main>:
    53c0:	50                   	push   %rax
    53c1:	48 89 f1             	mov    %rsi,%rcx
    53c4:	48 63 d7             	movslq %edi,%rdx
    53c7:	48 8d 05 a2 fd ff ff 	lea    -0x25e(%rip),%rax        # 5170 <rust_linz::main>
    53ce:	48 89 04 24          	mov    %rax,(%rsp)
    53d2:	48 8d 35 5f e1 03 00 	lea    0x3e15f(%rip),%rsi        # 43538 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066>
    53d9:	48 89 e7             	mov    %rsp,%rdi
    53dc:	ff 15 46 07 04 00    	callq  *0x40746(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x1a0>
    53e2:	59                   	pop    %rcx
    53e3:	c3                   	retq   
    53e4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    53eb:	00 00 00 
    53ee:	66 90                	xchg   %ax,%ax

00000000000053f0 <_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h196ad9335766610eE.llvm.13585541832861257066>:
    53f0:	50                   	push   %rax
    53f1:	48 8b 3f             	mov    (%rdi),%rdi
    53f4:	e8 27 00 00 00       	callq  5420 <std::sys_common::backtrace::__rust_begin_short_backtrace>
    53f9:	31 c0                	xor    %eax,%eax
    53fb:	59                   	pop    %rcx
    53fc:	c3                   	retq   
    53fd:	0f 1f 00             	nopl   (%rax)

0000000000005400 <_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h85e9732833bda83aE.llvm.13585541832861257066>:
    5400:	50                   	push   %rax
    5401:	48 8b 3f             	mov    (%rdi),%rdi
    5404:	e8 17 00 00 00       	callq  5420 <std::sys_common::backtrace::__rust_begin_short_backtrace>
    5409:	31 c0                	xor    %eax,%eax
    540b:	59                   	pop    %rcx
    540c:	c3                   	retq   
    540d:	0f 1f 00             	nopl   (%rax)

0000000000005410 <_ZN4core3ptr13drop_in_place17hf45d225946c666c9E.llvm.13585541832861257066>:
    5410:	c3                   	retq   
    5411:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5418:	00 00 00 
    541b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000005420 <std::sys_common::backtrace::__rust_begin_short_backtrace>:
    5420:	50                   	push   %rax
    5421:	ff d7                	callq  *%rdi
    5423:	48 89 e0             	mov    %rsp,%rax
    5426:	58                   	pop    %rax
    5427:	c3                   	retq   
    5428:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    542f:	00 

0000000000005430 <__rust_alloc>:
    5430:	e9 4b 44 01 00       	jmpq   19880 <__rdl_alloc>
    5435:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    543c:	00 00 00 
    543f:	90                   	nop

0000000000005440 <__rust_dealloc>:
    5440:	e9 8b 44 01 00       	jmpq   198d0 <__rdl_dealloc>
    5445:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    544c:	00 00 00 
    544f:	90                   	nop

0000000000005450 <__rust_realloc>:
    5450:	e9 8b 44 01 00       	jmpq   198e0 <__rdl_realloc>
    5455:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    545c:	00 00 00 
    545f:	90                   	nop

0000000000005460 <__rust_alloc_zeroed>:
    5460:	e9 1b 45 01 00       	jmpq   19980 <__rdl_alloc_zeroed>
    5465:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    546c:	00 00 00 
    546f:	90                   	nop

0000000000005470 <__rust_alloc_error_handler>:
    5470:	e9 6b 9a 02 00       	jmpq   2eee0 <__rg_oom>
    5475:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    547c:	00 00 00 
    547f:	90                   	nop

0000000000005480 <<alloc::collections::btree::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::next>:
    5480:	55                   	push   %rbp
    5481:	41 57                	push   %r15
    5483:	41 56                	push   %r14
    5485:	41 55                	push   %r13
    5487:	41 54                	push   %r12
    5489:	53                   	push   %rbx
    548a:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
    5491:	48 8b 46 30          	mov    0x30(%rsi),%rax
    5495:	48 85 c0             	test   %rax,%rax
    5498:	0f 84 45 01 00 00    	je     55e3 <<alloc::collections::btree::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::next+0x163>
    549e:	49 89 f7             	mov    %rsi,%r15
    54a1:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    54a5:	48 89 46 30          	mov    %rax,0x30(%rsi)
    54a9:	48 8b 46 08          	mov    0x8(%rsi),%rax
    54ad:	48 85 c0             	test   %rax,%rax
    54b0:	4c 0f 44 f8          	cmove  %rax,%r15
    54b4:	0f 84 4d 02 00 00    	je     5707 <<alloc::collections::btree::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::next+0x287>
    54ba:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    54bf:	49 8b 07             	mov    (%r15),%rax
    54c2:	49 8b 7f 08          	mov    0x8(%r15),%rdi
    54c6:	4d 8b 67 10          	mov    0x10(%r15),%r12
    54ca:	0f b7 8f 32 05 00 00 	movzwl 0x532(%rdi),%ecx
    54d1:	49 39 cc             	cmp    %rcx,%r12
    54d4:	0f 83 16 01 00 00    	jae    55f0 <<alloc::collections::btree::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::next+0x170>
    54da:	48 89 fb             	mov    %rdi,%rbx
    54dd:	49 89 c5             	mov    %rax,%r13
    54e0:	49 6b cc 70          	imul   $0x70,%r12,%rcx
    54e4:	4a 8b 44 e3 08       	mov    0x8(%rbx,%r12,8),%rax
    54e9:	0f 10 84 0b c0 00 00 	movups 0xc0(%rbx,%rcx,1),%xmm0
    54f0:	00 
    54f1:	0f 29 84 24 e0 00 00 	movaps %xmm0,0xe0(%rsp)
    54f8:	00 
    54f9:	0f 10 84 0b b0 00 00 	movups 0xb0(%rbx,%rcx,1),%xmm0
    5500:	00 
    5501:	0f 29 84 24 d0 00 00 	movaps %xmm0,0xd0(%rsp)
    5508:	00 
    5509:	0f 10 84 0b a0 00 00 	movups 0xa0(%rbx,%rcx,1),%xmm0
    5510:	00 
    5511:	0f 29 84 24 c0 00 00 	movaps %xmm0,0xc0(%rsp)
    5518:	00 
    5519:	0f 10 44 0b 60       	movups 0x60(%rbx,%rcx,1),%xmm0
    551e:	0f 10 4c 0b 70       	movups 0x70(%rbx,%rcx,1),%xmm1
    5523:	0f 10 94 0b 80 00 00 	movups 0x80(%rbx,%rcx,1),%xmm2
    552a:	00 
    552b:	0f 10 9c 0b 90 00 00 	movups 0x90(%rbx,%rcx,1),%xmm3
    5532:	00 
    5533:	0f 29 9c 24 b0 00 00 	movaps %xmm3,0xb0(%rsp)
    553a:	00 
    553b:	0f 29 94 24 a0 00 00 	movaps %xmm2,0xa0(%rsp)
    5542:	00 
    5543:	0f 29 8c 24 90 00 00 	movaps %xmm1,0x90(%rsp)
    554a:	00 
    554b:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
    5552:	00 
    5553:	4d 85 ed             	test   %r13,%r13
    5556:	0f 84 e4 00 00 00    	je     5640 <<alloc::collections::btree::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::next+0x1c0>
    555c:	4c 89 e9             	mov    %r13,%rcx
    555f:	4a 8b 9c e3 40 05 00 	mov    0x540(%rbx,%r12,8),%rbx
    5566:	00 
    5567:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
    556b:	74 71                	je     55de <<alloc::collections::btree::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::next+0x15e>
    556d:	49 83 c5 fe          	add    $0xfffffffffffffffe,%r13
    5571:	48 89 ca             	mov    %rcx,%rdx
    5574:	48 83 e2 07          	and    $0x7,%rdx
    5578:	74 19                	je     5593 <<alloc::collections::btree::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::next+0x113>
    557a:	31 f6                	xor    %esi,%esi
    557c:	0f 1f 40 00          	nopl   0x0(%rax)
    5580:	48 8b 9b 38 05 00 00 	mov    0x538(%rbx),%rbx
    5587:	48 83 c6 01          	add    $0x1,%rsi
    558b:	48 39 f2             	cmp    %rsi,%rdx
    558e:	75 f0                	jne    5580 <<alloc::collections::btree::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::next+0x100>
    5590:	48 29 f1             	sub    %rsi,%rcx
    5593:	49 83 fd 07          	cmp    $0x7,%r13
    5597:	72 45                	jb     55de <<alloc::collections::btree::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::next+0x15e>
    5599:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    55a0:	48 8b 93 38 05 00 00 	mov    0x538(%rbx),%rdx
    55a7:	48 8b 92 38 05 00 00 	mov    0x538(%rdx),%rdx
    55ae:	48 8b 92 38 05 00 00 	mov    0x538(%rdx),%rdx
    55b5:	48 8b 92 38 05 00 00 	mov    0x538(%rdx),%rdx
    55bc:	48 8b 92 38 05 00 00 	mov    0x538(%rdx),%rdx
    55c3:	48 8b 92 38 05 00 00 	mov    0x538(%rdx),%rdx
    55ca:	48 8b 92 38 05 00 00 	mov    0x538(%rdx),%rdx
    55d1:	48 8b 9a 38 05 00 00 	mov    0x538(%rdx),%rbx
    55d8:	48 83 c1 f8          	add    $0xfffffffffffffff8,%rcx
    55dc:	75 c2                	jne    55a0 <<alloc::collections::btree::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::next+0x120>
    55de:	45 31 e4             	xor    %r12d,%r12d
    55e1:	eb 61                	jmp    5644 <<alloc::collections::btree::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::next+0x1c4>
    55e3:	48 c7 47 10 02 00 00 	movq   $0x2,0x10(%rdi)
    55ea:	00 
    55eb:	e9 05 01 00 00       	jmpq   56f5 <<alloc::collections::btree::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::next+0x275>
    55f0:	bd 38 05 00 00       	mov    $0x538,%ebp
    55f5:	4c 8d 35 44 fe ff ff 	lea    -0x1bc(%rip),%r14        # 5440 <__rust_dealloc>
    55fc:	eb 2c                	jmp    562a <<alloc::collections::btree::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::next+0x1aa>
    55fe:	66 90                	xchg   %ax,%ax
    5600:	48 85 c0             	test   %rax,%rax
    5603:	be 98 05 00 00       	mov    $0x598,%esi
    5608:	48 0f 44 f5          	cmove  %rbp,%rsi
    560c:	ba 08 00 00 00       	mov    $0x8,%edx
    5611:	41 ff d6             	callq  *%r14
    5614:	0f b7 8b 32 05 00 00 	movzwl 0x532(%rbx),%ecx
    561b:	4c 89 e8             	mov    %r13,%rax
    561e:	48 89 df             	mov    %rbx,%rdi
    5621:	49 39 cc             	cmp    %rcx,%r12
    5624:	0f 82 b6 fe ff ff    	jb     54e0 <<alloc::collections::btree::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::next+0x60>
    562a:	48 8b 1f             	mov    (%rdi),%rbx
    562d:	48 85 db             	test   %rbx,%rbx
    5630:	74 ce                	je     5600 <<alloc::collections::btree::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::next+0x180>
    5632:	44 0f b7 a7 30 05 00 	movzwl 0x530(%rdi),%r12d
    5639:	00 
    563a:	4c 8d 68 01          	lea    0x1(%rax),%r13
    563e:	eb c0                	jmp    5600 <<alloc::collections::btree::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::next+0x180>
    5640:	49 83 c4 01          	add    $0x1,%r12
    5644:	0f 28 84 24 e0 00 00 	movaps 0xe0(%rsp),%xmm0
    564b:	00 
    564c:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
    5651:	0f 28 84 24 d0 00 00 	movaps 0xd0(%rsp),%xmm0
    5658:	00 
    5659:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
    565e:	0f 28 84 24 c0 00 00 	movaps 0xc0(%rsp),%xmm0
    5665:	00 
    5666:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    566b:	0f 28 84 24 80 00 00 	movaps 0x80(%rsp),%xmm0
    5672:	00 
    5673:	0f 28 8c 24 90 00 00 	movaps 0x90(%rsp),%xmm1
    567a:	00 
    567b:	0f 28 94 24 a0 00 00 	movaps 0xa0(%rsp),%xmm2
    5682:	00 
    5683:	0f 28 9c 24 b0 00 00 	movaps 0xb0(%rsp),%xmm3
    568a:	00 
    568b:	0f 29 5c 24 40       	movaps %xmm3,0x40(%rsp)
    5690:	0f 29 54 24 30       	movaps %xmm2,0x30(%rsp)
    5695:	0f 29 4c 24 20       	movaps %xmm1,0x20(%rsp)
    569a:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    569f:	49 c7 07 00 00 00 00 	movq   $0x0,(%r15)
    56a6:	49 89 5f 08          	mov    %rbx,0x8(%r15)
    56aa:	4d 89 67 10          	mov    %r12,0x10(%r15)
    56ae:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    56b3:	48 89 01             	mov    %rax,(%rcx)
    56b6:	0f 28 44 24 10       	movaps 0x10(%rsp),%xmm0
    56bb:	0f 28 4c 24 20       	movaps 0x20(%rsp),%xmm1
    56c0:	0f 28 54 24 30       	movaps 0x30(%rsp),%xmm2
    56c5:	0f 28 5c 24 40       	movaps 0x40(%rsp),%xmm3
    56ca:	0f 11 41 08          	movups %xmm0,0x8(%rcx)
    56ce:	0f 11 49 18          	movups %xmm1,0x18(%rcx)
    56d2:	0f 11 51 28          	movups %xmm2,0x28(%rcx)
    56d6:	0f 11 59 38          	movups %xmm3,0x38(%rcx)
    56da:	0f 28 44 24 50       	movaps 0x50(%rsp),%xmm0
    56df:	0f 11 41 48          	movups %xmm0,0x48(%rcx)
    56e3:	0f 28 44 24 60       	movaps 0x60(%rsp),%xmm0
    56e8:	0f 11 41 58          	movups %xmm0,0x58(%rcx)
    56ec:	0f 28 44 24 70       	movaps 0x70(%rsp),%xmm0
    56f1:	0f 11 41 68          	movups %xmm0,0x68(%rcx)
    56f5:	48 81 c4 f8 00 00 00 	add    $0xf8,%rsp
    56fc:	5b                   	pop    %rbx
    56fd:	41 5c                	pop    %r12
    56ff:	41 5d                	pop    %r13
    5701:	41 5e                	pop    %r14
    5703:	41 5f                	pop    %r15
    5705:	5d                   	pop    %rbp
    5706:	c3                   	retq   
    5707:	48 8d 3d ec 1e 03 00 	lea    0x31eec(%rip),%rdi        # 375fa <str.6+0x2da>
    570e:	48 8d 15 53 de 03 00 	lea    0x3de53(%rip),%rdx        # 43568 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x30>
    5715:	be 2b 00 00 00       	mov    $0x2b,%esi
    571a:	ff 15 b8 07 04 00    	callq  *0x407b8(%rip)        # 45ed8 <_GLOBAL_OFFSET_TABLE_+0x550>
    5720:	0f 0b                	ud2    
    5722:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5729:	00 00 00 
    572c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005730 <<T as core::any::Any>::type_id>:
    5730:	48 b8 0b 38 d0 04 32 	movabs $0x7ebaa3204d0380b,%rax
    5737:	aa eb 07 
    573a:	c3                   	retq   
    573b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000005740 <<T as core::any::Any>::type_id>:
    5740:	48 b8 06 bb 17 03 a1 	movabs $0x39682a10317bb06,%rax
    5747:	82 96 03 
    574a:	c3                   	retq   
    574b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000005750 <<T as core::any::Any>::type_id>:
    5750:	48 b8 f4 bc c7 ec 1e 	movabs $0x7ef2a91eecc7bcf4,%rax
    5757:	a9 f2 7e 
    575a:	c3                   	retq   
    575b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000005760 <<&T as core::fmt::Debug>::fmt>:
    5760:	41 56                	push   %r14
    5762:	53                   	push   %rbx
    5763:	50                   	push   %rax
    5764:	48 89 f3             	mov    %rsi,%rbx
    5767:	4c 8b 37             	mov    (%rdi),%r14
    576a:	48 89 f7             	mov    %rsi,%rdi
    576d:	ff 15 1d 08 04 00    	callq  *0x4081d(%rip)        # 45f90 <_GLOBAL_OFFSET_TABLE_+0x608>
    5773:	84 c0                	test   %al,%al
    5775:	74 13                	je     578a <<&T as core::fmt::Debug>::fmt+0x2a>
    5777:	4c 89 f7             	mov    %r14,%rdi
    577a:	48 89 de             	mov    %rbx,%rsi
    577d:	48 83 c4 08          	add    $0x8,%rsp
    5781:	5b                   	pop    %rbx
    5782:	41 5e                	pop    %r14
    5784:	ff 25 ce 05 04 00    	jmpq   *0x405ce(%rip)        # 45d58 <_GLOBAL_OFFSET_TABLE_+0x3d0>
    578a:	48 89 df             	mov    %rbx,%rdi
    578d:	ff 15 65 02 04 00    	callq  *0x40265(%rip)        # 459f8 <_GLOBAL_OFFSET_TABLE_+0x70>
    5793:	4c 89 f7             	mov    %r14,%rdi
    5796:	48 89 de             	mov    %rbx,%rsi
    5799:	48 83 c4 08          	add    $0x8,%rsp
    579d:	84 c0                	test   %al,%al
    579f:	74 09                	je     57aa <<&T as core::fmt::Debug>::fmt+0x4a>
    57a1:	5b                   	pop    %rbx
    57a2:	41 5e                	pop    %r14
    57a4:	ff 25 56 06 04 00    	jmpq   *0x40656(%rip)        # 45e00 <_GLOBAL_OFFSET_TABLE_+0x478>
    57aa:	5b                   	pop    %rbx
    57ab:	41 5e                	pop    %r14
    57ad:	ff 25 5d 04 04 00    	jmpq   *0x4045d(%rip)        # 45c10 <_GLOBAL_OFFSET_TABLE_+0x288>
    57b3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    57ba:	00 00 00 
    57bd:	0f 1f 00             	nopl   (%rax)

00000000000057c0 <<&T as core::fmt::Debug>::fmt>:
    57c0:	41 56                	push   %r14
    57c2:	53                   	push   %rbx
    57c3:	50                   	push   %rax
    57c4:	48 89 f3             	mov    %rsi,%rbx
    57c7:	4c 8b 37             	mov    (%rdi),%r14
    57ca:	48 89 f7             	mov    %rsi,%rdi
    57cd:	ff 15 bd 07 04 00    	callq  *0x407bd(%rip)        # 45f90 <_GLOBAL_OFFSET_TABLE_+0x608>
    57d3:	84 c0                	test   %al,%al
    57d5:	74 13                	je     57ea <<&T as core::fmt::Debug>::fmt+0x2a>
    57d7:	4c 89 f7             	mov    %r14,%rdi
    57da:	48 89 de             	mov    %rbx,%rsi
    57dd:	48 83 c4 08          	add    $0x8,%rsp
    57e1:	5b                   	pop    %rbx
    57e2:	41 5e                	pop    %r14
    57e4:	ff 25 16 07 04 00    	jmpq   *0x40716(%rip)        # 45f00 <_GLOBAL_OFFSET_TABLE_+0x578>
    57ea:	48 89 df             	mov    %rbx,%rdi
    57ed:	ff 15 05 02 04 00    	callq  *0x40205(%rip)        # 459f8 <_GLOBAL_OFFSET_TABLE_+0x70>
    57f3:	4c 89 f7             	mov    %r14,%rdi
    57f6:	48 89 de             	mov    %rbx,%rsi
    57f9:	48 83 c4 08          	add    $0x8,%rsp
    57fd:	84 c0                	test   %al,%al
    57ff:	74 09                	je     580a <<&T as core::fmt::Debug>::fmt+0x4a>
    5801:	5b                   	pop    %rbx
    5802:	41 5e                	pop    %r14
    5804:	ff 25 0e 07 04 00    	jmpq   *0x4070e(%rip)        # 45f18 <_GLOBAL_OFFSET_TABLE_+0x590>
    580a:	5b                   	pop    %rbx
    580b:	41 5e                	pop    %r14
    580d:	ff 25 cd 05 04 00    	jmpq   *0x405cd(%rip)        # 45de0 <_GLOBAL_OFFSET_TABLE_+0x458>
    5813:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    581a:	00 00 00 
    581d:	0f 1f 00             	nopl   (%rax)

0000000000005820 <<&T as core::fmt::Debug>::fmt>:
    5820:	48 8b 3f             	mov    (%rdi),%rdi
    5823:	ff 25 bf 02 04 00    	jmpq   *0x402bf(%rip)        # 45ae8 <_GLOBAL_OFFSET_TABLE_+0x160>
    5829:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005830 <<&T as core::fmt::Debug>::fmt>:
    5830:	55                   	push   %rbp
    5831:	41 57                	push   %r15
    5833:	41 56                	push   %r14
    5835:	41 55                	push   %r13
    5837:	41 54                	push   %r12
    5839:	53                   	push   %rbx
    583a:	48 83 ec 18          	sub    $0x18,%rsp
    583e:	48 8b 07             	mov    (%rdi),%rax
    5841:	48 8b 18             	mov    (%rax),%rbx
    5844:	4c 8b 68 10          	mov    0x10(%rax),%r13
    5848:	48 89 f7             	mov    %rsi,%rdi
    584b:	ff 15 87 03 04 00    	callq  *0x40387(%rip)        # 45bd8 <_GLOBAL_OFFSET_TABLE_+0x250>
    5851:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    5856:	48 89 04 24          	mov    %rax,(%rsp)
    585a:	4d 85 ed             	test   %r13,%r13
    585d:	74 3b                	je     589a <<&T as core::fmt::Debug>::fmt+0x6a>
    585f:	4c 8d 35 ba dd 03 00 	lea    0x3ddba(%rip),%r14        # 43620 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xe8>
    5866:	49 89 e7             	mov    %rsp,%r15
    5869:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
    586e:	48 8d 2d 5b a9 02 00 	lea    0x2a95b(%rip),%rbp        # 301d0 <core::fmt::builders::DebugSet::entry>
    5875:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    587c:	00 00 00 
    587f:	90                   	nop
    5880:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
    5885:	48 83 c3 01          	add    $0x1,%rbx
    5889:	4c 89 ff             	mov    %r15,%rdi
    588c:	4c 89 e6             	mov    %r12,%rsi
    588f:	4c 89 f2             	mov    %r14,%rdx
    5892:	ff d5                	callq  *%rbp
    5894:	49 83 c5 ff          	add    $0xffffffffffffffff,%r13
    5898:	75 e6                	jne    5880 <<&T as core::fmt::Debug>::fmt+0x50>
    589a:	48 89 e7             	mov    %rsp,%rdi
    589d:	ff 15 55 06 04 00    	callq  *0x40655(%rip)        # 45ef8 <_GLOBAL_OFFSET_TABLE_+0x570>
    58a3:	48 83 c4 18          	add    $0x18,%rsp
    58a7:	5b                   	pop    %rbx
    58a8:	41 5c                	pop    %r12
    58aa:	41 5d                	pop    %r13
    58ac:	41 5e                	pop    %r14
    58ae:	41 5f                	pop    %r15
    58b0:	5d                   	pop    %rbp
    58b1:	c3                   	retq   
    58b2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    58b9:	00 00 00 
    58bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000058c0 <<&T as core::fmt::Debug>::fmt>:
    58c0:	41 56                	push   %r14
    58c2:	53                   	push   %rbx
    58c3:	50                   	push   %rax
    58c4:	48 89 f3             	mov    %rsi,%rbx
    58c7:	4c 8b 37             	mov    (%rdi),%r14
    58ca:	48 89 f7             	mov    %rsi,%rdi
    58cd:	ff 15 bd 06 04 00    	callq  *0x406bd(%rip)        # 45f90 <_GLOBAL_OFFSET_TABLE_+0x608>
    58d3:	84 c0                	test   %al,%al
    58d5:	74 13                	je     58ea <<&T as core::fmt::Debug>::fmt+0x2a>
    58d7:	4c 89 f7             	mov    %r14,%rdi
    58da:	48 89 de             	mov    %rbx,%rsi
    58dd:	48 83 c4 08          	add    $0x8,%rsp
    58e1:	5b                   	pop    %rbx
    58e2:	41 5e                	pop    %r14
    58e4:	ff 25 4e 02 04 00    	jmpq   *0x4024e(%rip)        # 45b38 <_GLOBAL_OFFSET_TABLE_+0x1b0>
    58ea:	48 89 df             	mov    %rbx,%rdi
    58ed:	ff 15 05 01 04 00    	callq  *0x40105(%rip)        # 459f8 <_GLOBAL_OFFSET_TABLE_+0x70>
    58f3:	4c 89 f7             	mov    %r14,%rdi
    58f6:	48 89 de             	mov    %rbx,%rsi
    58f9:	48 83 c4 08          	add    $0x8,%rsp
    58fd:	84 c0                	test   %al,%al
    58ff:	74 09                	je     590a <<&T as core::fmt::Debug>::fmt+0x4a>
    5901:	5b                   	pop    %rbx
    5902:	41 5e                	pop    %r14
    5904:	ff 25 66 02 04 00    	jmpq   *0x40266(%rip)        # 45b70 <_GLOBAL_OFFSET_TABLE_+0x1e8>
    590a:	5b                   	pop    %rbx
    590b:	41 5e                	pop    %r14
    590d:	ff 25 0d 04 04 00    	jmpq   *0x4040d(%rip)        # 45d20 <_GLOBAL_OFFSET_TABLE_+0x398>
    5913:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    591a:	00 00 00 
    591d:	0f 1f 00             	nopl   (%rax)

0000000000005920 <<&T as core::fmt::Debug>::fmt>:
    5920:	48 8b 3f             	mov    (%rdi),%rdi
    5923:	ff 25 a7 05 04 00    	jmpq   *0x405a7(%rip)        # 45ed0 <_GLOBAL_OFFSET_TABLE_+0x548>
    5929:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005930 <<&T as core::fmt::Debug>::fmt>:
    5930:	48 8b 07             	mov    (%rdi),%rax
    5933:	48 8b 38             	mov    (%rax),%rdi
    5936:	48 8b 40 08          	mov    0x8(%rax),%rax
    593a:	48 8b 40 48          	mov    0x48(%rax),%rax
    593e:	ff e0                	jmpq   *%rax

0000000000005940 <<&T as core::fmt::Display>::fmt>:
    5940:	48 8b 3f             	mov    (%rdi),%rdi
    5943:	ff 25 7f 03 04 00    	jmpq   *0x4037f(%rip)        # 45cc8 <_GLOBAL_OFFSET_TABLE_+0x340>
    5949:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005950 <<&T as core::fmt::Display>::fmt>:
    5950:	48 89 f2             	mov    %rsi,%rdx
    5953:	48 8b 07             	mov    (%rdi),%rax
    5956:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    595a:	48 89 c7             	mov    %rax,%rdi
    595d:	ff 25 85 03 04 00    	jmpq   *0x40385(%rip)        # 45ce8 <_GLOBAL_OFFSET_TABLE_+0x360>
    5963:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    596a:	00 00 00 
    596d:	0f 1f 00             	nopl   (%rax)

0000000000005970 <<&T as core::fmt::UpperHex>::fmt>:
    5970:	48 8b 3f             	mov    (%rdi),%rdi
    5973:	ff 25 f7 01 04 00    	jmpq   *0x401f7(%rip)        # 45b70 <_GLOBAL_OFFSET_TABLE_+0x1e8>
    5979:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005980 <core::fmt::num::<impl core::fmt::Debug for i32>::fmt>:
    5980:	41 56                	push   %r14
    5982:	53                   	push   %rbx
    5983:	50                   	push   %rax
    5984:	48 89 f3             	mov    %rsi,%rbx
    5987:	49 89 fe             	mov    %rdi,%r14
    598a:	48 89 f7             	mov    %rsi,%rdi
    598d:	ff 15 fd 05 04 00    	callq  *0x405fd(%rip)        # 45f90 <_GLOBAL_OFFSET_TABLE_+0x608>
    5993:	84 c0                	test   %al,%al
    5995:	74 13                	je     59aa <core::fmt::num::<impl core::fmt::Debug for i32>::fmt+0x2a>
    5997:	4c 89 f7             	mov    %r14,%rdi
    599a:	48 89 de             	mov    %rbx,%rsi
    599d:	48 83 c4 08          	add    $0x8,%rsp
    59a1:	5b                   	pop    %rbx
    59a2:	41 5e                	pop    %r14
    59a4:	ff 25 56 05 04 00    	jmpq   *0x40556(%rip)        # 45f00 <_GLOBAL_OFFSET_TABLE_+0x578>
    59aa:	48 89 df             	mov    %rbx,%rdi
    59ad:	ff 15 45 00 04 00    	callq  *0x40045(%rip)        # 459f8 <_GLOBAL_OFFSET_TABLE_+0x70>
    59b3:	4c 89 f7             	mov    %r14,%rdi
    59b6:	48 89 de             	mov    %rbx,%rsi
    59b9:	48 83 c4 08          	add    $0x8,%rsp
    59bd:	84 c0                	test   %al,%al
    59bf:	74 09                	je     59ca <core::fmt::num::<impl core::fmt::Debug for i32>::fmt+0x4a>
    59c1:	5b                   	pop    %rbx
    59c2:	41 5e                	pop    %r14
    59c4:	ff 25 4e 05 04 00    	jmpq   *0x4054e(%rip)        # 45f18 <_GLOBAL_OFFSET_TABLE_+0x590>
    59ca:	5b                   	pop    %rbx
    59cb:	41 5e                	pop    %r14
    59cd:	ff 25 0d 04 04 00    	jmpq   *0x4040d(%rip)        # 45de0 <_GLOBAL_OFFSET_TABLE_+0x458>
    59d3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    59da:	00 00 00 
    59dd:	0f 1f 00             	nopl   (%rax)

00000000000059e0 <core::fmt::Write::write_char>:
    59e0:	50                   	push   %rax
    59e1:	89 f0                	mov    %esi,%eax
    59e3:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    59ea:	00 
    59eb:	81 fe 80 00 00 00    	cmp    $0x80,%esi
    59f1:	73 15                	jae    5a08 <core::fmt::Write::write_char+0x28>
    59f3:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    59f8:	88 44 24 04          	mov    %al,0x4(%rsp)
    59fc:	ba 01 00 00 00       	mov    $0x1,%edx
    5a01:	e8 ea 09 01 00       	callq  163f0 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str>
    5a06:	59                   	pop    %rcx
    5a07:	c3                   	retq   
    5a08:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    5a0d:	89 c1                	mov    %eax,%ecx
    5a0f:	3d 00 08 00 00       	cmp    $0x800,%eax
    5a14:	73 1e                	jae    5a34 <core::fmt::Write::write_char+0x54>
    5a16:	c1 e9 06             	shr    $0x6,%ecx
    5a19:	80 c9 c0             	or     $0xc0,%cl
    5a1c:	88 4c 24 04          	mov    %cl,0x4(%rsp)
    5a20:	24 3f                	and    $0x3f,%al
    5a22:	0c 80                	or     $0x80,%al
    5a24:	88 44 24 05          	mov    %al,0x5(%rsp)
    5a28:	ba 02 00 00 00       	mov    $0x2,%edx
    5a2d:	e8 be 09 01 00       	callq  163f0 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str>
    5a32:	59                   	pop    %rcx
    5a33:	c3                   	retq   
    5a34:	3d 00 00 01 00       	cmp    $0x10000,%eax
    5a39:	73 2d                	jae    5a68 <core::fmt::Write::write_char+0x88>
    5a3b:	c1 e9 0c             	shr    $0xc,%ecx
    5a3e:	80 c9 e0             	or     $0xe0,%cl
    5a41:	88 4c 24 04          	mov    %cl,0x4(%rsp)
    5a45:	89 c1                	mov    %eax,%ecx
    5a47:	c1 e9 06             	shr    $0x6,%ecx
    5a4a:	80 e1 3f             	and    $0x3f,%cl
    5a4d:	80 c9 80             	or     $0x80,%cl
    5a50:	88 4c 24 05          	mov    %cl,0x5(%rsp)
    5a54:	24 3f                	and    $0x3f,%al
    5a56:	0c 80                	or     $0x80,%al
    5a58:	88 44 24 06          	mov    %al,0x6(%rsp)
    5a5c:	ba 03 00 00 00       	mov    $0x3,%edx
    5a61:	e8 8a 09 01 00       	callq  163f0 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str>
    5a66:	59                   	pop    %rcx
    5a67:	c3                   	retq   
    5a68:	c1 e9 12             	shr    $0x12,%ecx
    5a6b:	80 c9 f0             	or     $0xf0,%cl
    5a6e:	88 4c 24 04          	mov    %cl,0x4(%rsp)
    5a72:	89 c1                	mov    %eax,%ecx
    5a74:	c1 e9 0c             	shr    $0xc,%ecx
    5a77:	80 e1 3f             	and    $0x3f,%cl
    5a7a:	80 c9 80             	or     $0x80,%cl
    5a7d:	88 4c 24 05          	mov    %cl,0x5(%rsp)
    5a81:	89 c1                	mov    %eax,%ecx
    5a83:	c1 e9 06             	shr    $0x6,%ecx
    5a86:	80 e1 3f             	and    $0x3f,%cl
    5a89:	80 c9 80             	or     $0x80,%cl
    5a8c:	88 4c 24 06          	mov    %cl,0x6(%rsp)
    5a90:	24 3f                	and    $0x3f,%al
    5a92:	0c 80                	or     $0x80,%al
    5a94:	88 44 24 07          	mov    %al,0x7(%rsp)
    5a98:	ba 04 00 00 00       	mov    $0x4,%edx
    5a9d:	e8 4e 09 01 00       	callq  163f0 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str>
    5aa2:	59                   	pop    %rcx
    5aa3:	c3                   	retq   
    5aa4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5aab:	00 00 00 
    5aae:	66 90                	xchg   %ax,%ax

0000000000005ab0 <core::fmt::Write::write_char>:
    5ab0:	50                   	push   %rax
    5ab1:	89 f0                	mov    %esi,%eax
    5ab3:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    5aba:	00 
    5abb:	81 fe 80 00 00 00    	cmp    $0x80,%esi
    5ac1:	73 15                	jae    5ad8 <core::fmt::Write::write_char+0x28>
    5ac3:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    5ac8:	88 44 24 04          	mov    %al,0x4(%rsp)
    5acc:	ba 01 00 00 00       	mov    $0x1,%edx
    5ad1:	e8 2a 08 01 00       	callq  16300 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str>
    5ad6:	59                   	pop    %rcx
    5ad7:	c3                   	retq   
    5ad8:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    5add:	89 c1                	mov    %eax,%ecx
    5adf:	3d 00 08 00 00       	cmp    $0x800,%eax
    5ae4:	73 1e                	jae    5b04 <core::fmt::Write::write_char+0x54>
    5ae6:	c1 e9 06             	shr    $0x6,%ecx
    5ae9:	80 c9 c0             	or     $0xc0,%cl
    5aec:	88 4c 24 04          	mov    %cl,0x4(%rsp)
    5af0:	24 3f                	and    $0x3f,%al
    5af2:	0c 80                	or     $0x80,%al
    5af4:	88 44 24 05          	mov    %al,0x5(%rsp)
    5af8:	ba 02 00 00 00       	mov    $0x2,%edx
    5afd:	e8 fe 07 01 00       	callq  16300 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str>
    5b02:	59                   	pop    %rcx
    5b03:	c3                   	retq   
    5b04:	3d 00 00 01 00       	cmp    $0x10000,%eax
    5b09:	73 2d                	jae    5b38 <core::fmt::Write::write_char+0x88>
    5b0b:	c1 e9 0c             	shr    $0xc,%ecx
    5b0e:	80 c9 e0             	or     $0xe0,%cl
    5b11:	88 4c 24 04          	mov    %cl,0x4(%rsp)
    5b15:	89 c1                	mov    %eax,%ecx
    5b17:	c1 e9 06             	shr    $0x6,%ecx
    5b1a:	80 e1 3f             	and    $0x3f,%cl
    5b1d:	80 c9 80             	or     $0x80,%cl
    5b20:	88 4c 24 05          	mov    %cl,0x5(%rsp)
    5b24:	24 3f                	and    $0x3f,%al
    5b26:	0c 80                	or     $0x80,%al
    5b28:	88 44 24 06          	mov    %al,0x6(%rsp)
    5b2c:	ba 03 00 00 00       	mov    $0x3,%edx
    5b31:	e8 ca 07 01 00       	callq  16300 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str>
    5b36:	59                   	pop    %rcx
    5b37:	c3                   	retq   
    5b38:	c1 e9 12             	shr    $0x12,%ecx
    5b3b:	80 c9 f0             	or     $0xf0,%cl
    5b3e:	88 4c 24 04          	mov    %cl,0x4(%rsp)
    5b42:	89 c1                	mov    %eax,%ecx
    5b44:	c1 e9 0c             	shr    $0xc,%ecx
    5b47:	80 e1 3f             	and    $0x3f,%cl
    5b4a:	80 c9 80             	or     $0x80,%cl
    5b4d:	88 4c 24 05          	mov    %cl,0x5(%rsp)
    5b51:	89 c1                	mov    %eax,%ecx
    5b53:	c1 e9 06             	shr    $0x6,%ecx
    5b56:	80 e1 3f             	and    $0x3f,%cl
    5b59:	80 c9 80             	or     $0x80,%cl
    5b5c:	88 4c 24 06          	mov    %cl,0x6(%rsp)
    5b60:	24 3f                	and    $0x3f,%al
    5b62:	0c 80                	or     $0x80,%al
    5b64:	88 44 24 07          	mov    %al,0x7(%rsp)
    5b68:	ba 04 00 00 00       	mov    $0x4,%edx
    5b6d:	e8 8e 07 01 00       	callq  16300 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str>
    5b72:	59                   	pop    %rcx
    5b73:	c3                   	retq   
    5b74:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5b7b:	00 00 00 
    5b7e:	66 90                	xchg   %ax,%ax

0000000000005b80 <core::fmt::Write::write_fmt>:
    5b80:	48 83 ec 48          	sub    $0x48,%rsp
    5b84:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    5b89:	0f 10 06             	movups (%rsi),%xmm0
    5b8c:	0f 10 4e 10          	movups 0x10(%rsi),%xmm1
    5b90:	0f 10 56 20          	movups 0x20(%rsi),%xmm2
    5b94:	0f 29 54 24 30       	movaps %xmm2,0x30(%rsp)
    5b99:	0f 29 4c 24 20       	movaps %xmm1,0x20(%rsp)
    5b9e:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    5ba3:	48 8d 35 e6 d9 03 00 	lea    0x3d9e6(%rip),%rsi        # 43590 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x58>
    5baa:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    5baf:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    5bb4:	ff 15 3e 02 04 00    	callq  *0x4023e(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x470>
    5bba:	48 83 c4 48          	add    $0x48,%rsp
    5bbe:	c3                   	retq   
    5bbf:	90                   	nop

0000000000005bc0 <core::fmt::Write::write_fmt>:
    5bc0:	48 83 ec 48          	sub    $0x48,%rsp
    5bc4:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    5bc9:	0f 10 06             	movups (%rsi),%xmm0
    5bcc:	0f 10 4e 10          	movups 0x10(%rsi),%xmm1
    5bd0:	0f 10 56 20          	movups 0x20(%rsi),%xmm2
    5bd4:	0f 29 54 24 30       	movaps %xmm2,0x30(%rsp)
    5bd9:	0f 29 4c 24 20       	movaps %xmm1,0x20(%rsp)
    5bde:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    5be3:	48 8d 35 06 da 03 00 	lea    0x3da06(%rip),%rsi        # 435f0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xb8>
    5bea:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    5bef:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    5bf4:	ff 15 fe 01 04 00    	callq  *0x401fe(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x470>
    5bfa:	48 83 c4 48          	add    $0x48,%rsp
    5bfe:	c3                   	retq   
    5bff:	90                   	nop

0000000000005c00 <core::ops::function::FnOnce::call_once{{vtable-shim}}>:
    5c00:	50                   	push   %rax
    5c01:	48 8b 07             	mov    (%rdi),%rax
    5c04:	48 89 04 24          	mov    %rax,(%rsp)
    5c08:	48 89 e7             	mov    %rsp,%rdi
    5c0b:	e8 00 18 01 00       	callq  17410 <std::sync::once::Once::call_once_force::{{closure}}>
    5c10:	58                   	pop    %rax
    5c11:	c3                   	retq   
    5c12:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5c19:	00 00 00 
    5c1c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005c20 <core::ops::function::FnOnce::call_once{{vtable-shim}}>:
    5c20:	e9 6b 26 01 00       	jmpq   18290 <std::sys_common::backtrace::_print_fmt::{{closure}}>
    5c25:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5c2c:	00 00 00 
    5c2f:	90                   	nop

0000000000005c30 <core::ops::function::FnOnce::call_once{{vtable-shim}}>:
    5c30:	e9 2b 24 01 00       	jmpq   18060 <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}>
    5c35:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5c3c:	00 00 00 
    5c3f:	90                   	nop

0000000000005c40 <core::ops::function::FnOnce::call_once{{vtable-shim}}>:
    5c40:	50                   	push   %rax
    5c41:	48 8b 07             	mov    (%rdi),%rax
    5c44:	48 89 04 24          	mov    %rax,(%rsp)
    5c48:	48 89 e7             	mov    %rsp,%rdi
    5c4b:	e8 70 15 01 00       	callq  171c0 <std::sync::once::Once::call_once::{{closure}}>
    5c50:	58                   	pop    %rax
    5c51:	c3                   	retq   
    5c52:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5c59:	00 00 00 
    5c5c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005c60 <core::ops::function::FnOnce::call_once{{vtable-shim}}>:
    5c60:	55                   	push   %rbp
    5c61:	53                   	push   %rbx
    5c62:	48 83 ec 18          	sub    $0x18,%rsp
    5c66:	48 89 f0             	mov    %rsi,%rax
    5c69:	48 89 fb             	mov    %rdi,%rbx
    5c6c:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
    5c70:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    5c75:	0f 10 02             	movups (%rdx),%xmm0
    5c78:	0f 29 04 24          	movaps %xmm0,(%rsp)
    5c7c:	48 8b 0f             	mov    (%rdi),%rcx
    5c7f:	48 85 c9             	test   %rcx,%rcx
    5c82:	48 0f 45 cf          	cmovne %rdi,%rcx
    5c86:	8b 57 18             	mov    0x18(%rdi),%edx
    5c89:	48 89 e6             	mov    %rsp,%rsi
    5c8c:	48 89 c7             	mov    %rax,%rdi
    5c8f:	e8 8c 27 01 00       	callq  18420 <std::sys_common::backtrace::output_filename>
    5c94:	89 c5                	mov    %eax,%ebp
    5c96:	48 8b 3b             	mov    (%rbx),%rdi
    5c99:	48 85 ff             	test   %rdi,%rdi
    5c9c:	74 14                	je     5cb2 <core::ops::function::FnOnce::call_once{{vtable-shim}}+0x52>
    5c9e:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    5ca2:	48 85 f6             	test   %rsi,%rsi
    5ca5:	74 0b                	je     5cb2 <core::ops::function::FnOnce::call_once{{vtable-shim}}+0x52>
    5ca7:	ba 01 00 00 00       	mov    $0x1,%edx
    5cac:	ff 15 46 ff 03 00    	callq  *0x3ff46(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    5cb2:	89 e8                	mov    %ebp,%eax
    5cb4:	48 83 c4 18          	add    $0x18,%rsp
    5cb8:	5b                   	pop    %rbx
    5cb9:	5d                   	pop    %rbp
    5cba:	c3                   	retq   
    5cbb:	48 89 c5             	mov    %rax,%rbp
    5cbe:	48 89 df             	mov    %rbx,%rdi
    5cc1:	e8 1a 0f 00 00       	callq  6be0 <core::ptr::drop_in_place>
    5cc6:	48 89 ef             	mov    %rbp,%rdi
    5cc9:	e8 82 f3 ff ff       	callq  5050 <_Unwind_Resume@plt>
    5cce:	0f 0b                	ud2    

0000000000005cd0 <core::ops::function::FnOnce::call_once{{vtable-shim}}>:
    5cd0:	53                   	push   %rbx
    5cd1:	48 83 ec 30          	sub    $0x30,%rsp
    5cd5:	48 8b 05 8c 03 04 00 	mov    0x4038c(%rip),%rax        # 46068 <std::io::stdio::stdout::INSTANCE>
    5cdc:	48 83 f8 03          	cmp    $0x3,%rax
    5ce0:	75 14                	jne    5cf6 <core::ops::function::FnOnce::call_once{{vtable-shim}}+0x26>
    5ce2:	48 8d 1d 87 03 04 00 	lea    0x40387(%rip),%rbx        # 46070 <std::io::stdio::stdout::INSTANCE+0x8>
    5ce9:	48 89 df             	mov    %rbx,%rdi
    5cec:	ff 15 d6 02 04 00    	callq  *0x402d6(%rip)        # 45fc8 <pthread_mutex_trylock@GLIBC_2.2.5>
    5cf2:	85 c0                	test   %eax,%eax
    5cf4:	74 06                	je     5cfc <core::ops::function::FnOnce::call_once{{vtable-shim}}+0x2c>
    5cf6:	48 83 c4 30          	add    $0x30,%rsp
    5cfa:	5b                   	pop    %rbx
    5cfb:	c3                   	retq   
    5cfc:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
    5d01:	48 c7 44 24 10 01 00 	movq   $0x1,0x10(%rsp)
    5d08:	00 00 
    5d0a:	0f 57 c0             	xorps  %xmm0,%xmm0
    5d0d:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
    5d12:	66 c7 44 24 28 01 00 	movw   $0x1,0x28(%rsp)
    5d19:	48 83 3d 77 03 04 00 	cmpq   $0x0,0x40377(%rip)        # 46098 <std::io::stdio::stdout::INSTANCE+0x30>
    5d20:	00 
    5d21:	75 4a                	jne    5d6d <core::ops::function::FnOnce::call_once{{vtable-shim}}+0x9d>
    5d23:	48 c7 05 6a 03 04 00 	movq   $0xffffffffffffffff,0x4036a(%rip)        # 46098 <std::io::stdio::stdout::INSTANCE+0x30>
    5d2a:	ff ff ff ff 
    5d2e:	48 8d 3d 6b 03 04 00 	lea    0x4036b(%rip),%rdi        # 460a0 <std::io::stdio::stdout::INSTANCE+0x38>
    5d35:	e8 86 10 00 00       	callq  6dc0 <core::ptr::drop_in_place>
    5d3a:	0f 10 44 24 10       	movups 0x10(%rsp),%xmm0
    5d3f:	0f 10 4c 24 20       	movups 0x20(%rsp),%xmm1
    5d44:	0f 11 0d 65 03 04 00 	movups %xmm1,0x40365(%rip)        # 460b0 <std::io::stdio::stdout::INSTANCE+0x48>
    5d4b:	0f 11 05 4e 03 04 00 	movups %xmm0,0x4034e(%rip)        # 460a0 <std::io::stdio::stdout::INSTANCE+0x38>
    5d52:	48 83 05 3e 03 04 00 	addq   $0x1,0x4033e(%rip)        # 46098 <std::io::stdio::stdout::INSTANCE+0x30>
    5d59:	01 
    5d5a:	48 8d 3d 0f 03 04 00 	lea    0x4030f(%rip),%rdi        # 46070 <std::io::stdio::stdout::INSTANCE+0x8>
    5d61:	ff 15 01 00 04 00    	callq  *0x40001(%rip)        # 45d68 <pthread_mutex_unlock@GLIBC_2.2.5>
    5d67:	48 83 c4 30          	add    $0x30,%rsp
    5d6b:	5b                   	pop    %rbx
    5d6c:	c3                   	retq   
    5d6d:	48 8d 3d 5c 05 03 00 	lea    0x3055c(%rip),%rdi        # 362d0 <_fini+0x9ac>
    5d74:	48 8d 0d 65 da 03 00 	lea    0x3da65(%rip),%rcx        # 437e0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2a8>
    5d7b:	4c 8d 05 3e df 03 00 	lea    0x3df3e(%rip),%r8        # 43cc0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x788>
    5d82:	48 89 e2             	mov    %rsp,%rdx
    5d85:	be 10 00 00 00       	mov    $0x10,%esi
    5d8a:	ff 15 50 fe 03 00    	callq  *0x3fe50(%rip)        # 45be0 <_GLOBAL_OFFSET_TABLE_+0x258>
    5d90:	0f 0b                	ud2    
    5d92:	48 89 c3             	mov    %rax,%rbx
    5d95:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    5d9a:	e8 21 10 00 00       	callq  6dc0 <core::ptr::drop_in_place>
    5d9f:	eb 27                	jmp    5dc8 <core::ops::function::FnOnce::call_once{{vtable-shim}}+0xf8>
    5da1:	48 89 c3             	mov    %rax,%rbx
    5da4:	0f 10 44 24 10       	movups 0x10(%rsp),%xmm0
    5da9:	0f 10 4c 24 20       	movups 0x20(%rsp),%xmm1
    5dae:	0f 11 0d fb 02 04 00 	movups %xmm1,0x402fb(%rip)        # 460b0 <std::io::stdio::stdout::INSTANCE+0x48>
    5db5:	0f 11 05 e4 02 04 00 	movups %xmm0,0x402e4(%rip)        # 460a0 <std::io::stdio::stdout::INSTANCE+0x38>
    5dbc:	48 8d 3d d5 02 04 00 	lea    0x402d5(%rip),%rdi        # 46098 <std::io::stdio::stdout::INSTANCE+0x30>
    5dc3:	e8 88 00 00 00       	callq  5e50 <core::ptr::drop_in_place>
    5dc8:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    5dcd:	e8 8e 0e 00 00       	callq  6c60 <core::ptr::drop_in_place>
    5dd2:	48 89 df             	mov    %rbx,%rdi
    5dd5:	e8 76 f2 ff ff       	callq  5050 <_Unwind_Resume@plt>
    5dda:	0f 0b                	ud2    
    5ddc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005de0 <core::ptr::drop_in_place>:
    5de0:	41 56                	push   %r14
    5de2:	53                   	push   %rbx
    5de3:	50                   	push   %rax
    5de4:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    5de8:	48 85 f6             	test   %rsi,%rsi
    5deb:	74 2c                	je     5e19 <core::ptr::drop_in_place+0x39>
    5ded:	4c 8b 37             	mov    (%rdi),%r14
    5df0:	49 8b 46 10          	mov    0x10(%r14),%rax
    5df4:	48 89 c3             	mov    %rax,%rbx
    5df7:	48 29 f3             	sub    %rsi,%rbx
    5dfa:	72 25                	jb     5e21 <core::ptr::drop_in_place+0x41>
    5dfc:	49 c7 46 10 00 00 00 	movq   $0x0,0x10(%r14)
    5e03:	00 
    5e04:	74 13                	je     5e19 <core::ptr::drop_in_place+0x39>
    5e06:	49 8b 3e             	mov    (%r14),%rdi
    5e09:	48 01 fe             	add    %rdi,%rsi
    5e0c:	48 89 da             	mov    %rbx,%rdx
    5e0f:	ff 15 53 00 04 00    	callq  *0x40053(%rip)        # 45e68 <memmove@GLIBC_2.2.5>
    5e15:	49 89 5e 10          	mov    %rbx,0x10(%r14)
    5e19:	48 83 c4 08          	add    $0x8,%rsp
    5e1d:	5b                   	pop    %rbx
    5e1e:	41 5e                	pop    %r14
    5e20:	c3                   	retq   
    5e21:	48 8d 15 78 da 03 00 	lea    0x3da78(%rip),%rdx        # 438a0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x368>
    5e28:	48 89 f7             	mov    %rsi,%rdi
    5e2b:	48 89 c6             	mov    %rax,%rsi
    5e2e:	ff 15 f4 fb 03 00    	callq  *0x3fbf4(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
    5e34:	0f 0b                	ud2    
    5e36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5e3d:	00 00 00 

0000000000005e40 <core::ptr::drop_in_place>:
    5e40:	c3                   	retq   
    5e41:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5e48:	00 00 00 
    5e4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000005e50 <core::ptr::drop_in_place>:
    5e50:	48 83 07 01          	addq   $0x1,(%rdi)
    5e54:	c3                   	retq   
    5e55:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5e5c:	00 00 00 
    5e5f:	90                   	nop

0000000000005e60 <core::ptr::drop_in_place>:
    5e60:	41 57                	push   %r15
    5e62:	41 56                	push   %r14
    5e64:	41 55                	push   %r13
    5e66:	41 54                	push   %r12
    5e68:	53                   	push   %rbx
    5e69:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
    5e70:	49 89 fe             	mov    %rdi,%r14
    5e73:	4c 8b 27             	mov    (%rdi),%r12
    5e76:	48 8b 47 10          	mov    0x10(%rdi),%rax
    5e7a:	48 85 c0             	test   %rax,%rax
    5e7d:	74 49                	je     5ec8 <core::ptr::drop_in_place+0x68>
    5e7f:	4c 6b f8 70          	imul   $0x70,%rax,%r15
    5e83:	31 db                	xor    %ebx,%ebx
    5e85:	4c 8d 2d b4 f5 ff ff 	lea    -0xa4c(%rip),%r13        # 5440 <__rust_dealloc>
    5e8c:	eb 0b                	jmp    5e99 <core::ptr::drop_in_place+0x39>
    5e8e:	66 90                	xchg   %ax,%ax
    5e90:	48 83 c3 70          	add    $0x70,%rbx
    5e94:	49 39 df             	cmp    %rbx,%r15
    5e97:	74 2c                	je     5ec5 <core::ptr::drop_in_place+0x65>
    5e99:	49 83 7c 1c 08 00    	cmpq   $0x0,0x8(%r12,%rbx,1)
    5e9f:	74 ef                	je     5e90 <core::ptr::drop_in_place+0x30>
    5ea1:	49 8b 74 1c 18       	mov    0x18(%r12,%rbx,1),%rsi
    5ea6:	48 85 f6             	test   %rsi,%rsi
    5ea9:	74 e5                	je     5e90 <core::ptr::drop_in_place+0x30>
    5eab:	49 8b 7c 1c 10       	mov    0x10(%r12,%rbx,1),%rdi
    5eb0:	48 85 ff             	test   %rdi,%rdi
    5eb3:	74 db                	je     5e90 <core::ptr::drop_in_place+0x30>
    5eb5:	48 c1 e6 04          	shl    $0x4,%rsi
    5eb9:	74 d5                	je     5e90 <core::ptr::drop_in_place+0x30>
    5ebb:	ba 08 00 00 00       	mov    $0x8,%edx
    5ec0:	41 ff d5             	callq  *%r13
    5ec3:	eb cb                	jmp    5e90 <core::ptr::drop_in_place+0x30>
    5ec5:	4d 8b 26             	mov    (%r14),%r12
    5ec8:	49 8b 46 08          	mov    0x8(%r14),%rax
    5ecc:	48 85 c0             	test   %rax,%rax
    5ecf:	74 1c                	je     5eed <core::ptr::drop_in_place+0x8d>
    5ed1:	4d 85 e4             	test   %r12,%r12
    5ed4:	74 17                	je     5eed <core::ptr::drop_in_place+0x8d>
    5ed6:	48 6b f0 70          	imul   $0x70,%rax,%rsi
    5eda:	48 85 f6             	test   %rsi,%rsi
    5edd:	74 0e                	je     5eed <core::ptr::drop_in_place+0x8d>
    5edf:	ba 08 00 00 00       	mov    $0x8,%edx
    5ee4:	4c 89 e7             	mov    %r12,%rdi
    5ee7:	ff 15 0b fd 03 00    	callq  *0x3fd0b(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    5eed:	49 8b 4e 18          	mov    0x18(%r14),%rcx
    5ef1:	48 85 c9             	test   %rcx,%rcx
    5ef4:	0f 84 cc 00 00 00    	je     5fc6 <core::ptr::drop_in_place+0x166>
    5efa:	49 8b 56 20          	mov    0x20(%r14),%rdx
    5efe:	4d 8b 4e 28          	mov    0x28(%r14),%r9
    5f02:	0f b7 b1 32 05 00 00 	movzwl 0x532(%rcx),%esi
    5f09:	48 85 d2             	test   %rdx,%rdx
    5f0c:	0f 84 cb 00 00 00    	je     5fdd <core::ptr::drop_in_place+0x17d>
    5f12:	4c 8d 42 ff          	lea    -0x1(%rdx),%r8
    5f16:	49 89 d2             	mov    %rdx,%r10
    5f19:	49 83 e2 03          	and    $0x3,%r10
    5f1d:	0f 84 e0 01 00 00    	je     6103 <core::ptr::drop_in_place+0x2a3>
    5f23:	31 c0                	xor    %eax,%eax
    5f25:	48 89 cf             	mov    %rcx,%rdi
    5f28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    5f2f:	00 
    5f30:	48 8b 89 38 05 00 00 	mov    0x538(%rcx),%rcx
    5f37:	48 8b bc f7 38 05 00 	mov    0x538(%rdi,%rsi,8),%rdi
    5f3e:	00 
    5f3f:	0f b7 9f 32 05 00 00 	movzwl 0x532(%rdi),%ebx
    5f46:	0f b7 f3             	movzwl %bx,%esi
    5f49:	48 83 c0 01          	add    $0x1,%rax
    5f4d:	49 39 c2             	cmp    %rax,%r10
    5f50:	75 de                	jne    5f30 <core::ptr::drop_in_place+0xd0>
    5f52:	48 29 c2             	sub    %rax,%rdx
    5f55:	49 83 f8 03          	cmp    $0x3,%r8
    5f59:	0f 82 62 00 00 00    	jb     5fc1 <core::ptr::drop_in_place+0x161>
    5f5f:	90                   	nop
    5f60:	48 8b 81 38 05 00 00 	mov    0x538(%rcx),%rax
    5f67:	48 8b 8c f7 38 05 00 	mov    0x538(%rdi,%rsi,8),%rcx
    5f6e:	00 
    5f6f:	0f b7 b1 32 05 00 00 	movzwl 0x532(%rcx),%esi
    5f76:	48 8b 80 38 05 00 00 	mov    0x538(%rax),%rax
    5f7d:	48 8b 8c f1 38 05 00 	mov    0x538(%rcx,%rsi,8),%rcx
    5f84:	00 
    5f85:	0f b7 b1 32 05 00 00 	movzwl 0x532(%rcx),%esi
    5f8c:	48 8b 80 38 05 00 00 	mov    0x538(%rax),%rax
    5f93:	48 8b b4 f1 38 05 00 	mov    0x538(%rcx,%rsi,8),%rsi
    5f9a:	00 
    5f9b:	0f b7 be 32 05 00 00 	movzwl 0x532(%rsi),%edi
    5fa2:	48 8b 88 38 05 00 00 	mov    0x538(%rax),%rcx
    5fa9:	48 8b bc fe 38 05 00 	mov    0x538(%rsi,%rdi,8),%rdi
    5fb0:	00 
    5fb1:	0f b7 9f 32 05 00 00 	movzwl 0x532(%rdi),%ebx
    5fb8:	0f b7 f3             	movzwl %bx,%esi
    5fbb:	48 83 c2 fc          	add    $0xfffffffffffffffc,%rdx
    5fbf:	75 9f                	jne    5f60 <core::ptr::drop_in_place+0x100>
    5fc1:	0f b7 f3             	movzwl %bx,%esi
    5fc4:	eb 1a                	jmp    5fe0 <core::ptr::drop_in_place+0x180>
    5fc6:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    5fcd:	00 00 
    5fcf:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    5fd6:	00 00 
    5fd8:	45 31 c9             	xor    %r9d,%r9d
    5fdb:	eb 22                	jmp    5fff <core::ptr::drop_in_place+0x19f>
    5fdd:	48 89 cf             	mov    %rcx,%rdi
    5fe0:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    5fe7:	00 
    5fe8:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    5fed:	0f 57 c0             	xorps  %xmm0,%xmm0
    5ff0:	0f 11 44 24 10       	movups %xmm0,0x10(%rsp)
    5ff5:	48 89 7c 24 20       	mov    %rdi,0x20(%rsp)
    5ffa:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
    5fff:	4c 89 4c 24 30       	mov    %r9,0x30(%rsp)
    6004:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
    6009:	48 89 e6             	mov    %rsp,%rsi
    600c:	e8 6f f4 ff ff       	callq  5480 <<alloc::collections::btree::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::next>
    6011:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    6016:	48 83 f8 02          	cmp    $0x2,%rax
    601a:	0f 85 83 00 00 00    	jne    60a3 <core::ptr::drop_in_place+0x243>
    6020:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    6025:	48 85 ff             	test   %rdi,%rdi
    6028:	74 68                	je     6092 <core::ptr::drop_in_place+0x232>
    602a:	48 8b 1c 24          	mov    (%rsp),%rbx
    602e:	4c 8b 37             	mov    (%rdi),%r14
    6031:	48 85 db             	test   %rbx,%rbx
    6034:	b8 38 05 00 00       	mov    $0x538,%eax
    6039:	be 98 05 00 00       	mov    $0x598,%esi
    603e:	48 0f 44 f0          	cmove  %rax,%rsi
    6042:	ba 08 00 00 00       	mov    $0x8,%edx
    6047:	ff 15 ab fb 03 00    	callq  *0x3fbab(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    604d:	4d 85 f6             	test   %r14,%r14
    6050:	74 40                	je     6092 <core::ptr::drop_in_place+0x232>
    6052:	48 83 c3 01          	add    $0x1,%rbx
    6056:	4c 8d 3d e3 f3 ff ff 	lea    -0xc1d(%rip),%r15        # 5440 <__rust_dealloc>
    605d:	eb 17                	jmp    6076 <core::ptr::drop_in_place+0x216>
    605f:	90                   	nop
    6060:	48 01 c3             	add    %rax,%rbx
    6063:	ba 08 00 00 00       	mov    $0x8,%edx
    6068:	4c 89 f7             	mov    %r14,%rdi
    606b:	41 ff d7             	callq  *%r15
    606e:	4d 89 e6             	mov    %r12,%r14
    6071:	4d 85 e4             	test   %r12,%r12
    6074:	74 1c                	je     6092 <core::ptr::drop_in_place+0x232>
    6076:	4d 8b 26             	mov    (%r14),%r12
    6079:	31 c0                	xor    %eax,%eax
    607b:	4d 85 e4             	test   %r12,%r12
    607e:	0f 95 c0             	setne  %al
    6081:	be 38 05 00 00       	mov    $0x538,%esi
    6086:	48 85 db             	test   %rbx,%rbx
    6089:	74 d5                	je     6060 <core::ptr::drop_in_place+0x200>
    608b:	be 98 05 00 00       	mov    $0x598,%esi
    6090:	eb ce                	jmp    6060 <core::ptr::drop_in_place+0x200>
    6092:	48 81 c4 b0 00 00 00 	add    $0xb0,%rsp
    6099:	5b                   	pop    %rbx
    609a:	41 5c                	pop    %r12
    609c:	41 5d                	pop    %r13
    609e:	41 5e                	pop    %r14
    60a0:	41 5f                	pop    %r15
    60a2:	c3                   	retq   
    60a3:	4c 8d 74 24 38       	lea    0x38(%rsp),%r14
    60a8:	48 89 e3             	mov    %rsp,%rbx
    60ab:	4c 8d 3d 8e f3 ff ff 	lea    -0xc72(%rip),%r15        # 5440 <__rust_dealloc>
    60b2:	e9 23 00 00 00       	jmpq   60da <core::ptr::drop_in_place+0x27a>
    60b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    60be:	00 00 
    60c0:	4c 89 f7             	mov    %r14,%rdi
    60c3:	48 89 de             	mov    %rbx,%rsi
    60c6:	e8 b5 f3 ff ff       	callq  5480 <<alloc::collections::btree::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::next>
    60cb:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    60d0:	48 83 f8 02          	cmp    $0x2,%rax
    60d4:	0f 84 46 ff ff ff    	je     6020 <core::ptr::drop_in_place+0x1c0>
    60da:	48 85 c0             	test   %rax,%rax
    60dd:	74 e1                	je     60c0 <core::ptr::drop_in_place+0x260>
    60df:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
    60e4:	48 85 f6             	test   %rsi,%rsi
    60e7:	74 d7                	je     60c0 <core::ptr::drop_in_place+0x260>
    60e9:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
    60ee:	48 85 ff             	test   %rdi,%rdi
    60f1:	74 cd                	je     60c0 <core::ptr::drop_in_place+0x260>
    60f3:	48 c1 e6 04          	shl    $0x4,%rsi
    60f7:	74 c7                	je     60c0 <core::ptr::drop_in_place+0x260>
    60f9:	ba 08 00 00 00       	mov    $0x8,%edx
    60fe:	41 ff d7             	callq  *%r15
    6101:	eb bd                	jmp    60c0 <core::ptr::drop_in_place+0x260>
    6103:	48 89 cf             	mov    %rcx,%rdi
    6106:	49 83 f8 03          	cmp    $0x3,%r8
    610a:	0f 83 50 fe ff ff    	jae    5f60 <core::ptr::drop_in_place+0x100>
    6110:	e9 ac fe ff ff       	jmpq   5fc1 <core::ptr::drop_in_place+0x161>
    6115:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    611c:	00 00 00 
    611f:	90                   	nop

0000000000006120 <core::ptr::drop_in_place>:
    6120:	48 8b 07             	mov    (%rdi),%rax
    6123:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
    6127:	48 8b 50 10          	mov    0x10(%rax),%rdx
    612b:	48 89 51 10          	mov    %rdx,0x10(%rcx)
    612f:	0f 10 00             	movups (%rax),%xmm0
    6132:	0f 11 01             	movups %xmm0,(%rcx)
    6135:	c3                   	retq   
    6136:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    613d:	00 00 00 

0000000000006140 <core::ptr::drop_in_place>:
    6140:	41 57                	push   %r15
    6142:	41 56                	push   %r14
    6144:	53                   	push   %rbx
    6145:	48 89 fb             	mov    %rdi,%rbx
    6148:	48 83 3f 00          	cmpq   $0x0,(%rdi)
    614c:	74 46                	je     6194 <core::ptr::drop_in_place+0x54>
    614e:	80 7b 08 02          	cmpb   $0x2,0x8(%rbx)
    6152:	72 62                	jb     61b6 <core::ptr::drop_in_place+0x76>
    6154:	4c 8b 7b 10          	mov    0x10(%rbx),%r15
    6158:	49 8b 3f             	mov    (%r15),%rdi
    615b:	49 8b 47 08          	mov    0x8(%r15),%rax
    615f:	ff 10                	callq  *(%rax)
    6161:	49 8b 47 08          	mov    0x8(%r15),%rax
    6165:	48 8b 70 08          	mov    0x8(%rax),%rsi
    6169:	48 85 f6             	test   %rsi,%rsi
    616c:	74 0d                	je     617b <core::ptr::drop_in_place+0x3b>
    616e:	49 8b 3f             	mov    (%r15),%rdi
    6171:	48 8b 50 10          	mov    0x10(%rax),%rdx
    6175:	ff 15 7d fa 03 00    	callq  *0x3fa7d(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    617b:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    617f:	be 18 00 00 00       	mov    $0x18,%esi
    6184:	ba 08 00 00 00       	mov    $0x8,%edx
    6189:	5b                   	pop    %rbx
    618a:	41 5e                	pop    %r14
    618c:	41 5f                	pop    %r15
    618e:	ff 25 64 fa 03 00    	jmpq   *0x3fa64(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    6194:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    6198:	48 85 ff             	test   %rdi,%rdi
    619b:	74 19                	je     61b6 <core::ptr::drop_in_place+0x76>
    619d:	48 8b 73 10          	mov    0x10(%rbx),%rsi
    61a1:	48 85 f6             	test   %rsi,%rsi
    61a4:	74 10                	je     61b6 <core::ptr::drop_in_place+0x76>
    61a6:	ba 01 00 00 00       	mov    $0x1,%edx
    61ab:	5b                   	pop    %rbx
    61ac:	41 5e                	pop    %r14
    61ae:	41 5f                	pop    %r15
    61b0:	ff 25 42 fa 03 00    	jmpq   *0x3fa42(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    61b6:	5b                   	pop    %rbx
    61b7:	41 5e                	pop    %r14
    61b9:	41 5f                	pop    %r15
    61bb:	c3                   	retq   
    61bc:	49 89 c6             	mov    %rax,%r14
    61bf:	49 8b 3f             	mov    (%r15),%rdi
    61c2:	49 8b 77 08          	mov    0x8(%r15),%rsi
    61c6:	e8 05 38 00 00       	callq  99d0 <alloc::alloc::box_free>
    61cb:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    61cf:	e8 1c 38 00 00       	callq  99f0 <alloc::alloc::box_free>
    61d4:	4c 89 f7             	mov    %r14,%rdi
    61d7:	e8 74 ee ff ff       	callq  5050 <_Unwind_Resume@plt>
    61dc:	0f 0b                	ud2    
    61de:	66 90                	xchg   %ax,%ax

00000000000061e0 <core::ptr::drop_in_place>:
    61e0:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    61e4:	48 85 f6             	test   %rsi,%rsi
    61e7:	74 19                	je     6202 <core::ptr::drop_in_place+0x22>
    61e9:	48 8b 3f             	mov    (%rdi),%rdi
    61ec:	48 85 ff             	test   %rdi,%rdi
    61ef:	74 11                	je     6202 <core::ptr::drop_in_place+0x22>
    61f1:	48 c1 e6 05          	shl    $0x5,%rsi
    61f5:	74 0b                	je     6202 <core::ptr::drop_in_place+0x22>
    61f7:	ba 08 00 00 00       	mov    $0x8,%edx
    61fc:	ff 25 f6 f9 03 00    	jmpq   *0x3f9f6(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    6202:	c3                   	retq   
    6203:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    620a:	00 00 00 
    620d:	0f 1f 00             	nopl   (%rax)

0000000000006210 <core::ptr::drop_in_place>:
    6210:	83 3f 02             	cmpl   $0x2,(%rdi)
    6213:	74 14                	je     6229 <core::ptr::drop_in_place+0x19>
    6215:	48 8b 47 18          	mov    0x18(%rdi),%rax
    6219:	f0 48 83 28 01       	lock subq $0x1,(%rax)
    621e:	75 09                	jne    6229 <core::ptr::drop_in_place+0x19>
    6220:	48 83 c7 18          	add    $0x18,%rdi
    6224:	e9 57 37 00 00       	jmpq   9980 <alloc::sync::Arc<T>::drop_slow>
    6229:	c3                   	retq   
    622a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000006230 <core::ptr::drop_in_place>:
    6230:	41 56                	push   %r14
    6232:	53                   	push   %rbx
    6233:	50                   	push   %rax
    6234:	48 89 fb             	mov    %rdi,%rbx
    6237:	48 8b 3f             	mov    (%rdi),%rdi
    623a:	48 8b 43 08          	mov    0x8(%rbx),%rax
    623e:	ff 10                	callq  *(%rax)
    6240:	48 8b 43 08          	mov    0x8(%rbx),%rax
    6244:	48 8b 70 08          	mov    0x8(%rax),%rsi
    6248:	48 85 f6             	test   %rsi,%rsi
    624b:	74 14                	je     6261 <core::ptr::drop_in_place+0x31>
    624d:	48 8b 3b             	mov    (%rbx),%rdi
    6250:	48 8b 50 10          	mov    0x10(%rax),%rdx
    6254:	48 83 c4 08          	add    $0x8,%rsp
    6258:	5b                   	pop    %rbx
    6259:	41 5e                	pop    %r14
    625b:	ff 25 97 f9 03 00    	jmpq   *0x3f997(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    6261:	48 83 c4 08          	add    $0x8,%rsp
    6265:	5b                   	pop    %rbx
    6266:	41 5e                	pop    %r14
    6268:	c3                   	retq   
    6269:	49 89 c6             	mov    %rax,%r14
    626c:	48 8b 3b             	mov    (%rbx),%rdi
    626f:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    6273:	e8 58 37 00 00       	callq  99d0 <alloc::alloc::box_free>
    6278:	4c 89 f7             	mov    %r14,%rdi
    627b:	e8 d0 ed ff ff       	callq  5050 <_Unwind_Resume@plt>
    6280:	0f 0b                	ud2    
    6282:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6289:	00 00 00 
    628c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006290 <core::ptr::drop_in_place>:
    6290:	41 57                	push   %r15
    6292:	41 56                	push   %r14
    6294:	53                   	push   %rbx
    6295:	48 89 fb             	mov    %rdi,%rbx
    6298:	8a 47 08             	mov    0x8(%rdi),%al
    629b:	3c 03                	cmp    $0x3,%al
    629d:	77 0a                	ja     62a9 <core::ptr::drop_in_place+0x19>
    629f:	3c 02                	cmp    $0x2,%al
    62a1:	74 06                	je     62a9 <core::ptr::drop_in_place+0x19>
    62a3:	5b                   	pop    %rbx
    62a4:	41 5e                	pop    %r14
    62a6:	41 5f                	pop    %r15
    62a8:	c3                   	retq   
    62a9:	4c 8b 7b 10          	mov    0x10(%rbx),%r15
    62ad:	49 8b 3f             	mov    (%r15),%rdi
    62b0:	49 8b 47 08          	mov    0x8(%r15),%rax
    62b4:	ff 10                	callq  *(%rax)
    62b6:	49 8b 47 08          	mov    0x8(%r15),%rax
    62ba:	48 8b 70 08          	mov    0x8(%rax),%rsi
    62be:	48 85 f6             	test   %rsi,%rsi
    62c1:	74 0d                	je     62d0 <core::ptr::drop_in_place+0x40>
    62c3:	49 8b 3f             	mov    (%r15),%rdi
    62c6:	48 8b 50 10          	mov    0x10(%rax),%rdx
    62ca:	ff 15 28 f9 03 00    	callq  *0x3f928(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    62d0:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    62d4:	be 18 00 00 00       	mov    $0x18,%esi
    62d9:	ba 08 00 00 00       	mov    $0x8,%edx
    62de:	5b                   	pop    %rbx
    62df:	41 5e                	pop    %r14
    62e1:	41 5f                	pop    %r15
    62e3:	ff 25 0f f9 03 00    	jmpq   *0x3f90f(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    62e9:	49 89 c6             	mov    %rax,%r14
    62ec:	49 8b 3f             	mov    (%r15),%rdi
    62ef:	49 8b 77 08          	mov    0x8(%r15),%rsi
    62f3:	e8 d8 36 00 00       	callq  99d0 <alloc::alloc::box_free>
    62f8:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    62fc:	e8 ef 36 00 00       	callq  99f0 <alloc::alloc::box_free>
    6301:	4c 89 f7             	mov    %r14,%rdi
    6304:	e8 47 ed ff ff       	callq  5050 <_Unwind_Resume@plt>
    6309:	0f 0b                	ud2    
    630b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006310 <core::ptr::drop_in_place>:
    6310:	41 57                	push   %r15
    6312:	41 56                	push   %r14
    6314:	41 55                	push   %r13
    6316:	41 54                	push   %r12
    6318:	53                   	push   %rbx
    6319:	49 89 fe             	mov    %rdi,%r14
    631c:	4c 8b 27             	mov    (%rdi),%r12
    631f:	48 8b 47 10          	mov    0x10(%rdi),%rax
    6323:	48 85 c0             	test   %rax,%rax
    6326:	74 65                	je     638d <core::ptr::drop_in_place+0x7d>
    6328:	48 c1 e0 03          	shl    $0x3,%rax
    632c:	4c 8d 3c c0          	lea    (%rax,%rax,8),%r15
    6330:	31 db                	xor    %ebx,%ebx
    6332:	4c 8d 2d 07 f1 ff ff 	lea    -0xef9(%rip),%r13        # 5440 <__rust_dealloc>
    6339:	eb 0e                	jmp    6349 <core::ptr::drop_in_place+0x39>
    633b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6340:	48 83 c3 48          	add    $0x48,%rbx
    6344:	49 39 df             	cmp    %rbx,%r15
    6347:	74 41                	je     638a <core::ptr::drop_in_place+0x7a>
    6349:	49 83 7c 1c 08 00    	cmpq   $0x0,0x8(%r12,%rbx,1)
    634f:	75 ef                	jne    6340 <core::ptr::drop_in_place+0x30>
    6351:	49 8b 44 1c 30       	mov    0x30(%r12,%rbx,1),%rax
    6356:	48 c1 e0 03          	shl    $0x3,%rax
    635a:	48 8d 34 80          	lea    (%rax,%rax,4),%rsi
    635e:	48 85 f6             	test   %rsi,%rsi
    6361:	74 0d                	je     6370 <core::ptr::drop_in_place+0x60>
    6363:	49 8b 7c 1c 28       	mov    0x28(%r12,%rbx,1),%rdi
    6368:	ba 08 00 00 00       	mov    $0x8,%edx
    636d:	41 ff d5             	callq  *%r13
    6370:	49 8b 74 1c 40       	mov    0x40(%r12,%rbx,1),%rsi
    6375:	48 c1 e6 05          	shl    $0x5,%rsi
    6379:	74 c5                	je     6340 <core::ptr::drop_in_place+0x30>
    637b:	49 8b 7c 1c 38       	mov    0x38(%r12,%rbx,1),%rdi
    6380:	ba 08 00 00 00       	mov    $0x8,%edx
    6385:	41 ff d5             	callq  *%r13
    6388:	eb b6                	jmp    6340 <core::ptr::drop_in_place+0x30>
    638a:	4d 8b 26             	mov    (%r14),%r12
    638d:	49 8b 46 08          	mov    0x8(%r14),%rax
    6391:	48 85 c0             	test   %rax,%rax
    6394:	74 29                	je     63bf <core::ptr::drop_in_place+0xaf>
    6396:	4d 85 e4             	test   %r12,%r12
    6399:	74 24                	je     63bf <core::ptr::drop_in_place+0xaf>
    639b:	48 c1 e0 03          	shl    $0x3,%rax
    639f:	48 8d 34 c0          	lea    (%rax,%rax,8),%rsi
    63a3:	48 85 f6             	test   %rsi,%rsi
    63a6:	74 17                	je     63bf <core::ptr::drop_in_place+0xaf>
    63a8:	ba 08 00 00 00       	mov    $0x8,%edx
    63ad:	4c 89 e7             	mov    %r12,%rdi
    63b0:	5b                   	pop    %rbx
    63b1:	41 5c                	pop    %r12
    63b3:	41 5d                	pop    %r13
    63b5:	41 5e                	pop    %r14
    63b7:	41 5f                	pop    %r15
    63b9:	ff 25 39 f8 03 00    	jmpq   *0x3f839(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    63bf:	5b                   	pop    %rbx
    63c0:	41 5c                	pop    %r12
    63c2:	41 5d                	pop    %r13
    63c4:	41 5e                	pop    %r14
    63c6:	41 5f                	pop    %r15
    63c8:	c3                   	retq   
    63c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000063d0 <core::ptr::drop_in_place>:
    63d0:	48 83 3f 00          	cmpq   $0x0,(%rdi)
    63d4:	74 23                	je     63f9 <core::ptr::drop_in_place+0x29>
    63d6:	48 8b 77 10          	mov    0x10(%rdi),%rsi
    63da:	48 85 f6             	test   %rsi,%rsi
    63dd:	74 1a                	je     63f9 <core::ptr::drop_in_place+0x29>
    63df:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    63e3:	48 85 ff             	test   %rdi,%rdi
    63e6:	74 11                	je     63f9 <core::ptr::drop_in_place+0x29>
    63e8:	48 c1 e6 04          	shl    $0x4,%rsi
    63ec:	74 0b                	je     63f9 <core::ptr::drop_in_place+0x29>
    63ee:	ba 08 00 00 00       	mov    $0x8,%edx
    63f3:	ff 25 ff f7 03 00    	jmpq   *0x3f7ff(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    63f9:	c3                   	retq   
    63fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000006400 <core::ptr::drop_in_place>:
    6400:	83 3f 02             	cmpl   $0x2,(%rdi)
    6403:	75 01                	jne    6406 <core::ptr::drop_in_place+0x6>
    6405:	c3                   	retq   
    6406:	e9 55 0d 00 00       	jmpq   7160 <core::ptr::drop_in_place>
    640b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006410 <core::ptr::drop_in_place>:
    6410:	41 57                	push   %r15
    6412:	41 56                	push   %r14
    6414:	41 55                	push   %r13
    6416:	41 54                	push   %r12
    6418:	53                   	push   %rbx
    6419:	48 83 3f 00          	cmpq   $0x0,(%rdi)
    641d:	74 0a                	je     6429 <core::ptr::drop_in_place+0x19>
    641f:	5b                   	pop    %rbx
    6420:	41 5c                	pop    %r12
    6422:	41 5d                	pop    %r13
    6424:	41 5e                	pop    %r14
    6426:	41 5f                	pop    %r15
    6428:	c3                   	retq   
    6429:	49 89 fe             	mov    %rdi,%r14
    642c:	48 8b 47 10          	mov    0x10(%rdi),%rax
    6430:	48 85 c0             	test   %rax,%rax
    6433:	74 5f                	je     6494 <core::ptr::drop_in_place+0x84>
    6435:	49 8b 5e 08          	mov    0x8(%r14),%rbx
    6439:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    643d:	4c 8d 3c c3          	lea    (%rbx,%rax,8),%r15
    6441:	4c 8d 25 f8 ef ff ff 	lea    -0x1008(%rip),%r12        # 5440 <__rust_dealloc>
    6448:	e9 0c 00 00 00       	jmpq   6459 <core::ptr::drop_in_place+0x49>
    644d:	0f 1f 00             	nopl   (%rax)
    6450:	48 83 c3 18          	add    $0x18,%rbx
    6454:	4c 39 fb             	cmp    %r15,%rbx
    6457:	74 1b                	je     6474 <core::ptr::drop_in_place+0x64>
    6459:	48 8b 3b             	mov    (%rbx),%rdi
    645c:	48 85 ff             	test   %rdi,%rdi
    645f:	74 ef                	je     6450 <core::ptr::drop_in_place+0x40>
    6461:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    6465:	48 85 f6             	test   %rsi,%rsi
    6468:	74 e6                	je     6450 <core::ptr::drop_in_place+0x40>
    646a:	ba 01 00 00 00       	mov    $0x1,%edx
    646f:	41 ff d4             	callq  *%r12
    6472:	eb dc                	jmp    6450 <core::ptr::drop_in_place+0x40>
    6474:	49 8b 46 10          	mov    0x10(%r14),%rax
    6478:	48 c1 e0 03          	shl    $0x3,%rax
    647c:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
    6480:	48 85 f6             	test   %rsi,%rsi
    6483:	74 0f                	je     6494 <core::ptr::drop_in_place+0x84>
    6485:	49 8b 7e 08          	mov    0x8(%r14),%rdi
    6489:	ba 08 00 00 00       	mov    $0x8,%edx
    648e:	ff 15 64 f7 03 00    	callq  *0x3f764(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    6494:	4d 8b 7e 20          	mov    0x20(%r14),%r15
    6498:	4d 85 ff             	test   %r15,%r15
    649b:	74 82                	je     641f <core::ptr::drop_in_place+0xf>
    649d:	4d 8b 66 18          	mov    0x18(%r14),%r12
    64a1:	49 c1 e7 05          	shl    $0x5,%r15
    64a5:	31 db                	xor    %ebx,%ebx
    64a7:	4c 8d 2d 92 ef ff ff 	lea    -0x106e(%rip),%r13        # 5440 <__rust_dealloc>
    64ae:	eb 09                	jmp    64b9 <core::ptr::drop_in_place+0xa9>
    64b0:	48 83 c3 20          	add    $0x20,%rbx
    64b4:	49 39 df             	cmp    %rbx,%r15
    64b7:	74 21                	je     64da <core::ptr::drop_in_place+0xca>
    64b9:	49 8b 44 1c 18       	mov    0x18(%r12,%rbx,1),%rax
    64be:	48 c1 e0 03          	shl    $0x3,%rax
    64c2:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
    64c6:	48 85 f6             	test   %rsi,%rsi
    64c9:	74 e5                	je     64b0 <core::ptr::drop_in_place+0xa0>
    64cb:	49 8b 7c 1c 10       	mov    0x10(%r12,%rbx,1),%rdi
    64d0:	ba 08 00 00 00       	mov    $0x8,%edx
    64d5:	41 ff d5             	callq  *%r13
    64d8:	eb d6                	jmp    64b0 <core::ptr::drop_in_place+0xa0>
    64da:	49 8b 76 20          	mov    0x20(%r14),%rsi
    64de:	48 c1 e6 05          	shl    $0x5,%rsi
    64e2:	0f 84 37 ff ff ff    	je     641f <core::ptr::drop_in_place+0xf>
    64e8:	49 8b 7e 18          	mov    0x18(%r14),%rdi
    64ec:	ba 08 00 00 00       	mov    $0x8,%edx
    64f1:	5b                   	pop    %rbx
    64f2:	41 5c                	pop    %r12
    64f4:	41 5d                	pop    %r13
    64f6:	41 5e                	pop    %r14
    64f8:	41 5f                	pop    %r15
    64fa:	ff 25 f8 f6 03 00    	jmpq   *0x3f6f8(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>

0000000000006500 <core::ptr::drop_in_place>:
    6500:	41 56                	push   %r14
    6502:	53                   	push   %rbx
    6503:	50                   	push   %rax
    6504:	48 89 fb             	mov    %rdi,%rbx
    6507:	48 8b 3f             	mov    (%rdi),%rdi
    650a:	48 85 ff             	test   %rdi,%rdi
    650d:	74 27                	je     6536 <core::ptr::drop_in_place+0x36>
    650f:	48 8b 43 08          	mov    0x8(%rbx),%rax
    6513:	ff 10                	callq  *(%rax)
    6515:	48 8b 43 08          	mov    0x8(%rbx),%rax
    6519:	48 8b 70 08          	mov    0x8(%rax),%rsi
    651d:	48 85 f6             	test   %rsi,%rsi
    6520:	74 14                	je     6536 <core::ptr::drop_in_place+0x36>
    6522:	48 8b 3b             	mov    (%rbx),%rdi
    6525:	48 8b 50 10          	mov    0x10(%rax),%rdx
    6529:	48 83 c4 08          	add    $0x8,%rsp
    652d:	5b                   	pop    %rbx
    652e:	41 5e                	pop    %r14
    6530:	ff 25 c2 f6 03 00    	jmpq   *0x3f6c2(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    6536:	48 83 c4 08          	add    $0x8,%rsp
    653a:	5b                   	pop    %rbx
    653b:	41 5e                	pop    %r14
    653d:	c3                   	retq   
    653e:	49 89 c6             	mov    %rax,%r14
    6541:	48 8b 3b             	mov    (%rbx),%rdi
    6544:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    6548:	e8 83 34 00 00       	callq  99d0 <alloc::alloc::box_free>
    654d:	4c 89 f7             	mov    %r14,%rdi
    6550:	e8 fb ea ff ff       	callq  5050 <_Unwind_Resume@plt>
    6555:	0f 0b                	ud2    
    6557:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    655e:	00 00 

0000000000006560 <core::ptr::drop_in_place>:
    6560:	ff 25 d2 f6 03 00    	jmpq   *0x3f6d2(%rip)        # 45c38 <close@GLIBC_2.2.5>
    6566:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    656d:	00 00 00 

0000000000006570 <core::ptr::drop_in_place>:
    6570:	48 8b 07             	mov    (%rdi),%rax
    6573:	f0 48 83 28 01       	lock subq $0x1,(%rax)
    6578:	75 05                	jne    657f <core::ptr::drop_in_place+0xf>
    657a:	e9 01 34 00 00       	jmpq   9980 <alloc::sync::Arc<T>::drop_slow>
    657f:	c3                   	retq   

0000000000006580 <core::ptr::drop_in_place>:
    6580:	41 57                	push   %r15
    6582:	41 56                	push   %r14
    6584:	41 55                	push   %r13
    6586:	41 54                	push   %r12
    6588:	53                   	push   %rbx
    6589:	49 89 fe             	mov    %rdi,%r14
    658c:	4c 8b 2f             	mov    (%rdi),%r13
    658f:	48 8b 47 10          	mov    0x10(%rdi),%rax
    6593:	48 85 c0             	test   %rax,%rax
    6596:	0f 84 a2 00 00 00    	je     663e <core::ptr::drop_in_place+0xbe>
    659c:	48 89 c1             	mov    %rax,%rcx
    659f:	48 c1 e1 09          	shl    $0x9,%rcx
    65a3:	4c 8d 24 c1          	lea    (%rcx,%rax,8),%r12
    65a7:	31 db                	xor    %ebx,%ebx
    65a9:	eb 11                	jmp    65bc <core::ptr::drop_in_place+0x3c>
    65ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    65b0:	48 81 c3 08 02 00 00 	add    $0x208,%rbx
    65b7:	49 39 dc             	cmp    %rbx,%r12
    65ba:	74 7f                	je     663b <core::ptr::drop_in_place+0xbb>
    65bc:	4a 8d 3c 2b          	lea    (%rbx,%r13,1),%rdi
    65c0:	48 83 c7 40          	add    $0x40,%rdi
    65c4:	e8 97 f8 ff ff       	callq  5e60 <core::ptr::drop_in_place>
    65c9:	41 83 bc 1d 60 01 00 	cmpl   $0x2e,0x160(%r13,%rbx,1)
    65d0:	00 2e 
    65d2:	75 1c                	jne    65f0 <core::ptr::drop_in_place+0x70>
    65d4:	41 83 bc 1d b0 01 00 	cmpl   $0x2,0x1b0(%r13,%rbx,1)
    65db:	00 02 
    65dd:	75 2c                	jne    660b <core::ptr::drop_in_place+0x8b>
    65df:	41 83 bc 1d d8 01 00 	cmpl   $0x2,0x1d8(%r13,%rbx,1)
    65e6:	00 02 
    65e8:	74 c6                	je     65b0 <core::ptr::drop_in_place+0x30>
    65ea:	eb 3a                	jmp    6626 <core::ptr::drop_in_place+0xa6>
    65ec:	0f 1f 40 00          	nopl   0x0(%rax)
    65f0:	4a 8d 3c 2b          	lea    (%rbx,%r13,1),%rdi
    65f4:	48 81 c7 b8 00 00 00 	add    $0xb8,%rdi
    65fb:	e8 b0 03 00 00       	callq  69b0 <core::ptr::drop_in_place>
    6600:	41 83 bc 1d b0 01 00 	cmpl   $0x2,0x1b0(%r13,%rbx,1)
    6607:	00 02 
    6609:	74 d4                	je     65df <core::ptr::drop_in_place+0x5f>
    660b:	4a 8d 3c 2b          	lea    (%rbx,%r13,1),%rdi
    660f:	48 81 c7 b0 01 00 00 	add    $0x1b0,%rdi
    6616:	e8 f5 fd ff ff       	callq  6410 <core::ptr::drop_in_place>
    661b:	41 83 bc 1d d8 01 00 	cmpl   $0x2,0x1d8(%r13,%rbx,1)
    6622:	00 02 
    6624:	74 8a                	je     65b0 <core::ptr::drop_in_place+0x30>
    6626:	4a 8d 3c 2b          	lea    (%rbx,%r13,1),%rdi
    662a:	48 81 c7 d8 01 00 00 	add    $0x1d8,%rdi
    6631:	e8 2a 0b 00 00       	callq  7160 <core::ptr::drop_in_place>
    6636:	e9 75 ff ff ff       	jmpq   65b0 <core::ptr::drop_in_place+0x30>
    663b:	4d 8b 2e             	mov    (%r14),%r13
    663e:	49 8b 46 08          	mov    0x8(%r14),%rax
    6642:	48 85 c0             	test   %rax,%rax
    6645:	74 2c                	je     6673 <core::ptr::drop_in_place+0xf3>
    6647:	4d 85 ed             	test   %r13,%r13
    664a:	74 27                	je     6673 <core::ptr::drop_in_place+0xf3>
    664c:	48 89 c1             	mov    %rax,%rcx
    664f:	48 c1 e1 09          	shl    $0x9,%rcx
    6653:	48 8d 34 c1          	lea    (%rcx,%rax,8),%rsi
    6657:	48 85 f6             	test   %rsi,%rsi
    665a:	74 17                	je     6673 <core::ptr::drop_in_place+0xf3>
    665c:	ba 08 00 00 00       	mov    $0x8,%edx
    6661:	4c 89 ef             	mov    %r13,%rdi
    6664:	5b                   	pop    %rbx
    6665:	41 5c                	pop    %r12
    6667:	41 5d                	pop    %r13
    6669:	41 5e                	pop    %r14
    666b:	41 5f                	pop    %r15
    666d:	ff 25 85 f5 03 00    	jmpq   *0x3f585(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    6673:	5b                   	pop    %rbx
    6674:	41 5c                	pop    %r12
    6676:	41 5d                	pop    %r13
    6678:	41 5e                	pop    %r14
    667a:	41 5f                	pop    %r15
    667c:	c3                   	retq   
    667d:	49 89 c7             	mov    %rax,%r15
    6680:	4a 8d 3c 2b          	lea    (%rbx,%r13,1),%rdi
    6684:	48 81 c7 b8 00 00 00 	add    $0xb8,%rdi
    668b:	e8 10 05 00 00       	callq  6ba0 <core::ptr::drop_in_place>
    6690:	4a 8d 3c 2b          	lea    (%rbx,%r13,1),%rdi
    6694:	48 81 c7 b0 01 00 00 	add    $0x1b0,%rdi
    669b:	e8 b0 03 00 00       	callq  6a50 <core::ptr::drop_in_place>
    66a0:	4a 8d 3c 2b          	lea    (%rbx,%r13,1),%rdi
    66a4:	48 81 c7 d8 01 00 00 	add    $0x1d8,%rdi
    66ab:	e8 50 fd ff ff       	callq  6400 <core::ptr::drop_in_place>
    66b0:	49 8d 84 24 f8 fd ff 	lea    -0x208(%r12),%rax
    66b7:	ff 
    66b8:	48 39 d8             	cmp    %rbx,%rax
    66bb:	74 2c                	je     66e9 <core::ptr::drop_in_place+0x169>
    66bd:	49 29 dc             	sub    %rbx,%r12
    66c0:	49 81 c4 f8 fd ff ff 	add    $0xfffffffffffffdf8,%r12
    66c7:	4c 01 eb             	add    %r13,%rbx
    66ca:	48 81 c3 08 02 00 00 	add    $0x208,%rbx
    66d1:	48 89 df             	mov    %rbx,%rdi
    66d4:	e8 a7 09 00 00       	callq  7080 <core::ptr::drop_in_place>
    66d9:	48 81 c3 08 02 00 00 	add    $0x208,%rbx
    66e0:	49 81 c4 f8 fd ff ff 	add    $0xfffffffffffffdf8,%r12
    66e7:	75 e8                	jne    66d1 <core::ptr::drop_in_place+0x151>
    66e9:	49 8b 3e             	mov    (%r14),%rdi
    66ec:	49 8b 76 08          	mov    0x8(%r14),%rsi
    66f0:	e8 4b 0d 00 00       	callq  7440 <core::ptr::drop_in_place>
    66f5:	4c 89 ff             	mov    %r15,%rdi
    66f8:	e8 53 e9 ff ff       	callq  5050 <_Unwind_Resume@plt>
    66fd:	0f 0b                	ud2    
    66ff:	49 89 c7             	mov    %rax,%r15
    6702:	eb e5                	jmp    66e9 <core::ptr::drop_in_place+0x169>
    6704:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    670b:	00 00 00 
    670e:	66 90                	xchg   %ax,%ax

0000000000006710 <core::ptr::drop_in_place>:
    6710:	ff 25 62 f3 03 00    	jmpq   *0x3f362(%rip)        # 45a78 <_GLOBAL_OFFSET_TABLE_+0xf0>
    6716:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    671d:	00 00 00 

0000000000006720 <core::ptr::drop_in_place>:
    6720:	41 57                	push   %r15
    6722:	41 56                	push   %r14
    6724:	41 54                	push   %r12
    6726:	53                   	push   %rbx
    6727:	50                   	push   %rax
    6728:	49 89 fe             	mov    %rdi,%r14
    672b:	48 8b 1f             	mov    (%rdi),%rbx
    672e:	48 8b 47 10          	mov    0x10(%rdi),%rax
    6732:	48 85 c0             	test   %rax,%rax
    6735:	0f 84 3c 00 00 00    	je     6777 <core::ptr::drop_in_place+0x57>
    673b:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    673f:	4c 8d 3c c3          	lea    (%rbx,%rax,8),%r15
    6743:	4c 8d 25 f6 ec ff ff 	lea    -0x130a(%rip),%r12        # 5440 <__rust_dealloc>
    674a:	e9 0a 00 00 00       	jmpq   6759 <core::ptr::drop_in_place+0x39>
    674f:	90                   	nop
    6750:	48 83 c3 18          	add    $0x18,%rbx
    6754:	4c 39 fb             	cmp    %r15,%rbx
    6757:	74 1b                	je     6774 <core::ptr::drop_in_place+0x54>
    6759:	48 8b 3b             	mov    (%rbx),%rdi
    675c:	48 85 ff             	test   %rdi,%rdi
    675f:	74 ef                	je     6750 <core::ptr::drop_in_place+0x30>
    6761:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    6765:	48 85 f6             	test   %rsi,%rsi
    6768:	74 e6                	je     6750 <core::ptr::drop_in_place+0x30>
    676a:	ba 01 00 00 00       	mov    $0x1,%edx
    676f:	41 ff d4             	callq  *%r12
    6772:	eb dc                	jmp    6750 <core::ptr::drop_in_place+0x30>
    6774:	49 8b 1e             	mov    (%r14),%rbx
    6777:	49 8b 46 08          	mov    0x8(%r14),%rax
    677b:	48 85 c0             	test   %rax,%rax
    677e:	74 2b                	je     67ab <core::ptr::drop_in_place+0x8b>
    6780:	48 85 db             	test   %rbx,%rbx
    6783:	74 26                	je     67ab <core::ptr::drop_in_place+0x8b>
    6785:	48 c1 e0 03          	shl    $0x3,%rax
    6789:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
    678d:	48 85 f6             	test   %rsi,%rsi
    6790:	74 19                	je     67ab <core::ptr::drop_in_place+0x8b>
    6792:	ba 08 00 00 00       	mov    $0x8,%edx
    6797:	48 89 df             	mov    %rbx,%rdi
    679a:	48 83 c4 08          	add    $0x8,%rsp
    679e:	5b                   	pop    %rbx
    679f:	41 5c                	pop    %r12
    67a1:	41 5e                	pop    %r14
    67a3:	41 5f                	pop    %r15
    67a5:	ff 25 4d f4 03 00    	jmpq   *0x3f44d(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    67ab:	48 83 c4 08          	add    $0x8,%rsp
    67af:	5b                   	pop    %rbx
    67b0:	41 5c                	pop    %r12
    67b2:	41 5e                	pop    %r14
    67b4:	41 5f                	pop    %r15
    67b6:	c3                   	retq   
    67b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    67be:	00 00 

00000000000067c0 <core::ptr::drop_in_place>:
    67c0:	e9 eb 01 00 00       	jmpq   69b0 <core::ptr::drop_in_place>
    67c5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    67cc:	00 00 00 
    67cf:	90                   	nop

00000000000067d0 <core::ptr::drop_in_place>:
    67d0:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    67d4:	48 85 f6             	test   %rsi,%rsi
    67d7:	74 1c                	je     67f5 <core::ptr::drop_in_place+0x25>
    67d9:	48 8b 3f             	mov    (%rdi),%rdi
    67dc:	48 85 ff             	test   %rdi,%rdi
    67df:	74 14                	je     67f5 <core::ptr::drop_in_place+0x25>
    67e1:	48 c1 e6 02          	shl    $0x2,%rsi
    67e5:	48 85 f6             	test   %rsi,%rsi
    67e8:	74 0b                	je     67f5 <core::ptr::drop_in_place+0x25>
    67ea:	ba 02 00 00 00       	mov    $0x2,%edx
    67ef:	ff 25 03 f4 03 00    	jmpq   *0x3f403(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    67f5:	c3                   	retq   
    67f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    67fd:	00 00 00 

0000000000006800 <core::ptr::drop_in_place>:
    6800:	48 8b 07             	mov    (%rdi),%rax
    6803:	48 85 c0             	test   %rax,%rax
    6806:	74 1a                	je     6822 <core::ptr::drop_in_place+0x22>
    6808:	c6 00 00             	movb   $0x0,(%rax)
    680b:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    680f:	48 85 f6             	test   %rsi,%rsi
    6812:	74 0e                	je     6822 <core::ptr::drop_in_place+0x22>
    6814:	48 8b 3f             	mov    (%rdi),%rdi
    6817:	ba 01 00 00 00       	mov    $0x1,%edx
    681c:	ff 25 d6 f3 03 00    	jmpq   *0x3f3d6(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    6822:	c3                   	retq   
    6823:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    682a:	00 00 00 
    682d:	0f 1f 00             	nopl   (%rax)

0000000000006830 <core::ptr::drop_in_place>:
    6830:	48 89 f8             	mov    %rdi,%rax
    6833:	48 8b 3f             	mov    (%rdi),%rdi
    6836:	48 85 ff             	test   %rdi,%rdi
    6839:	74 14                	je     684f <core::ptr::drop_in_place+0x1f>
    683b:	48 8b 70 08          	mov    0x8(%rax),%rsi
    683f:	48 85 f6             	test   %rsi,%rsi
    6842:	74 0b                	je     684f <core::ptr::drop_in_place+0x1f>
    6844:	ba 01 00 00 00       	mov    $0x1,%edx
    6849:	ff 25 a9 f3 03 00    	jmpq   *0x3f3a9(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    684f:	c3                   	retq   

0000000000006850 <core::ptr::drop_in_place>:
    6850:	41 57                	push   %r15
    6852:	41 56                	push   %r14
    6854:	41 54                	push   %r12
    6856:	53                   	push   %rbx
    6857:	50                   	push   %rax
    6858:	49 89 fe             	mov    %rdi,%r14
    685b:	48 8b 1f             	mov    (%rdi),%rbx
    685e:	48 8b 47 10          	mov    0x10(%rdi),%rax
    6862:	48 85 c0             	test   %rax,%rax
    6865:	0f 84 3c 00 00 00    	je     68a7 <core::ptr::drop_in_place+0x57>
    686b:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    686f:	4c 8d 3c c3          	lea    (%rbx,%rax,8),%r15
    6873:	4c 8d 25 c6 eb ff ff 	lea    -0x143a(%rip),%r12        # 5440 <__rust_dealloc>
    687a:	e9 0a 00 00 00       	jmpq   6889 <core::ptr::drop_in_place+0x39>
    687f:	90                   	nop
    6880:	48 83 c3 18          	add    $0x18,%rbx
    6884:	4c 39 fb             	cmp    %r15,%rbx
    6887:	74 1b                	je     68a4 <core::ptr::drop_in_place+0x54>
    6889:	48 8b 3b             	mov    (%rbx),%rdi
    688c:	48 85 ff             	test   %rdi,%rdi
    688f:	74 ef                	je     6880 <core::ptr::drop_in_place+0x30>
    6891:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    6895:	48 85 f6             	test   %rsi,%rsi
    6898:	74 e6                	je     6880 <core::ptr::drop_in_place+0x30>
    689a:	ba 01 00 00 00       	mov    $0x1,%edx
    689f:	41 ff d4             	callq  *%r12
    68a2:	eb dc                	jmp    6880 <core::ptr::drop_in_place+0x30>
    68a4:	49 8b 1e             	mov    (%r14),%rbx
    68a7:	49 8b 46 08          	mov    0x8(%r14),%rax
    68ab:	48 85 c0             	test   %rax,%rax
    68ae:	74 2b                	je     68db <core::ptr::drop_in_place+0x8b>
    68b0:	48 85 db             	test   %rbx,%rbx
    68b3:	74 26                	je     68db <core::ptr::drop_in_place+0x8b>
    68b5:	48 c1 e0 03          	shl    $0x3,%rax
    68b9:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
    68bd:	48 85 f6             	test   %rsi,%rsi
    68c0:	74 19                	je     68db <core::ptr::drop_in_place+0x8b>
    68c2:	ba 08 00 00 00       	mov    $0x8,%edx
    68c7:	48 89 df             	mov    %rbx,%rdi
    68ca:	48 83 c4 08          	add    $0x8,%rsp
    68ce:	5b                   	pop    %rbx
    68cf:	41 5c                	pop    %r12
    68d1:	41 5e                	pop    %r14
    68d3:	41 5f                	pop    %r15
    68d5:	ff 25 1d f3 03 00    	jmpq   *0x3f31d(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    68db:	48 83 c4 08          	add    $0x8,%rsp
    68df:	5b                   	pop    %rbx
    68e0:	41 5c                	pop    %r12
    68e2:	41 5e                	pop    %r14
    68e4:	41 5f                	pop    %r15
    68e6:	c3                   	retq   
    68e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    68ee:	00 00 

00000000000068f0 <core::ptr::drop_in_place>:
    68f0:	48 8b 47 18          	mov    0x18(%rdi),%rax
    68f4:	f0 48 83 28 01       	lock subq $0x1,(%rax)
    68f9:	75 09                	jne    6904 <core::ptr::drop_in_place+0x14>
    68fb:	48 83 c7 18          	add    $0x18,%rdi
    68ff:	e9 7c 30 00 00       	jmpq   9980 <alloc::sync::Arc<T>::drop_slow>
    6904:	c3                   	retq   
    6905:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    690c:	00 00 00 
    690f:	90                   	nop

0000000000006910 <core::ptr::drop_in_place>:
    6910:	83 7f 48 03          	cmpl   $0x3,0x48(%rdi)
    6914:	74 21                	je     6937 <core::ptr::drop_in_place+0x27>
    6916:	48 8b 77 20          	mov    0x20(%rdi),%rsi
    691a:	48 85 f6             	test   %rsi,%rsi
    691d:	74 18                	je     6937 <core::ptr::drop_in_place+0x27>
    691f:	48 c1 e6 03          	shl    $0x3,%rsi
    6923:	48 85 f6             	test   %rsi,%rsi
    6926:	74 0f                	je     6937 <core::ptr::drop_in_place+0x27>
    6928:	48 8b 7f 18          	mov    0x18(%rdi),%rdi
    692c:	ba 08 00 00 00       	mov    $0x8,%edx
    6931:	ff 25 c1 f2 03 00    	jmpq   *0x3f2c1(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    6937:	c3                   	retq   
    6938:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    693f:	00 

0000000000006940 <core::ptr::drop_in_place>:
    6940:	48 83 c7 08          	add    $0x8,%rdi
    6944:	e9 37 05 00 00       	jmpq   6e80 <core::ptr::drop_in_place>
    6949:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000006950 <core::ptr::drop_in_place>:
    6950:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    6954:	48 85 f6             	test   %rsi,%rsi
    6957:	74 1c                	je     6975 <core::ptr::drop_in_place+0x25>
    6959:	48 8b 3f             	mov    (%rdi),%rdi
    695c:	48 85 ff             	test   %rdi,%rdi
    695f:	74 14                	je     6975 <core::ptr::drop_in_place+0x25>
    6961:	48 c1 e6 03          	shl    $0x3,%rsi
    6965:	48 85 f6             	test   %rsi,%rsi
    6968:	74 0b                	je     6975 <core::ptr::drop_in_place+0x25>
    696a:	ba 08 00 00 00       	mov    $0x8,%edx
    696f:	ff 25 83 f2 03 00    	jmpq   *0x3f283(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    6975:	c3                   	retq   
    6976:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    697d:	00 00 00 

0000000000006980 <core::ptr::drop_in_place>:
    6980:	48 83 3f 00          	cmpq   $0x0,(%rdi)
    6984:	74 20                	je     69a6 <core::ptr::drop_in_place+0x26>
    6986:	48 89 f8             	mov    %rdi,%rax
    6989:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    698d:	48 85 ff             	test   %rdi,%rdi
    6990:	74 14                	je     69a6 <core::ptr::drop_in_place+0x26>
    6992:	48 8b 70 10          	mov    0x10(%rax),%rsi
    6996:	48 85 f6             	test   %rsi,%rsi
    6999:	74 0b                	je     69a6 <core::ptr::drop_in_place+0x26>
    699b:	ba 01 00 00 00       	mov    $0x1,%edx
    69a0:	ff 25 52 f2 03 00    	jmpq   *0x3f252(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    69a6:	c3                   	retq   
    69a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    69ae:	00 00 

00000000000069b0 <core::ptr::drop_in_place>:
    69b0:	53                   	push   %rbx
    69b1:	48 89 fb             	mov    %rdi,%rbx
    69b4:	48 8b 77 30          	mov    0x30(%rdi),%rsi
    69b8:	48 85 f6             	test   %rsi,%rsi
    69bb:	74 1d                	je     69da <core::ptr::drop_in_place+0x2a>
    69bd:	48 8b 7b 28          	mov    0x28(%rbx),%rdi
    69c1:	48 85 ff             	test   %rdi,%rdi
    69c4:	74 14                	je     69da <core::ptr::drop_in_place+0x2a>
    69c6:	48 c1 e6 02          	shl    $0x2,%rsi
    69ca:	48 85 f6             	test   %rsi,%rsi
    69cd:	74 0b                	je     69da <core::ptr::drop_in_place+0x2a>
    69cf:	ba 02 00 00 00       	mov    $0x2,%edx
    69d4:	ff 15 1e f2 03 00    	callq  *0x3f21e(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    69da:	48 8b 43 48          	mov    0x48(%rbx),%rax
    69de:	48 85 c0             	test   %rax,%rax
    69e1:	74 21                	je     6a04 <core::ptr::drop_in_place+0x54>
    69e3:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
    69e7:	48 85 ff             	test   %rdi,%rdi
    69ea:	74 18                	je     6a04 <core::ptr::drop_in_place+0x54>
    69ec:	48 c1 e0 03          	shl    $0x3,%rax
    69f0:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
    69f4:	48 85 f6             	test   %rsi,%rsi
    69f7:	74 0b                	je     6a04 <core::ptr::drop_in_place+0x54>
    69f9:	ba 08 00 00 00       	mov    $0x8,%edx
    69fe:	ff 15 f4 f1 03 00    	callq  *0x3f1f4(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    6a04:	48 8b 73 60          	mov    0x60(%rbx),%rsi
    6a08:	48 85 f6             	test   %rsi,%rsi
    6a0b:	74 1d                	je     6a2a <core::ptr::drop_in_place+0x7a>
    6a0d:	48 8b 7b 58          	mov    0x58(%rbx),%rdi
    6a11:	48 85 ff             	test   %rdi,%rdi
    6a14:	74 14                	je     6a2a <core::ptr::drop_in_place+0x7a>
    6a16:	48 c1 e6 02          	shl    $0x2,%rsi
    6a1a:	48 85 f6             	test   %rsi,%rsi
    6a1d:	74 0b                	je     6a2a <core::ptr::drop_in_place+0x7a>
    6a1f:	ba 02 00 00 00       	mov    $0x2,%edx
    6a24:	ff 15 ce f1 03 00    	callq  *0x3f1ce(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    6a2a:	48 8b 73 78          	mov    0x78(%rbx),%rsi
    6a2e:	48 85 f6             	test   %rsi,%rsi
    6a31:	74 1b                	je     6a4e <core::ptr::drop_in_place+0x9e>
    6a33:	48 8b 7b 70          	mov    0x70(%rbx),%rdi
    6a37:	48 85 ff             	test   %rdi,%rdi
    6a3a:	74 12                	je     6a4e <core::ptr::drop_in_place+0x9e>
    6a3c:	48 c1 e6 06          	shl    $0x6,%rsi
    6a40:	74 0c                	je     6a4e <core::ptr::drop_in_place+0x9e>
    6a42:	ba 08 00 00 00       	mov    $0x8,%edx
    6a47:	5b                   	pop    %rbx
    6a48:	ff 25 aa f1 03 00    	jmpq   *0x3f1aa(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    6a4e:	5b                   	pop    %rbx
    6a4f:	c3                   	retq   

0000000000006a50 <core::ptr::drop_in_place>:
    6a50:	83 3f 02             	cmpl   $0x2,(%rdi)
    6a53:	75 01                	jne    6a56 <core::ptr::drop_in_place+0x6>
    6a55:	c3                   	retq   
    6a56:	e9 b5 f9 ff ff       	jmpq   6410 <core::ptr::drop_in_place>
    6a5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006a60 <core::ptr::drop_in_place>:
    6a60:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    6a64:	48 85 f6             	test   %rsi,%rsi
    6a67:	74 14                	je     6a7d <core::ptr::drop_in_place+0x1d>
    6a69:	48 c1 e6 04          	shl    $0x4,%rsi
    6a6d:	74 0e                	je     6a7d <core::ptr::drop_in_place+0x1d>
    6a6f:	48 8b 3f             	mov    (%rdi),%rdi
    6a72:	ba 08 00 00 00       	mov    $0x8,%edx
    6a77:	ff 25 7b f1 03 00    	jmpq   *0x3f17b(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    6a7d:	c3                   	retq   
    6a7e:	66 90                	xchg   %ax,%ax

0000000000006a80 <core::ptr::drop_in_place>:
    6a80:	48 8b 07             	mov    (%rdi),%rax
    6a83:	c6 00 00             	movb   $0x0,(%rax)
    6a86:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    6a8a:	48 85 f6             	test   %rsi,%rsi
    6a8d:	74 0e                	je     6a9d <core::ptr::drop_in_place+0x1d>
    6a8f:	48 8b 3f             	mov    (%rdi),%rdi
    6a92:	ba 01 00 00 00       	mov    $0x1,%edx
    6a97:	ff 25 5b f1 03 00    	jmpq   *0x3f15b(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    6a9d:	c3                   	retq   
    6a9e:	66 90                	xchg   %ax,%ax

0000000000006aa0 <core::ptr::drop_in_place>:
    6aa0:	48 8b 47 08          	mov    0x8(%rdi),%rax
    6aa4:	48 85 c0             	test   %rax,%rax
    6aa7:	74 20                	je     6ac9 <core::ptr::drop_in_place+0x29>
    6aa9:	48 8b 3f             	mov    (%rdi),%rdi
    6aac:	48 85 ff             	test   %rdi,%rdi
    6aaf:	74 18                	je     6ac9 <core::ptr::drop_in_place+0x29>
    6ab1:	48 c1 e0 03          	shl    $0x3,%rax
    6ab5:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
    6ab9:	48 85 f6             	test   %rsi,%rsi
    6abc:	74 0b                	je     6ac9 <core::ptr::drop_in_place+0x29>
    6abe:	ba 08 00 00 00       	mov    $0x8,%edx
    6ac3:	ff 25 2f f1 03 00    	jmpq   *0x3f12f(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    6ac9:	c3                   	retq   
    6aca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000006ad0 <core::ptr::drop_in_place>:
    6ad0:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    6ad4:	48 85 f6             	test   %rsi,%rsi
    6ad7:	74 19                	je     6af2 <core::ptr::drop_in_place+0x22>
    6ad9:	48 8b 3f             	mov    (%rdi),%rdi
    6adc:	48 85 ff             	test   %rdi,%rdi
    6adf:	74 11                	je     6af2 <core::ptr::drop_in_place+0x22>
    6ae1:	48 c1 e6 04          	shl    $0x4,%rsi
    6ae5:	74 0b                	je     6af2 <core::ptr::drop_in_place+0x22>
    6ae7:	ba 08 00 00 00       	mov    $0x8,%edx
    6aec:	ff 25 06 f1 03 00    	jmpq   *0x3f106(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    6af2:	c3                   	retq   
    6af3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6afa:	00 00 00 
    6afd:	0f 1f 00             	nopl   (%rax)

0000000000006b00 <core::ptr::drop_in_place>:
    6b00:	41 57                	push   %r15
    6b02:	41 56                	push   %r14
    6b04:	41 55                	push   %r13
    6b06:	41 54                	push   %r12
    6b08:	53                   	push   %rbx
    6b09:	49 89 fe             	mov    %rdi,%r14
    6b0c:	4c 8b 27             	mov    (%rdi),%r12
    6b0f:	4c 8b 7f 10          	mov    0x10(%rdi),%r15
    6b13:	4d 85 ff             	test   %r15,%r15
    6b16:	74 45                	je     6b5d <core::ptr::drop_in_place+0x5d>
    6b18:	49 c1 e7 05          	shl    $0x5,%r15
    6b1c:	31 db                	xor    %ebx,%ebx
    6b1e:	4c 8d 2d 1b e9 ff ff 	lea    -0x16e5(%rip),%r13        # 5440 <__rust_dealloc>
    6b25:	eb 12                	jmp    6b39 <core::ptr::drop_in_place+0x39>
    6b27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6b2e:	00 00 
    6b30:	48 83 c3 20          	add    $0x20,%rbx
    6b34:	49 39 df             	cmp    %rbx,%r15
    6b37:	74 21                	je     6b5a <core::ptr::drop_in_place+0x5a>
    6b39:	49 8b 44 1c 18       	mov    0x18(%r12,%rbx,1),%rax
    6b3e:	48 c1 e0 03          	shl    $0x3,%rax
    6b42:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
    6b46:	48 85 f6             	test   %rsi,%rsi
    6b49:	74 e5                	je     6b30 <core::ptr::drop_in_place+0x30>
    6b4b:	49 8b 7c 1c 10       	mov    0x10(%r12,%rbx,1),%rdi
    6b50:	ba 08 00 00 00       	mov    $0x8,%edx
    6b55:	41 ff d5             	callq  *%r13
    6b58:	eb d6                	jmp    6b30 <core::ptr::drop_in_place+0x30>
    6b5a:	4d 8b 26             	mov    (%r14),%r12
    6b5d:	49 8b 76 08          	mov    0x8(%r14),%rsi
    6b61:	48 85 f6             	test   %rsi,%rsi
    6b64:	74 22                	je     6b88 <core::ptr::drop_in_place+0x88>
    6b66:	4d 85 e4             	test   %r12,%r12
    6b69:	74 1d                	je     6b88 <core::ptr::drop_in_place+0x88>
    6b6b:	48 c1 e6 05          	shl    $0x5,%rsi
    6b6f:	74 17                	je     6b88 <core::ptr::drop_in_place+0x88>
    6b71:	ba 08 00 00 00       	mov    $0x8,%edx
    6b76:	4c 89 e7             	mov    %r12,%rdi
    6b79:	5b                   	pop    %rbx
    6b7a:	41 5c                	pop    %r12
    6b7c:	41 5d                	pop    %r13
    6b7e:	41 5e                	pop    %r14
    6b80:	41 5f                	pop    %r15
    6b82:	ff 25 70 f0 03 00    	jmpq   *0x3f070(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    6b88:	5b                   	pop    %rbx
    6b89:	41 5c                	pop    %r12
    6b8b:	41 5d                	pop    %r13
    6b8d:	41 5e                	pop    %r14
    6b8f:	41 5f                	pop    %r15
    6b91:	c3                   	retq   
    6b92:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6b99:	00 00 00 
    6b9c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006ba0 <core::ptr::drop_in_place>:
    6ba0:	83 bf a8 00 00 00 2e 	cmpl   $0x2e,0xa8(%rdi)
    6ba7:	75 01                	jne    6baa <core::ptr::drop_in_place+0xa>
    6ba9:	c3                   	retq   
    6baa:	e9 01 fe ff ff       	jmpq   69b0 <core::ptr::drop_in_place>
    6baf:	90                   	nop

0000000000006bb0 <core::ptr::drop_in_place>:
    6bb0:	48 89 f8             	mov    %rdi,%rax
    6bb3:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    6bb7:	48 85 ff             	test   %rdi,%rdi
    6bba:	74 14                	je     6bd0 <core::ptr::drop_in_place+0x20>
    6bbc:	48 8b 70 10          	mov    0x10(%rax),%rsi
    6bc0:	48 85 f6             	test   %rsi,%rsi
    6bc3:	74 0b                	je     6bd0 <core::ptr::drop_in_place+0x20>
    6bc5:	ba 01 00 00 00       	mov    $0x1,%edx
    6bca:	ff 25 28 f0 03 00    	jmpq   *0x3f028(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    6bd0:	c3                   	retq   
    6bd1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6bd8:	00 00 00 
    6bdb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006be0 <core::ptr::drop_in_place>:
    6be0:	48 89 f8             	mov    %rdi,%rax
    6be3:	48 8b 3f             	mov    (%rdi),%rdi
    6be6:	48 85 ff             	test   %rdi,%rdi
    6be9:	74 14                	je     6bff <core::ptr::drop_in_place+0x1f>
    6beb:	48 8b 70 08          	mov    0x8(%rax),%rsi
    6bef:	48 85 f6             	test   %rsi,%rsi
    6bf2:	74 0b                	je     6bff <core::ptr::drop_in_place+0x1f>
    6bf4:	ba 01 00 00 00       	mov    $0x1,%edx
    6bf9:	ff 25 f9 ef 03 00    	jmpq   *0x3eff9(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    6bff:	c3                   	retq   

0000000000006c00 <core::ptr::drop_in_place>:
    6c00:	41 56                	push   %r14
    6c02:	53                   	push   %rbx
    6c03:	50                   	push   %rax
    6c04:	48 89 fb             	mov    %rdi,%rbx
    6c07:	48 8b 3f             	mov    (%rdi),%rdi
    6c0a:	48 8b 43 08          	mov    0x8(%rbx),%rax
    6c0e:	ff 10                	callq  *(%rax)
    6c10:	48 8b 43 08          	mov    0x8(%rbx),%rax
    6c14:	48 8b 70 08          	mov    0x8(%rax),%rsi
    6c18:	48 85 f6             	test   %rsi,%rsi
    6c1b:	74 14                	je     6c31 <core::ptr::drop_in_place+0x31>
    6c1d:	48 8b 3b             	mov    (%rbx),%rdi
    6c20:	48 8b 50 10          	mov    0x10(%rax),%rdx
    6c24:	48 83 c4 08          	add    $0x8,%rsp
    6c28:	5b                   	pop    %rbx
    6c29:	41 5e                	pop    %r14
    6c2b:	ff 25 c7 ef 03 00    	jmpq   *0x3efc7(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    6c31:	48 83 c4 08          	add    $0x8,%rsp
    6c35:	5b                   	pop    %rbx
    6c36:	41 5e                	pop    %r14
    6c38:	c3                   	retq   
    6c39:	49 89 c6             	mov    %rax,%r14
    6c3c:	48 8b 3b             	mov    (%rbx),%rdi
    6c3f:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    6c43:	e8 88 2d 00 00       	callq  99d0 <alloc::alloc::box_free>
    6c48:	4c 89 f7             	mov    %r14,%rdi
    6c4b:	e8 00 e4 ff ff       	callq  5050 <_Unwind_Resume@plt>
    6c50:	0f 0b                	ud2    
    6c52:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6c59:	00 00 00 
    6c5c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006c60 <core::ptr::drop_in_place>:
    6c60:	48 8b 3f             	mov    (%rdi),%rdi
    6c63:	ff 25 ff f0 03 00    	jmpq   *0x3f0ff(%rip)        # 45d68 <pthread_mutex_unlock@GLIBC_2.2.5>
    6c69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000006c70 <core::ptr::drop_in_place>:
    6c70:	48 8d 3d 79 f4 03 00 	lea    0x3f479(%rip),%rdi        # 460f0 <std::sys_common::backtrace::lock::LOCK>
    6c77:	ff 25 eb f0 03 00    	jmpq   *0x3f0eb(%rip)        # 45d68 <pthread_mutex_unlock@GLIBC_2.2.5>
    6c7d:	0f 1f 00             	nopl   (%rax)

0000000000006c80 <core::ptr::drop_in_place>:
    6c80:	48 89 f8             	mov    %rdi,%rax
    6c83:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    6c87:	48 85 ff             	test   %rdi,%rdi
    6c8a:	74 14                	je     6ca0 <core::ptr::drop_in_place+0x20>
    6c8c:	48 8b 70 10          	mov    0x10(%rax),%rsi
    6c90:	48 85 f6             	test   %rsi,%rsi
    6c93:	74 0b                	je     6ca0 <core::ptr::drop_in_place+0x20>
    6c95:	ba 01 00 00 00       	mov    $0x1,%edx
    6c9a:	ff 25 58 ef 03 00    	jmpq   *0x3ef58(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    6ca0:	c3                   	retq   
    6ca1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6ca8:	00 00 00 
    6cab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006cb0 <core::ptr::drop_in_place>:
    6cb0:	41 56                	push   %r14
    6cb2:	53                   	push   %rbx
    6cb3:	50                   	push   %rax
    6cb4:	83 3f 00             	cmpl   $0x0,(%rdi)
    6cb7:	74 2f                	je     6ce8 <core::ptr::drop_in_place+0x38>
    6cb9:	48 89 fb             	mov    %rdi,%rbx
    6cbc:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    6cc0:	48 8b 43 10          	mov    0x10(%rbx),%rax
    6cc4:	ff 10                	callq  *(%rax)
    6cc6:	48 8b 43 10          	mov    0x10(%rbx),%rax
    6cca:	48 8b 70 08          	mov    0x8(%rax),%rsi
    6cce:	48 85 f6             	test   %rsi,%rsi
    6cd1:	74 15                	je     6ce8 <core::ptr::drop_in_place+0x38>
    6cd3:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    6cd7:	48 8b 50 10          	mov    0x10(%rax),%rdx
    6cdb:	48 83 c4 08          	add    $0x8,%rsp
    6cdf:	5b                   	pop    %rbx
    6ce0:	41 5e                	pop    %r14
    6ce2:	ff 25 10 ef 03 00    	jmpq   *0x3ef10(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    6ce8:	48 83 c4 08          	add    $0x8,%rsp
    6cec:	5b                   	pop    %rbx
    6ced:	41 5e                	pop    %r14
    6cef:	c3                   	retq   
    6cf0:	49 89 c6             	mov    %rax,%r14
    6cf3:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    6cf7:	48 8b 73 10          	mov    0x10(%rbx),%rsi
    6cfb:	e8 d0 2c 00 00       	callq  99d0 <alloc::alloc::box_free>
    6d00:	4c 89 f7             	mov    %r14,%rdi
    6d03:	e8 48 e3 ff ff       	callq  5050 <_Unwind_Resume@plt>
    6d08:	0f 0b                	ud2    
    6d0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000006d10 <core::ptr::drop_in_place>:
    6d10:	48 8b 07             	mov    (%rdi),%rax
    6d13:	48 8b 70 08          	mov    0x8(%rax),%rsi
    6d17:	48 85 f6             	test   %rsi,%rsi
    6d1a:	74 14                	je     6d30 <core::ptr::drop_in_place+0x20>
    6d1c:	48 c1 e6 04          	shl    $0x4,%rsi
    6d20:	74 0e                	je     6d30 <core::ptr::drop_in_place+0x20>
    6d22:	48 8b 38             	mov    (%rax),%rdi
    6d25:	ba 08 00 00 00       	mov    $0x8,%edx
    6d2a:	ff 25 c8 ee 03 00    	jmpq   *0x3eec8(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    6d30:	c3                   	retq   
    6d31:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6d38:	00 00 00 
    6d3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006d40 <core::ptr::drop_in_place>:
    6d40:	48 8b 07             	mov    (%rdi),%rax
    6d43:	48 85 c0             	test   %rax,%rax
    6d46:	74 0c                	je     6d54 <core::ptr::drop_in_place+0x14>
    6d48:	f0 48 83 28 01       	lock subq $0x1,(%rax)
    6d4d:	75 05                	jne    6d54 <core::ptr::drop_in_place+0x14>
    6d4f:	e9 2c 2c 00 00       	jmpq   9980 <alloc::sync::Arc<T>::drop_slow>
    6d54:	c3                   	retq   
    6d55:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6d5c:	00 00 00 
    6d5f:	90                   	nop

0000000000006d60 <core::ptr::drop_in_place>:
    6d60:	53                   	push   %rbx
    6d61:	48 89 fb             	mov    %rdi,%rbx
    6d64:	48 8b 3f             	mov    (%rdi),%rdi
    6d67:	48 85 ff             	test   %rdi,%rdi
    6d6a:	74 14                	je     6d80 <core::ptr::drop_in_place+0x20>
    6d6c:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    6d70:	48 85 f6             	test   %rsi,%rsi
    6d73:	74 0b                	je     6d80 <core::ptr::drop_in_place+0x20>
    6d75:	ba 01 00 00 00       	mov    $0x1,%edx
    6d7a:	ff 15 78 ee 03 00    	callq  *0x3ee78(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    6d80:	48 8b 73 20          	mov    0x20(%rbx),%rsi
    6d84:	48 85 f6             	test   %rsi,%rsi
    6d87:	74 1b                	je     6da4 <core::ptr::drop_in_place+0x44>
    6d89:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
    6d8d:	48 85 ff             	test   %rdi,%rdi
    6d90:	74 12                	je     6da4 <core::ptr::drop_in_place+0x44>
    6d92:	48 c1 e6 04          	shl    $0x4,%rsi
    6d96:	74 0c                	je     6da4 <core::ptr::drop_in_place+0x44>
    6d98:	ba 08 00 00 00       	mov    $0x8,%edx
    6d9d:	5b                   	pop    %rbx
    6d9e:	ff 25 54 ee 03 00    	jmpq   *0x3ee54(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    6da4:	5b                   	pop    %rbx
    6da5:	c3                   	retq   
    6da6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6dad:	00 00 00 

0000000000006db0 <core::ptr::drop_in_place>:
    6db0:	ff 25 6a f0 03 00    	jmpq   *0x3f06a(%rip)        # 45e20 <munmap@GLIBC_2.2.5>
    6db6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6dbd:	00 00 00 

0000000000006dc0 <core::ptr::drop_in_place>:
    6dc0:	41 57                	push   %r15
    6dc2:	41 56                	push   %r14
    6dc4:	53                   	push   %rbx
    6dc5:	48 89 fb             	mov    %rdi,%rbx
    6dc8:	80 7f 18 00          	cmpb   $0x0,0x18(%rdi)
    6dcc:	74 19                	je     6de7 <core::ptr::drop_in_place+0x27>
    6dce:	80 7b 19 00          	cmpb   $0x0,0x19(%rbx)
    6dd2:	75 13                	jne    6de7 <core::ptr::drop_in_place+0x27>
    6dd4:	48 89 df             	mov    %rbx,%rdi
    6dd7:	e8 64 d6 00 00       	callq  14440 <std::io::buffered::BufWriter<W>::flush_buf>
    6ddc:	49 89 d6             	mov    %rdx,%r14
    6ddf:	3c 03                	cmp    $0x3,%al
    6de1:	77 25                	ja     6e08 <core::ptr::drop_in_place+0x48>
    6de3:	3c 02                	cmp    $0x2,%al
    6de5:	74 21                	je     6e08 <core::ptr::drop_in_place+0x48>
    6de7:	48 8b 3b             	mov    (%rbx),%rdi
    6dea:	48 85 ff             	test   %rdi,%rdi
    6ded:	74 57                	je     6e46 <core::ptr::drop_in_place+0x86>
    6def:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    6df3:	48 85 f6             	test   %rsi,%rsi
    6df6:	74 4e                	je     6e46 <core::ptr::drop_in_place+0x86>
    6df8:	ba 01 00 00 00       	mov    $0x1,%edx
    6dfd:	5b                   	pop    %rbx
    6dfe:	41 5e                	pop    %r14
    6e00:	41 5f                	pop    %r15
    6e02:	ff 25 f0 ed 03 00    	jmpq   *0x3edf0(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    6e08:	49 8b 3e             	mov    (%r14),%rdi
    6e0b:	49 8b 46 08          	mov    0x8(%r14),%rax
    6e0f:	ff 10                	callq  *(%rax)
    6e11:	49 8b 46 08          	mov    0x8(%r14),%rax
    6e15:	48 8b 70 08          	mov    0x8(%rax),%rsi
    6e19:	48 85 f6             	test   %rsi,%rsi
    6e1c:	74 0d                	je     6e2b <core::ptr::drop_in_place+0x6b>
    6e1e:	49 8b 3e             	mov    (%r14),%rdi
    6e21:	48 8b 50 10          	mov    0x10(%rax),%rdx
    6e25:	ff 15 cd ed 03 00    	callq  *0x3edcd(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    6e2b:	be 18 00 00 00       	mov    $0x18,%esi
    6e30:	ba 08 00 00 00       	mov    $0x8,%edx
    6e35:	4c 89 f7             	mov    %r14,%rdi
    6e38:	ff 15 ba ed 03 00    	callq  *0x3edba(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    6e3e:	48 8b 3b             	mov    (%rbx),%rdi
    6e41:	48 85 ff             	test   %rdi,%rdi
    6e44:	75 a9                	jne    6def <core::ptr::drop_in_place+0x2f>
    6e46:	5b                   	pop    %rbx
    6e47:	41 5e                	pop    %r14
    6e49:	41 5f                	pop    %r15
    6e4b:	c3                   	retq   
    6e4c:	49 89 c7             	mov    %rax,%r15
    6e4f:	49 8b 3e             	mov    (%r14),%rdi
    6e52:	49 8b 76 08          	mov    0x8(%r14),%rsi
    6e56:	e8 75 2b 00 00       	callq  99d0 <alloc::alloc::box_free>
    6e5b:	4c 89 f7             	mov    %r14,%rdi
    6e5e:	e8 8d 2b 00 00       	callq  99f0 <alloc::alloc::box_free>
    6e63:	eb 03                	jmp    6e68 <core::ptr::drop_in_place+0xa8>
    6e65:	49 89 c7             	mov    %rax,%r15
    6e68:	48 89 df             	mov    %rbx,%rdi
    6e6b:	e8 c0 f9 ff ff       	callq  6830 <core::ptr::drop_in_place>
    6e70:	4c 89 ff             	mov    %r15,%rdi
    6e73:	e8 d8 e1 ff ff       	callq  5050 <_Unwind_Resume@plt>
    6e78:	0f 0b                	ud2    
    6e7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000006e80 <core::ptr::drop_in_place>:
    6e80:	41 57                	push   %r15
    6e82:	41 56                	push   %r14
    6e84:	41 54                	push   %r12
    6e86:	53                   	push   %rbx
    6e87:	50                   	push   %rax
    6e88:	49 89 fe             	mov    %rdi,%r14
    6e8b:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    6e8f:	48 85 f6             	test   %rsi,%rsi
    6e92:	74 19                	je     6ead <core::ptr::drop_in_place+0x2d>
    6e94:	49 8b 3e             	mov    (%r14),%rdi
    6e97:	48 85 ff             	test   %rdi,%rdi
    6e9a:	74 11                	je     6ead <core::ptr::drop_in_place+0x2d>
    6e9c:	48 c1 e6 05          	shl    $0x5,%rsi
    6ea0:	74 0b                	je     6ead <core::ptr::drop_in_place+0x2d>
    6ea2:	ba 08 00 00 00       	mov    $0x8,%edx
    6ea7:	ff 15 4b ed 03 00    	callq  *0x3ed4b(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    6ead:	49 8d 7e 18          	lea    0x18(%r14),%rdi
    6eb1:	e8 ca f6 ff ff       	callq  6580 <core::ptr::drop_in_place>
    6eb6:	49 8b 86 48 01 00 00 	mov    0x148(%r14),%rax
    6ebd:	48 85 c0             	test   %rax,%rax
    6ec0:	74 24                	je     6ee6 <core::ptr::drop_in_place+0x66>
    6ec2:	49 8b be 40 01 00 00 	mov    0x140(%r14),%rdi
    6ec9:	48 85 ff             	test   %rdi,%rdi
    6ecc:	74 18                	je     6ee6 <core::ptr::drop_in_place+0x66>
    6ece:	48 c1 e0 03          	shl    $0x3,%rax
    6ed2:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
    6ed6:	48 85 f6             	test   %rsi,%rsi
    6ed9:	74 0b                	je     6ee6 <core::ptr::drop_in_place+0x66>
    6edb:	ba 08 00 00 00       	mov    $0x8,%edx
    6ee0:	ff 15 12 ed 03 00    	callq  *0x3ed12(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    6ee6:	49 8b be 58 01 00 00 	mov    0x158(%r14),%rdi
    6eed:	49 8b b6 60 01 00 00 	mov    0x160(%r14),%rsi
    6ef4:	ff 15 26 ef 03 00    	callq  *0x3ef26(%rip)        # 45e20 <munmap@GLIBC_2.2.5>
    6efa:	49 8b 9e 68 01 00 00 	mov    0x168(%r14),%rbx
    6f01:	49 8b 86 78 01 00 00 	mov    0x178(%r14),%rax
    6f08:	48 85 c0             	test   %rax,%rax
    6f0b:	74 3e                	je     6f4b <core::ptr::drop_in_place+0xcb>
    6f0d:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    6f11:	4c 8d 3c c3          	lea    (%rbx,%rax,8),%r15
    6f15:	4c 8d 25 24 e5 ff ff 	lea    -0x1adc(%rip),%r12        # 5440 <__rust_dealloc>
    6f1c:	eb 0b                	jmp    6f29 <core::ptr::drop_in_place+0xa9>
    6f1e:	66 90                	xchg   %ax,%ax
    6f20:	48 83 c3 18          	add    $0x18,%rbx
    6f24:	4c 39 fb             	cmp    %r15,%rbx
    6f27:	74 1b                	je     6f44 <core::ptr::drop_in_place+0xc4>
    6f29:	48 8b 3b             	mov    (%rbx),%rdi
    6f2c:	48 85 ff             	test   %rdi,%rdi
    6f2f:	74 ef                	je     6f20 <core::ptr::drop_in_place+0xa0>
    6f31:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    6f35:	48 85 f6             	test   %rsi,%rsi
    6f38:	74 e6                	je     6f20 <core::ptr::drop_in_place+0xa0>
    6f3a:	ba 01 00 00 00       	mov    $0x1,%edx
    6f3f:	41 ff d4             	callq  *%r12
    6f42:	eb dc                	jmp    6f20 <core::ptr::drop_in_place+0xa0>
    6f44:	49 8b 9e 68 01 00 00 	mov    0x168(%r14),%rbx
    6f4b:	49 8b 86 70 01 00 00 	mov    0x170(%r14),%rax
    6f52:	48 85 c0             	test   %rax,%rax
    6f55:	74 2b                	je     6f82 <core::ptr::drop_in_place+0x102>
    6f57:	48 85 db             	test   %rbx,%rbx
    6f5a:	74 26                	je     6f82 <core::ptr::drop_in_place+0x102>
    6f5c:	48 c1 e0 03          	shl    $0x3,%rax
    6f60:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
    6f64:	48 85 f6             	test   %rsi,%rsi
    6f67:	74 19                	je     6f82 <core::ptr::drop_in_place+0x102>
    6f69:	ba 08 00 00 00       	mov    $0x8,%edx
    6f6e:	48 89 df             	mov    %rbx,%rdi
    6f71:	48 83 c4 08          	add    $0x8,%rsp
    6f75:	5b                   	pop    %rbx
    6f76:	41 5c                	pop    %r12
    6f78:	41 5e                	pop    %r14
    6f7a:	41 5f                	pop    %r15
    6f7c:	ff 25 76 ec 03 00    	jmpq   *0x3ec76(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    6f82:	48 83 c4 08          	add    $0x8,%rsp
    6f86:	5b                   	pop    %rbx
    6f87:	41 5c                	pop    %r12
    6f89:	41 5e                	pop    %r14
    6f8b:	41 5f                	pop    %r15
    6f8d:	c3                   	retq   
    6f8e:	48 89 c3             	mov    %rax,%rbx
    6f91:	49 8d be 00 01 00 00 	lea    0x100(%r14),%rdi
    6f98:	e8 b3 05 00 00       	callq  7550 <core::ptr::drop_in_place>
    6f9d:	49 8b be 58 01 00 00 	mov    0x158(%r14),%rdi
    6fa4:	49 8b b6 60 01 00 00 	mov    0x160(%r14),%rsi
    6fab:	e8 00 fe ff ff       	callq  6db0 <core::ptr::drop_in_place>
    6fb0:	49 81 c6 68 01 00 00 	add    $0x168,%r14
    6fb7:	4c 89 f7             	mov    %r14,%rdi
    6fba:	e8 61 f7 ff ff       	callq  6720 <core::ptr::drop_in_place>
    6fbf:	48 89 df             	mov    %rbx,%rdi
    6fc2:	e8 89 e0 ff ff       	callq  5050 <_Unwind_Resume@plt>
    6fc7:	0f 0b                	ud2    
    6fc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000006fd0 <core::ptr::drop_in_place>:
    6fd0:	41 57                	push   %r15
    6fd2:	41 56                	push   %r14
    6fd4:	53                   	push   %rbx
    6fd5:	80 3f 02             	cmpb   $0x2,(%rdi)
    6fd8:	73 06                	jae    6fe0 <core::ptr::drop_in_place+0x10>
    6fda:	5b                   	pop    %rbx
    6fdb:	41 5e                	pop    %r14
    6fdd:	41 5f                	pop    %r15
    6fdf:	c3                   	retq   
    6fe0:	49 89 ff             	mov    %rdi,%r15
    6fe3:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
    6fe7:	48 8b 3b             	mov    (%rbx),%rdi
    6fea:	48 8b 43 08          	mov    0x8(%rbx),%rax
    6fee:	ff 10                	callq  *(%rax)
    6ff0:	48 8b 43 08          	mov    0x8(%rbx),%rax
    6ff4:	48 8b 70 08          	mov    0x8(%rax),%rsi
    6ff8:	48 85 f6             	test   %rsi,%rsi
    6ffb:	74 0d                	je     700a <core::ptr::drop_in_place+0x3a>
    6ffd:	48 8b 3b             	mov    (%rbx),%rdi
    7000:	48 8b 50 10          	mov    0x10(%rax),%rdx
    7004:	ff 15 ee eb 03 00    	callq  *0x3ebee(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    700a:	49 8b 7f 08          	mov    0x8(%r15),%rdi
    700e:	be 18 00 00 00       	mov    $0x18,%esi
    7013:	ba 08 00 00 00       	mov    $0x8,%edx
    7018:	5b                   	pop    %rbx
    7019:	41 5e                	pop    %r14
    701b:	41 5f                	pop    %r15
    701d:	ff 25 d5 eb 03 00    	jmpq   *0x3ebd5(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    7023:	49 89 c6             	mov    %rax,%r14
    7026:	48 8b 3b             	mov    (%rbx),%rdi
    7029:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    702d:	e8 9e 29 00 00       	callq  99d0 <alloc::alloc::box_free>
    7032:	49 8b 7f 08          	mov    0x8(%r15),%rdi
    7036:	e8 b5 29 00 00       	callq  99f0 <alloc::alloc::box_free>
    703b:	4c 89 f7             	mov    %r14,%rdi
    703e:	e8 0d e0 ff ff       	callq  5050 <_Unwind_Resume@plt>
    7043:	0f 0b                	ud2    
    7045:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    704c:	00 00 00 
    704f:	90                   	nop

0000000000007050 <core::ptr::drop_in_place>:
    7050:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    7054:	48 85 f6             	test   %rsi,%rsi
    7057:	74 19                	je     7072 <core::ptr::drop_in_place+0x22>
    7059:	48 8b 3f             	mov    (%rdi),%rdi
    705c:	48 85 ff             	test   %rdi,%rdi
    705f:	74 11                	je     7072 <core::ptr::drop_in_place+0x22>
    7061:	48 c1 e6 06          	shl    $0x6,%rsi
    7065:	74 0b                	je     7072 <core::ptr::drop_in_place+0x22>
    7067:	ba 08 00 00 00       	mov    $0x8,%edx
    706c:	ff 25 86 eb 03 00    	jmpq   *0x3eb86(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    7072:	c3                   	retq   
    7073:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    707a:	00 00 00 
    707d:	0f 1f 00             	nopl   (%rax)

0000000000007080 <core::ptr::drop_in_place>:
    7080:	41 56                	push   %r14
    7082:	53                   	push   %rbx
    7083:	50                   	push   %rax
    7084:	48 89 fb             	mov    %rdi,%rbx
    7087:	48 83 c7 40          	add    $0x40,%rdi
    708b:	e8 d0 ed ff ff       	callq  5e60 <core::ptr::drop_in_place>
    7090:	83 bb 60 01 00 00 2e 	cmpl   $0x2e,0x160(%rbx)
    7097:	75 1a                	jne    70b3 <core::ptr::drop_in_place+0x33>
    7099:	83 bb b0 01 00 00 02 	cmpl   $0x2,0x1b0(%rbx)
    70a0:	75 26                	jne    70c8 <core::ptr::drop_in_place+0x48>
    70a2:	83 bb d8 01 00 00 02 	cmpl   $0x2,0x1d8(%rbx)
    70a9:	75 32                	jne    70dd <core::ptr::drop_in_place+0x5d>
    70ab:	48 83 c4 08          	add    $0x8,%rsp
    70af:	5b                   	pop    %rbx
    70b0:	41 5e                	pop    %r14
    70b2:	c3                   	retq   
    70b3:	48 8d bb b8 00 00 00 	lea    0xb8(%rbx),%rdi
    70ba:	e8 f1 f8 ff ff       	callq  69b0 <core::ptr::drop_in_place>
    70bf:	83 bb b0 01 00 00 02 	cmpl   $0x2,0x1b0(%rbx)
    70c6:	74 da                	je     70a2 <core::ptr::drop_in_place+0x22>
    70c8:	48 8d bb b0 01 00 00 	lea    0x1b0(%rbx),%rdi
    70cf:	e8 3c f3 ff ff       	callq  6410 <core::ptr::drop_in_place>
    70d4:	83 bb d8 01 00 00 02 	cmpl   $0x2,0x1d8(%rbx)
    70db:	74 ce                	je     70ab <core::ptr::drop_in_place+0x2b>
    70dd:	48 81 c3 d8 01 00 00 	add    $0x1d8,%rbx
    70e4:	48 89 df             	mov    %rbx,%rdi
    70e7:	48 83 c4 08          	add    $0x8,%rsp
    70eb:	5b                   	pop    %rbx
    70ec:	41 5e                	pop    %r14
    70ee:	e9 6d 00 00 00       	jmpq   7160 <core::ptr::drop_in_place>
    70f3:	49 89 c6             	mov    %rax,%r14
    70f6:	48 8d bb b8 00 00 00 	lea    0xb8(%rbx),%rdi
    70fd:	e8 9e fa ff ff       	callq  6ba0 <core::ptr::drop_in_place>
    7102:	48 8d bb b0 01 00 00 	lea    0x1b0(%rbx),%rdi
    7109:	e8 42 f9 ff ff       	callq  6a50 <core::ptr::drop_in_place>
    710e:	48 81 c3 d8 01 00 00 	add    $0x1d8,%rbx
    7115:	48 89 df             	mov    %rbx,%rdi
    7118:	e8 e3 f2 ff ff       	callq  6400 <core::ptr::drop_in_place>
    711d:	4c 89 f7             	mov    %r14,%rdi
    7120:	e8 2b df ff ff       	callq  5050 <_Unwind_Resume@plt>
    7125:	0f 0b                	ud2    
    7127:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    712e:	00 00 

0000000000007130 <core::ptr::drop_in_place>:
    7130:	50                   	push   %rax
    7131:	40 84 ff             	test   %dil,%dil
    7134:	75 02                	jne    7138 <core::ptr::drop_in_place+0x8>
    7136:	58                   	pop    %rax
    7137:	c3                   	retq   
    7138:	48 8d 3d ac 10 03 00 	lea    0x310ac(%rip),%rdi        # 381eb <str.6+0xecb>
    713f:	48 8d 15 72 d3 03 00 	lea    0x3d372(%rip),%rdx        # 444b8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xf80>
    7146:	be 2a 00 00 00       	mov    $0x2a,%esi
    714b:	e8 b0 33 01 00       	callq  1a500 <std::panicking::begin_panic>
    7150:	0f 0b                	ud2    
    7152:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7159:	00 00 00 
    715c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007160 <core::ptr::drop_in_place>:
    7160:	41 57                	push   %r15
    7162:	41 56                	push   %r14
    7164:	41 55                	push   %r13
    7166:	41 54                	push   %r12
    7168:	53                   	push   %rbx
    7169:	48 83 3f 00          	cmpq   $0x0,(%rdi)
    716d:	74 0a                	je     7179 <core::ptr::drop_in_place+0x19>
    716f:	5b                   	pop    %rbx
    7170:	41 5c                	pop    %r12
    7172:	41 5d                	pop    %r13
    7174:	41 5e                	pop    %r14
    7176:	41 5f                	pop    %r15
    7178:	c3                   	retq   
    7179:	49 89 fe             	mov    %rdi,%r14
    717c:	48 8b 47 10          	mov    0x10(%rdi),%rax
    7180:	48 85 c0             	test   %rax,%rax
    7183:	0f 84 81 00 00 00    	je     720a <core::ptr::drop_in_place+0xaa>
    7189:	4d 8b 66 08          	mov    0x8(%r14),%r12
    718d:	48 c1 e0 03          	shl    $0x3,%rax
    7191:	4c 8d 3c c0          	lea    (%rax,%rax,8),%r15
    7195:	31 db                	xor    %ebx,%ebx
    7197:	4c 8d 2d a2 e2 ff ff 	lea    -0x1d5e(%rip),%r13        # 5440 <__rust_dealloc>
    719e:	eb 09                	jmp    71a9 <core::ptr::drop_in_place+0x49>
    71a0:	48 83 c3 48          	add    $0x48,%rbx
    71a4:	49 39 df             	cmp    %rbx,%r15
    71a7:	74 41                	je     71ea <core::ptr::drop_in_place+0x8a>
    71a9:	49 83 7c 1c 08 00    	cmpq   $0x0,0x8(%r12,%rbx,1)
    71af:	75 ef                	jne    71a0 <core::ptr::drop_in_place+0x40>
    71b1:	49 8b 44 1c 30       	mov    0x30(%r12,%rbx,1),%rax
    71b6:	48 c1 e0 03          	shl    $0x3,%rax
    71ba:	48 8d 34 80          	lea    (%rax,%rax,4),%rsi
    71be:	48 85 f6             	test   %rsi,%rsi
    71c1:	74 0d                	je     71d0 <core::ptr::drop_in_place+0x70>
    71c3:	49 8b 7c 1c 28       	mov    0x28(%r12,%rbx,1),%rdi
    71c8:	ba 08 00 00 00       	mov    $0x8,%edx
    71cd:	41 ff d5             	callq  *%r13
    71d0:	49 8b 74 1c 40       	mov    0x40(%r12,%rbx,1),%rsi
    71d5:	48 c1 e6 05          	shl    $0x5,%rsi
    71d9:	74 c5                	je     71a0 <core::ptr::drop_in_place+0x40>
    71db:	49 8b 7c 1c 38       	mov    0x38(%r12,%rbx,1),%rdi
    71e0:	ba 08 00 00 00       	mov    $0x8,%edx
    71e5:	41 ff d5             	callq  *%r13
    71e8:	eb b6                	jmp    71a0 <core::ptr::drop_in_place+0x40>
    71ea:	49 8b 46 10          	mov    0x10(%r14),%rax
    71ee:	48 c1 e0 03          	shl    $0x3,%rax
    71f2:	48 8d 34 c0          	lea    (%rax,%rax,8),%rsi
    71f6:	48 85 f6             	test   %rsi,%rsi
    71f9:	74 0f                	je     720a <core::ptr::drop_in_place+0xaa>
    71fb:	49 8b 7e 08          	mov    0x8(%r14),%rdi
    71ff:	ba 08 00 00 00       	mov    $0x8,%edx
    7204:	ff 15 ee e9 03 00    	callq  *0x3e9ee(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    720a:	49 8b 46 20          	mov    0x20(%r14),%rax
    720e:	48 c1 e0 03          	shl    $0x3,%rax
    7212:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
    7216:	48 85 f6             	test   %rsi,%rsi
    7219:	0f 84 50 ff ff ff    	je     716f <core::ptr::drop_in_place+0xf>
    721f:	49 8b 7e 18          	mov    0x18(%r14),%rdi
    7223:	ba 08 00 00 00       	mov    $0x8,%edx
    7228:	5b                   	pop    %rbx
    7229:	41 5c                	pop    %r12
    722b:	41 5d                	pop    %r13
    722d:	41 5e                	pop    %r14
    722f:	41 5f                	pop    %r15
    7231:	ff 25 c1 e9 03 00    	jmpq   *0x3e9c1(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    7237:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    723e:	00 00 

0000000000007240 <core::ptr::drop_in_place>:
    7240:	48 8b 07             	mov    (%rdi),%rax
    7243:	48 83 40 08 01       	addq   $0x1,0x8(%rax)
    7248:	c3                   	retq   
    7249:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000007250 <core::ptr::drop_in_place>:
    7250:	53                   	push   %rbx
    7251:	48 83 7f 08 00       	cmpq   $0x0,0x8(%rdi)
    7256:	74 02                	je     725a <core::ptr::drop_in_place+0xa>
    7258:	5b                   	pop    %rbx
    7259:	c3                   	retq   
    725a:	48 89 fb             	mov    %rdi,%rbx
    725d:	48 8b 47 30          	mov    0x30(%rdi),%rax
    7261:	48 c1 e0 03          	shl    $0x3,%rax
    7265:	48 8d 34 80          	lea    (%rax,%rax,4),%rsi
    7269:	48 85 f6             	test   %rsi,%rsi
    726c:	74 0f                	je     727d <core::ptr::drop_in_place+0x2d>
    726e:	48 8b 7b 28          	mov    0x28(%rbx),%rdi
    7272:	ba 08 00 00 00       	mov    $0x8,%edx
    7277:	ff 15 7b e9 03 00    	callq  *0x3e97b(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    727d:	48 8b 73 40          	mov    0x40(%rbx),%rsi
    7281:	48 c1 e6 05          	shl    $0x5,%rsi
    7285:	74 d1                	je     7258 <core::ptr::drop_in_place+0x8>
    7287:	48 8b 7b 38          	mov    0x38(%rbx),%rdi
    728b:	ba 08 00 00 00       	mov    $0x8,%edx
    7290:	5b                   	pop    %rbx
    7291:	ff 25 61 e9 03 00    	jmpq   *0x3e961(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    7297:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    729e:	00 00 

00000000000072a0 <core::ptr::drop_in_place>:
    72a0:	48 8b 47 08          	mov    0x8(%rdi),%rax
    72a4:	48 85 c0             	test   %rax,%rax
    72a7:	74 20                	je     72c9 <core::ptr::drop_in_place+0x29>
    72a9:	48 8b 3f             	mov    (%rdi),%rdi
    72ac:	48 85 ff             	test   %rdi,%rdi
    72af:	74 18                	je     72c9 <core::ptr::drop_in_place+0x29>
    72b1:	48 c1 e0 03          	shl    $0x3,%rax
    72b5:	48 8d 34 80          	lea    (%rax,%rax,4),%rsi
    72b9:	48 85 f6             	test   %rsi,%rsi
    72bc:	74 0b                	je     72c9 <core::ptr::drop_in_place+0x29>
    72be:	ba 08 00 00 00       	mov    $0x8,%edx
    72c3:	ff 25 2f e9 03 00    	jmpq   *0x3e92f(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    72c9:	c3                   	retq   
    72ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000072d0 <core::ptr::drop_in_place>:
    72d0:	55                   	push   %rbp
    72d1:	41 57                	push   %r15
    72d3:	41 56                	push   %r14
    72d5:	41 55                	push   %r13
    72d7:	41 54                	push   %r12
    72d9:	53                   	push   %rbx
    72da:	50                   	push   %rax
    72db:	49 89 fe             	mov    %rdi,%r14
    72de:	48 89 3c 24          	mov    %rdi,(%rsp)
    72e2:	48 8b 5f 10          	mov    0x10(%rdi),%rbx
    72e6:	4c 8b 67 18          	mov    0x18(%rdi),%r12
    72ea:	4d 89 e7             	mov    %r12,%r15
    72ed:	49 29 df             	sub    %rbx,%r15
    72f0:	74 57                	je     7349 <core::ptr::drop_in_place+0x79>
    72f2:	49 c1 ff 04          	sar    $0x4,%r15
    72f6:	49 c1 e7 04          	shl    $0x4,%r15
    72fa:	49 83 c7 f0          	add    $0xfffffffffffffff0,%r15
    72fe:	48 83 c3 10          	add    $0x10,%rbx
    7302:	4c 8d 2d 37 e1 ff ff 	lea    -0x1ec9(%rip),%r13        # 5440 <__rust_dealloc>
    7309:	eb 16                	jmp    7321 <core::ptr::drop_in_place+0x51>
    730b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7310:	49 83 c7 f0          	add    $0xfffffffffffffff0,%r15
    7314:	48 83 c3 10          	add    $0x10,%rbx
    7318:	48 83 c5 10          	add    $0x10,%rbp
    731c:	4c 39 e5             	cmp    %r12,%rbp
    731f:	74 28                	je     7349 <core::ptr::drop_in_place+0x79>
    7321:	48 8b 7b f0          	mov    -0x10(%rbx),%rdi
    7325:	48 8b 43 f8          	mov    -0x8(%rbx),%rax
    7329:	ff 10                	callq  *(%rax)
    732b:	48 8d 6b f0          	lea    -0x10(%rbx),%rbp
    732f:	48 8b 45 08          	mov    0x8(%rbp),%rax
    7333:	48 8b 70 08          	mov    0x8(%rax),%rsi
    7337:	48 85 f6             	test   %rsi,%rsi
    733a:	74 d4                	je     7310 <core::ptr::drop_in_place+0x40>
    733c:	48 8b 7b f0          	mov    -0x10(%rbx),%rdi
    7340:	48 8b 50 10          	mov    0x10(%rax),%rdx
    7344:	41 ff d5             	callq  *%r13
    7347:	eb c7                	jmp    7310 <core::ptr::drop_in_place+0x40>
    7349:	49 8b 76 08          	mov    0x8(%r14),%rsi
    734d:	48 85 f6             	test   %rsi,%rsi
    7350:	74 14                	je     7366 <core::ptr::drop_in_place+0x96>
    7352:	48 c1 e6 04          	shl    $0x4,%rsi
    7356:	74 0e                	je     7366 <core::ptr::drop_in_place+0x96>
    7358:	49 8b 3e             	mov    (%r14),%rdi
    735b:	ba 08 00 00 00       	mov    $0x8,%edx
    7360:	ff 15 92 e8 03 00    	callq  *0x3e892(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    7366:	48 83 c4 08          	add    $0x8,%rsp
    736a:	5b                   	pop    %rbx
    736b:	41 5c                	pop    %r12
    736d:	41 5d                	pop    %r13
    736f:	41 5e                	pop    %r14
    7371:	41 5f                	pop    %r15
    7373:	5d                   	pop    %rbp
    7374:	c3                   	retq   
    7375:	49 89 c6             	mov    %rax,%r14
    7378:	48 8b 7b f0          	mov    -0x10(%rbx),%rdi
    737c:	48 8b 73 f8          	mov    -0x8(%rbx),%rsi
    7380:	e8 4b 26 00 00       	callq  99d0 <alloc::alloc::box_free>
    7385:	4d 85 ff             	test   %r15,%r15
    7388:	74 12                	je     739c <core::ptr::drop_in_place+0xcc>
    738a:	48 89 df             	mov    %rbx,%rdi
    738d:	e8 9e ee ff ff       	callq  6230 <core::ptr::drop_in_place>
    7392:	48 83 c3 10          	add    $0x10,%rbx
    7396:	49 83 c7 f0          	add    $0xfffffffffffffff0,%r15
    739a:	75 ee                	jne    738a <core::ptr::drop_in_place+0xba>
    739c:	48 89 e7             	mov    %rsp,%rdi
    739f:	e8 6c f9 ff ff       	callq  6d10 <core::ptr::drop_in_place>
    73a4:	4c 89 f7             	mov    %r14,%rdi
    73a7:	e8 a4 dc ff ff       	callq  5050 <_Unwind_Resume@plt>
    73ac:	0f 0b                	ud2    
    73ae:	49 89 c6             	mov    %rax,%r14
    73b1:	eb e9                	jmp    739c <core::ptr::drop_in_place+0xcc>
    73b3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    73ba:	00 00 00 
    73bd:	0f 1f 00             	nopl   (%rax)

00000000000073c0 <core::ptr::drop_in_place>:
    73c0:	41 56                	push   %r14
    73c2:	53                   	push   %rbx
    73c3:	50                   	push   %rax
    73c4:	48 89 fb             	mov    %rdi,%rbx
    73c7:	48 83 c7 38          	add    $0x38,%rdi
    73cb:	e8 90 ea ff ff       	callq  5e60 <core::ptr::drop_in_place>
    73d0:	83 bb 58 01 00 00 2e 	cmpl   $0x2e,0x158(%rbx)
    73d7:	75 08                	jne    73e1 <core::ptr::drop_in_place+0x21>
    73d9:	48 83 c4 08          	add    $0x8,%rsp
    73dd:	5b                   	pop    %rbx
    73de:	41 5e                	pop    %r14
    73e0:	c3                   	retq   
    73e1:	48 81 c3 b0 00 00 00 	add    $0xb0,%rbx
    73e8:	48 89 df             	mov    %rbx,%rdi
    73eb:	48 83 c4 08          	add    $0x8,%rsp
    73ef:	5b                   	pop    %rbx
    73f0:	41 5e                	pop    %r14
    73f2:	e9 b9 f5 ff ff       	jmpq   69b0 <core::ptr::drop_in_place>
    73f7:	49 89 c6             	mov    %rax,%r14
    73fa:	48 81 c3 b0 00 00 00 	add    $0xb0,%rbx
    7401:	48 89 df             	mov    %rbx,%rdi
    7404:	e8 97 f7 ff ff       	callq  6ba0 <core::ptr::drop_in_place>
    7409:	4c 89 f7             	mov    %r14,%rdi
    740c:	e8 3f dc ff ff       	callq  5050 <_Unwind_Resume@plt>
    7411:	0f 0b                	ud2    
    7413:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    741a:	00 00 00 
    741d:	0f 1f 00             	nopl   (%rax)

0000000000007420 <core::ptr::drop_in_place>:
    7420:	48 8b 07             	mov    (%rdi),%rax
    7423:	48 85 c0             	test   %rax,%rax
    7426:	74 0c                	je     7434 <core::ptr::drop_in_place+0x14>
    7428:	f0 48 83 28 01       	lock subq $0x1,(%rax)
    742d:	75 05                	jne    7434 <core::ptr::drop_in_place+0x14>
    742f:	e9 4c 25 00 00       	jmpq   9980 <alloc::sync::Arc<T>::drop_slow>
    7434:	c3                   	retq   
    7435:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    743c:	00 00 00 
    743f:	90                   	nop

0000000000007440 <core::ptr::drop_in_place>:
    7440:	48 85 f6             	test   %rsi,%rsi
    7443:	74 20                	je     7465 <core::ptr::drop_in_place+0x25>
    7445:	48 85 ff             	test   %rdi,%rdi
    7448:	74 1b                	je     7465 <core::ptr::drop_in_place+0x25>
    744a:	48 89 f0             	mov    %rsi,%rax
    744d:	48 c1 e0 09          	shl    $0x9,%rax
    7451:	48 8d 34 f0          	lea    (%rax,%rsi,8),%rsi
    7455:	48 85 f6             	test   %rsi,%rsi
    7458:	74 0b                	je     7465 <core::ptr::drop_in_place+0x25>
    745a:	ba 08 00 00 00       	mov    $0x8,%edx
    745f:	ff 25 93 e7 03 00    	jmpq   *0x3e793(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    7465:	c3                   	retq   
    7466:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    746d:	00 00 00 

0000000000007470 <core::ptr::drop_in_place>:
    7470:	41 57                	push   %r15
    7472:	41 56                	push   %r14
    7474:	53                   	push   %rbx
    7475:	48 89 fb             	mov    %rdi,%rbx
    7478:	8a 07                	mov    (%rdi),%al
    747a:	3c 03                	cmp    $0x3,%al
    747c:	77 0a                	ja     7488 <core::ptr::drop_in_place+0x18>
    747e:	3c 02                	cmp    $0x2,%al
    7480:	74 06                	je     7488 <core::ptr::drop_in_place+0x18>
    7482:	5b                   	pop    %rbx
    7483:	41 5e                	pop    %r14
    7485:	41 5f                	pop    %r15
    7487:	c3                   	retq   
    7488:	4c 8b 7b 08          	mov    0x8(%rbx),%r15
    748c:	49 8b 3f             	mov    (%r15),%rdi
    748f:	49 8b 47 08          	mov    0x8(%r15),%rax
    7493:	ff 10                	callq  *(%rax)
    7495:	49 8b 47 08          	mov    0x8(%r15),%rax
    7499:	48 8b 70 08          	mov    0x8(%rax),%rsi
    749d:	48 85 f6             	test   %rsi,%rsi
    74a0:	74 0d                	je     74af <core::ptr::drop_in_place+0x3f>
    74a2:	49 8b 3f             	mov    (%r15),%rdi
    74a5:	48 8b 50 10          	mov    0x10(%rax),%rdx
    74a9:	ff 15 49 e7 03 00    	callq  *0x3e749(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    74af:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    74b3:	be 18 00 00 00       	mov    $0x18,%esi
    74b8:	ba 08 00 00 00       	mov    $0x8,%edx
    74bd:	5b                   	pop    %rbx
    74be:	41 5e                	pop    %r14
    74c0:	41 5f                	pop    %r15
    74c2:	ff 25 30 e7 03 00    	jmpq   *0x3e730(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    74c8:	49 89 c6             	mov    %rax,%r14
    74cb:	49 8b 3f             	mov    (%r15),%rdi
    74ce:	49 8b 77 08          	mov    0x8(%r15),%rsi
    74d2:	e8 f9 24 00 00       	callq  99d0 <alloc::alloc::box_free>
    74d7:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    74db:	e8 10 25 00 00       	callq  99f0 <alloc::alloc::box_free>
    74e0:	4c 89 f7             	mov    %r14,%rdi
    74e3:	e8 68 db ff ff       	callq  5050 <_Unwind_Resume@plt>
    74e8:	0f 0b                	ud2    
    74ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000074f0 <core::ptr::drop_in_place>:
    74f0:	48 8b 47 18          	mov    0x18(%rdi),%rax
    74f4:	48 c1 e0 03          	shl    $0x3,%rax
    74f8:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
    74fc:	48 85 f6             	test   %rsi,%rsi
    74ff:	74 0f                	je     7510 <core::ptr::drop_in_place+0x20>
    7501:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    7505:	ba 08 00 00 00       	mov    $0x8,%edx
    750a:	ff 25 e8 e6 03 00    	jmpq   *0x3e6e8(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    7510:	c3                   	retq   
    7511:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7518:	00 00 00 
    751b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007520 <core::ptr::drop_in_place>:
    7520:	48 85 f6             	test   %rsi,%rsi
    7523:	74 1c                	je     7541 <core::ptr::drop_in_place+0x21>
    7525:	48 85 ff             	test   %rdi,%rdi
    7528:	74 17                	je     7541 <core::ptr::drop_in_place+0x21>
    752a:	48 69 f6 88 01 00 00 	imul   $0x188,%rsi,%rsi
    7531:	48 85 f6             	test   %rsi,%rsi
    7534:	74 0b                	je     7541 <core::ptr::drop_in_place+0x21>
    7536:	ba 08 00 00 00       	mov    $0x8,%edx
    753b:	ff 25 b7 e6 03 00    	jmpq   *0x3e6b7(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    7541:	c3                   	retq   
    7542:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7549:	00 00 00 
    754c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007550 <core::ptr::drop_in_place>:
    7550:	48 8b 47 48          	mov    0x48(%rdi),%rax
    7554:	48 85 c0             	test   %rax,%rax
    7557:	74 21                	je     757a <core::ptr::drop_in_place+0x2a>
    7559:	48 8b 7f 40          	mov    0x40(%rdi),%rdi
    755d:	48 85 ff             	test   %rdi,%rdi
    7560:	74 18                	je     757a <core::ptr::drop_in_place+0x2a>
    7562:	48 c1 e0 03          	shl    $0x3,%rax
    7566:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
    756a:	48 85 f6             	test   %rsi,%rsi
    756d:	74 0b                	je     757a <core::ptr::drop_in_place+0x2a>
    756f:	ba 08 00 00 00       	mov    $0x8,%edx
    7574:	ff 25 7e e6 03 00    	jmpq   *0x3e67e(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    757a:	c3                   	retq   
    757b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007580 <core::str::<impl str>::contains>:
    7580:	55                   	push   %rbp
    7581:	41 57                	push   %r15
    7583:	41 56                	push   %r14
    7585:	41 55                	push   %r13
    7587:	41 54                	push   %r12
    7589:	53                   	push   %rbx
    758a:	48 83 ec 78          	sub    $0x78,%rsp
    758e:	49 89 c8             	mov    %rcx,%r8
    7591:	48 89 d1             	mov    %rdx,%rcx
    7594:	48 89 f2             	mov    %rsi,%rdx
    7597:	48 89 fe             	mov    %rdi,%rsi
    759a:	48 89 e7             	mov    %rsp,%rdi
    759d:	ff 15 ad e7 03 00    	callq  *0x3e7ad(%rip)        # 45d50 <_GLOBAL_OFFSET_TABLE_+0x3c8>
    75a3:	83 7c 24 20 01       	cmpl   $0x1,0x20(%rsp)
    75a8:	0f 85 37 01 00 00    	jne    76e5 <core::str::<impl str>::contains+0x165>
    75ae:	4c 8b 5c 24 58       	mov    0x58(%rsp),%r11
    75b3:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    75b8:	4d 8d 48 ff          	lea    -0x1(%r8),%r9
    75bc:	4c 8b 14 24          	mov    (%rsp),%r10
    75c0:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    75c5:	4c 8b 6c 24 10       	mov    0x10(%rsp),%r13
    75ca:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
    75cf:	49 8d 04 38          	lea    (%r8,%rdi,1),%rax
    75d3:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    75d7:	49 83 fb ff          	cmp    $0xffffffffffffffff,%r11
    75db:	0f 84 36 02 00 00    	je     7817 <core::str::<impl str>::contains+0x297>
    75e1:	48 39 f0             	cmp    %rsi,%rax
    75e4:	0f 83 4d 02 00 00    	jae    7837 <core::str::<impl str>::contains+0x2b7>
    75ea:	4c 8b 74 24 40       	mov    0x40(%rsp),%r14
    75ef:	48 8b 5c 24 28       	mov    0x28(%rsp),%rbx
    75f4:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    75f9:	4c 89 c2             	mov    %r8,%rdx
    75fc:	48 89 4c 24 70       	mov    %rcx,0x70(%rsp)
    7601:	48 29 ca             	sub    %rcx,%rdx
    7604:	48 89 54 24 68       	mov    %rdx,0x68(%rsp)
    7609:	49 89 dc             	mov    %rbx,%r12
    760c:	49 f7 dc             	neg    %r12
    760f:	90                   	nop
    7610:	41 0f b6 04 02       	movzbl (%r10,%rax,1),%eax
    7615:	49 0f a3 c6          	bt     %rax,%r14
    7619:	73 45                	jae    7660 <core::str::<impl str>::contains+0xe0>
    761b:	4c 39 db             	cmp    %r11,%rbx
    761e:	4c 89 d9             	mov    %r11,%rcx
    7621:	48 0f 47 cb          	cmova  %rbx,%rcx
    7625:	49 8d 04 3a          	lea    (%r10,%rdi,1),%rax
    7629:	48 89 cd             	mov    %rcx,%rbp
    762c:	0f 1f 40 00          	nopl   0x0(%rax)
    7630:	4c 39 c5             	cmp    %r8,%rbp
    7633:	73 4b                	jae    7680 <core::str::<impl str>::contains+0x100>
    7635:	48 8d 14 2f          	lea    (%rdi,%rbp,1),%rdx
    7639:	48 39 f2             	cmp    %rsi,%rdx
    763c:	0f 83 02 03 00 00    	jae    7944 <core::str::<impl str>::contains+0x3c4>
    7642:	4c 8d 7d 01          	lea    0x1(%rbp),%r15
    7646:	41 0f b6 54 2d 00    	movzbl 0x0(%r13,%rbp,1),%edx
    764c:	3a 14 28             	cmp    (%rax,%rbp,1),%dl
    764f:	4c 89 fd             	mov    %r15,%rbp
    7652:	74 dc                	je     7630 <core::str::<impl str>::contains+0xb0>
    7654:	4c 01 e7             	add    %r12,%rdi
    7657:	4c 01 ff             	add    %r15,%rdi
    765a:	e9 04 00 00 00       	jmpq   7663 <core::str::<impl str>::contains+0xe3>
    765f:	90                   	nop
    7660:	4c 01 c7             	add    %r8,%rdi
    7663:	45 31 db             	xor    %r11d,%r11d
    7666:	4a 8d 04 0f          	lea    (%rdi,%r9,1),%rax
    766a:	48 39 f0             	cmp    %rsi,%rax
    766d:	72 a1                	jb     7610 <core::str::<impl str>::contains+0x90>
    766f:	eb 65                	jmp    76d6 <core::str::<impl str>::contains+0x156>
    7671:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7678:	00 00 00 
    767b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7680:	48 89 d9             	mov    %rbx,%rcx
    7683:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    768a:	00 00 00 
    768d:	0f 1f 00             	nopl   (%rax)
    7690:	49 39 cb             	cmp    %rcx,%r11
    7693:	0f 83 7f 02 00 00    	jae    7918 <core::str::<impl str>::contains+0x398>
    7699:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
    769d:	4c 39 c1             	cmp    %r8,%rcx
    76a0:	0f 83 ba 02 00 00    	jae    7960 <core::str::<impl str>::contains+0x3e0>
    76a6:	48 8d 04 39          	lea    (%rcx,%rdi,1),%rax
    76aa:	48 39 f0             	cmp    %rsi,%rax
    76ad:	0f 83 c2 02 00 00    	jae    7975 <core::str::<impl str>::contains+0x3f5>
    76b3:	41 0f b6 54 0d 00    	movzbl 0x0(%r13,%rcx,1),%edx
    76b9:	41 3a 14 02          	cmp    (%r10,%rax,1),%dl
    76bd:	74 d1                	je     7690 <core::str::<impl str>::contains+0x110>
    76bf:	48 03 7c 24 70       	add    0x70(%rsp),%rdi
    76c4:	4c 8b 5c 24 68       	mov    0x68(%rsp),%r11
    76c9:	4a 8d 04 0f          	lea    (%rdi,%r9,1),%rax
    76cd:	48 39 f0             	cmp    %rsi,%rax
    76d0:	0f 82 3a ff ff ff    	jb     7610 <core::str::<impl str>::contains+0x90>
    76d6:	4c 89 5c 24 58       	mov    %r11,0x58(%rsp)
    76db:	48 89 7c 24 48       	mov    %rdi,0x48(%rsp)
    76e0:	e9 52 01 00 00       	jmpq   7837 <core::str::<impl str>::contains+0x2b7>
    76e5:	48 8b 3c 24          	mov    (%rsp),%rdi
    76e9:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    76ee:	4c 8d 04 0f          	lea    (%rdi,%rcx,1),%r8
    76f2:	44 8a 4c 24 38       	mov    0x38(%rsp),%r9b
    76f7:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    76fc:	eb 08                	jmp    7706 <core::str::<impl str>::contains+0x186>
    76fe:	66 90                	xchg   %ax,%ax
    7700:	48 01 f2             	add    %rsi,%rdx
    7703:	41 b1 01             	mov    $0x1,%r9b
    7706:	48 85 d2             	test   %rdx,%rdx
    7709:	74 15                	je     7720 <core::str::<impl str>::contains+0x1a0>
    770b:	48 39 d1             	cmp    %rdx,%rcx
    770e:	74 10                	je     7720 <core::str::<impl str>::contains+0x1a0>
    7710:	0f 86 71 02 00 00    	jbe    7987 <core::str::<impl str>::contains+0x407>
    7716:	80 3c 17 bf          	cmpb   $0xbf,(%rdi,%rdx,1)
    771a:	0f 8e 67 02 00 00    	jle    7987 <core::str::<impl str>::contains+0x407>
    7720:	48 39 d1             	cmp    %rdx,%rcx
    7723:	0f 84 ba 01 00 00    	je     78e3 <core::str::<impl str>::contains+0x363>
    7729:	48 8d 34 17          	lea    (%rdi,%rdx,1),%rsi
    772d:	0f b6 1e             	movzbl (%rsi),%ebx
    7730:	84 db                	test   %bl,%bl
    7732:	78 0c                	js     7740 <core::str::<impl str>::contains+0x1c0>
    7734:	89 d8                	mov    %ebx,%eax
    7736:	e9 95 00 00 00       	jmpq   77d0 <core::str::<impl str>::contains+0x250>
    773b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7740:	48 8d 46 01          	lea    0x1(%rsi),%rax
    7744:	4c 39 c0             	cmp    %r8,%rax
    7747:	74 40                	je     7789 <core::str::<impl str>::contains+0x209>
    7749:	0f b6 46 01          	movzbl 0x1(%rsi),%eax
    774d:	48 83 c6 02          	add    $0x2,%rsi
    7751:	83 e0 3f             	and    $0x3f,%eax
    7754:	41 89 da             	mov    %ebx,%r10d
    7757:	41 83 e2 1f          	and    $0x1f,%r10d
    775b:	80 fb df             	cmp    $0xdf,%bl
    775e:	76 3a                	jbe    779a <core::str::<impl str>::contains+0x21a>
    7760:	4c 39 c6             	cmp    %r8,%rsi
    7763:	74 3e                	je     77a3 <core::str::<impl str>::contains+0x223>
    7765:	44 0f b6 1e          	movzbl (%rsi),%r11d
    7769:	48 83 c6 01          	add    $0x1,%rsi
    776d:	41 83 e3 3f          	and    $0x3f,%r11d
    7771:	c1 e0 06             	shl    $0x6,%eax
    7774:	44 09 d8             	or     %r11d,%eax
    7777:	80 fb f0             	cmp    $0xf0,%bl
    777a:	72 38                	jb     77b4 <core::str::<impl str>::contains+0x234>
    777c:	4c 39 c6             	cmp    %r8,%rsi
    777f:	74 3c                	je     77bd <core::str::<impl str>::contains+0x23d>
    7781:	0f b6 36             	movzbl (%rsi),%esi
    7784:	83 e6 3f             	and    $0x3f,%esi
    7787:	eb 36                	jmp    77bf <core::str::<impl str>::contains+0x23f>
    7789:	31 c0                	xor    %eax,%eax
    778b:	4c 89 c6             	mov    %r8,%rsi
    778e:	41 89 da             	mov    %ebx,%r10d
    7791:	41 83 e2 1f          	and    $0x1f,%r10d
    7795:	80 fb df             	cmp    $0xdf,%bl
    7798:	77 c6                	ja     7760 <core::str::<impl str>::contains+0x1e0>
    779a:	41 c1 e2 06          	shl    $0x6,%r10d
    779e:	44 09 d0             	or     %r10d,%eax
    77a1:	eb 2d                	jmp    77d0 <core::str::<impl str>::contains+0x250>
    77a3:	45 31 db             	xor    %r11d,%r11d
    77a6:	4c 89 c6             	mov    %r8,%rsi
    77a9:	c1 e0 06             	shl    $0x6,%eax
    77ac:	44 09 d8             	or     %r11d,%eax
    77af:	80 fb f0             	cmp    $0xf0,%bl
    77b2:	73 c8                	jae    777c <core::str::<impl str>::contains+0x1fc>
    77b4:	41 c1 e2 0c          	shl    $0xc,%r10d
    77b8:	44 09 d0             	or     %r10d,%eax
    77bb:	eb 13                	jmp    77d0 <core::str::<impl str>::contains+0x250>
    77bd:	31 f6                	xor    %esi,%esi
    77bf:	41 83 e2 07          	and    $0x7,%r10d
    77c3:	41 c1 e2 12          	shl    $0x12,%r10d
    77c7:	c1 e0 06             	shl    $0x6,%eax
    77ca:	44 09 d0             	or     %r10d,%eax
    77cd:	09 f0                	or     %esi,%eax
    77cf:	90                   	nop
    77d0:	45 84 c9             	test   %r9b,%r9b
    77d3:	0f 85 21 01 00 00    	jne    78fa <core::str::<impl str>::contains+0x37a>
    77d9:	3d 00 00 11 00       	cmp    $0x110000,%eax
    77de:	0f 84 26 01 00 00    	je     790a <core::str::<impl str>::contains+0x38a>
    77e4:	be 01 00 00 00       	mov    $0x1,%esi
    77e9:	3d 80 00 00 00       	cmp    $0x80,%eax
    77ee:	0f 82 0c ff ff ff    	jb     7700 <core::str::<impl str>::contains+0x180>
    77f4:	be 02 00 00 00       	mov    $0x2,%esi
    77f9:	3d 00 08 00 00       	cmp    $0x800,%eax
    77fe:	0f 82 fc fe ff ff    	jb     7700 <core::str::<impl str>::contains+0x180>
    7804:	3d 00 00 01 00       	cmp    $0x10000,%eax
    7809:	be 04 00 00 00       	mov    $0x4,%esi
    780e:	48 83 de 00          	sbb    $0x0,%rsi
    7812:	e9 e9 fe ff ff       	jmpq   7700 <core::str::<impl str>::contains+0x180>
    7817:	48 39 f0             	cmp    %rsi,%rax
    781a:	73 1b                	jae    7837 <core::str::<impl str>::contains+0x2b7>
    781c:	4c 8b 5c 24 40       	mov    0x40(%rsp),%r11
    7821:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
    7826:	4c 8b 74 24 38       	mov    0x38(%rsp),%r14
    782b:	4d 39 c7             	cmp    %r8,%r15
    782e:	4d 89 c4             	mov    %r8,%r12
    7831:	4d 0f 47 e7          	cmova  %r15,%r12
    7835:	eb 1a                	jmp    7851 <core::str::<impl str>::contains+0x2d1>
    7837:	48 89 74 24 48       	mov    %rsi,0x48(%rsp)
    783c:	e9 d3 00 00 00       	jmpq   7914 <core::str::<impl str>::contains+0x394>
    7841:	4c 01 c7             	add    %r8,%rdi
    7844:	4a 8d 04 0f          	lea    (%rdi,%r9,1),%rax
    7848:	48 39 f0             	cmp    %rsi,%rax
    784b:	0f 83 8a fe ff ff    	jae    76db <core::str::<impl str>::contains+0x15b>
    7851:	41 0f b6 04 02       	movzbl (%r10,%rax,1),%eax
    7856:	49 0f a3 c3          	bt     %rax,%r11
    785a:	73 e5                	jae    7841 <core::str::<impl str>::contains+0x2c1>
    785c:	48 89 f8             	mov    %rdi,%rax
    785f:	48 f7 d8             	neg    %rax
    7862:	49 8d 0c 3a          	lea    (%r10,%rdi,1),%rcx
    7866:	4c 89 fb             	mov    %r15,%rbx
    7869:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7870:	49 39 dc             	cmp    %rbx,%r12
    7873:	74 2b                	je     78a0 <core::str::<impl str>::contains+0x320>
    7875:	48 8d 2c 1f          	lea    (%rdi,%rbx,1),%rbp
    7879:	48 39 f5             	cmp    %rsi,%rbp
    787c:	0f 83 17 01 00 00    	jae    7999 <core::str::<impl str>::contains+0x419>
    7882:	41 0f b6 54 1d 00    	movzbl 0x0(%r13,%rbx,1),%edx
    7888:	48 8d 6b 01          	lea    0x1(%rbx),%rbp
    788c:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    7890:	3a 14 19             	cmp    (%rcx,%rbx,1),%dl
    7893:	48 89 eb             	mov    %rbp,%rbx
    7896:	74 d8                	je     7870 <core::str::<impl str>::contains+0x2f0>
    7898:	48 f7 d8             	neg    %rax
    789b:	48 89 c7             	mov    %rax,%rdi
    789e:	eb a4                	jmp    7844 <core::str::<impl str>::contains+0x2c4>
    78a0:	4c 89 f9             	mov    %r15,%rcx
    78a3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    78aa:	00 00 00 
    78ad:	0f 1f 00             	nopl   (%rax)
    78b0:	48 85 c9             	test   %rcx,%rcx
    78b3:	74 76                	je     792b <core::str::<impl str>::contains+0x3ab>
    78b5:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
    78b9:	4c 39 c1             	cmp    %r8,%rcx
    78bc:	0f 83 9e 00 00 00    	jae    7960 <core::str::<impl str>::contains+0x3e0>
    78c2:	48 8d 04 39          	lea    (%rcx,%rdi,1),%rax
    78c6:	48 39 f0             	cmp    %rsi,%rax
    78c9:	0f 83 a6 00 00 00    	jae    7975 <core::str::<impl str>::contains+0x3f5>
    78cf:	41 0f b6 5c 0d 00    	movzbl 0x0(%r13,%rcx,1),%ebx
    78d5:	41 3a 1c 02          	cmp    (%r10,%rax,1),%bl
    78d9:	74 d5                	je     78b0 <core::str::<impl str>::contains+0x330>
    78db:	4c 01 f7             	add    %r14,%rdi
    78de:	e9 61 ff ff ff       	jmpq   7844 <core::str::<impl str>::contains+0x2c4>
    78e3:	44 89 c8             	mov    %r9d,%eax
    78e6:	34 01                	xor    $0x1,%al
    78e8:	88 44 24 38          	mov    %al,0x38(%rsp)
    78ec:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
    78f1:	b0 01                	mov    $0x1,%al
    78f3:	45 84 c9             	test   %r9b,%r9b
    78f6:	75 3d                	jne    7935 <core::str::<impl str>::contains+0x3b5>
    78f8:	eb 1a                	jmp    7914 <core::str::<impl str>::contains+0x394>
    78fa:	41 80 f1 01          	xor    $0x1,%r9b
    78fe:	44 88 4c 24 38       	mov    %r9b,0x38(%rsp)
    7903:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
    7908:	eb 29                	jmp    7933 <core::str::<impl str>::contains+0x3b3>
    790a:	c6 44 24 38 01       	movb   $0x1,0x38(%rsp)
    790f:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
    7914:	31 c0                	xor    %eax,%eax
    7916:	eb 1d                	jmp    7935 <core::str::<impl str>::contains+0x3b5>
    7918:	4c 01 c7             	add    %r8,%rdi
    791b:	48 89 7c 24 48       	mov    %rdi,0x48(%rsp)
    7920:	48 c7 44 24 58 00 00 	movq   $0x0,0x58(%rsp)
    7927:	00 00 
    7929:	eb 08                	jmp    7933 <core::str::<impl str>::contains+0x3b3>
    792b:	4c 01 c7             	add    %r8,%rdi
    792e:	48 89 7c 24 48       	mov    %rdi,0x48(%rsp)
    7933:	b0 01                	mov    $0x1,%al
    7935:	48 83 c4 78          	add    $0x78,%rsp
    7939:	5b                   	pop    %rbx
    793a:	41 5c                	pop    %r12
    793c:	41 5d                	pop    %r13
    793e:	41 5e                	pop    %r14
    7940:	41 5f                	pop    %r15
    7942:	5d                   	pop    %rbp
    7943:	c3                   	retq   
    7944:	48 01 f9             	add    %rdi,%rcx
    7947:	48 39 f1             	cmp    %rsi,%rcx
    794a:	48 0f 42 ce          	cmovb  %rsi,%rcx
    794e:	48 8d 15 03 bd 03 00 	lea    0x3bd03(%rip),%rdx        # 43658 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x120>
    7955:	48 89 cf             	mov    %rcx,%rdi
    7958:	ff 15 32 e3 03 00    	callq  *0x3e332(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
    795e:	0f 0b                	ud2    
    7960:	48 8d 15 09 bd 03 00 	lea    0x3bd09(%rip),%rdx        # 43670 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x138>
    7967:	48 89 cf             	mov    %rcx,%rdi
    796a:	4c 89 c6             	mov    %r8,%rsi
    796d:	ff 15 1d e3 03 00    	callq  *0x3e31d(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
    7973:	0f 0b                	ud2    
    7975:	48 8d 15 0c bd 03 00 	lea    0x3bd0c(%rip),%rdx        # 43688 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x150>
    797c:	48 89 c7             	mov    %rax,%rdi
    797f:	ff 15 0b e3 03 00    	callq  *0x3e30b(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
    7985:	0f 0b                	ud2    
    7987:	4c 8d 05 3a c0 03 00 	lea    0x3c03a(%rip),%r8        # 439c8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x490>
    798e:	48 89 ce             	mov    %rcx,%rsi
    7991:	ff 15 99 e4 03 00    	callq  *0x3e499(%rip)        # 45e30 <_GLOBAL_OFFSET_TABLE_+0x4a8>
    7997:	0f 0b                	ud2    
    7999:	4c 01 ff             	add    %r15,%rdi
    799c:	48 39 f7             	cmp    %rsi,%rdi
    799f:	48 0f 42 fe          	cmovb  %rsi,%rdi
    79a3:	48 8d 15 ae bc 03 00 	lea    0x3bcae(%rip),%rdx        # 43658 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x120>
    79aa:	ff 15 e0 e2 03 00    	callq  *0x3e2e0(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
    79b0:	0f 0b                	ud2    
    79b2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    79b9:	00 00 00 
    79bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000079c0 <core::slice::sort::break_patterns>:
    79c0:	48 83 ec 18          	sub    $0x18,%rsp
    79c4:	48 83 fe 08          	cmp    $0x8,%rsi
    79c8:	0f 82 e0 01 00 00    	jb     7bae <core::slice::sort::break_patterns+0x1ee>
    79ce:	48 8d 46 ff          	lea    -0x1(%rsi),%rax
    79d2:	48 0f bd c8          	bsr    %rax,%rcx
    79d6:	83 f1 3f             	xor    $0x3f,%ecx
    79d9:	49 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%r8
    79e0:	49 d3 e8             	shr    %cl,%r8
    79e3:	49 89 f2             	mov    %rsi,%r10
    79e6:	49 c1 ea 02          	shr    $0x2,%r10
    79ea:	4f 8d 0c 12          	lea    (%r10,%r10,1),%r9
    79ee:	49 83 c1 ff          	add    $0xffffffffffffffff,%r9
    79f2:	89 f0                	mov    %esi,%eax
    79f4:	c1 e0 0d             	shl    $0xd,%eax
    79f7:	31 f0                	xor    %esi,%eax
    79f9:	89 c1                	mov    %eax,%ecx
    79fb:	c1 e9 11             	shr    $0x11,%ecx
    79fe:	31 c1                	xor    %eax,%ecx
    7a00:	89 c8                	mov    %ecx,%eax
    7a02:	c1 e0 05             	shl    $0x5,%eax
    7a05:	31 c8                	xor    %ecx,%eax
    7a07:	89 c1                	mov    %eax,%ecx
    7a09:	c1 e1 0d             	shl    $0xd,%ecx
    7a0c:	31 c1                	xor    %eax,%ecx
    7a0e:	48 c1 e0 20          	shl    $0x20,%rax
    7a12:	89 ca                	mov    %ecx,%edx
    7a14:	c1 ea 11             	shr    $0x11,%edx
    7a17:	31 ca                	xor    %ecx,%edx
    7a19:	41 89 d3             	mov    %edx,%r11d
    7a1c:	41 c1 e3 05          	shl    $0x5,%r11d
    7a20:	41 31 d3             	xor    %edx,%r11d
    7a23:	4c 01 d8             	add    %r11,%rax
    7a26:	4c 21 c0             	and    %r8,%rax
    7a29:	31 d2                	xor    %edx,%edx
    7a2b:	48 39 f0             	cmp    %rsi,%rax
    7a2e:	48 0f 43 d6          	cmovae %rsi,%rdx
    7a32:	49 39 f1             	cmp    %rsi,%r9
    7a35:	0f 83 8d 01 00 00    	jae    7bc8 <core::slice::sort::break_patterns+0x208>
    7a3b:	48 29 d0             	sub    %rdx,%rax
    7a3e:	48 39 f0             	cmp    %rsi,%rax
    7a41:	0f 83 6c 01 00 00    	jae    7bb3 <core::slice::sort::break_patterns+0x1f3>
    7a47:	4d 01 d2             	add    %r10,%r10
    7a4a:	4b 8d 14 49          	lea    (%r9,%r9,2),%rdx
    7a4e:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    7a52:	48 8b 4c d7 10       	mov    0x10(%rdi,%rdx,8),%rcx
    7a57:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    7a5c:	0f 10 04 d7          	movups (%rdi,%rdx,8),%xmm0
    7a60:	0f 29 04 24          	movaps %xmm0,(%rsp)
    7a64:	48 8b 4c c7 10       	mov    0x10(%rdi,%rax,8),%rcx
    7a69:	0f 10 04 c7          	movups (%rdi,%rax,8),%xmm0
    7a6d:	0f 11 04 d7          	movups %xmm0,(%rdi,%rdx,8)
    7a71:	48 89 4c d7 10       	mov    %rcx,0x10(%rdi,%rdx,8)
    7a76:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    7a7b:	48 89 4c c7 10       	mov    %rcx,0x10(%rdi,%rax,8)
    7a80:	0f 28 04 24          	movaps (%rsp),%xmm0
    7a84:	0f 11 04 c7          	movups %xmm0,(%rdi,%rax,8)
    7a88:	44 89 d8             	mov    %r11d,%eax
    7a8b:	c1 e0 0d             	shl    $0xd,%eax
    7a8e:	44 31 d8             	xor    %r11d,%eax
    7a91:	89 c1                	mov    %eax,%ecx
    7a93:	c1 e9 11             	shr    $0x11,%ecx
    7a96:	31 c1                	xor    %eax,%ecx
    7a98:	89 c8                	mov    %ecx,%eax
    7a9a:	c1 e0 05             	shl    $0x5,%eax
    7a9d:	31 c8                	xor    %ecx,%eax
    7a9f:	89 c1                	mov    %eax,%ecx
    7aa1:	c1 e1 0d             	shl    $0xd,%ecx
    7aa4:	31 c1                	xor    %eax,%ecx
    7aa6:	48 c1 e0 20          	shl    $0x20,%rax
    7aaa:	89 ca                	mov    %ecx,%edx
    7aac:	c1 ea 11             	shr    $0x11,%edx
    7aaf:	31 ca                	xor    %ecx,%edx
    7ab1:	41 89 d1             	mov    %edx,%r9d
    7ab4:	41 c1 e1 05          	shl    $0x5,%r9d
    7ab8:	41 31 d1             	xor    %edx,%r9d
    7abb:	4c 01 c8             	add    %r9,%rax
    7abe:	4c 21 c0             	and    %r8,%rax
    7ac1:	31 d2                	xor    %edx,%edx
    7ac3:	48 39 f0             	cmp    %rsi,%rax
    7ac6:	48 0f 43 d6          	cmovae %rsi,%rdx
    7aca:	49 39 f2             	cmp    %rsi,%r10
    7acd:	0f 83 f2 00 00 00    	jae    7bc5 <core::slice::sort::break_patterns+0x205>
    7ad3:	48 29 d0             	sub    %rdx,%rax
    7ad6:	48 39 f0             	cmp    %rsi,%rax
    7ad9:	0f 83 d4 00 00 00    	jae    7bb3 <core::slice::sort::break_patterns+0x1f3>
    7adf:	4b 8d 14 52          	lea    (%r10,%r10,2),%rdx
    7ae3:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    7ae7:	48 8b 4c d7 10       	mov    0x10(%rdi,%rdx,8),%rcx
    7aec:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    7af1:	0f 10 04 d7          	movups (%rdi,%rdx,8),%xmm0
    7af5:	0f 29 04 24          	movaps %xmm0,(%rsp)
    7af9:	48 8b 4c c7 10       	mov    0x10(%rdi,%rax,8),%rcx
    7afe:	0f 10 04 c7          	movups (%rdi,%rax,8),%xmm0
    7b02:	0f 11 04 d7          	movups %xmm0,(%rdi,%rdx,8)
    7b06:	48 89 4c d7 10       	mov    %rcx,0x10(%rdi,%rdx,8)
    7b0b:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    7b10:	48 89 4c c7 10       	mov    %rcx,0x10(%rdi,%rax,8)
    7b15:	0f 28 04 24          	movaps (%rsp),%xmm0
    7b19:	0f 11 04 c7          	movups %xmm0,(%rdi,%rax,8)
    7b1d:	44 89 c8             	mov    %r9d,%eax
    7b20:	c1 e0 0d             	shl    $0xd,%eax
    7b23:	44 31 c8             	xor    %r9d,%eax
    7b26:	89 c1                	mov    %eax,%ecx
    7b28:	c1 e9 11             	shr    $0x11,%ecx
    7b2b:	31 c1                	xor    %eax,%ecx
    7b2d:	89 c8                	mov    %ecx,%eax
    7b2f:	c1 e0 05             	shl    $0x5,%eax
    7b32:	31 c8                	xor    %ecx,%eax
    7b34:	89 c1                	mov    %eax,%ecx
    7b36:	c1 e1 0d             	shl    $0xd,%ecx
    7b39:	31 c1                	xor    %eax,%ecx
    7b3b:	49 89 c1             	mov    %rax,%r9
    7b3e:	49 c1 e1 20          	shl    $0x20,%r9
    7b42:	89 ca                	mov    %ecx,%edx
    7b44:	c1 ea 11             	shr    $0x11,%edx
    7b47:	31 ca                	xor    %ecx,%edx
    7b49:	89 d0                	mov    %edx,%eax
    7b4b:	c1 e0 05             	shl    $0x5,%eax
    7b4e:	31 d0                	xor    %edx,%eax
    7b50:	4c 09 c8             	or     %r9,%rax
    7b53:	4c 21 c0             	and    %r8,%rax
    7b56:	31 c9                	xor    %ecx,%ecx
    7b58:	48 39 f0             	cmp    %rsi,%rax
    7b5b:	48 0f 43 ce          	cmovae %rsi,%rcx
    7b5f:	49 83 ca 01          	or     $0x1,%r10
    7b63:	49 39 f2             	cmp    %rsi,%r10
    7b66:	73 5d                	jae    7bc5 <core::slice::sort::break_patterns+0x205>
    7b68:	48 29 c8             	sub    %rcx,%rax
    7b6b:	48 39 f0             	cmp    %rsi,%rax
    7b6e:	73 43                	jae    7bb3 <core::slice::sort::break_patterns+0x1f3>
    7b70:	4b 8d 0c 52          	lea    (%r10,%r10,2),%rcx
    7b74:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    7b78:	48 8b 54 cf 10       	mov    0x10(%rdi,%rcx,8),%rdx
    7b7d:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    7b82:	0f 10 04 cf          	movups (%rdi,%rcx,8),%xmm0
    7b86:	0f 29 04 24          	movaps %xmm0,(%rsp)
    7b8a:	48 8b 54 c7 10       	mov    0x10(%rdi,%rax,8),%rdx
    7b8f:	0f 10 04 c7          	movups (%rdi,%rax,8),%xmm0
    7b93:	0f 11 04 cf          	movups %xmm0,(%rdi,%rcx,8)
    7b97:	48 89 54 cf 10       	mov    %rdx,0x10(%rdi,%rcx,8)
    7b9c:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    7ba1:	48 89 4c c7 10       	mov    %rcx,0x10(%rdi,%rax,8)
    7ba6:	0f 28 04 24          	movaps (%rsp),%xmm0
    7baa:	0f 11 04 c7          	movups %xmm0,(%rdi,%rax,8)
    7bae:	48 83 c4 18          	add    $0x18,%rsp
    7bb2:	c3                   	retq   
    7bb3:	48 8d 15 7e bb 03 00 	lea    0x3bb7e(%rip),%rdx        # 43738 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x200>
    7bba:	48 89 c7             	mov    %rax,%rdi
    7bbd:	ff 15 cd e0 03 00    	callq  *0x3e0cd(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
    7bc3:	0f 0b                	ud2    
    7bc5:	4d 89 d1             	mov    %r10,%r9
    7bc8:	48 8d 15 51 bb 03 00 	lea    0x3bb51(%rip),%rdx        # 43720 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1e8>
    7bcf:	4c 89 cf             	mov    %r9,%rdi
    7bd2:	ff 15 b8 e0 03 00    	callq  *0x3e0b8(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
    7bd8:	0f 0b                	ud2    
    7bda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000007be0 <core::slice::sort::partial_insertion_sort>:
    7be0:	41 57                	push   %r15
    7be2:	41 56                	push   %r14
    7be4:	41 55                	push   %r13
    7be6:	41 54                	push   %r12
    7be8:	53                   	push   %rbx
    7be9:	48 83 ec 20          	sub    $0x20,%rsp
    7bed:	4c 8d 76 ff          	lea    -0x1(%rsi),%r14
    7bf1:	4c 8d 47 d0          	lea    -0x30(%rdi),%r8
    7bf5:	4c 8d 4f 30          	lea    0x30(%rdi),%r9
    7bf9:	4c 8d 56 fe          	lea    -0x2(%rsi),%r10
    7bfd:	b9 01 00 00 00       	mov    $0x1,%ecx
    7c02:	45 31 db             	xor    %r11d,%r11d
    7c05:	eb 1e                	jmp    7c25 <core::slice::sort::partial_insertion_sort+0x45>
    7c07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    7c0e:	00 00 
    7c10:	4c 89 3a             	mov    %r15,(%rdx)
    7c13:	0f 28 04 24          	movaps (%rsp),%xmm0
    7c17:	0f 11 42 08          	movups %xmm0,0x8(%rdx)
    7c1b:	49 83 fb 05          	cmp    $0x5,%r11
    7c1f:	0f 84 e6 01 00 00    	je     7e0b <core::slice::sort::partial_insertion_sort+0x22b>
    7c25:	48 39 f1             	cmp    %rsi,%rcx
    7c28:	73 46                	jae    7c70 <core::slice::sort::partial_insertion_sort+0x90>
    7c2a:	48 8d 04 49          	lea    (%rcx,%rcx,2),%rax
    7c2e:	48 8b 1c c7          	mov    (%rdi,%rax,8),%rbx
    7c32:	b2 01                	mov    $0x1,%dl
    7c34:	48 3b 5c c7 e8       	cmp    -0x18(%rdi,%rax,8),%rbx
    7c39:	72 37                	jb     7c72 <core::slice::sort::partial_insertion_sort+0x92>
    7c3b:	48 8d 04 c7          	lea    (%rdi,%rax,8),%rax
    7c3f:	90                   	nop
    7c40:	49 39 ce             	cmp    %rcx,%r14
    7c43:	0f 84 b2 01 00 00    	je     7dfb <core::slice::sort::partial_insertion_sort+0x21b>
    7c49:	48 83 c1 01          	add    $0x1,%rcx
    7c4d:	48 8b 50 18          	mov    0x18(%rax),%rdx
    7c51:	48 8d 58 18          	lea    0x18(%rax),%rbx
    7c55:	48 3b 10             	cmp    (%rax),%rdx
    7c58:	48 89 d8             	mov    %rbx,%rax
    7c5b:	73 e3                	jae    7c40 <core::slice::sort::partial_insertion_sort+0x60>
    7c5d:	48 39 f1             	cmp    %rsi,%rcx
    7c60:	0f 92 c2             	setb   %dl
    7c63:	e9 0a 00 00 00       	jmpq   7c72 <core::slice::sort::partial_insertion_sort+0x92>
    7c68:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    7c6f:	00 
    7c70:	31 d2                	xor    %edx,%edx
    7c72:	48 39 f1             	cmp    %rsi,%rcx
    7c75:	0f 94 c0             	sete   %al
    7c78:	0f 84 7f 01 00 00    	je     7dfd <core::slice::sort::partial_insertion_sort+0x21d>
    7c7e:	48 83 fe 32          	cmp    $0x32,%rsi
    7c82:	0f 82 75 01 00 00    	jb     7dfd <core::slice::sort::partial_insertion_sort+0x21d>
    7c88:	48 8d 41 ff          	lea    -0x1(%rcx),%rax
    7c8c:	48 39 f0             	cmp    %rsi,%rax
    7c8f:	0f 83 7a 01 00 00    	jae    7e0f <core::slice::sort::partial_insertion_sort+0x22f>
    7c95:	84 d2                	test   %dl,%dl
    7c97:	0f 84 84 01 00 00    	je     7e21 <core::slice::sort::partial_insertion_sort+0x241>
    7c9d:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    7ca1:	4c 8d 24 49          	lea    (%rcx,%rcx,2),%r12
    7ca5:	48 8b 54 c7 10       	mov    0x10(%rdi,%rax,8),%rdx
    7caa:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    7caf:	0f 10 04 c7          	movups (%rdi,%rax,8),%xmm0
    7cb3:	0f 29 04 24          	movaps %xmm0,(%rsp)
    7cb7:	4a 8b 54 e7 10       	mov    0x10(%rdi,%r12,8),%rdx
    7cbc:	48 89 54 c7 10       	mov    %rdx,0x10(%rdi,%rax,8)
    7cc1:	42 0f 10 04 e7       	movups (%rdi,%r12,8),%xmm0
    7cc6:	0f 11 04 c7          	movups %xmm0,(%rdi,%rax,8)
    7cca:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    7ccf:	4a 89 54 e7 10       	mov    %rdx,0x10(%rdi,%r12,8)
    7cd4:	0f 28 04 24          	movaps (%rsp),%xmm0
    7cd8:	42 0f 11 04 e7       	movups %xmm0,(%rdi,%r12,8)
    7cdd:	48 83 f9 02          	cmp    $0x2,%rcx
    7ce1:	0f 82 84 00 00 00    	jb     7d6b <core::slice::sort::partial_insertion_sort+0x18b>
    7ce7:	4c 8d 2c c7          	lea    (%rdi,%rax,8),%r13
    7ceb:	48 8d 51 fe          	lea    -0x2(%rcx),%rdx
    7cef:	48 8d 1c 52          	lea    (%rdx,%rdx,2),%rbx
    7cf3:	4d 8b 7d 00          	mov    0x0(%r13),%r15
    7cf7:	4c 3b 3c df          	cmp    (%rdi,%rbx,8),%r15
    7cfb:	73 6e                	jae    7d6b <core::slice::sort::partial_insertion_sort+0x18b>
    7cfd:	48 8d 1c df          	lea    (%rdi,%rbx,8),%rbx
    7d01:	0f 10 44 c7 08       	movups 0x8(%rdi,%rax,8),%xmm0
    7d06:	0f 29 04 24          	movaps %xmm0,(%rsp)
    7d0a:	48 8b 43 10          	mov    0x10(%rbx),%rax
    7d0e:	49 89 45 10          	mov    %rax,0x10(%r13)
    7d12:	0f 10 03             	movups (%rbx),%xmm0
    7d15:	41 0f 11 45 00       	movups %xmm0,0x0(%r13)
    7d1a:	48 85 d2             	test   %rdx,%rdx
    7d1d:	74 41                	je     7d60 <core::slice::sort::partial_insertion_sort+0x180>
    7d1f:	4e 3b 7c e7 b8       	cmp    -0x48(%rdi,%r12,8),%r15
    7d24:	73 3a                	jae    7d60 <core::slice::sort::partial_insertion_sort+0x180>
    7d26:	4b 8d 04 e0          	lea    (%r8,%r12,8),%rax
    7d2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7d30:	48 8b 58 f8          	mov    -0x8(%rax),%rbx
    7d34:	48 89 58 10          	mov    %rbx,0x10(%rax)
    7d38:	0f 10 40 e8          	movups -0x18(%rax),%xmm0
    7d3c:	0f 11 00             	movups %xmm0,(%rax)
    7d3f:	48 83 c2 ff          	add    $0xffffffffffffffff,%rdx
    7d43:	74 0f                	je     7d54 <core::slice::sort::partial_insertion_sort+0x174>
    7d45:	48 8d 58 e8          	lea    -0x18(%rax),%rbx
    7d49:	4c 3b 78 d0          	cmp    -0x30(%rax),%r15
    7d4d:	48 89 d8             	mov    %rbx,%rax
    7d50:	72 de                	jb     7d30 <core::slice::sort::partial_insertion_sort+0x150>
    7d52:	eb 0c                	jmp    7d60 <core::slice::sort::partial_insertion_sort+0x180>
    7d54:	48 89 fb             	mov    %rdi,%rbx
    7d57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    7d5e:	00 00 
    7d60:	4c 89 3b             	mov    %r15,(%rbx)
    7d63:	0f 28 04 24          	movaps (%rsp),%xmm0
    7d67:	0f 11 43 08          	movups %xmm0,0x8(%rbx)
    7d6b:	49 83 c3 01          	add    $0x1,%r11
    7d6f:	48 89 f3             	mov    %rsi,%rbx
    7d72:	48 29 cb             	sub    %rcx,%rbx
    7d75:	48 83 fb 02          	cmp    $0x2,%rbx
    7d79:	0f 82 9c fe ff ff    	jb     7c1b <core::slice::sort::partial_insertion_sort+0x3b>
    7d7f:	4e 8d 2c e7          	lea    (%rdi,%r12,8),%r13
    7d83:	4d 8b 7d 00          	mov    0x0(%r13),%r15
    7d87:	4d 39 7d 18          	cmp    %r15,0x18(%r13)
    7d8b:	0f 83 8a fe ff ff    	jae    7c1b <core::slice::sort::partial_insertion_sort+0x3b>
    7d91:	49 8d 55 18          	lea    0x18(%r13),%rdx
    7d95:	42 0f 10 44 e7 08    	movups 0x8(%rdi,%r12,8),%xmm0
    7d9b:	0f 29 04 24          	movaps %xmm0,(%rsp)
    7d9f:	48 8b 42 10          	mov    0x10(%rdx),%rax
    7da3:	49 89 45 10          	mov    %rax,0x10(%r13)
    7da7:	0f 10 02             	movups (%rdx),%xmm0
    7daa:	41 0f 11 45 00       	movups %xmm0,0x0(%r13)
    7daf:	48 83 fb 03          	cmp    $0x3,%rbx
    7db3:	0f 82 57 fe ff ff    	jb     7c10 <core::slice::sort::partial_insertion_sort+0x30>
    7db9:	4d 39 7d 30          	cmp    %r15,0x30(%r13)
    7dbd:	0f 83 4d fe ff ff    	jae    7c10 <core::slice::sort::partial_insertion_sort+0x30>
    7dc3:	4b 8d 1c e1          	lea    (%r9,%r12,8),%rbx
    7dc7:	4c 89 d0             	mov    %r10,%rax
    7dca:	48 29 c8             	sub    %rcx,%rax
    7dcd:	0f 1f 00             	nopl   (%rax)
    7dd0:	48 89 da             	mov    %rbx,%rdx
    7dd3:	48 8b 5b 10          	mov    0x10(%rbx),%rbx
    7dd7:	48 89 5a f8          	mov    %rbx,-0x8(%rdx)
    7ddb:	0f 10 02             	movups (%rdx),%xmm0
    7dde:	0f 11 42 e8          	movups %xmm0,-0x18(%rdx)
    7de2:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    7de6:	0f 84 24 fe ff ff    	je     7c10 <core::slice::sort::partial_insertion_sort+0x30>
    7dec:	48 8d 5a 18          	lea    0x18(%rdx),%rbx
    7df0:	4c 39 7a 18          	cmp    %r15,0x18(%rdx)
    7df4:	72 da                	jb     7dd0 <core::slice::sort::partial_insertion_sort+0x1f0>
    7df6:	e9 15 fe ff ff       	jmpq   7c10 <core::slice::sort::partial_insertion_sort+0x30>
    7dfb:	b0 01                	mov    $0x1,%al
    7dfd:	48 83 c4 20          	add    $0x20,%rsp
    7e01:	5b                   	pop    %rbx
    7e02:	41 5c                	pop    %r12
    7e04:	41 5d                	pop    %r13
    7e06:	41 5e                	pop    %r14
    7e08:	41 5f                	pop    %r15
    7e0a:	c3                   	retq   
    7e0b:	31 c0                	xor    %eax,%eax
    7e0d:	eb ee                	jmp    7dfd <core::slice::sort::partial_insertion_sort+0x21d>
    7e0f:	48 8d 15 0a b9 03 00 	lea    0x3b90a(%rip),%rdx        # 43720 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1e8>
    7e16:	48 89 c7             	mov    %rax,%rdi
    7e19:	ff 15 71 de 03 00    	callq  *0x3de71(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
    7e1f:	0f 0b                	ud2    
    7e21:	48 8d 15 10 b9 03 00 	lea    0x3b910(%rip),%rdx        # 43738 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x200>
    7e28:	48 89 cf             	mov    %rcx,%rdi
    7e2b:	ff 15 5f de 03 00    	callq  *0x3de5f(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
    7e31:	0f 0b                	ud2    
    7e33:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7e3a:	00 00 00 
    7e3d:	0f 1f 00             	nopl   (%rax)

0000000000007e40 <core::slice::sort::recurse>:
    7e40:	55                   	push   %rbp
    7e41:	41 57                	push   %r15
    7e43:	41 56                	push   %r14
    7e45:	41 55                	push   %r13
    7e47:	41 54                	push   %r12
    7e49:	53                   	push   %rbx
    7e4a:	48 81 ec e8 01 00 00 	sub    $0x1e8,%rsp
    7e51:	44 89 44 24 34       	mov    %r8d,0x34(%rsp)
    7e56:	49 89 fe             	mov    %rdi,%r14
    7e59:	48 83 fe 15          	cmp    $0x15,%rsi
    7e5d:	73 08                	jae    7e67 <core::slice::sort::recurse+0x27>
    7e5f:	49 89 f5             	mov    %rsi,%r13
    7e62:	e9 0f 0c 00 00       	jmpq   8a76 <core::slice::sort::recurse+0xc36>
    7e67:	49 89 ca             	mov    %rcx,%r10
    7e6a:	48 89 54 24 58       	mov    %rdx,0x58(%rsp)
    7e6f:	41 b3 01             	mov    $0x1,%r11b
    7e72:	41 b7 01             	mov    $0x1,%r15b
    7e75:	45 84 db             	test   %r11b,%r11b
    7e78:	0f 95 c0             	setne  %al
    7e7b:	45 84 ff             	test   %r15b,%r15b
    7e7e:	0f 95 c1             	setne  %cl
    7e81:	20 c1                	and    %al,%cl
    7e83:	88 4c 24 40          	mov    %cl,0x40(%rsp)
    7e87:	49 89 f7             	mov    %rsi,%r15
    7e8a:	4c 89 f3             	mov    %r14,%rbx
    7e8d:	48 89 74 24 60       	mov    %rsi,0x60(%rsp)
    7e92:	4c 89 54 24 38       	mov    %r10,0x38(%rsp)
    7e97:	44 88 5c 24 0f       	mov    %r11b,0xf(%rsp)
    7e9c:	4c 89 74 24 68       	mov    %r14,0x68(%rsp)
    7ea1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7ea8:	00 00 00 
    7eab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7eb0:	83 7c 24 34 00       	cmpl   $0x0,0x34(%rsp)
    7eb5:	0f 84 a3 0b 00 00    	je     8a5e <core::slice::sort::recurse+0xc1e>
    7ebb:	45 84 db             	test   %r11b,%r11b
    7ebe:	0f 84 25 04 00 00    	je     82e9 <core::slice::sort::recurse+0x4a9>
    7ec4:	4d 89 fc             	mov    %r15,%r12
    7ec7:	49 c1 ec 02          	shr    $0x2,%r12
    7ecb:	4b 8d 34 24          	lea    (%r12,%r12,1),%rsi
    7ecf:	4f 8d 2c 64          	lea    (%r12,%r12,2),%r13
    7ed3:	49 83 ff 32          	cmp    $0x32,%r15
    7ed7:	0f 82 c3 01 00 00    	jb     80a0 <core::slice::sort::recurse+0x260>
    7edd:	48 8d 56 ff          	lea    -0x1(%rsi),%rdx
    7ee1:	48 89 f0             	mov    %rsi,%rax
    7ee4:	48 83 c8 01          	or     $0x1,%rax
    7ee8:	48 8d 0c 76          	lea    (%rsi,%rsi,2),%rcx
    7eec:	48 8b 6c cb e8       	mov    -0x18(%rbx,%rcx,8),%rbp
    7ef1:	48 8b 3c cb          	mov    (%rbx,%rcx,8),%rdi
    7ef5:	48 89 7c 24 70       	mov    %rdi,0x70(%rsp)
    7efa:	48 89 e9             	mov    %rbp,%rcx
    7efd:	48 89 6c 24 48       	mov    %rbp,0x48(%rsp)
    7f02:	48 39 ef             	cmp    %rbp,%rdi
    7f05:	49 89 f0             	mov    %rsi,%r8
    7f08:	4c 0f 42 c2          	cmovb  %rdx,%r8
    7f0c:	48 0f 42 d6          	cmovb  %rsi,%rdx
    7f10:	48 89 fd             	mov    %rdi,%rbp
    7f13:	48 0f 42 e9          	cmovb  %rcx,%rbp
    7f17:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
    7f1b:	48 8b 0c f3          	mov    (%rbx,%rsi,8),%rcx
    7f1f:	48 89 8c 24 a8 00 00 	mov    %rcx,0xa8(%rsp)
    7f26:	00 
    7f27:	48 39 e9             	cmp    %rbp,%rcx
    7f2a:	4c 0f 42 c0          	cmovb  %rax,%r8
    7f2e:	4c 89 7c 24 50       	mov    %r15,0x50(%rsp)
    7f33:	48 89 e8             	mov    %rbp,%rax
    7f36:	48 0f 42 c1          	cmovb  %rcx,%rax
    7f3a:	48 89 c7             	mov    %rax,%rdi
    7f3d:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    7f44:	00 
    7f45:	49 8d 45 ff          	lea    -0x1(%r13),%rax
    7f49:	4d 8d 4d 01          	lea    0x1(%r13),%r9
    7f4d:	4f 8d 74 6d 00       	lea    0x0(%r13,%r13,2),%r14
    7f52:	4a 8b 4c f3 e8       	mov    -0x18(%rbx,%r14,8),%rcx
    7f57:	48 89 8c 24 b0 00 00 	mov    %rcx,0xb0(%rsp)
    7f5e:	00 
    7f5f:	4e 8b 1c f3          	mov    (%rbx,%r14,8),%r11
    7f63:	4c 89 9c 24 b8 00 00 	mov    %r11,0xb8(%rsp)
    7f6a:	00 
    7f6b:	49 39 cb             	cmp    %rcx,%r11
    7f6e:	4c 89 ee             	mov    %r13,%rsi
    7f71:	48 0f 42 f0          	cmovb  %rax,%rsi
    7f75:	49 0f 42 c5          	cmovb  %r13,%rax
    7f79:	4c 0f 42 d9          	cmovb  %rcx,%r11
    7f7d:	4a 8b 4c f3 18       	mov    0x18(%rbx,%r14,8),%rcx
    7f82:	48 89 8c 24 a0 00 00 	mov    %rcx,0xa0(%rsp)
    7f89:	00 
    7f8a:	4c 39 d9             	cmp    %r11,%rcx
    7f8d:	49 0f 42 f1          	cmovb  %r9,%rsi
    7f91:	4d 89 de             	mov    %r11,%r14
    7f94:	4c 0f 42 f1          	cmovb  %rcx,%r14
    7f98:	4c 8d 14 40          	lea    (%rax,%rax,2),%r10
    7f9c:	4a 8b 0c d3          	mov    (%rbx,%r10,8),%rcx
    7fa0:	48 89 8c 24 98 00 00 	mov    %rcx,0x98(%rsp)
    7fa7:	00 
    7fa8:	49 39 ce             	cmp    %rcx,%r14
    7fab:	48 0f 42 f0          	cmovb  %rax,%rsi
    7faf:	48 8d 04 52          	lea    (%rdx,%rdx,2),%rax
    7fb3:	48 8b 04 c3          	mov    (%rbx,%rax,8),%rax
    7fb7:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
    7fbe:	00 
    7fbf:	48 39 c7             	cmp    %rax,%rdi
    7fc2:	4c 0f 42 c2          	cmovb  %rdx,%r8
    7fc6:	4a 8b 54 eb e8       	mov    -0x18(%rbx,%r13,8),%rdx
    7fcb:	4a 8b 04 eb          	mov    (%rbx,%r13,8),%rax
    7fcf:	45 31 c9             	xor    %r9d,%r9d
    7fd2:	48 39 d0             	cmp    %rdx,%rax
    7fd5:	48 0f 42 c2          	cmovb  %rdx,%rax
    7fd9:	49 8d 4c 24 ff       	lea    -0x1(%r12),%rcx
    7fde:	4c 89 e7             	mov    %r12,%rdi
    7fe1:	48 0f 42 f9          	cmovb  %rcx,%rdi
    7fe5:	41 0f 92 c1          	setb   %r9b
    7fe9:	49 0f 42 cc          	cmovb  %r12,%rcx
    7fed:	4e 8b 6c eb 18       	mov    0x18(%rbx,%r13,8),%r13
    7ff2:	49 39 c5             	cmp    %rax,%r13
    7ff5:	49 8d 51 01          	lea    0x1(%r9),%rdx
    7ff9:	49 0f 43 d1          	cmovae %r9,%rdx
    7ffd:	49 89 c1             	mov    %rax,%r9
    8000:	4d 0f 42 cd          	cmovb  %r13,%r9
    8004:	4c 8d 14 49          	lea    (%rcx,%rcx,2),%r10
    8008:	4e 8b 14 d3          	mov    (%rbx,%r10,8),%r10
    800c:	4d 39 d1             	cmp    %r10,%r9
    800f:	48 83 d2 00          	adc    $0x0,%rdx
    8013:	4c 8b 7c 24 48       	mov    0x48(%rsp),%r15
    8018:	4c 39 7c 24 70       	cmp    %r15,0x70(%rsp)
    801d:	48 83 d2 00          	adc    $0x0,%rdx
    8021:	48 39 ac 24 a8 00 00 	cmp    %rbp,0xa8(%rsp)
    8028:	00 
    8029:	48 83 d2 00          	adc    $0x0,%rdx
    802d:	48 8b ac 24 88 00 00 	mov    0x88(%rsp),%rbp
    8034:	00 
    8035:	48 3b ac 24 90 00 00 	cmp    0x90(%rsp),%rbp
    803c:	00 
    803d:	4c 8b 7c 24 50       	mov    0x50(%rsp),%r15
    8042:	48 83 d2 00          	adc    $0x0,%rdx
    8046:	49 83 c4 01          	add    $0x1,%r12
    804a:	49 39 c5             	cmp    %rax,%r13
    804d:	4c 0f 43 e7          	cmovae %rdi,%r12
    8051:	4d 39 d1             	cmp    %r10,%r9
    8054:	4c 8b 54 24 38       	mov    0x38(%rsp),%r10
    8059:	4c 0f 42 e1          	cmovb  %rcx,%r12
    805d:	48 8b 84 24 b0 00 00 	mov    0xb0(%rsp),%rax
    8064:	00 
    8065:	48 39 84 24 b8 00 00 	cmp    %rax,0xb8(%rsp)
    806c:	00 
    806d:	48 83 d2 00          	adc    $0x0,%rdx
    8071:	4c 39 9c 24 a0 00 00 	cmp    %r11,0xa0(%rsp)
    8078:	00 
    8079:	44 8a 5c 24 0f       	mov    0xf(%rsp),%r11b
    807e:	48 83 d2 00          	adc    $0x0,%rdx
    8082:	4c 3b b4 24 98 00 00 	cmp    0x98(%rsp),%r14
    8089:	00 
    808a:	4c 8b 74 24 68       	mov    0x68(%rsp),%r14
    808f:	48 83 d2 00          	adc    $0x0,%rdx
    8093:	49 89 f5             	mov    %rsi,%r13
    8096:	4c 89 c6             	mov    %r8,%rsi
    8099:	e9 04 00 00 00       	jmpq   80a2 <core::slice::sort::recurse+0x262>
    809e:	66 90                	xchg   %ax,%ax
    80a0:	31 d2                	xor    %edx,%edx
    80a2:	48 8d 04 76          	lea    (%rsi,%rsi,2),%rax
    80a6:	48 8b 0c c3          	mov    (%rbx,%rax,8),%rcx
    80aa:	4b 8d 04 64          	lea    (%r12,%r12,2),%rax
    80ae:	48 8b 3c c3          	mov    (%rbx,%rax,8),%rdi
    80b2:	48 39 f9             	cmp    %rdi,%rcx
    80b5:	48 83 d2 00          	adc    $0x0,%rdx
    80b9:	48 39 f9             	cmp    %rdi,%rcx
    80bc:	48 89 f0             	mov    %rsi,%rax
    80bf:	49 0f 42 c4          	cmovb  %r12,%rax
    80c3:	4c 0f 42 e6          	cmovb  %rsi,%r12
    80c7:	48 0f 42 cf          	cmovb  %rdi,%rcx
    80cb:	4a 8d 34 6d 00 00 00 	lea    0x0(,%r13,2),%rsi
    80d2:	00 
    80d3:	4c 01 ee             	add    %r13,%rsi
    80d6:	48 8b 34 f3          	mov    (%rbx,%rsi,8),%rsi
    80da:	48 39 ce             	cmp    %rcx,%rsi
    80dd:	48 83 d2 00          	adc    $0x0,%rdx
    80e1:	48 39 ce             	cmp    %rcx,%rsi
    80e4:	49 0f 42 c5          	cmovb  %r13,%rax
    80e8:	48 0f 42 ce          	cmovb  %rsi,%rcx
    80ec:	4b 8d 34 64          	lea    (%r12,%r12,2),%rsi
    80f0:	48 3b 0c f3          	cmp    (%rbx,%rsi,8),%rcx
    80f4:	73 1a                	jae    8110 <core::slice::sort::recurse+0x2d0>
    80f6:	48 83 fa 0b          	cmp    $0xb,%rdx
    80fa:	73 24                	jae    8120 <core::slice::sort::recurse+0x2e0>
    80fc:	48 83 c2 01          	add    $0x1,%rdx
    8100:	e9 0e 00 00 00       	jmpq   8113 <core::slice::sort::recurse+0x2d3>
    8105:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    810c:	00 00 00 
    810f:	90                   	nop
    8110:	49 89 c4             	mov    %rax,%r12
    8113:	48 85 d2             	test   %rdx,%rdx
    8116:	0f 94 c0             	sete   %al
    8119:	e9 68 00 00 00       	jmpq   8186 <core::slice::sort::recurse+0x346>
    811e:	66 90                	xchg   %ax,%ax
    8120:	4c 89 f8             	mov    %r15,%rax
    8123:	48 d1 e8             	shr    %rax
    8126:	0f 84 52 00 00 00    	je     817e <core::slice::sort::recurse+0x33e>
    812c:	4b 8d 0c 7f          	lea    (%r15,%r15,2),%rcx
    8130:	48 8d 0c cb          	lea    (%rbx,%rcx,8),%rcx
    8134:	48 83 c1 e8          	add    $0xffffffffffffffe8,%rcx
    8138:	48 89 da             	mov    %rbx,%rdx
    813b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8140:	48 8b 72 10          	mov    0x10(%rdx),%rsi
    8144:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
    8149:	0f 10 02             	movups (%rdx),%xmm0
    814c:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    8151:	48 8b 71 10          	mov    0x10(%rcx),%rsi
    8155:	0f 10 01             	movups (%rcx),%xmm0
    8158:	0f 11 02             	movups %xmm0,(%rdx)
    815b:	48 89 72 10          	mov    %rsi,0x10(%rdx)
    815f:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    8164:	48 89 71 10          	mov    %rsi,0x10(%rcx)
    8168:	0f 28 44 24 10       	movaps 0x10(%rsp),%xmm0
    816d:	0f 11 01             	movups %xmm0,(%rcx)
    8170:	48 83 c1 e8          	add    $0xffffffffffffffe8,%rcx
    8174:	48 83 c2 18          	add    $0x18,%rdx
    8178:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    817c:	75 c2                	jne    8140 <core::slice::sort::recurse+0x300>
    817e:	49 f7 d4             	not    %r12
    8181:	4d 01 fc             	add    %r15,%r12
    8184:	b0 01                	mov    $0x1,%al
    8186:	84 c0                	test   %al,%al
    8188:	0f 94 c0             	sete   %al
    818b:	8a 4c 24 40          	mov    0x40(%rsp),%cl
    818f:	80 f1 01             	xor    $0x1,%cl
    8192:	08 c1                	or     %al,%cl
    8194:	0f 84 6e 01 00 00    	je     8308 <core::slice::sort::recurse+0x4c8>
    819a:	4d 85 d2             	test   %r10,%r10
    819d:	0f 84 87 01 00 00    	je     832a <core::slice::sort::recurse+0x4ea>
    81a3:	4d 39 fc             	cmp    %r15,%r12
    81a6:	0f 83 90 09 00 00    	jae    8b3c <core::slice::sort::recurse+0xcfc>
    81ac:	4b 8d 04 64          	lea    (%r12,%r12,2),%rax
    81b0:	49 8b 0a             	mov    (%r10),%rcx
    81b3:	48 3b 0c c3          	cmp    (%rbx,%rax,8),%rcx
    81b7:	0f 82 7c 01 00 00    	jb     8339 <core::slice::sort::recurse+0x4f9>
    81bd:	48 8d 04 c3          	lea    (%rbx,%rax,8),%rax
    81c1:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    81c5:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
    81ca:	0f 10 03             	movups (%rbx),%xmm0
    81cd:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    81d2:	48 8b 48 10          	mov    0x10(%rax),%rcx
    81d6:	0f 10 00             	movups (%rax),%xmm0
    81d9:	0f 11 03             	movups %xmm0,(%rbx)
    81dc:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
    81e0:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    81e5:	48 89 48 10          	mov    %rcx,0x10(%rax)
    81e9:	0f 28 44 24 10       	movaps 0x10(%rsp),%xmm0
    81ee:	0f 11 00             	movups %xmm0,(%rax)
    81f1:	4c 8d 4b 18          	lea    0x18(%rbx),%r9
    81f5:	48 8b 0b             	mov    (%rbx),%rcx
    81f8:	4c 8d 43 08          	lea    0x8(%rbx),%r8
    81fc:	0f 10 43 08          	movups 0x8(%rbx),%xmm0
    8200:	0f 29 84 24 e0 00 00 	movaps %xmm0,0xe0(%rsp)
    8207:	00 
    8208:	4c 89 fe             	mov    %r15,%rsi
    820b:	31 ff                	xor    %edi,%edi
    820d:	48 8d 6e ff          	lea    -0x1(%rsi),%rbp
    8211:	48 39 ef             	cmp    %rbp,%rdi
    8214:	73 1f                	jae    8235 <core::slice::sort::recurse+0x3f5>
    8216:	48 8d 04 7f          	lea    (%rdi,%rdi,2),%rax
    821a:	49 8d 04 c1          	lea    (%r9,%rax,8),%rax
    821e:	66 90                	xchg   %ax,%ax
    8220:	48 3b 08             	cmp    (%rax),%rcx
    8223:	72 10                	jb     8235 <core::slice::sort::recurse+0x3f5>
    8225:	48 83 c7 01          	add    $0x1,%rdi
    8229:	48 83 c0 18          	add    $0x18,%rax
    822d:	48 39 fd             	cmp    %rdi,%rbp
    8230:	75 ee                	jne    8220 <core::slice::sort::recurse+0x3e0>
    8232:	48 89 ef             	mov    %rbp,%rdi
    8235:	48 8d 04 76          	lea    (%rsi,%rsi,2),%rax
    8239:	48 8d 2c c3          	lea    (%rbx,%rax,8),%rbp
    823d:	0f 1f 00             	nopl   (%rax)
    8240:	48 83 c6 ff          	add    $0xffffffffffffffff,%rsi
    8244:	48 39 f7             	cmp    %rsi,%rdi
    8247:	73 67                	jae    82b0 <core::slice::sort::recurse+0x470>
    8249:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    824d:	48 3b 4d e8          	cmp    -0x18(%rbp),%rcx
    8251:	48 89 c5             	mov    %rax,%rbp
    8254:	72 ea                	jb     8240 <core::slice::sort::recurse+0x400>
    8256:	48 8d 2c 7f          	lea    (%rdi,%rdi,2),%rbp
    825a:	49 8b 54 e9 10       	mov    0x10(%r9,%rbp,8),%rdx
    825f:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
    8264:	41 0f 10 04 e9       	movups (%r9,%rbp,8),%xmm0
    8269:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    826e:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8272:	0f 10 00             	movups (%rax),%xmm0
    8275:	41 0f 11 04 e9       	movups %xmm0,(%r9,%rbp,8)
    827a:	49 89 54 e9 10       	mov    %rdx,0x10(%r9,%rbp,8)
    827f:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    8284:	48 89 50 10          	mov    %rdx,0x10(%rax)
    8288:	0f 28 44 24 10       	movaps 0x10(%rsp),%xmm0
    828d:	0f 11 00             	movups %xmm0,(%rax)
    8290:	48 83 c7 01          	add    $0x1,%rdi
    8294:	48 8d 6e ff          	lea    -0x1(%rsi),%rbp
    8298:	48 39 ef             	cmp    %rbp,%rdi
    829b:	0f 82 75 ff ff ff    	jb     8216 <core::slice::sort::recurse+0x3d6>
    82a1:	e9 8f ff ff ff       	jmpq   8235 <core::slice::sort::recurse+0x3f5>
    82a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    82ad:	00 00 00 
    82b0:	48 83 c7 01          	add    $0x1,%rdi
    82b4:	48 89 0b             	mov    %rcx,(%rbx)
    82b7:	0f 28 84 24 e0 00 00 	movaps 0xe0(%rsp),%xmm0
    82be:	00 
    82bf:	41 0f 11 00          	movups %xmm0,(%r8)
    82c3:	4d 89 fd             	mov    %r15,%r13
    82c6:	49 29 fd             	sub    %rdi,%r13
    82c9:	0f 82 82 08 00 00    	jb     8b51 <core::slice::sort::recurse+0xd11>
    82cf:	48 8d 04 7f          	lea    (%rdi,%rdi,2),%rax
    82d3:	48 8d 1c c3          	lea    (%rbx,%rax,8),%rbx
    82d7:	4d 89 ef             	mov    %r13,%r15
    82da:	49 83 fd 15          	cmp    $0x15,%r13
    82de:	0f 83 cc fb ff ff    	jae    7eb0 <core::slice::sort::recurse+0x70>
    82e4:	e9 8a 07 00 00       	jmpq   8a73 <core::slice::sort::recurse+0xc33>
    82e9:	48 89 df             	mov    %rbx,%rdi
    82ec:	4c 89 fe             	mov    %r15,%rsi
    82ef:	e8 cc f6 ff ff       	callq  79c0 <core::slice::sort::break_patterns>
    82f4:	44 8a 5c 24 0f       	mov    0xf(%rsp),%r11b
    82f9:	4c 8b 54 24 38       	mov    0x38(%rsp),%r10
    82fe:	83 44 24 34 ff       	addl   $0xffffffff,0x34(%rsp)
    8303:	e9 bc fb ff ff       	jmpq   7ec4 <core::slice::sort::recurse+0x84>
    8308:	48 89 df             	mov    %rbx,%rdi
    830b:	4c 89 fe             	mov    %r15,%rsi
    830e:	e8 cd f8 ff ff       	callq  7be0 <core::slice::sort::partial_insertion_sort>
    8313:	44 8a 5c 24 0f       	mov    0xf(%rsp),%r11b
    8318:	4c 8b 54 24 38       	mov    0x38(%rsp),%r10
    831d:	84 c0                	test   %al,%al
    831f:	0f 84 75 fe ff ff    	je     819a <core::slice::sort::recurse+0x35a>
    8325:	e9 00 08 00 00       	jmpq   8b2a <core::slice::sort::recurse+0xcea>
    832a:	4c 8b 7c 24 60       	mov    0x60(%rsp),%r15
    832f:	4d 85 ff             	test   %r15,%r15
    8332:	75 08                	jne    833c <core::slice::sort::recurse+0x4fc>
    8334:	e9 2a 08 00 00       	jmpq   8b63 <core::slice::sort::recurse+0xd23>
    8339:	49 89 de             	mov    %rbx,%r14
    833c:	4d 39 fc             	cmp    %r15,%r12
    833f:	0f 83 31 08 00 00    	jae    8b76 <core::slice::sort::recurse+0xd36>
    8345:	4b 8d 04 64          	lea    (%r12,%r12,2),%rax
    8349:	49 8b 4e 10          	mov    0x10(%r14),%rcx
    834d:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
    8352:	41 0f 10 06          	movups (%r14),%xmm0
    8356:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    835b:	49 8b 4c c6 10       	mov    0x10(%r14,%rax,8),%rcx
    8360:	41 0f 10 04 c6       	movups (%r14,%rax,8),%xmm0
    8365:	41 0f 11 06          	movups %xmm0,(%r14)
    8369:	49 89 4e 10          	mov    %rcx,0x10(%r14)
    836d:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    8372:	49 89 4c c6 10       	mov    %rcx,0x10(%r14,%rax,8)
    8377:	0f 28 44 24 10       	movaps 0x10(%rsp),%xmm0
    837c:	41 0f 11 04 c6       	movups %xmm0,(%r14,%rax,8)
    8381:	49 8d 46 18          	lea    0x18(%r14),%rax
    8385:	4c 89 fe             	mov    %r15,%rsi
    8388:	49 8b 4e 10          	mov    0x10(%r14),%rcx
    838c:	48 89 8c 24 d0 00 00 	mov    %rcx,0xd0(%rsp)
    8393:	00 
    8394:	41 0f 10 06          	movups (%r14),%xmm0
    8398:	0f 29 84 24 c0 00 00 	movaps %xmm0,0xc0(%rsp)
    839f:	00 
    83a0:	48 8d 8c 24 c0 00 00 	lea    0xc0(%rsp),%rcx
    83a7:	00 
    83a8:	48 89 4c 24 78       	mov    %rcx,0x78(%rsp)
    83ad:	4c 89 b4 24 80 00 00 	mov    %r14,0x80(%rsp)
    83b4:	00 
    83b5:	4c 8b 9c 24 c0 00 00 	mov    0xc0(%rsp),%r11
    83bc:	00 
    83bd:	48 83 c6 ff          	add    $0xffffffffffffffff,%rsi
    83c1:	74 24                	je     83e7 <core::slice::sort::recurse+0x5a7>
    83c3:	48 89 c1             	mov    %rax,%rcx
    83c6:	31 db                	xor    %ebx,%ebx
    83c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    83cf:	00 
    83d0:	4c 39 19             	cmp    %r11,(%rcx)
    83d3:	73 14                	jae    83e9 <core::slice::sort::recurse+0x5a9>
    83d5:	48 83 c3 01          	add    $0x1,%rbx
    83d9:	48 83 c1 18          	add    $0x18,%rcx
    83dd:	48 39 de             	cmp    %rbx,%rsi
    83e0:	75 ee                	jne    83d0 <core::slice::sort::recurse+0x590>
    83e2:	48 89 f3             	mov    %rsi,%rbx
    83e5:	eb 02                	jmp    83e9 <core::slice::sort::recurse+0x5a9>
    83e7:	31 db                	xor    %ebx,%ebx
    83e9:	48 39 f3             	cmp    %rsi,%rbx
    83ec:	48 89 f1             	mov    %rsi,%rcx
    83ef:	48 0f 42 cb          	cmovb  %rbx,%rcx
    83f3:	4b 8d 14 7f          	lea    (%r15,%r15,2),%rdx
    83f7:	49 8d 14 d6          	lea    (%r14,%rdx,8),%rdx
    83fb:	48 83 c2 e8          	add    $0xffffffffffffffe8,%rdx
    83ff:	4c 89 fd             	mov    %r15,%rbp
    8402:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    8409:	00 00 00 
    840c:	0f 1f 40 00          	nopl   0x0(%rax)
    8410:	48 83 c5 ff          	add    $0xffffffffffffffff,%rbp
    8414:	48 39 dd             	cmp    %rbx,%rbp
    8417:	76 0e                	jbe    8427 <core::slice::sort::recurse+0x5e7>
    8419:	48 8d 7a e8          	lea    -0x18(%rdx),%rdi
    841d:	4c 39 1a             	cmp    %r11,(%rdx)
    8420:	48 89 fa             	mov    %rdi,%rdx
    8423:	73 eb                	jae    8410 <core::slice::sort::recurse+0x5d0>
    8425:	eb 03                	jmp    842a <core::slice::sort::recurse+0x5ea>
    8427:	48 89 cd             	mov    %rcx,%rbp
    842a:	48 39 dd             	cmp    %rbx,%rbp
    842d:	0f 82 58 07 00 00    	jb     8b8b <core::slice::sort::recurse+0xd4b>
    8433:	4c 89 7c 24 60       	mov    %r15,0x60(%rsp)
    8438:	4c 89 74 24 68       	mov    %r14,0x68(%rsp)
    843d:	48 39 ee             	cmp    %rbp,%rsi
    8440:	48 8d bc 24 68 01 00 	lea    0x168(%rsp),%rdi
    8447:	00 
    8448:	0f 82 52 07 00 00    	jb     8ba0 <core::slice::sort::recurse+0xd60>
    844e:	48 89 5c 24 50       	mov    %rbx,0x50(%rsp)
    8453:	48 8d 0c 5b          	lea    (%rbx,%rbx,2),%rcx
    8457:	4c 8d 04 c8          	lea    (%rax,%rcx,8),%r8
    845b:	48 89 6c 24 70       	mov    %rbp,0x70(%rsp)
    8460:	48 8d 0c 6d 00 00 00 	lea    0x0(,%rbp,2),%rcx
    8467:	00 
    8468:	48 01 e9             	add    %rbp,%rcx
    846b:	4c 8d 2c c8          	lea    (%rax,%rcx,8),%r13
    846f:	41 bf 80 00 00 00    	mov    $0x80,%r15d
    8475:	bb 00 00 00 00       	mov    $0x0,%ebx
    847a:	41 be 00 00 00 00    	mov    $0x0,%r14d
    8480:	31 ed                	xor    %ebp,%ebp
    8482:	45 31 c9             	xor    %r9d,%r9d
    8485:	41 bc 80 00 00 00    	mov    $0x80,%r12d
    848b:	4c 89 44 24 48       	mov    %r8,0x48(%rsp)
    8490:	e9 42 00 00 00       	jmpq   84d7 <core::slice::sort::recurse+0x697>
    8495:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    849c:	00 00 00 
    849f:	90                   	nop
    84a0:	4c 8b 64 24 40       	mov    0x40(%rsp),%r12
    84a5:	49 39 e9             	cmp    %rbp,%r9
    84a8:	4b 8d 04 64          	lea    (%r12,%r12,2),%rax
    84ac:	49 8d 04 c0          	lea    (%r8,%rax,8),%rax
    84b0:	4c 0f 44 c0          	cmove  %rax,%r8
    84b4:	4c 89 f8             	mov    %r15,%rax
    84b7:	48 f7 d8             	neg    %rax
    84ba:	49 39 de             	cmp    %rbx,%r14
    84bd:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    84c1:	49 8d 44 c5 00       	lea    0x0(%r13,%rax,8),%rax
    84c6:	4c 0f 44 e8          	cmove  %rax,%r13
    84ca:	49 81 fa 17 18 00 00 	cmp    $0x1817,%r10
    84d1:	0f 86 89 03 00 00    	jbe    8860 <core::slice::sort::recurse+0xa20>
    84d7:	4d 89 ea             	mov    %r13,%r10
    84da:	4d 29 c2             	sub    %r8,%r10
    84dd:	4c 89 d0             	mov    %r10,%rax
    84e0:	48 b9 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rcx
    84e7:	aa aa aa 
    84ea:	48 f7 e1             	mul    %rcx
    84ed:	49 81 fa 17 18 00 00 	cmp    $0x1817,%r10
    84f4:	77 3b                	ja     8531 <core::slice::sort::recurse+0x6f1>
    84f6:	48 c1 ea 04          	shr    $0x4,%rdx
    84fa:	49 39 e9             	cmp    %rbp,%r9
    84fd:	0f 92 c0             	setb   %al
    8500:	49 39 de             	cmp    %rbx,%r14
    8503:	40 0f 92 c6          	setb   %sil
    8507:	40 08 c6             	or     %al,%sil
    850a:	48 8d 42 80          	lea    -0x80(%rdx),%rax
    850e:	40 84 f6             	test   %sil,%sil
    8511:	48 0f 44 c2          	cmove  %rdx,%rax
    8515:	49 39 e9             	cmp    %rbp,%r9
    8518:	4c 0f 42 f8          	cmovb  %rax,%r15
    851c:	4c 0f 43 e0          	cmovae %rax,%r12
    8520:	40 84 f6             	test   %sil,%sil
    8523:	75 0c                	jne    8531 <core::slice::sort::recurse+0x6f1>
    8525:	49 89 c4             	mov    %rax,%r12
    8528:	49 d1 ec             	shr    %r12
    852b:	4c 29 e0             	sub    %r12,%rax
    852e:	49 89 c7             	mov    %rax,%r15
    8531:	4c 89 64 24 40       	mov    %r12,0x40(%rsp)
    8536:	4d 89 fc             	mov    %r15,%r12
    8539:	49 39 e9             	cmp    %rbp,%r9
    853c:	0f 84 8e 00 00 00    	je     85d0 <core::slice::sort::recurse+0x790>
    8542:	49 39 de             	cmp    %rbx,%r14
    8545:	4d 89 e7             	mov    %r12,%r15
    8548:	0f 84 d2 00 00 00    	je     8620 <core::slice::sort::recurse+0x7e0>
    854e:	48 89 ea             	mov    %rbp,%rdx
    8551:	4c 29 ca             	sub    %r9,%rdx
    8554:	48 89 d8             	mov    %rbx,%rax
    8557:	4c 29 f0             	sub    %r14,%rax
    855a:	48 39 c2             	cmp    %rax,%rdx
    855d:	48 0f 46 c2          	cmovbe %rdx,%rax
    8561:	48 85 c0             	test   %rax,%rax
    8564:	0f 84 36 ff ff ff    	je     84a0 <core::slice::sort::recurse+0x660>
    856a:	41 0f b6 11          	movzbl (%r9),%edx
    856e:	48 8d 14 52          	lea    (%rdx,%rdx,2),%rdx
    8572:	49 8b 74 d0 10       	mov    0x10(%r8,%rdx,8),%rsi
    8577:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
    857c:	41 0f 10 04 d0       	movups (%r8,%rdx,8),%xmm0
    8581:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    8586:	41 0f b6 16          	movzbl (%r14),%edx
    858a:	48 f7 d2             	not    %rdx
    858d:	48 8d 14 52          	lea    (%rdx,%rdx,2),%rdx
    8591:	41 0f b6 31          	movzbl (%r9),%esi
    8595:	48 8d 34 76          	lea    (%rsi,%rsi,2),%rsi
    8599:	49 8b 7c d5 10       	mov    0x10(%r13,%rdx,8),%rdi
    859e:	49 89 7c f0 10       	mov    %rdi,0x10(%r8,%rsi,8)
    85a3:	41 0f 10 44 d5 00    	movups 0x0(%r13,%rdx,8),%xmm0
    85a9:	41 0f 11 04 f0       	movups %xmm0,(%r8,%rsi,8)
    85ae:	48 83 f8 01          	cmp    $0x1,%rax
    85b2:	4c 8b 64 24 40       	mov    0x40(%rsp),%r12
    85b7:	0f 85 a3 00 00 00    	jne    8660 <core::slice::sort::recurse+0x820>
    85bd:	4c 89 ca             	mov    %r9,%rdx
    85c0:	e9 0f 01 00 00       	jmpq   86d4 <core::slice::sort::recurse+0x894>
    85c5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    85cc:	00 00 00 
    85cf:	90                   	nop
    85d0:	48 89 fd             	mov    %rdi,%rbp
    85d3:	49 89 f9             	mov    %rdi,%r9
    85d6:	48 83 7c 24 40 00    	cmpq   $0x0,0x40(%rsp)
    85dc:	0f 84 60 ff ff ff    	je     8542 <core::slice::sort::recurse+0x702>
    85e2:	4c 8b 4c 24 40       	mov    0x40(%rsp),%r9
    85e7:	49 8d 51 ff          	lea    -0x1(%r9),%rdx
    85eb:	44 89 c8             	mov    %r9d,%eax
    85ee:	83 e0 03             	and    $0x3,%eax
    85f1:	48 83 fa 03          	cmp    $0x3,%rdx
    85f5:	0f 83 11 01 00 00    	jae    870c <core::slice::sort::recurse+0x8cc>
    85fb:	48 89 fd             	mov    %rdi,%rbp
    85fe:	4c 89 c2             	mov    %r8,%rdx
    8601:	45 31 ff             	xor    %r15d,%r15d
    8604:	49 89 f9             	mov    %rdi,%r9
    8607:	48 85 c0             	test   %rax,%rax
    860a:	0f 85 70 01 00 00    	jne    8780 <core::slice::sort::recurse+0x940>
    8610:	e9 2d ff ff ff       	jmpq   8542 <core::slice::sort::recurse+0x702>
    8615:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    861c:	00 00 00 
    861f:	90                   	nop
    8620:	4c 8d b4 24 e0 00 00 	lea    0xe0(%rsp),%r14
    8627:	00 
    8628:	4c 89 f3             	mov    %r14,%rbx
    862b:	4d 85 ff             	test   %r15,%r15
    862e:	0f 84 1a ff ff ff    	je     854e <core::slice::sort::recurse+0x70e>
    8634:	49 8d 4f ff          	lea    -0x1(%r15),%rcx
    8638:	44 89 f8             	mov    %r15d,%eax
    863b:	83 e0 03             	and    $0x3,%eax
    863e:	48 83 f9 03          	cmp    $0x3,%rcx
    8642:	0f 83 59 01 00 00    	jae    87a1 <core::slice::sort::recurse+0x961>
    8648:	48 8d 9c 24 e0 00 00 	lea    0xe0(%rsp),%rbx
    864f:	00 
    8650:	4c 89 ee             	mov    %r13,%rsi
    8653:	31 d2                	xor    %edx,%edx
    8655:	e9 b1 01 00 00       	jmpq   880b <core::slice::sort::recurse+0x9cb>
    865a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8660:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    8664:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    866b:	00 00 00 
    866e:	66 90                	xchg   %ax,%ax
    8670:	49 8d 51 01          	lea    0x1(%r9),%rdx
    8674:	41 0f b6 71 01       	movzbl 0x1(%r9),%esi
    8679:	48 8d 34 76          	lea    (%rsi,%rsi,2),%rsi
    867d:	41 0f b6 3e          	movzbl (%r14),%edi
    8681:	48 f7 d7             	not    %rdi
    8684:	48 8d 3c 7f          	lea    (%rdi,%rdi,2),%rdi
    8688:	49 8b 4c f0 10       	mov    0x10(%r8,%rsi,8),%rcx
    868d:	49 89 4c fd 10       	mov    %rcx,0x10(%r13,%rdi,8)
    8692:	41 0f 10 04 f0       	movups (%r8,%rsi,8),%xmm0
    8697:	41 0f 11 44 fd 00    	movups %xmm0,0x0(%r13,%rdi,8)
    869d:	41 0f b6 4e 01       	movzbl 0x1(%r14),%ecx
    86a2:	49 83 c6 01          	add    $0x1,%r14
    86a6:	48 f7 d1             	not    %rcx
    86a9:	48 8d 0c 49          	lea    (%rcx,%rcx,2),%rcx
    86ad:	41 0f b6 71 01       	movzbl 0x1(%r9),%esi
    86b2:	48 8d 34 76          	lea    (%rsi,%rsi,2),%rsi
    86b6:	49 8b 7c cd 10       	mov    0x10(%r13,%rcx,8),%rdi
    86bb:	49 89 7c f0 10       	mov    %rdi,0x10(%r8,%rsi,8)
    86c0:	41 0f 10 44 cd 00    	movups 0x0(%r13,%rcx,8),%xmm0
    86c6:	41 0f 11 04 f0       	movups %xmm0,(%r8,%rsi,8)
    86cb:	49 89 d1             	mov    %rdx,%r9
    86ce:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    86d2:	75 9c                	jne    8670 <core::slice::sort::recurse+0x830>
    86d4:	41 0f b6 06          	movzbl (%r14),%eax
    86d8:	48 f7 d0             	not    %rax
    86db:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    86df:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    86e4:	49 89 74 c5 10       	mov    %rsi,0x10(%r13,%rax,8)
    86e9:	0f 28 44 24 10       	movaps 0x10(%rsp),%xmm0
    86ee:	41 0f 11 44 c5 00    	movups %xmm0,0x0(%r13,%rax,8)
    86f4:	48 83 c2 01          	add    $0x1,%rdx
    86f8:	49 83 c6 01          	add    $0x1,%r14
    86fc:	49 89 d1             	mov    %rdx,%r9
    86ff:	48 8d bc 24 68 01 00 	lea    0x168(%rsp),%rdi
    8706:	00 
    8707:	e9 99 fd ff ff       	jmpq   84a5 <core::slice::sort::recurse+0x665>
    870c:	49 83 e1 fc          	and    $0xfffffffffffffffc,%r9
    8710:	48 89 fd             	mov    %rdi,%rbp
    8713:	4c 89 c2             	mov    %r8,%rdx
    8716:	45 31 ff             	xor    %r15d,%r15d
    8719:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8720:	44 89 ff             	mov    %r15d,%edi
    8723:	44 88 7d 00          	mov    %r15b,0x0(%rbp)
    8727:	4c 39 1a             	cmp    %r11,(%rdx)
    872a:	48 83 dd ff          	sbb    $0xffffffffffffffff,%rbp
    872e:	8d 77 01             	lea    0x1(%rdi),%esi
    8731:	40 88 75 00          	mov    %sil,0x0(%rbp)
    8735:	4c 39 5a 18          	cmp    %r11,0x18(%rdx)
    8739:	48 83 dd ff          	sbb    $0xffffffffffffffff,%rbp
    873d:	8d 77 02             	lea    0x2(%rdi),%esi
    8740:	40 88 75 00          	mov    %sil,0x0(%rbp)
    8744:	4c 39 5a 30          	cmp    %r11,0x30(%rdx)
    8748:	48 83 dd ff          	sbb    $0xffffffffffffffff,%rbp
    874c:	49 83 c7 04          	add    $0x4,%r15
    8750:	8d 77 03             	lea    0x3(%rdi),%esi
    8753:	40 88 75 00          	mov    %sil,0x0(%rbp)
    8757:	4c 39 5a 48          	cmp    %r11,0x48(%rdx)
    875b:	48 83 dd ff          	sbb    $0xffffffffffffffff,%rbp
    875f:	48 83 c2 60          	add    $0x60,%rdx
    8763:	4d 39 f9             	cmp    %r15,%r9
    8766:	75 b8                	jne    8720 <core::slice::sort::recurse+0x8e0>
    8768:	48 8d bc 24 68 01 00 	lea    0x168(%rsp),%rdi
    876f:	00 
    8770:	49 89 f9             	mov    %rdi,%r9
    8773:	48 85 c0             	test   %rax,%rax
    8776:	0f 84 c6 fd ff ff    	je     8542 <core::slice::sort::recurse+0x702>
    877c:	0f 1f 40 00          	nopl   0x0(%rax)
    8780:	44 88 7d 00          	mov    %r15b,0x0(%rbp)
    8784:	4c 39 1a             	cmp    %r11,(%rdx)
    8787:	48 83 dd ff          	sbb    $0xffffffffffffffff,%rbp
    878b:	48 83 c2 18          	add    $0x18,%rdx
    878f:	41 80 c7 01          	add    $0x1,%r15b
    8793:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    8797:	75 e7                	jne    8780 <core::slice::sort::recurse+0x940>
    8799:	49 89 f9             	mov    %rdi,%r9
    879c:	e9 a1 fd ff ff       	jmpq   8542 <core::slice::sort::recurse+0x702>
    87a1:	49 83 e7 fc          	and    $0xfffffffffffffffc,%r15
    87a5:	48 8d 9c 24 e0 00 00 	lea    0xe0(%rsp),%rbx
    87ac:	00 
    87ad:	4c 89 e9             	mov    %r13,%rcx
    87b0:	45 31 f6             	xor    %r14d,%r14d
    87b3:	31 d2                	xor    %edx,%edx
    87b5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    87bc:	00 00 00 
    87bf:	90                   	nop
    87c0:	44 88 33             	mov    %r14b,(%rbx)
    87c3:	4c 39 59 e8          	cmp    %r11,-0x18(%rcx)
    87c7:	48 83 d3 00          	adc    $0x0,%rbx
    87cb:	41 8d 76 01          	lea    0x1(%r14),%esi
    87cf:	40 88 33             	mov    %sil,(%rbx)
    87d2:	4c 39 59 d0          	cmp    %r11,-0x30(%rcx)
    87d6:	48 83 d3 00          	adc    $0x0,%rbx
    87da:	41 8d 76 02          	lea    0x2(%r14),%esi
    87de:	40 88 33             	mov    %sil,(%rbx)
    87e1:	4c 39 59 b8          	cmp    %r11,-0x48(%rcx)
    87e5:	48 83 d3 00          	adc    $0x0,%rbx
    87e9:	48 83 c2 04          	add    $0x4,%rdx
    87ed:	41 8d 76 03          	lea    0x3(%r14),%esi
    87f1:	40 88 33             	mov    %sil,(%rbx)
    87f4:	4c 39 59 a0          	cmp    %r11,-0x60(%rcx)
    87f8:	48 8d 71 a0          	lea    -0x60(%rcx),%rsi
    87fc:	48 83 d3 00          	adc    $0x0,%rbx
    8800:	48 89 f1             	mov    %rsi,%rcx
    8803:	49 89 d6             	mov    %rdx,%r14
    8806:	49 39 d7             	cmp    %rdx,%r15
    8809:	75 b5                	jne    87c0 <core::slice::sort::recurse+0x980>
    880b:	4c 8d b4 24 e0 00 00 	lea    0xe0(%rsp),%r14
    8812:	00 
    8813:	48 85 c0             	test   %rax,%rax
    8816:	4d 89 e7             	mov    %r12,%r15
    8819:	0f 84 2f fd ff ff    	je     854e <core::slice::sort::recurse+0x70e>
    881f:	48 83 c6 e8          	add    $0xffffffffffffffe8,%rsi
    8823:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    882a:	00 00 00 
    882d:	0f 1f 00             	nopl   (%rax)
    8830:	88 13                	mov    %dl,(%rbx)
    8832:	4c 39 1e             	cmp    %r11,(%rsi)
    8835:	48 83 d3 00          	adc    $0x0,%rbx
    8839:	48 83 c6 e8          	add    $0xffffffffffffffe8,%rsi
    883d:	80 c2 01             	add    $0x1,%dl
    8840:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    8844:	75 ea                	jne    8830 <core::slice::sort::recurse+0x9f0>
    8846:	4c 8d b4 24 e0 00 00 	lea    0xe0(%rsp),%r14
    884d:	00 
    884e:	e9 fb fc ff ff       	jmpq   854e <core::slice::sort::recurse+0x70e>
    8853:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    885a:	00 00 00 
    885d:	0f 1f 00             	nopl   (%rax)
    8860:	49 39 e9             	cmp    %rbp,%r9
    8863:	73 6f                	jae    88d4 <core::slice::sort::recurse+0xa94>
    8865:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    886a:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
    886f:	4c 8b 54 24 48       	mov    0x48(%rsp),%r10
    8874:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    887b:	00 00 00 
    887e:	66 90                	xchg   %ax,%ax
    8880:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    8884:	48 83 c5 ff          	add    $0xffffffffffffffff,%rbp
    8888:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
    888c:	49 8d 45 e8          	lea    -0x18(%r13),%rax
    8890:	49 8b 54 f0 10       	mov    0x10(%r8,%rsi,8),%rdx
    8895:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
    889a:	41 0f 10 04 f0       	movups (%r8,%rsi,8),%xmm0
    889f:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    88a4:	49 8b 55 f8          	mov    -0x8(%r13),%rdx
    88a8:	41 0f 10 45 e8       	movups -0x18(%r13),%xmm0
    88ad:	41 0f 11 04 f0       	movups %xmm0,(%r8,%rsi,8)
    88b2:	49 89 54 f0 10       	mov    %rdx,0x10(%r8,%rsi,8)
    88b7:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    88bc:	49 89 55 f8          	mov    %rdx,-0x8(%r13)
    88c0:	0f 28 44 24 10       	movaps 0x10(%rsp),%xmm0
    88c5:	41 0f 11 45 e8       	movups %xmm0,-0x18(%r13)
    88ca:	49 89 c5             	mov    %rax,%r13
    88cd:	49 39 e9             	cmp    %rbp,%r9
    88d0:	72 ae                	jb     8880 <core::slice::sort::recurse+0xa40>
    88d2:	eb 6c                	jmp    8940 <core::slice::sort::recurse+0xb00>
    88d4:	4c 89 c0             	mov    %r8,%rax
    88d7:	49 39 de             	cmp    %rbx,%r14
    88da:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    88df:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
    88e4:	4c 8b 54 24 48       	mov    0x48(%rsp),%r10
    88e9:	0f 83 51 00 00 00    	jae    8940 <core::slice::sort::recurse+0xb00>
    88ef:	90                   	nop
    88f0:	0f b6 53 ff          	movzbl -0x1(%rbx),%edx
    88f4:	48 83 c3 ff          	add    $0xffffffffffffffff,%rbx
    88f8:	48 f7 d2             	not    %rdx
    88fb:	48 8d 34 52          	lea    (%rdx,%rdx,2),%rsi
    88ff:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8903:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
    8908:	0f 10 00             	movups (%rax),%xmm0
    890b:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    8910:	49 8b 54 f5 10       	mov    0x10(%r13,%rsi,8),%rdx
    8915:	41 0f 10 44 f5 00    	movups 0x0(%r13,%rsi,8),%xmm0
    891b:	0f 11 00             	movups %xmm0,(%rax)
    891e:	48 89 50 10          	mov    %rdx,0x10(%rax)
    8922:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    8927:	49 89 54 f5 10       	mov    %rdx,0x10(%r13,%rsi,8)
    892c:	0f 28 44 24 10       	movaps 0x10(%rsp),%xmm0
    8931:	41 0f 11 44 f5 00    	movups %xmm0,0x0(%r13,%rsi,8)
    8937:	48 83 c0 18          	add    $0x18,%rax
    893b:	49 39 de             	cmp    %rbx,%r14
    893e:	72 b0                	jb     88f0 <core::slice::sort::recurse+0xab0>
    8940:	4c 29 d0             	sub    %r10,%rax
    8943:	48 ba ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rdx
    894a:	aa aa aa 
    894d:	48 f7 e2             	mul    %rdx
    8950:	49 89 d5             	mov    %rdx,%r13
    8953:	49 c1 ed 04          	shr    $0x4,%r13
    8957:	49 01 fd             	add    %rdi,%r13
    895a:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    895f:	48 8b b4 24 80 00 00 	mov    0x80(%rsp),%rsi
    8966:	00 
    8967:	48 8b 50 10          	mov    0x10(%rax),%rdx
    896b:	48 89 56 10          	mov    %rdx,0x10(%rsi)
    896f:	0f 10 00             	movups (%rax),%xmm0
    8972:	0f 11 06             	movups %xmm0,(%rsi)
    8975:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
    897a:	48 89 f3             	mov    %rsi,%rbx
    897d:	4c 29 eb             	sub    %r13,%rbx
    8980:	0f 86 2c 02 00 00    	jbe    8bb2 <core::slice::sort::recurse+0xd72>
    8986:	48 3b 7c 24 70       	cmp    0x70(%rsp),%rdi
    898b:	41 0f 93 c7          	setae  %r15b
    898f:	4b 8d 44 6d 00       	lea    0x0(%r13,%r13,2),%rax
    8994:	48 8b 6c 24 68       	mov    0x68(%rsp),%rbp
    8999:	48 8b 55 10          	mov    0x10(%rbp),%rdx
    899d:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
    89a2:	0f 10 45 00          	movups 0x0(%rbp),%xmm0
    89a6:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    89ab:	48 8b 54 c5 10       	mov    0x10(%rbp,%rax,8),%rdx
    89b0:	0f 10 44 c5 00       	movups 0x0(%rbp,%rax,8),%xmm0
    89b5:	0f 11 45 00          	movups %xmm0,0x0(%rbp)
    89b9:	48 89 55 10          	mov    %rdx,0x10(%rbp)
    89bd:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    89c2:	48 89 54 c5 10       	mov    %rdx,0x10(%rbp,%rax,8)
    89c7:	0f 28 44 24 10       	movaps 0x10(%rsp),%xmm0
    89cc:	0f 11 44 c5 00       	movups %xmm0,0x0(%rbp,%rax,8)
    89d1:	49 39 dd             	cmp    %rbx,%r13
    89d4:	4c 89 ea             	mov    %r13,%rdx
    89d7:	48 0f 47 d3          	cmova  %rbx,%rdx
    89db:	48 c1 ee 03          	shr    $0x3,%rsi
    89df:	48 39 f2             	cmp    %rsi,%rdx
    89e2:	0f 93 c2             	setae  %dl
    89e5:	48 85 db             	test   %rbx,%rbx
    89e8:	0f 84 d6 01 00 00    	je     8bc4 <core::slice::sort::recurse+0xd84>
    89ee:	88 54 24 0f          	mov    %dl,0xf(%rsp)
    89f2:	4c 8d 34 c5 00 00 00 	lea    0x0(,%rax,8),%r14
    89f9:	00 
    89fa:	49 01 ee             	add    %rbp,%r14
    89fd:	4d 8d 66 18          	lea    0x18(%r14),%r12
    8a01:	48 83 c3 ff          	add    $0xffffffffffffffff,%rbx
    8a05:	49 39 dd             	cmp    %rbx,%r13
    8a08:	73 20                	jae    8a2a <core::slice::sort::recurse+0xbea>
    8a0a:	48 89 ef             	mov    %rbp,%rdi
    8a0d:	4c 89 ee             	mov    %r13,%rsi
    8a10:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
    8a15:	44 8b 44 24 34       	mov    0x34(%rsp),%r8d
    8a1a:	e8 21 f4 ff ff       	callq  7e40 <core::slice::sort::recurse>
    8a1f:	4d 89 f2             	mov    %r14,%r10
    8a22:	49 89 dd             	mov    %rbx,%r13
    8a25:	4d 89 e6             	mov    %r12,%r14
    8a28:	eb 20                	jmp    8a4a <core::slice::sort::recurse+0xc0a>
    8a2a:	4c 89 e7             	mov    %r12,%rdi
    8a2d:	48 89 de             	mov    %rbx,%rsi
    8a30:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
    8a35:	4c 89 f1             	mov    %r14,%rcx
    8a38:	44 8b 44 24 34       	mov    0x34(%rsp),%r8d
    8a3d:	e8 fe f3 ff ff       	callq  7e40 <core::slice::sort::recurse>
    8a42:	4c 8b 54 24 38       	mov    0x38(%rsp),%r10
    8a47:	49 89 ee             	mov    %rbp,%r14
    8a4a:	4c 89 ee             	mov    %r13,%rsi
    8a4d:	49 83 fd 15          	cmp    $0x15,%r13
    8a51:	44 8a 5c 24 0f       	mov    0xf(%rsp),%r11b
    8a56:	0f 83 19 f4 ff ff    	jae    7e75 <core::slice::sort::recurse+0x35>
    8a5c:	eb 18                	jmp    8a76 <core::slice::sort::recurse+0xc36>
    8a5e:	48 89 df             	mov    %rbx,%rdi
    8a61:	4c 89 fe             	mov    %r15,%rsi
    8a64:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
    8a69:	e8 92 01 00 00       	callq  8c00 <core::slice::sort::heapsort>
    8a6e:	e9 b7 00 00 00       	jmpq   8b2a <core::slice::sort::recurse+0xcea>
    8a73:	49 89 de             	mov    %rbx,%r14
    8a76:	49 83 fd 02          	cmp    $0x2,%r13
    8a7a:	0f 82 aa 00 00 00    	jb     8b2a <core::slice::sort::recurse+0xcea>
    8a80:	ba 01 00 00 00       	mov    $0x1,%edx
    8a85:	31 c0                	xor    %eax,%eax
    8a87:	4c 89 f1             	mov    %r14,%rcx
    8a8a:	eb 23                	jmp    8aaf <core::slice::sort::recurse+0xc6f>
    8a8c:	4c 89 f3             	mov    %r14,%rbx
    8a8f:	90                   	nop
    8a90:	48 89 33             	mov    %rsi,(%rbx)
    8a93:	0f 28 84 24 e0 00 00 	movaps 0xe0(%rsp),%xmm0
    8a9a:	00 
    8a9b:	0f 11 43 08          	movups %xmm0,0x8(%rbx)
    8a9f:	48 83 c1 18          	add    $0x18,%rcx
    8aa3:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    8aa7:	4c 89 c2             	mov    %r8,%rdx
    8aaa:	4d 39 e8             	cmp    %r13,%r8
    8aad:	74 7b                	je     8b2a <core::slice::sort::recurse+0xcea>
    8aaf:	4c 8d 42 01          	lea    0x1(%rdx),%r8
    8ab3:	48 8d 2c 52          	lea    (%rdx,%rdx,2),%rbp
    8ab7:	49 8b 34 ee          	mov    (%r14,%rbp,8),%rsi
    8abb:	49 3b 74 ee e8       	cmp    -0x18(%r14,%rbp,8),%rsi
    8ac0:	73 dd                	jae    8a9f <core::slice::sort::recurse+0xc5f>
    8ac2:	4d 8d 0c ee          	lea    (%r14,%rbp,8),%r9
    8ac6:	49 8d 1c ee          	lea    (%r14,%rbp,8),%rbx
    8aca:	48 83 c3 e8          	add    $0xffffffffffffffe8,%rbx
    8ace:	41 0f 10 44 ee 08    	movups 0x8(%r14,%rbp,8),%xmm0
    8ad4:	0f 29 84 24 e0 00 00 	movaps %xmm0,0xe0(%rsp)
    8adb:	00 
    8adc:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    8ae0:	49 89 79 10          	mov    %rdi,0x10(%r9)
    8ae4:	0f 10 03             	movups (%rbx),%xmm0
    8ae7:	41 0f 11 01          	movups %xmm0,(%r9)
    8aeb:	48 83 c2 ff          	add    $0xffffffffffffffff,%rdx
    8aef:	74 9f                	je     8a90 <core::slice::sort::recurse+0xc50>
    8af1:	48 89 c2             	mov    %rax,%rdx
    8af4:	48 89 cf             	mov    %rcx,%rdi
    8af7:	49 3b 74 ee d0       	cmp    -0x30(%r14,%rbp,8),%rsi
    8afc:	73 92                	jae    8a90 <core::slice::sort::recurse+0xc50>
    8afe:	66 90                	xchg   %ax,%ax
    8b00:	48 8b 6f f8          	mov    -0x8(%rdi),%rbp
    8b04:	48 89 6f 10          	mov    %rbp,0x10(%rdi)
    8b08:	0f 10 47 e8          	movups -0x18(%rdi),%xmm0
    8b0c:	0f 11 07             	movups %xmm0,(%rdi)
    8b0f:	48 ff c2             	inc    %rdx
    8b12:	0f 84 74 ff ff ff    	je     8a8c <core::slice::sort::recurse+0xc4c>
    8b18:	48 8d 5f e8          	lea    -0x18(%rdi),%rbx
    8b1c:	48 3b 77 d0          	cmp    -0x30(%rdi),%rsi
    8b20:	48 89 df             	mov    %rbx,%rdi
    8b23:	72 db                	jb     8b00 <core::slice::sort::recurse+0xcc0>
    8b25:	e9 66 ff ff ff       	jmpq   8a90 <core::slice::sort::recurse+0xc50>
    8b2a:	48 81 c4 e8 01 00 00 	add    $0x1e8,%rsp
    8b31:	5b                   	pop    %rbx
    8b32:	41 5c                	pop    %r12
    8b34:	41 5d                	pop    %r13
    8b36:	41 5e                	pop    %r14
    8b38:	41 5f                	pop    %r15
    8b3a:	5d                   	pop    %rbp
    8b3b:	c3                   	retq   
    8b3c:	48 8d 15 25 ac 03 00 	lea    0x3ac25(%rip),%rdx        # 43768 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x230>
    8b43:	4c 89 e7             	mov    %r12,%rdi
    8b46:	4c 89 fe             	mov    %r15,%rsi
    8b49:	ff 15 41 d1 03 00    	callq  *0x3d141(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
    8b4f:	0f 0b                	ud2    
    8b51:	48 8d 15 28 ac 03 00 	lea    0x3ac28(%rip),%rdx        # 43780 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x248>
    8b58:	4c 89 fe             	mov    %r15,%rsi
    8b5b:	ff 15 8f d2 03 00    	callq  *0x3d28f(%rip)        # 45df0 <_GLOBAL_OFFSET_TABLE_+0x468>
    8b61:	0f 0b                	ud2    
    8b63:	48 8d 15 b6 ab 03 00 	lea    0x3abb6(%rip),%rdx        # 43720 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1e8>
    8b6a:	31 ff                	xor    %edi,%edi
    8b6c:	31 f6                	xor    %esi,%esi
    8b6e:	ff 15 1c d1 03 00    	callq  *0x3d11c(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
    8b74:	0f 0b                	ud2    
    8b76:	48 8d 15 bb ab 03 00 	lea    0x3abbb(%rip),%rdx        # 43738 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x200>
    8b7d:	4c 89 e7             	mov    %r12,%rdi
    8b80:	4c 89 fe             	mov    %r15,%rsi
    8b83:	ff 15 07 d1 03 00    	callq  *0x3d107(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
    8b89:	0f 0b                	ud2    
    8b8b:	48 8d 15 36 ac 03 00 	lea    0x3ac36(%rip),%rdx        # 437c8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x290>
    8b92:	48 89 df             	mov    %rbx,%rdi
    8b95:	48 89 ee             	mov    %rbp,%rsi
    8b98:	ff 15 02 d3 03 00    	callq  *0x3d302(%rip)        # 45ea0 <_GLOBAL_OFFSET_TABLE_+0x518>
    8b9e:	eb 10                	jmp    8bb0 <core::slice::sort::recurse+0xd70>
    8ba0:	48 8d 15 21 ac 03 00 	lea    0x3ac21(%rip),%rdx        # 437c8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x290>
    8ba7:	48 89 ef             	mov    %rbp,%rdi
    8baa:	ff 15 78 ce 03 00    	callq  *0x3ce78(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
    8bb0:	0f 0b                	ud2    
    8bb2:	48 8d 15 7f ab 03 00 	lea    0x3ab7f(%rip),%rdx        # 43738 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x200>
    8bb9:	4c 89 ef             	mov    %r13,%rdi
    8bbc:	ff 15 ce d0 03 00    	callq  *0x3d0ce(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
    8bc2:	0f 0b                	ud2    
    8bc4:	48 8d 3d bd e9 02 00 	lea    0x2e9bd(%rip),%rdi        # 37588 <str.6+0x268>
    8bcb:	48 8d 15 36 ab 03 00 	lea    0x3ab36(%rip),%rdx        # 43708 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1d0>
    8bd2:	be 23 00 00 00       	mov    $0x23,%esi
    8bd7:	ff 15 fb d2 03 00    	callq  *0x3d2fb(%rip)        # 45ed8 <_GLOBAL_OFFSET_TABLE_+0x550>
    8bdd:	0f 0b                	ud2    
    8bdf:	48 89 c3             	mov    %rax,%rbx
    8be2:	48 8d 7c 24 78       	lea    0x78(%rsp),%rdi
    8be7:	e8 34 d5 ff ff       	callq  6120 <core::ptr::drop_in_place>
    8bec:	48 89 df             	mov    %rbx,%rdi
    8bef:	e8 5c c4 ff ff       	callq  5050 <_Unwind_Resume@plt>
    8bf4:	0f 0b                	ud2    
    8bf6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    8bfd:	00 00 00 

0000000000008c00 <core::slice::sort::heapsort>:
    8c00:	48 83 ec 18          	sub    $0x18,%rsp
    8c04:	49 89 f1             	mov    %rsi,%r9
    8c07:	49 d1 e9             	shr    %r9
    8c0a:	75 19                	jne    8c25 <core::slice::sort::heapsort+0x25>
    8c0c:	48 83 fe 02          	cmp    $0x2,%rsi
    8c10:	0f 82 e7 01 00 00    	jb     8dfd <core::slice::sort::heapsort+0x1fd>
    8c16:	49 89 f0             	mov    %rsi,%r8
    8c19:	e9 dc 00 00 00       	jmpq   8cfa <core::slice::sort::heapsort+0xfa>
    8c1e:	66 90                	xchg   %ax,%ax
    8c20:	4d 85 c9             	test   %r9,%r9
    8c23:	74 e7                	je     8c0c <core::slice::sort::heapsort+0xc>
    8c25:	49 83 c1 ff          	add    $0xffffffffffffffff,%r9
    8c29:	4c 89 c9             	mov    %r9,%rcx
    8c2c:	4c 8d 04 09          	lea    (%rcx,%rcx,1),%r8
    8c30:	49 83 c0 01          	add    $0x1,%r8
    8c34:	48 8d 04 09          	lea    (%rcx,%rcx,1),%rax
    8c38:	48 83 c0 02          	add    $0x2,%rax
    8c3c:	48 39 f0             	cmp    %rsi,%rax
    8c3f:	0f 83 2c 00 00 00    	jae    8c71 <core::slice::sort::heapsort+0x71>
    8c45:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    8c4c:	00 00 00 
    8c4f:	90                   	nop
    8c50:	49 39 f0             	cmp    %rsi,%r8
    8c53:	0f 83 c7 01 00 00    	jae    8e20 <core::slice::sort::heapsort+0x220>
    8c59:	4b 8d 14 40          	lea    (%r8,%r8,2),%rdx
    8c5d:	4c 8b 14 d7          	mov    (%rdi,%rdx,8),%r10
    8c61:	48 8d 14 40          	lea    (%rax,%rax,2),%rdx
    8c65:	4c 3b 14 d7          	cmp    (%rdi,%rdx,8),%r10
    8c69:	72 03                	jb     8c6e <core::slice::sort::heapsort+0x6e>
    8c6b:	4c 89 c0             	mov    %r8,%rax
    8c6e:	49 89 c0             	mov    %rax,%r8
    8c71:	49 39 f0             	cmp    %rsi,%r8
    8c74:	73 aa                	jae    8c20 <core::slice::sort::heapsort+0x20>
    8c76:	48 39 f1             	cmp    %rsi,%rcx
    8c79:	0f 83 83 01 00 00    	jae    8e02 <core::slice::sort::heapsort+0x202>
    8c7f:	48 8d 04 49          	lea    (%rcx,%rcx,2),%rax
    8c83:	4b 8d 0c 40          	lea    (%r8,%r8,2),%rcx
    8c87:	48 8b 14 c7          	mov    (%rdi,%rax,8),%rdx
    8c8b:	48 3b 14 cf          	cmp    (%rdi,%rcx,8),%rdx
    8c8f:	73 8f                	jae    8c20 <core::slice::sort::heapsort+0x20>
    8c91:	48 8d 04 c7          	lea    (%rdi,%rax,8),%rax
    8c95:	48 8d 0c cf          	lea    (%rdi,%rcx,8),%rcx
    8c99:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8c9d:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    8ca2:	0f 10 00             	movups (%rax),%xmm0
    8ca5:	0f 29 04 24          	movaps %xmm0,(%rsp)
    8ca9:	48 8b 51 10          	mov    0x10(%rcx),%rdx
    8cad:	0f 10 01             	movups (%rcx),%xmm0
    8cb0:	0f 11 00             	movups %xmm0,(%rax)
    8cb3:	48 89 50 10          	mov    %rdx,0x10(%rax)
    8cb7:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    8cbc:	48 89 41 10          	mov    %rax,0x10(%rcx)
    8cc0:	0f 28 04 24          	movaps (%rsp),%xmm0
    8cc4:	0f 11 01             	movups %xmm0,(%rcx)
    8cc7:	4c 89 c1             	mov    %r8,%rcx
    8cca:	4c 8d 04 09          	lea    (%rcx,%rcx,1),%r8
    8cce:	49 83 c0 01          	add    $0x1,%r8
    8cd2:	48 8d 04 09          	lea    (%rcx,%rcx,1),%rax
    8cd6:	48 83 c0 02          	add    $0x2,%rax
    8cda:	48 39 f0             	cmp    %rsi,%rax
    8cdd:	0f 82 6d ff ff ff    	jb     8c50 <core::slice::sort::heapsort+0x50>
    8ce3:	eb 8c                	jmp    8c71 <core::slice::sort::heapsort+0x71>
    8ce5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    8cec:	00 00 00 
    8cef:	90                   	nop
    8cf0:	49 83 f8 01          	cmp    $0x1,%r8
    8cf4:	0f 86 03 01 00 00    	jbe    8dfd <core::slice::sort::heapsort+0x1fd>
    8cfa:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
    8cfe:	49 39 f0             	cmp    %rsi,%r8
    8d01:	0f 83 40 01 00 00    	jae    8e47 <core::slice::sort::heapsort+0x247>
    8d07:	4b 8d 04 40          	lea    (%r8,%r8,2),%rax
    8d0b:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
    8d0f:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    8d14:	0f 10 07             	movups (%rdi),%xmm0
    8d17:	0f 29 04 24          	movaps %xmm0,(%rsp)
    8d1b:	48 8b 4c c7 10       	mov    0x10(%rdi,%rax,8),%rcx
    8d20:	0f 10 04 c7          	movups (%rdi,%rax,8),%xmm0
    8d24:	0f 11 07             	movups %xmm0,(%rdi)
    8d27:	48 89 4f 10          	mov    %rcx,0x10(%rdi)
    8d2b:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    8d30:	48 89 4c c7 10       	mov    %rcx,0x10(%rdi,%rax,8)
    8d35:	0f 28 04 24          	movaps (%rsp),%xmm0
    8d39:	0f 11 04 c7          	movups %xmm0,(%rdi,%rax,8)
    8d3d:	31 c9                	xor    %ecx,%ecx
    8d3f:	4c 8d 0c 09          	lea    (%rcx,%rcx,1),%r9
    8d43:	49 83 c1 01          	add    $0x1,%r9
    8d47:	48 8d 14 09          	lea    (%rcx,%rcx,1),%rdx
    8d4b:	48 83 c2 02          	add    $0x2,%rdx
    8d4f:	4c 39 c2             	cmp    %r8,%rdx
    8d52:	0f 83 29 00 00 00    	jae    8d81 <core::slice::sort::heapsort+0x181>
    8d58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    8d5f:	00 
    8d60:	4d 39 c1             	cmp    %r8,%r9
    8d63:	0f 83 c9 00 00 00    	jae    8e32 <core::slice::sort::heapsort+0x232>
    8d69:	4b 8d 04 49          	lea    (%r9,%r9,2),%rax
    8d6d:	4c 8b 14 c7          	mov    (%rdi,%rax,8),%r10
    8d71:	48 8d 04 52          	lea    (%rdx,%rdx,2),%rax
    8d75:	4c 3b 14 c7          	cmp    (%rdi,%rax,8),%r10
    8d79:	72 03                	jb     8d7e <core::slice::sort::heapsort+0x17e>
    8d7b:	4c 89 ca             	mov    %r9,%rdx
    8d7e:	49 89 d1             	mov    %rdx,%r9
    8d81:	4d 39 c1             	cmp    %r8,%r9
    8d84:	0f 83 66 ff ff ff    	jae    8cf0 <core::slice::sort::heapsort+0xf0>
    8d8a:	4c 39 c1             	cmp    %r8,%rcx
    8d8d:	0f 83 81 00 00 00    	jae    8e14 <core::slice::sort::heapsort+0x214>
    8d93:	48 8d 0c 49          	lea    (%rcx,%rcx,2),%rcx
    8d97:	4b 8d 14 49          	lea    (%r9,%r9,2),%rdx
    8d9b:	48 8b 04 cf          	mov    (%rdi,%rcx,8),%rax
    8d9f:	48 3b 04 d7          	cmp    (%rdi,%rdx,8),%rax
    8da3:	0f 83 47 ff ff ff    	jae    8cf0 <core::slice::sort::heapsort+0xf0>
    8da9:	48 8d 04 cf          	lea    (%rdi,%rcx,8),%rax
    8dad:	48 8d 0c d7          	lea    (%rdi,%rdx,8),%rcx
    8db1:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8db5:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    8dba:	0f 10 00             	movups (%rax),%xmm0
    8dbd:	0f 29 04 24          	movaps %xmm0,(%rsp)
    8dc1:	48 8b 51 10          	mov    0x10(%rcx),%rdx
    8dc5:	0f 10 01             	movups (%rcx),%xmm0
    8dc8:	0f 11 00             	movups %xmm0,(%rax)
    8dcb:	48 89 50 10          	mov    %rdx,0x10(%rax)
    8dcf:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    8dd4:	48 89 41 10          	mov    %rax,0x10(%rcx)
    8dd8:	0f 28 04 24          	movaps (%rsp),%xmm0
    8ddc:	0f 11 01             	movups %xmm0,(%rcx)
    8ddf:	4c 89 c9             	mov    %r9,%rcx
    8de2:	4c 8d 0c 09          	lea    (%rcx,%rcx,1),%r9
    8de6:	49 83 c1 01          	add    $0x1,%r9
    8dea:	48 8d 14 09          	lea    (%rcx,%rcx,1),%rdx
    8dee:	48 83 c2 02          	add    $0x2,%rdx
    8df2:	4c 39 c2             	cmp    %r8,%rdx
    8df5:	0f 82 65 ff ff ff    	jb     8d60 <core::slice::sort::heapsort+0x160>
    8dfb:	eb 84                	jmp    8d81 <core::slice::sort::heapsort+0x181>
    8dfd:	48 83 c4 18          	add    $0x18,%rsp
    8e01:	c3                   	retq   
    8e02:	48 8d 15 a7 a9 03 00 	lea    0x3a9a7(%rip),%rdx        # 437b0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x278>
    8e09:	48 89 cf             	mov    %rcx,%rdi
    8e0c:	ff 15 7e ce 03 00    	callq  *0x3ce7e(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
    8e12:	0f 0b                	ud2    
    8e14:	48 8d 15 95 a9 03 00 	lea    0x3a995(%rip),%rdx        # 437b0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x278>
    8e1b:	48 89 cf             	mov    %rcx,%rdi
    8e1e:	eb 1c                	jmp    8e3c <core::slice::sort::heapsort+0x23c>
    8e20:	48 8d 15 71 a9 03 00 	lea    0x3a971(%rip),%rdx        # 43798 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x260>
    8e27:	4c 89 c7             	mov    %r8,%rdi
    8e2a:	ff 15 60 ce 03 00    	callq  *0x3ce60(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
    8e30:	0f 0b                	ud2    
    8e32:	48 8d 15 5f a9 03 00 	lea    0x3a95f(%rip),%rdx        # 43798 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x260>
    8e39:	4c 89 cf             	mov    %r9,%rdi
    8e3c:	4c 89 c6             	mov    %r8,%rsi
    8e3f:	ff 15 4b ce 03 00    	callq  *0x3ce4b(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
    8e45:	0f 0b                	ud2    
    8e47:	48 8d 15 ea a8 03 00 	lea    0x3a8ea(%rip),%rdx        # 43738 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x200>
    8e4e:	4c 89 c7             	mov    %r8,%rdi
    8e51:	ff 15 39 ce 03 00    	callq  *0x3ce39(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
    8e57:	0f 0b                	ud2    
    8e59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000008e60 <core::option::Option<T>::unwrap>:
    8e60:	50                   	push   %rax
    8e61:	48 85 ff             	test   %rdi,%rdi
    8e64:	74 05                	je     8e6b <core::option::Option<T>::unwrap+0xb>
    8e66:	48 89 f8             	mov    %rdi,%rax
    8e69:	59                   	pop    %rcx
    8e6a:	c3                   	retq   
    8e6b:	48 8d 3d 88 e7 02 00 	lea    0x2e788(%rip),%rdi        # 375fa <str.6+0x2da>
    8e72:	48 8d 15 6f b4 03 00 	lea    0x3b46f(%rip),%rdx        # 442e8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xdb0>
    8e79:	be 2b 00 00 00       	mov    $0x2b,%esi
    8e7e:	ff 15 54 d0 03 00    	callq  *0x3d054(%rip)        # 45ed8 <_GLOBAL_OFFSET_TABLE_+0x550>
    8e84:	0f 0b                	ud2    
    8e86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    8e8d:	00 00 00 

0000000000008e90 <core::option::Option<T>::unwrap>:
    8e90:	50                   	push   %rax
    8e91:	48 85 ff             	test   %rdi,%rdi
    8e94:	74 05                	je     8e9b <core::option::Option<T>::unwrap+0xb>
    8e96:	48 89 f8             	mov    %rdi,%rax
    8e99:	59                   	pop    %rcx
    8e9a:	c3                   	retq   
    8e9b:	48 89 f2             	mov    %rsi,%rdx
    8e9e:	48 8d 3d 55 e7 02 00 	lea    0x2e755(%rip),%rdi        # 375fa <str.6+0x2da>
    8ea5:	be 2b 00 00 00       	mov    $0x2b,%esi
    8eaa:	ff 15 28 d0 03 00    	callq  *0x3d028(%rip)        # 45ed8 <_GLOBAL_OFFSET_TABLE_+0x550>
    8eb0:	0f 0b                	ud2    
    8eb2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    8eb9:	00 00 00 
    8ebc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000008ec0 <<*mut T as core::fmt::Debug>::fmt>:
    8ec0:	55                   	push   %rbp
    8ec1:	41 56                	push   %r14
    8ec3:	53                   	push   %rbx
    8ec4:	48 83 ec 20          	sub    $0x20,%rsp
    8ec8:	48 89 f3             	mov    %rsi,%rbx
    8ecb:	48 8b 2f             	mov    (%rdi),%rbp
    8ece:	0f 10 06             	movups (%rsi),%xmm0
    8ed1:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    8ed6:	44 8b 76 30          	mov    0x30(%rsi),%r14d
    8eda:	48 89 f7             	mov    %rsi,%rdi
    8edd:	ff 15 65 cb 03 00    	callq  *0x3cb65(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xc0>
    8ee3:	8b 4b 30             	mov    0x30(%rbx),%ecx
    8ee6:	84 c0                	test   %al,%al
    8ee8:	74 16                	je     8f00 <<*mut T as core::fmt::Debug>::fmt+0x40>
    8eea:	83 c9 08             	or     $0x8,%ecx
    8eed:	89 4b 30             	mov    %ecx,0x30(%rbx)
    8ef0:	48 83 3b 01          	cmpq   $0x1,(%rbx)
    8ef4:	74 0a                	je     8f00 <<*mut T as core::fmt::Debug>::fmt+0x40>
    8ef6:	0f 28 05 23 d1 02 00 	movaps 0x2d123(%rip),%xmm0        # 36020 <_fini+0x6fc>
    8efd:	0f 11 03             	movups %xmm0,(%rbx)
    8f00:	83 c9 04             	or     $0x4,%ecx
    8f03:	89 4b 30             	mov    %ecx,0x30(%rbx)
    8f06:	48 89 6c 24 08       	mov    %rbp,0x8(%rsp)
    8f0b:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    8f10:	48 89 de             	mov    %rbx,%rsi
    8f13:	ff 15 3f ce 03 00    	callq  *0x3ce3f(%rip)        # 45d58 <_GLOBAL_OFFSET_TABLE_+0x3d0>
    8f19:	0f 28 44 24 10       	movaps 0x10(%rsp),%xmm0
    8f1e:	0f 11 03             	movups %xmm0,(%rbx)
    8f21:	44 89 73 30          	mov    %r14d,0x30(%rbx)
    8f25:	48 83 c4 20          	add    $0x20,%rsp
    8f29:	5b                   	pop    %rbx
    8f2a:	41 5e                	pop    %r14
    8f2c:	5d                   	pop    %rbp
    8f2d:	c3                   	retq   
    8f2e:	66 90                	xchg   %ax,%ax

0000000000008f30 <<&mut W as core::fmt::Write>::write_char>:
    8f30:	50                   	push   %rax
    8f31:	89 f0                	mov    %esi,%eax
    8f33:	48 8b 3f             	mov    (%rdi),%rdi
    8f36:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    8f3d:	00 
    8f3e:	81 fe 80 00 00 00    	cmp    $0x80,%esi
    8f44:	73 15                	jae    8f5b <<&mut W as core::fmt::Write>::write_char+0x2b>
    8f46:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    8f4b:	88 44 24 04          	mov    %al,0x4(%rsp)
    8f4f:	ba 01 00 00 00       	mov    $0x1,%edx
    8f54:	e8 97 d4 00 00       	callq  163f0 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str>
    8f59:	59                   	pop    %rcx
    8f5a:	c3                   	retq   
    8f5b:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    8f60:	89 c1                	mov    %eax,%ecx
    8f62:	3d 00 08 00 00       	cmp    $0x800,%eax
    8f67:	73 1e                	jae    8f87 <<&mut W as core::fmt::Write>::write_char+0x57>
    8f69:	c1 e9 06             	shr    $0x6,%ecx
    8f6c:	80 c9 c0             	or     $0xc0,%cl
    8f6f:	88 4c 24 04          	mov    %cl,0x4(%rsp)
    8f73:	24 3f                	and    $0x3f,%al
    8f75:	0c 80                	or     $0x80,%al
    8f77:	88 44 24 05          	mov    %al,0x5(%rsp)
    8f7b:	ba 02 00 00 00       	mov    $0x2,%edx
    8f80:	e8 6b d4 00 00       	callq  163f0 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str>
    8f85:	59                   	pop    %rcx
    8f86:	c3                   	retq   
    8f87:	3d 00 00 01 00       	cmp    $0x10000,%eax
    8f8c:	73 2d                	jae    8fbb <<&mut W as core::fmt::Write>::write_char+0x8b>
    8f8e:	c1 e9 0c             	shr    $0xc,%ecx
    8f91:	80 c9 e0             	or     $0xe0,%cl
    8f94:	88 4c 24 04          	mov    %cl,0x4(%rsp)
    8f98:	89 c1                	mov    %eax,%ecx
    8f9a:	c1 e9 06             	shr    $0x6,%ecx
    8f9d:	80 e1 3f             	and    $0x3f,%cl
    8fa0:	80 c9 80             	or     $0x80,%cl
    8fa3:	88 4c 24 05          	mov    %cl,0x5(%rsp)
    8fa7:	24 3f                	and    $0x3f,%al
    8fa9:	0c 80                	or     $0x80,%al
    8fab:	88 44 24 06          	mov    %al,0x6(%rsp)
    8faf:	ba 03 00 00 00       	mov    $0x3,%edx
    8fb4:	e8 37 d4 00 00       	callq  163f0 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str>
    8fb9:	59                   	pop    %rcx
    8fba:	c3                   	retq   
    8fbb:	c1 e9 12             	shr    $0x12,%ecx
    8fbe:	80 c9 f0             	or     $0xf0,%cl
    8fc1:	88 4c 24 04          	mov    %cl,0x4(%rsp)
    8fc5:	89 c1                	mov    %eax,%ecx
    8fc7:	c1 e9 0c             	shr    $0xc,%ecx
    8fca:	80 e1 3f             	and    $0x3f,%cl
    8fcd:	80 c9 80             	or     $0x80,%cl
    8fd0:	88 4c 24 05          	mov    %cl,0x5(%rsp)
    8fd4:	89 c1                	mov    %eax,%ecx
    8fd6:	c1 e9 06             	shr    $0x6,%ecx
    8fd9:	80 e1 3f             	and    $0x3f,%cl
    8fdc:	80 c9 80             	or     $0x80,%cl
    8fdf:	88 4c 24 06          	mov    %cl,0x6(%rsp)
    8fe3:	24 3f                	and    $0x3f,%al
    8fe5:	0c 80                	or     $0x80,%al
    8fe7:	88 44 24 07          	mov    %al,0x7(%rsp)
    8feb:	ba 04 00 00 00       	mov    $0x4,%edx
    8ff0:	e8 fb d3 00 00       	callq  163f0 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str>
    8ff5:	59                   	pop    %rcx
    8ff6:	c3                   	retq   
    8ff7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    8ffe:	00 00 

0000000000009000 <<&mut W as core::fmt::Write>::write_char>:
    9000:	50                   	push   %rax
    9001:	89 f0                	mov    %esi,%eax
    9003:	48 8b 3f             	mov    (%rdi),%rdi
    9006:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    900d:	00 
    900e:	81 fe 80 00 00 00    	cmp    $0x80,%esi
    9014:	73 15                	jae    902b <<&mut W as core::fmt::Write>::write_char+0x2b>
    9016:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    901b:	88 44 24 04          	mov    %al,0x4(%rsp)
    901f:	ba 01 00 00 00       	mov    $0x1,%edx
    9024:	e8 d7 d2 00 00       	callq  16300 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str>
    9029:	59                   	pop    %rcx
    902a:	c3                   	retq   
    902b:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    9030:	89 c1                	mov    %eax,%ecx
    9032:	3d 00 08 00 00       	cmp    $0x800,%eax
    9037:	73 1e                	jae    9057 <<&mut W as core::fmt::Write>::write_char+0x57>
    9039:	c1 e9 06             	shr    $0x6,%ecx
    903c:	80 c9 c0             	or     $0xc0,%cl
    903f:	88 4c 24 04          	mov    %cl,0x4(%rsp)
    9043:	24 3f                	and    $0x3f,%al
    9045:	0c 80                	or     $0x80,%al
    9047:	88 44 24 05          	mov    %al,0x5(%rsp)
    904b:	ba 02 00 00 00       	mov    $0x2,%edx
    9050:	e8 ab d2 00 00       	callq  16300 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str>
    9055:	59                   	pop    %rcx
    9056:	c3                   	retq   
    9057:	3d 00 00 01 00       	cmp    $0x10000,%eax
    905c:	73 2d                	jae    908b <<&mut W as core::fmt::Write>::write_char+0x8b>
    905e:	c1 e9 0c             	shr    $0xc,%ecx
    9061:	80 c9 e0             	or     $0xe0,%cl
    9064:	88 4c 24 04          	mov    %cl,0x4(%rsp)
    9068:	89 c1                	mov    %eax,%ecx
    906a:	c1 e9 06             	shr    $0x6,%ecx
    906d:	80 e1 3f             	and    $0x3f,%cl
    9070:	80 c9 80             	or     $0x80,%cl
    9073:	88 4c 24 05          	mov    %cl,0x5(%rsp)
    9077:	24 3f                	and    $0x3f,%al
    9079:	0c 80                	or     $0x80,%al
    907b:	88 44 24 06          	mov    %al,0x6(%rsp)
    907f:	ba 03 00 00 00       	mov    $0x3,%edx
    9084:	e8 77 d2 00 00       	callq  16300 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str>
    9089:	59                   	pop    %rcx
    908a:	c3                   	retq   
    908b:	c1 e9 12             	shr    $0x12,%ecx
    908e:	80 c9 f0             	or     $0xf0,%cl
    9091:	88 4c 24 04          	mov    %cl,0x4(%rsp)
    9095:	89 c1                	mov    %eax,%ecx
    9097:	c1 e9 0c             	shr    $0xc,%ecx
    909a:	80 e1 3f             	and    $0x3f,%cl
    909d:	80 c9 80             	or     $0x80,%cl
    90a0:	88 4c 24 05          	mov    %cl,0x5(%rsp)
    90a4:	89 c1                	mov    %eax,%ecx
    90a6:	c1 e9 06             	shr    $0x6,%ecx
    90a9:	80 e1 3f             	and    $0x3f,%cl
    90ac:	80 c9 80             	or     $0x80,%cl
    90af:	88 4c 24 06          	mov    %cl,0x6(%rsp)
    90b3:	24 3f                	and    $0x3f,%al
    90b5:	0c 80                	or     $0x80,%al
    90b7:	88 44 24 07          	mov    %al,0x7(%rsp)
    90bb:	ba 04 00 00 00       	mov    $0x4,%edx
    90c0:	e8 3b d2 00 00       	callq  16300 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str>
    90c5:	59                   	pop    %rcx
    90c6:	c3                   	retq   
    90c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    90ce:	00 00 

00000000000090d0 <<&mut W as core::fmt::Write>::write_char>:
    90d0:	55                   	push   %rbp
    90d1:	41 57                	push   %r15
    90d3:	41 56                	push   %r14
    90d5:	53                   	push   %rbx
    90d6:	50                   	push   %rax
    90d7:	89 f5                	mov    %esi,%ebp
    90d9:	48 8b 1f             	mov    (%rdi),%rbx
    90dc:	81 fe 80 00 00 00    	cmp    $0x80,%esi
    90e2:	73 50                	jae    9134 <<&mut W as core::fmt::Write>::write_char+0x64>
    90e4:	48 8b 73 10          	mov    0x10(%rbx),%rsi
    90e8:	48 3b 73 08          	cmp    0x8(%rbx),%rsi
    90ec:	75 7d                	jne    916b <<&mut W as core::fmt::Write>::write_char+0x9b>
    90ee:	48 89 f0             	mov    %rsi,%rax
    90f1:	48 ff c0             	inc    %rax
    90f4:	0f 84 a1 01 00 00    	je     929b <<&mut W as core::fmt::Write>::write_char+0x1cb>
    90fa:	48 8d 0c 36          	lea    (%rsi,%rsi,1),%rcx
    90fe:	48 39 c1             	cmp    %rax,%rcx
    9101:	48 0f 47 c1          	cmova  %rcx,%rax
    9105:	48 83 f8 08          	cmp    $0x8,%rax
    9109:	41 be 08 00 00 00    	mov    $0x8,%r14d
    910f:	4c 0f 47 f0          	cmova  %rax,%r14
    9113:	48 85 f6             	test   %rsi,%rsi
    9116:	0f 84 86 00 00 00    	je     91a2 <<&mut W as core::fmt::Write>::write_char+0xd2>
    911c:	48 8b 3b             	mov    (%rbx),%rdi
    911f:	48 85 ff             	test   %rdi,%rdi
    9122:	74 7e                	je     91a2 <<&mut W as core::fmt::Write>::write_char+0xd2>
    9124:	ba 01 00 00 00       	mov    $0x1,%edx
    9129:	4c 89 f1             	mov    %r14,%rcx
    912c:	ff 15 46 ce 03 00    	callq  *0x3ce46(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
    9132:	eb 7c                	jmp    91b0 <<&mut W as core::fmt::Write>::write_char+0xe0>
    9134:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    913b:	00 
    913c:	4c 8d 74 24 04       	lea    0x4(%rsp),%r14
    9141:	89 e8                	mov    %ebp,%eax
    9143:	81 fd 00 08 00 00    	cmp    $0x800,%ebp
    9149:	73 25                	jae    9170 <<&mut W as core::fmt::Write>::write_char+0xa0>
    914b:	c1 e8 06             	shr    $0x6,%eax
    914e:	0c c0                	or     $0xc0,%al
    9150:	88 44 24 04          	mov    %al,0x4(%rsp)
    9154:	40 80 e5 3f          	and    $0x3f,%bpl
    9158:	40 80 cd 80          	or     $0x80,%bpl
    915c:	40 88 6c 24 05       	mov    %bpl,0x5(%rsp)
    9161:	bd 02 00 00 00       	mov    $0x2,%ebp
    9166:	e9 9c 00 00 00       	jmpq   9207 <<&mut W as core::fmt::Write>::write_char+0x137>
    916b:	48 8b 03             	mov    (%rbx),%rax
    916e:	eb 54                	jmp    91c4 <<&mut W as core::fmt::Write>::write_char+0xf4>
    9170:	81 fd 00 00 01 00    	cmp    $0x10000,%ebp
    9176:	73 5a                	jae    91d2 <<&mut W as core::fmt::Write>::write_char+0x102>
    9178:	c1 e8 0c             	shr    $0xc,%eax
    917b:	0c e0                	or     $0xe0,%al
    917d:	88 44 24 04          	mov    %al,0x4(%rsp)
    9181:	89 e8                	mov    %ebp,%eax
    9183:	c1 e8 06             	shr    $0x6,%eax
    9186:	24 3f                	and    $0x3f,%al
    9188:	0c 80                	or     $0x80,%al
    918a:	88 44 24 05          	mov    %al,0x5(%rsp)
    918e:	40 80 e5 3f          	and    $0x3f,%bpl
    9192:	40 80 cd 80          	or     $0x80,%bpl
    9196:	40 88 6c 24 06       	mov    %bpl,0x6(%rsp)
    919b:	bd 03 00 00 00       	mov    $0x3,%ebp
    91a0:	eb 65                	jmp    9207 <<&mut W as core::fmt::Write>::write_char+0x137>
    91a2:	be 01 00 00 00       	mov    $0x1,%esi
    91a7:	4c 89 f7             	mov    %r14,%rdi
    91aa:	ff 15 d0 c9 03 00    	callq  *0x3c9d0(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
    91b0:	48 85 c0             	test   %rax,%rax
    91b3:	0f 84 ea 00 00 00    	je     92a3 <<&mut W as core::fmt::Write>::write_char+0x1d3>
    91b9:	48 89 03             	mov    %rax,(%rbx)
    91bc:	4c 89 73 08          	mov    %r14,0x8(%rbx)
    91c0:	48 8b 73 10          	mov    0x10(%rbx),%rsi
    91c4:	40 88 2c 30          	mov    %bpl,(%rax,%rsi,1)
    91c8:	48 83 43 10 01       	addq   $0x1,0x10(%rbx)
    91cd:	e9 bc 00 00 00       	jmpq   928e <<&mut W as core::fmt::Write>::write_char+0x1be>
    91d2:	c1 e8 12             	shr    $0x12,%eax
    91d5:	0c f0                	or     $0xf0,%al
    91d7:	88 44 24 04          	mov    %al,0x4(%rsp)
    91db:	89 e8                	mov    %ebp,%eax
    91dd:	c1 e8 0c             	shr    $0xc,%eax
    91e0:	24 3f                	and    $0x3f,%al
    91e2:	0c 80                	or     $0x80,%al
    91e4:	88 44 24 05          	mov    %al,0x5(%rsp)
    91e8:	89 e8                	mov    %ebp,%eax
    91ea:	c1 e8 06             	shr    $0x6,%eax
    91ed:	24 3f                	and    $0x3f,%al
    91ef:	0c 80                	or     $0x80,%al
    91f1:	88 44 24 06          	mov    %al,0x6(%rsp)
    91f5:	40 80 e5 3f          	and    $0x3f,%bpl
    91f9:	40 80 cd 80          	or     $0x80,%bpl
    91fd:	40 88 6c 24 07       	mov    %bpl,0x7(%rsp)
    9202:	bd 04 00 00 00       	mov    $0x4,%ebp
    9207:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    920b:	48 8b 43 10          	mov    0x10(%rbx),%rax
    920f:	48 89 f1             	mov    %rsi,%rcx
    9212:	48 29 c1             	sub    %rax,%rcx
    9215:	48 39 e9             	cmp    %rbp,%rcx
    9218:	73 3b                	jae    9255 <<&mut W as core::fmt::Write>::write_char+0x185>
    921a:	48 01 e8             	add    %rbp,%rax
    921d:	72 7c                	jb     929b <<&mut W as core::fmt::Write>::write_char+0x1cb>
    921f:	48 8d 0c 36          	lea    (%rsi,%rsi,1),%rcx
    9223:	48 39 c1             	cmp    %rax,%rcx
    9226:	48 0f 47 c1          	cmova  %rcx,%rax
    922a:	48 83 f8 08          	cmp    $0x8,%rax
    922e:	41 bf 08 00 00 00    	mov    $0x8,%r15d
    9234:	4c 0f 47 f8          	cmova  %rax,%r15
    9238:	48 85 f6             	test   %rsi,%rsi
    923b:	74 1d                	je     925a <<&mut W as core::fmt::Write>::write_char+0x18a>
    923d:	48 8b 3b             	mov    (%rbx),%rdi
    9240:	48 85 ff             	test   %rdi,%rdi
    9243:	74 15                	je     925a <<&mut W as core::fmt::Write>::write_char+0x18a>
    9245:	ba 01 00 00 00       	mov    $0x1,%edx
    924a:	4c 89 f9             	mov    %r15,%rcx
    924d:	ff 15 25 cd 03 00    	callq  *0x3cd25(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
    9253:	eb 13                	jmp    9268 <<&mut W as core::fmt::Write>::write_char+0x198>
    9255:	48 8b 3b             	mov    (%rbx),%rdi
    9258:	eb 21                	jmp    927b <<&mut W as core::fmt::Write>::write_char+0x1ab>
    925a:	be 01 00 00 00       	mov    $0x1,%esi
    925f:	4c 89 ff             	mov    %r15,%rdi
    9262:	ff 15 18 c9 03 00    	callq  *0x3c918(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
    9268:	48 89 c7             	mov    %rax,%rdi
    926b:	48 85 c0             	test   %rax,%rax
    926e:	74 43                	je     92b3 <<&mut W as core::fmt::Write>::write_char+0x1e3>
    9270:	48 89 3b             	mov    %rdi,(%rbx)
    9273:	4c 89 7b 08          	mov    %r15,0x8(%rbx)
    9277:	48 8b 43 10          	mov    0x10(%rbx),%rax
    927b:	48 01 c7             	add    %rax,%rdi
    927e:	4c 89 f6             	mov    %r14,%rsi
    9281:	48 89 ea             	mov    %rbp,%rdx
    9284:	ff 15 6e ca 03 00    	callq  *0x3ca6e(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
    928a:	48 01 6b 10          	add    %rbp,0x10(%rbx)
    928e:	31 c0                	xor    %eax,%eax
    9290:	48 83 c4 08          	add    $0x8,%rsp
    9294:	5b                   	pop    %rbx
    9295:	41 5e                	pop    %r14
    9297:	41 5f                	pop    %r15
    9299:	5d                   	pop    %rbp
    929a:	c3                   	retq   
    929b:	ff 15 3f c8 03 00    	callq  *0x3c83f(%rip)        # 45ae0 <_GLOBAL_OFFSET_TABLE_+0x158>
    92a1:	0f 0b                	ud2    
    92a3:	be 01 00 00 00       	mov    $0x1,%esi
    92a8:	4c 89 f7             	mov    %r14,%rdi
    92ab:	ff 15 6f c8 03 00    	callq  *0x3c86f(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
    92b1:	0f 0b                	ud2    
    92b3:	be 01 00 00 00       	mov    $0x1,%esi
    92b8:	4c 89 ff             	mov    %r15,%rdi
    92bb:	ff 15 5f c8 03 00    	callq  *0x3c85f(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
    92c1:	0f 0b                	ud2    
    92c3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    92ca:	00 00 00 
    92cd:	0f 1f 00             	nopl   (%rax)

00000000000092d0 <<&mut W as core::fmt::Write>::write_fmt>:
    92d0:	48 83 ec 48          	sub    $0x48,%rsp
    92d4:	48 8b 07             	mov    (%rdi),%rax
    92d7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    92dc:	0f 10 06             	movups (%rsi),%xmm0
    92df:	0f 10 4e 10          	movups 0x10(%rsi),%xmm1
    92e3:	0f 10 56 20          	movups 0x20(%rsi),%xmm2
    92e7:	0f 29 54 24 30       	movaps %xmm2,0x30(%rsp)
    92ec:	0f 29 4c 24 20       	movaps %xmm1,0x20(%rsp)
    92f1:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    92f6:	48 8d 35 f3 a2 03 00 	lea    0x3a2f3(%rip),%rsi        # 435f0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xb8>
    92fd:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    9302:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    9307:	ff 15 eb ca 03 00    	callq  *0x3caeb(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x470>
    930d:	48 83 c4 48          	add    $0x48,%rsp
    9311:	c3                   	retq   
    9312:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    9319:	00 00 00 
    931c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000009320 <<&mut W as core::fmt::Write>::write_fmt>:
    9320:	48 83 ec 48          	sub    $0x48,%rsp
    9324:	48 8b 07             	mov    (%rdi),%rax
    9327:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    932c:	0f 10 06             	movups (%rsi),%xmm0
    932f:	0f 10 4e 10          	movups 0x10(%rsi),%xmm1
    9333:	0f 10 56 20          	movups 0x20(%rsi),%xmm2
    9337:	0f 29 54 24 30       	movaps %xmm2,0x30(%rsp)
    933c:	0f 29 4c 24 20       	movaps %xmm1,0x20(%rsp)
    9341:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    9346:	48 8d 35 73 a2 03 00 	lea    0x3a273(%rip),%rsi        # 435c0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x88>
    934d:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    9352:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    9357:	ff 15 9b ca 03 00    	callq  *0x3ca9b(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x470>
    935d:	48 83 c4 48          	add    $0x48,%rsp
    9361:	c3                   	retq   
    9362:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    9369:	00 00 00 
    936c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000009370 <<&mut W as core::fmt::Write>::write_fmt>:
    9370:	48 83 ec 48          	sub    $0x48,%rsp
    9374:	48 8b 07             	mov    (%rdi),%rax
    9377:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    937c:	0f 10 06             	movups (%rsi),%xmm0
    937f:	0f 10 4e 10          	movups 0x10(%rsi),%xmm1
    9383:	0f 10 56 20          	movups 0x20(%rsi),%xmm2
    9387:	0f 29 54 24 30       	movaps %xmm2,0x30(%rsp)
    938c:	0f 29 4c 24 20       	movaps %xmm1,0x20(%rsp)
    9391:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    9396:	48 8d 35 f3 a1 03 00 	lea    0x3a1f3(%rip),%rsi        # 43590 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x58>
    939d:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    93a2:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    93a7:	ff 15 4b ca 03 00    	callq  *0x3ca4b(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x470>
    93ad:	48 83 c4 48          	add    $0x48,%rsp
    93b1:	c3                   	retq   
    93b2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    93b9:	00 00 00 
    93bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000093c0 <<&mut W as core::fmt::Write>::write_str>:
    93c0:	48 8b 3f             	mov    (%rdi),%rdi
    93c3:	e9 28 d0 00 00       	jmpq   163f0 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str>
    93c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    93cf:	00 

00000000000093d0 <<&mut W as core::fmt::Write>::write_str>:
    93d0:	41 57                	push   %r15
    93d2:	41 56                	push   %r14
    93d4:	41 54                	push   %r12
    93d6:	53                   	push   %rbx
    93d7:	50                   	push   %rax
    93d8:	49 89 d4             	mov    %rdx,%r12
    93db:	49 89 f6             	mov    %rsi,%r14
    93de:	48 8b 1f             	mov    (%rdi),%rbx
    93e1:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    93e5:	48 8b 43 10          	mov    0x10(%rbx),%rax
    93e9:	48 89 f1             	mov    %rsi,%rcx
    93ec:	48 29 c1             	sub    %rax,%rcx
    93ef:	48 39 d1             	cmp    %rdx,%rcx
    93f2:	73 3b                	jae    942f <<&mut W as core::fmt::Write>::write_str+0x5f>
    93f4:	4c 01 e0             	add    %r12,%rax
    93f7:	72 7d                	jb     9476 <<&mut W as core::fmt::Write>::write_str+0xa6>
    93f9:	48 8d 0c 36          	lea    (%rsi,%rsi,1),%rcx
    93fd:	48 39 c1             	cmp    %rax,%rcx
    9400:	48 0f 47 c1          	cmova  %rcx,%rax
    9404:	48 83 f8 08          	cmp    $0x8,%rax
    9408:	41 bf 08 00 00 00    	mov    $0x8,%r15d
    940e:	4c 0f 47 f8          	cmova  %rax,%r15
    9412:	48 85 f6             	test   %rsi,%rsi
    9415:	74 1d                	je     9434 <<&mut W as core::fmt::Write>::write_str+0x64>
    9417:	48 8b 3b             	mov    (%rbx),%rdi
    941a:	48 85 ff             	test   %rdi,%rdi
    941d:	74 15                	je     9434 <<&mut W as core::fmt::Write>::write_str+0x64>
    941f:	ba 01 00 00 00       	mov    $0x1,%edx
    9424:	4c 89 f9             	mov    %r15,%rcx
    9427:	ff 15 4b cb 03 00    	callq  *0x3cb4b(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
    942d:	eb 13                	jmp    9442 <<&mut W as core::fmt::Write>::write_str+0x72>
    942f:	48 8b 3b             	mov    (%rbx),%rdi
    9432:	eb 21                	jmp    9455 <<&mut W as core::fmt::Write>::write_str+0x85>
    9434:	be 01 00 00 00       	mov    $0x1,%esi
    9439:	4c 89 ff             	mov    %r15,%rdi
    943c:	ff 15 3e c7 03 00    	callq  *0x3c73e(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
    9442:	48 89 c7             	mov    %rax,%rdi
    9445:	48 85 c0             	test   %rax,%rax
    9448:	74 34                	je     947e <<&mut W as core::fmt::Write>::write_str+0xae>
    944a:	48 89 3b             	mov    %rdi,(%rbx)
    944d:	4c 89 7b 08          	mov    %r15,0x8(%rbx)
    9451:	48 8b 43 10          	mov    0x10(%rbx),%rax
    9455:	48 01 c7             	add    %rax,%rdi
    9458:	4c 89 f6             	mov    %r14,%rsi
    945b:	4c 89 e2             	mov    %r12,%rdx
    945e:	ff 15 94 c8 03 00    	callq  *0x3c894(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
    9464:	4c 01 63 10          	add    %r12,0x10(%rbx)
    9468:	31 c0                	xor    %eax,%eax
    946a:	48 83 c4 08          	add    $0x8,%rsp
    946e:	5b                   	pop    %rbx
    946f:	41 5c                	pop    %r12
    9471:	41 5e                	pop    %r14
    9473:	41 5f                	pop    %r15
    9475:	c3                   	retq   
    9476:	ff 15 64 c6 03 00    	callq  *0x3c664(%rip)        # 45ae0 <_GLOBAL_OFFSET_TABLE_+0x158>
    947c:	0f 0b                	ud2    
    947e:	be 01 00 00 00       	mov    $0x1,%esi
    9483:	4c 89 ff             	mov    %r15,%rdi
    9486:	ff 15 94 c6 03 00    	callq  *0x3c694(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
    948c:	0f 0b                	ud2    
    948e:	66 90                	xchg   %ax,%ax

0000000000009490 <<&mut W as core::fmt::Write>::write_str>:
    9490:	48 8b 3f             	mov    (%rdi),%rdi
    9493:	e9 68 ce 00 00       	jmpq   16300 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str>
    9498:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    949f:	00 

00000000000094a0 <<alloc::string::String as core::fmt::Debug>::fmt>:
    94a0:	48 89 f2             	mov    %rsi,%rdx
    94a3:	48 8b 07             	mov    (%rdi),%rax
    94a6:	48 8b 77 10          	mov    0x10(%rdi),%rsi
    94aa:	48 89 c7             	mov    %rax,%rdi
    94ad:	ff 25 3d c8 03 00    	jmpq   *0x3c83d(%rip)        # 45cf0 <_GLOBAL_OFFSET_TABLE_+0x368>
    94b3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    94ba:	00 00 00 
    94bd:	0f 1f 00             	nopl   (%rax)

00000000000094c0 <alloc::vec::Vec<T>::push>:
    94c0:	41 57                	push   %r15
    94c2:	41 56                	push   %r14
    94c4:	41 54                	push   %r12
    94c6:	53                   	push   %rbx
    94c7:	50                   	push   %rax
    94c8:	49 89 d6             	mov    %rdx,%r14
    94cb:	49 89 f7             	mov    %rsi,%r15
    94ce:	48 89 fb             	mov    %rdi,%rbx
    94d1:	48 8b 77 10          	mov    0x10(%rdi),%rsi
    94d5:	48 3b 77 08          	cmp    0x8(%rdi),%rsi
    94d9:	0f 85 8c 00 00 00    	jne    956b <alloc::vec::Vec<T>::push+0xab>
    94df:	48 89 f1             	mov    %rsi,%rcx
    94e2:	48 ff c1             	inc    %rcx
    94e5:	0f 84 a1 00 00 00    	je     958c <alloc::vec::Vec<T>::push+0xcc>
    94eb:	48 8d 04 36          	lea    (%rsi,%rsi,1),%rax
    94ef:	48 39 c8             	cmp    %rcx,%rax
    94f2:	48 0f 47 c8          	cmova  %rax,%rcx
    94f6:	48 83 f9 04          	cmp    $0x4,%rcx
    94fa:	b8 04 00 00 00       	mov    $0x4,%eax
    94ff:	48 0f 47 c1          	cmova  %rcx,%rax
    9503:	ba 10 00 00 00       	mov    $0x10,%edx
    9508:	31 c9                	xor    %ecx,%ecx
    950a:	48 f7 e2             	mul    %rdx
    950d:	49 89 c4             	mov    %rax,%r12
    9510:	0f 90 c0             	seto   %al
    9513:	0f 91 c1             	setno  %cl
    9516:	48 c1 e1 03          	shl    $0x3,%rcx
    951a:	48 85 f6             	test   %rsi,%rsi
    951d:	74 20                	je     953f <alloc::vec::Vec<T>::push+0x7f>
    951f:	84 c0                	test   %al,%al
    9521:	75 69                	jne    958c <alloc::vec::Vec<T>::push+0xcc>
    9523:	48 8b 3b             	mov    (%rbx),%rdi
    9526:	48 85 ff             	test   %rdi,%rdi
    9529:	74 18                	je     9543 <alloc::vec::Vec<T>::push+0x83>
    952b:	48 c1 e6 04          	shl    $0x4,%rsi
    952f:	74 12                	je     9543 <alloc::vec::Vec<T>::push+0x83>
    9531:	48 89 ca             	mov    %rcx,%rdx
    9534:	4c 89 e1             	mov    %r12,%rcx
    9537:	ff 15 3b ca 03 00    	callq  *0x3ca3b(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
    953d:	eb 15                	jmp    9554 <alloc::vec::Vec<T>::push+0x94>
    953f:	84 c0                	test   %al,%al
    9541:	75 49                	jne    958c <alloc::vec::Vec<T>::push+0xcc>
    9543:	4d 85 e4             	test   %r12,%r12
    9546:	74 0f                	je     9557 <alloc::vec::Vec<T>::push+0x97>
    9548:	4c 89 e7             	mov    %r12,%rdi
    954b:	48 89 ce             	mov    %rcx,%rsi
    954e:	ff 15 2c c6 03 00    	callq  *0x3c62c(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
    9554:	48 89 c1             	mov    %rax,%rcx
    9557:	48 85 c9             	test   %rcx,%rcx
    955a:	74 38                	je     9594 <alloc::vec::Vec<T>::push+0xd4>
    955c:	48 89 0b             	mov    %rcx,(%rbx)
    955f:	49 c1 ec 04          	shr    $0x4,%r12
    9563:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    9567:	48 8b 73 10          	mov    0x10(%rbx),%rsi
    956b:	48 8b 03             	mov    (%rbx),%rax
    956e:	48 c1 e6 04          	shl    $0x4,%rsi
    9572:	4c 89 3c 30          	mov    %r15,(%rax,%rsi,1)
    9576:	4c 89 74 30 08       	mov    %r14,0x8(%rax,%rsi,1)
    957b:	48 83 43 10 01       	addq   $0x1,0x10(%rbx)
    9580:	48 83 c4 08          	add    $0x8,%rsp
    9584:	5b                   	pop    %rbx
    9585:	41 5c                	pop    %r12
    9587:	41 5e                	pop    %r14
    9589:	41 5f                	pop    %r15
    958b:	c3                   	retq   
    958c:	ff 15 4e c5 03 00    	callq  *0x3c54e(%rip)        # 45ae0 <_GLOBAL_OFFSET_TABLE_+0x158>
    9592:	0f 0b                	ud2    
    9594:	be 08 00 00 00       	mov    $0x8,%esi
    9599:	4c 89 e7             	mov    %r12,%rdi
    959c:	ff 15 7e c5 03 00    	callq  *0x3c57e(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
    95a2:	0f 0b                	ud2    
    95a4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    95ab:	00 00 00 
    95ae:	66 90                	xchg   %ax,%ax

00000000000095b0 <alloc::vec::Vec<T>::insert>:
    95b0:	41 57                	push   %r15
    95b2:	41 56                	push   %r14
    95b4:	41 55                	push   %r13
    95b6:	41 54                	push   %r12
    95b8:	53                   	push   %rbx
    95b9:	49 89 fe             	mov    %rdi,%r14
    95bc:	4c 8b 2d 65 cc 03 00 	mov    0x3cc65(%rip),%r13        # 46228 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x28>
    95c3:	4c 3b 2d 56 cc 03 00 	cmp    0x3cc56(%rip),%r13        # 46220 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x20>
    95ca:	75 70                	jne    963c <alloc::vec::Vec<T>::insert+0x8c>
    95cc:	4d 89 ec             	mov    %r13,%r12
    95cf:	49 ff c4             	inc    %r12
    95d2:	0f 84 ee 00 00 00    	je     96c6 <alloc::vec::Vec<T>::insert+0x116>
    95d8:	4c 89 e9             	mov    %r13,%rcx
    95db:	4c 01 e9             	add    %r13,%rcx
    95de:	4c 39 e1             	cmp    %r12,%rcx
    95e1:	49 0f 46 cc          	cmovbe %r12,%rcx
    95e5:	48 83 f9 04          	cmp    $0x4,%rcx
    95e9:	b8 04 00 00 00       	mov    $0x4,%eax
    95ee:	48 0f 47 c1          	cmova  %rcx,%rax
    95f2:	b9 88 01 00 00       	mov    $0x188,%ecx
    95f7:	31 db                	xor    %ebx,%ebx
    95f9:	48 f7 e1             	mul    %rcx
    95fc:	49 89 c7             	mov    %rax,%r15
    95ff:	0f 90 c0             	seto   %al
    9602:	0f 91 c3             	setno  %bl
    9605:	48 c1 e3 03          	shl    $0x3,%rbx
    9609:	4d 85 ed             	test   %r13,%r13
    960c:	74 3b                	je     9649 <alloc::vec::Vec<T>::insert+0x99>
    960e:	84 c0                	test   %al,%al
    9610:	0f 85 b0 00 00 00    	jne    96c6 <alloc::vec::Vec<T>::insert+0x116>
    9616:	48 8b 3d fb cb 03 00 	mov    0x3cbfb(%rip),%rdi        # 46218 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x18>
    961d:	48 85 ff             	test   %rdi,%rdi
    9620:	74 2b                	je     964d <alloc::vec::Vec<T>::insert+0x9d>
    9622:	49 69 f5 88 01 00 00 	imul   $0x188,%r13,%rsi
    9629:	48 85 f6             	test   %rsi,%rsi
    962c:	74 1f                	je     964d <alloc::vec::Vec<T>::insert+0x9d>
    962e:	48 89 da             	mov    %rbx,%rdx
    9631:	4c 89 f9             	mov    %r15,%rcx
    9634:	ff 15 3e c9 03 00    	callq  *0x3c93e(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
    963a:	eb 22                	jmp    965e <alloc::vec::Vec<T>::insert+0xae>
    963c:	48 8b 1d d5 cb 03 00 	mov    0x3cbd5(%rip),%rbx        # 46218 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x18>
    9643:	4d 8d 65 01          	lea    0x1(%r13),%r12
    9647:	eb 43                	jmp    968c <alloc::vec::Vec<T>::insert+0xdc>
    9649:	84 c0                	test   %al,%al
    964b:	75 79                	jne    96c6 <alloc::vec::Vec<T>::insert+0x116>
    964d:	4d 85 ff             	test   %r15,%r15
    9650:	74 0f                	je     9661 <alloc::vec::Vec<T>::insert+0xb1>
    9652:	4c 89 ff             	mov    %r15,%rdi
    9655:	48 89 de             	mov    %rbx,%rsi
    9658:	ff 15 22 c5 03 00    	callq  *0x3c522(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
    965e:	48 89 c3             	mov    %rax,%rbx
    9661:	48 85 db             	test   %rbx,%rbx
    9664:	74 68                	je     96ce <alloc::vec::Vec<T>::insert+0x11e>
    9666:	48 89 1d ab cb 03 00 	mov    %rbx,0x3cbab(%rip)        # 46218 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x18>
    966d:	49 c1 ef 03          	shr    $0x3,%r15
    9671:	48 b9 f1 72 0a 5e 4e 	movabs $0x29cbc14e5e0a72f1,%rcx
    9678:	c1 cb 29 
    967b:	4c 89 f8             	mov    %r15,%rax
    967e:	48 f7 e1             	mul    %rcx
    9681:	48 c1 ea 03          	shr    $0x3,%rdx
    9685:	48 89 15 94 cb 03 00 	mov    %rdx,0x3cb94(%rip)        # 46220 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x20>
    968c:	48 8d bb 88 01 00 00 	lea    0x188(%rbx),%rdi
    9693:	49 69 d5 88 01 00 00 	imul   $0x188,%r13,%rdx
    969a:	4c 8b 3d c7 c7 03 00 	mov    0x3c7c7(%rip),%r15        # 45e68 <memmove@GLIBC_2.2.5>
    96a1:	48 89 de             	mov    %rbx,%rsi
    96a4:	41 ff d7             	callq  *%r15
    96a7:	ba 88 01 00 00       	mov    $0x188,%edx
    96ac:	48 89 df             	mov    %rbx,%rdi
    96af:	4c 89 f6             	mov    %r14,%rsi
    96b2:	41 ff d7             	callq  *%r15
    96b5:	4c 89 25 6c cb 03 00 	mov    %r12,0x3cb6c(%rip)        # 46228 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x28>
    96bc:	5b                   	pop    %rbx
    96bd:	41 5c                	pop    %r12
    96bf:	41 5d                	pop    %r13
    96c1:	41 5e                	pop    %r14
    96c3:	41 5f                	pop    %r15
    96c5:	c3                   	retq   
    96c6:	ff 15 14 c4 03 00    	callq  *0x3c414(%rip)        # 45ae0 <_GLOBAL_OFFSET_TABLE_+0x158>
    96cc:	0f 0b                	ud2    
    96ce:	be 08 00 00 00       	mov    $0x8,%esi
    96d3:	4c 89 ff             	mov    %r15,%rdi
    96d6:	ff 15 44 c4 03 00    	callq  *0x3c444(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
    96dc:	0f 0b                	ud2    
    96de:	48 89 c3             	mov    %rax,%rbx
    96e1:	4c 89 f7             	mov    %r14,%rdi
    96e4:	e8 57 d2 ff ff       	callq  6940 <core::ptr::drop_in_place>
    96e9:	48 89 df             	mov    %rbx,%rdi
    96ec:	e8 5f b9 ff ff       	callq  5050 <_Unwind_Resume@plt>
    96f1:	0f 0b                	ud2    
    96f3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    96fa:	00 00 00 
    96fd:	0f 1f 00             	nopl   (%rax)

0000000000009700 <alloc::vec::Vec<T>::reserve>:
    9700:	41 56                	push   %r14
    9702:	53                   	push   %rbx
    9703:	50                   	push   %rax
    9704:	48 89 f1             	mov    %rsi,%rcx
    9707:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    970b:	48 8b 47 10          	mov    0x10(%rdi),%rax
    970f:	48 89 f2             	mov    %rsi,%rdx
    9712:	48 29 c2             	sub    %rax,%rdx
    9715:	48 39 ca             	cmp    %rcx,%rdx
    9718:	0f 83 85 00 00 00    	jae    97a3 <alloc::vec::Vec<T>::reserve+0xa3>
    971e:	48 01 c8             	add    %rcx,%rax
    9721:	0f 82 84 00 00 00    	jb     97ab <alloc::vec::Vec<T>::reserve+0xab>
    9727:	48 89 fb             	mov    %rdi,%rbx
    972a:	48 8d 0c 36          	lea    (%rsi,%rsi,1),%rcx
    972e:	48 39 c1             	cmp    %rax,%rcx
    9731:	48 0f 47 c1          	cmova  %rcx,%rax
    9735:	48 83 f8 04          	cmp    $0x4,%rax
    9739:	ba 04 00 00 00       	mov    $0x4,%edx
    973e:	48 0f 46 c2          	cmovbe %rdx,%rax
    9742:	31 c9                	xor    %ecx,%ecx
    9744:	48 f7 e2             	mul    %rdx
    9747:	49 89 c6             	mov    %rax,%r14
    974a:	0f 90 c0             	seto   %al
    974d:	0f 91 c1             	setno  %cl
    9750:	48 01 c9             	add    %rcx,%rcx
    9753:	48 85 f6             	test   %rsi,%rsi
    9756:	74 23                	je     977b <alloc::vec::Vec<T>::reserve+0x7b>
    9758:	84 c0                	test   %al,%al
    975a:	75 4f                	jne    97ab <alloc::vec::Vec<T>::reserve+0xab>
    975c:	48 8b 3b             	mov    (%rbx),%rdi
    975f:	48 85 ff             	test   %rdi,%rdi
    9762:	74 1b                	je     977f <alloc::vec::Vec<T>::reserve+0x7f>
    9764:	48 c1 e6 02          	shl    $0x2,%rsi
    9768:	48 85 f6             	test   %rsi,%rsi
    976b:	74 12                	je     977f <alloc::vec::Vec<T>::reserve+0x7f>
    976d:	48 89 ca             	mov    %rcx,%rdx
    9770:	4c 89 f1             	mov    %r14,%rcx
    9773:	ff 15 ff c7 03 00    	callq  *0x3c7ff(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
    9779:	eb 15                	jmp    9790 <alloc::vec::Vec<T>::reserve+0x90>
    977b:	84 c0                	test   %al,%al
    977d:	75 2c                	jne    97ab <alloc::vec::Vec<T>::reserve+0xab>
    977f:	4d 85 f6             	test   %r14,%r14
    9782:	74 0f                	je     9793 <alloc::vec::Vec<T>::reserve+0x93>
    9784:	4c 89 f7             	mov    %r14,%rdi
    9787:	48 89 ce             	mov    %rcx,%rsi
    978a:	ff 15 f0 c3 03 00    	callq  *0x3c3f0(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
    9790:	48 89 c1             	mov    %rax,%rcx
    9793:	48 85 c9             	test   %rcx,%rcx
    9796:	74 1b                	je     97b3 <alloc::vec::Vec<T>::reserve+0xb3>
    9798:	48 89 0b             	mov    %rcx,(%rbx)
    979b:	49 c1 ee 02          	shr    $0x2,%r14
    979f:	4c 89 73 08          	mov    %r14,0x8(%rbx)
    97a3:	48 83 c4 08          	add    $0x8,%rsp
    97a7:	5b                   	pop    %rbx
    97a8:	41 5e                	pop    %r14
    97aa:	c3                   	retq   
    97ab:	ff 15 2f c3 03 00    	callq  *0x3c32f(%rip)        # 45ae0 <_GLOBAL_OFFSET_TABLE_+0x158>
    97b1:	0f 0b                	ud2    
    97b3:	be 02 00 00 00       	mov    $0x2,%esi
    97b8:	4c 89 f7             	mov    %r14,%rdi
    97bb:	ff 15 5f c3 03 00    	callq  *0x3c35f(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
    97c1:	0f 0b                	ud2    
    97c3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    97ca:	00 00 00 
    97cd:	0f 1f 00             	nopl   (%rax)

00000000000097d0 <alloc::vec::Vec<T>::reserve>:
    97d0:	41 57                	push   %r15
    97d2:	41 56                	push   %r14
    97d4:	53                   	push   %rbx
    97d5:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
    97d9:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
    97dd:	48 89 d8             	mov    %rbx,%rax
    97e0:	48 29 c8             	sub    %rcx,%rax
    97e3:	48 39 f0             	cmp    %rsi,%rax
    97e6:	0f 83 9f 00 00 00    	jae    988b <alloc::vec::Vec<T>::reserve+0xbb>
    97ec:	48 01 f1             	add    %rsi,%rcx
    97ef:	0f 82 9c 00 00 00    	jb     9891 <alloc::vec::Vec<T>::reserve+0xc1>
    97f5:	49 89 ff             	mov    %rdi,%r15
    97f8:	48 8d 04 1b          	lea    (%rbx,%rbx,1),%rax
    97fc:	48 39 c8             	cmp    %rcx,%rax
    97ff:	48 0f 47 c8          	cmova  %rax,%rcx
    9803:	48 83 f9 04          	cmp    $0x4,%rcx
    9807:	b8 04 00 00 00       	mov    $0x4,%eax
    980c:	48 0f 47 c1          	cmova  %rcx,%rax
    9810:	ba 18 00 00 00       	mov    $0x18,%edx
    9815:	31 c9                	xor    %ecx,%ecx
    9817:	48 f7 e2             	mul    %rdx
    981a:	49 89 c6             	mov    %rax,%r14
    981d:	0f 90 c0             	seto   %al
    9820:	0f 91 c1             	setno  %cl
    9823:	48 c1 e1 03          	shl    $0x3,%rcx
    9827:	48 85 db             	test   %rbx,%rbx
    982a:	74 27                	je     9853 <alloc::vec::Vec<T>::reserve+0x83>
    982c:	84 c0                	test   %al,%al
    982e:	75 61                	jne    9891 <alloc::vec::Vec<T>::reserve+0xc1>
    9830:	49 8b 3f             	mov    (%r15),%rdi
    9833:	48 85 ff             	test   %rdi,%rdi
    9836:	74 1f                	je     9857 <alloc::vec::Vec<T>::reserve+0x87>
    9838:	48 c1 e3 03          	shl    $0x3,%rbx
    983c:	48 8d 34 5b          	lea    (%rbx,%rbx,2),%rsi
    9840:	48 85 f6             	test   %rsi,%rsi
    9843:	74 12                	je     9857 <alloc::vec::Vec<T>::reserve+0x87>
    9845:	48 89 ca             	mov    %rcx,%rdx
    9848:	4c 89 f1             	mov    %r14,%rcx
    984b:	ff 15 27 c7 03 00    	callq  *0x3c727(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
    9851:	eb 15                	jmp    9868 <alloc::vec::Vec<T>::reserve+0x98>
    9853:	84 c0                	test   %al,%al
    9855:	75 3a                	jne    9891 <alloc::vec::Vec<T>::reserve+0xc1>
    9857:	4d 85 f6             	test   %r14,%r14
    985a:	74 0f                	je     986b <alloc::vec::Vec<T>::reserve+0x9b>
    985c:	4c 89 f7             	mov    %r14,%rdi
    985f:	48 89 ce             	mov    %rcx,%rsi
    9862:	ff 15 18 c3 03 00    	callq  *0x3c318(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
    9868:	48 89 c1             	mov    %rax,%rcx
    986b:	48 85 c9             	test   %rcx,%rcx
    986e:	74 29                	je     9899 <alloc::vec::Vec<T>::reserve+0xc9>
    9870:	49 89 0f             	mov    %rcx,(%r15)
    9873:	48 b9 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rcx
    987a:	aa aa aa 
    987d:	4c 89 f0             	mov    %r14,%rax
    9880:	48 f7 e1             	mul    %rcx
    9883:	48 c1 ea 04          	shr    $0x4,%rdx
    9887:	49 89 57 08          	mov    %rdx,0x8(%r15)
    988b:	5b                   	pop    %rbx
    988c:	41 5e                	pop    %r14
    988e:	41 5f                	pop    %r15
    9890:	c3                   	retq   
    9891:	ff 15 49 c2 03 00    	callq  *0x3c249(%rip)        # 45ae0 <_GLOBAL_OFFSET_TABLE_+0x158>
    9897:	0f 0b                	ud2    
    9899:	be 08 00 00 00       	mov    $0x8,%esi
    989e:	4c 89 f7             	mov    %r14,%rdi
    98a1:	ff 15 79 c2 03 00    	callq  *0x3c279(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
    98a7:	0f 0b                	ud2    
    98a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000098b0 <alloc::vec::Vec<T>::reserve>:
    98b0:	41 56                	push   %r14
    98b2:	53                   	push   %rbx
    98b3:	50                   	push   %rax
    98b4:	48 89 f0             	mov    %rsi,%rax
    98b7:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    98bb:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
    98bf:	48 89 f2             	mov    %rsi,%rdx
    98c2:	48 29 ca             	sub    %rcx,%rdx
    98c5:	48 39 c2             	cmp    %rax,%rdx
    98c8:	0f 83 88 00 00 00    	jae    9956 <alloc::vec::Vec<T>::reserve+0xa6>
    98ce:	48 01 c1             	add    %rax,%rcx
    98d1:	0f 82 87 00 00 00    	jb     995e <alloc::vec::Vec<T>::reserve+0xae>
    98d7:	48 89 fb             	mov    %rdi,%rbx
    98da:	48 8d 04 36          	lea    (%rsi,%rsi,1),%rax
    98de:	48 39 c8             	cmp    %rcx,%rax
    98e1:	48 0f 47 c8          	cmova  %rax,%rcx
    98e5:	48 83 f9 04          	cmp    $0x4,%rcx
    98e9:	b8 04 00 00 00       	mov    $0x4,%eax
    98ee:	48 0f 47 c1          	cmova  %rcx,%rax
    98f2:	ba 40 00 00 00       	mov    $0x40,%edx
    98f7:	31 c9                	xor    %ecx,%ecx
    98f9:	48 f7 e2             	mul    %rdx
    98fc:	49 89 c6             	mov    %rax,%r14
    98ff:	0f 90 c0             	seto   %al
    9902:	0f 91 c1             	setno  %cl
    9905:	48 c1 e1 03          	shl    $0x3,%rcx
    9909:	48 85 f6             	test   %rsi,%rsi
    990c:	74 20                	je     992e <alloc::vec::Vec<T>::reserve+0x7e>
    990e:	84 c0                	test   %al,%al
    9910:	75 4c                	jne    995e <alloc::vec::Vec<T>::reserve+0xae>
    9912:	48 8b 3b             	mov    (%rbx),%rdi
    9915:	48 85 ff             	test   %rdi,%rdi
    9918:	74 18                	je     9932 <alloc::vec::Vec<T>::reserve+0x82>
    991a:	48 c1 e6 06          	shl    $0x6,%rsi
    991e:	74 12                	je     9932 <alloc::vec::Vec<T>::reserve+0x82>
    9920:	48 89 ca             	mov    %rcx,%rdx
    9923:	4c 89 f1             	mov    %r14,%rcx
    9926:	ff 15 4c c6 03 00    	callq  *0x3c64c(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
    992c:	eb 15                	jmp    9943 <alloc::vec::Vec<T>::reserve+0x93>
    992e:	84 c0                	test   %al,%al
    9930:	75 2c                	jne    995e <alloc::vec::Vec<T>::reserve+0xae>
    9932:	4d 85 f6             	test   %r14,%r14
    9935:	74 0f                	je     9946 <alloc::vec::Vec<T>::reserve+0x96>
    9937:	4c 89 f7             	mov    %r14,%rdi
    993a:	48 89 ce             	mov    %rcx,%rsi
    993d:	ff 15 3d c2 03 00    	callq  *0x3c23d(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
    9943:	48 89 c1             	mov    %rax,%rcx
    9946:	48 85 c9             	test   %rcx,%rcx
    9949:	74 1b                	je     9966 <alloc::vec::Vec<T>::reserve+0xb6>
    994b:	48 89 0b             	mov    %rcx,(%rbx)
    994e:	49 c1 ee 06          	shr    $0x6,%r14
    9952:	4c 89 73 08          	mov    %r14,0x8(%rbx)
    9956:	48 83 c4 08          	add    $0x8,%rsp
    995a:	5b                   	pop    %rbx
    995b:	41 5e                	pop    %r14
    995d:	c3                   	retq   
    995e:	ff 15 7c c1 03 00    	callq  *0x3c17c(%rip)        # 45ae0 <_GLOBAL_OFFSET_TABLE_+0x158>
    9964:	0f 0b                	ud2    
    9966:	be 08 00 00 00       	mov    $0x8,%esi
    996b:	4c 89 f7             	mov    %r14,%rdi
    996e:	ff 15 ac c1 03 00    	callq  *0x3c1ac(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
    9974:	0f 0b                	ud2    
    9976:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    997d:	00 00 00 

0000000000009980 <alloc::sync::Arc<T>::drop_slow>:
    9980:	53                   	push   %rbx
    9981:	48 89 fb             	mov    %rdi,%rbx
    9984:	48 8b 3f             	mov    (%rdi),%rdi
    9987:	48 8b 47 10          	mov    0x10(%rdi),%rax
    998b:	48 85 c0             	test   %rax,%rax
    998e:	74 1e                	je     99ae <alloc::sync::Arc<T>::drop_slow+0x2e>
    9990:	c6 00 00             	movb   $0x0,(%rax)
    9993:	48 8b 77 18          	mov    0x18(%rdi),%rsi
    9997:	48 85 f6             	test   %rsi,%rsi
    999a:	74 0f                	je     99ab <alloc::sync::Arc<T>::drop_slow+0x2b>
    999c:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    99a0:	ba 01 00 00 00       	mov    $0x1,%edx
    99a5:	ff 15 4d c2 03 00    	callq  *0x3c24d(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    99ab:	48 8b 3b             	mov    (%rbx),%rdi
    99ae:	48 83 ff ff          	cmp    $0xffffffffffffffff,%rdi
    99b2:	74 19                	je     99cd <alloc::sync::Arc<T>::drop_slow+0x4d>
    99b4:	f0 48 83 6f 08 01    	lock subq $0x1,0x8(%rdi)
    99ba:	75 11                	jne    99cd <alloc::sync::Arc<T>::drop_slow+0x4d>
    99bc:	be 30 00 00 00       	mov    $0x30,%esi
    99c1:	ba 08 00 00 00       	mov    $0x8,%edx
    99c6:	5b                   	pop    %rbx
    99c7:	ff 25 2b c2 03 00    	jmpq   *0x3c22b(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    99cd:	5b                   	pop    %rbx
    99ce:	c3                   	retq   
    99cf:	90                   	nop

00000000000099d0 <alloc::alloc::box_free>:
    99d0:	48 89 f0             	mov    %rsi,%rax
    99d3:	48 8b 76 08          	mov    0x8(%rsi),%rsi
    99d7:	48 85 f6             	test   %rsi,%rsi
    99da:	74 0a                	je     99e6 <alloc::alloc::box_free+0x16>
    99dc:	48 8b 50 10          	mov    0x10(%rax),%rdx
    99e0:	ff 25 12 c2 03 00    	jmpq   *0x3c212(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    99e6:	c3                   	retq   
    99e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    99ee:	00 00 

00000000000099f0 <alloc::alloc::box_free>:
    99f0:	be 18 00 00 00       	mov    $0x18,%esi
    99f5:	ba 08 00 00 00       	mov    $0x8,%edx
    99fa:	ff 25 f8 c1 03 00    	jmpq   *0x3c1f8(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>

0000000000009a00 <gimli::read::line::FileEntryFormat::parse>:
    9a00:	55                   	push   %rbp
    9a01:	41 57                	push   %r15
    9a03:	41 56                	push   %r14
    9a05:	41 55                	push   %r13
    9a07:	41 54                	push   %r12
    9a09:	53                   	push   %rbx
    9a0a:	48 83 ec 38          	sub    $0x38,%rsp
    9a0e:	49 89 f5             	mov    %rsi,%r13
    9a11:	49 89 fe             	mov    %rdi,%r14
    9a14:	48 8b 6e 08          	mov    0x8(%rsi),%rbp
    9a18:	48 85 ed             	test   %rbp,%rbp
    9a1b:	0f 84 52 02 00 00    	je     9c73 <gimli::read::line::FileEntryFormat::parse+0x273>
    9a21:	49 8b 45 00          	mov    0x0(%r13),%rax
    9a25:	48 8d 48 01          	lea    0x1(%rax),%rcx
    9a29:	48 83 c5 ff          	add    $0xffffffffffffffff,%rbp
    9a2d:	49 89 4d 00          	mov    %rcx,0x0(%r13)
    9a31:	49 89 6d 08          	mov    %rbp,0x8(%r13)
    9a35:	44 0f b6 20          	movzbl (%rax),%r12d
    9a39:	4d 85 e4             	test   %r12,%r12
    9a3c:	0f 84 4d 02 00 00    	je     9c8f <gimli::read::line::FileEntryFormat::parse+0x28f>
    9a42:	4e 8d 3c a5 00 00 00 	lea    0x0(,%r12,4),%r15
    9a49:	00 
    9a4a:	be 02 00 00 00       	mov    $0x2,%esi
    9a4f:	4c 89 ff             	mov    %r15,%rdi
    9a52:	ff 15 28 c1 03 00    	callq  *0x3c128(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
    9a58:	48 85 c0             	test   %rax,%rax
    9a5b:	0f 84 0e 03 00 00    	je     9d6f <gimli::read::line::FileEntryFormat::parse+0x36f>
    9a61:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    9a66:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
    9a6b:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
    9a72:	00 00 
    9a74:	48 85 ed             	test   %rbp,%rbp
    9a77:	0f 84 41 02 00 00    	je     9cbe <gimli::read::line::FileEntryFormat::parse+0x2be>
    9a7d:	b9 01 00 00 00       	mov    $0x1,%ecx
    9a82:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%rsp)
    9a89:	00 
    9a8a:	45 31 c0             	xor    %r8d,%r8d
    9a8d:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
    9a92:	4d 8b 55 00          	mov    0x0(%r13),%r10
    9a96:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
    9a9d:	31 ff                	xor    %edi,%edi
    9a9f:	45 31 ff             	xor    %r15d,%r15d
    9aa2:	31 c9                	xor    %ecx,%ecx
    9aa4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    9aab:	00 00 00 
    9aae:	66 90                	xchg   %ax,%ax
    9ab0:	4d 8d 1c 3a          	lea    (%r10,%rdi,1),%r11
    9ab4:	49 83 c3 01          	add    $0x1,%r11
    9ab8:	48 8d 54 1d 00       	lea    0x0(%rbp,%rbx,1),%rdx
    9abd:	4d 89 5d 00          	mov    %r11,0x0(%r13)
    9ac1:	49 89 55 08          	mov    %rdx,0x8(%r13)
    9ac5:	41 0f b6 14 3a       	movzbl (%r10,%rdi,1),%edx
    9aca:	83 f9 3f             	cmp    $0x3f,%ecx
    9acd:	75 09                	jne    9ad8 <gimli::read::line::FileEntryFormat::parse+0xd8>
    9acf:	80 fa 01             	cmp    $0x1,%dl
    9ad2:	0f 87 ec 01 00 00    	ja     9cc4 <gimli::read::line::FileEntryFormat::parse+0x2c4>
    9ad8:	0f b6 f2             	movzbl %dl,%esi
    9adb:	89 f2                	mov    %esi,%edx
    9add:	83 e2 7f             	and    $0x7f,%edx
    9ae0:	48 d3 e2             	shl    %cl,%rdx
    9ae3:	49 09 d7             	or     %rdx,%r15
    9ae6:	40 84 f6             	test   %sil,%sil
    9ae9:	79 15                	jns    9b00 <gimli::read::line::FileEntryFormat::parse+0x100>
    9aeb:	83 c1 07             	add    $0x7,%ecx
    9aee:	48 83 c7 01          	add    $0x1,%rdi
    9af2:	48 83 c3 ff          	add    $0xffffffffffffffff,%rbx
    9af6:	48 39 fd             	cmp    %rdi,%rbp
    9af9:	75 b5                	jne    9ab0 <gimli::read::line::FileEntryFormat::parse+0xb0>
    9afb:	e9 d1 01 00 00       	jmpq   9cd1 <gimli::read::line::FileEntryFormat::parse+0x2d1>
    9b00:	49 81 ff 00 00 01 00 	cmp    $0x10000,%r15
    9b07:	0f 92 44 24 0f       	setb   0xf(%rsp)
    9b0c:	66 41 83 ff 01       	cmp    $0x1,%r15w
    9b11:	0f 94 44 24 0e       	sete   0xe(%rsp)
    9b16:	49 81 ff ff ff 00 00 	cmp    $0xffff,%r15
    9b1d:	bb ff ff 00 00       	mov    $0xffff,%ebx
    9b22:	41 0f 42 df          	cmovb  %r15d,%ebx
    9b26:	48 8d 4d ff          	lea    -0x1(%rbp),%rcx
    9b2a:	48 39 f9             	cmp    %rdi,%rcx
    9b2d:	0f 84 ed 01 00 00    	je     9d20 <gimli::read::line::FileEntryFormat::parse+0x320>
    9b33:	4d 8d 1c 3a          	lea    (%r10,%rdi,1),%r11
    9b37:	49 83 c3 02          	add    $0x2,%r11
    9b3b:	48 89 e9             	mov    %rbp,%rcx
    9b3e:	48 29 f9             	sub    %rdi,%rcx
    9b41:	48 8d 51 fe          	lea    -0x2(%rcx),%rdx
    9b45:	4d 89 5d 00          	mov    %r11,0x0(%r13)
    9b49:	49 89 55 08          	mov    %rdx,0x8(%r13)
    9b4d:	41 0f b6 54 3a 01    	movzbl 0x1(%r10,%rdi,1),%edx
    9b53:	89 d6                	mov    %edx,%esi
    9b55:	83 e6 7f             	and    $0x7f,%esi
    9b58:	89 74 24 10          	mov    %esi,0x10(%rsp)
    9b5c:	84 d2                	test   %dl,%dl
    9b5e:	79 42                	jns    9ba2 <gimli::read::line::FileEntryFormat::parse+0x1a2>
    9b60:	48 8d 55 fe          	lea    -0x2(%rbp),%rdx
    9b64:	48 39 fa             	cmp    %rdi,%rdx
    9b67:	0f 84 b3 01 00 00    	je     9d20 <gimli::read::line::FileEntryFormat::parse+0x320>
    9b6d:	4d 8d 1c 3a          	lea    (%r10,%rdi,1),%r11
    9b71:	49 83 c3 03          	add    $0x3,%r11
    9b75:	48 8d 51 fd          	lea    -0x3(%rcx),%rdx
    9b79:	4d 89 5d 00          	mov    %r11,0x0(%r13)
    9b7d:	49 89 55 08          	mov    %rdx,0x8(%r13)
    9b81:	45 0f b6 4c 3a 02    	movzbl 0x2(%r10,%rdi,1),%r9d
    9b87:	44 89 ce             	mov    %r9d,%esi
    9b8a:	83 e6 7f             	and    $0x7f,%esi
    9b8d:	c1 e6 07             	shl    $0x7,%esi
    9b90:	8b 54 24 10          	mov    0x10(%rsp),%edx
    9b94:	0f b7 d2             	movzwl %dx,%edx
    9b97:	09 f2                	or     %esi,%edx
    9b99:	89 54 24 10          	mov    %edx,0x10(%rsp)
    9b9d:	45 84 c9             	test   %r9b,%r9b
    9ba0:	78 79                	js     9c1b <gimli::read::line::FileEntryFormat::parse+0x21b>
    9ba2:	8b 6c 24 14          	mov    0x14(%rsp),%ebp
    9ba6:	4c 3b 44 24 20       	cmp    0x20(%rsp),%r8
    9bab:	75 19                	jne    9bc6 <gimli::read::line::FileEntryFormat::parse+0x1c6>
    9bad:	be 01 00 00 00       	mov    $0x1,%esi
    9bb2:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
    9bb7:	e8 44 fb ff ff       	callq  9700 <alloc::vec::Vec<T>::reserve>
    9bbc:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    9bc1:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
    9bc6:	8a 4c 24 0f          	mov    0xf(%rsp),%cl
    9bca:	22 4c 24 0e          	and    0xe(%rsp),%cl
    9bce:	0f b6 c9             	movzbl %cl,%ecx
    9bd1:	01 cd                	add    %ecx,%ebp
    9bd3:	66 42 89 1c 80       	mov    %bx,(%rax,%r8,4)
    9bd8:	8b 4c 24 10          	mov    0x10(%rsp),%ecx
    9bdc:	66 42 89 4c 80 02    	mov    %cx,0x2(%rax,%r8,4)
    9be2:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
    9be7:	49 83 c0 01          	add    $0x1,%r8
    9beb:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
    9bf0:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
    9bf5:	4c 39 e1             	cmp    %r12,%rcx
    9bf8:	0f 84 42 01 00 00    	je     9d40 <gimli::read::line::FileEntryFormat::parse+0x340>
    9bfe:	89 6c 24 14          	mov    %ebp,0x14(%rsp)
    9c02:	49 8b 6d 08          	mov    0x8(%r13),%rbp
    9c06:	48 83 c1 01          	add    $0x1,%rcx
    9c0a:	4d 89 f9             	mov    %r15,%r9
    9c0d:	48 85 ed             	test   %rbp,%rbp
    9c10:	0f 85 77 fe ff ff    	jne    9a8d <gimli::read::line::FileEntryFormat::parse+0x8d>
    9c16:	e9 a3 00 00 00       	jmpq   9cbe <gimli::read::line::FileEntryFormat::parse+0x2be>
    9c1b:	48 83 c5 fd          	add    $0xfffffffffffffffd,%rbp
    9c1f:	48 39 fd             	cmp    %rdi,%rbp
    9c22:	0f 84 f8 00 00 00    	je     9d20 <gimli::read::line::FileEntryFormat::parse+0x320>
    9c28:	49 8d 14 3a          	lea    (%r10,%rdi,1),%rdx
    9c2c:	48 83 c2 04          	add    $0x4,%rdx
    9c30:	48 83 c1 fc          	add    $0xfffffffffffffffc,%rcx
    9c34:	49 89 55 00          	mov    %rdx,0x0(%r13)
    9c38:	49 89 4d 08          	mov    %rcx,0x8(%r13)
    9c3c:	41 0f b6 4c 3a 03    	movzbl 0x3(%r10,%rdi,1),%ecx
    9c42:	66 83 f9 03          	cmp    $0x3,%cx
    9c46:	8b 6c 24 14          	mov    0x14(%rsp),%ebp
    9c4a:	0f 87 15 01 00 00    	ja     9d65 <gimli::read::line::FileEntryFormat::parse+0x365>
    9c50:	0f b7 c9             	movzwl %cx,%ecx
    9c53:	c1 e1 0e             	shl    $0xe,%ecx
    9c56:	8b 54 24 10          	mov    0x10(%rsp),%edx
    9c5a:	0f b7 d2             	movzwl %dx,%edx
    9c5d:	09 ca                	or     %ecx,%edx
    9c5f:	89 54 24 10          	mov    %edx,0x10(%rsp)
    9c63:	4c 3b 44 24 20       	cmp    0x20(%rsp),%r8
    9c68:	0f 85 58 ff ff ff    	jne    9bc6 <gimli::read::line::FileEntryFormat::parse+0x1c6>
    9c6e:	e9 3a ff ff ff       	jmpq   9bad <gimli::read::line::FileEntryFormat::parse+0x1ad>
    9c73:	49 8b 45 00          	mov    0x0(%r13),%rax
    9c77:	49 89 46 10          	mov    %rax,0x10(%r14)
    9c7b:	49 c7 46 08 13 00 00 	movq   $0x13,0x8(%r14)
    9c82:	00 
    9c83:	49 c7 06 01 00 00 00 	movq   $0x1,(%r14)
    9c8a:	e9 82 00 00 00       	jmpq   9d11 <gimli::read::line::FileEntryFormat::parse+0x311>
    9c8f:	48 c7 44 24 18 02 00 	movq   $0x2,0x18(%rsp)
    9c96:	00 00 
    9c98:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
    9c9d:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
    9ca4:	00 00 
    9ca6:	41 c6 46 08 43       	movb   $0x43,0x8(%r14)
    9cab:	49 c7 06 01 00 00 00 	movq   $0x1,(%r14)
    9cb2:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    9cb7:	48 85 f6             	test   %rsi,%rsi
    9cba:	75 37                	jne    9cf3 <gimli::read::line::FileEntryFormat::parse+0x2f3>
    9cbc:	eb 53                	jmp    9d11 <gimli::read::line::FileEntryFormat::parse+0x311>
    9cbe:	4d 8b 55 00          	mov    0x0(%r13),%r10
    9cc2:	eb 10                	jmp    9cd4 <gimli::read::line::FileEntryFormat::parse+0x2d4>
    9cc4:	49 81 e1 00 ff ff ff 	and    $0xffffffffffffff00,%r9
    9ccb:	49 83 c9 06          	or     $0x6,%r9
    9ccf:	eb 09                	jmp    9cda <gimli::read::line::FileEntryFormat::parse+0x2da>
    9cd1:	49 01 fa             	add    %rdi,%r10
    9cd4:	41 b9 13 00 00 00    	mov    $0x13,%r9d
    9cda:	4d 89 56 10          	mov    %r10,0x10(%r14)
    9cde:	4d 89 4e 08          	mov    %r9,0x8(%r14)
    9ce2:	49 c7 06 01 00 00 00 	movq   $0x1,(%r14)
    9ce9:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    9cee:	48 85 f6             	test   %rsi,%rsi
    9cf1:	74 1e                	je     9d11 <gimli::read::line::FileEntryFormat::parse+0x311>
    9cf3:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    9cf8:	48 85 ff             	test   %rdi,%rdi
    9cfb:	74 14                	je     9d11 <gimli::read::line::FileEntryFormat::parse+0x311>
    9cfd:	48 c1 e6 02          	shl    $0x2,%rsi
    9d01:	48 85 f6             	test   %rsi,%rsi
    9d04:	74 0b                	je     9d11 <gimli::read::line::FileEntryFormat::parse+0x311>
    9d06:	ba 02 00 00 00       	mov    $0x2,%edx
    9d0b:	ff 15 e7 be 03 00    	callq  *0x3bee7(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    9d11:	48 83 c4 38          	add    $0x38,%rsp
    9d15:	5b                   	pop    %rbx
    9d16:	41 5c                	pop    %r12
    9d18:	41 5d                	pop    %r13
    9d1a:	41 5e                	pop    %r14
    9d1c:	41 5f                	pop    %r15
    9d1e:	5d                   	pop    %rbp
    9d1f:	c3                   	retq   
    9d20:	b8 13 00 00 00       	mov    $0x13,%eax
    9d25:	49 89 46 08          	mov    %rax,0x8(%r14)
    9d29:	4d 89 5e 10          	mov    %r11,0x10(%r14)
    9d2d:	49 c7 06 01 00 00 00 	movq   $0x1,(%r14)
    9d34:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    9d39:	48 85 f6             	test   %rsi,%rsi
    9d3c:	75 b5                	jne    9cf3 <gimli::read::line::FileEntryFormat::parse+0x2f3>
    9d3e:	eb d1                	jmp    9d11 <gimli::read::line::FileEntryFormat::parse+0x311>
    9d40:	83 fd 01             	cmp    $0x1,%ebp
    9d43:	0f 85 5d ff ff ff    	jne    9ca6 <gimli::read::line::FileEntryFormat::parse+0x2a6>
    9d49:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    9d4e:	49 89 46 18          	mov    %rax,0x18(%r14)
    9d52:	0f 10 44 24 18       	movups 0x18(%rsp),%xmm0
    9d57:	41 0f 11 46 08       	movups %xmm0,0x8(%r14)
    9d5c:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
    9d63:	eb ac                	jmp    9d11 <gimli::read::line::FileEntryFormat::parse+0x311>
    9d65:	b8 06 00 00 00       	mov    $0x6,%eax
    9d6a:	45 31 db             	xor    %r11d,%r11d
    9d6d:	eb b6                	jmp    9d25 <gimli::read::line::FileEntryFormat::parse+0x325>
    9d6f:	be 02 00 00 00       	mov    $0x2,%esi
    9d74:	4c 89 ff             	mov    %r15,%rdi
    9d77:	ff 15 a3 bd 03 00    	callq  *0x3bda3(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
    9d7d:	0f 0b                	ud2    
    9d7f:	48 89 c3             	mov    %rax,%rbx
    9d82:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
    9d87:	e8 44 ca ff ff       	callq  67d0 <core::ptr::drop_in_place>
    9d8c:	48 89 df             	mov    %rbx,%rdi
    9d8f:	e8 bc b2 ff ff       	callq  5050 <_Unwind_Resume@plt>
    9d94:	0f 0b                	ud2    
    9d96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    9d9d:	00 00 00 

0000000000009da0 <gimli::read::line::parse_attribute>:
    9da0:	41 57                	push   %r15
    9da2:	41 56                	push   %r14
    9da4:	53                   	push   %rbx
    9da5:	48 83 ec 18          	sub    $0x18,%rsp
    9da9:	c1 ea 08             	shr    $0x8,%edx
    9dac:	8d 41 fd             	lea    -0x3(%rcx),%eax
    9daf:	66 83 f8 25          	cmp    $0x25,%ax
    9db3:	77 3c                	ja     9df1 <gimli::read::line::parse_attribute+0x51>
    9db5:	0f b7 c0             	movzwl %ax,%eax
    9db8:	48 8d 0d d1 c5 02 00 	lea    0x2c5d1(%rip),%rcx        # 36390 <_fini+0xa6c>
    9dbf:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    9dc3:	48 01 c8             	add    %rcx,%rax
    9dc6:	ff e0                	jmpq   *%rax
    9dc8:	48 8b 46 08          	mov    0x8(%rsi),%rax
    9dcc:	48 83 f8 02          	cmp    $0x2,%rax
    9dd0:	0f 82 b1 05 00 00    	jb     a387 <gimli::read::line::parse_attribute+0x5e7>
    9dd6:	48 8b 0e             	mov    (%rsi),%rcx
    9dd9:	4c 8d 59 02          	lea    0x2(%rcx),%r11
    9ddd:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    9de1:	4c 89 1e             	mov    %r11,(%rsi)
    9de4:	48 89 46 08          	mov    %rax,0x8(%rsi)
    9de8:	44 0f b7 31          	movzwl (%rcx),%r14d
    9dec:	e9 9d 02 00 00       	jmpq   a08e <gimli::read::line::parse_attribute+0x2ee>
    9df1:	0f b7 c1             	movzwl %cx,%eax
    9df4:	3d 02 1f 00 00       	cmp    $0x1f02,%eax
    9df9:	74 3c                	je     9e37 <gimli::read::line::parse_attribute+0x97>
    9dfb:	3d 21 1f 00 00       	cmp    $0x1f21,%eax
    9e00:	0f 85 9d 00 00 00    	jne    9ea3 <gimli::read::line::parse_attribute+0x103>
    9e06:	80 fa 08             	cmp    $0x8,%dl
    9e09:	0f 85 91 05 00 00    	jne    a3a0 <gimli::read::line::parse_attribute+0x600>
    9e0f:	48 8b 46 08          	mov    0x8(%rsi),%rax
    9e13:	48 83 f8 07          	cmp    $0x7,%rax
    9e17:	0f 86 b7 06 00 00    	jbe    a4d4 <gimli::read::line::parse_attribute+0x734>
    9e1d:	48 8b 0e             	mov    (%rsi),%rcx
    9e20:	48 8d 51 08          	lea    0x8(%rcx),%rdx
    9e24:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
    9e28:	48 89 16             	mov    %rdx,(%rsi)
    9e2b:	48 89 46 08          	mov    %rax,0x8(%rsi)
    9e2f:	4c 8b 19             	mov    (%rcx),%r11
    9e32:	e9 8c 05 00 00       	jmpq   a3c3 <gimli::read::line::parse_attribute+0x623>
    9e37:	48 8b 46 08          	mov    0x8(%rsi),%rax
    9e3b:	48 85 c0             	test   %rax,%rax
    9e3e:	0f 84 cb 03 00 00    	je     a20f <gimli::read::line::parse_attribute+0x46f>
    9e44:	48 8b 16             	mov    (%rsi),%rdx
    9e47:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    9e4b:	45 31 c0             	xor    %r8d,%r8d
    9e4e:	45 31 db             	xor    %r11d,%r11d
    9e51:	31 c9                	xor    %ecx,%ecx
    9e53:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    9e5a:	00 00 00 
    9e5d:	0f 1f 00             	nopl   (%rax)
    9e60:	4c 8d 4a 01          	lea    0x1(%rdx),%r9
    9e64:	4c 89 0e             	mov    %r9,(%rsi)
    9e67:	48 89 46 08          	mov    %rax,0x8(%rsi)
    9e6b:	0f b6 12             	movzbl (%rdx),%edx
    9e6e:	83 f9 3f             	cmp    $0x3f,%ecx
    9e71:	75 09                	jne    9e7c <gimli::read::line::parse_attribute+0xdc>
    9e73:	80 fa 01             	cmp    $0x1,%dl
    9e76:	0f 87 a6 05 00 00    	ja     a422 <gimli::read::line::parse_attribute+0x682>
    9e7c:	0f b6 da             	movzbl %dl,%ebx
    9e7f:	89 da                	mov    %ebx,%edx
    9e81:	83 e2 7f             	and    $0x7f,%edx
    9e84:	48 d3 e2             	shl    %cl,%rdx
    9e87:	49 09 d3             	or     %rdx,%r11
    9e8a:	84 db                	test   %bl,%bl
    9e8c:	0f 89 e9 06 00 00    	jns    a57b <gimli::read::line::parse_attribute+0x7db>
    9e92:	83 c1 07             	add    $0x7,%ecx
    9e95:	4c 89 ca             	mov    %r9,%rdx
    9e98:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    9e9c:	72 c2                	jb     9e60 <gimli::read::line::parse_attribute+0xc0>
    9e9e:	e9 5b 03 00 00       	jmpq   a1fe <gimli::read::line::parse_attribute+0x45e>
    9ea3:	c6 47 08 0c          	movb   $0xc,0x8(%rdi)
    9ea7:	b8 01 00 00 00       	mov    $0x1,%eax
    9eac:	e9 b0 07 00 00       	jmpq   a661 <gimli::read::line::parse_attribute+0x8c1>
    9eb1:	48 8b 46 08          	mov    0x8(%rsi),%rax
    9eb5:	48 83 f8 04          	cmp    $0x4,%rax
    9eb9:	0f 82 c8 04 00 00    	jb     a387 <gimli::read::line::parse_attribute+0x5e7>
    9ebf:	48 8b 0e             	mov    (%rsi),%rcx
    9ec2:	4c 8d 59 04          	lea    0x4(%rcx),%r11
    9ec6:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    9eca:	4c 89 1e             	mov    %r11,(%rsi)
    9ecd:	48 89 46 08          	mov    %rax,0x8(%rsi)
    9ed1:	44 8b 31             	mov    (%rcx),%r14d
    9ed4:	e9 b5 01 00 00       	jmpq   a08e <gimli::read::line::parse_attribute+0x2ee>
    9ed9:	48 8b 46 08          	mov    0x8(%rsi),%rax
    9edd:	48 83 f8 02          	cmp    $0x2,%rax
    9ee1:	0f 82 a0 04 00 00    	jb     a387 <gimli::read::line::parse_attribute+0x5e7>
    9ee7:	48 8b 0e             	mov    (%rsi),%rcx
    9eea:	48 8d 51 02          	lea    0x2(%rcx),%rdx
    9eee:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    9ef2:	48 89 16             	mov    %rdx,(%rsi)
    9ef5:	48 89 46 08          	mov    %rax,0x8(%rsi)
    9ef9:	44 0f b7 19          	movzwl (%rcx),%r11d
    9efd:	44 89 d9             	mov    %r11d,%ecx
    9f00:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    9f06:	45 31 c0             	xor    %r8d,%r8d
    9f09:	41 b9 03 00 00 00    	mov    $0x3,%r9d
    9f0f:	31 f6                	xor    %esi,%esi
    9f11:	e9 2f 07 00 00       	jmpq   a645 <gimli::read::line::parse_attribute+0x8a5>
    9f16:	48 8b 46 08          	mov    0x8(%rsi),%rax
    9f1a:	48 83 f8 04          	cmp    $0x4,%rax
    9f1e:	0f 82 63 04 00 00    	jb     a387 <gimli::read::line::parse_attribute+0x5e7>
    9f24:	48 8b 0e             	mov    (%rsi),%rcx
    9f27:	48 8d 51 04          	lea    0x4(%rcx),%rdx
    9f2b:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    9f2f:	48 89 16             	mov    %rdx,(%rsi)
    9f32:	48 89 46 08          	mov    %rax,0x8(%rsi)
    9f36:	44 8b 19             	mov    (%rcx),%r11d
    9f39:	44 89 d9             	mov    %r11d,%ecx
    9f3c:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    9f42:	44 89 de             	mov    %r11d,%esi
    9f45:	81 e6 00 00 ff ff    	and    $0xffff0000,%esi
    9f4b:	41 b9 04 00 00 00    	mov    $0x4,%r9d
    9f51:	e9 c5 05 00 00       	jmpq   a51b <gimli::read::line::parse_attribute+0x77b>
    9f56:	48 8b 46 08          	mov    0x8(%rsi),%rax
    9f5a:	48 83 f8 08          	cmp    $0x8,%rax
    9f5e:	0f 82 23 04 00 00    	jb     a387 <gimli::read::line::parse_attribute+0x5e7>
    9f64:	48 8b 0e             	mov    (%rsi),%rcx
    9f67:	48 8d 51 08          	lea    0x8(%rcx),%rdx
    9f6b:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
    9f6f:	48 89 16             	mov    %rdx,(%rsi)
    9f72:	48 89 46 08          	mov    %rax,0x8(%rsi)
    9f76:	4c 8b 19             	mov    (%rcx),%r11
    9f79:	44 89 d9             	mov    %r11d,%ecx
    9f7c:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    9f82:	44 89 de             	mov    %r11d,%esi
    9f85:	81 e6 00 00 ff ff    	and    $0xffff0000,%esi
    9f8b:	49 b8 00 00 00 00 ff 	movabs $0xffffffff00000000,%r8
    9f92:	ff ff ff 
    9f95:	4d 21 d8             	and    %r11,%r8
    9f98:	41 b9 05 00 00 00    	mov    $0x5,%r9d
    9f9e:	e9 a2 06 00 00       	jmpq   a645 <gimli::read::line::parse_attribute+0x8a5>
    9fa3:	4c 8b 1e             	mov    (%rsi),%r11
    9fa6:	48 8b 46 08          	mov    0x8(%rsi),%rax
    9faa:	48 85 c0             	test   %rax,%rax
    9fad:	74 25                	je     9fd4 <gimli::read::line::parse_attribute+0x234>
    9faf:	45 31 f6             	xor    %r14d,%r14d
    9fb2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    9fb9:	00 00 00 
    9fbc:	0f 1f 40 00          	nopl   0x0(%rax)
    9fc0:	43 80 3c 33 00       	cmpb   $0x0,(%r11,%r14,1)
    9fc5:	0f 84 e4 05 00 00    	je     a5af <gimli::read::line::parse_attribute+0x80f>
    9fcb:	49 83 c6 01          	add    $0x1,%r14
    9fcf:	4c 39 f0             	cmp    %r14,%rax
    9fd2:	75 ec                	jne    9fc0 <gimli::read::line::parse_attribute+0x220>
    9fd4:	31 c0                	xor    %eax,%eax
    9fd6:	48 83 c8 13          	or     $0x13,%rax
    9fda:	4c 89 5f 10          	mov    %r11,0x10(%rdi)
    9fde:	e9 32 06 00 00       	jmpq   a615 <gimli::read::line::parse_attribute+0x875>
    9fe3:	4c 8b 46 08          	mov    0x8(%rsi),%r8
    9fe7:	4d 85 c0             	test   %r8,%r8
    9fea:	0f 84 b5 05 00 00    	je     a5a5 <gimli::read::line::parse_attribute+0x805>
    9ff0:	4c 8b 16             	mov    (%rsi),%r10
    9ff3:	49 8d 58 ff          	lea    -0x1(%r8),%rbx
    9ff7:	45 31 c9             	xor    %r9d,%r9d
    9ffa:	31 c0                	xor    %eax,%eax
    9ffc:	45 31 f6             	xor    %r14d,%r14d
    9fff:	31 c9                	xor    %ecx,%ecx
    a001:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a008:	00 00 00 
    a00b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a010:	4d 8d 1c 02          	lea    (%r10,%rax,1),%r11
    a014:	49 83 c3 01          	add    $0x1,%r11
    a018:	4c 89 1e             	mov    %r11,(%rsi)
    a01b:	48 89 5e 08          	mov    %rbx,0x8(%rsi)
    a01f:	41 0f b6 14 02       	movzbl (%r10,%rax,1),%edx
    a024:	83 f9 3f             	cmp    $0x3f,%ecx
    a027:	75 09                	jne    a032 <gimli::read::line::parse_attribute+0x292>
    a029:	80 fa 01             	cmp    $0x1,%dl
    a02c:	0f 87 da 05 00 00    	ja     a60c <gimli::read::line::parse_attribute+0x86c>
    a032:	44 0f b6 fa          	movzbl %dl,%r15d
    a036:	44 89 fa             	mov    %r15d,%edx
    a039:	83 e2 7f             	and    $0x7f,%edx
    a03c:	48 d3 e2             	shl    %cl,%rdx
    a03f:	49 09 d6             	or     %rdx,%r14
    a042:	45 84 ff             	test   %r15b,%r15b
    a045:	0f 89 23 06 00 00    	jns    a66e <gimli::read::line::parse_attribute+0x8ce>
    a04b:	83 c1 07             	add    $0x7,%ecx
    a04e:	48 83 c0 01          	add    $0x1,%rax
    a052:	48 83 c3 ff          	add    $0xffffffffffffffff,%rbx
    a056:	49 39 c0             	cmp    %rax,%r8
    a059:	75 b5                	jne    a010 <gimli::read::line::parse_attribute+0x270>
    a05b:	49 01 c2             	add    %rax,%r10
    a05e:	b8 13 00 00 00       	mov    $0x13,%eax
    a063:	4d 89 d1             	mov    %r10,%r9
    a066:	e9 a6 05 00 00       	jmpq   a611 <gimli::read::line::parse_attribute+0x871>
    a06b:	48 8b 46 08          	mov    0x8(%rsi),%rax
    a06f:	48 85 c0             	test   %rax,%rax
    a072:	0f 84 0f 03 00 00    	je     a387 <gimli::read::line::parse_attribute+0x5e7>
    a078:	48 8b 0e             	mov    (%rsi),%rcx
    a07b:	4c 8d 59 01          	lea    0x1(%rcx),%r11
    a07f:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    a083:	4c 89 1e             	mov    %r11,(%rsi)
    a086:	48 89 46 08          	mov    %rax,0x8(%rsi)
    a08a:	44 0f b6 31          	movzbl (%rcx),%r14d
    a08e:	4c 29 f0             	sub    %r14,%rax
    a091:	0f 83 56 03 00 00    	jae    a3ed <gimli::read::line::parse_attribute+0x64d>
    a097:	4c 89 5f 10          	mov    %r11,0x10(%rdi)
    a09b:	e9 ee 02 00 00       	jmpq   a38e <gimli::read::line::parse_attribute+0x5ee>
    a0a0:	48 8b 46 08          	mov    0x8(%rsi),%rax
    a0a4:	48 85 c0             	test   %rax,%rax
    a0a7:	0f 84 da 02 00 00    	je     a387 <gimli::read::line::parse_attribute+0x5e7>
    a0ad:	48 8b 0e             	mov    (%rsi),%rcx
    a0b0:	48 8d 51 01          	lea    0x1(%rcx),%rdx
    a0b4:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    a0b8:	48 89 16             	mov    %rdx,(%rsi)
    a0bb:	48 89 46 08          	mov    %rax,0x8(%rsi)
    a0bf:	44 8a 19             	mov    (%rcx),%r11b
    a0c2:	45 31 c0             	xor    %r8d,%r8d
    a0c5:	41 b9 02 00 00 00    	mov    $0x2,%r9d
    a0cb:	e9 29 02 00 00       	jmpq   a2f9 <gimli::read::line::parse_attribute+0x559>
    a0d0:	48 8b 46 08          	mov    0x8(%rsi),%rax
    a0d4:	48 85 c0             	test   %rax,%rax
    a0d7:	0f 84 aa 02 00 00    	je     a387 <gimli::read::line::parse_attribute+0x5e7>
    a0dd:	48 8b 0e             	mov    (%rsi),%rcx
    a0e0:	48 8d 51 01          	lea    0x1(%rcx),%rdx
    a0e4:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    a0e8:	48 89 16             	mov    %rdx,(%rsi)
    a0eb:	48 89 46 08          	mov    %rax,0x8(%rsi)
    a0ef:	80 39 00             	cmpb   $0x0,(%rcx)
    a0f2:	41 0f 95 c3          	setne  %r11b
    a0f6:	45 31 c0             	xor    %r8d,%r8d
    a0f9:	41 b9 09 00 00 00    	mov    $0x9,%r9d
    a0ff:	e9 f5 01 00 00       	jmpq   a2f9 <gimli::read::line::parse_attribute+0x559>
    a104:	48 8b 46 08          	mov    0x8(%rsi),%rax
    a108:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    a10c:	31 c9                	xor    %ecx,%ecx
    a10e:	45 31 db             	xor    %r11d,%r11d
    a111:	e9 24 00 00 00       	jmpq   a13a <gimli::read::line::parse_attribute+0x39a>
    a116:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a11d:	00 00 00 
    a120:	89 da                	mov    %ebx,%edx
    a122:	83 e2 7f             	and    $0x7f,%edx
    a125:	48 d3 e2             	shl    %cl,%rdx
    a128:	49 09 d3             	or     %rdx,%r11
    a12b:	83 c1 07             	add    $0x7,%ecx
    a12e:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    a132:	84 db                	test   %bl,%bl
    a134:	0f 89 fa 03 00 00    	jns    a534 <gimli::read::line::parse_attribute+0x794>
    a13a:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    a13e:	0f 84 df 03 00 00    	je     a523 <gimli::read::line::parse_attribute+0x783>
    a144:	48 8b 16             	mov    (%rsi),%rdx
    a147:	48 8d 5a 01          	lea    0x1(%rdx),%rbx
    a14b:	48 89 1e             	mov    %rbx,(%rsi)
    a14e:	48 89 46 08          	mov    %rax,0x8(%rsi)
    a152:	0f b6 1a             	movzbl (%rdx),%ebx
    a155:	83 f9 3f             	cmp    $0x3f,%ecx
    a158:	75 c6                	jne    a120 <gimli::read::line::parse_attribute+0x380>
    a15a:	84 db                	test   %bl,%bl
    a15c:	74 c2                	je     a120 <gimli::read::line::parse_attribute+0x380>
    a15e:	80 fb 7f             	cmp    $0x7f,%bl
    a161:	74 bd                	je     a120 <gimli::read::line::parse_attribute+0x380>
    a163:	b8 07 00 00 00       	mov    $0x7,%eax
    a168:	31 c9                	xor    %ecx,%ecx
    a16a:	48 89 4f 10          	mov    %rcx,0x10(%rdi)
    a16e:	e9 a2 04 00 00       	jmpq   a615 <gimli::read::line::parse_attribute+0x875>
    a173:	80 fa 08             	cmp    $0x8,%dl
    a176:	0f 85 b4 02 00 00    	jne    a430 <gimli::read::line::parse_attribute+0x690>
    a17c:	48 8b 46 08          	mov    0x8(%rsi),%rax
    a180:	48 83 f8 07          	cmp    $0x7,%rax
    a184:	0f 86 4a 03 00 00    	jbe    a4d4 <gimli::read::line::parse_attribute+0x734>
    a18a:	48 8b 0e             	mov    (%rsi),%rcx
    a18d:	48 8d 51 08          	lea    0x8(%rcx),%rdx
    a191:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
    a195:	48 89 16             	mov    %rdx,(%rsi)
    a198:	48 89 46 08          	mov    %rax,0x8(%rsi)
    a19c:	4c 8b 19             	mov    (%rcx),%r11
    a19f:	e9 af 02 00 00       	jmpq   a453 <gimli::read::line::parse_attribute+0x6b3>
    a1a4:	48 8b 46 08          	mov    0x8(%rsi),%rax
    a1a8:	48 85 c0             	test   %rax,%rax
    a1ab:	74 62                	je     a20f <gimli::read::line::parse_attribute+0x46f>
    a1ad:	48 8b 16             	mov    (%rsi),%rdx
    a1b0:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    a1b4:	45 31 c0             	xor    %r8d,%r8d
    a1b7:	45 31 db             	xor    %r11d,%r11d
    a1ba:	31 c9                	xor    %ecx,%ecx
    a1bc:	0f 1f 40 00          	nopl   0x0(%rax)
    a1c0:	4c 8d 4a 01          	lea    0x1(%rdx),%r9
    a1c4:	4c 89 0e             	mov    %r9,(%rsi)
    a1c7:	48 89 46 08          	mov    %rax,0x8(%rsi)
    a1cb:	0f b6 12             	movzbl (%rdx),%edx
    a1ce:	83 f9 3f             	cmp    $0x3f,%ecx
    a1d1:	75 09                	jne    a1dc <gimli::read::line::parse_attribute+0x43c>
    a1d3:	80 fa 01             	cmp    $0x1,%dl
    a1d6:	0f 87 46 02 00 00    	ja     a422 <gimli::read::line::parse_attribute+0x682>
    a1dc:	0f b6 da             	movzbl %dl,%ebx
    a1df:	89 da                	mov    %ebx,%edx
    a1e1:	83 e2 7f             	and    $0x7f,%edx
    a1e4:	48 d3 e2             	shl    %cl,%rdx
    a1e7:	49 09 d3             	or     %rdx,%r11
    a1ea:	84 db                	test   %bl,%bl
    a1ec:	0f 89 2e 04 00 00    	jns    a620 <gimli::read::line::parse_attribute+0x880>
    a1f2:	83 c1 07             	add    $0x7,%ecx
    a1f5:	4c 89 ca             	mov    %r9,%rdx
    a1f8:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    a1fc:	72 c2                	jb     a1c0 <gimli::read::line::parse_attribute+0x420>
    a1fe:	b8 13 00 00 00       	mov    $0x13,%eax
    a203:	4d 89 c8             	mov    %r9,%r8
    a206:	4c 89 4f 10          	mov    %r9,0x10(%rdi)
    a20a:	e9 06 04 00 00       	jmpq   a615 <gimli::read::line::parse_attribute+0x875>
    a20f:	4c 8b 06             	mov    (%rsi),%r8
    a212:	b8 13 00 00 00       	mov    $0x13,%eax
    a217:	e9 0b 02 00 00       	jmpq   a427 <gimli::read::line::parse_attribute+0x687>
    a21c:	80 fa 08             	cmp    $0x8,%dl
    a21f:	0f 85 58 02 00 00    	jne    a47d <gimli::read::line::parse_attribute+0x6dd>
    a225:	48 8b 46 08          	mov    0x8(%rsi),%rax
    a229:	48 83 f8 07          	cmp    $0x7,%rax
    a22d:	0f 86 a1 02 00 00    	jbe    a4d4 <gimli::read::line::parse_attribute+0x734>
    a233:	48 8b 0e             	mov    (%rsi),%rcx
    a236:	48 8d 51 08          	lea    0x8(%rcx),%rdx
    a23a:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
    a23e:	48 89 16             	mov    %rdx,(%rsi)
    a241:	48 89 46 08          	mov    %rax,0x8(%rsi)
    a245:	4c 8b 19             	mov    (%rcx),%r11
    a248:	e9 4f 02 00 00       	jmpq   a49c <gimli::read::line::parse_attribute+0x6fc>
    a24d:	48 8b 46 08          	mov    0x8(%rsi),%rax
    a251:	48 83 f8 10          	cmp    $0x10,%rax
    a255:	0f 82 2c 01 00 00    	jb     a387 <gimli::read::line::parse_attribute+0x5e7>
    a25b:	4c 8b 1e             	mov    (%rsi),%r11
    a25e:	49 8d 4b 10          	lea    0x10(%r11),%rcx
    a262:	48 83 c0 f0          	add    $0xfffffffffffffff0,%rax
    a266:	48 89 0e             	mov    %rcx,(%rsi)
    a269:	48 89 46 08          	mov    %rax,0x8(%rsi)
    a26d:	44 89 d9             	mov    %r11d,%ecx
    a270:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    a276:	44 89 de             	mov    %r11d,%esi
    a279:	81 e6 00 00 ff ff    	and    $0xffff0000,%esi
    a27f:	49 b8 00 00 00 00 ff 	movabs $0xffffffff00000000,%r8
    a286:	ff ff ff 
    a289:	4d 21 d8             	and    %r11,%r8
    a28c:	41 be 10 00 00 00    	mov    $0x10,%r14d
    a292:	41 b9 01 00 00 00    	mov    $0x1,%r9d
    a298:	e9 a8 03 00 00       	jmpq   a645 <gimli::read::line::parse_attribute+0x8a5>
    a29d:	80 fa 08             	cmp    $0x8,%dl
    a2a0:	0f 85 20 02 00 00    	jne    a4c6 <gimli::read::line::parse_attribute+0x726>
    a2a6:	48 8b 46 08          	mov    0x8(%rsi),%rax
    a2aa:	48 83 f8 07          	cmp    $0x7,%rax
    a2ae:	0f 86 20 02 00 00    	jbe    a4d4 <gimli::read::line::parse_attribute+0x734>
    a2b4:	48 8b 0e             	mov    (%rsi),%rcx
    a2b7:	48 8d 51 08          	lea    0x8(%rcx),%rdx
    a2bb:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
    a2bf:	48 89 16             	mov    %rdx,(%rsi)
    a2c2:	48 89 46 08          	mov    %rax,0x8(%rsi)
    a2c6:	4c 8b 19             	mov    (%rcx),%r11
    a2c9:	e9 17 03 00 00       	jmpq   a5e5 <gimli::read::line::parse_attribute+0x845>
    a2ce:	48 8b 46 08          	mov    0x8(%rsi),%rax
    a2d2:	48 85 c0             	test   %rax,%rax
    a2d5:	0f 84 ac 00 00 00    	je     a387 <gimli::read::line::parse_attribute+0x5e7>
    a2db:	48 8b 0e             	mov    (%rsi),%rcx
    a2de:	48 8d 51 01          	lea    0x1(%rcx),%rdx
    a2e2:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    a2e6:	48 89 16             	mov    %rdx,(%rsi)
    a2e9:	48 89 46 08          	mov    %rax,0x8(%rsi)
    a2ed:	44 8a 19             	mov    (%rcx),%r11b
    a2f0:	45 31 c0             	xor    %r8d,%r8d
    a2f3:	41 b9 1d 00 00 00    	mov    $0x1d,%r9d
    a2f9:	31 f6                	xor    %esi,%esi
    a2fb:	31 c9                	xor    %ecx,%ecx
    a2fd:	e9 43 03 00 00       	jmpq   a645 <gimli::read::line::parse_attribute+0x8a5>
    a302:	48 8b 46 08          	mov    0x8(%rsi),%rax
    a306:	48 83 f8 02          	cmp    $0x2,%rax
    a30a:	72 7b                	jb     a387 <gimli::read::line::parse_attribute+0x5e7>
    a30c:	48 8b 0e             	mov    (%rsi),%rcx
    a30f:	48 8d 51 02          	lea    0x2(%rcx),%rdx
    a313:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    a317:	48 89 16             	mov    %rdx,(%rsi)
    a31a:	48 89 46 08          	mov    %rax,0x8(%rsi)
    a31e:	44 0f b7 19          	movzwl (%rcx),%r11d
    a322:	44 89 d9             	mov    %r11d,%ecx
    a325:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    a32b:	45 31 c0             	xor    %r8d,%r8d
    a32e:	41 b9 1d 00 00 00    	mov    $0x1d,%r9d
    a334:	31 f6                	xor    %esi,%esi
    a336:	e9 0a 03 00 00       	jmpq   a645 <gimli::read::line::parse_attribute+0x8a5>
    a33b:	48 8b 46 08          	mov    0x8(%rsi),%rax
    a33f:	48 83 f8 03          	cmp    $0x3,%rax
    a343:	72 42                	jb     a387 <gimli::read::line::parse_attribute+0x5e7>
    a345:	48 8b 0e             	mov    (%rsi),%rcx
    a348:	48 8d 51 03          	lea    0x3(%rcx),%rdx
    a34c:	48 83 c0 fd          	add    $0xfffffffffffffffd,%rax
    a350:	48 89 16             	mov    %rdx,(%rsi)
    a353:	48 89 46 08          	mov    %rax,0x8(%rsi)
    a357:	44 0f b7 19          	movzwl (%rcx),%r11d
    a35b:	0f b6 71 02          	movzbl 0x2(%rcx),%esi
    a35f:	c1 e6 10             	shl    $0x10,%esi
    a362:	44 09 de             	or     %r11d,%esi
    a365:	44 89 d9             	mov    %r11d,%ecx
    a368:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    a36e:	81 e6 00 00 ff 00    	and    $0xff0000,%esi
    a374:	e9 9c 01 00 00       	jmpq   a515 <gimli::read::line::parse_attribute+0x775>
    a379:	48 8b 46 08          	mov    0x8(%rsi),%rax
    a37d:	48 83 f8 04          	cmp    $0x4,%rax
    a381:	0f 83 67 01 00 00    	jae    a4ee <gimli::read::line::parse_attribute+0x74e>
    a387:	48 8b 06             	mov    (%rsi),%rax
    a38a:	48 89 47 10          	mov    %rax,0x10(%rdi)
    a38e:	48 c7 47 08 13 00 00 	movq   $0x13,0x8(%rdi)
    a395:	00 
    a396:	b8 01 00 00 00       	mov    $0x1,%eax
    a39b:	e9 c1 02 00 00       	jmpq   a661 <gimli::read::line::parse_attribute+0x8c1>
    a3a0:	48 8b 46 08          	mov    0x8(%rsi),%rax
    a3a4:	48 83 f8 03          	cmp    $0x3,%rax
    a3a8:	0f 86 26 01 00 00    	jbe    a4d4 <gimli::read::line::parse_attribute+0x734>
    a3ae:	48 8b 0e             	mov    (%rsi),%rcx
    a3b1:	48 8d 51 04          	lea    0x4(%rcx),%rdx
    a3b5:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    a3b9:	48 89 16             	mov    %rdx,(%rsi)
    a3bc:	48 89 46 08          	mov    %rax,0x8(%rsi)
    a3c0:	44 8b 19             	mov    (%rcx),%r11d
    a3c3:	44 89 d9             	mov    %r11d,%ecx
    a3c6:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    a3cc:	44 89 de             	mov    %r11d,%esi
    a3cf:	81 e6 00 00 ff ff    	and    $0xffff0000,%esi
    a3d5:	49 b8 00 00 00 00 ff 	movabs $0xffffffff00000000,%r8
    a3dc:	ff ff ff 
    a3df:	4d 21 d8             	and    %r11,%r8
    a3e2:	41 b9 1b 00 00 00    	mov    $0x1b,%r9d
    a3e8:	e9 58 02 00 00       	jmpq   a645 <gimli::read::line::parse_attribute+0x8a5>
    a3ed:	4b 8d 0c 33          	lea    (%r11,%r14,1),%rcx
    a3f1:	48 89 0e             	mov    %rcx,(%rsi)
    a3f4:	48 89 46 08          	mov    %rax,0x8(%rsi)
    a3f8:	44 89 d9             	mov    %r11d,%ecx
    a3fb:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    a401:	44 89 de             	mov    %r11d,%esi
    a404:	81 e6 00 00 ff ff    	and    $0xffff0000,%esi
    a40a:	49 b8 00 00 00 00 ff 	movabs $0xffffffff00000000,%r8
    a411:	ff ff ff 
    a414:	4d 21 d8             	and    %r11,%r8
    a417:	41 b9 01 00 00 00    	mov    $0x1,%r9d
    a41d:	e9 23 02 00 00       	jmpq   a645 <gimli::read::line::parse_attribute+0x8a5>
    a422:	b8 06 00 00 00       	mov    $0x6,%eax
    a427:	4c 89 47 10          	mov    %r8,0x10(%rdi)
    a42b:	e9 e5 01 00 00       	jmpq   a615 <gimli::read::line::parse_attribute+0x875>
    a430:	48 8b 46 08          	mov    0x8(%rsi),%rax
    a434:	48 83 f8 03          	cmp    $0x3,%rax
    a438:	0f 86 96 00 00 00    	jbe    a4d4 <gimli::read::line::parse_attribute+0x734>
    a43e:	48 8b 0e             	mov    (%rsi),%rcx
    a441:	48 8d 51 04          	lea    0x4(%rcx),%rdx
    a445:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    a449:	48 89 16             	mov    %rdx,(%rsi)
    a44c:	48 89 46 08          	mov    %rax,0x8(%rsi)
    a450:	44 8b 19             	mov    (%rcx),%r11d
    a453:	44 89 d9             	mov    %r11d,%ecx
    a456:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    a45c:	44 89 de             	mov    %r11d,%esi
    a45f:	81 e6 00 00 ff ff    	and    $0xffff0000,%esi
    a465:	49 b8 00 00 00 00 ff 	movabs $0xffffffff00000000,%r8
    a46c:	ff ff ff 
    a46f:	4d 21 d8             	and    %r11,%r8
    a472:	41 b9 1a 00 00 00    	mov    $0x1a,%r9d
    a478:	e9 c8 01 00 00       	jmpq   a645 <gimli::read::line::parse_attribute+0x8a5>
    a47d:	48 8b 46 08          	mov    0x8(%rsi),%rax
    a481:	48 83 f8 03          	cmp    $0x3,%rax
    a485:	76 4d                	jbe    a4d4 <gimli::read::line::parse_attribute+0x734>
    a487:	48 8b 0e             	mov    (%rsi),%rcx
    a48a:	48 8d 51 04          	lea    0x4(%rcx),%rdx
    a48e:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    a492:	48 89 16             	mov    %rdx,(%rsi)
    a495:	48 89 46 08          	mov    %rax,0x8(%rsi)
    a499:	44 8b 19             	mov    (%rcx),%r11d
    a49c:	44 89 d9             	mov    %r11d,%ecx
    a49f:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    a4a5:	44 89 de             	mov    %r11d,%esi
    a4a8:	81 e6 00 00 ff ff    	and    $0xffff0000,%esi
    a4ae:	49 b8 00 00 00 00 ff 	movabs $0xffffffff00000000,%r8
    a4b5:	ff ff ff 
    a4b8:	4d 21 d8             	and    %r11,%r8
    a4bb:	41 b9 0a 00 00 00    	mov    $0xa,%r9d
    a4c1:	e9 7f 01 00 00       	jmpq   a645 <gimli::read::line::parse_attribute+0x8a5>
    a4c6:	48 8b 46 08          	mov    0x8(%rsi),%rax
    a4ca:	48 83 f8 03          	cmp    $0x3,%rax
    a4ce:	0f 87 fc 00 00 00    	ja     a5d0 <gimli::read::line::parse_attribute+0x830>
    a4d4:	48 8b 06             	mov    (%rsi),%rax
    a4d7:	b9 13 00 00 00       	mov    $0x13,%ecx
    a4dc:	48 89 47 10          	mov    %rax,0x10(%rdi)
    a4e0:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
    a4e4:	b8 01 00 00 00       	mov    $0x1,%eax
    a4e9:	e9 73 01 00 00       	jmpq   a661 <gimli::read::line::parse_attribute+0x8c1>
    a4ee:	48 8b 0e             	mov    (%rsi),%rcx
    a4f1:	48 8d 51 04          	lea    0x4(%rcx),%rdx
    a4f5:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    a4f9:	48 89 16             	mov    %rdx,(%rsi)
    a4fc:	48 89 46 08          	mov    %rax,0x8(%rsi)
    a500:	44 8b 19             	mov    (%rcx),%r11d
    a503:	44 89 d9             	mov    %r11d,%ecx
    a506:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    a50c:	44 89 de             	mov    %r11d,%esi
    a50f:	81 e6 00 00 ff ff    	and    $0xffff0000,%esi
    a515:	41 b9 1d 00 00 00    	mov    $0x1d,%r9d
    a51b:	45 31 c0             	xor    %r8d,%r8d
    a51e:	e9 22 01 00 00       	jmpq   a645 <gimli::read::line::parse_attribute+0x8a5>
    a523:	48 8b 0e             	mov    (%rsi),%rcx
    a526:	b8 13 00 00 00       	mov    $0x13,%eax
    a52b:	48 89 4f 10          	mov    %rcx,0x10(%rdi)
    a52f:	e9 e1 00 00 00       	jmpq   a615 <gimli::read::line::parse_attribute+0x875>
    a534:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    a53b:	48 d3 e0             	shl    %cl,%rax
    a53e:	31 d2                	xor    %edx,%edx
    a540:	f6 c3 40             	test   $0x40,%bl
    a543:	48 0f 44 c2          	cmove  %rdx,%rax
    a547:	83 f9 40             	cmp    $0x40,%ecx
    a54a:	48 0f 4d c2          	cmovge %rdx,%rax
    a54e:	49 09 c3             	or     %rax,%r11
    a551:	44 89 d9             	mov    %r11d,%ecx
    a554:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    a55a:	44 89 de             	mov    %r11d,%esi
    a55d:	81 e6 00 00 ff ff    	and    $0xffff0000,%esi
    a563:	49 b8 00 00 00 00 ff 	movabs $0xffffffff00000000,%r8
    a56a:	ff ff ff 
    a56d:	4d 21 d8             	and    %r11,%r8
    a570:	41 b9 06 00 00 00    	mov    $0x6,%r9d
    a576:	e9 ca 00 00 00       	jmpq   a645 <gimli::read::line::parse_attribute+0x8a5>
    a57b:	44 89 d9             	mov    %r11d,%ecx
    a57e:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    a584:	44 89 de             	mov    %r11d,%esi
    a587:	81 e6 00 00 ff ff    	and    $0xffff0000,%esi
    a58d:	49 b8 00 00 00 00 ff 	movabs $0xffffffff00000000,%r8
    a594:	ff ff ff 
    a597:	4d 21 d8             	and    %r11,%r8
    a59a:	41 b9 1d 00 00 00    	mov    $0x1d,%r9d
    a5a0:	e9 a0 00 00 00       	jmpq   a645 <gimli::read::line::parse_attribute+0x8a5>
    a5a5:	4c 8b 0e             	mov    (%rsi),%r9
    a5a8:	b8 13 00 00 00       	mov    $0x13,%eax
    a5ad:	eb 62                	jmp    a611 <gimli::read::line::parse_attribute+0x871>
    a5af:	4b 8d 0c 33          	lea    (%r11,%r14,1),%rcx
    a5b3:	48 89 0e             	mov    %rcx,(%rsi)
    a5b6:	48 89 c2             	mov    %rax,%rdx
    a5b9:	4c 29 f2             	sub    %r14,%rdx
    a5bc:	48 89 56 08          	mov    %rdx,0x8(%rsi)
    a5c0:	0f 85 ca 00 00 00    	jne    a690 <gimli::read::line::parse_attribute+0x8f0>
    a5c6:	31 c0                	xor    %eax,%eax
    a5c8:	49 89 cb             	mov    %rcx,%r11
    a5cb:	e9 06 fa ff ff       	jmpq   9fd6 <gimli::read::line::parse_attribute+0x236>
    a5d0:	48 8b 0e             	mov    (%rsi),%rcx
    a5d3:	48 8d 51 04          	lea    0x4(%rcx),%rdx
    a5d7:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    a5db:	48 89 16             	mov    %rdx,(%rsi)
    a5de:	48 89 46 08          	mov    %rax,0x8(%rsi)
    a5e2:	44 8b 19             	mov    (%rcx),%r11d
    a5e5:	44 89 d9             	mov    %r11d,%ecx
    a5e8:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    a5ee:	44 89 de             	mov    %r11d,%esi
    a5f1:	81 e6 00 00 ff ff    	and    $0xffff0000,%esi
    a5f7:	49 b8 00 00 00 00 ff 	movabs $0xffffffff00000000,%r8
    a5fe:	ff ff ff 
    a601:	4d 21 d8             	and    %r11,%r8
    a604:	41 b9 1e 00 00 00    	mov    $0x1e,%r9d
    a60a:	eb 39                	jmp    a645 <gimli::read::line::parse_attribute+0x8a5>
    a60c:	b8 06 00 00 00       	mov    $0x6,%eax
    a611:	4c 89 4f 10          	mov    %r9,0x10(%rdi)
    a615:	48 89 47 08          	mov    %rax,0x8(%rdi)
    a619:	b8 01 00 00 00       	mov    $0x1,%eax
    a61e:	eb 41                	jmp    a661 <gimli::read::line::parse_attribute+0x8c1>
    a620:	44 89 d9             	mov    %r11d,%ecx
    a623:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    a629:	44 89 de             	mov    %r11d,%esi
    a62c:	81 e6 00 00 ff ff    	and    $0xffff0000,%esi
    a632:	49 b8 00 00 00 00 ff 	movabs $0xffffffff00000000,%r8
    a639:	ff ff ff 
    a63c:	4d 21 d8             	and    %r11,%r8
    a63f:	41 b9 07 00 00 00    	mov    $0x7,%r9d
    a645:	4c 89 4f 08          	mov    %r9,0x8(%rdi)
    a649:	41 0f b6 c3          	movzbl %r11b,%eax
    a64d:	09 c1                	or     %eax,%ecx
    a64f:	0f b7 c1             	movzwl %cx,%eax
    a652:	09 f0                	or     %esi,%eax
    a654:	4c 09 c0             	or     %r8,%rax
    a657:	48 89 47 10          	mov    %rax,0x10(%rdi)
    a65b:	4c 89 77 18          	mov    %r14,0x18(%rdi)
    a65f:	31 c0                	xor    %eax,%eax
    a661:	48 89 07             	mov    %rax,(%rdi)
    a664:	48 83 c4 18          	add    $0x18,%rsp
    a668:	5b                   	pop    %rbx
    a669:	41 5e                	pop    %r14
    a66b:	41 5f                	pop    %r15
    a66d:	c3                   	retq   
    a66e:	4c 39 f3             	cmp    %r14,%rbx
    a671:	0f 82 20 fa ff ff    	jb     a097 <gimli::read::line::parse_attribute+0x2f7>
    a677:	4a 8d 0c 30          	lea    (%rax,%r14,1),%rcx
    a67b:	4c 01 d1             	add    %r10,%rcx
    a67e:	48 83 c1 01          	add    $0x1,%rcx
    a682:	4d 29 f0             	sub    %r14,%r8
    a685:	48 f7 d0             	not    %rax
    a688:	4c 01 c0             	add    %r8,%rax
    a68b:	e9 61 fd ff ff       	jmpq   a3f1 <gimli::read::line::parse_attribute+0x651>
    a690:	4b 8d 0c 33          	lea    (%r11,%r14,1),%rcx
    a694:	48 83 c1 01          	add    $0x1,%rcx
    a698:	4c 89 f2             	mov    %r14,%rdx
    a69b:	48 f7 d2             	not    %rdx
    a69e:	48 01 c2             	add    %rax,%rdx
    a6a1:	48 89 0e             	mov    %rcx,(%rsi)
    a6a4:	48 89 56 08          	mov    %rdx,0x8(%rsi)
    a6a8:	44 89 d9             	mov    %r11d,%ecx
    a6ab:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    a6b1:	44 89 de             	mov    %r11d,%esi
    a6b4:	81 e6 00 00 ff ff    	and    $0xffff0000,%esi
    a6ba:	49 b8 00 00 00 00 ff 	movabs $0xffffffff00000000,%r8
    a6c1:	ff ff ff 
    a6c4:	4d 21 d8             	and    %r11,%r8
    a6c7:	41 b9 1f 00 00 00    	mov    $0x1f,%r9d
    a6cd:	e9 73 ff ff ff       	jmpq   a645 <gimli::read::line::parse_attribute+0x8a5>
    a6d2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a6d9:	00 00 00 
    a6dc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000a6e0 <gimli::read::line::FileEntry<R,Offset>::parse>:
    a6e0:	55                   	push   %rbp
    a6e1:	41 57                	push   %r15
    a6e3:	41 56                	push   %r14
    a6e5:	41 55                	push   %r13
    a6e7:	41 54                	push   %r12
    a6e9:	53                   	push   %rbx
    a6ea:	50                   	push   %rax
    a6eb:	4c 8b 4e 08          	mov    0x8(%rsi),%r9
    a6ef:	4d 85 c9             	test   %r9,%r9
    a6f2:	74 6c                	je     a760 <gimli::read::line::FileEntry<R,Offset>::parse+0x80>
    a6f4:	49 89 cd             	mov    %rcx,%r13
    a6f7:	4c 8b 16             	mov    (%rsi),%r10
    a6fa:	4d 89 cf             	mov    %r9,%r15
    a6fd:	49 f7 df             	neg    %r15
    a700:	49 8d 59 ff          	lea    -0x1(%r9),%rbx
    a704:	45 31 f6             	xor    %r14d,%r14d
    a707:	45 31 e4             	xor    %r12d,%r12d
    a70a:	45 31 db             	xor    %r11d,%r11d
    a70d:	31 c9                	xor    %ecx,%ecx
    a70f:	90                   	nop
    a710:	4f 8d 04 22          	lea    (%r10,%r12,1),%r8
    a714:	49 83 c0 01          	add    $0x1,%r8
    a718:	4c 89 06             	mov    %r8,(%rsi)
    a71b:	48 89 5e 08          	mov    %rbx,0x8(%rsi)
    a71f:	43 0f b6 04 22       	movzbl (%r10,%r12,1),%eax
    a724:	83 f9 3f             	cmp    $0x3f,%ecx
    a727:	75 04                	jne    a72d <gimli::read::line::FileEntry<R,Offset>::parse+0x4d>
    a729:	3c 01                	cmp    $0x1,%al
    a72b:	77 3d                	ja     a76a <gimli::read::line::FileEntry<R,Offset>::parse+0x8a>
    a72d:	0f b6 e8             	movzbl %al,%ebp
    a730:	89 e8                	mov    %ebp,%eax
    a732:	83 e0 7f             	and    $0x7f,%eax
    a735:	48 d3 e0             	shl    %cl,%rax
    a738:	49 09 c3             	or     %rax,%r11
    a73b:	40 84 ed             	test   %bpl,%bpl
    a73e:	79 4e                	jns    a78e <gimli::read::line::FileEntry<R,Offset>::parse+0xae>
    a740:	83 c1 07             	add    $0x7,%ecx
    a743:	49 83 c4 01          	add    $0x1,%r12
    a747:	48 83 c3 ff          	add    $0xffffffffffffffff,%rbx
    a74b:	4c 89 f8             	mov    %r15,%rax
    a74e:	4c 01 e0             	add    %r12,%rax
    a751:	75 bd                	jne    a710 <gimli::read::line::FileEntry<R,Offset>::parse+0x30>
    a753:	4d 01 e2             	add    %r12,%r10
    a756:	b8 13 00 00 00       	mov    $0x13,%eax
    a75b:	4d 89 d6             	mov    %r10,%r14
    a75e:	eb 0f                	jmp    a76f <gimli::read::line::FileEntry<R,Offset>::parse+0x8f>
    a760:	4c 8b 36             	mov    (%rsi),%r14
    a763:	b8 13 00 00 00       	mov    $0x13,%eax
    a768:	eb 05                	jmp    a76f <gimli::read::line::FileEntry<R,Offset>::parse+0x8f>
    a76a:	b8 06 00 00 00       	mov    $0x6,%eax
    a76f:	4c 89 77 10          	mov    %r14,0x10(%rdi)
    a773:	48 89 47 08          	mov    %rax,0x8(%rdi)
    a777:	b8 01 00 00 00       	mov    $0x1,%eax
    a77c:	48 89 07             	mov    %rax,(%rdi)
    a77f:	48 83 c4 08          	add    $0x8,%rsp
    a783:	5b                   	pop    %rbx
    a784:	41 5c                	pop    %r12
    a786:	41 5d                	pop    %r13
    a788:	41 5e                	pop    %r14
    a78a:	41 5f                	pop    %r15
    a78c:	5d                   	pop    %rbp
    a78d:	c3                   	retq   
    a78e:	4c 89 e0             	mov    %r12,%rax
    a791:	4c 29 c8             	sub    %r9,%rax
    a794:	b9 13 00 00 00       	mov    $0x13,%ecx
    a799:	48 ff c0             	inc    %rax
    a79c:	74 7a                	je     a818 <gimli::read::line::FileEntry<R,Offset>::parse+0x138>
    a79e:	4c 89 2c 24          	mov    %r13,(%rsp)
    a7a2:	49 c7 c5 fe ff ff ff 	mov    $0xfffffffffffffffe,%r13
    a7a9:	4d 29 e5             	sub    %r12,%r13
    a7ac:	49 8d 59 ff          	lea    -0x1(%r9),%rbx
    a7b0:	45 31 c0             	xor    %r8d,%r8d
    a7b3:	45 31 f6             	xor    %r14d,%r14d
    a7b6:	31 c9                	xor    %ecx,%ecx
    a7b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a7bf:	00 
    a7c0:	4f 8d 3c 22          	lea    (%r10,%r12,1),%r15
    a7c4:	49 83 c7 02          	add    $0x2,%r15
    a7c8:	4b 8d 04 29          	lea    (%r9,%r13,1),%rax
    a7cc:	4c 89 3e             	mov    %r15,(%rsi)
    a7cf:	48 89 46 08          	mov    %rax,0x8(%rsi)
    a7d3:	43 0f b6 44 22 01    	movzbl 0x1(%r10,%r12,1),%eax
    a7d9:	83 f9 3f             	cmp    $0x3f,%ecx
    a7dc:	75 04                	jne    a7e2 <gimli::read::line::FileEntry<R,Offset>::parse+0x102>
    a7de:	3c 01                	cmp    $0x1,%al
    a7e0:	77 31                	ja     a813 <gimli::read::line::FileEntry<R,Offset>::parse+0x133>
    a7e2:	0f b6 c0             	movzbl %al,%eax
    a7e5:	89 c5                	mov    %eax,%ebp
    a7e7:	83 e5 7f             	and    $0x7f,%ebp
    a7ea:	48 d3 e5             	shl    %cl,%rbp
    a7ed:	49 09 ee             	or     %rbp,%r14
    a7f0:	84 c0                	test   %al,%al
    a7f2:	79 31                	jns    a825 <gimli::read::line::FileEntry<R,Offset>::parse+0x145>
    a7f4:	83 c1 07             	add    $0x7,%ecx
    a7f7:	49 83 c4 01          	add    $0x1,%r12
    a7fb:	49 83 c5 ff          	add    $0xffffffffffffffff,%r13
    a7ff:	4c 39 e3             	cmp    %r12,%rbx
    a802:	75 bc                	jne    a7c0 <gimli::read::line::FileEntry<R,Offset>::parse+0xe0>
    a804:	4f 8d 04 22          	lea    (%r10,%r12,1),%r8
    a808:	49 83 c0 01          	add    $0x1,%r8
    a80c:	b9 13 00 00 00       	mov    $0x13,%ecx
    a811:	eb 05                	jmp    a818 <gimli::read::line::FileEntry<R,Offset>::parse+0x138>
    a813:	b9 06 00 00 00       	mov    $0x6,%ecx
    a818:	4c 89 47 10          	mov    %r8,0x10(%rdi)
    a81c:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
    a820:	e9 52 ff ff ff       	jmpq   a777 <gimli::read::line::FileEntry<R,Offset>::parse+0x97>
    a825:	49 8d 41 fe          	lea    -0x2(%r9),%rax
    a829:	41 b8 13 00 00 00    	mov    $0x13,%r8d
    a82f:	4c 39 e0             	cmp    %r12,%rax
    a832:	74 51                	je     a885 <gimli::read::line::FileEntry<R,Offset>::parse+0x1a5>
    a834:	4d 29 e1             	sub    %r12,%r9
    a837:	49 83 c1 fd          	add    $0xfffffffffffffffd,%r9
    a83b:	31 c0                	xor    %eax,%eax
    a83d:	31 c9                	xor    %ecx,%ecx
    a83f:	4c 8b 14 24          	mov    (%rsp),%r10
    a843:	4c 89 fb             	mov    %r15,%rbx
    a846:	49 83 c7 01          	add    $0x1,%r15
    a84a:	4c 89 3e             	mov    %r15,(%rsi)
    a84d:	4c 89 4e 08          	mov    %r9,0x8(%rsi)
    a851:	0f b6 1b             	movzbl (%rbx),%ebx
    a854:	83 f9 3f             	cmp    $0x3f,%ecx
    a857:	75 05                	jne    a85e <gimli::read::line::FileEntry<R,Offset>::parse+0x17e>
    a859:	80 fb 01             	cmp    $0x1,%bl
    a85c:	77 1e                	ja     a87c <gimli::read::line::FileEntry<R,Offset>::parse+0x19c>
    a85e:	0f b6 eb             	movzbl %bl,%ebp
    a861:	89 eb                	mov    %ebp,%ebx
    a863:	83 e3 7f             	and    $0x7f,%ebx
    a866:	48 d3 e3             	shl    %cl,%rbx
    a869:	48 09 d8             	or     %rbx,%rax
    a86c:	40 84 ed             	test   %bpl,%bpl
    a86f:	79 21                	jns    a892 <gimli::read::line::FileEntry<R,Offset>::parse+0x1b2>
    a871:	83 c1 07             	add    $0x7,%ecx
    a874:	49 83 c1 ff          	add    $0xffffffffffffffff,%r9
    a878:	72 c9                	jb     a843 <gimli::read::line::FileEntry<R,Offset>::parse+0x163>
    a87a:	eb 09                	jmp    a885 <gimli::read::line::FileEntry<R,Offset>::parse+0x1a5>
    a87c:	41 b8 06 00 00 00    	mov    $0x6,%r8d
    a882:	45 31 ff             	xor    %r15d,%r15d
    a885:	4c 89 7f 10          	mov    %r15,0x10(%rdi)
    a889:	4c 89 47 08          	mov    %r8,0x8(%rdi)
    a88d:	e9 e5 fe ff ff       	jmpq   a777 <gimli::read::line::FileEntry<R,Offset>::parse+0x97>
    a892:	48 c7 47 08 1f 00 00 	movq   $0x1f,0x8(%rdi)
    a899:	00 
    a89a:	48 89 57 10          	mov    %rdx,0x10(%rdi)
    a89e:	4c 89 57 18          	mov    %r10,0x18(%rdi)
    a8a2:	4c 89 5f 20          	mov    %r11,0x20(%rdi)
    a8a6:	4c 89 77 28          	mov    %r14,0x28(%rdi)
    a8aa:	48 89 47 30          	mov    %rax,0x30(%rdi)
    a8ae:	0f 57 c0             	xorps  %xmm0,%xmm0
    a8b1:	0f 11 47 38          	movups %xmm0,0x38(%rdi)
    a8b5:	31 c0                	xor    %eax,%eax
    a8b7:	e9 c0 fe ff ff       	jmpq   a77c <gimli::read::line::FileEntry<R,Offset>::parse+0x9c>
    a8bc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000a8c0 <gimli::read::unit::parse_attribute>:
    a8c0:	55                   	push   %rbp
    a8c1:	41 57                	push   %r15
    a8c3:	41 56                	push   %r14
    a8c5:	41 55                	push   %r13
    a8c7:	41 54                	push   %r12
    a8c9:	53                   	push   %rbx
    a8ca:	48 83 ec 28          	sub    $0x28,%rsp
    a8ce:	44 89 44 24 0c       	mov    %r8d,0xc(%rsp)
    a8d3:	49 89 ca             	mov    %rcx,%r10
    a8d6:	49 89 f4             	mov    %rsi,%r12
    a8d9:	49 89 ff             	mov    %rdi,%r15
    a8dc:	41 89 d0             	mov    %edx,%r8d
    a8df:	41 c1 e8 08          	shr    $0x8,%r8d
    a8e3:	89 d6                	mov    %edx,%esi
    a8e5:	c1 ee 10             	shr    $0x10,%esi
    a8e8:	4d 8d 6c 24 08       	lea    0x8(%r12),%r13
    a8ed:	44 89 cf             	mov    %r9d,%edi
    a8f0:	66 83 ff 16          	cmp    $0x16,%di
    a8f4:	0f 85 95 00 00 00    	jne    a98f <gimli::read::unit::parse_attribute+0xcf>
    a8fa:	49 8b 4d 00          	mov    0x0(%r13),%rcx
    a8fe:	48 85 c9             	test   %rcx,%rcx
    a901:	0f 84 d4 00 00 00    	je     a9db <gimli::read::unit::parse_attribute+0x11b>
    a907:	49 8b 2c 24          	mov    (%r12),%rbp
    a90b:	4c 8d 5d 01          	lea    0x1(%rbp),%r11
    a90f:	48 8d 59 ff          	lea    -0x1(%rcx),%rbx
    a913:	4d 89 1c 24          	mov    %r11,(%r12)
    a917:	49 89 5c 24 08       	mov    %rbx,0x8(%r12)
    a91c:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
    a920:	89 c7                	mov    %eax,%edi
    a922:	83 e7 7f             	and    $0x7f,%edi
    a925:	84 c0                	test   %al,%al
    a927:	79 c7                	jns    a8f0 <gimli::read::unit::parse_attribute+0x30>
    a929:	48 85 db             	test   %rbx,%rbx
    a92c:	0f 84 ad 00 00 00    	je     a9df <gimli::read::unit::parse_attribute+0x11f>
    a932:	4c 8d 5d 02          	lea    0x2(%rbp),%r11
    a936:	48 8d 59 fe          	lea    -0x2(%rcx),%rbx
    a93a:	4d 89 1c 24          	mov    %r11,(%r12)
    a93e:	49 89 5c 24 08       	mov    %rbx,0x8(%r12)
    a943:	44 0f b6 75 01       	movzbl 0x1(%rbp),%r14d
    a948:	44 89 f0             	mov    %r14d,%eax
    a94b:	83 e0 7f             	and    $0x7f,%eax
    a94e:	c1 e0 07             	shl    $0x7,%eax
    a951:	0f b7 ff             	movzwl %di,%edi
    a954:	09 c7                	or     %eax,%edi
    a956:	45 84 f6             	test   %r14b,%r14b
    a959:	79 95                	jns    a8f0 <gimli::read::unit::parse_attribute+0x30>
    a95b:	48 85 db             	test   %rbx,%rbx
    a95e:	74 7f                	je     a9df <gimli::read::unit::parse_attribute+0x11f>
    a960:	48 8d 45 03          	lea    0x3(%rbp),%rax
    a964:	48 83 c1 fd          	add    $0xfffffffffffffffd,%rcx
    a968:	49 89 04 24          	mov    %rax,(%r12)
    a96c:	49 89 4c 24 08       	mov    %rcx,0x8(%r12)
    a971:	0f b6 45 02          	movzbl 0x2(%rbp),%eax
    a975:	66 83 f8 03          	cmp    $0x3,%ax
    a979:	0f 87 84 00 00 00    	ja     aa03 <gimli::read::unit::parse_attribute+0x143>
    a97f:	0f b7 c0             	movzwl %ax,%eax
    a982:	c1 e0 0e             	shl    $0xe,%eax
    a985:	0f b7 ff             	movzwl %di,%edi
    a988:	09 c7                	or     %eax,%edi
    a98a:	e9 61 ff ff ff       	jmpq   a8f0 <gimli::read::unit::parse_attribute+0x30>
    a98f:	8d 47 ff             	lea    -0x1(%rdi),%eax
    a992:	66 83 f8 2b          	cmp    $0x2b,%ax
    a996:	77 75                	ja     aa0d <gimli::read::unit::parse_attribute+0x14d>
    a998:	0f b7 c0             	movzwl %ax,%eax
    a99b:	48 8d 0d 86 ba 02 00 	lea    0x2ba86(%rip),%rcx        # 36428 <_fini+0xb04>
    a9a2:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    a9a6:	48 01 c8             	add    %rcx,%rax
    a9a9:	ff e0                	jmpq   *%rax
    a9ab:	0f b6 d2             	movzbl %dl,%edx
    a9ae:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    a9b3:	4c 89 e6             	mov    %r12,%rsi
    a9b6:	e8 95 1a 00 00       	callq  c450 <gimli::read::reader::Reader::read_address>
    a9bb:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
    a9c0:	48 83 7c 24 10 01    	cmpq   $0x1,0x10(%rsp)
    a9c6:	0f 85 dd 0c 00 00    	jne    b6a9 <gimli::read::unit::parse_attribute+0xde9>
    a9cc:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    a9d1:	49 89 47 10          	mov    %rax,0x10(%r15)
    a9d5:	4d 89 57 08          	mov    %r10,0x8(%r15)
    a9d9:	eb 11                	jmp    a9ec <gimli::read::unit::parse_attribute+0x12c>
    a9db:	4d 8b 1c 24          	mov    (%r12),%r11
    a9df:	b9 13 00 00 00       	mov    $0x13,%ecx
    a9e4:	49 89 4f 08          	mov    %rcx,0x8(%r15)
    a9e8:	4d 89 5f 10          	mov    %r11,0x10(%r15)
    a9ec:	b8 01 00 00 00       	mov    $0x1,%eax
    a9f1:	49 89 07             	mov    %rax,(%r15)
    a9f4:	48 83 c4 28          	add    $0x28,%rsp
    a9f8:	5b                   	pop    %rbx
    a9f9:	41 5c                	pop    %r12
    a9fb:	41 5d                	pop    %r13
    a9fd:	41 5e                	pop    %r14
    a9ff:	41 5f                	pop    %r15
    aa01:	5d                   	pop    %rbp
    aa02:	c3                   	retq   
    aa03:	b9 06 00 00 00       	mov    $0x6,%ecx
    aa08:	45 31 db             	xor    %r11d,%r11d
    aa0b:	eb d7                	jmp    a9e4 <gimli::read::unit::parse_attribute+0x124>
    aa0d:	81 c7 ff e0 ff ff    	add    $0xffffe0ff,%edi
    aa13:	66 83 ff 20          	cmp    $0x20,%di
    aa17:	0f 87 c4 0b 00 00    	ja     b5e1 <gimli::read::unit::parse_attribute+0xd21>
    aa1d:	0f b7 c7             	movzwl %di,%eax
    aa20:	48 8d 0d b1 ba 02 00 	lea    0x2bab1(%rip),%rcx        # 364d8 <_fini+0xbb4>
    aa27:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    aa2b:	48 01 c8             	add    %rcx,%rax
    aa2e:	ff e0                	jmpq   *%rax
    aa30:	49 8b 45 00          	mov    0x0(%r13),%rax
    aa34:	48 85 c0             	test   %rax,%rax
    aa37:	0f 84 d7 09 00 00    	je     b414 <gimli::read::unit::parse_attribute+0xb54>
    aa3d:	49 8b 3c 24          	mov    (%r12),%rdi
    aa41:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    aa45:	31 d2                	xor    %edx,%edx
    aa47:	45 31 d2             	xor    %r10d,%r10d
    aa4a:	31 c9                	xor    %ecx,%ecx
    aa4c:	48 8d 77 01          	lea    0x1(%rdi),%rsi
    aa50:	49 89 34 24          	mov    %rsi,(%r12)
    aa54:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    aa59:	0f b6 1f             	movzbl (%rdi),%ebx
    aa5c:	83 f9 3f             	cmp    $0x3f,%ecx
    aa5f:	75 09                	jne    aa6a <gimli::read::unit::parse_attribute+0x1aa>
    aa61:	80 fb 01             	cmp    $0x1,%bl
    aa64:	0f 87 bc 09 00 00    	ja     b426 <gimli::read::unit::parse_attribute+0xb66>
    aa6a:	0f b6 eb             	movzbl %bl,%ebp
    aa6d:	89 ef                	mov    %ebp,%edi
    aa6f:	83 e7 7f             	and    $0x7f,%edi
    aa72:	48 d3 e7             	shl    %cl,%rdi
    aa75:	49 09 fa             	or     %rdi,%r10
    aa78:	40 84 ed             	test   %bpl,%bpl
    aa7b:	0f 89 62 0d 00 00    	jns    b7e3 <gimli::read::unit::parse_attribute+0xf23>
    aa81:	83 c1 07             	add    $0x7,%ecx
    aa84:	48 89 f7             	mov    %rsi,%rdi
    aa87:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    aa8b:	72 bf                	jb     aa4c <gimli::read::unit::parse_attribute+0x18c>
    aa8d:	e9 71 09 00 00       	jmpq   b403 <gimli::read::unit::parse_attribute+0xb43>
    aa92:	49 8b 45 00          	mov    0x0(%r13),%rax
    aa96:	48 85 c0             	test   %rax,%rax
    aa99:	0f 84 75 09 00 00    	je     b414 <gimli::read::unit::parse_attribute+0xb54>
    aa9f:	49 8b 3c 24          	mov    (%r12),%rdi
    aaa3:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    aaa7:	31 d2                	xor    %edx,%edx
    aaa9:	45 31 d2             	xor    %r10d,%r10d
    aaac:	31 c9                	xor    %ecx,%ecx
    aaae:	48 8d 77 01          	lea    0x1(%rdi),%rsi
    aab2:	49 89 34 24          	mov    %rsi,(%r12)
    aab6:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    aabb:	0f b6 1f             	movzbl (%rdi),%ebx
    aabe:	83 f9 3f             	cmp    $0x3f,%ecx
    aac1:	75 09                	jne    aacc <gimli::read::unit::parse_attribute+0x20c>
    aac3:	80 fb 01             	cmp    $0x1,%bl
    aac6:	0f 87 5a 09 00 00    	ja     b426 <gimli::read::unit::parse_attribute+0xb66>
    aacc:	0f b6 eb             	movzbl %bl,%ebp
    aacf:	89 ef                	mov    %ebp,%edi
    aad1:	83 e7 7f             	and    $0x7f,%edi
    aad4:	48 d3 e7             	shl    %cl,%rdi
    aad7:	49 09 fa             	or     %rdi,%r10
    aada:	40 84 ed             	test   %bpl,%bpl
    aadd:	0f 89 29 0d 00 00    	jns    b80c <gimli::read::unit::parse_attribute+0xf4c>
    aae3:	83 c1 07             	add    $0x7,%ecx
    aae6:	48 89 f7             	mov    %rsi,%rdi
    aae9:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    aaed:	72 bf                	jb     aaae <gimli::read::unit::parse_attribute+0x1ee>
    aaef:	e9 0f 09 00 00       	jmpq   b403 <gimli::read::unit::parse_attribute+0xb43>
    aaf4:	41 80 f8 08          	cmp    $0x8,%r8b
    aaf8:	0f 85 ab 01 00 00    	jne    aca9 <gimli::read::unit::parse_attribute+0x3e9>
    aafe:	49 8b 45 00          	mov    0x0(%r13),%rax
    ab02:	48 83 f8 07          	cmp    $0x7,%rax
    ab06:	0f 86 95 0f 00 00    	jbe    baa1 <gimli::read::unit::parse_attribute+0x11e1>
    ab0c:	49 8b 0c 24          	mov    (%r12),%rcx
    ab10:	48 8d 51 08          	lea    0x8(%rcx),%rdx
    ab14:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
    ab18:	49 89 14 24          	mov    %rdx,(%r12)
    ab1c:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    ab21:	4c 8b 11             	mov    (%rcx),%r10
    ab24:	e9 a6 01 00 00       	jmpq   accf <gimli::read::unit::parse_attribute+0x40f>
    ab29:	49 8b 45 00          	mov    0x0(%r13),%rax
    ab2d:	48 85 c0             	test   %rax,%rax
    ab30:	0f 84 de 08 00 00    	je     b414 <gimli::read::unit::parse_attribute+0xb54>
    ab36:	49 8b 3c 24          	mov    (%r12),%rdi
    ab3a:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    ab3e:	31 d2                	xor    %edx,%edx
    ab40:	45 31 d2             	xor    %r10d,%r10d
    ab43:	31 c9                	xor    %ecx,%ecx
    ab45:	48 8d 77 01          	lea    0x1(%rdi),%rsi
    ab49:	49 89 34 24          	mov    %rsi,(%r12)
    ab4d:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    ab52:	0f b6 1f             	movzbl (%rdi),%ebx
    ab55:	83 f9 3f             	cmp    $0x3f,%ecx
    ab58:	75 09                	jne    ab63 <gimli::read::unit::parse_attribute+0x2a3>
    ab5a:	80 fb 01             	cmp    $0x1,%bl
    ab5d:	0f 87 c3 08 00 00    	ja     b426 <gimli::read::unit::parse_attribute+0xb66>
    ab63:	0f b6 eb             	movzbl %bl,%ebp
    ab66:	89 ef                	mov    %ebp,%edi
    ab68:	83 e7 7f             	and    $0x7f,%edi
    ab6b:	48 d3 e7             	shl    %cl,%rdi
    ab6e:	49 09 fa             	or     %rdi,%r10
    ab71:	40 84 ed             	test   %bpl,%bpl
    ab74:	0f 89 31 06 00 00    	jns    b1ab <gimli::read::unit::parse_attribute+0x8eb>
    ab7a:	83 c1 07             	add    $0x7,%ecx
    ab7d:	48 89 f7             	mov    %rsi,%rdi
    ab80:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    ab84:	72 bf                	jb     ab45 <gimli::read::unit::parse_attribute+0x285>
    ab86:	e9 78 08 00 00       	jmpq   b403 <gimli::read::unit::parse_attribute+0xb43>
    ab8b:	4d 8b 4d 00          	mov    0x0(%r13),%r9
    ab8f:	4d 85 c9             	test   %r9,%r9
    ab92:	0f 84 b4 0a 00 00    	je     b64c <gimli::read::unit::parse_attribute+0xd8c>
    ab98:	4d 8b 1c 24          	mov    (%r12),%r11
    ab9c:	45 31 c0             	xor    %r8d,%r8d
    ab9f:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    aba6:	31 db                	xor    %ebx,%ebx
    aba8:	31 ff                	xor    %edi,%edi
    abaa:	31 c9                	xor    %ecx,%ecx
    abac:	4d 8d 14 1b          	lea    (%r11,%rbx,1),%r10
    abb0:	49 83 c2 01          	add    $0x1,%r10
    abb4:	49 8d 2c 01          	lea    (%r9,%rax,1),%rbp
    abb8:	4d 89 14 24          	mov    %r10,(%r12)
    abbc:	49 89 6c 24 08       	mov    %rbp,0x8(%r12)
    abc1:	41 0f b6 14 1b       	movzbl (%r11,%rbx,1),%edx
    abc6:	83 f9 3f             	cmp    $0x3f,%ecx
    abc9:	75 09                	jne    abd4 <gimli::read::unit::parse_attribute+0x314>
    abcb:	80 fa 01             	cmp    $0x1,%dl
    abce:	0f 87 05 0c 00 00    	ja     b7d9 <gimli::read::unit::parse_attribute+0xf19>
    abd4:	0f b6 f2             	movzbl %dl,%esi
    abd7:	89 f2                	mov    %esi,%edx
    abd9:	83 e2 7f             	and    $0x7f,%edx
    abdc:	48 d3 e2             	shl    %cl,%rdx
    abdf:	48 09 d7             	or     %rdx,%rdi
    abe2:	40 84 f6             	test   %sil,%sil
    abe5:	0f 89 31 0d 00 00    	jns    b91c <gimli::read::unit::parse_attribute+0x105c>
    abeb:	83 c1 07             	add    $0x7,%ecx
    abee:	48 83 c3 01          	add    $0x1,%rbx
    abf2:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    abf6:	49 39 d9             	cmp    %rbx,%r9
    abf9:	75 b1                	jne    abac <gimli::read::unit::parse_attribute+0x2ec>
    abfb:	e9 aa 02 00 00       	jmpq   aeaa <gimli::read::unit::parse_attribute+0x5ea>
    ac00:	49 8b 45 00          	mov    0x0(%r13),%rax
    ac04:	48 83 f8 03          	cmp    $0x3,%rax
    ac08:	0f 82 29 0a 00 00    	jb     b637 <gimli::read::unit::parse_attribute+0xd77>
    ac0e:	49 8b 0c 24          	mov    (%r12),%rcx
    ac12:	48 8d 51 03          	lea    0x3(%rcx),%rdx
    ac16:	48 83 c0 fd          	add    $0xfffffffffffffffd,%rax
    ac1a:	49 89 14 24          	mov    %rdx,(%r12)
    ac1e:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    ac23:	44 0f b7 11          	movzwl (%rcx),%r10d
    ac27:	0f b6 51 02          	movzbl 0x2(%rcx),%edx
    ac2b:	c1 e2 10             	shl    $0x10,%edx
    ac2e:	44 09 d2             	or     %r10d,%edx
    ac31:	44 89 d1             	mov    %r10d,%ecx
    ac34:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    ac3a:	81 e2 00 00 ff 00    	and    $0xff0000,%edx
    ac40:	be 1d 00 00 00       	mov    $0x1d,%esi
    ac45:	e9 e2 08 00 00       	jmpq   b52c <gimli::read::unit::parse_attribute+0xc6c>
    ac4a:	49 8b 45 00          	mov    0x0(%r13),%rax
    ac4e:	48 83 f8 04          	cmp    $0x4,%rax
    ac52:	0f 82 df 09 00 00    	jb     b637 <gimli::read::unit::parse_attribute+0xd77>
    ac58:	49 8b 0c 24          	mov    (%r12),%rcx
    ac5c:	48 8d 51 04          	lea    0x4(%rcx),%rdx
    ac60:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    ac64:	49 89 14 24          	mov    %rdx,(%r12)
    ac68:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    ac6d:	44 8b 11             	mov    (%rcx),%r10d
    ac70:	44 89 d1             	mov    %r10d,%ecx
    ac73:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    ac79:	44 89 d2             	mov    %r10d,%edx
    ac7c:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    ac82:	be 1d 00 00 00       	mov    $0x1d,%esi
    ac87:	e9 a0 08 00 00       	jmpq   b52c <gimli::read::unit::parse_attribute+0xc6c>
    ac8c:	41 80 f8 08          	cmp    $0x8,%r8b
    ac90:	0f 85 c4 09 00 00    	jne    b65a <gimli::read::unit::parse_attribute+0xd9a>
    ac96:	49 8b 45 00          	mov    0x0(%r13),%rax
    ac9a:	48 83 f8 07          	cmp    $0x7,%rax
    ac9e:	0f 87 9e 07 00 00    	ja     b442 <gimli::read::unit::parse_attribute+0xb82>
    aca4:	e9 f8 0d 00 00       	jmpq   baa1 <gimli::read::unit::parse_attribute+0x11e1>
    aca9:	49 8b 45 00          	mov    0x0(%r13),%rax
    acad:	48 83 f8 03          	cmp    $0x3,%rax
    acb1:	0f 86 ea 0d 00 00    	jbe    baa1 <gimli::read::unit::parse_attribute+0x11e1>
    acb7:	49 8b 0c 24          	mov    (%r12),%rcx
    acbb:	48 8d 51 04          	lea    0x4(%rcx),%rdx
    acbf:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    acc3:	49 89 14 24          	mov    %rdx,(%r12)
    acc7:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    accc:	44 8b 11             	mov    (%rcx),%r10d
    accf:	44 89 d1             	mov    %r10d,%ecx
    acd2:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    acd8:	44 89 d2             	mov    %r10d,%edx
    acdb:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    ace1:	48 bd 00 00 00 00 ff 	movabs $0xffffffff00000000,%rbp
    ace8:	ff ff ff 
    aceb:	4c 21 d5             	and    %r10,%rbp
    acee:	be 1b 00 00 00       	mov    $0x1b,%esi
    acf3:	e9 36 08 00 00       	jmpq   b52e <gimli::read::unit::parse_attribute+0xc6e>
    acf8:	49 8b 45 00          	mov    0x0(%r13),%rax
    acfc:	48 83 f8 02          	cmp    $0x2,%rax
    ad00:	0f 82 10 02 00 00    	jb     af16 <gimli::read::unit::parse_attribute+0x656>
    ad06:	49 8b 0c 24          	mov    (%r12),%rcx
    ad0a:	4c 8d 51 02          	lea    0x2(%rcx),%r10
    ad0e:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    ad12:	4d 89 14 24          	mov    %r10,(%r12)
    ad16:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    ad1b:	0f b7 39             	movzwl (%rcx),%edi
    ad1e:	e9 b8 01 00 00       	jmpq   aedb <gimli::read::unit::parse_attribute+0x61b>
    ad23:	49 8b 45 00          	mov    0x0(%r13),%rax
    ad27:	48 83 f8 04          	cmp    $0x4,%rax
    ad2b:	0f 82 e5 01 00 00    	jb     af16 <gimli::read::unit::parse_attribute+0x656>
    ad31:	49 8b 0c 24          	mov    (%r12),%rcx
    ad35:	4c 8d 51 04          	lea    0x4(%rcx),%r10
    ad39:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    ad3d:	4d 89 14 24          	mov    %r10,(%r12)
    ad41:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    ad46:	8b 39                	mov    (%rcx),%edi
    ad48:	e9 8e 01 00 00       	jmpq   aedb <gimli::read::unit::parse_attribute+0x61b>
    ad4d:	49 8b 45 00          	mov    0x0(%r13),%rax
    ad51:	48 83 f8 02          	cmp    $0x2,%rax
    ad55:	0f 82 dc 08 00 00    	jb     b637 <gimli::read::unit::parse_attribute+0xd77>
    ad5b:	49 8b 0c 24          	mov    (%r12),%rcx
    ad5f:	48 8d 51 02          	lea    0x2(%rcx),%rdx
    ad63:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    ad67:	49 89 14 24          	mov    %rdx,(%r12)
    ad6b:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    ad70:	44 0f b7 11          	movzwl (%rcx),%r10d
    ad74:	44 89 d1             	mov    %r10d,%ecx
    ad77:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    ad7d:	be 03 00 00 00       	mov    $0x3,%esi
    ad82:	e9 a3 07 00 00       	jmpq   b52a <gimli::read::unit::parse_attribute+0xc6a>
    ad87:	41 80 f8 04          	cmp    $0x4,%r8b
    ad8b:	0f 85 5a 08 00 00    	jne    b5eb <gimli::read::unit::parse_attribute+0xd2b>
    ad91:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
    ad95:	ff 15 a5 b1 03 00    	callq  *0x3b1a5(%rip)        # 45f40 <_GLOBAL_OFFSET_TABLE_+0x5b8>
    ad9b:	84 c0                	test   %al,%al
    ad9d:	0f 84 48 08 00 00    	je     b5eb <gimli::read::unit::parse_attribute+0xd2b>
    ada3:	49 8b 45 00          	mov    0x0(%r13),%rax
    ada7:	be 0a 00 00 00       	mov    $0xa,%esi
    adac:	48 83 f8 03          	cmp    $0x3,%rax
    adb0:	0f 87 44 08 00 00    	ja     b5fa <gimli::read::unit::parse_attribute+0xd3a>
    adb6:	e9 7c 08 00 00       	jmpq   b637 <gimli::read::unit::parse_attribute+0xd77>
    adbb:	41 80 f8 08          	cmp    $0x8,%r8b
    adbf:	0f 85 64 08 00 00    	jne    b629 <gimli::read::unit::parse_attribute+0xd69>
    adc5:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
    adc9:	ff 15 71 b1 03 00    	callq  *0x3b171(%rip)        # 45f40 <_GLOBAL_OFFSET_TABLE_+0x5b8>
    adcf:	84 c0                	test   %al,%al
    add1:	0f 84 52 08 00 00    	je     b629 <gimli::read::unit::parse_attribute+0xd69>
    add7:	49 8b 45 00          	mov    0x0(%r13),%rax
    addb:	48 83 f8 08          	cmp    $0x8,%rax
    addf:	0f 82 52 08 00 00    	jb     b637 <gimli::read::unit::parse_attribute+0xd77>
    ade5:	49 8b 0c 24          	mov    (%r12),%rcx
    ade9:	48 8d 51 08          	lea    0x8(%rcx),%rdx
    aded:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
    adf1:	49 89 14 24          	mov    %rdx,(%r12)
    adf5:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    adfa:	4c 8b 11             	mov    (%rcx),%r10
    adfd:	be 0a 00 00 00       	mov    $0xa,%esi
    ae02:	e9 a3 0a 00 00       	jmpq   b8aa <gimli::read::unit::parse_attribute+0xfea>
    ae07:	4d 8b 14 24          	mov    (%r12),%r10
    ae0b:	49 8b 44 24 08       	mov    0x8(%r12),%rax
    ae10:	48 85 c0             	test   %rax,%rax
    ae13:	74 16                	je     ae2b <gimli::read::unit::parse_attribute+0x56b>
    ae15:	31 ff                	xor    %edi,%edi
    ae17:	41 80 3c 3a 00       	cmpb   $0x0,(%r10,%rdi,1)
    ae1c:	0f 84 d7 0a 00 00    	je     b8f9 <gimli::read::unit::parse_attribute+0x1039>
    ae22:	48 83 c7 01          	add    $0x1,%rdi
    ae26:	48 39 f8             	cmp    %rdi,%rax
    ae29:	75 ec                	jne    ae17 <gimli::read::unit::parse_attribute+0x557>
    ae2b:	31 c0                	xor    %eax,%eax
    ae2d:	48 83 c8 13          	or     $0x13,%rax
    ae31:	4d 89 57 10          	mov    %r10,0x10(%r15)
    ae35:	e9 42 0b 00 00       	jmpq   b97c <gimli::read::unit::parse_attribute+0x10bc>
    ae3a:	4d 8b 4d 00          	mov    0x0(%r13),%r9
    ae3e:	4d 85 c9             	test   %r9,%r9
    ae41:	0f 84 05 08 00 00    	je     b64c <gimli::read::unit::parse_attribute+0xd8c>
    ae47:	4d 8b 1c 24          	mov    (%r12),%r11
    ae4b:	45 31 c0             	xor    %r8d,%r8d
    ae4e:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    ae55:	31 db                	xor    %ebx,%ebx
    ae57:	31 ff                	xor    %edi,%edi
    ae59:	31 c9                	xor    %ecx,%ecx
    ae5b:	4d 8d 14 1b          	lea    (%r11,%rbx,1),%r10
    ae5f:	49 83 c2 01          	add    $0x1,%r10
    ae63:	49 8d 2c 01          	lea    (%r9,%rax,1),%rbp
    ae67:	4d 89 14 24          	mov    %r10,(%r12)
    ae6b:	49 89 6c 24 08       	mov    %rbp,0x8(%r12)
    ae70:	41 0f b6 14 1b       	movzbl (%r11,%rbx,1),%edx
    ae75:	83 f9 3f             	cmp    $0x3f,%ecx
    ae78:	75 09                	jne    ae83 <gimli::read::unit::parse_attribute+0x5c3>
    ae7a:	80 fa 01             	cmp    $0x1,%dl
    ae7d:	0f 87 56 09 00 00    	ja     b7d9 <gimli::read::unit::parse_attribute+0xf19>
    ae83:	0f b6 f2             	movzbl %dl,%esi
    ae86:	89 f2                	mov    %esi,%edx
    ae88:	83 e2 7f             	and    $0x7f,%edx
    ae8b:	48 d3 e2             	shl    %cl,%rdx
    ae8e:	48 09 d7             	or     %rdx,%rdi
    ae91:	40 84 f6             	test   %sil,%sil
    ae94:	0f 89 cd 0a 00 00    	jns    b967 <gimli::read::unit::parse_attribute+0x10a7>
    ae9a:	83 c1 07             	add    $0x7,%ecx
    ae9d:	48 83 c3 01          	add    $0x1,%rbx
    aea1:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    aea5:	49 39 d9             	cmp    %rbx,%r9
    aea8:	75 b1                	jne    ae5b <gimli::read::unit::parse_attribute+0x59b>
    aeaa:	49 01 db             	add    %rbx,%r11
    aead:	b8 13 00 00 00       	mov    $0x13,%eax
    aeb2:	4d 89 d8             	mov    %r11,%r8
    aeb5:	e9 be 0a 00 00       	jmpq   b978 <gimli::read::unit::parse_attribute+0x10b8>
    aeba:	49 8b 45 00          	mov    0x0(%r13),%rax
    aebe:	48 85 c0             	test   %rax,%rax
    aec1:	74 53                	je     af16 <gimli::read::unit::parse_attribute+0x656>
    aec3:	49 8b 0c 24          	mov    (%r12),%rcx
    aec7:	4c 8d 51 01          	lea    0x1(%rcx),%r10
    aecb:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    aecf:	4d 89 14 24          	mov    %r10,(%r12)
    aed3:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    aed8:	0f b6 39             	movzbl (%rcx),%edi
    aedb:	48 29 f8             	sub    %rdi,%rax
    aede:	72 3a                	jb     af1a <gimli::read::unit::parse_attribute+0x65a>
    aee0:	49 8d 0c 3a          	lea    (%r10,%rdi,1),%rcx
    aee4:	49 89 0c 24          	mov    %rcx,(%r12)
    aee8:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    aeed:	44 89 d1             	mov    %r10d,%ecx
    aef0:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    aef6:	44 89 d2             	mov    %r10d,%edx
    aef9:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    aeff:	48 bd 00 00 00 00 ff 	movabs $0xffffffff00000000,%rbp
    af06:	ff ff ff 
    af09:	4c 21 d5             	and    %r10,%rbp
    af0c:	be 01 00 00 00       	mov    $0x1,%esi
    af11:	e9 18 06 00 00       	jmpq   b52e <gimli::read::unit::parse_attribute+0xc6e>
    af16:	4d 8b 14 24          	mov    (%r12),%r10
    af1a:	4d 89 57 10          	mov    %r10,0x10(%r15)
    af1e:	e9 1c 07 00 00       	jmpq   b63f <gimli::read::unit::parse_attribute+0xd7f>
    af23:	49 8b 45 00          	mov    0x0(%r13),%rax
    af27:	48 85 c0             	test   %rax,%rax
    af2a:	0f 84 07 07 00 00    	je     b637 <gimli::read::unit::parse_attribute+0xd77>
    af30:	49 8b 0c 24          	mov    (%r12),%rcx
    af34:	48 8d 51 01          	lea    0x1(%rcx),%rdx
    af38:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    af3c:	49 89 14 24          	mov    %rdx,(%r12)
    af40:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    af45:	44 8a 11             	mov    (%rcx),%r10b
    af48:	be 02 00 00 00       	mov    $0x2,%esi
    af4d:	31 c9                	xor    %ecx,%ecx
    af4f:	e9 d6 05 00 00       	jmpq   b52a <gimli::read::unit::parse_attribute+0xc6a>
    af54:	49 8b 45 00          	mov    0x0(%r13),%rax
    af58:	48 85 c0             	test   %rax,%rax
    af5b:	0f 84 d6 06 00 00    	je     b637 <gimli::read::unit::parse_attribute+0xd77>
    af61:	49 8b 0c 24          	mov    (%r12),%rcx
    af65:	48 8d 51 01          	lea    0x1(%rcx),%rdx
    af69:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    af6d:	49 89 14 24          	mov    %rdx,(%r12)
    af71:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    af76:	80 39 00             	cmpb   $0x0,(%rcx)
    af79:	41 0f 95 c2          	setne  %r10b
    af7d:	be 09 00 00 00       	mov    $0x9,%esi
    af82:	31 c9                	xor    %ecx,%ecx
    af84:	e9 a1 05 00 00       	jmpq   b52a <gimli::read::unit::parse_attribute+0xc6a>
    af89:	49 8b 45 00          	mov    0x0(%r13),%rax
    af8d:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    af91:	31 c9                	xor    %ecx,%ecx
    af93:	45 31 d2             	xor    %r10d,%r10d
    af96:	eb 1a                	jmp    afb2 <gimli::read::unit::parse_attribute+0x6f2>
    af98:	89 d6                	mov    %edx,%esi
    af9a:	83 e6 7f             	and    $0x7f,%esi
    af9d:	48 d3 e6             	shl    %cl,%rsi
    afa0:	49 09 f2             	or     %rsi,%r10
    afa3:	83 c1 07             	add    $0x7,%ecx
    afa6:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    afaa:	84 d2                	test   %dl,%dl
    afac:	0f 89 95 08 00 00    	jns    b847 <gimli::read::unit::parse_attribute+0xf87>
    afb2:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    afb6:	0f 84 79 08 00 00    	je     b835 <gimli::read::unit::parse_attribute+0xf75>
    afbc:	49 8b 14 24          	mov    (%r12),%rdx
    afc0:	48 8d 72 01          	lea    0x1(%rdx),%rsi
    afc4:	49 89 34 24          	mov    %rsi,(%r12)
    afc8:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    afcd:	0f b6 12             	movzbl (%rdx),%edx
    afd0:	83 f9 3f             	cmp    $0x3f,%ecx
    afd3:	75 c3                	jne    af98 <gimli::read::unit::parse_attribute+0x6d8>
    afd5:	84 d2                	test   %dl,%dl
    afd7:	74 bf                	je     af98 <gimli::read::unit::parse_attribute+0x6d8>
    afd9:	80 fa 7f             	cmp    $0x7f,%dl
    afdc:	74 ba                	je     af98 <gimli::read::unit::parse_attribute+0x6d8>
    afde:	b8 07 00 00 00       	mov    $0x7,%eax
    afe3:	31 c9                	xor    %ecx,%ecx
    afe5:	49 89 4f 10          	mov    %rcx,0x10(%r15)
    afe9:	e9 8e 09 00 00       	jmpq   b97c <gimli::read::unit::parse_attribute+0x10bc>
    afee:	41 80 f8 08          	cmp    $0x8,%r8b
    aff2:	0f 85 d7 06 00 00    	jne    b6cf <gimli::read::unit::parse_attribute+0xe0f>
    aff8:	49 8b 45 00          	mov    0x0(%r13),%rax
    affc:	48 83 f8 07          	cmp    $0x7,%rax
    b000:	0f 86 9b 0a 00 00    	jbe    baa1 <gimli::read::unit::parse_attribute+0x11e1>
    b006:	49 8b 0c 24          	mov    (%r12),%rcx
    b00a:	48 8d 51 08          	lea    0x8(%rcx),%rdx
    b00e:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
    b012:	49 89 14 24          	mov    %rdx,(%r12)
    b016:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b01b:	4c 8b 11             	mov    (%rcx),%r10
    b01e:	e9 d2 06 00 00       	jmpq   b6f5 <gimli::read::unit::parse_attribute+0xe35>
    b023:	49 8b 45 00          	mov    0x0(%r13),%rax
    b027:	48 85 c0             	test   %rax,%rax
    b02a:	0f 84 e4 03 00 00    	je     b414 <gimli::read::unit::parse_attribute+0xb54>
    b030:	49 8b 3c 24          	mov    (%r12),%rdi
    b034:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    b038:	31 d2                	xor    %edx,%edx
    b03a:	45 31 d2             	xor    %r10d,%r10d
    b03d:	31 c9                	xor    %ecx,%ecx
    b03f:	48 8d 77 01          	lea    0x1(%rdi),%rsi
    b043:	49 89 34 24          	mov    %rsi,(%r12)
    b047:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b04c:	0f b6 1f             	movzbl (%rdi),%ebx
    b04f:	83 f9 3f             	cmp    $0x3f,%ecx
    b052:	75 09                	jne    b05d <gimli::read::unit::parse_attribute+0x79d>
    b054:	80 fb 01             	cmp    $0x1,%bl
    b057:	0f 87 c9 03 00 00    	ja     b426 <gimli::read::unit::parse_attribute+0xb66>
    b05d:	0f b6 eb             	movzbl %bl,%ebp
    b060:	89 ef                	mov    %ebp,%edi
    b062:	83 e7 7f             	and    $0x7f,%edi
    b065:	48 d3 e7             	shl    %cl,%rdi
    b068:	49 09 fa             	or     %rdi,%r10
    b06b:	40 84 ed             	test   %bpl,%bpl
    b06e:	0f 89 11 09 00 00    	jns    b985 <gimli::read::unit::parse_attribute+0x10c5>
    b074:	83 c1 07             	add    $0x7,%ecx
    b077:	48 89 f7             	mov    %rsi,%rdi
    b07a:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    b07e:	72 bf                	jb     b03f <gimli::read::unit::parse_attribute+0x77f>
    b080:	e9 7e 03 00 00       	jmpq   b403 <gimli::read::unit::parse_attribute+0xb43>
    b085:	66 83 fe 02          	cmp    $0x2,%si
    b089:	0f 85 8f 06 00 00    	jne    b71e <gimli::read::unit::parse_attribute+0xe5e>
    b08f:	8d 42 ff             	lea    -0x1(%rdx),%eax
    b092:	3c 07                	cmp    $0x7,%al
    b094:	0f 87 f0 09 00 00    	ja     ba8a <gimli::read::unit::parse_attribute+0x11ca>
    b09a:	0f b6 c0             	movzbl %al,%eax
    b09d:	48 8d 0d b8 b4 02 00 	lea    0x2b4b8(%rip),%rcx        # 3655c <_fini+0xc38>
    b0a4:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    b0a8:	48 01 c8             	add    %rcx,%rax
    b0ab:	ff e0                	jmpq   *%rax
    b0ad:	49 8b 45 00          	mov    0x0(%r13),%rax
    b0b1:	48 85 c0             	test   %rax,%rax
    b0b4:	0f 84 e7 09 00 00    	je     baa1 <gimli::read::unit::parse_attribute+0x11e1>
    b0ba:	49 8b 0c 24          	mov    (%r12),%rcx
    b0be:	48 8d 51 01          	lea    0x1(%rcx),%rdx
    b0c2:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    b0c6:	49 89 14 24          	mov    %rdx,(%r12)
    b0ca:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b0cf:	44 0f b6 11          	movzbl (%rcx),%r10d
    b0d3:	e9 f7 09 00 00       	jmpq   bacf <gimli::read::unit::parse_attribute+0x120f>
    b0d8:	49 8b 45 00          	mov    0x0(%r13),%rax
    b0dc:	48 85 c0             	test   %rax,%rax
    b0df:	0f 84 52 05 00 00    	je     b637 <gimli::read::unit::parse_attribute+0xd77>
    b0e5:	49 8b 0c 24          	mov    (%r12),%rcx
    b0e9:	48 8d 51 01          	lea    0x1(%rcx),%rdx
    b0ed:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    b0f1:	49 89 14 24          	mov    %rdx,(%r12)
    b0f5:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b0fa:	44 8a 11             	mov    (%rcx),%r10b
    b0fd:	be 0d 00 00 00       	mov    $0xd,%esi
    b102:	31 c9                	xor    %ecx,%ecx
    b104:	e9 21 04 00 00       	jmpq   b52a <gimli::read::unit::parse_attribute+0xc6a>
    b109:	49 8b 45 00          	mov    0x0(%r13),%rax
    b10d:	48 83 f8 02          	cmp    $0x2,%rax
    b111:	0f 82 20 05 00 00    	jb     b637 <gimli::read::unit::parse_attribute+0xd77>
    b117:	49 8b 0c 24          	mov    (%r12),%rcx
    b11b:	48 8d 51 02          	lea    0x2(%rcx),%rdx
    b11f:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    b123:	49 89 14 24          	mov    %rdx,(%r12)
    b127:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b12c:	44 0f b7 11          	movzwl (%rcx),%r10d
    b130:	44 89 d1             	mov    %r10d,%ecx
    b133:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b139:	be 0d 00 00 00       	mov    $0xd,%esi
    b13e:	e9 e7 03 00 00       	jmpq   b52a <gimli::read::unit::parse_attribute+0xc6a>
    b143:	49 8b 45 00          	mov    0x0(%r13),%rax
    b147:	48 83 f8 04          	cmp    $0x4,%rax
    b14b:	0f 82 e6 04 00 00    	jb     b637 <gimli::read::unit::parse_attribute+0xd77>
    b151:	49 8b 0c 24          	mov    (%r12),%rcx
    b155:	48 8d 51 04          	lea    0x4(%rcx),%rdx
    b159:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    b15d:	49 89 14 24          	mov    %rdx,(%r12)
    b161:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b166:	44 8b 11             	mov    (%rcx),%r10d
    b169:	44 89 d1             	mov    %r10d,%ecx
    b16c:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b172:	44 89 d2             	mov    %r10d,%edx
    b175:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    b17b:	be 0d 00 00 00       	mov    $0xd,%esi
    b180:	e9 a7 03 00 00       	jmpq   b52c <gimli::read::unit::parse_attribute+0xc6c>
    b185:	49 8b 45 00          	mov    0x0(%r13),%rax
    b189:	48 83 f8 08          	cmp    $0x8,%rax
    b18d:	0f 82 a4 04 00 00    	jb     b637 <gimli::read::unit::parse_attribute+0xd77>
    b193:	49 8b 0c 24          	mov    (%r12),%rcx
    b197:	48 8d 51 08          	lea    0x8(%rcx),%rdx
    b19b:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
    b19f:	49 89 14 24          	mov    %rdx,(%r12)
    b1a3:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b1a8:	4c 8b 11             	mov    (%rcx),%r10
    b1ab:	44 89 d1             	mov    %r10d,%ecx
    b1ae:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b1b4:	44 89 d2             	mov    %r10d,%edx
    b1b7:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    b1bd:	48 bd 00 00 00 00 ff 	movabs $0xffffffff00000000,%rbp
    b1c4:	ff ff ff 
    b1c7:	4c 21 d5             	and    %r10,%rbp
    b1ca:	be 0d 00 00 00       	mov    $0xd,%esi
    b1cf:	e9 5a 03 00 00       	jmpq   b52e <gimli::read::unit::parse_attribute+0xc6e>
    b1d4:	41 80 f8 08          	cmp    $0x8,%r8b
    b1d8:	0f 85 5d 05 00 00    	jne    b73b <gimli::read::unit::parse_attribute+0xe7b>
    b1de:	49 8b 45 00          	mov    0x0(%r13),%rax
    b1e2:	48 83 f8 07          	cmp    $0x7,%rax
    b1e6:	0f 86 b5 08 00 00    	jbe    baa1 <gimli::read::unit::parse_attribute+0x11e1>
    b1ec:	49 8b 0c 24          	mov    (%r12),%rcx
    b1f0:	48 8d 51 08          	lea    0x8(%rcx),%rdx
    b1f4:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
    b1f8:	49 89 14 24          	mov    %rdx,(%r12)
    b1fc:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b201:	4c 8b 11             	mov    (%rcx),%r10
    b204:	e9 58 05 00 00       	jmpq   b761 <gimli::read::unit::parse_attribute+0xea1>
    b209:	be 09 00 00 00       	mov    $0x9,%esi
    b20e:	31 c9                	xor    %ecx,%ecx
    b210:	41 b2 01             	mov    $0x1,%r10b
    b213:	e9 12 03 00 00       	jmpq   b52a <gimli::read::unit::parse_attribute+0xc6a>
    b218:	49 8b 45 00          	mov    0x0(%r13),%rax
    b21c:	48 83 f8 04          	cmp    $0x4,%rax
    b220:	0f 82 11 04 00 00    	jb     b637 <gimli::read::unit::parse_attribute+0xd77>
    b226:	49 8b 0c 24          	mov    (%r12),%rcx
    b22a:	48 8d 51 04          	lea    0x4(%rcx),%rdx
    b22e:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    b232:	49 89 14 24          	mov    %rdx,(%r12)
    b236:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b23b:	44 8b 11             	mov    (%rcx),%r10d
    b23e:	44 89 d1             	mov    %r10d,%ecx
    b241:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b247:	44 89 d2             	mov    %r10d,%edx
    b24a:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    b250:	be 0f 00 00 00       	mov    $0xf,%esi
    b255:	e9 d2 02 00 00       	jmpq   b52c <gimli::read::unit::parse_attribute+0xc6c>
    b25a:	49 8b 45 00          	mov    0x0(%r13),%rax
    b25e:	48 83 f8 10          	cmp    $0x10,%rax
    b262:	0f 82 cf 03 00 00    	jb     b637 <gimli::read::unit::parse_attribute+0xd77>
    b268:	4d 8b 14 24          	mov    (%r12),%r10
    b26c:	49 8d 4a 10          	lea    0x10(%r10),%rcx
    b270:	48 83 c0 f0          	add    $0xfffffffffffffff0,%rax
    b274:	49 89 0c 24          	mov    %rcx,(%r12)
    b278:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b27d:	44 89 d1             	mov    %r10d,%ecx
    b280:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b286:	44 89 d2             	mov    %r10d,%edx
    b289:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    b28f:	48 bd 00 00 00 00 ff 	movabs $0xffffffff00000000,%rbp
    b296:	ff ff ff 
    b299:	4c 21 d5             	and    %r10,%rbp
    b29c:	be 01 00 00 00       	mov    $0x1,%esi
    b2a1:	bf 10 00 00 00       	mov    $0x10,%edi
    b2a6:	e9 83 02 00 00       	jmpq   b52e <gimli::read::unit::parse_attribute+0xc6e>
    b2ab:	41 80 f8 08          	cmp    $0x8,%r8b
    b2af:	0f 85 d5 04 00 00    	jne    b78a <gimli::read::unit::parse_attribute+0xeca>
    b2b5:	49 8b 45 00          	mov    0x0(%r13),%rax
    b2b9:	48 83 f8 07          	cmp    $0x7,%rax
    b2bd:	0f 86 de 07 00 00    	jbe    baa1 <gimli::read::unit::parse_attribute+0x11e1>
    b2c3:	49 8b 0c 24          	mov    (%r12),%rcx
    b2c7:	48 8d 51 08          	lea    0x8(%rcx),%rdx
    b2cb:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
    b2cf:	49 89 14 24          	mov    %rdx,(%r12)
    b2d3:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b2d8:	4c 8b 11             	mov    (%rcx),%r10
    b2db:	e9 d0 04 00 00       	jmpq   b7b0 <gimli::read::unit::parse_attribute+0xef0>
    b2e0:	49 8b 45 00          	mov    0x0(%r13),%rax
    b2e4:	48 83 f8 08          	cmp    $0x8,%rax
    b2e8:	0f 82 49 03 00 00    	jb     b637 <gimli::read::unit::parse_attribute+0xd77>
    b2ee:	49 8b 0c 24          	mov    (%r12),%rcx
    b2f2:	48 8d 51 08          	lea    0x8(%rcx),%rdx
    b2f6:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
    b2fa:	49 89 14 24          	mov    %rdx,(%r12)
    b2fe:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b303:	4c 8b 11             	mov    (%rcx),%r10
    b306:	44 89 d1             	mov    %r10d,%ecx
    b309:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b30f:	44 89 d2             	mov    %r10d,%edx
    b312:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    b318:	48 bd 00 00 00 00 ff 	movabs $0xffffffff00000000,%rbp
    b31f:	ff ff ff 
    b322:	4c 21 d5             	and    %r10,%rbp
    b325:	be 19 00 00 00       	mov    $0x19,%esi
    b32a:	e9 ff 01 00 00       	jmpq   b52e <gimli::read::unit::parse_attribute+0xc6e>
    b32f:	66 41 83 f9 21       	cmp    $0x21,%r9w
    b334:	0f 84 2a 05 00 00    	je     b864 <gimli::read::unit::parse_attribute+0xfa4>
    b33a:	49 c7 47 10 00 00 00 	movq   $0x0,0x10(%r15)
    b341:	00 
    b342:	49 c7 47 08 45 00 00 	movq   $0x45,0x8(%r15)
    b349:	00 
    b34a:	e9 9d f6 ff ff       	jmpq   a9ec <gimli::read::unit::parse_attribute+0x12c>
    b34f:	49 8b 45 00          	mov    0x0(%r13),%rax
    b353:	48 85 c0             	test   %rax,%rax
    b356:	0f 84 b8 00 00 00    	je     b414 <gimli::read::unit::parse_attribute+0xb54>
    b35c:	49 8b 3c 24          	mov    (%r12),%rdi
    b360:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    b364:	31 d2                	xor    %edx,%edx
    b366:	45 31 d2             	xor    %r10d,%r10d
    b369:	31 c9                	xor    %ecx,%ecx
    b36b:	48 8d 77 01          	lea    0x1(%rdi),%rsi
    b36f:	49 89 34 24          	mov    %rsi,(%r12)
    b373:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b378:	0f b6 1f             	movzbl (%rdi),%ebx
    b37b:	83 f9 3f             	cmp    $0x3f,%ecx
    b37e:	75 09                	jne    b389 <gimli::read::unit::parse_attribute+0xac9>
    b380:	80 fb 01             	cmp    $0x1,%bl
    b383:	0f 87 9d 00 00 00    	ja     b426 <gimli::read::unit::parse_attribute+0xb66>
    b389:	0f b6 eb             	movzbl %bl,%ebp
    b38c:	89 ef                	mov    %ebp,%edi
    b38e:	83 e7 7f             	and    $0x7f,%edi
    b391:	48 d3 e7             	shl    %cl,%rdi
    b394:	49 09 fa             	or     %rdi,%r10
    b397:	40 84 ed             	test   %bpl,%bpl
    b39a:	0f 89 0e 06 00 00    	jns    b9ae <gimli::read::unit::parse_attribute+0x10ee>
    b3a0:	83 c1 07             	add    $0x7,%ecx
    b3a3:	48 89 f7             	mov    %rsi,%rdi
    b3a6:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    b3aa:	72 bf                	jb     b36b <gimli::read::unit::parse_attribute+0xaab>
    b3ac:	eb 55                	jmp    b403 <gimli::read::unit::parse_attribute+0xb43>
    b3ae:	49 8b 45 00          	mov    0x0(%r13),%rax
    b3b2:	48 85 c0             	test   %rax,%rax
    b3b5:	74 5d                	je     b414 <gimli::read::unit::parse_attribute+0xb54>
    b3b7:	49 8b 3c 24          	mov    (%r12),%rdi
    b3bb:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    b3bf:	31 d2                	xor    %edx,%edx
    b3c1:	45 31 d2             	xor    %r10d,%r10d
    b3c4:	31 c9                	xor    %ecx,%ecx
    b3c6:	48 8d 77 01          	lea    0x1(%rdi),%rsi
    b3ca:	49 89 34 24          	mov    %rsi,(%r12)
    b3ce:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b3d3:	0f b6 1f             	movzbl (%rdi),%ebx
    b3d6:	83 f9 3f             	cmp    $0x3f,%ecx
    b3d9:	75 05                	jne    b3e0 <gimli::read::unit::parse_attribute+0xb20>
    b3db:	80 fb 01             	cmp    $0x1,%bl
    b3de:	77 46                	ja     b426 <gimli::read::unit::parse_attribute+0xb66>
    b3e0:	0f b6 eb             	movzbl %bl,%ebp
    b3e3:	89 ef                	mov    %ebp,%edi
    b3e5:	83 e7 7f             	and    $0x7f,%edi
    b3e8:	48 d3 e7             	shl    %cl,%rdi
    b3eb:	49 09 fa             	or     %rdi,%r10
    b3ee:	40 84 ed             	test   %bpl,%bpl
    b3f1:	0f 89 e0 05 00 00    	jns    b9d7 <gimli::read::unit::parse_attribute+0x1117>
    b3f7:	83 c1 07             	add    $0x7,%ecx
    b3fa:	48 89 f7             	mov    %rsi,%rdi
    b3fd:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    b401:	72 c3                	jb     b3c6 <gimli::read::unit::parse_attribute+0xb06>
    b403:	b8 13 00 00 00       	mov    $0x13,%eax
    b408:	48 89 f2             	mov    %rsi,%rdx
    b40b:	49 89 77 10          	mov    %rsi,0x10(%r15)
    b40f:	e9 68 05 00 00       	jmpq   b97c <gimli::read::unit::parse_attribute+0x10bc>
    b414:	49 8b 14 24          	mov    (%r12),%rdx
    b418:	b8 13 00 00 00       	mov    $0x13,%eax
    b41d:	49 89 57 10          	mov    %rdx,0x10(%r15)
    b421:	e9 56 05 00 00       	jmpq   b97c <gimli::read::unit::parse_attribute+0x10bc>
    b426:	b8 06 00 00 00       	mov    $0x6,%eax
    b42b:	49 89 57 10          	mov    %rdx,0x10(%r15)
    b42f:	e9 48 05 00 00       	jmpq   b97c <gimli::read::unit::parse_attribute+0x10bc>
    b434:	49 8b 45 00          	mov    0x0(%r13),%rax
    b438:	48 83 f8 08          	cmp    $0x8,%rax
    b43c:	0f 82 f5 01 00 00    	jb     b637 <gimli::read::unit::parse_attribute+0xd77>
    b442:	49 8b 0c 24          	mov    (%r12),%rcx
    b446:	48 8d 51 08          	lea    0x8(%rcx),%rdx
    b44a:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
    b44e:	49 89 14 24          	mov    %rdx,(%r12)
    b452:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b457:	4c 8b 11             	mov    (%rcx),%r10
    b45a:	e9 21 02 00 00       	jmpq   b680 <gimli::read::unit::parse_attribute+0xdc0>
    b45f:	49 8b 45 00          	mov    0x0(%r13),%rax
    b463:	48 85 c0             	test   %rax,%rax
    b466:	0f 84 cb 01 00 00    	je     b637 <gimli::read::unit::parse_attribute+0xd77>
    b46c:	49 8b 0c 24          	mov    (%r12),%rcx
    b470:	48 8d 51 01          	lea    0x1(%rcx),%rdx
    b474:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    b478:	49 89 14 24          	mov    %rdx,(%r12)
    b47c:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b481:	44 8a 11             	mov    (%rcx),%r10b
    b484:	be 1d 00 00 00       	mov    $0x1d,%esi
    b489:	31 c9                	xor    %ecx,%ecx
    b48b:	e9 9a 00 00 00       	jmpq   b52a <gimli::read::unit::parse_attribute+0xc6a>
    b490:	49 8b 45 00          	mov    0x0(%r13),%rax
    b494:	48 83 f8 02          	cmp    $0x2,%rax
    b498:	0f 82 99 01 00 00    	jb     b637 <gimli::read::unit::parse_attribute+0xd77>
    b49e:	49 8b 0c 24          	mov    (%r12),%rcx
    b4a2:	48 8d 51 02          	lea    0x2(%rcx),%rdx
    b4a6:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    b4aa:	49 89 14 24          	mov    %rdx,(%r12)
    b4ae:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b4b3:	44 0f b7 11          	movzwl (%rcx),%r10d
    b4b7:	44 89 d1             	mov    %r10d,%ecx
    b4ba:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b4c0:	be 1d 00 00 00       	mov    $0x1d,%esi
    b4c5:	eb 63                	jmp    b52a <gimli::read::unit::parse_attribute+0xc6a>
    b4c7:	49 8b 45 00          	mov    0x0(%r13),%rax
    b4cb:	48 85 c0             	test   %rax,%rax
    b4ce:	0f 84 63 01 00 00    	je     b637 <gimli::read::unit::parse_attribute+0xd77>
    b4d4:	49 8b 0c 24          	mov    (%r12),%rcx
    b4d8:	48 8d 51 01          	lea    0x1(%rcx),%rdx
    b4dc:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    b4e0:	49 89 14 24          	mov    %rdx,(%r12)
    b4e4:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b4e9:	44 8a 11             	mov    (%rcx),%r10b
    b4ec:	be 0c 00 00 00       	mov    $0xc,%esi
    b4f1:	31 c9                	xor    %ecx,%ecx
    b4f3:	eb 35                	jmp    b52a <gimli::read::unit::parse_attribute+0xc6a>
    b4f5:	49 8b 45 00          	mov    0x0(%r13),%rax
    b4f9:	48 83 f8 02          	cmp    $0x2,%rax
    b4fd:	0f 82 34 01 00 00    	jb     b637 <gimli::read::unit::parse_attribute+0xd77>
    b503:	49 8b 0c 24          	mov    (%r12),%rcx
    b507:	48 8d 51 02          	lea    0x2(%rcx),%rdx
    b50b:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    b50f:	49 89 14 24          	mov    %rdx,(%r12)
    b513:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b518:	44 0f b7 11          	movzwl (%rcx),%r10d
    b51c:	44 89 d1             	mov    %r10d,%ecx
    b51f:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b525:	be 0c 00 00 00       	mov    $0xc,%esi
    b52a:	31 d2                	xor    %edx,%edx
    b52c:	31 ed                	xor    %ebp,%ebp
    b52e:	41 0f b6 c2          	movzbl %r10b,%eax
    b532:	09 c1                	or     %eax,%ecx
    b534:	0f b7 c1             	movzwl %cx,%eax
    b537:	09 d0                	or     %edx,%eax
    b539:	48 09 e8             	or     %rbp,%rax
    b53c:	49 89 77 08          	mov    %rsi,0x8(%r15)
    b540:	49 89 47 10          	mov    %rax,0x10(%r15)
    b544:	49 89 7f 18          	mov    %rdi,0x18(%r15)
    b548:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    b54c:	66 41 89 47 20       	mov    %ax,0x20(%r15)
    b551:	31 c0                	xor    %eax,%eax
    b553:	e9 99 f4 ff ff       	jmpq   a9f1 <gimli::read::unit::parse_attribute+0x131>
    b558:	49 8b 45 00          	mov    0x0(%r13),%rax
    b55c:	48 83 f8 03          	cmp    $0x3,%rax
    b560:	0f 82 d1 00 00 00    	jb     b637 <gimli::read::unit::parse_attribute+0xd77>
    b566:	49 8b 0c 24          	mov    (%r12),%rcx
    b56a:	48 8d 51 03          	lea    0x3(%rcx),%rdx
    b56e:	48 83 c0 fd          	add    $0xfffffffffffffffd,%rax
    b572:	49 89 14 24          	mov    %rdx,(%r12)
    b576:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b57b:	44 0f b7 11          	movzwl (%rcx),%r10d
    b57f:	0f b6 51 02          	movzbl 0x2(%rcx),%edx
    b583:	c1 e2 10             	shl    $0x10,%edx
    b586:	44 09 d2             	or     %r10d,%edx
    b589:	44 89 d1             	mov    %r10d,%ecx
    b58c:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b592:	81 e2 00 00 ff 00    	and    $0xff0000,%edx
    b598:	be 0c 00 00 00       	mov    $0xc,%esi
    b59d:	eb 8d                	jmp    b52c <gimli::read::unit::parse_attribute+0xc6c>
    b59f:	49 8b 45 00          	mov    0x0(%r13),%rax
    b5a3:	48 83 f8 04          	cmp    $0x4,%rax
    b5a7:	0f 82 8a 00 00 00    	jb     b637 <gimli::read::unit::parse_attribute+0xd77>
    b5ad:	49 8b 0c 24          	mov    (%r12),%rcx
    b5b1:	48 8d 51 04          	lea    0x4(%rcx),%rdx
    b5b5:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    b5b9:	49 89 14 24          	mov    %rdx,(%r12)
    b5bd:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b5c2:	44 8b 11             	mov    (%rcx),%r10d
    b5c5:	44 89 d1             	mov    %r10d,%ecx
    b5c8:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b5ce:	44 89 d2             	mov    %r10d,%edx
    b5d1:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    b5d7:	be 0c 00 00 00       	mov    $0xc,%esi
    b5dc:	e9 4b ff ff ff       	jmpq   b52c <gimli::read::unit::parse_attribute+0xc6c>
    b5e1:	41 c6 47 08 0c       	movb   $0xc,0x8(%r15)
    b5e6:	e9 01 f4 ff ff       	jmpq   a9ec <gimli::read::unit::parse_attribute+0x12c>
    b5eb:	49 8b 45 00          	mov    0x0(%r13),%rax
    b5ef:	be 04 00 00 00       	mov    $0x4,%esi
    b5f4:	48 83 f8 04          	cmp    $0x4,%rax
    b5f8:	72 3d                	jb     b637 <gimli::read::unit::parse_attribute+0xd77>
    b5fa:	49 8b 0c 24          	mov    (%r12),%rcx
    b5fe:	48 8d 51 04          	lea    0x4(%rcx),%rdx
    b602:	49 89 14 24          	mov    %rdx,(%r12)
    b606:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    b60a:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b60f:	44 8b 11             	mov    (%rcx),%r10d
    b612:	44 89 d2             	mov    %r10d,%edx
    b615:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    b61b:	44 89 d1             	mov    %r10d,%ecx
    b61e:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b624:	e9 03 ff ff ff       	jmpq   b52c <gimli::read::unit::parse_attribute+0xc6c>
    b629:	49 8b 45 00          	mov    0x0(%r13),%rax
    b62d:	48 83 f8 08          	cmp    $0x8,%rax
    b631:	0f 83 56 02 00 00    	jae    b88d <gimli::read::unit::parse_attribute+0xfcd>
    b637:	49 8b 04 24          	mov    (%r12),%rax
    b63b:	49 89 47 10          	mov    %rax,0x10(%r15)
    b63f:	49 c7 47 08 13 00 00 	movq   $0x13,0x8(%r15)
    b646:	00 
    b647:	e9 a0 f3 ff ff       	jmpq   a9ec <gimli::read::unit::parse_attribute+0x12c>
    b64c:	4d 8b 04 24          	mov    (%r12),%r8
    b650:	b8 13 00 00 00       	mov    $0x13,%eax
    b655:	e9 1e 03 00 00       	jmpq   b978 <gimli::read::unit::parse_attribute+0x10b8>
    b65a:	49 8b 45 00          	mov    0x0(%r13),%rax
    b65e:	48 83 f8 03          	cmp    $0x3,%rax
    b662:	0f 86 39 04 00 00    	jbe    baa1 <gimli::read::unit::parse_attribute+0x11e1>
    b668:	49 8b 0c 24          	mov    (%r12),%rcx
    b66c:	48 8d 51 04          	lea    0x4(%rcx),%rdx
    b670:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    b674:	49 89 14 24          	mov    %rdx,(%r12)
    b678:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b67d:	44 8b 11             	mov    (%rcx),%r10d
    b680:	44 89 d1             	mov    %r10d,%ecx
    b683:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b689:	44 89 d2             	mov    %r10d,%edx
    b68c:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    b692:	48 bd 00 00 00 00 ff 	movabs $0xffffffff00000000,%rbp
    b699:	ff ff ff 
    b69c:	4c 21 d5             	and    %r10,%rbp
    b69f:	be 0f 00 00 00       	mov    $0xf,%esi
    b6a4:	e9 85 fe ff ff       	jmpq   b52e <gimli::read::unit::parse_attribute+0xc6e>
    b6a9:	44 89 d1             	mov    %r10d,%ecx
    b6ac:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b6b2:	44 89 d2             	mov    %r10d,%edx
    b6b5:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    b6bb:	48 bd 00 00 00 00 ff 	movabs $0xffffffff00000000,%rbp
    b6c2:	ff ff ff 
    b6c5:	4c 21 d5             	and    %r10,%rbp
    b6c8:	31 f6                	xor    %esi,%esi
    b6ca:	e9 5f fe ff ff       	jmpq   b52e <gimli::read::unit::parse_attribute+0xc6e>
    b6cf:	49 8b 45 00          	mov    0x0(%r13),%rax
    b6d3:	48 83 f8 03          	cmp    $0x3,%rax
    b6d7:	0f 86 c4 03 00 00    	jbe    baa1 <gimli::read::unit::parse_attribute+0x11e1>
    b6dd:	49 8b 0c 24          	mov    (%r12),%rcx
    b6e1:	48 8d 51 04          	lea    0x4(%rcx),%rdx
    b6e5:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    b6e9:	49 89 14 24          	mov    %rdx,(%r12)
    b6ed:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b6f2:	44 8b 11             	mov    (%rcx),%r10d
    b6f5:	44 89 d1             	mov    %r10d,%ecx
    b6f8:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b6fe:	44 89 d2             	mov    %r10d,%edx
    b701:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    b707:	48 bd 00 00 00 00 ff 	movabs $0xffffffff00000000,%rbp
    b70e:	ff ff ff 
    b711:	4c 21 d5             	and    %r10,%rbp
    b714:	be 1a 00 00 00       	mov    $0x1a,%esi
    b719:	e9 10 fe ff ff       	jmpq   b52e <gimli::read::unit::parse_attribute+0xc6e>
    b71e:	41 80 f8 08          	cmp    $0x8,%r8b
    b722:	0f 85 a6 01 00 00    	jne    b8ce <gimli::read::unit::parse_attribute+0x100e>
    b728:	49 8b 45 00          	mov    0x0(%r13),%rax
    b72c:	48 83 f8 07          	cmp    $0x7,%rax
    b730:	0f 86 6b 03 00 00    	jbe    baa1 <gimli::read::unit::parse_attribute+0x11e1>
    b736:	e9 7c 03 00 00       	jmpq   bab7 <gimli::read::unit::parse_attribute+0x11f7>
    b73b:	49 8b 45 00          	mov    0x0(%r13),%rax
    b73f:	48 83 f8 03          	cmp    $0x3,%rax
    b743:	0f 86 58 03 00 00    	jbe    baa1 <gimli::read::unit::parse_attribute+0x11e1>
    b749:	49 8b 0c 24          	mov    (%r12),%rcx
    b74d:	48 8d 51 04          	lea    0x4(%rcx),%rdx
    b751:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    b755:	49 89 14 24          	mov    %rdx,(%r12)
    b759:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b75e:	44 8b 11             	mov    (%rcx),%r10d
    b761:	44 89 d1             	mov    %r10d,%ecx
    b764:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b76a:	44 89 d2             	mov    %r10d,%edx
    b76d:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    b773:	48 bd 00 00 00 00 ff 	movabs $0xffffffff00000000,%rbp
    b77a:	ff ff ff 
    b77d:	4c 21 d5             	and    %r10,%rbp
    b780:	be 0a 00 00 00       	mov    $0xa,%esi
    b785:	e9 a4 fd ff ff       	jmpq   b52e <gimli::read::unit::parse_attribute+0xc6e>
    b78a:	49 8b 45 00          	mov    0x0(%r13),%rax
    b78e:	48 83 f8 03          	cmp    $0x3,%rax
    b792:	0f 86 09 03 00 00    	jbe    baa1 <gimli::read::unit::parse_attribute+0x11e1>
    b798:	49 8b 0c 24          	mov    (%r12),%rcx
    b79c:	48 8d 51 04          	lea    0x4(%rcx),%rdx
    b7a0:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    b7a4:	49 89 14 24          	mov    %rdx,(%r12)
    b7a8:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b7ad:	44 8b 11             	mov    (%rcx),%r10d
    b7b0:	44 89 d1             	mov    %r10d,%ecx
    b7b3:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b7b9:	44 89 d2             	mov    %r10d,%edx
    b7bc:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    b7c2:	48 bd 00 00 00 00 ff 	movabs $0xffffffff00000000,%rbp
    b7c9:	ff ff ff 
    b7cc:	4c 21 d5             	and    %r10,%rbp
    b7cf:	be 1e 00 00 00       	mov    $0x1e,%esi
    b7d4:	e9 55 fd ff ff       	jmpq   b52e <gimli::read::unit::parse_attribute+0xc6e>
    b7d9:	b8 06 00 00 00       	mov    $0x6,%eax
    b7de:	e9 95 01 00 00       	jmpq   b978 <gimli::read::unit::parse_attribute+0x10b8>
    b7e3:	44 89 d1             	mov    %r10d,%ecx
    b7e6:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b7ec:	44 89 d2             	mov    %r10d,%edx
    b7ef:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    b7f5:	48 bd 00 00 00 00 ff 	movabs $0xffffffff00000000,%rbp
    b7fc:	ff ff ff 
    b7ff:	4c 21 d5             	and    %r10,%rbp
    b802:	be 0c 00 00 00       	mov    $0xc,%esi
    b807:	e9 22 fd ff ff       	jmpq   b52e <gimli::read::unit::parse_attribute+0xc6e>
    b80c:	44 89 d1             	mov    %r10d,%ecx
    b80f:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b815:	44 89 d2             	mov    %r10d,%edx
    b818:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    b81e:	48 bd 00 00 00 00 ff 	movabs $0xffffffff00000000,%rbp
    b825:	ff ff ff 
    b828:	4c 21 d5             	and    %r10,%rbp
    b82b:	be 1d 00 00 00       	mov    $0x1d,%esi
    b830:	e9 f9 fc ff ff       	jmpq   b52e <gimli::read::unit::parse_attribute+0xc6e>
    b835:	49 8b 0c 24          	mov    (%r12),%rcx
    b839:	b8 13 00 00 00       	mov    $0x13,%eax
    b83e:	49 89 4f 10          	mov    %rcx,0x10(%r15)
    b842:	e9 35 01 00 00       	jmpq   b97c <gimli::read::unit::parse_attribute+0x10bc>
    b847:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    b84e:	48 d3 e0             	shl    %cl,%rax
    b851:	31 f6                	xor    %esi,%esi
    b853:	f6 c2 40             	test   $0x40,%dl
    b856:	48 0f 44 c6          	cmove  %rsi,%rax
    b85a:	83 f9 40             	cmp    $0x40,%ecx
    b85d:	48 0f 4d c6          	cmovge %rsi,%rax
    b861:	49 09 c2             	or     %rax,%r10
    b864:	44 89 d1             	mov    %r10d,%ecx
    b867:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b86d:	44 89 d2             	mov    %r10d,%edx
    b870:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    b876:	48 bd 00 00 00 00 ff 	movabs $0xffffffff00000000,%rbp
    b87d:	ff ff ff 
    b880:	4c 21 d5             	and    %r10,%rbp
    b883:	be 06 00 00 00       	mov    $0x6,%esi
    b888:	e9 a1 fc ff ff       	jmpq   b52e <gimli::read::unit::parse_attribute+0xc6e>
    b88d:	49 8b 0c 24          	mov    (%r12),%rcx
    b891:	48 8d 51 08          	lea    0x8(%rcx),%rdx
    b895:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
    b899:	49 89 14 24          	mov    %rdx,(%r12)
    b89d:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b8a2:	4c 8b 11             	mov    (%rcx),%r10
    b8a5:	be 05 00 00 00       	mov    $0x5,%esi
    b8aa:	48 bd 00 00 00 00 ff 	movabs $0xffffffff00000000,%rbp
    b8b1:	ff ff ff 
    b8b4:	4c 21 d5             	and    %r10,%rbp
    b8b7:	44 89 d2             	mov    %r10d,%edx
    b8ba:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    b8c0:	44 89 d1             	mov    %r10d,%ecx
    b8c3:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b8c9:	e9 60 fc ff ff       	jmpq   b52e <gimli::read::unit::parse_attribute+0xc6e>
    b8ce:	49 8b 45 00          	mov    0x0(%r13),%rax
    b8d2:	48 83 f8 03          	cmp    $0x3,%rax
    b8d6:	0f 86 c5 01 00 00    	jbe    baa1 <gimli::read::unit::parse_attribute+0x11e1>
    b8dc:	49 8b 0c 24          	mov    (%r12),%rcx
    b8e0:	48 8d 51 04          	lea    0x4(%rcx),%rdx
    b8e4:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    b8e8:	49 89 14 24          	mov    %rdx,(%r12)
    b8ec:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b8f1:	44 8b 11             	mov    (%rcx),%r10d
    b8f4:	e9 d6 01 00 00       	jmpq   bacf <gimli::read::unit::parse_attribute+0x120f>
    b8f9:	49 8d 0c 3a          	lea    (%r10,%rdi,1),%rcx
    b8fd:	49 89 0c 24          	mov    %rcx,(%r12)
    b901:	48 89 c2             	mov    %rax,%rdx
    b904:	48 29 fa             	sub    %rdi,%rdx
    b907:	49 89 54 24 08       	mov    %rdx,0x8(%r12)
    b90c:	0f 85 ee 00 00 00    	jne    ba00 <gimli::read::unit::parse_attribute+0x1140>
    b912:	31 c0                	xor    %eax,%eax
    b914:	49 89 ca             	mov    %rcx,%r10
    b917:	e9 11 f5 ff ff       	jmpq   ae2d <gimli::read::unit::parse_attribute+0x56d>
    b91c:	48 39 fd             	cmp    %rdi,%rbp
    b91f:	72 4f                	jb     b970 <gimli::read::unit::parse_attribute+0x10b0>
    b921:	48 8d 04 3b          	lea    (%rbx,%rdi,1),%rax
    b925:	4c 01 d8             	add    %r11,%rax
    b928:	48 83 c0 01          	add    $0x1,%rax
    b92c:	49 29 f9             	sub    %rdi,%r9
    b92f:	48 f7 d3             	not    %rbx
    b932:	4c 01 cb             	add    %r9,%rbx
    b935:	49 89 04 24          	mov    %rax,(%r12)
    b939:	49 89 5c 24 08       	mov    %rbx,0x8(%r12)
    b93e:	44 89 d1             	mov    %r10d,%ecx
    b941:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b947:	44 89 d2             	mov    %r10d,%edx
    b94a:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    b950:	48 bd 00 00 00 00 ff 	movabs $0xffffffff00000000,%rbp
    b957:	ff ff ff 
    b95a:	4c 21 d5             	and    %r10,%rbp
    b95d:	be 08 00 00 00       	mov    $0x8,%esi
    b962:	e9 c7 fb ff ff       	jmpq   b52e <gimli::read::unit::parse_attribute+0xc6e>
    b967:	48 39 fd             	cmp    %rdi,%rbp
    b96a:	0f 83 f8 00 00 00    	jae    ba68 <gimli::read::unit::parse_attribute+0x11a8>
    b970:	b8 13 00 00 00       	mov    $0x13,%eax
    b975:	4d 89 d0             	mov    %r10,%r8
    b978:	4d 89 47 10          	mov    %r8,0x10(%r15)
    b97c:	49 89 47 08          	mov    %rax,0x8(%r15)
    b980:	e9 67 f0 ff ff       	jmpq   a9ec <gimli::read::unit::parse_attribute+0x12c>
    b985:	44 89 d1             	mov    %r10d,%ecx
    b988:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b98e:	44 89 d2             	mov    %r10d,%edx
    b991:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    b997:	48 bd 00 00 00 00 ff 	movabs $0xffffffff00000000,%rbp
    b99e:	ff ff ff 
    b9a1:	4c 21 d5             	and    %r10,%rbp
    b9a4:	be 07 00 00 00       	mov    $0x7,%esi
    b9a9:	e9 80 fb ff ff       	jmpq   b52e <gimli::read::unit::parse_attribute+0xc6e>
    b9ae:	44 89 d1             	mov    %r10d,%ecx
    b9b1:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b9b7:	44 89 d2             	mov    %r10d,%edx
    b9ba:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    b9c0:	48 bd 00 00 00 00 ff 	movabs $0xffffffff00000000,%rbp
    b9c7:	ff ff ff 
    b9ca:	4c 21 d5             	and    %r10,%rbp
    b9cd:	be 13 00 00 00       	mov    $0x13,%esi
    b9d2:	e9 57 fb ff ff       	jmpq   b52e <gimli::read::unit::parse_attribute+0xc6e>
    b9d7:	44 89 d1             	mov    %r10d,%ecx
    b9da:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b9e0:	44 89 d2             	mov    %r10d,%edx
    b9e3:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    b9e9:	48 bd 00 00 00 00 ff 	movabs $0xffffffff00000000,%rbp
    b9f0:	ff ff ff 
    b9f3:	4c 21 d5             	and    %r10,%rbp
    b9f6:	be 18 00 00 00       	mov    $0x18,%esi
    b9fb:	e9 2e fb ff ff       	jmpq   b52e <gimli::read::unit::parse_attribute+0xc6e>
    ba00:	49 8d 0c 3a          	lea    (%r10,%rdi,1),%rcx
    ba04:	48 83 c1 01          	add    $0x1,%rcx
    ba08:	48 89 fa             	mov    %rdi,%rdx
    ba0b:	48 f7 d2             	not    %rdx
    ba0e:	48 01 c2             	add    %rax,%rdx
    ba11:	49 89 0c 24          	mov    %rcx,(%r12)
    ba15:	49 89 54 24 08       	mov    %rdx,0x8(%r12)
    ba1a:	44 89 d1             	mov    %r10d,%ecx
    ba1d:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    ba23:	44 89 d2             	mov    %r10d,%edx
    ba26:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    ba2c:	48 bd 00 00 00 00 ff 	movabs $0xffffffff00000000,%rbp
    ba33:	ff ff ff 
    ba36:	4c 21 d5             	and    %r10,%rbp
    ba39:	be 1f 00 00 00       	mov    $0x1f,%esi
    ba3e:	e9 eb fa ff ff       	jmpq   b52e <gimli::read::unit::parse_attribute+0xc6e>
    ba43:	49 8b 45 00          	mov    0x0(%r13),%rax
    ba47:	48 83 f8 01          	cmp    $0x1,%rax
    ba4b:	76 54                	jbe    baa1 <gimli::read::unit::parse_attribute+0x11e1>
    ba4d:	49 8b 0c 24          	mov    (%r12),%rcx
    ba51:	48 8d 51 02          	lea    0x2(%rcx),%rdx
    ba55:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    ba59:	49 89 14 24          	mov    %rdx,(%r12)
    ba5d:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    ba62:	44 0f b7 11          	movzwl (%rcx),%r10d
    ba66:	eb 67                	jmp    bacf <gimli::read::unit::parse_attribute+0x120f>
    ba68:	48 8d 04 3b          	lea    (%rbx,%rdi,1),%rax
    ba6c:	4c 01 d8             	add    %r11,%rax
    ba6f:	48 83 c0 01          	add    $0x1,%rax
    ba73:	49 29 f9             	sub    %rdi,%r9
    ba76:	48 f7 d3             	not    %rbx
    ba79:	4c 01 cb             	add    %r9,%rbx
    ba7c:	49 89 04 24          	mov    %rax,(%r12)
    ba80:	49 89 5c 24 08       	mov    %rbx,0x8(%r12)
    ba85:	e9 63 f4 ff ff       	jmpq   aeed <gimli::read::unit::parse_attribute+0x62d>
    ba8a:	c1 e2 08             	shl    $0x8,%edx
    ba8d:	83 ca 18             	or     $0x18,%edx
    ba90:	0f b7 ca             	movzwl %dx,%ecx
    ba93:	31 c0                	xor    %eax,%eax
    ba95:	eb 13                	jmp    baaa <gimli::read::unit::parse_attribute+0x11ea>
    ba97:	49 8b 45 00          	mov    0x0(%r13),%rax
    ba9b:	48 83 f8 08          	cmp    $0x8,%rax
    ba9f:	73 16                	jae    bab7 <gimli::read::unit::parse_attribute+0x11f7>
    baa1:	49 8b 04 24          	mov    (%r12),%rax
    baa5:	b9 13 00 00 00       	mov    $0x13,%ecx
    baaa:	49 89 47 10          	mov    %rax,0x10(%r15)
    baae:	49 89 4f 08          	mov    %rcx,0x8(%r15)
    bab2:	e9 35 ef ff ff       	jmpq   a9ec <gimli::read::unit::parse_attribute+0x12c>
    bab7:	49 8b 0c 24          	mov    (%r12),%rcx
    babb:	48 8d 51 08          	lea    0x8(%rcx),%rdx
    babf:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
    bac3:	49 89 14 24          	mov    %rdx,(%r12)
    bac7:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    bacc:	4c 8b 11             	mov    (%rcx),%r10
    bacf:	44 89 d1             	mov    %r10d,%ecx
    bad2:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    bad8:	44 89 d2             	mov    %r10d,%edx
    badb:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    bae1:	48 bd 00 00 00 00 ff 	movabs $0xffffffff00000000,%rbp
    bae8:	ff ff ff 
    baeb:	4c 21 d5             	and    %r10,%rbp
    baee:	be 0e 00 00 00       	mov    $0xe,%esi
    baf3:	e9 36 fa ff ff       	jmpq   b52e <gimli::read::unit::parse_attribute+0xc6e>
    baf8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    baff:	00 

000000000000bb00 <gimli::read::unit::Attribute<R>::value>:
    bb00:	8b 46 18             	mov    0x18(%rsi),%eax
    bb03:	83 c0 fe             	add    $0xfffffffe,%eax
    bb06:	0f b7 c8             	movzwl %ax,%ecx
    bb09:	81 f9 8a 00 00 00    	cmp    $0x8a,%ecx
    bb0f:	0f 87 70 07 00 00    	ja     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    bb15:	0f b7 c0             	movzwl %ax,%eax
    bb18:	48 8d 0d 5d aa 02 00 	lea    0x2aa5d(%rip),%rcx        # 3657c <_fini+0xc58>
    bb1f:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    bb23:	48 01 c8             	add    %rcx,%rax
    bb26:	ff e0                	jmpq   *%rax
    bb28:	48 8b 06             	mov    (%rsi),%rax
    bb2b:	48 83 f8 08          	cmp    $0x8,%rax
    bb2f:	0f 84 96 03 00 00    	je     becb <gimli::read::unit::Attribute<R>::value+0x3cb>
    bb35:	83 f8 01             	cmp    $0x1,%eax
    bb38:	0f 84 8d 03 00 00    	je     becb <gimli::read::unit::Attribute<R>::value+0x3cb>
    bb3e:	e9 42 07 00 00       	jmpq   c285 <gimli::read::unit::Attribute<R>::value+0x785>
    bb43:	48 8b 06             	mov    (%rsi),%rax
    bb46:	48 83 f8 01          	cmp    $0x1,%rax
    bb4a:	0f 84 7b 03 00 00    	je     becb <gimli::read::unit::Attribute<R>::value+0x3cb>
    bb50:	83 f8 0a             	cmp    $0xa,%eax
    bb53:	74 6a                	je     bbbf <gimli::read::unit::Attribute<R>::value+0xbf>
    bb55:	83 f8 08             	cmp    $0x8,%eax
    bb58:	0f 85 27 07 00 00    	jne    c285 <gimli::read::unit::Attribute<R>::value+0x785>
    bb5e:	e9 68 03 00 00       	jmpq   becb <gimli::read::unit::Attribute<R>::value+0x3cb>
    bb63:	48 8b 06             	mov    (%rsi),%rax
    bb66:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    bb6a:	48 83 f8 07          	cmp    $0x7,%rax
    bb6e:	0f 87 11 07 00 00    	ja     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    bb74:	48 8d 0d 45 ae 02 00 	lea    0x2ae45(%rip),%rcx        # 369c0 <_fini+0x109c>
    bb7b:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    bb7f:	48 01 c8             	add    %rcx,%rax
    bb82:	ff e0                	jmpq   *%rax
    bb84:	48 83 3e 0a          	cmpq   $0xa,(%rsi)
    bb88:	0f 85 f7 06 00 00    	jne    c285 <gimli::read::unit::Attribute<R>::value+0x785>
    bb8e:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bb92:	48 89 47 08          	mov    %rax,0x8(%rdi)
    bb96:	48 c7 07 16 00 00 00 	movq   $0x16,(%rdi)
    bb9d:	c3                   	retq   
    bb9e:	48 8b 06             	mov    (%rsi),%rax
    bba1:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    bba5:	48 83 f8 09          	cmp    $0x9,%rax
    bba9:	0f 87 d6 06 00 00    	ja     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    bbaf:	48 8d 0d a2 ac 02 00 	lea    0x2aca2(%rip),%rcx        # 36858 <_fini+0xf34>
    bbb6:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    bbba:	48 01 c8             	add    %rcx,%rax
    bbbd:	ff e0                	jmpq   *%rax
    bbbf:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bbc3:	48 89 47 08          	mov    %rax,0x8(%rdi)
    bbc7:	48 c7 07 11 00 00 00 	movq   $0x11,(%rdi)
    bbce:	c3                   	retq   
    bbcf:	48 8b 06             	mov    (%rsi),%rax
    bbd2:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    bbd6:	48 83 f8 05          	cmp    $0x5,%rax
    bbda:	0f 87 a5 06 00 00    	ja     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    bbe0:	48 8d 0d 41 ac 02 00 	lea    0x2ac41(%rip),%rcx        # 36828 <_fini+0xf04>
    bbe7:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    bbeb:	48 01 c8             	add    %rcx,%rax
    bbee:	ff e0                	jmpq   *%rax
    bbf0:	48 8b 06             	mov    (%rsi),%rax
    bbf3:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    bbf7:	48 83 f8 05          	cmp    $0x5,%rax
    bbfb:	0f 87 84 06 00 00    	ja     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    bc01:	48 8d 0d 08 ac 02 00 	lea    0x2ac08(%rip),%rcx        # 36810 <_fini+0xeec>
    bc08:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    bc0c:	48 01 c8             	add    %rcx,%rax
    bc0f:	ff e0                	jmpq   *%rax
    bc11:	48 8b 06             	mov    (%rsi),%rax
    bc14:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    bc18:	48 83 f8 05          	cmp    $0x5,%rax
    bc1c:	0f 87 63 06 00 00    	ja     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    bc22:	48 8d 0d 1f ad 02 00 	lea    0x2ad1f(%rip),%rcx        # 36948 <_fini+0x1024>
    bc29:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    bc2d:	48 01 c8             	add    %rcx,%rax
    bc30:	ff e0                	jmpq   *%rax
    bc32:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bc36:	e9 19 04 00 00       	jmpq   c054 <gimli::read::unit::Attribute<R>::value+0x554>
    bc3b:	48 83 3e 0a          	cmpq   $0xa,(%rsi)
    bc3f:	0f 85 40 06 00 00    	jne    c285 <gimli::read::unit::Attribute<R>::value+0x785>
    bc45:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bc49:	48 89 47 08          	mov    %rax,0x8(%rdi)
    bc4d:	48 c7 07 1c 00 00 00 	movq   $0x1c,(%rdi)
    bc54:	c3                   	retq   
    bc55:	48 83 3e 0a          	cmpq   $0xa,(%rsi)
    bc59:	0f 85 26 06 00 00    	jne    c285 <gimli::read::unit::Attribute<R>::value+0x785>
    bc5f:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bc63:	48 89 47 08          	mov    %rax,0x8(%rdi)
    bc67:	48 c7 07 15 00 00 00 	movq   $0x15,(%rdi)
    bc6e:	c3                   	retq   
    bc6f:	48 8b 06             	mov    (%rsi),%rax
    bc72:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    bc76:	48 83 f8 05          	cmp    $0x5,%rax
    bc7a:	0f 87 05 06 00 00    	ja     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    bc80:	48 8d 0d 59 ad 02 00 	lea    0x2ad59(%rip),%rcx        # 369e0 <_fini+0x10bc>
    bc87:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    bc8b:	48 01 c8             	add    %rcx,%rax
    bc8e:	ff e0                	jmpq   *%rax
    bc90:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bc94:	e9 f0 03 00 00       	jmpq   c089 <gimli::read::unit::Attribute<R>::value+0x589>
    bc99:	48 83 3e 0a          	cmpq   $0xa,(%rsi)
    bc9d:	0f 85 e2 05 00 00    	jne    c285 <gimli::read::unit::Attribute<R>::value+0x785>
    bca3:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bca7:	48 89 47 08          	mov    %rax,0x8(%rdi)
    bcab:	48 c7 07 10 00 00 00 	movq   $0x10,(%rdi)
    bcb2:	c3                   	retq   
    bcb3:	48 8b 06             	mov    (%rsi),%rax
    bcb6:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    bcba:	48 83 f8 05          	cmp    $0x5,%rax
    bcbe:	0f 87 c1 05 00 00    	ja     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    bcc4:	48 8d 0d dd ac 02 00 	lea    0x2acdd(%rip),%rcx        # 369a8 <_fini+0x1084>
    bccb:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    bccf:	48 01 c8             	add    %rcx,%rax
    bcd2:	ff e0                	jmpq   *%rax
    bcd4:	48 8b 06             	mov    (%rsi),%rax
    bcd7:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    bcdb:	48 83 f8 05          	cmp    $0x5,%rax
    bcdf:	0f 87 a0 05 00 00    	ja     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    bce5:	48 8d 0d a4 ac 02 00 	lea    0x2aca4(%rip),%rcx        # 36990 <_fini+0x106c>
    bcec:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    bcf0:	48 01 c8             	add    %rcx,%rax
    bcf3:	ff e0                	jmpq   *%rax
    bcf5:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bcf9:	e9 c0 03 00 00       	jmpq   c0be <gimli::read::unit::Attribute<R>::value+0x5be>
    bcfe:	48 8b 06             	mov    (%rsi),%rax
    bd01:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    bd05:	48 83 f8 05          	cmp    $0x5,%rax
    bd09:	0f 87 76 05 00 00    	ja     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    bd0f:	48 8d 0d 62 ac 02 00 	lea    0x2ac62(%rip),%rcx        # 36978 <_fini+0x1054>
    bd16:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    bd1a:	48 01 c8             	add    %rcx,%rax
    bd1d:	ff e0                	jmpq   *%rax
    bd1f:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bd23:	e9 cc 03 00 00       	jmpq   c0f4 <gimli::read::unit::Attribute<R>::value+0x5f4>
    bd28:	48 8b 06             	mov    (%rsi),%rax
    bd2b:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    bd2f:	48 83 f8 05          	cmp    $0x5,%rax
    bd33:	0f 87 4c 05 00 00    	ja     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    bd39:	48 8d 0d 20 ac 02 00 	lea    0x2ac20(%rip),%rcx        # 36960 <_fini+0x103c>
    bd40:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    bd44:	48 01 c8             	add    %rcx,%rax
    bd47:	ff e0                	jmpq   *%rax
    bd49:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bd4d:	e9 d7 03 00 00       	jmpq   c129 <gimli::read::unit::Attribute<R>::value+0x629>
    bd52:	48 8b 06             	mov    (%rsi),%rax
    bd55:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    bd59:	48 83 f8 07          	cmp    $0x7,%rax
    bd5d:	0f 87 22 05 00 00    	ja     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    bd63:	48 8d 0d a6 ab 02 00 	lea    0x2aba6(%rip),%rcx        # 36910 <_fini+0xfec>
    bd6a:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    bd6e:	48 01 c8             	add    %rcx,%rax
    bd71:	ff e0                	jmpq   *%rax
    bd73:	48 8b 06             	mov    (%rsi),%rax
    bd76:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    bd7a:	48 83 f8 05          	cmp    $0x5,%rax
    bd7e:	0f 87 01 05 00 00    	ja     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    bd84:	48 8d 0d 55 ab 02 00 	lea    0x2ab55(%rip),%rcx        # 368e0 <_fini+0xfbc>
    bd8b:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    bd8f:	48 01 c8             	add    %rcx,%rax
    bd92:	ff e0                	jmpq   *%rax
    bd94:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bd98:	e9 c1 03 00 00       	jmpq   c15e <gimli::read::unit::Attribute<R>::value+0x65e>
    bd9d:	48 8b 06             	mov    (%rsi),%rax
    bda0:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    bda4:	48 83 f8 05          	cmp    $0x5,%rax
    bda8:	0f 87 d7 04 00 00    	ja     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    bdae:	48 8d 0d 13 ab 02 00 	lea    0x2ab13(%rip),%rcx        # 368c8 <_fini+0xfa4>
    bdb5:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    bdb9:	48 01 c8             	add    %rcx,%rax
    bdbc:	ff e0                	jmpq   *%rax
    bdbe:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bdc2:	e9 cc 03 00 00       	jmpq   c193 <gimli::read::unit::Attribute<R>::value+0x693>
    bdc7:	48 8b 06             	mov    (%rsi),%rax
    bdca:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    bdce:	48 83 f8 05          	cmp    $0x5,%rax
    bdd2:	0f 87 ad 04 00 00    	ja     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    bdd8:	48 8d 0d a1 aa 02 00 	lea    0x2aaa1(%rip),%rcx        # 36880 <_fini+0xf5c>
    bddf:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    bde3:	48 01 c8             	add    %rcx,%rax
    bde6:	ff e0                	jmpq   *%rax
    bde8:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bdec:	e9 cc 03 00 00       	jmpq   c1bd <gimli::read::unit::Attribute<R>::value+0x6bd>
    bdf1:	48 8b 06             	mov    (%rsi),%rax
    bdf4:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    bdf8:	48 83 f8 05          	cmp    $0x5,%rax
    bdfc:	0f 87 83 04 00 00    	ja     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    be02:	48 8d 0d 37 aa 02 00 	lea    0x2aa37(%rip),%rcx        # 36840 <_fini+0xf1c>
    be09:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    be0d:	48 01 c8             	add    %rcx,%rax
    be10:	ff e0                	jmpq   *%rax
    be12:	48 8b 06             	mov    (%rsi),%rax
    be15:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    be19:	48 83 f8 05          	cmp    $0x5,%rax
    be1d:	0f 87 62 04 00 00    	ja     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    be23:	48 8d 0d ae a9 02 00 	lea    0x2a9ae(%rip),%rcx        # 367d8 <_fini+0xeb4>
    be2a:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    be2e:	48 01 c8             	add    %rcx,%rax
    be31:	ff e0                	jmpq   *%rax
    be33:	48 8b 46 08          	mov    0x8(%rsi),%rax
    be37:	e9 b6 03 00 00       	jmpq   c1f2 <gimli::read::unit::Attribute<R>::value+0x6f2>
    be3c:	48 8b 06             	mov    (%rsi),%rax
    be3f:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    be43:	48 83 f8 05          	cmp    $0x5,%rax
    be47:	0f 87 38 04 00 00    	ja     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    be4d:	48 8d 0d 6c a9 02 00 	lea    0x2a96c(%rip),%rcx        # 367c0 <_fini+0xe9c>
    be54:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    be58:	48 01 c8             	add    %rcx,%rax
    be5b:	ff e0                	jmpq   *%rax
    be5d:	48 8b 46 08          	mov    0x8(%rsi),%rax
    be61:	e9 bd 03 00 00       	jmpq   c223 <gimli::read::unit::Attribute<R>::value+0x723>
    be66:	48 83 3e 0a          	cmpq   $0xa,(%rsi)
    be6a:	0f 85 15 04 00 00    	jne    c285 <gimli::read::unit::Attribute<R>::value+0x785>
    be70:	48 8b 46 08          	mov    0x8(%rsi),%rax
    be74:	48 89 47 08          	mov    %rax,0x8(%rdi)
    be78:	48 c7 07 14 00 00 00 	movq   $0x14,(%rdi)
    be7f:	c3                   	retq   
    be80:	48 8b 06             	mov    (%rsi),%rax
    be83:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    be87:	48 83 f8 05          	cmp    $0x5,%rax
    be8b:	0f 87 f4 03 00 00    	ja     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    be91:	48 8d 0d 10 a9 02 00 	lea    0x2a910(%rip),%rcx        # 367a8 <_fini+0xe84>
    be98:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    be9c:	48 01 c8             	add    %rcx,%rax
    be9f:	ff e0                	jmpq   *%rax
    bea1:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bea5:	e9 a6 03 00 00       	jmpq   c250 <gimli::read::unit::Attribute<R>::value+0x750>
    beaa:	48 8b 06             	mov    (%rsi),%rax
    bead:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    beb1:	48 83 f8 07          	cmp    $0x7,%rax
    beb5:	0f 87 ca 03 00 00    	ja     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    bebb:	48 8d 0d 2e a9 02 00 	lea    0x2a92e(%rip),%rcx        # 367f0 <_fini+0xecc>
    bec2:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    bec6:	48 01 c8             	add    %rcx,%rax
    bec9:	ff e0                	jmpq   *%rax
    becb:	0f 10 46 08          	movups 0x8(%rsi),%xmm0
    becf:	0f 11 47 08          	movups %xmm0,0x8(%rdi)
    bed3:	48 c7 07 08 00 00 00 	movq   $0x8,(%rdi)
    beda:	c3                   	retq   
    bedb:	48 8b 06             	mov    (%rsi),%rax
    bede:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    bee2:	48 83 f8 05          	cmp    $0x5,%rax
    bee6:	0f 87 99 03 00 00    	ja     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    beec:	48 8d 0d a5 a9 02 00 	lea    0x2a9a5(%rip),%rcx        # 36898 <_fini+0xf74>
    bef3:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    bef7:	48 01 c8             	add    %rcx,%rax
    befa:	ff e0                	jmpq   *%rax
    befc:	48 8b 06             	mov    (%rsi),%rax
    beff:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    bf03:	48 83 f8 05          	cmp    $0x5,%rax
    bf07:	0f 87 78 03 00 00    	ja     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    bf0d:	48 8d 0d 9c a9 02 00 	lea    0x2a99c(%rip),%rcx        # 368b0 <_fini+0xf8c>
    bf14:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    bf18:	48 01 c8             	add    %rcx,%rax
    bf1b:	ff e0                	jmpq   *%rax
    bf1d:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bf21:	e9 04 01 00 00       	jmpq   c02a <gimli::read::unit::Attribute<R>::value+0x52a>
    bf26:	48 8b 06             	mov    (%rsi),%rax
    bf29:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    bf2d:	48 83 f8 05          	cmp    $0x5,%rax
    bf31:	0f 87 4e 03 00 00    	ja     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    bf37:	48 8d 0d ba a9 02 00 	lea    0x2a9ba(%rip),%rcx        # 368f8 <_fini+0xfd4>
    bf3e:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    bf42:	48 01 c8             	add    %rcx,%rax
    bf45:	ff e0                	jmpq   *%rax
    bf47:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bf4b:	48 89 47 08          	mov    %rax,0x8(%rdi)
    bf4f:	48 c7 07 07 00 00 00 	movq   $0x7,(%rdi)
    bf56:	c3                   	retq   
    bf57:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bf5b:	48 85 c0             	test   %rax,%rax
    bf5e:	79 eb                	jns    bf4b <gimli::read::unit::Attribute<R>::value+0x44b>
    bf60:	e9 20 03 00 00       	jmpq   c285 <gimli::read::unit::Attribute<R>::value+0x785>
    bf65:	0f b6 46 08          	movzbl 0x8(%rsi),%eax
    bf69:	48 89 47 08          	mov    %rax,0x8(%rdi)
    bf6d:	48 c7 07 07 00 00 00 	movq   $0x7,(%rdi)
    bf74:	c3                   	retq   
    bf75:	8b 46 08             	mov    0x8(%rsi),%eax
    bf78:	48 89 47 08          	mov    %rax,0x8(%rdi)
    bf7c:	48 c7 07 07 00 00 00 	movq   $0x7,(%rdi)
    bf83:	c3                   	retq   
    bf84:	0f b7 46 08          	movzwl 0x8(%rsi),%eax
    bf88:	48 89 47 08          	mov    %rax,0x8(%rdi)
    bf8c:	48 c7 07 07 00 00 00 	movq   $0x7,(%rdi)
    bf93:	c3                   	retq   
    bf94:	48 8b 06             	mov    (%rsi),%rax
    bf97:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    bf9b:	48 83 f8 05          	cmp    $0x5,%rax
    bf9f:	0f 87 e0 02 00 00    	ja     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    bfa5:	48 8d 0d 84 a9 02 00 	lea    0x2a984(%rip),%rcx        # 36930 <_fini+0x100c>
    bfac:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    bfb0:	48 01 c8             	add    %rcx,%rax
    bfb3:	ff e0                	jmpq   *%rax
    bfb5:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bfb9:	e9 bf 02 00 00       	jmpq   c27d <gimli::read::unit::Attribute<R>::value+0x77d>
    bfbe:	48 83 3e 0a          	cmpq   $0xa,(%rsi)
    bfc2:	0f 85 bd 02 00 00    	jne    c285 <gimli::read::unit::Attribute<R>::value+0x785>
    bfc8:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bfcc:	48 89 47 08          	mov    %rax,0x8(%rdi)
    bfd0:	48 c7 07 0b 00 00 00 	movq   $0xb,(%rdi)
    bfd7:	c3                   	retq   
    bfd8:	48 83 3e 0a          	cmpq   $0xa,(%rsi)
    bfdc:	0f 85 a3 02 00 00    	jne    c285 <gimli::read::unit::Attribute<R>::value+0x785>
    bfe2:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bfe6:	48 89 47 08          	mov    %rax,0x8(%rdi)
    bfea:	48 c7 07 17 00 00 00 	movq   $0x17,(%rdi)
    bff1:	c3                   	retq   
    bff2:	48 83 3e 0a          	cmpq   $0xa,(%rsi)
    bff6:	0f 85 89 02 00 00    	jne    c285 <gimli::read::unit::Attribute<R>::value+0x785>
    bffc:	48 8b 46 08          	mov    0x8(%rsi),%rax
    c000:	48 89 47 08          	mov    %rax,0x8(%rdi)
    c004:	48 c7 07 12 00 00 00 	movq   $0x12,(%rdi)
    c00b:	c3                   	retq   
    c00c:	0f b6 46 08          	movzbl 0x8(%rsi),%eax
    c010:	eb 18                	jmp    c02a <gimli::read::unit::Attribute<R>::value+0x52a>
    c012:	0f b7 46 08          	movzwl 0x8(%rsi),%eax
    c016:	eb 12                	jmp    c02a <gimli::read::unit::Attribute<R>::value+0x52a>
    c018:	8b 46 08             	mov    0x8(%rsi),%eax
    c01b:	eb 0d                	jmp    c02a <gimli::read::unit::Attribute<R>::value+0x52a>
    c01d:	48 8b 46 08          	mov    0x8(%rsi),%rax
    c021:	48 85 c0             	test   %rax,%rax
    c024:	0f 88 5b 02 00 00    	js     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    c02a:	48 89 47 08          	mov    %rax,0x8(%rdi)
    c02e:	48 c7 07 2c 00 00 00 	movq   $0x2c,(%rdi)
    c035:	c3                   	retq   
    c036:	0f b6 46 08          	movzbl 0x8(%rsi),%eax
    c03a:	eb 24                	jmp    c060 <gimli::read::unit::Attribute<R>::value+0x560>
    c03c:	0f b7 46 08          	movzwl 0x8(%rsi),%eax
    c040:	eb 12                	jmp    c054 <gimli::read::unit::Attribute<R>::value+0x554>
    c042:	8b 46 08             	mov    0x8(%rsi),%eax
    c045:	eb 0d                	jmp    c054 <gimli::read::unit::Attribute<R>::value+0x554>
    c047:	48 8b 46 08          	mov    0x8(%rsi),%rax
    c04b:	48 85 c0             	test   %rax,%rax
    c04e:	0f 88 31 02 00 00    	js     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    c054:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    c05a:	0f 87 25 02 00 00    	ja     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    c060:	88 47 08             	mov    %al,0x8(%rdi)
    c063:	48 c7 07 22 00 00 00 	movq   $0x22,(%rdi)
    c06a:	c3                   	retq   
    c06b:	0f b6 46 08          	movzbl 0x8(%rsi),%eax
    c06f:	eb 24                	jmp    c095 <gimli::read::unit::Attribute<R>::value+0x595>
    c071:	0f b7 46 08          	movzwl 0x8(%rsi),%eax
    c075:	eb 12                	jmp    c089 <gimli::read::unit::Attribute<R>::value+0x589>
    c077:	8b 46 08             	mov    0x8(%rsi),%eax
    c07a:	eb 0d                	jmp    c089 <gimli::read::unit::Attribute<R>::value+0x589>
    c07c:	48 8b 46 08          	mov    0x8(%rsi),%rax
    c080:	48 85 c0             	test   %rax,%rax
    c083:	0f 88 fc 01 00 00    	js     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    c089:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    c08f:	0f 87 f0 01 00 00    	ja     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    c095:	88 47 08             	mov    %al,0x8(%rdi)
    c098:	48 c7 07 2b 00 00 00 	movq   $0x2b,(%rdi)
    c09f:	c3                   	retq   
    c0a0:	0f b6 46 08          	movzbl 0x8(%rsi),%eax
    c0a4:	eb 24                	jmp    c0ca <gimli::read::unit::Attribute<R>::value+0x5ca>
    c0a6:	0f b7 46 08          	movzwl 0x8(%rsi),%eax
    c0aa:	eb 1e                	jmp    c0ca <gimli::read::unit::Attribute<R>::value+0x5ca>
    c0ac:	8b 46 08             	mov    0x8(%rsi),%eax
    c0af:	eb 0d                	jmp    c0be <gimli::read::unit::Attribute<R>::value+0x5be>
    c0b1:	48 8b 46 08          	mov    0x8(%rsi),%rax
    c0b5:	48 85 c0             	test   %rax,%rax
    c0b8:	0f 88 c7 01 00 00    	js     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    c0be:	48 3d ff ff 00 00    	cmp    $0xffff,%rax
    c0c4:	0f 87 bb 01 00 00    	ja     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    c0ca:	66 89 47 08          	mov    %ax,0x8(%rdi)
    c0ce:	48 c7 07 26 00 00 00 	movq   $0x26,(%rdi)
    c0d5:	c3                   	retq   
    c0d6:	0f b6 46 08          	movzbl 0x8(%rsi),%eax
    c0da:	eb 24                	jmp    c100 <gimli::read::unit::Attribute<R>::value+0x600>
    c0dc:	0f b7 46 08          	movzwl 0x8(%rsi),%eax
    c0e0:	eb 12                	jmp    c0f4 <gimli::read::unit::Attribute<R>::value+0x5f4>
    c0e2:	8b 46 08             	mov    0x8(%rsi),%eax
    c0e5:	eb 0d                	jmp    c0f4 <gimli::read::unit::Attribute<R>::value+0x5f4>
    c0e7:	48 8b 46 08          	mov    0x8(%rsi),%rax
    c0eb:	48 85 c0             	test   %rax,%rax
    c0ee:	0f 88 91 01 00 00    	js     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    c0f4:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    c0fa:	0f 87 85 01 00 00    	ja     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    c100:	88 47 08             	mov    %al,0x8(%rdi)
    c103:	48 c7 07 24 00 00 00 	movq   $0x24,(%rdi)
    c10a:	c3                   	retq   
    c10b:	0f b6 46 08          	movzbl 0x8(%rsi),%eax
    c10f:	eb 24                	jmp    c135 <gimli::read::unit::Attribute<R>::value+0x635>
    c111:	0f b7 46 08          	movzwl 0x8(%rsi),%eax
    c115:	eb 12                	jmp    c129 <gimli::read::unit::Attribute<R>::value+0x629>
    c117:	8b 46 08             	mov    0x8(%rsi),%eax
    c11a:	eb 0d                	jmp    c129 <gimli::read::unit::Attribute<R>::value+0x629>
    c11c:	48 8b 46 08          	mov    0x8(%rsi),%rax
    c120:	48 85 c0             	test   %rax,%rax
    c123:	0f 88 5c 01 00 00    	js     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    c129:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    c12f:	0f 87 50 01 00 00    	ja     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    c135:	88 47 08             	mov    %al,0x8(%rdi)
    c138:	48 c7 07 2a 00 00 00 	movq   $0x2a,(%rdi)
    c13f:	c3                   	retq   
    c140:	0f b6 46 08          	movzbl 0x8(%rsi),%eax
    c144:	eb 24                	jmp    c16a <gimli::read::unit::Attribute<R>::value+0x66a>
    c146:	0f b7 46 08          	movzwl 0x8(%rsi),%eax
    c14a:	eb 12                	jmp    c15e <gimli::read::unit::Attribute<R>::value+0x65e>
    c14c:	8b 46 08             	mov    0x8(%rsi),%eax
    c14f:	eb 0d                	jmp    c15e <gimli::read::unit::Attribute<R>::value+0x65e>
    c151:	48 8b 46 08          	mov    0x8(%rsi),%rax
    c155:	48 85 c0             	test   %rax,%rax
    c158:	0f 88 27 01 00 00    	js     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    c15e:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    c164:	0f 87 1b 01 00 00    	ja     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    c16a:	88 47 08             	mov    %al,0x8(%rdi)
    c16d:	48 c7 07 23 00 00 00 	movq   $0x23,(%rdi)
    c174:	c3                   	retq   
    c175:	0f b6 46 08          	movzbl 0x8(%rsi),%eax
    c179:	eb 18                	jmp    c193 <gimli::read::unit::Attribute<R>::value+0x693>
    c17b:	0f b7 46 08          	movzwl 0x8(%rsi),%eax
    c17f:	eb 12                	jmp    c193 <gimli::read::unit::Attribute<R>::value+0x693>
    c181:	8b 46 08             	mov    0x8(%rsi),%eax
    c184:	eb 0d                	jmp    c193 <gimli::read::unit::Attribute<R>::value+0x693>
    c186:	48 8b 46 08          	mov    0x8(%rsi),%rax
    c18a:	48 85 c0             	test   %rax,%rax
    c18d:	0f 88 f2 00 00 00    	js     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    c193:	48 89 47 08          	mov    %rax,0x8(%rdi)
    c197:	48 c7 07 27 00 00 00 	movq   $0x27,(%rdi)
    c19e:	c3                   	retq   
    c19f:	0f b6 46 08          	movzbl 0x8(%rsi),%eax
    c1a3:	eb 24                	jmp    c1c9 <gimli::read::unit::Attribute<R>::value+0x6c9>
    c1a5:	0f b7 46 08          	movzwl 0x8(%rsi),%eax
    c1a9:	eb 12                	jmp    c1bd <gimli::read::unit::Attribute<R>::value+0x6bd>
    c1ab:	8b 46 08             	mov    0x8(%rsi),%eax
    c1ae:	eb 0d                	jmp    c1bd <gimli::read::unit::Attribute<R>::value+0x6bd>
    c1b0:	48 8b 46 08          	mov    0x8(%rsi),%rax
    c1b4:	48 85 c0             	test   %rax,%rax
    c1b7:	0f 88 c8 00 00 00    	js     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    c1bd:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    c1c3:	0f 87 bc 00 00 00    	ja     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    c1c9:	88 47 08             	mov    %al,0x8(%rdi)
    c1cc:	48 c7 07 29 00 00 00 	movq   $0x29,(%rdi)
    c1d3:	c3                   	retq   
    c1d4:	0f b6 46 08          	movzbl 0x8(%rsi),%eax
    c1d8:	eb 24                	jmp    c1fe <gimli::read::unit::Attribute<R>::value+0x6fe>
    c1da:	0f b7 46 08          	movzwl 0x8(%rsi),%eax
    c1de:	eb 12                	jmp    c1f2 <gimli::read::unit::Attribute<R>::value+0x6f2>
    c1e0:	8b 46 08             	mov    0x8(%rsi),%eax
    c1e3:	eb 0d                	jmp    c1f2 <gimli::read::unit::Attribute<R>::value+0x6f2>
    c1e5:	48 8b 46 08          	mov    0x8(%rsi),%rax
    c1e9:	48 85 c0             	test   %rax,%rax
    c1ec:	0f 88 93 00 00 00    	js     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    c1f2:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    c1f8:	0f 87 87 00 00 00    	ja     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    c1fe:	88 47 08             	mov    %al,0x8(%rdi)
    c201:	48 c7 07 20 00 00 00 	movq   $0x20,(%rdi)
    c208:	c3                   	retq   
    c209:	0f b6 46 08          	movzbl 0x8(%rsi),%eax
    c20d:	eb 1c                	jmp    c22b <gimli::read::unit::Attribute<R>::value+0x72b>
    c20f:	0f b7 46 08          	movzwl 0x8(%rsi),%eax
    c213:	eb 0e                	jmp    c223 <gimli::read::unit::Attribute<R>::value+0x723>
    c215:	8b 46 08             	mov    0x8(%rsi),%eax
    c218:	eb 09                	jmp    c223 <gimli::read::unit::Attribute<R>::value+0x723>
    c21a:	48 8b 46 08          	mov    0x8(%rsi),%rax
    c21e:	48 85 c0             	test   %rax,%rax
    c221:	78 62                	js     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    c223:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    c229:	77 5a                	ja     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    c22b:	88 47 08             	mov    %al,0x8(%rdi)
    c22e:	48 c7 07 28 00 00 00 	movq   $0x28,(%rdi)
    c235:	c3                   	retq   
    c236:	0f b6 46 08          	movzbl 0x8(%rsi),%eax
    c23a:	eb 1c                	jmp    c258 <gimli::read::unit::Attribute<R>::value+0x758>
    c23c:	0f b7 46 08          	movzwl 0x8(%rsi),%eax
    c240:	eb 0e                	jmp    c250 <gimli::read::unit::Attribute<R>::value+0x750>
    c242:	8b 46 08             	mov    0x8(%rsi),%eax
    c245:	eb 09                	jmp    c250 <gimli::read::unit::Attribute<R>::value+0x750>
    c247:	48 8b 46 08          	mov    0x8(%rsi),%rax
    c24b:	48 85 c0             	test   %rax,%rax
    c24e:	78 35                	js     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    c250:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    c256:	77 2d                	ja     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    c258:	88 47 08             	mov    %al,0x8(%rdi)
    c25b:	48 c7 07 25 00 00 00 	movq   $0x25,(%rdi)
    c262:	c3                   	retq   
    c263:	0f b6 46 08          	movzbl 0x8(%rsi),%eax
    c267:	eb 21                	jmp    c28a <gimli::read::unit::Attribute<R>::value+0x78a>
    c269:	0f b7 46 08          	movzwl 0x8(%rsi),%eax
    c26d:	eb 0e                	jmp    c27d <gimli::read::unit::Attribute<R>::value+0x77d>
    c26f:	8b 46 08             	mov    0x8(%rsi),%eax
    c272:	eb 09                	jmp    c27d <gimli::read::unit::Attribute<R>::value+0x77d>
    c274:	48 8b 46 08          	mov    0x8(%rsi),%rax
    c278:	48 85 c0             	test   %rax,%rax
    c27b:	78 08                	js     c285 <gimli::read::unit::Attribute<R>::value+0x785>
    c27d:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    c283:	76 05                	jbe    c28a <gimli::read::unit::Attribute<R>::value+0x78a>
    c285:	e9 a6 0b 00 00       	jmpq   ce30 <<gimli::read::unit::AttributeValue<R,Offset> as core::clone::Clone>::clone>
    c28a:	88 47 08             	mov    %al,0x8(%rdi)
    c28d:	48 c7 07 21 00 00 00 	movq   $0x21,(%rdi)
    c294:	c3                   	retq   
    c295:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    c29c:	00 00 00 
    c29f:	90                   	nop

000000000000c2a0 <gimli::read::dwarf::Dwarf<R>::attr_string>:
    c2a0:	48 83 ec 18          	sub    $0x18,%rsp
    c2a4:	48 83 c1 e6          	add    $0xffffffffffffffe6,%rcx
    c2a8:	48 83 f9 05          	cmp    $0x5,%rcx
    c2ac:	0f 87 96 00 00 00    	ja     c348 <gimli::read::dwarf::Dwarf<R>::attr_string+0xa8>
    c2b2:	48 8d 05 3f a7 02 00 	lea    0x2a73f(%rip),%rax        # 369f8 <_fini+0x10d4>
    c2b9:	48 63 0c 88          	movslq (%rax,%rcx,4),%rcx
    c2bd:	48 01 c1             	add    %rax,%rcx
    c2c0:	ff e1                	jmpq   *%rcx
    c2c2:	48 8b 46 50          	mov    0x50(%rsi),%rax
    c2c6:	48 8b 4e 58          	mov    0x58(%rsi),%rcx
    c2ca:	4c 39 c1             	cmp    %r8,%rcx
    c2cd:	0f 82 52 01 00 00    	jb     c425 <gimli::read::dwarf::Dwarf<R>::attr_string+0x185>
    c2d3:	4c 01 c0             	add    %r8,%rax
    c2d6:	4c 29 c1             	sub    %r8,%rcx
    c2d9:	0f 84 46 01 00 00    	je     c425 <gimli::read::dwarf::Dwarf<R>::attr_string+0x185>
    c2df:	31 d2                	xor    %edx,%edx
    c2e1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    c2e8:	00 00 00 
    c2eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    c2f0:	80 3c 10 00          	cmpb   $0x0,(%rax,%rdx,1)
    c2f4:	0f 84 44 01 00 00    	je     c43e <gimli::read::dwarf::Dwarf<R>::attr_string+0x19e>
    c2fa:	48 83 c2 01          	add    $0x1,%rdx
    c2fe:	48 39 d1             	cmp    %rdx,%rcx
    c301:	75 ed                	jne    c2f0 <gimli::read::dwarf::Dwarf<R>::attr_string+0x50>
    c303:	e9 1d 01 00 00       	jmpq   c425 <gimli::read::dwarf::Dwarf<R>::attr_string+0x185>
    c308:	48 8b 46 70          	mov    0x70(%rsi),%rax
    c30c:	48 8b 4e 78          	mov    0x78(%rsi),%rcx
    c310:	4c 39 c1             	cmp    %r8,%rcx
    c313:	0f 82 0c 01 00 00    	jb     c425 <gimli::read::dwarf::Dwarf<R>::attr_string+0x185>
    c319:	4c 01 c0             	add    %r8,%rax
    c31c:	4c 29 c1             	sub    %r8,%rcx
    c31f:	0f 84 00 01 00 00    	je     c425 <gimli::read::dwarf::Dwarf<R>::attr_string+0x185>
    c325:	31 d2                	xor    %edx,%edx
    c327:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    c32e:	00 00 
    c330:	80 3c 10 00          	cmpb   $0x0,(%rax,%rdx,1)
    c334:	0f 84 04 01 00 00    	je     c43e <gimli::read::dwarf::Dwarf<R>::attr_string+0x19e>
    c33a:	48 83 c2 01          	add    $0x1,%rdx
    c33e:	48 39 d1             	cmp    %rdx,%rcx
    c341:	75 ed                	jne    c330 <gimli::read::dwarf::Dwarf<R>::attr_string+0x90>
    c343:	e9 dd 00 00 00       	jmpq   c425 <gimli::read::dwarf::Dwarf<R>::attr_string+0x185>
    c348:	c6 47 08 44          	movb   $0x44,0x8(%rdi)
    c34c:	e9 e0 00 00 00       	jmpq   c431 <gimli::read::dwarf::Dwarf<R>::attr_string+0x191>
    c351:	48 8b 82 90 00 00 00 	mov    0x90(%rdx),%rax
    c358:	4c 8b 56 60          	mov    0x60(%rsi),%r10
    c35c:	48 8b 4e 68          	mov    0x68(%rsi),%rcx
    c360:	41 b9 13 00 00 00    	mov    $0x13,%r9d
    c366:	48 29 c1             	sub    %rax,%rcx
    c369:	72 1f                	jb     c38a <gimli::read::dwarf::Dwarf<R>::attr_string+0xea>
    c36b:	8a 52 31             	mov    0x31(%rdx),%dl
    c36e:	49 01 c2             	add    %rax,%r10
    c371:	31 c0                	xor    %eax,%eax
    c373:	80 fa 08             	cmp    $0x8,%dl
    c376:	0f 94 c0             	sete   %al
    c379:	48 8d 04 85 04 00 00 	lea    0x4(,%rax,4),%rax
    c380:	00 
    c381:	49 0f af c0          	imul   %r8,%rax
    c385:	48 29 c1             	sub    %rax,%rcx
    c388:	73 59                	jae    c3e3 <gimli::read::dwarf::Dwarf<R>::attr_string+0x143>
    c38a:	4c 89 57 10          	mov    %r10,0x10(%rdi)
    c38e:	4c 89 4f 08          	mov    %r9,0x8(%rdi)
    c392:	48 c7 07 01 00 00 00 	movq   $0x1,(%rdi)
    c399:	48 83 c4 18          	add    $0x18,%rsp
    c39d:	c3                   	retq   
    c39e:	48 8b 46 40          	mov    0x40(%rsi),%rax
    c3a2:	48 8b 4e 48          	mov    0x48(%rsi),%rcx
    c3a6:	4c 39 c1             	cmp    %r8,%rcx
    c3a9:	72 7a                	jb     c425 <gimli::read::dwarf::Dwarf<R>::attr_string+0x185>
    c3ab:	4c 01 c0             	add    %r8,%rax
    c3ae:	4c 29 c1             	sub    %r8,%rcx
    c3b1:	74 72                	je     c425 <gimli::read::dwarf::Dwarf<R>::attr_string+0x185>
    c3b3:	31 d2                	xor    %edx,%edx
    c3b5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    c3bc:	00 00 00 
    c3bf:	90                   	nop
    c3c0:	80 3c 10 00          	cmpb   $0x0,(%rax,%rdx,1)
    c3c4:	74 78                	je     c43e <gimli::read::dwarf::Dwarf<R>::attr_string+0x19e>
    c3c6:	48 83 c2 01          	add    $0x1,%rdx
    c3ca:	48 39 d1             	cmp    %rdx,%rcx
    c3cd:	75 f1                	jne    c3c0 <gimli::read::dwarf::Dwarf<R>::attr_string+0x120>
    c3cf:	eb 54                	jmp    c425 <gimli::read::dwarf::Dwarf<R>::attr_string+0x185>
    c3d1:	4c 89 47 08          	mov    %r8,0x8(%rdi)
    c3d5:	4c 89 4f 10          	mov    %r9,0x10(%rdi)
    c3d9:	31 c0                	xor    %eax,%eax
    c3db:	48 89 07             	mov    %rax,(%rdi)
    c3de:	48 83 c4 18          	add    $0x18,%rsp
    c3e2:	c3                   	retq   
    c3e3:	49 01 c2             	add    %rax,%r10
    c3e6:	80 fa 08             	cmp    $0x8,%dl
    c3e9:	75 0b                	jne    c3f6 <gimli::read::dwarf::Dwarf<R>::attr_string+0x156>
    c3eb:	48 83 f9 07          	cmp    $0x7,%rcx
    c3ef:	76 99                	jbe    c38a <gimli::read::dwarf::Dwarf<R>::attr_string+0xea>
    c3f1:	49 8b 12             	mov    (%r10),%rdx
    c3f4:	eb 09                	jmp    c3ff <gimli::read::dwarf::Dwarf<R>::attr_string+0x15f>
    c3f6:	48 83 f9 04          	cmp    $0x4,%rcx
    c3fa:	72 8e                	jb     c38a <gimli::read::dwarf::Dwarf<R>::attr_string+0xea>
    c3fc:	41 8b 12             	mov    (%r10),%edx
    c3ff:	48 8b 46 50          	mov    0x50(%rsi),%rax
    c403:	48 8b 4e 58          	mov    0x58(%rsi),%rcx
    c407:	48 39 d1             	cmp    %rdx,%rcx
    c40a:	72 19                	jb     c425 <gimli::read::dwarf::Dwarf<R>::attr_string+0x185>
    c40c:	48 01 d0             	add    %rdx,%rax
    c40f:	48 29 d1             	sub    %rdx,%rcx
    c412:	74 11                	je     c425 <gimli::read::dwarf::Dwarf<R>::attr_string+0x185>
    c414:	31 d2                	xor    %edx,%edx
    c416:	80 3c 10 00          	cmpb   $0x0,(%rax,%rdx,1)
    c41a:	74 22                	je     c43e <gimli::read::dwarf::Dwarf<R>::attr_string+0x19e>
    c41c:	48 83 c2 01          	add    $0x1,%rdx
    c420:	48 39 d1             	cmp    %rdx,%rcx
    c423:	75 f1                	jne    c416 <gimli::read::dwarf::Dwarf<R>::attr_string+0x176>
    c425:	48 89 47 10          	mov    %rax,0x10(%rdi)
    c429:	48 c7 47 08 13 00 00 	movq   $0x13,0x8(%rdi)
    c430:	00 
    c431:	b8 01 00 00 00       	mov    $0x1,%eax
    c436:	48 89 07             	mov    %rax,(%rdi)
    c439:	48 83 c4 18          	add    $0x18,%rsp
    c43d:	c3                   	retq   
    c43e:	48 89 47 08          	mov    %rax,0x8(%rdi)
    c442:	48 89 57 10          	mov    %rdx,0x10(%rdi)
    c446:	31 c0                	xor    %eax,%eax
    c448:	48 89 07             	mov    %rax,(%rdi)
    c44b:	48 83 c4 18          	add    $0x18,%rsp
    c44f:	c3                   	retq   

000000000000c450 <gimli::read::reader::Reader::read_address>:
    c450:	48 83 ec 18          	sub    $0x18,%rsp
    c454:	8d 42 ff             	lea    -0x1(%rdx),%eax
    c457:	3c 07                	cmp    $0x7,%al
    c459:	0f 87 9d 00 00 00    	ja     c4fc <gimli::read::reader::Reader::read_address+0xac>
    c45f:	0f b6 c0             	movzbl %al,%eax
    c462:	48 8d 0d a7 a5 02 00 	lea    0x2a5a7(%rip),%rcx        # 36a10 <_fini+0x10ec>
    c469:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    c46d:	48 01 c8             	add    %rcx,%rax
    c470:	ff e0                	jmpq   *%rax
    c472:	48 8b 46 08          	mov    0x8(%rsi),%rax
    c476:	48 85 c0             	test   %rax,%rax
    c479:	74 65                	je     c4e0 <gimli::read::reader::Reader::read_address+0x90>
    c47b:	48 8b 0e             	mov    (%rsi),%rcx
    c47e:	48 8d 51 01          	lea    0x1(%rcx),%rdx
    c482:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    c486:	48 89 16             	mov    %rdx,(%rsi)
    c489:	48 89 46 08          	mov    %rax,0x8(%rsi)
    c48d:	0f b6 01             	movzbl (%rcx),%eax
    c490:	e9 90 00 00 00       	jmpq   c525 <gimli::read::reader::Reader::read_address+0xd5>
    c495:	48 8b 46 08          	mov    0x8(%rsi),%rax
    c499:	48 83 f8 01          	cmp    $0x1,%rax
    c49d:	76 41                	jbe    c4e0 <gimli::read::reader::Reader::read_address+0x90>
    c49f:	48 8b 0e             	mov    (%rsi),%rcx
    c4a2:	48 8d 51 02          	lea    0x2(%rcx),%rdx
    c4a6:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    c4aa:	48 89 16             	mov    %rdx,(%rsi)
    c4ad:	48 89 46 08          	mov    %rax,0x8(%rsi)
    c4b1:	0f b7 01             	movzwl (%rcx),%eax
    c4b4:	eb 6f                	jmp    c525 <gimli::read::reader::Reader::read_address+0xd5>
    c4b6:	48 8b 46 08          	mov    0x8(%rsi),%rax
    c4ba:	48 83 f8 03          	cmp    $0x3,%rax
    c4be:	76 20                	jbe    c4e0 <gimli::read::reader::Reader::read_address+0x90>
    c4c0:	48 8b 0e             	mov    (%rsi),%rcx
    c4c3:	48 8d 51 04          	lea    0x4(%rcx),%rdx
    c4c7:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    c4cb:	48 89 16             	mov    %rdx,(%rsi)
    c4ce:	48 89 46 08          	mov    %rax,0x8(%rsi)
    c4d2:	8b 01                	mov    (%rcx),%eax
    c4d4:	eb 4f                	jmp    c525 <gimli::read::reader::Reader::read_address+0xd5>
    c4d6:	48 8b 46 08          	mov    0x8(%rsi),%rax
    c4da:	48 83 f8 08          	cmp    $0x8,%rax
    c4de:	73 30                	jae    c510 <gimli::read::reader::Reader::read_address+0xc0>
    c4e0:	48 8b 06             	mov    (%rsi),%rax
    c4e3:	48 89 47 10          	mov    %rax,0x10(%rdi)
    c4e7:	48 c7 47 08 13 00 00 	movq   $0x13,0x8(%rdi)
    c4ee:	00 
    c4ef:	b8 01 00 00 00       	mov    $0x1,%eax
    c4f4:	48 89 07             	mov    %rax,(%rdi)
    c4f7:	48 83 c4 18          	add    $0x18,%rsp
    c4fb:	c3                   	retq   
    c4fc:	c6 47 08 17          	movb   $0x17,0x8(%rdi)
    c500:	88 57 09             	mov    %dl,0x9(%rdi)
    c503:	b8 01 00 00 00       	mov    $0x1,%eax
    c508:	48 89 07             	mov    %rax,(%rdi)
    c50b:	48 83 c4 18          	add    $0x18,%rsp
    c50f:	c3                   	retq   
    c510:	48 8b 0e             	mov    (%rsi),%rcx
    c513:	48 8d 51 08          	lea    0x8(%rcx),%rdx
    c517:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
    c51b:	48 89 16             	mov    %rdx,(%rsi)
    c51e:	48 89 46 08          	mov    %rax,0x8(%rsi)
    c522:	48 8b 01             	mov    (%rcx),%rax
    c525:	48 89 47 08          	mov    %rax,0x8(%rdi)
    c529:	31 c0                	xor    %eax,%eax
    c52b:	48 89 07             	mov    %rax,(%rdi)
    c52e:	48 83 c4 18          	add    $0x18,%rsp
    c532:	c3                   	retq   
    c533:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    c53a:	00 00 00 
    c53d:	0f 1f 00             	nopl   (%rax)

000000000000c540 <gimli::read::rnglists::RngListIter<R>::next>:
    c540:	55                   	push   %rbp
    c541:	41 57                	push   %r15
    c543:	41 56                	push   %r14
    c545:	41 55                	push   %r13
    c547:	41 54                	push   %r12
    c549:	53                   	push   %rbx
    c54a:	48 83 ec 38          	sub    $0x38,%rsp
    c54e:	48 89 3c 24          	mov    %rdi,(%rsp)
    c552:	4c 8b 56 08          	mov    0x8(%rsi),%r10
    c556:	4d 85 d2             	test   %r10,%r10
    c559:	0f 84 79 02 00 00    	je     c7d8 <gimli::read::rnglists::RngListIter<R>::next+0x298>
    c55f:	49 89 f4             	mov    %rsi,%r12
    c562:	4c 8d 7c 24 08       	lea    0x8(%rsp),%r15
    c567:	4c 8d 35 c2 a4 02 00 	lea    0x2a4c2(%rip),%r14        # 36a30 <_fini+0x110c>
    c56e:	31 c0                	xor    %eax,%eax
    c570:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    c575:	41 8b 5c 24 10       	mov    0x10(%r12),%ebx
    c57a:	89 d8                	mov    %ebx,%eax
    c57c:	c1 e8 10             	shr    $0x10,%eax
    c57f:	66 83 f8 04          	cmp    $0x4,%ax
    c583:	77 7b                	ja     c600 <gimli::read::rnglists::RngListIter<R>::next+0xc0>
    c585:	0f b6 eb             	movzbl %bl,%ebp
    c588:	4c 89 ff             	mov    %r15,%rdi
    c58b:	4c 89 e6             	mov    %r12,%rsi
    c58e:	89 ea                	mov    %ebp,%edx
    c590:	e8 bb fe ff ff       	callq  c450 <gimli::read::reader::Reader::read_address>
    c595:	4c 8b 6c 24 10       	mov    0x10(%rsp),%r13
    c59a:	48 83 7c 24 08 01    	cmpq   $0x1,0x8(%rsp)
    c5a0:	0f 84 49 04 00 00    	je     c9ef <gimli::read::rnglists::RngListIter<R>::next+0x4af>
    c5a6:	4c 89 ff             	mov    %r15,%rdi
    c5a9:	4c 89 e6             	mov    %r12,%rsi
    c5ac:	89 ea                	mov    %ebp,%edx
    c5ae:	e8 9d fe ff ff       	callq  c450 <gimli::read::reader::Reader::read_address>
    c5b3:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    c5b8:	48 83 7c 24 08 01    	cmpq   $0x1,0x8(%rsp)
    c5be:	0f 84 23 02 00 00    	je     c7e7 <gimli::read::rnglists::RngListIter<R>::next+0x2a7>
    c5c4:	48 89 f0             	mov    %rsi,%rax
    c5c7:	4c 09 e8             	or     %r13,%rax
    c5ca:	0f 84 f4 01 00 00    	je     c7c4 <gimli::read::rnglists::RngListIter<R>::next+0x284>
    c5d0:	8d 0c dd 00 00 00 00 	lea    0x0(,%rbx,8),%ecx
    c5d7:	f6 d9                	neg    %cl
    c5d9:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    c5e0:	48 d3 e8             	shr    %cl,%rax
    c5e3:	4c 39 e8             	cmp    %r13,%rax
    c5e6:	4c 0f 44 ee          	cmove  %rsi,%r13
    c5ea:	0f 84 cf 00 00 00    	je     c6bf <gimli::read::rnglists::RngListIter<R>::next+0x17f>
    c5f0:	e9 8b 06 00 00       	jmpq   cc80 <gimli::read::rnglists::RngListIter<R>::next+0x740>
    c5f5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    c5fc:	00 00 00 
    c5ff:	90                   	nop
    c600:	49 8b 34 24          	mov    (%r12),%rsi
    c604:	48 8d 46 01          	lea    0x1(%rsi),%rax
    c608:	4d 8d 5a ff          	lea    -0x1(%r10),%r11
    c60c:	49 89 04 24          	mov    %rax,(%r12)
    c610:	4d 89 5c 24 08       	mov    %r11,0x8(%r12)
    c615:	0f b6 0e             	movzbl (%rsi),%ecx
    c618:	48 83 f9 07          	cmp    $0x7,%rcx
    c61c:	0f 87 ef 01 00 00    	ja     c811 <gimli::read::rnglists::RngListIter<R>::next+0x2d1>
    c622:	49 63 0c 8e          	movslq (%r14,%rcx,4),%rcx
    c626:	4c 01 f1             	add    %r14,%rcx
    c629:	ff e1                	jmpq   *%rcx
    c62b:	4d 85 db             	test   %r11,%r11
    c62e:	0f 84 82 01 00 00    	je     c7b6 <gimli::read::rnglists::RngListIter<R>::next+0x276>
    c634:	31 c0                	xor    %eax,%eax
    c636:	48 c7 c3 fe ff ff ff 	mov    $0xfffffffffffffffe,%rbx
    c63d:	31 ed                	xor    %ebp,%ebp
    c63f:	31 c9                	xor    %ecx,%ecx
    c641:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
    c646:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    c64d:	00 00 00 
    c650:	48 8d 14 06          	lea    (%rsi,%rax,1),%rdx
    c654:	48 83 c2 02          	add    $0x2,%rdx
    c658:	49 8d 3c 1a          	lea    (%r10,%rbx,1),%rdi
    c65c:	49 89 14 24          	mov    %rdx,(%r12)
    c660:	49 89 7c 24 08       	mov    %rdi,0x8(%r12)
    c665:	0f b6 54 06 01       	movzbl 0x1(%rsi,%rax,1),%edx
    c66a:	83 f9 3f             	cmp    $0x3f,%ecx
    c66d:	75 09                	jne    c678 <gimli::read::rnglists::RngListIter<R>::next+0x138>
    c66f:	80 fa 01             	cmp    $0x1,%dl
    c672:	0f 87 24 01 00 00    	ja     c79c <gimli::read::rnglists::RngListIter<R>::next+0x25c>
    c678:	0f b6 d2             	movzbl %dl,%edx
    c67b:	89 d7                	mov    %edx,%edi
    c67d:	83 e7 7f             	and    $0x7f,%edi
    c680:	48 d3 e7             	shl    %cl,%rdi
    c683:	48 09 fd             	or     %rdi,%rbp
    c686:	84 d2                	test   %dl,%dl
    c688:	79 4d                	jns    c6d7 <gimli::read::rnglists::RngListIter<R>::next+0x197>
    c68a:	83 c1 07             	add    $0x7,%ecx
    c68d:	48 83 c0 01          	add    $0x1,%rax
    c691:	48 83 c3 ff          	add    $0xffffffffffffffff,%rbx
    c695:	49 39 c3             	cmp    %rax,%r11
    c698:	75 b6                	jne    c650 <gimli::read::rnglists::RngListIter<R>::next+0x110>
    c69a:	e9 10 01 00 00       	jmpq   c7af <gimli::read::rnglists::RngListIter<R>::next+0x26f>
    c69f:	90                   	nop
    c6a0:	0f b6 d3             	movzbl %bl,%edx
    c6a3:	4c 89 ff             	mov    %r15,%rdi
    c6a6:	4c 89 e6             	mov    %r12,%rsi
    c6a9:	e8 a2 fd ff ff       	callq  c450 <gimli::read::reader::Reader::read_address>
    c6ae:	4c 8b 6c 24 10       	mov    0x10(%rsp),%r13
    c6b3:	48 83 7c 24 08 01    	cmpq   $0x1,0x8(%rsp)
    c6b9:	0f 84 30 03 00 00    	je     c9ef <gimli::read::rnglists::RngListIter<R>::next+0x4af>
    c6bf:	4d 89 6c 24 18       	mov    %r13,0x18(%r12)
    c6c4:	4d 8b 54 24 08       	mov    0x8(%r12),%r10
    c6c9:	4d 85 d2             	test   %r10,%r10
    c6cc:	0f 85 a3 fe ff ff    	jne    c575 <gimli::read::rnglists::RngListIter<R>::next+0x35>
    c6d2:	e9 01 01 00 00       	jmpq   c7d8 <gimli::read::rnglists::RngListIter<R>::next+0x298>
    c6d7:	49 8b 74 24 30       	mov    0x30(%r12),%rsi
    c6dc:	49 8b 44 24 20       	mov    0x20(%r12),%rax
    c6e1:	49 8b 4c 24 28       	mov    0x28(%r12),%rcx
    c6e6:	48 29 f1             	sub    %rsi,%rcx
    c6e9:	0f 82 71 05 00 00    	jb     cc60 <gimli::read::rnglists::RngListIter<R>::next+0x720>
    c6ef:	41 0f b6 54 24 10    	movzbl 0x10(%r12),%edx
    c6f5:	48 01 f0             	add    %rsi,%rax
    c6f8:	48 0f af ea          	imul   %rdx,%rbp
    c6fc:	48 29 e9             	sub    %rbp,%rcx
    c6ff:	0f 82 5b 05 00 00    	jb     cc60 <gimli::read::rnglists::RngListIter<R>::next+0x720>
    c705:	8d 72 ff             	lea    -0x1(%rdx),%esi
    c708:	40 80 fe 07          	cmp    $0x7,%sil
    c70c:	0f 87 e2 00 00 00    	ja     c7f4 <gimli::read::rnglists::RngListIter<R>::next+0x2b4>
    c712:	48 01 e8             	add    %rbp,%rax
    c715:	40 0f b6 f6          	movzbl %sil,%esi
    c719:	48 8d 3d 90 a3 02 00 	lea    0x2a390(%rip),%rdi        # 36ab0 <_fini+0x118c>
    c720:	48 63 34 b7          	movslq (%rdi,%rsi,4),%rsi
    c724:	48 01 fe             	add    %rdi,%rsi
    c727:	ff e6                	jmpq   *%rsi
    c729:	48 85 c9             	test   %rcx,%rcx
    c72c:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    c731:	0f 84 29 05 00 00    	je     cc60 <gimli::read::rnglists::RngListIter<R>::next+0x720>
    c737:	44 0f b6 28          	movzbl (%rax),%r13d
    c73b:	eb 3b                	jmp    c778 <gimli::read::rnglists::RngListIter<R>::next+0x238>
    c73d:	48 83 f9 02          	cmp    $0x2,%rcx
    c741:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    c746:	0f 82 14 05 00 00    	jb     cc60 <gimli::read::rnglists::RngListIter<R>::next+0x720>
    c74c:	44 0f b7 28          	movzwl (%rax),%r13d
    c750:	eb 26                	jmp    c778 <gimli::read::rnglists::RngListIter<R>::next+0x238>
    c752:	48 83 f9 04          	cmp    $0x4,%rcx
    c756:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    c75b:	0f 82 ff 04 00 00    	jb     cc60 <gimli::read::rnglists::RngListIter<R>::next+0x720>
    c761:	44 8b 28             	mov    (%rax),%r13d
    c764:	eb 12                	jmp    c778 <gimli::read::rnglists::RngListIter<R>::next+0x238>
    c766:	48 83 f9 08          	cmp    $0x8,%rcx
    c76a:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    c76f:	0f 82 eb 04 00 00    	jb     cc60 <gimli::read::rnglists::RngListIter<R>::next+0x720>
    c775:	4c 8b 28             	mov    (%rax),%r13
    c778:	48 0b 4c 24 28       	or     0x28(%rsp),%rcx
    c77d:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
    c782:	4c 89 6c 24 30       	mov    %r13,0x30(%rsp)
    c787:	4d 89 6c 24 18       	mov    %r13,0x18(%r12)
    c78c:	4d 8b 54 24 08       	mov    0x8(%r12),%r10
    c791:	4d 85 d2             	test   %r10,%r10
    c794:	0f 85 db fd ff ff    	jne    c575 <gimli::read::rnglists::RngListIter<R>::next+0x35>
    c79a:	eb 3c                	jmp    c7d8 <gimli::read::rnglists::RngListIter<R>::next+0x298>
    c79c:	41 bd 06 00 00 00    	mov    $0x6,%r13d
    c7a2:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
    c7a7:	4c 89 f0             	mov    %r14,%rax
    c7aa:	e9 4f 02 00 00       	jmpq   c9fe <gimli::read::rnglists::RngListIter<R>::next+0x4be>
    c7af:	48 01 f0             	add    %rsi,%rax
    c7b2:	48 83 c0 01          	add    $0x1,%rax
    c7b6:	41 bd 13 00 00 00    	mov    $0x13,%r13d
    c7bc:	45 31 f6             	xor    %r14d,%r14d
    c7bf:	e9 3a 02 00 00       	jmpq   c9fe <gimli::read::rnglists::RngListIter<R>::next+0x4be>
    c7c4:	48 8d 05 8d aa 02 00 	lea    0x2aa8d(%rip),%rax        # 37258 <_fini+0x1934>
    c7cb:	49 89 04 24          	mov    %rax,(%r12)
    c7cf:	49 c7 44 24 08 00 00 	movq   $0x0,0x8(%r12)
    c7d6:	00 00 
    c7d8:	0f 57 c0             	xorps  %xmm0,%xmm0
    c7db:	48 8b 04 24          	mov    (%rsp),%rax
    c7df:	0f 11 00             	movups %xmm0,(%rax)
    c7e2:	e9 45 02 00 00       	jmpq   ca2c <gimli::read::rnglists::RngListIter<R>::next+0x4ec>
    c7e7:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c7ec:	49 89 f5             	mov    %rsi,%r13
    c7ef:	e9 00 02 00 00       	jmpq   c9f4 <gimli::read::rnglists::RngListIter<R>::next+0x4b4>
    c7f4:	49 81 e0 00 00 ff ff 	and    $0xffffffffffff0000,%r8
    c7fb:	48 c1 e2 08          	shl    $0x8,%rdx
    c7ff:	4a 8d 0c 02          	lea    (%rdx,%r8,1),%rcx
    c803:	48 83 c1 17          	add    $0x17,%rcx
    c807:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    c80c:	e9 54 04 00 00       	jmpq   cc65 <gimli::read::rnglists::RngListIter<R>::next+0x725>
    c811:	41 bd 2f 00 00 00    	mov    $0x2f,%r13d
    c817:	45 31 f6             	xor    %r14d,%r14d
    c81a:	e9 df 01 00 00       	jmpq   c9fe <gimli::read::rnglists::RngListIter<R>::next+0x4be>
    c81f:	4d 85 db             	test   %r11,%r11
    c822:	74 92                	je     c7b6 <gimli::read::rnglists::RngListIter<R>::next+0x276>
    c824:	45 31 f6             	xor    %r14d,%r14d
    c827:	48 c7 c5 fe ff ff ff 	mov    $0xfffffffffffffffe,%rbp
    c82e:	31 db                	xor    %ebx,%ebx
    c830:	45 31 c0             	xor    %r8d,%r8d
    c833:	31 c9                	xor    %ecx,%ecx
    c835:	41 bd 06 00 00 00    	mov    $0x6,%r13d
    c83b:	48 8d 04 1e          	lea    (%rsi,%rbx,1),%rax
    c83f:	48 83 c0 02          	add    $0x2,%rax
    c843:	49 8d 14 2a          	lea    (%r10,%rbp,1),%rdx
    c847:	49 89 04 24          	mov    %rax,(%r12)
    c84b:	49 89 54 24 08       	mov    %rdx,0x8(%r12)
    c850:	44 0f b6 4c 1e 01    	movzbl 0x1(%rsi,%rbx,1),%r9d
    c856:	83 f9 3f             	cmp    $0x3f,%ecx
    c859:	75 0a                	jne    c865 <gimli::read::rnglists::RngListIter<R>::next+0x325>
    c85b:	41 80 f9 01          	cmp    $0x1,%r9b
    c85f:	0f 87 55 03 00 00    	ja     cbba <gimli::read::rnglists::RngListIter<R>::next+0x67a>
    c865:	41 0f b6 d1          	movzbl %r9b,%edx
    c869:	89 d7                	mov    %edx,%edi
    c86b:	83 e7 7f             	and    $0x7f,%edi
    c86e:	48 d3 e7             	shl    %cl,%rdi
    c871:	49 09 f8             	or     %rdi,%r8
    c874:	84 d2                	test   %dl,%dl
    c876:	0f 89 22 02 00 00    	jns    ca9e <gimli::read::rnglists::RngListIter<R>::next+0x55e>
    c87c:	83 c1 07             	add    $0x7,%ecx
    c87f:	48 83 c3 01          	add    $0x1,%rbx
    c883:	48 83 c5 ff          	add    $0xffffffffffffffff,%rbp
    c887:	49 39 db             	cmp    %rbx,%r11
    c88a:	75 af                	jne    c83b <gimli::read::rnglists::RngListIter<R>::next+0x2fb>
    c88c:	e9 e4 00 00 00       	jmpq   c975 <gimli::read::rnglists::RngListIter<R>::next+0x435>
    c891:	4d 85 db             	test   %r11,%r11
    c894:	0f 84 1c ff ff ff    	je     c7b6 <gimli::read::rnglists::RngListIter<R>::next+0x276>
    c89a:	45 31 f6             	xor    %r14d,%r14d
    c89d:	48 c7 c5 fe ff ff ff 	mov    $0xfffffffffffffffe,%rbp
    c8a4:	31 db                	xor    %ebx,%ebx
    c8a6:	45 31 c0             	xor    %r8d,%r8d
    c8a9:	31 c9                	xor    %ecx,%ecx
    c8ab:	41 bd 06 00 00 00    	mov    $0x6,%r13d
    c8b1:	48 8d 04 1e          	lea    (%rsi,%rbx,1),%rax
    c8b5:	48 83 c0 02          	add    $0x2,%rax
    c8b9:	49 8d 14 2a          	lea    (%r10,%rbp,1),%rdx
    c8bd:	49 89 04 24          	mov    %rax,(%r12)
    c8c1:	49 89 54 24 08       	mov    %rdx,0x8(%r12)
    c8c6:	44 0f b6 4c 1e 01    	movzbl 0x1(%rsi,%rbx,1),%r9d
    c8cc:	83 f9 3f             	cmp    $0x3f,%ecx
    c8cf:	75 0a                	jne    c8db <gimli::read::rnglists::RngListIter<R>::next+0x39b>
    c8d1:	41 80 f9 01          	cmp    $0x1,%r9b
    c8d5:	0f 87 df 02 00 00    	ja     cbba <gimli::read::rnglists::RngListIter<R>::next+0x67a>
    c8db:	41 0f b6 d1          	movzbl %r9b,%edx
    c8df:	89 d7                	mov    %edx,%edi
    c8e1:	83 e7 7f             	and    $0x7f,%edi
    c8e4:	48 d3 e7             	shl    %cl,%rdi
    c8e7:	49 09 f8             	or     %rdi,%r8
    c8ea:	84 d2                	test   %dl,%dl
    c8ec:	0f 89 0c 02 00 00    	jns    cafe <gimli::read::rnglists::RngListIter<R>::next+0x5be>
    c8f2:	83 c1 07             	add    $0x7,%ecx
    c8f5:	48 83 c3 01          	add    $0x1,%rbx
    c8f9:	48 83 c5 ff          	add    $0xffffffffffffffff,%rbp
    c8fd:	49 39 db             	cmp    %rbx,%r11
    c900:	75 af                	jne    c8b1 <gimli::read::rnglists::RngListIter<R>::next+0x371>
    c902:	eb 71                	jmp    c975 <gimli::read::rnglists::RngListIter<R>::next+0x435>
    c904:	4d 85 db             	test   %r11,%r11
    c907:	0f 84 a9 fe ff ff    	je     c7b6 <gimli::read::rnglists::RngListIter<R>::next+0x276>
    c90d:	45 31 f6             	xor    %r14d,%r14d
    c910:	48 c7 c5 fe ff ff ff 	mov    $0xfffffffffffffffe,%rbp
    c917:	31 db                	xor    %ebx,%ebx
    c919:	45 31 c0             	xor    %r8d,%r8d
    c91c:	31 c9                	xor    %ecx,%ecx
    c91e:	41 bd 06 00 00 00    	mov    $0x6,%r13d
    c924:	48 8d 04 1e          	lea    (%rsi,%rbx,1),%rax
    c928:	48 83 c0 02          	add    $0x2,%rax
    c92c:	49 8d 14 2a          	lea    (%r10,%rbp,1),%rdx
    c930:	49 89 04 24          	mov    %rax,(%r12)
    c934:	49 89 54 24 08       	mov    %rdx,0x8(%r12)
    c939:	44 0f b6 4c 1e 01    	movzbl 0x1(%rsi,%rbx,1),%r9d
    c93f:	83 f9 3f             	cmp    $0x3f,%ecx
    c942:	75 0a                	jne    c94e <gimli::read::rnglists::RngListIter<R>::next+0x40e>
    c944:	41 80 f9 01          	cmp    $0x1,%r9b
    c948:	0f 87 6c 02 00 00    	ja     cbba <gimli::read::rnglists::RngListIter<R>::next+0x67a>
    c94e:	41 0f b6 d1          	movzbl %r9b,%edx
    c952:	89 d7                	mov    %edx,%edi
    c954:	83 e7 7f             	and    $0x7f,%edi
    c957:	48 d3 e7             	shl    %cl,%rdi
    c95a:	49 09 f8             	or     %rdi,%r8
    c95d:	84 d2                	test   %dl,%dl
    c95f:	0f 89 f9 01 00 00    	jns    cb5e <gimli::read::rnglists::RngListIter<R>::next+0x61e>
    c965:	83 c1 07             	add    $0x7,%ecx
    c968:	48 83 c3 01          	add    $0x1,%rbx
    c96c:	48 83 c5 ff          	add    $0xffffffffffffffff,%rbp
    c970:	49 39 db             	cmp    %rbx,%r11
    c973:	75 af                	jne    c924 <gimli::read::rnglists::RngListIter<R>::next+0x3e4>
    c975:	48 8d 04 1e          	lea    (%rsi,%rbx,1),%rax
    c979:	48 83 c0 01          	add    $0x1,%rax
    c97d:	e9 34 fe ff ff       	jmpq   c7b6 <gimli::read::rnglists::RngListIter<R>::next+0x276>
    c982:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    c987:	4c 89 e6             	mov    %r12,%rsi
    c98a:	89 da                	mov    %ebx,%edx
    c98c:	e8 bf fa ff ff       	callq  c450 <gimli::read::reader::Reader::read_address>
    c991:	4c 8b 6c 24 10       	mov    0x10(%rsp),%r13
    c996:	48 83 7c 24 08 01    	cmpq   $0x1,0x8(%rsp)
    c99c:	74 51                	je     c9ef <gimli::read::rnglists::RngListIter<R>::next+0x4af>
    c99e:	0f b6 d3             	movzbl %bl,%edx
    c9a1:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    c9a6:	4c 89 e6             	mov    %r12,%rsi
    c9a9:	e8 a2 fa ff ff       	callq  c450 <gimli::read::reader::Reader::read_address>
    c9ae:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    c9b3:	48 83 7c 24 08 01    	cmpq   $0x1,0x8(%rsp)
    c9b9:	0f 85 e6 02 00 00    	jne    cca5 <gimli::read::rnglists::RngListIter<R>::next+0x765>
    c9bf:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c9c4:	49 89 f6             	mov    %rsi,%r14
    c9c7:	49 81 e6 00 ff ff ff 	and    $0xffffffffffffff00,%r14
    c9ce:	49 89 f5             	mov    %rsi,%r13
    c9d1:	eb 2b                	jmp    c9fe <gimli::read::rnglists::RngListIter<R>::next+0x4be>
    c9d3:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    c9d8:	4c 89 e6             	mov    %r12,%rsi
    c9db:	89 da                	mov    %ebx,%edx
    c9dd:	e8 6e fa ff ff       	callq  c450 <gimli::read::reader::Reader::read_address>
    c9e2:	4c 8b 6c 24 10       	mov    0x10(%rsp),%r13
    c9e7:	48 83 7c 24 08 01    	cmpq   $0x1,0x8(%rsp)
    c9ed:	75 4c                	jne    ca3b <gimli::read::rnglists::RngListIter<R>::next+0x4fb>
    c9ef:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c9f4:	4d 89 ee             	mov    %r13,%r14
    c9f7:	49 81 e6 00 ff ff ff 	and    $0xffffffffffffff00,%r14
    c9fe:	48 8b 34 24          	mov    (%rsp),%rsi
    ca02:	41 0f b6 cd          	movzbl %r13b,%ecx
    ca06:	4c 09 f1             	or     %r14,%rcx
    ca09:	48 8d 15 48 a8 02 00 	lea    0x2a848(%rip),%rdx        # 37258 <_fini+0x1934>
    ca10:	49 89 14 24          	mov    %rdx,(%r12)
    ca14:	49 c7 44 24 08 00 00 	movq   $0x0,0x8(%r12)
    ca1b:	00 00 
    ca1d:	48 89 46 10          	mov    %rax,0x10(%rsi)
    ca21:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
    ca25:	48 c7 06 01 00 00 00 	movq   $0x1,(%rsi)
    ca2c:	48 83 c4 38          	add    $0x38,%rsp
    ca30:	5b                   	pop    %rbx
    ca31:	41 5c                	pop    %r12
    ca33:	41 5d                	pop    %r13
    ca35:	41 5e                	pop    %r14
    ca37:	41 5f                	pop    %r15
    ca39:	5d                   	pop    %rbp
    ca3a:	c3                   	retq   
    ca3b:	49 8b 54 24 08       	mov    0x8(%r12),%rdx
    ca40:	48 85 d2             	test   %rdx,%rdx
    ca43:	0f 84 78 01 00 00    	je     cbc1 <gimli::read::rnglists::RngListIter<R>::next+0x681>
    ca49:	49 8b 3c 24          	mov    (%r12),%rdi
    ca4d:	48 83 c2 ff          	add    $0xffffffffffffffff,%rdx
    ca51:	45 31 f6             	xor    %r14d,%r14d
    ca54:	31 f6                	xor    %esi,%esi
    ca56:	31 c9                	xor    %ecx,%ecx
    ca58:	48 8d 47 01          	lea    0x1(%rdi),%rax
    ca5c:	49 89 04 24          	mov    %rax,(%r12)
    ca60:	49 89 54 24 08       	mov    %rdx,0x8(%r12)
    ca65:	0f b6 1f             	movzbl (%rdi),%ebx
    ca68:	83 f9 3f             	cmp    $0x3f,%ecx
    ca6b:	75 09                	jne    ca76 <gimli::read::rnglists::RngListIter<R>::next+0x536>
    ca6d:	80 fb 01             	cmp    $0x1,%bl
    ca70:	0f 87 54 01 00 00    	ja     cbca <gimli::read::rnglists::RngListIter<R>::next+0x68a>
    ca76:	0f b6 eb             	movzbl %bl,%ebp
    ca79:	89 ef                	mov    %ebp,%edi
    ca7b:	83 e7 7f             	and    $0x7f,%edi
    ca7e:	48 d3 e7             	shl    %cl,%rdi
    ca81:	48 09 fe             	or     %rdi,%rsi
    ca84:	40 84 ed             	test   %bpl,%bpl
    ca87:	0f 89 e7 02 00 00    	jns    cd74 <gimli::read::rnglists::RngListIter<R>::next+0x834>
    ca8d:	83 c1 07             	add    $0x7,%ecx
    ca90:	48 89 c7             	mov    %rax,%rdi
    ca93:	48 83 c2 ff          	add    $0xffffffffffffffff,%rdx
    ca97:	72 bf                	jb     ca58 <gimli::read::rnglists::RngListIter<R>::next+0x518>
    ca99:	e9 18 fd ff ff       	jmpq   c7b6 <gimli::read::rnglists::RngListIter<R>::next+0x276>
    ca9e:	49 8d 4a fe          	lea    -0x2(%r10),%rcx
    caa2:	48 39 d9             	cmp    %rbx,%rcx
    caa5:	0f 84 0b fd ff ff    	je     c7b6 <gimli::read::rnglists::RngListIter<R>::next+0x276>
    caab:	49 29 da             	sub    %rbx,%r10
    caae:	49 83 c2 fd          	add    $0xfffffffffffffffd,%r10
    cab2:	45 31 f6             	xor    %r14d,%r14d
    cab5:	31 f6                	xor    %esi,%esi
    cab7:	31 c9                	xor    %ecx,%ecx
    cab9:	48 89 c2             	mov    %rax,%rdx
    cabc:	48 83 c0 01          	add    $0x1,%rax
    cac0:	49 89 04 24          	mov    %rax,(%r12)
    cac4:	4d 89 54 24 08       	mov    %r10,0x8(%r12)
    cac9:	0f b6 1a             	movzbl (%rdx),%ebx
    cacc:	83 f9 3f             	cmp    $0x3f,%ecx
    cacf:	75 09                	jne    cada <gimli::read::rnglists::RngListIter<R>::next+0x59a>
    cad1:	80 fb 01             	cmp    $0x1,%bl
    cad4:	0f 87 e0 00 00 00    	ja     cbba <gimli::read::rnglists::RngListIter<R>::next+0x67a>
    cada:	0f b6 d3             	movzbl %bl,%edx
    cadd:	89 d7                	mov    %edx,%edi
    cadf:	83 e7 7f             	and    $0x7f,%edi
    cae2:	48 d3 e7             	shl    %cl,%rdi
    cae5:	48 09 fe             	or     %rdi,%rsi
    cae8:	84 d2                	test   %dl,%dl
    caea:	0f 89 e7 00 00 00    	jns    cbd7 <gimli::read::rnglists::RngListIter<R>::next+0x697>
    caf0:	83 c1 07             	add    $0x7,%ecx
    caf3:	49 83 c2 ff          	add    $0xffffffffffffffff,%r10
    caf7:	72 c0                	jb     cab9 <gimli::read::rnglists::RngListIter<R>::next+0x579>
    caf9:	e9 b8 fc ff ff       	jmpq   c7b6 <gimli::read::rnglists::RngListIter<R>::next+0x276>
    cafe:	49 8d 4a fe          	lea    -0x2(%r10),%rcx
    cb02:	48 39 d9             	cmp    %rbx,%rcx
    cb05:	0f 84 ab fc ff ff    	je     c7b6 <gimli::read::rnglists::RngListIter<R>::next+0x276>
    cb0b:	49 29 da             	sub    %rbx,%r10
    cb0e:	49 83 c2 fd          	add    $0xfffffffffffffffd,%r10
    cb12:	45 31 f6             	xor    %r14d,%r14d
    cb15:	31 f6                	xor    %esi,%esi
    cb17:	31 c9                	xor    %ecx,%ecx
    cb19:	48 89 c2             	mov    %rax,%rdx
    cb1c:	48 83 c0 01          	add    $0x1,%rax
    cb20:	49 89 04 24          	mov    %rax,(%r12)
    cb24:	4d 89 54 24 08       	mov    %r10,0x8(%r12)
    cb29:	0f b6 1a             	movzbl (%rdx),%ebx
    cb2c:	83 f9 3f             	cmp    $0x3f,%ecx
    cb2f:	75 09                	jne    cb3a <gimli::read::rnglists::RngListIter<R>::next+0x5fa>
    cb31:	80 fb 01             	cmp    $0x1,%bl
    cb34:	0f 87 80 00 00 00    	ja     cbba <gimli::read::rnglists::RngListIter<R>::next+0x67a>
    cb3a:	0f b6 d3             	movzbl %bl,%edx
    cb3d:	89 d7                	mov    %edx,%edi
    cb3f:	83 e7 7f             	and    $0x7f,%edi
    cb42:	48 d3 e7             	shl    %cl,%rdi
    cb45:	48 09 fe             	or     %rdi,%rsi
    cb48:	84 d2                	test   %dl,%dl
    cb4a:	0f 89 e6 00 00 00    	jns    cc36 <gimli::read::rnglists::RngListIter<R>::next+0x6f6>
    cb50:	83 c1 07             	add    $0x7,%ecx
    cb53:	49 83 c2 ff          	add    $0xffffffffffffffff,%r10
    cb57:	72 c0                	jb     cb19 <gimli::read::rnglists::RngListIter<R>::next+0x5d9>
    cb59:	e9 58 fc ff ff       	jmpq   c7b6 <gimli::read::rnglists::RngListIter<R>::next+0x276>
    cb5e:	49 8d 4a fe          	lea    -0x2(%r10),%rcx
    cb62:	48 39 d9             	cmp    %rbx,%rcx
    cb65:	0f 84 4b fc ff ff    	je     c7b6 <gimli::read::rnglists::RngListIter<R>::next+0x276>
    cb6b:	49 29 da             	sub    %rbx,%r10
    cb6e:	49 83 c2 fd          	add    $0xfffffffffffffffd,%r10
    cb72:	45 31 f6             	xor    %r14d,%r14d
    cb75:	31 f6                	xor    %esi,%esi
    cb77:	31 c9                	xor    %ecx,%ecx
    cb79:	48 89 c2             	mov    %rax,%rdx
    cb7c:	48 83 c0 01          	add    $0x1,%rax
    cb80:	49 89 04 24          	mov    %rax,(%r12)
    cb84:	4d 89 54 24 08       	mov    %r10,0x8(%r12)
    cb89:	0f b6 1a             	movzbl (%rdx),%ebx
    cb8c:	83 f9 3f             	cmp    $0x3f,%ecx
    cb8f:	75 05                	jne    cb96 <gimli::read::rnglists::RngListIter<R>::next+0x656>
    cb91:	80 fb 01             	cmp    $0x1,%bl
    cb94:	77 24                	ja     cbba <gimli::read::rnglists::RngListIter<R>::next+0x67a>
    cb96:	0f b6 d3             	movzbl %bl,%edx
    cb99:	89 d7                	mov    %edx,%edi
    cb9b:	83 e7 7f             	and    $0x7f,%edi
    cb9e:	48 d3 e7             	shl    %cl,%rdi
    cba1:	48 09 fe             	or     %rdi,%rsi
    cba4:	84 d2                	test   %dl,%dl
    cba6:	0f 89 d1 00 00 00    	jns    cc7d <gimli::read::rnglists::RngListIter<R>::next+0x73d>
    cbac:	83 c1 07             	add    $0x7,%ecx
    cbaf:	49 83 c2 ff          	add    $0xffffffffffffffff,%r10
    cbb3:	72 c4                	jb     cb79 <gimli::read::rnglists::RngListIter<R>::next+0x639>
    cbb5:	e9 fc fb ff ff       	jmpq   c7b6 <gimli::read::rnglists::RngListIter<R>::next+0x276>
    cbba:	31 c0                	xor    %eax,%eax
    cbbc:	e9 3d fe ff ff       	jmpq   c9fe <gimli::read::rnglists::RngListIter<R>::next+0x4be>
    cbc1:	49 8b 04 24          	mov    (%r12),%rax
    cbc5:	e9 ec fb ff ff       	jmpq   c7b6 <gimli::read::rnglists::RngListIter<R>::next+0x276>
    cbca:	41 bd 06 00 00 00    	mov    $0x6,%r13d
    cbd0:	31 c0                	xor    %eax,%eax
    cbd2:	e9 27 fe ff ff       	jmpq   c9fe <gimli::read::rnglists::RngListIter<R>::next+0x4be>
    cbd7:	49 8b 7c 24 30       	mov    0x30(%r12),%rdi
    cbdc:	49 8b 44 24 20       	mov    0x20(%r12),%rax
    cbe1:	49 8b 54 24 28       	mov    0x28(%r12),%rdx
    cbe6:	48 29 fa             	sub    %rdi,%rdx
    cbe9:	72 75                	jb     cc60 <gimli::read::rnglists::RngListIter<R>::next+0x720>
    cbeb:	41 0f b6 4c 24 10    	movzbl 0x10(%r12),%ecx
    cbf1:	48 01 f8             	add    %rdi,%rax
    cbf4:	4c 0f af c1          	imul   %rcx,%r8
    cbf8:	48 89 d7             	mov    %rdx,%rdi
    cbfb:	4c 29 c7             	sub    %r8,%rdi
    cbfe:	72 60                	jb     cc60 <gimli::read::rnglists::RngListIter<R>::next+0x720>
    cc00:	8d 69 ff             	lea    -0x1(%rcx),%ebp
    cc03:	40 80 fd 07          	cmp    $0x7,%bpl
    cc07:	0f 87 b0 01 00 00    	ja     cdbd <gimli::read::rnglists::RngListIter<R>::next+0x87d>
    cc0d:	49 01 c0             	add    %rax,%r8
    cc10:	40 0f b6 ed          	movzbl %bpl,%ebp
    cc14:	48 8d 1d 55 9e 02 00 	lea    0x29e55(%rip),%rbx        # 36a70 <_fini+0x114c>
    cc1b:	48 63 2c ab          	movslq (%rbx,%rbp,4),%rbp
    cc1f:	48 01 dd             	add    %rbx,%rbp
    cc22:	ff e5                	jmpq   *%rbp
    cc24:	48 85 ff             	test   %rdi,%rdi
    cc27:	0f 84 0e 01 00 00    	je     cd3b <gimli::read::rnglists::RngListIter<R>::next+0x7fb>
    cc2d:	45 0f b6 28          	movzbl (%r8),%r13d
    cc31:	e9 49 01 00 00       	jmpq   cd7f <gimli::read::rnglists::RngListIter<R>::next+0x83f>
    cc36:	49 8b 7c 24 30       	mov    0x30(%r12),%rdi
    cc3b:	49 8b 44 24 20       	mov    0x20(%r12),%rax
    cc40:	49 8b 54 24 28       	mov    0x28(%r12),%rdx
    cc45:	48 29 fa             	sub    %rdi,%rdx
    cc48:	72 16                	jb     cc60 <gimli::read::rnglists::RngListIter<R>::next+0x720>
    cc4a:	41 0f b6 4c 24 10    	movzbl 0x10(%r12),%ecx
    cc50:	48 01 f8             	add    %rdi,%rax
    cc53:	4c 0f af c1          	imul   %rcx,%r8
    cc57:	4c 29 c2             	sub    %r8,%rdx
    cc5a:	0f 83 8a 00 00 00    	jae    ccea <gimli::read::rnglists::RngListIter<R>::next+0x7aa>
    cc60:	b9 13 00 00 00       	mov    $0x13,%ecx
    cc65:	48 8b 14 24          	mov    (%rsp),%rdx
    cc69:	48 89 42 10          	mov    %rax,0x10(%rdx)
    cc6d:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    cc71:	48 c7 02 01 00 00 00 	movq   $0x1,(%rdx)
    cc78:	e9 af fd ff ff       	jmpq   ca2c <gimli::read::rnglists::RngListIter<R>::next+0x4ec>
    cc7d:	4d 89 c5             	mov    %r8,%r13
    cc80:	49 8b 44 24 18       	mov    0x18(%r12),%rax
    cc85:	41 8a 4c 24 10       	mov    0x10(%r12),%cl
    cc8a:	c0 e1 03             	shl    $0x3,%cl
    cc8d:	f6 d9                	neg    %cl
    cc8f:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
    cc96:	48 d3 ea             	shr    %cl,%rdx
    cc99:	49 01 c5             	add    %rax,%r13
    cc9c:	49 21 d5             	and    %rdx,%r13
    cc9f:	48 01 c6             	add    %rax,%rsi
    cca2:	48 21 d6             	and    %rdx,%rsi
    cca5:	49 39 f5             	cmp    %rsi,%r13
    cca8:	76 28                	jbe    ccd2 <gimli::read::rnglists::RngListIter<R>::next+0x792>
    ccaa:	48 8d 05 a7 a5 02 00 	lea    0x2a5a7(%rip),%rax        # 37258 <_fini+0x1934>
    ccb1:	49 89 04 24          	mov    %rax,(%r12)
    ccb5:	49 c7 44 24 08 00 00 	movq   $0x0,0x8(%r12)
    ccbc:	00 00 
    ccbe:	48 8b 04 24          	mov    (%rsp),%rax
    ccc2:	c6 40 08 2f          	movb   $0x2f,0x8(%rax)
    ccc6:	48 c7 00 01 00 00 00 	movq   $0x1,(%rax)
    cccd:	e9 5a fd ff ff       	jmpq   ca2c <gimli::read::rnglists::RngListIter<R>::next+0x4ec>
    ccd2:	48 8b 04 24          	mov    (%rsp),%rax
    ccd6:	4c 89 68 10          	mov    %r13,0x10(%rax)
    ccda:	48 89 70 18          	mov    %rsi,0x18(%rax)
    ccde:	0f 28 05 4b 93 02 00 	movaps 0x2934b(%rip),%xmm0        # 36030 <_fini+0x70c>
    cce5:	e9 f5 fa ff ff       	jmpq   c7df <gimli::read::rnglists::RngListIter<R>::next+0x29f>
    ccea:	8d 79 ff             	lea    -0x1(%rcx),%edi
    cced:	40 80 ff 07          	cmp    $0x7,%dil
    ccf1:	0f 87 c6 00 00 00    	ja     cdbd <gimli::read::rnglists::RngListIter<R>::next+0x87d>
    ccf7:	4c 01 c0             	add    %r8,%rax
    ccfa:	40 0f b6 ff          	movzbl %dil,%edi
    ccfe:	48 8d 2d 4b 9d 02 00 	lea    0x29d4b(%rip),%rbp        # 36a50 <_fini+0x112c>
    cd05:	48 63 7c bd 00       	movslq 0x0(%rbp,%rdi,4),%rdi
    cd0a:	48 01 ef             	add    %rbp,%rdi
    cd0d:	ff e7                	jmpq   *%rdi
    cd0f:	48 85 d2             	test   %rdx,%rdx
    cd12:	0f 84 48 ff ff ff    	je     cc60 <gimli::read::rnglists::RngListIter<R>::next+0x720>
    cd18:	44 0f b6 28          	movzbl (%rax),%r13d
    cd1c:	eb 56                	jmp    cd74 <gimli::read::rnglists::RngListIter<R>::next+0x834>
    cd1e:	48 83 ff 02          	cmp    $0x2,%rdi
    cd22:	72 17                	jb     cd3b <gimli::read::rnglists::RngListIter<R>::next+0x7fb>
    cd24:	45 0f b7 28          	movzwl (%r8),%r13d
    cd28:	eb 55                	jmp    cd7f <gimli::read::rnglists::RngListIter<R>::next+0x83f>
    cd2a:	48 83 ff 04          	cmp    $0x4,%rdi
    cd2e:	72 0b                	jb     cd3b <gimli::read::rnglists::RngListIter<R>::next+0x7fb>
    cd30:	45 8b 28             	mov    (%r8),%r13d
    cd33:	eb 4a                	jmp    cd7f <gimli::read::rnglists::RngListIter<R>::next+0x83f>
    cd35:	48 83 ff 08          	cmp    $0x8,%rdi
    cd39:	73 41                	jae    cd7c <gimli::read::rnglists::RngListIter<R>::next+0x83c>
    cd3b:	b9 13 00 00 00       	mov    $0x13,%ecx
    cd40:	4c 89 c0             	mov    %r8,%rax
    cd43:	e9 1d ff ff ff       	jmpq   cc65 <gimli::read::rnglists::RngListIter<R>::next+0x725>
    cd48:	48 83 fa 02          	cmp    $0x2,%rdx
    cd4c:	0f 82 0e ff ff ff    	jb     cc60 <gimli::read::rnglists::RngListIter<R>::next+0x720>
    cd52:	44 0f b7 28          	movzwl (%rax),%r13d
    cd56:	eb 1c                	jmp    cd74 <gimli::read::rnglists::RngListIter<R>::next+0x834>
    cd58:	48 83 fa 04          	cmp    $0x4,%rdx
    cd5c:	0f 82 fe fe ff ff    	jb     cc60 <gimli::read::rnglists::RngListIter<R>::next+0x720>
    cd62:	44 8b 28             	mov    (%rax),%r13d
    cd65:	eb 0d                	jmp    cd74 <gimli::read::rnglists::RngListIter<R>::next+0x834>
    cd67:	48 83 fa 08          	cmp    $0x8,%rdx
    cd6b:	0f 82 ef fe ff ff    	jb     cc60 <gimli::read::rnglists::RngListIter<R>::next+0x720>
    cd71:	4c 8b 28             	mov    (%rax),%r13
    cd74:	4c 01 ee             	add    %r13,%rsi
    cd77:	e9 29 ff ff ff       	jmpq   cca5 <gimli::read::rnglists::RngListIter<R>::next+0x765>
    cd7c:	4d 8b 28             	mov    (%r8),%r13
    cd7f:	48 0f af f1          	imul   %rcx,%rsi
    cd83:	48 29 f2             	sub    %rsi,%rdx
    cd86:	0f 82 d4 fe ff ff    	jb     cc60 <gimli::read::rnglists::RngListIter<R>::next+0x720>
    cd8c:	8d 79 ff             	lea    -0x1(%rcx),%edi
    cd8f:	40 80 ff 07          	cmp    $0x7,%dil
    cd93:	77 28                	ja     cdbd <gimli::read::rnglists::RngListIter<R>::next+0x87d>
    cd95:	48 01 f0             	add    %rsi,%rax
    cd98:	40 0f b6 f7          	movzbl %dil,%esi
    cd9c:	48 8d 3d ed 9c 02 00 	lea    0x29ced(%rip),%rdi        # 36a90 <_fini+0x116c>
    cda3:	48 63 34 b7          	movslq (%rdi,%rsi,4),%rsi
    cda7:	48 01 fe             	add    %rdi,%rsi
    cdaa:	ff e6                	jmpq   *%rsi
    cdac:	48 85 d2             	test   %rdx,%rdx
    cdaf:	0f 84 ab fe ff ff    	je     cc60 <gimli::read::rnglists::RngListIter<R>::next+0x720>
    cdb5:	0f b6 30             	movzbl (%rax),%esi
    cdb8:	e9 e8 fe ff ff       	jmpq   cca5 <gimli::read::rnglists::RngListIter<R>::next+0x765>
    cdbd:	48 c1 e1 08          	shl    $0x8,%rcx
    cdc1:	48 83 c9 17          	or     $0x17,%rcx
    cdc5:	31 c0                	xor    %eax,%eax
    cdc7:	e9 99 fe ff ff       	jmpq   cc65 <gimli::read::rnglists::RngListIter<R>::next+0x725>
    cdcc:	48 83 fa 02          	cmp    $0x2,%rdx
    cdd0:	0f 82 8a fe ff ff    	jb     cc60 <gimli::read::rnglists::RngListIter<R>::next+0x720>
    cdd6:	0f b7 30             	movzwl (%rax),%esi
    cdd9:	e9 c7 fe ff ff       	jmpq   cca5 <gimli::read::rnglists::RngListIter<R>::next+0x765>
    cdde:	48 83 fa 04          	cmp    $0x4,%rdx
    cde2:	0f 82 78 fe ff ff    	jb     cc60 <gimli::read::rnglists::RngListIter<R>::next+0x720>
    cde8:	8b 30                	mov    (%rax),%esi
    cdea:	e9 b6 fe ff ff       	jmpq   cca5 <gimli::read::rnglists::RngListIter<R>::next+0x765>
    cdef:	48 83 fa 08          	cmp    $0x8,%rdx
    cdf3:	0f 82 67 fe ff ff    	jb     cc60 <gimli::read::rnglists::RngListIter<R>::next+0x720>
    cdf9:	48 8b 30             	mov    (%rax),%rsi
    cdfc:	e9 a4 fe ff ff       	jmpq   cca5 <gimli::read::rnglists::RngListIter<R>::next+0x765>
    ce01:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    ce08:	00 00 00 
    ce0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000ce10 <<alloc::string::String as core::fmt::Display>::fmt>:
    ce10:	48 89 f2             	mov    %rsi,%rdx
    ce13:	48 8b 07             	mov    (%rdi),%rax
    ce16:	48 8b 77 10          	mov    0x10(%rdi),%rsi
    ce1a:	48 89 c7             	mov    %rax,%rdi
    ce1d:	ff 25 c5 8e 03 00    	jmpq   *0x38ec5(%rip)        # 45ce8 <_GLOBAL_OFFSET_TABLE_+0x360>
    ce23:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    ce2a:	00 00 00 
    ce2d:	0f 1f 00             	nopl   (%rax)

000000000000ce30 <<gimli::read::unit::AttributeValue<R,Offset> as core::clone::Clone>::clone>:
    ce30:	48 8b 06             	mov    (%rsi),%rax
    ce33:	48 8d 0d 96 9c 02 00 	lea    0x29c96(%rip),%rcx        # 36ad0 <_fini+0x11ac>
    ce3a:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    ce3e:	48 01 c8             	add    %rcx,%rax
    ce41:	ff e0                	jmpq   *%rax
    ce43:	48 8b 46 08          	mov    0x8(%rsi),%rax
    ce47:	48 89 47 08          	mov    %rax,0x8(%rdi)
    ce4b:	31 c0                	xor    %eax,%eax
    ce4d:	48 89 07             	mov    %rax,(%rdi)
    ce50:	c3                   	retq   
    ce51:	0f 10 46 08          	movups 0x8(%rsi),%xmm0
    ce55:	0f 11 47 08          	movups %xmm0,0x8(%rdi)
    ce59:	b8 01 00 00 00       	mov    $0x1,%eax
    ce5e:	48 89 07             	mov    %rax,(%rdi)
    ce61:	c3                   	retq   
    ce62:	8a 46 08             	mov    0x8(%rsi),%al
    ce65:	88 47 08             	mov    %al,0x8(%rdi)
    ce68:	b8 02 00 00 00       	mov    $0x2,%eax
    ce6d:	48 89 07             	mov    %rax,(%rdi)
    ce70:	c3                   	retq   
    ce71:	0f b7 46 08          	movzwl 0x8(%rsi),%eax
    ce75:	66 89 47 08          	mov    %ax,0x8(%rdi)
    ce79:	b8 03 00 00 00       	mov    $0x3,%eax
    ce7e:	48 89 07             	mov    %rax,(%rdi)
    ce81:	c3                   	retq   
    ce82:	8b 46 08             	mov    0x8(%rsi),%eax
    ce85:	89 47 08             	mov    %eax,0x8(%rdi)
    ce88:	b8 04 00 00 00       	mov    $0x4,%eax
    ce8d:	48 89 07             	mov    %rax,(%rdi)
    ce90:	c3                   	retq   
    ce91:	48 8b 46 08          	mov    0x8(%rsi),%rax
    ce95:	48 89 47 08          	mov    %rax,0x8(%rdi)
    ce99:	b8 05 00 00 00       	mov    $0x5,%eax
    ce9e:	48 89 07             	mov    %rax,(%rdi)
    cea1:	c3                   	retq   
    cea2:	48 8b 46 08          	mov    0x8(%rsi),%rax
    cea6:	48 89 47 08          	mov    %rax,0x8(%rdi)
    ceaa:	b8 06 00 00 00       	mov    $0x6,%eax
    ceaf:	48 89 07             	mov    %rax,(%rdi)
    ceb2:	c3                   	retq   
    ceb3:	48 8b 46 08          	mov    0x8(%rsi),%rax
    ceb7:	48 89 47 08          	mov    %rax,0x8(%rdi)
    cebb:	b8 07 00 00 00       	mov    $0x7,%eax
    cec0:	48 89 07             	mov    %rax,(%rdi)
    cec3:	c3                   	retq   
    cec4:	0f 10 46 08          	movups 0x8(%rsi),%xmm0
    cec8:	0f 11 47 08          	movups %xmm0,0x8(%rdi)
    cecc:	b8 08 00 00 00       	mov    $0x8,%eax
    ced1:	48 89 07             	mov    %rax,(%rdi)
    ced4:	c3                   	retq   
    ced5:	80 7e 08 00          	cmpb   $0x0,0x8(%rsi)
    ced9:	0f 95 47 08          	setne  0x8(%rdi)
    cedd:	b8 09 00 00 00       	mov    $0x9,%eax
    cee2:	48 89 07             	mov    %rax,(%rdi)
    cee5:	c3                   	retq   
    cee6:	48 8b 46 08          	mov    0x8(%rsi),%rax
    ceea:	48 89 47 08          	mov    %rax,0x8(%rdi)
    ceee:	b8 0a 00 00 00       	mov    $0xa,%eax
    cef3:	48 89 07             	mov    %rax,(%rdi)
    cef6:	c3                   	retq   
    cef7:	48 8b 46 08          	mov    0x8(%rsi),%rax
    cefb:	48 89 47 08          	mov    %rax,0x8(%rdi)
    ceff:	b8 0b 00 00 00       	mov    $0xb,%eax
    cf04:	48 89 07             	mov    %rax,(%rdi)
    cf07:	c3                   	retq   
    cf08:	48 8b 46 08          	mov    0x8(%rsi),%rax
    cf0c:	48 89 47 08          	mov    %rax,0x8(%rdi)
    cf10:	b8 0c 00 00 00       	mov    $0xc,%eax
    cf15:	48 89 07             	mov    %rax,(%rdi)
    cf18:	c3                   	retq   
    cf19:	48 8b 46 08          	mov    0x8(%rsi),%rax
    cf1d:	48 89 47 08          	mov    %rax,0x8(%rdi)
    cf21:	b8 0d 00 00 00       	mov    $0xd,%eax
    cf26:	48 89 07             	mov    %rax,(%rdi)
    cf29:	c3                   	retq   
    cf2a:	48 8b 46 08          	mov    0x8(%rsi),%rax
    cf2e:	48 89 47 08          	mov    %rax,0x8(%rdi)
    cf32:	b8 0e 00 00 00       	mov    $0xe,%eax
    cf37:	48 89 07             	mov    %rax,(%rdi)
    cf3a:	c3                   	retq   
    cf3b:	48 8b 46 08          	mov    0x8(%rsi),%rax
    cf3f:	48 89 47 08          	mov    %rax,0x8(%rdi)
    cf43:	b8 0f 00 00 00       	mov    $0xf,%eax
    cf48:	48 89 07             	mov    %rax,(%rdi)
    cf4b:	c3                   	retq   
    cf4c:	48 8b 46 08          	mov    0x8(%rsi),%rax
    cf50:	48 89 47 08          	mov    %rax,0x8(%rdi)
    cf54:	b8 10 00 00 00       	mov    $0x10,%eax
    cf59:	48 89 07             	mov    %rax,(%rdi)
    cf5c:	c3                   	retq   
    cf5d:	48 8b 46 08          	mov    0x8(%rsi),%rax
    cf61:	48 89 47 08          	mov    %rax,0x8(%rdi)
    cf65:	b8 11 00 00 00       	mov    $0x11,%eax
    cf6a:	48 89 07             	mov    %rax,(%rdi)
    cf6d:	c3                   	retq   
    cf6e:	48 8b 46 08          	mov    0x8(%rsi),%rax
    cf72:	48 89 47 08          	mov    %rax,0x8(%rdi)
    cf76:	b8 12 00 00 00       	mov    $0x12,%eax
    cf7b:	48 89 07             	mov    %rax,(%rdi)
    cf7e:	c3                   	retq   
    cf7f:	48 8b 46 08          	mov    0x8(%rsi),%rax
    cf83:	48 89 47 08          	mov    %rax,0x8(%rdi)
    cf87:	b8 13 00 00 00       	mov    $0x13,%eax
    cf8c:	48 89 07             	mov    %rax,(%rdi)
    cf8f:	c3                   	retq   
    cf90:	48 8b 46 08          	mov    0x8(%rsi),%rax
    cf94:	48 89 47 08          	mov    %rax,0x8(%rdi)
    cf98:	b8 14 00 00 00       	mov    $0x14,%eax
    cf9d:	48 89 07             	mov    %rax,(%rdi)
    cfa0:	c3                   	retq   
    cfa1:	48 8b 46 08          	mov    0x8(%rsi),%rax
    cfa5:	48 89 47 08          	mov    %rax,0x8(%rdi)
    cfa9:	b8 15 00 00 00       	mov    $0x15,%eax
    cfae:	48 89 07             	mov    %rax,(%rdi)
    cfb1:	c3                   	retq   
    cfb2:	48 8b 46 08          	mov    0x8(%rsi),%rax
    cfb6:	48 89 47 08          	mov    %rax,0x8(%rdi)
    cfba:	b8 16 00 00 00       	mov    $0x16,%eax
    cfbf:	48 89 07             	mov    %rax,(%rdi)
    cfc2:	c3                   	retq   
    cfc3:	48 8b 46 08          	mov    0x8(%rsi),%rax
    cfc7:	48 89 47 08          	mov    %rax,0x8(%rdi)
    cfcb:	b8 17 00 00 00       	mov    $0x17,%eax
    cfd0:	48 89 07             	mov    %rax,(%rdi)
    cfd3:	c3                   	retq   
    cfd4:	48 8b 46 08          	mov    0x8(%rsi),%rax
    cfd8:	48 89 47 08          	mov    %rax,0x8(%rdi)
    cfdc:	b8 18 00 00 00       	mov    $0x18,%eax
    cfe1:	48 89 07             	mov    %rax,(%rdi)
    cfe4:	c3                   	retq   
    cfe5:	48 8b 46 08          	mov    0x8(%rsi),%rax
    cfe9:	48 89 47 08          	mov    %rax,0x8(%rdi)
    cfed:	b8 19 00 00 00       	mov    $0x19,%eax
    cff2:	48 89 07             	mov    %rax,(%rdi)
    cff5:	c3                   	retq   
    cff6:	48 8b 46 08          	mov    0x8(%rsi),%rax
    cffa:	48 89 47 08          	mov    %rax,0x8(%rdi)
    cffe:	b8 1a 00 00 00       	mov    $0x1a,%eax
    d003:	48 89 07             	mov    %rax,(%rdi)
    d006:	c3                   	retq   
    d007:	48 8b 46 08          	mov    0x8(%rsi),%rax
    d00b:	48 89 47 08          	mov    %rax,0x8(%rdi)
    d00f:	b8 1b 00 00 00       	mov    $0x1b,%eax
    d014:	48 89 07             	mov    %rax,(%rdi)
    d017:	c3                   	retq   
    d018:	48 8b 46 08          	mov    0x8(%rsi),%rax
    d01c:	48 89 47 08          	mov    %rax,0x8(%rdi)
    d020:	b8 1c 00 00 00       	mov    $0x1c,%eax
    d025:	48 89 07             	mov    %rax,(%rdi)
    d028:	c3                   	retq   
    d029:	48 8b 46 08          	mov    0x8(%rsi),%rax
    d02d:	48 89 47 08          	mov    %rax,0x8(%rdi)
    d031:	b8 1d 00 00 00       	mov    $0x1d,%eax
    d036:	48 89 07             	mov    %rax,(%rdi)
    d039:	c3                   	retq   
    d03a:	48 8b 46 08          	mov    0x8(%rsi),%rax
    d03e:	48 89 47 08          	mov    %rax,0x8(%rdi)
    d042:	b8 1e 00 00 00       	mov    $0x1e,%eax
    d047:	48 89 07             	mov    %rax,(%rdi)
    d04a:	c3                   	retq   
    d04b:	0f 10 46 08          	movups 0x8(%rsi),%xmm0
    d04f:	0f 11 47 08          	movups %xmm0,0x8(%rdi)
    d053:	b8 1f 00 00 00       	mov    $0x1f,%eax
    d058:	48 89 07             	mov    %rax,(%rdi)
    d05b:	c3                   	retq   
    d05c:	8a 46 08             	mov    0x8(%rsi),%al
    d05f:	88 47 08             	mov    %al,0x8(%rdi)
    d062:	b8 20 00 00 00       	mov    $0x20,%eax
    d067:	48 89 07             	mov    %rax,(%rdi)
    d06a:	c3                   	retq   
    d06b:	8a 46 08             	mov    0x8(%rsi),%al
    d06e:	88 47 08             	mov    %al,0x8(%rdi)
    d071:	b8 21 00 00 00       	mov    $0x21,%eax
    d076:	48 89 07             	mov    %rax,(%rdi)
    d079:	c3                   	retq   
    d07a:	8a 46 08             	mov    0x8(%rsi),%al
    d07d:	88 47 08             	mov    %al,0x8(%rdi)
    d080:	b8 22 00 00 00       	mov    $0x22,%eax
    d085:	48 89 07             	mov    %rax,(%rdi)
    d088:	c3                   	retq   
    d089:	8a 46 08             	mov    0x8(%rsi),%al
    d08c:	88 47 08             	mov    %al,0x8(%rdi)
    d08f:	b8 23 00 00 00       	mov    $0x23,%eax
    d094:	48 89 07             	mov    %rax,(%rdi)
    d097:	c3                   	retq   
    d098:	8a 46 08             	mov    0x8(%rsi),%al
    d09b:	88 47 08             	mov    %al,0x8(%rdi)
    d09e:	b8 24 00 00 00       	mov    $0x24,%eax
    d0a3:	48 89 07             	mov    %rax,(%rdi)
    d0a6:	c3                   	retq   
    d0a7:	8a 46 08             	mov    0x8(%rsi),%al
    d0aa:	88 47 08             	mov    %al,0x8(%rdi)
    d0ad:	b8 25 00 00 00       	mov    $0x25,%eax
    d0b2:	48 89 07             	mov    %rax,(%rdi)
    d0b5:	c3                   	retq   
    d0b6:	0f b7 46 08          	movzwl 0x8(%rsi),%eax
    d0ba:	66 89 47 08          	mov    %ax,0x8(%rdi)
    d0be:	b8 26 00 00 00       	mov    $0x26,%eax
    d0c3:	48 89 07             	mov    %rax,(%rdi)
    d0c6:	c3                   	retq   
    d0c7:	48 8b 46 08          	mov    0x8(%rsi),%rax
    d0cb:	48 89 47 08          	mov    %rax,0x8(%rdi)
    d0cf:	b8 27 00 00 00       	mov    $0x27,%eax
    d0d4:	48 89 07             	mov    %rax,(%rdi)
    d0d7:	c3                   	retq   
    d0d8:	8a 46 08             	mov    0x8(%rsi),%al
    d0db:	88 47 08             	mov    %al,0x8(%rdi)
    d0de:	b8 28 00 00 00       	mov    $0x28,%eax
    d0e3:	48 89 07             	mov    %rax,(%rdi)
    d0e6:	c3                   	retq   
    d0e7:	8a 46 08             	mov    0x8(%rsi),%al
    d0ea:	88 47 08             	mov    %al,0x8(%rdi)
    d0ed:	b8 29 00 00 00       	mov    $0x29,%eax
    d0f2:	48 89 07             	mov    %rax,(%rdi)
    d0f5:	c3                   	retq   
    d0f6:	8a 46 08             	mov    0x8(%rsi),%al
    d0f9:	88 47 08             	mov    %al,0x8(%rdi)
    d0fc:	b8 2a 00 00 00       	mov    $0x2a,%eax
    d101:	48 89 07             	mov    %rax,(%rdi)
    d104:	c3                   	retq   
    d105:	8a 46 08             	mov    0x8(%rsi),%al
    d108:	88 47 08             	mov    %al,0x8(%rdi)
    d10b:	b8 2b 00 00 00       	mov    $0x2b,%eax
    d110:	48 89 07             	mov    %rax,(%rdi)
    d113:	c3                   	retq   
    d114:	48 8b 46 08          	mov    0x8(%rsi),%rax
    d118:	48 89 47 08          	mov    %rax,0x8(%rdi)
    d11c:	b8 2c 00 00 00       	mov    $0x2c,%eax
    d121:	48 89 07             	mov    %rax,(%rdi)
    d124:	c3                   	retq   
    d125:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    d12c:	00 00 00 
    d12f:	90                   	nop

000000000000d130 <addr2line::ResUnit<R>::parse_lines>:
    d130:	55                   	push   %rbp
    d131:	41 57                	push   %r15
    d133:	41 56                	push   %r14
    d135:	41 55                	push   %r13
    d137:	41 54                	push   %r12
    d139:	53                   	push   %rbx
    d13a:	48 81 ec 08 04 00 00 	sub    $0x408,%rsp
    d141:	48 89 b4 24 a0 03 00 	mov    %rsi,0x3a0(%rsp)
    d148:	00 
    d149:	48 89 94 24 a8 03 00 	mov    %rdx,0x3a8(%rsp)
    d150:	00 
    d151:	83 be 60 01 00 00 2e 	cmpl   $0x2e,0x160(%rsi)
    d158:	75 0d                	jne    d167 <addr2line::ResUnit<R>::parse_lines+0x37>
    d15a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d15e:	f3 0f 7f 07          	movdqu %xmm0,(%rdi)
    d162:	e9 df 32 00 00       	jmpq   10446 <addr2line::ResUnit<R>::parse_lines+0x3316>
    d167:	48 8b 86 b0 01 00 00 	mov    0x1b0(%rsi),%rax
    d16e:	48 83 f8 02          	cmp    $0x2,%rax
    d172:	0f 85 a9 32 00 00    	jne    10421 <addr2line::ResUnit<R>::parse_lines+0x32f1>
    d178:	48 c7 84 24 70 01 00 	movq   $0x8,0x170(%rsp)
    d17f:	00 08 00 00 00 
    d184:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d188:	f3 0f 7f 84 24 78 01 	movdqu %xmm0,0x178(%rsp)
    d18f:	00 00 
    d191:	48 c7 84 24 88 01 00 	movq   $0x8,0x188(%rsp)
    d198:	00 08 00 00 00 
    d19d:	f3 0f 7f 84 24 90 01 	movdqu %xmm0,0x190(%rsp)
    d1a4:	00 00 
    d1a6:	4c 8b be f0 00 00 00 	mov    0xf0(%rsi),%r15
    d1ad:	b9 04 00 00 00       	mov    $0x4,%ecx
    d1b2:	31 db                	xor    %ebx,%ebx
    d1b4:	4c 89 f8             	mov    %r15,%rax
    d1b7:	48 f7 e1             	mul    %rcx
    d1ba:	48 89 c5             	mov    %rax,%rbp
    d1bd:	0f 91 c0             	setno  %al
    d1c0:	0f 80 da 33 00 00    	jo     105a0 <addr2line::ResUnit<R>::parse_lines+0x3470>
    d1c6:	48 89 bc 24 08 03 00 	mov    %rdi,0x308(%rsp)
    d1cd:	00 
    d1ce:	8b 8e a0 01 00 00    	mov    0x1a0(%rsi),%ecx
    d1d4:	89 8c 24 e0 00 00 00 	mov    %ecx,0xe0(%rsp)
    d1db:	f3 0f 6f 86 b8 00 00 	movdqu 0xb8(%rsi),%xmm0
    d1e2:	00 
    d1e3:	66 0f 7f 84 24 a0 01 	movdqa %xmm0,0x1a0(%rsp)
    d1ea:	00 00 
    d1ec:	48 8b 8e c8 00 00 00 	mov    0xc8(%rsi),%rcx
    d1f3:	48 89 8c 24 08 01 00 	mov    %rcx,0x108(%rsp)
    d1fa:	00 
    d1fb:	44 8b a6 a4 01 00 00 	mov    0x1a4(%rsi),%r12d
    d202:	44 8b ae a8 01 00 00 	mov    0x1a8(%rsi),%r13d
    d209:	8a 8e a9 01 00 00    	mov    0x1a9(%rsi),%cl
    d20f:	88 8c 24 f8 00 00 00 	mov    %cl,0xf8(%rsp)
    d216:	48 8b 8e d0 00 00 00 	mov    0xd0(%rsi),%rcx
    d21d:	48 89 8c 24 68 01 00 	mov    %rcx,0x168(%rsp)
    d224:	00 
    d225:	48 8b 8e d8 00 00 00 	mov    0xd8(%rsi),%rcx
    d22c:	48 89 8c 24 00 01 00 	mov    %rcx,0x100(%rsp)
    d233:	00 
    d234:	48 89 b4 24 f0 00 00 	mov    %rsi,0xf0(%rsp)
    d23b:	00 
    d23c:	4c 8b b6 e0 00 00 00 	mov    0xe0(%rsi),%r14
    d243:	88 c3                	mov    %al,%bl
    d245:	48 01 db             	add    %rbx,%rbx
    d248:	48 85 ed             	test   %rbp,%rbp
    d24b:	74 16                	je     d263 <addr2line::ResUnit<R>::parse_lines+0x133>
    d24d:	48 89 ef             	mov    %rbp,%rdi
    d250:	48 89 de             	mov    %rbx,%rsi
    d253:	ff 15 27 89 03 00    	callq  *0x38927(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
    d259:	48 85 c0             	test   %rax,%rax
    d25c:	75 11                	jne    d26f <addr2line::ResUnit<R>::parse_lines+0x13f>
    d25e:	e9 86 21 00 00       	jmpq   f3e9 <addr2line::ResUnit<R>::parse_lines+0x22b9>
    d263:	48 89 d8             	mov    %rbx,%rax
    d266:	48 85 c0             	test   %rax,%rax
    d269:	0f 84 7a 21 00 00    	je     f3e9 <addr2line::ResUnit<R>::parse_lines+0x22b9>
    d26f:	48 c1 ed 02          	shr    $0x2,%rbp
    d273:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
    d27a:	00 
    d27b:	48 89 ac 24 d0 00 00 	mov    %rbp,0xd0(%rsp)
    d282:	00 
    d283:	48 c7 84 24 d8 00 00 	movq   $0x0,0xd8(%rsp)
    d28a:	00 00 00 00 00 
    d28f:	48 8d bc 24 c8 00 00 	lea    0xc8(%rsp),%rdi
    d296:	00 
    d297:	4c 89 fe             	mov    %r15,%rsi
    d29a:	e8 61 c4 ff ff       	callq  9700 <alloc::vec::Vec<T>::reserve>
    d29f:	4a 8d 14 bd 00 00 00 	lea    0x0(,%r15,4),%rdx
    d2a6:	00 
    d2a7:	48 8b 9c 24 d8 00 00 	mov    0xd8(%rsp),%rbx
    d2ae:	00 
    d2af:	48 8d 3c 9d 00 00 00 	lea    0x0(,%rbx,4),%rdi
    d2b6:	00 
    d2b7:	48 03 bc 24 c8 00 00 	add    0xc8(%rsp),%rdi
    d2be:	00 
    d2bf:	4c 89 f6             	mov    %r14,%rsi
    d2c2:	ff 15 30 8a 03 00    	callq  *0x38a30(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
    d2c8:	4c 01 fb             	add    %r15,%rbx
    d2cb:	48 89 9c 24 d8 00 00 	mov    %rbx,0xd8(%rsp)
    d2d2:	00 
    d2d3:	48 8b b4 24 f0 00 00 	mov    0xf0(%rsp),%rsi
    d2da:	00 
    d2db:	48 8b 9e 08 01 00 00 	mov    0x108(%rsi),%rbx
    d2e2:	b9 18 00 00 00       	mov    $0x18,%ecx
    d2e7:	31 ed                	xor    %ebp,%ebp
    d2e9:	48 89 d8             	mov    %rbx,%rax
    d2ec:	48 f7 e1             	mul    %rcx
    d2ef:	49 89 c7             	mov    %rax,%r15
    d2f2:	0f 91 c0             	setno  %al
    d2f5:	0f 80 ad 32 00 00    	jo     105a8 <addr2line::ResUnit<R>::parse_lines+0x3478>
    d2fb:	4c 8b b6 f8 00 00 00 	mov    0xf8(%rsi),%r14
    d302:	40 88 c5             	mov    %al,%bpl
    d305:	48 c1 e5 03          	shl    $0x3,%rbp
    d309:	4d 85 ff             	test   %r15,%r15
    d30c:	0f 84 c8 00 00 00    	je     d3da <addr2line::ResUnit<R>::parse_lines+0x2aa>
    d312:	4c 89 ff             	mov    %r15,%rdi
    d315:	48 89 ee             	mov    %rbp,%rsi
    d318:	ff 15 62 88 03 00    	callq  *0x38862(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
    d31e:	48 89 c1             	mov    %rax,%rcx
    d321:	48 85 c9             	test   %rcx,%rcx
    d324:	0f 84 bc 00 00 00    	je     d3e6 <addr2line::ResUnit<R>::parse_lines+0x2b6>
    d32a:	48 ba ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rdx
    d331:	aa aa aa 
    d334:	4c 89 f8             	mov    %r15,%rax
    d337:	48 f7 e2             	mul    %rdx
    d33a:	48 c1 ea 04          	shr    $0x4,%rdx
    d33e:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    d343:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    d348:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    d34f:	00 00 
    d351:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    d356:	48 89 de             	mov    %rbx,%rsi
    d359:	e8 72 c4 ff ff       	callq  97d0 <alloc::vec::Vec<T>::reserve>
    d35e:	48 8b 6c 24 18       	mov    0x18(%rsp),%rbp
    d363:	48 8d 3c 6d 00 00 00 	lea    0x0(,%rbp,2),%rdi
    d36a:	00 
    d36b:	48 01 ef             	add    %rbp,%rdi
    d36e:	48 c1 e7 03          	shl    $0x3,%rdi
    d372:	48 03 7c 24 08       	add    0x8(%rsp),%rdi
    d377:	4c 89 f6             	mov    %r14,%rsi
    d37a:	4c 89 fa             	mov    %r15,%rdx
    d37d:	ff 15 75 89 03 00    	callq  *0x38975(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
    d383:	48 01 eb             	add    %rbp,%rbx
    d386:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
    d38b:	48 8b b4 24 f0 00 00 	mov    0xf0(%rsp),%rsi
    d392:	00 
    d393:	4c 8b be 20 01 00 00 	mov    0x120(%rsi),%r15
    d39a:	b9 04 00 00 00       	mov    $0x4,%ecx
    d39f:	31 db                	xor    %ebx,%ebx
    d3a1:	4c 89 f8             	mov    %r15,%rax
    d3a4:	48 f7 e1             	mul    %rcx
    d3a7:	48 89 c5             	mov    %rax,%rbp
    d3aa:	0f 91 c0             	setno  %al
    d3ad:	0f 80 fd 31 00 00    	jo     105b0 <addr2line::ResUnit<R>::parse_lines+0x3480>
    d3b3:	4c 8b b6 10 01 00 00 	mov    0x110(%rsi),%r14
    d3ba:	88 c3                	mov    %al,%bl
    d3bc:	48 01 db             	add    %rbx,%rbx
    d3bf:	48 85 ed             	test   %rbp,%rbp
    d3c2:	74 30                	je     d3f4 <addr2line::ResUnit<R>::parse_lines+0x2c4>
    d3c4:	48 89 ef             	mov    %rbp,%rdi
    d3c7:	48 89 de             	mov    %rbx,%rsi
    d3ca:	ff 15 b0 87 03 00    	callq  *0x387b0(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
    d3d0:	48 85 c0             	test   %rax,%rax
    d3d3:	75 2b                	jne    d400 <addr2line::ResUnit<R>::parse_lines+0x2d0>
    d3d5:	e9 0f 20 00 00       	jmpq   f3e9 <addr2line::ResUnit<R>::parse_lines+0x22b9>
    d3da:	48 89 e9             	mov    %rbp,%rcx
    d3dd:	48 85 c9             	test   %rcx,%rcx
    d3e0:	0f 85 44 ff ff ff    	jne    d32a <addr2line::ResUnit<R>::parse_lines+0x1fa>
    d3e6:	4c 89 ff             	mov    %r15,%rdi
    d3e9:	48 89 ee             	mov    %rbp,%rsi
    d3ec:	ff 15 2e 87 03 00    	callq  *0x3872e(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
    d3f2:	0f 0b                	ud2    
    d3f4:	48 89 d8             	mov    %rbx,%rax
    d3f7:	48 85 c0             	test   %rax,%rax
    d3fa:	0f 84 e9 1f 00 00    	je     f3e9 <addr2line::ResUnit<R>::parse_lines+0x22b9>
    d400:	48 c1 ed 02          	shr    $0x2,%rbp
    d404:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
    d40b:	00 
    d40c:	48 89 ac 24 98 00 00 	mov    %rbp,0x98(%rsp)
    d413:	00 
    d414:	48 c7 84 24 a0 00 00 	movq   $0x0,0xa0(%rsp)
    d41b:	00 00 00 00 00 
    d420:	48 8d bc 24 90 00 00 	lea    0x90(%rsp),%rdi
    d427:	00 
    d428:	4c 89 fe             	mov    %r15,%rsi
    d42b:	e8 d0 c2 ff ff       	callq  9700 <alloc::vec::Vec<T>::reserve>
    d430:	4a 8d 14 bd 00 00 00 	lea    0x0(,%r15,4),%rdx
    d437:	00 
    d438:	48 8b 9c 24 a0 00 00 	mov    0xa0(%rsp),%rbx
    d43f:	00 
    d440:	48 8d 3c 9d 00 00 00 	lea    0x0(,%rbx,4),%rdi
    d447:	00 
    d448:	48 03 bc 24 90 00 00 	add    0x90(%rsp),%rdi
    d44f:	00 
    d450:	4c 89 f6             	mov    %r14,%rsi
    d453:	ff 15 9f 88 03 00    	callq  *0x3889f(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
    d459:	4c 01 fb             	add    %r15,%rbx
    d45c:	48 89 9c 24 a0 00 00 	mov    %rbx,0xa0(%rsp)
    d463:	00 
    d464:	48 8b b4 24 f0 00 00 	mov    0xf0(%rsp),%rsi
    d46b:	00 
    d46c:	4c 8b be 38 01 00 00 	mov    0x138(%rsi),%r15
    d473:	b9 40 00 00 00       	mov    $0x40,%ecx
    d478:	31 db                	xor    %ebx,%ebx
    d47a:	4c 89 f8             	mov    %r15,%rax
    d47d:	48 f7 e1             	mul    %rcx
    d480:	48 89 c5             	mov    %rax,%rbp
    d483:	0f 91 c0             	setno  %al
    d486:	0f 80 2c 31 00 00    	jo     105b8 <addr2line::ResUnit<R>::parse_lines+0x3488>
    d48c:	4c 8b b6 28 01 00 00 	mov    0x128(%rsi),%r14
    d493:	88 c3                	mov    %al,%bl
    d495:	48 c1 e3 03          	shl    $0x3,%rbx
    d499:	48 85 ed             	test   %rbp,%rbp
    d49c:	0f 84 3b 1f 00 00    	je     f3dd <addr2line::ResUnit<R>::parse_lines+0x22ad>
    d4a2:	48 89 ef             	mov    %rbp,%rdi
    d4a5:	48 89 de             	mov    %rbx,%rsi
    d4a8:	ff 15 d2 86 03 00    	callq  *0x386d2(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
    d4ae:	48 85 c0             	test   %rax,%rax
    d4b1:	0f 84 32 1f 00 00    	je     f3e9 <addr2line::ResUnit<R>::parse_lines+0x22b9>
    d4b7:	48 c1 ed 06          	shr    $0x6,%rbp
    d4bb:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    d4c0:	48 89 6c 24 28       	mov    %rbp,0x28(%rsp)
    d4c5:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
    d4cc:	00 00 
    d4ce:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    d4d3:	4c 89 fe             	mov    %r15,%rsi
    d4d6:	e8 d5 c3 ff ff       	callq  98b0 <alloc::vec::Vec<T>::reserve>
    d4db:	49 c1 e5 20          	shl    $0x20,%r13
    d4df:	4d 09 e5             	or     %r12,%r13
    d4e2:	48 8b ac 24 f0 00 00 	mov    0xf0(%rsp),%rbp
    d4e9:	00 
    d4ea:	48 8d 85 60 01 00 00 	lea    0x160(%rbp),%rax
    d4f1:	48 89 84 24 10 03 00 	mov    %rax,0x310(%rsp)
    d4f8:	00 
    d4f9:	4c 89 fa             	mov    %r15,%rdx
    d4fc:	48 c1 e2 06          	shl    $0x6,%rdx
    d500:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
    d505:	48 89 df             	mov    %rbx,%rdi
    d508:	48 c1 e7 06          	shl    $0x6,%rdi
    d50c:	48 03 7c 24 20       	add    0x20(%rsp),%rdi
    d511:	4c 89 f6             	mov    %r14,%rsi
    d514:	ff 15 de 87 03 00    	callq  *0x387de(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
    d51a:	4c 01 fb             	add    %r15,%rbx
    d51d:	48 89 5c 24 30       	mov    %rbx,0x30(%rsp)
    d522:	48 8b 9d 40 01 00 00 	mov    0x140(%rbp),%rbx
    d529:	f3 0f 6f 9d 48 01 00 	movdqu 0x148(%rbp),%xmm3
    d530:	00 
    d531:	4c 8b b5 58 01 00 00 	mov    0x158(%rbp),%r14
    d538:	b8 2d 00 00 00       	mov    $0x2d,%eax
    d53d:	83 bd 60 01 00 00 2d 	cmpl   $0x2d,0x160(%rbp)
    d544:	0f 84 a2 00 00 00    	je     d5ec <addr2line::ResUnit<R>::parse_lines+0x4bc>
    d54a:	48 8d bc 24 10 01 00 	lea    0x110(%rsp),%rdi
    d551:	00 
    d552:	48 8b b4 24 10 03 00 	mov    0x310(%rsp),%rsi
    d559:	00 
    d55a:	66 0f 7f 9c 24 30 03 	movdqa %xmm3,0x330(%rsp)
    d561:	00 00 
    d563:	e8 c8 f8 ff ff       	callq  ce30 <<gimli::read::unit::AttributeValue<R,Offset> as core::clone::Clone>::clone>
    d568:	66 0f 6f 9c 24 30 03 	movdqa 0x330(%rsp),%xmm3
    d56f:	00 00 
    d571:	0f 10 85 78 01 00 00 	movups 0x178(%rbp),%xmm0
    d578:	48 8b 85 88 01 00 00 	mov    0x188(%rbp),%rax
    d57f:	0f 10 8d 90 01 00 00 	movups 0x190(%rbp),%xmm1
    d586:	0f 11 84 24 28 01 00 	movups %xmm0,0x128(%rsp)
    d58d:	00 
    d58e:	48 89 84 24 38 01 00 	mov    %rax,0x138(%rsp)
    d595:	00 
    d596:	0f 11 8c 24 40 01 00 	movups %xmm1,0x140(%rsp)
    d59d:	00 
    d59e:	48 8b 84 24 10 01 00 	mov    0x110(%rsp),%rax
    d5a5:	00 
    d5a6:	0f 10 84 24 18 01 00 	movups 0x118(%rsp),%xmm0
    d5ad:	00 
    d5ae:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    d5b3:	f3 0f 6f 84 24 28 01 	movdqu 0x128(%rsp),%xmm0
    d5ba:	00 00 
    d5bc:	66 0f 7f 44 24 60    	movdqa %xmm0,0x60(%rsp)
    d5c2:	48 8b 8c 24 38 01 00 	mov    0x138(%rsp),%rcx
    d5c9:	00 
    d5ca:	48 89 4c 24 70       	mov    %rcx,0x70(%rsp)
    d5cf:	48 8b 8c 24 40 01 00 	mov    0x140(%rsp),%rcx
    d5d6:	00 
    d5d7:	48 89 4c 24 78       	mov    %rcx,0x78(%rsp)
    d5dc:	48 8b 8c 24 48 01 00 	mov    0x148(%rsp),%rcx
    d5e3:	00 
    d5e4:	48 89 8c 24 80 00 00 	mov    %rcx,0x80(%rsp)
    d5eb:	00 
    d5ec:	48 8d 8d b0 01 00 00 	lea    0x1b0(%rbp),%rcx
    d5f3:	48 89 8c 24 78 03 00 	mov    %rcx,0x378(%rsp)
    d5fa:	00 
    d5fb:	48 8b 8c 24 d8 00 00 	mov    0xd8(%rsp),%rcx
    d602:	00 
    d603:	48 89 8c 24 50 03 00 	mov    %rcx,0x350(%rsp)
    d60a:	00 
    d60b:	0f 10 84 24 c8 00 00 	movups 0xc8(%rsp),%xmm0
    d612:	00 
    d613:	0f 29 84 24 40 03 00 	movaps %xmm0,0x340(%rsp)
    d61a:	00 
    d61b:	0f 10 44 24 08       	movups 0x8(%rsp),%xmm0
    d620:	0f 29 84 24 f0 03 00 	movaps %xmm0,0x3f0(%rsp)
    d627:	00 
    d628:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    d62d:	48 89 8c 24 00 04 00 	mov    %rcx,0x400(%rsp)
    d634:	00 
    d635:	0f 10 84 24 90 00 00 	movups 0x90(%rsp),%xmm0
    d63c:	00 
    d63d:	0f 29 84 24 d0 03 00 	movaps %xmm0,0x3d0(%rsp)
    d644:	00 
    d645:	48 8b 8c 24 a0 00 00 	mov    0xa0(%rsp),%rcx
    d64c:	00 
    d64d:	48 89 8c 24 e0 03 00 	mov    %rcx,0x3e0(%rsp)
    d654:	00 
    d655:	0f 10 44 24 20       	movups 0x20(%rsp),%xmm0
    d65a:	0f 29 84 24 b0 03 00 	movaps %xmm0,0x3b0(%rsp)
    d661:	00 
    d662:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
    d667:	48 89 8c 24 c0 03 00 	mov    %rcx,0x3c0(%rsp)
    d66e:	00 
    d66f:	48 8b 8c 24 80 00 00 	mov    0x80(%rsp),%rcx
    d676:	00 
    d677:	48 89 8c 24 40 01 00 	mov    %rcx,0x140(%rsp)
    d67e:	00 
    d67f:	0f 28 44 24 50       	movaps 0x50(%rsp),%xmm0
    d684:	0f 28 4c 24 60       	movaps 0x60(%rsp),%xmm1
    d689:	0f 28 54 24 70       	movaps 0x70(%rsp),%xmm2
    d68e:	0f 29 94 24 30 01 00 	movaps %xmm2,0x130(%rsp)
    d695:	00 
    d696:	0f 29 8c 24 20 01 00 	movaps %xmm1,0x120(%rsp)
    d69d:	00 
    d69e:	0f 29 84 24 10 01 00 	movaps %xmm0,0x110(%rsp)
    d6a5:	00 
    d6a6:	4c 89 e9             	mov    %r13,%rcx
    d6a9:	48 c1 e9 10          	shr    $0x10,%rcx
    d6ad:	4c 89 ea             	mov    %r13,%rdx
    d6b0:	48 c1 ea 18          	shr    $0x18,%rdx
    d6b4:	8b 74 24 50          	mov    0x50(%rsp),%esi
    d6b8:	89 74 24 20          	mov    %esi,0x20(%rsp)
    d6bc:	0f b7 74 24 54       	movzwl 0x54(%rsp),%esi
    d6c1:	66 89 74 24 24       	mov    %si,0x24(%rsp)
    d6c6:	0f 28 84 24 a0 01 00 	movaps 0x1a0(%rsp),%xmm0
    d6cd:	00 
    d6ce:	0f 29 84 24 c0 01 00 	movaps %xmm0,0x1c0(%rsp)
    d6d5:	00 
    d6d6:	48 8b b4 24 08 01 00 	mov    0x108(%rsp),%rsi
    d6dd:	00 
    d6de:	48 89 b4 24 d0 01 00 	mov    %rsi,0x1d0(%rsp)
    d6e5:	00 
    d6e6:	48 8b b4 24 68 01 00 	mov    0x168(%rsp),%rsi
    d6ed:	00 
    d6ee:	48 89 b4 24 d8 01 00 	mov    %rsi,0x1d8(%rsp)
    d6f5:	00 
    d6f6:	48 8b b4 24 00 01 00 	mov    0x100(%rsp),%rsi
    d6fd:	00 
    d6fe:	48 89 b4 24 e0 01 00 	mov    %rsi,0x1e0(%rsp)
    d705:	00 
    d706:	0f 28 84 24 40 03 00 	movaps 0x340(%rsp),%xmm0
    d70d:	00 
    d70e:	0f 11 84 24 e8 01 00 	movups %xmm0,0x1e8(%rsp)
    d715:	00 
    d716:	48 8b b4 24 50 03 00 	mov    0x350(%rsp),%rsi
    d71d:	00 
    d71e:	48 89 b4 24 f8 01 00 	mov    %rsi,0x1f8(%rsp)
    d725:	00 
    d726:	48 8b b4 24 00 04 00 	mov    0x400(%rsp),%rsi
    d72d:	00 
    d72e:	48 89 b4 24 10 02 00 	mov    %rsi,0x210(%rsp)
    d735:	00 
    d736:	0f 28 84 24 f0 03 00 	movaps 0x3f0(%rsp),%xmm0
    d73d:	00 
    d73e:	0f 29 84 24 00 02 00 	movaps %xmm0,0x200(%rsp)
    d745:	00 
    d746:	48 8b b4 24 e0 03 00 	mov    0x3e0(%rsp),%rsi
    d74d:	00 
    d74e:	48 89 b4 24 28 02 00 	mov    %rsi,0x228(%rsp)
    d755:	00 
    d756:	0f 28 84 24 d0 03 00 	movaps 0x3d0(%rsp),%xmm0
    d75d:	00 
    d75e:	0f 11 84 24 18 02 00 	movups %xmm0,0x218(%rsp)
    d765:	00 
    d766:	4c 8d a4 24 30 02 00 	lea    0x230(%rsp),%r12
    d76d:	00 
    d76e:	48 8b b4 24 c0 03 00 	mov    0x3c0(%rsp),%rsi
    d775:	00 
    d776:	48 89 b4 24 40 02 00 	mov    %rsi,0x240(%rsp)
    d77d:	00 
    d77e:	0f 28 84 24 b0 03 00 	movaps 0x3b0(%rsp),%xmm0
    d785:	00 
    d786:	0f 29 84 24 30 02 00 	movaps %xmm0,0x230(%rsp)
    d78d:	00 
    d78e:	48 89 9c 24 48 02 00 	mov    %rbx,0x248(%rsp)
    d795:	00 
    d796:	66 0f 7f 9c 24 50 02 	movdqa %xmm3,0x250(%rsp)
    d79d:	00 00 
    d79f:	4c 89 b4 24 60 02 00 	mov    %r14,0x260(%rsp)
    d7a6:	00 
    d7a7:	48 89 84 24 68 02 00 	mov    %rax,0x268(%rsp)
    d7ae:	00 
    d7af:	48 8b 84 24 40 01 00 	mov    0x140(%rsp),%rax
    d7b6:	00 
    d7b7:	48 89 84 24 a0 02 00 	mov    %rax,0x2a0(%rsp)
    d7be:	00 
    d7bf:	66 0f 6f 84 24 10 01 	movdqa 0x110(%rsp),%xmm0
    d7c6:	00 00 
    d7c8:	0f 28 8c 24 20 01 00 	movaps 0x120(%rsp),%xmm1
    d7cf:	00 
    d7d0:	0f 28 94 24 30 01 00 	movaps 0x130(%rsp),%xmm2
    d7d7:	00 
    d7d8:	0f 29 94 24 90 02 00 	movaps %xmm2,0x290(%rsp)
    d7df:	00 
    d7e0:	0f 29 8c 24 80 02 00 	movaps %xmm1,0x280(%rsp)
    d7e7:	00 
    d7e8:	66 0f 7f 84 24 70 02 	movdqa %xmm0,0x270(%rsp)
    d7ef:	00 00 
    d7f1:	8b 84 24 e0 00 00 00 	mov    0xe0(%rsp),%eax
    d7f8:	89 84 24 a8 02 00 00 	mov    %eax,0x2a8(%rsp)
    d7ff:	66 44 89 ac 24 ac 02 	mov    %r13w,0x2ac(%rsp)
    d806:	00 00 
    d808:	88 8c 24 ae 02 00 00 	mov    %cl,0x2ae(%rsp)
    d80f:	66 89 94 24 af 02 00 	mov    %dx,0x2af(%rsp)
    d816:	00 
    d817:	8a 84 24 f8 00 00 00 	mov    0xf8(%rsp),%al
    d81e:	88 84 24 b1 02 00 00 	mov    %al,0x2b1(%rsp)
    d825:	0f b7 44 24 24       	movzwl 0x24(%rsp),%eax
    d82a:	66 89 84 24 b6 02 00 	mov    %ax,0x2b6(%rsp)
    d831:	00 
    d832:	8b 44 24 20          	mov    0x20(%rsp),%eax
    d836:	89 84 24 b2 02 00 00 	mov    %eax,0x2b2(%rsp)
    d83d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d841:	f3 0f 7f 84 24 b8 02 	movdqu %xmm0,0x2b8(%rsp)
    d848:	00 00 
    d84a:	0f 28 0d ef 87 02 00 	movaps 0x287ef(%rip),%xmm1        # 36040 <_fini+0x71c>
    d851:	0f 11 8c 24 c8 02 00 	movups %xmm1,0x2c8(%rsp)
    d858:	00 
    d859:	f3 0f 7f 84 24 d8 02 	movdqu %xmm0,0x2d8(%rsp)
    d860:	00 00 
    d862:	48 c7 84 24 e8 02 00 	movq   $0x0,0x2e8(%rsp)
    d869:	00 00 00 00 00 
    d86e:	88 8c 24 f0 02 00 00 	mov    %cl,0x2f0(%rsp)
    d875:	c7 84 24 f1 02 00 00 	movl   $0x0,0x2f1(%rsp)
    d87c:	00 00 00 00 
    d880:	48 89 9c 24 f8 02 00 	mov    %rbx,0x2f8(%rsp)
    d887:	00 
    d888:	66 0f d6 9c 24 00 03 	movq   %xmm3,0x300(%rsp)
    d88f:	00 00 
    d891:	48 8d 84 24 c0 01 00 	lea    0x1c0(%rsp),%rax
    d898:	00 
    d899:	48 89 c1             	mov    %rax,%rcx
    d89c:	48 c1 e9 08          	shr    $0x8,%rcx
    d8a0:	48 89 8c 24 f8 00 00 	mov    %rcx,0xf8(%rsp)
    d8a7:	00 
    d8a8:	48 89 c1             	mov    %rax,%rcx
    d8ab:	48 c1 e9 10          	shr    $0x10,%rcx
    d8af:	48 89 8c 24 a0 01 00 	mov    %rcx,0x1a0(%rsp)
    d8b6:	00 
    d8b7:	48 c1 e8 20          	shr    $0x20,%rax
    d8bb:	48 89 84 24 08 01 00 	mov    %rax,0x108(%rsp)
    d8c2:	00 
    d8c3:	4c 8d ac 24 b8 02 00 	lea    0x2b8(%rsp),%r13
    d8ca:	00 
    d8cb:	31 c0                	xor    %eax,%eax
    d8cd:	84 c0                	test   %al,%al
    d8cf:	74 5f                	je     d930 <addr2line::ResUnit<R>::parse_lines+0x800>
    d8d1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    d8d8:	00 00 00 
    d8db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d8e0:	8a 84 24 ae 02 00 00 	mov    0x2ae(%rsp),%al
    d8e7:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d8eb:	f3 41 0f 7f 45 00    	movdqu %xmm0,0x0(%r13)
    d8f1:	0f 28 0d 48 87 02 00 	movaps 0x28748(%rip),%xmm1        # 36040 <_fini+0x71c>
    d8f8:	0f 11 8c 24 c8 02 00 	movups %xmm1,0x2c8(%rsp)
    d8ff:	00 
    d900:	f3 41 0f 7f 84 24 a8 	movdqu %xmm0,0xa8(%r12)
    d907:	00 00 00 
    d90a:	49 c7 84 24 b8 00 00 	movq   $0x0,0xb8(%r12)
    d911:	00 00 00 00 00 
    d916:	88 84 24 f0 02 00 00 	mov    %al,0x2f0(%rsp)
    d91d:	c7 84 24 f1 02 00 00 	movl   $0x0,0x2f1(%rsp)
    d924:	00 00 00 00 
    d928:	e9 21 00 00 00       	jmpq   d94e <addr2line::ResUnit<R>::parse_lines+0x81e>
    d92d:	0f 1f 00             	nopl   (%rax)
    d930:	48 c7 84 24 e8 02 00 	movq   $0x0,0x2e8(%rsp)
    d937:	00 00 00 00 00 
    d93c:	c6 84 24 f1 02 00 00 	movb   $0x0,0x2f1(%rsp)
    d943:	00 
    d944:	66 c7 84 24 f3 02 00 	movw   $0x0,0x2f3(%rsp)
    d94b:	00 00 00 
    d94e:	4c 8b 84 24 00 03 00 	mov    0x300(%rsp),%r8
    d955:	00 
    d956:	4d 85 c0             	test   %r8,%r8
    d959:	0f 84 01 13 00 00    	je     ec60 <addr2line::ResUnit<R>::parse_lines+0x1b30>
    d95f:	4c 8b 8c 24 f8 02 00 	mov    0x2f8(%rsp),%r9
    d966:	00 
    d967:	4d 8d 71 01          	lea    0x1(%r9),%r14
    d96b:	49 8d 70 ff          	lea    -0x1(%r8),%rsi
    d96f:	4c 89 b4 24 f8 02 00 	mov    %r14,0x2f8(%rsp)
    d976:	00 
    d977:	48 89 b4 24 00 03 00 	mov    %rsi,0x300(%rsp)
    d97e:	00 
    d97f:	41 8a 29             	mov    (%r9),%bpl
    d982:	40 84 ed             	test   %bpl,%bpl
    d985:	0f 84 95 00 00 00    	je     da20 <addr2line::ResUnit<R>::parse_lines+0x8f0>
    d98b:	40 3a ac 24 b1 02 00 	cmp    0x2b1(%rsp),%bpl
    d992:	00 
    d993:	0f 83 07 01 00 00    	jae    daa0 <addr2line::ResUnit<R>::parse_lines+0x970>
    d999:	8d 45 ff             	lea    -0x1(%rbp),%eax
    d99c:	0f b6 c0             	movzbl %al,%eax
    d99f:	3c 0b                	cmp    $0xb,%al
    d9a1:	0f 87 78 07 00 00    	ja     e11f <addr2line::ResUnit<R>::parse_lines+0xfef>
    d9a7:	48 8d 0d d6 91 02 00 	lea    0x291d6(%rip),%rcx        # 36b84 <_fini+0x1260>
    d9ae:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    d9b2:	48 01 c8             	add    %rcx,%rax
    d9b5:	ff e0                	jmpq   *%rax
    d9b7:	c6 44 24 08 01       	movb   $0x1,0x8(%rsp)
    d9bc:	8a 44 24 09          	mov    0x9(%rsp),%al
    d9c0:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    d9c5:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    d9cb:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    d9d1:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    d9d6:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    d9db:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    d9e2:	00 00 
    d9e4:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    d9eb:	00 
    d9ec:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    d9f3:	00 
    d9f4:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    d9f9:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    d9fe:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    da04:	b2 01                	mov    $0x1,%dl
    da06:	0f b6 d2             	movzbl %dl,%edx
    da09:	48 8d 35 d4 91 02 00 	lea    0x291d4(%rip),%rsi        # 36be4 <_fini+0x12c0>
    da10:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    da14:	48 01 f2             	add    %rsi,%rdx
    da17:	ff e2                	jmpq   *%rdx
    da19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    da20:	48 85 f6             	test   %rsi,%rsi
    da23:	0f 84 f5 12 00 00    	je     ed1e <addr2line::ResUnit<R>::parse_lines+0x1bee>
    da29:	49 89 de             	mov    %rbx,%r14
    da2c:	4d 8d 58 ff          	lea    -0x1(%r8),%r11
    da30:	31 ed                	xor    %ebp,%ebp
    da32:	48 c7 c0 fe ff ff ff 	mov    $0xfffffffffffffffe,%rax
    da39:	31 ff                	xor    %edi,%edi
    da3b:	31 c9                	xor    %ecx,%ecx
    da3d:	0f 1f 00             	nopl   (%rax)
    da40:	4d 8d 14 29          	lea    (%r9,%rbp,1),%r10
    da44:	49 83 c2 02          	add    $0x2,%r10
    da48:	49 8d 14 00          	lea    (%r8,%rax,1),%rdx
    da4c:	4c 89 94 24 f8 02 00 	mov    %r10,0x2f8(%rsp)
    da53:	00 
    da54:	48 89 94 24 00 03 00 	mov    %rdx,0x300(%rsp)
    da5b:	00 
    da5c:	41 0f b6 5c 29 01    	movzbl 0x1(%r9,%rbp,1),%ebx
    da62:	83 f9 3f             	cmp    $0x3f,%ecx
    da65:	75 09                	jne    da70 <addr2line::ResUnit<R>::parse_lines+0x940>
    da67:	80 fb 01             	cmp    $0x1,%bl
    da6a:	0f 87 00 12 00 00    	ja     ec70 <addr2line::ResUnit<R>::parse_lines+0x1b40>
    da70:	0f b6 f3             	movzbl %bl,%esi
    da73:	89 f3                	mov    %esi,%ebx
    da75:	83 e3 7f             	and    $0x7f,%ebx
    da78:	48 d3 e3             	shl    %cl,%rbx
    da7b:	48 09 df             	or     %rbx,%rdi
    da7e:	40 84 f6             	test   %sil,%sil
    da81:	0f 89 bc 00 00 00    	jns    db43 <addr2line::ResUnit<R>::parse_lines+0xa13>
    da87:	83 c1 07             	add    $0x7,%ecx
    da8a:	48 83 c5 01          	add    $0x1,%rbp
    da8e:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    da92:	49 39 eb             	cmp    %rbp,%r11
    da95:	75 a9                	jne    da40 <addr2line::ResUnit<R>::parse_lines+0x910>
    da97:	e9 e4 11 00 00       	jmpq   ec80 <addr2line::ResUnit<R>::parse_lines+0x1b50>
    da9c:	0f 1f 40 00          	nopl   0x0(%rax)
    daa0:	c6 44 24 08 00       	movb   $0x0,0x8(%rsp)
    daa5:	40 88 6c 24 09       	mov    %bpl,0x9(%rsp)
    daaa:	8a 44 24 09          	mov    0x9(%rsp),%al
    daae:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    dab3:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    dab9:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    dabf:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    dac4:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    dac9:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    dad0:	00 00 
    dad2:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    dad9:	00 
    dada:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    dae1:	00 
    dae2:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    dae7:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    daec:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    daf2:	31 d2                	xor    %edx,%edx
    daf4:	0f b6 d2             	movzbl %dl,%edx
    daf7:	48 8d 35 e6 90 02 00 	lea    0x290e6(%rip),%rsi        # 36be4 <_fini+0x12c0>
    dafe:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    db02:	48 01 f2             	add    %rsi,%rdx
    db05:	ff e2                	jmpq   *%rdx
    db07:	0f b6 8c 24 ac 02 00 	movzbl 0x2ac(%rsp),%ecx
    db0e:	00 
    db0f:	0f b6 b4 24 ad 02 00 	movzbl 0x2ad(%rsp),%esi
    db16:	00 
    db17:	48 83 fe 01          	cmp    $0x1,%rsi
    db1b:	0f 85 42 08 00 00    	jne    e363 <addr2line::ResUnit<R>::parse_lines+0x1233>
    db21:	66 48 0f 7e d8       	movq   %xmm3,%rax
    db26:	48 0f af c1          	imul   %rcx,%rax
    db2a:	48 01 84 24 b8 02 00 	add    %rax,0x2b8(%rsp)
    db31:	00 
    db32:	48 c7 84 24 c0 02 00 	movq   $0x0,0x2c0(%rsp)
    db39:	00 00 00 00 00 
    db3e:	e9 0b fe ff ff       	jmpq   d94e <addr2line::ResUnit<R>::parse_lines+0x81e>
    db43:	48 39 fa             	cmp    %rdi,%rdx
    db46:	0f 82 73 16 00 00    	jb     f1bf <addr2line::ResUnit<R>::parse_lines+0x208f>
    db4c:	48 8d 04 2f          	lea    (%rdi,%rbp,1),%rax
    db50:	4c 01 c8             	add    %r9,%rax
    db53:	48 83 c0 02          	add    $0x2,%rax
    db57:	49 29 f8             	sub    %rdi,%r8
    db5a:	49 29 e8             	sub    %rbp,%r8
    db5d:	49 83 c0 fe          	add    $0xfffffffffffffffe,%r8
    db61:	48 89 84 24 f8 02 00 	mov    %rax,0x2f8(%rsp)
    db68:	00 
    db69:	4c 89 84 24 00 03 00 	mov    %r8,0x300(%rsp)
    db70:	00 
    db71:	4c 89 94 24 c8 00 00 	mov    %r10,0xc8(%rsp)
    db78:	00 
    db79:	48 89 bc 24 d0 00 00 	mov    %rdi,0xd0(%rsp)
    db80:	00 
    db81:	48 85 ff             	test   %rdi,%rdi
    db84:	0f 84 3d 16 00 00    	je     f1c7 <addr2line::ResUnit<R>::parse_lines+0x2097>
    db8a:	4c 89 f3             	mov    %r14,%rbx
    db8d:	49 8d 14 29          	lea    (%r9,%rbp,1),%rdx
    db91:	48 83 c2 03          	add    $0x3,%rdx
    db95:	4c 8d 5f ff          	lea    -0x1(%rdi),%r11
    db99:	48 89 94 24 c8 00 00 	mov    %rdx,0xc8(%rsp)
    dba0:	00 
    dba1:	4c 89 9c 24 d0 00 00 	mov    %r11,0xd0(%rsp)
    dba8:	00 
    dba9:	41 8a 44 29 02       	mov    0x2(%r9,%rbp,1),%al
    dbae:	8d 48 ff             	lea    -0x1(%rax),%ecx
    dbb1:	80 f9 03             	cmp    $0x3,%cl
    dbb4:	0f 87 39 07 00 00    	ja     e2f3 <addr2line::ResUnit<R>::parse_lines+0x11c3>
    dbba:	0f b6 c1             	movzbl %cl,%eax
    dbbd:	48 8d 0d f0 8f 02 00 	lea    0x28ff0(%rip),%rcx        # 36bb4 <_fini+0x1290>
    dbc4:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    dbc8:	48 01 c8             	add    %rcx,%rax
    dbcb:	ff e0                	jmpq   *%rax
    dbcd:	c6 44 24 08 10       	movb   $0x10,0x8(%rsp)
    dbd2:	8a 44 24 09          	mov    0x9(%rsp),%al
    dbd6:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    dbdb:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    dbe1:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    dbe7:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    dbec:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    dbf1:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    dbf8:	00 00 
    dbfa:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    dc01:	00 
    dc02:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    dc09:	00 
    dc0a:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    dc0f:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    dc14:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    dc1a:	b2 10                	mov    $0x10,%dl
    dc1c:	0f b6 d2             	movzbl %dl,%edx
    dc1f:	48 8d 35 be 8f 02 00 	lea    0x28fbe(%rip),%rsi        # 36be4 <_fini+0x12c0>
    dc26:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    dc2a:	48 01 f2             	add    %rsi,%rdx
    dc2d:	ff e2                	jmpq   *%rdx
    dc2f:	48 85 f6             	test   %rsi,%rsi
    dc32:	0f 84 e6 10 00 00    	je     ed1e <addr2line::ResUnit<R>::parse_lines+0x1bee>
    dc38:	49 89 da             	mov    %rbx,%r10
    dc3b:	49 8d 78 ff          	lea    -0x1(%r8),%rdi
    dc3f:	31 f6                	xor    %esi,%esi
    dc41:	48 c7 c0 fe ff ff ff 	mov    $0xfffffffffffffffe,%rax
    dc48:	31 ed                	xor    %ebp,%ebp
    dc4a:	31 c9                	xor    %ecx,%ecx
    dc4c:	0f 1f 40 00          	nopl   0x0(%rax)
    dc50:	49 8d 14 31          	lea    (%r9,%rsi,1),%rdx
    dc54:	48 83 c2 02          	add    $0x2,%rdx
    dc58:	49 8d 1c 00          	lea    (%r8,%rax,1),%rbx
    dc5c:	48 89 94 24 f8 02 00 	mov    %rdx,0x2f8(%rsp)
    dc63:	00 
    dc64:	48 89 9c 24 00 03 00 	mov    %rbx,0x300(%rsp)
    dc6b:	00 
    dc6c:	41 0f b6 54 31 01    	movzbl 0x1(%r9,%rsi,1),%edx
    dc72:	83 f9 3f             	cmp    $0x3f,%ecx
    dc75:	75 09                	jne    dc80 <addr2line::ResUnit<R>::parse_lines+0xb50>
    dc77:	80 fa 01             	cmp    $0x1,%dl
    dc7a:	0f 87 f0 0f 00 00    	ja     ec70 <addr2line::ResUnit<R>::parse_lines+0x1b40>
    dc80:	0f b6 da             	movzbl %dl,%ebx
    dc83:	89 da                	mov    %ebx,%edx
    dc85:	83 e2 7f             	and    $0x7f,%edx
    dc88:	48 d3 e2             	shl    %cl,%rdx
    dc8b:	48 09 d5             	or     %rdx,%rbp
    dc8e:	84 db                	test   %bl,%bl
    dc90:	0f 89 d7 07 00 00    	jns    e46d <addr2line::ResUnit<R>::parse_lines+0x133d>
    dc96:	83 c1 07             	add    $0x7,%ecx
    dc99:	48 83 c6 01          	add    $0x1,%rsi
    dc9d:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    dca1:	48 39 f7             	cmp    %rsi,%rdi
    dca4:	75 aa                	jne    dc50 <addr2line::ResUnit<R>::parse_lines+0xb20>
    dca6:	e9 e8 0f 00 00       	jmpq   ec93 <addr2line::ResUnit<R>::parse_lines+0x1b63>
    dcab:	48 85 f6             	test   %rsi,%rsi
    dcae:	0f 84 6a 10 00 00    	je     ed1e <addr2line::ResUnit<R>::parse_lines+0x1bee>
    dcb4:	49 89 da             	mov    %rbx,%r10
    dcb7:	49 8d 78 ff          	lea    -0x1(%r8),%rdi
    dcbb:	31 f6                	xor    %esi,%esi
    dcbd:	48 c7 c0 fe ff ff ff 	mov    $0xfffffffffffffffe,%rax
    dcc4:	31 ed                	xor    %ebp,%ebp
    dcc6:	31 c9                	xor    %ecx,%ecx
    dcc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    dccf:	00 
    dcd0:	49 8d 14 31          	lea    (%r9,%rsi,1),%rdx
    dcd4:	48 83 c2 02          	add    $0x2,%rdx
    dcd8:	49 8d 1c 00          	lea    (%r8,%rax,1),%rbx
    dcdc:	48 89 94 24 f8 02 00 	mov    %rdx,0x2f8(%rsp)
    dce3:	00 
    dce4:	48 89 9c 24 00 03 00 	mov    %rbx,0x300(%rsp)
    dceb:	00 
    dcec:	41 0f b6 54 31 01    	movzbl 0x1(%r9,%rsi,1),%edx
    dcf2:	83 f9 3f             	cmp    $0x3f,%ecx
    dcf5:	75 09                	jne    dd00 <addr2line::ResUnit<R>::parse_lines+0xbd0>
    dcf7:	80 fa 01             	cmp    $0x1,%dl
    dcfa:	0f 87 70 0f 00 00    	ja     ec70 <addr2line::ResUnit<R>::parse_lines+0x1b40>
    dd00:	0f b6 da             	movzbl %dl,%ebx
    dd03:	89 da                	mov    %ebx,%edx
    dd05:	83 e2 7f             	and    $0x7f,%edx
    dd08:	48 d3 e2             	shl    %cl,%rdx
    dd0b:	48 09 d5             	or     %rdx,%rbp
    dd0e:	84 db                	test   %bl,%bl
    dd10:	0f 89 c1 07 00 00    	jns    e4d7 <addr2line::ResUnit<R>::parse_lines+0x13a7>
    dd16:	83 c1 07             	add    $0x7,%ecx
    dd19:	48 83 c6 01          	add    $0x1,%rsi
    dd1d:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    dd21:	48 39 f7             	cmp    %rsi,%rdi
    dd24:	75 aa                	jne    dcd0 <addr2line::ResUnit<R>::parse_lines+0xba0>
    dd26:	e9 68 0f 00 00       	jmpq   ec93 <addr2line::ResUnit<R>::parse_lines+0x1b63>
    dd2b:	c6 44 24 08 0a       	movb   $0xa,0x8(%rsp)
    dd30:	8a 44 24 09          	mov    0x9(%rsp),%al
    dd34:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    dd39:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    dd3f:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    dd45:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    dd4a:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    dd4f:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    dd56:	00 00 
    dd58:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    dd5f:	00 
    dd60:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    dd67:	00 
    dd68:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    dd6d:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    dd72:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    dd78:	b2 0a                	mov    $0xa,%dl
    dd7a:	0f b6 d2             	movzbl %dl,%edx
    dd7d:	48 8d 35 60 8e 02 00 	lea    0x28e60(%rip),%rsi        # 36be4 <_fini+0x12c0>
    dd84:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    dd88:	48 01 f2             	add    %rsi,%rdx
    dd8b:	ff e2                	jmpq   *%rdx
    dd8d:	48 85 f6             	test   %rsi,%rsi
    dd90:	0f 84 88 0f 00 00    	je     ed1e <addr2line::ResUnit<R>::parse_lines+0x1bee>
    dd96:	49 89 da             	mov    %rbx,%r10
    dd99:	49 8d 68 ff          	lea    -0x1(%r8),%rbp
    dd9d:	31 ff                	xor    %edi,%edi
    dd9f:	48 c7 c3 fe ff ff ff 	mov    $0xfffffffffffffffe,%rbx
    dda6:	31 f6                	xor    %esi,%esi
    dda8:	31 c9                	xor    %ecx,%ecx
    ddaa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ddb0:	49 8d 04 39          	lea    (%r9,%rdi,1),%rax
    ddb4:	48 83 c0 02          	add    $0x2,%rax
    ddb8:	49 8d 14 18          	lea    (%r8,%rbx,1),%rdx
    ddbc:	48 89 84 24 f8 02 00 	mov    %rax,0x2f8(%rsp)
    ddc3:	00 
    ddc4:	48 89 94 24 00 03 00 	mov    %rdx,0x300(%rsp)
    ddcb:	00 
    ddcc:	41 0f b6 44 39 01    	movzbl 0x1(%r9,%rdi,1),%eax
    ddd2:	83 f9 3f             	cmp    $0x3f,%ecx
    ddd5:	75 0c                	jne    dde3 <addr2line::ResUnit<R>::parse_lines+0xcb3>
    ddd7:	3c 7f                	cmp    $0x7f,%al
    ddd9:	74 08                	je     dde3 <addr2line::ResUnit<R>::parse_lines+0xcb3>
    dddb:	84 c0                	test   %al,%al
    dddd:	0f 85 d1 13 00 00    	jne    f1b4 <addr2line::ResUnit<R>::parse_lines+0x2084>
    dde3:	89 c2                	mov    %eax,%edx
    dde5:	83 e2 7f             	and    $0x7f,%edx
    dde8:	48 d3 e2             	shl    %cl,%rdx
    ddeb:	48 09 d6             	or     %rdx,%rsi
    ddee:	83 c1 07             	add    $0x7,%ecx
    ddf1:	84 c0                	test   %al,%al
    ddf3:	0f 89 eb 05 00 00    	jns    e3e4 <addr2line::ResUnit<R>::parse_lines+0x12b4>
    ddf9:	48 83 c7 01          	add    $0x1,%rdi
    ddfd:	48 83 c3 ff          	add    $0xffffffffffffffff,%rbx
    de01:	48 39 fd             	cmp    %rdi,%rbp
    de04:	75 aa                	jne    ddb0 <addr2line::ResUnit<R>::parse_lines+0xc80>
    de06:	e9 46 0f 00 00       	jmpq   ed51 <addr2line::ResUnit<R>::parse_lines+0x1c21>
    de0b:	48 85 f6             	test   %rsi,%rsi
    de0e:	0f 84 0a 0f 00 00    	je     ed1e <addr2line::ResUnit<R>::parse_lines+0x1bee>
    de14:	49 89 da             	mov    %rbx,%r10
    de17:	49 8d 78 ff          	lea    -0x1(%r8),%rdi
    de1b:	31 f6                	xor    %esi,%esi
    de1d:	48 c7 c0 fe ff ff ff 	mov    $0xfffffffffffffffe,%rax
    de24:	31 ed                	xor    %ebp,%ebp
    de26:	31 c9                	xor    %ecx,%ecx
    de28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    de2f:	00 
    de30:	49 8d 14 31          	lea    (%r9,%rsi,1),%rdx
    de34:	48 83 c2 02          	add    $0x2,%rdx
    de38:	49 8d 1c 00          	lea    (%r8,%rax,1),%rbx
    de3c:	48 89 94 24 f8 02 00 	mov    %rdx,0x2f8(%rsp)
    de43:	00 
    de44:	48 89 9c 24 00 03 00 	mov    %rbx,0x300(%rsp)
    de4b:	00 
    de4c:	41 0f b6 54 31 01    	movzbl 0x1(%r9,%rsi,1),%edx
    de52:	83 f9 3f             	cmp    $0x3f,%ecx
    de55:	75 09                	jne    de60 <addr2line::ResUnit<R>::parse_lines+0xd30>
    de57:	80 fa 01             	cmp    $0x1,%dl
    de5a:	0f 87 10 0e 00 00    	ja     ec70 <addr2line::ResUnit<R>::parse_lines+0x1b40>
    de60:	0f b6 da             	movzbl %dl,%ebx
    de63:	89 da                	mov    %ebx,%edx
    de65:	83 e2 7f             	and    $0x7f,%edx
    de68:	48 d3 e2             	shl    %cl,%rdx
    de6b:	48 09 d5             	or     %rdx,%rbp
    de6e:	84 db                	test   %bl,%bl
    de70:	0f 89 cb 06 00 00    	jns    e541 <addr2line::ResUnit<R>::parse_lines+0x1411>
    de76:	83 c1 07             	add    $0x7,%ecx
    de79:	48 83 c6 01          	add    $0x1,%rsi
    de7d:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    de81:	48 39 f7             	cmp    %rsi,%rdi
    de84:	75 aa                	jne    de30 <addr2line::ResUnit<R>::parse_lines+0xd00>
    de86:	e9 08 0e 00 00       	jmpq   ec93 <addr2line::ResUnit<R>::parse_lines+0x1b63>
    de8b:	c6 44 24 08 08       	movb   $0x8,0x8(%rsp)
    de90:	8a 44 24 09          	mov    0x9(%rsp),%al
    de94:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    de99:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    de9f:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    dea5:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    deaa:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    deaf:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    deb6:	00 00 
    deb8:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    debf:	00 
    dec0:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    dec7:	00 
    dec8:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    decd:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    ded2:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    ded8:	b2 08                	mov    $0x8,%dl
    deda:	0f b6 d2             	movzbl %dl,%edx
    dedd:	48 8d 35 00 8d 02 00 	lea    0x28d00(%rip),%rsi        # 36be4 <_fini+0x12c0>
    dee4:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    dee8:	48 01 f2             	add    %rsi,%rdx
    deeb:	ff e2                	jmpq   *%rdx
    deed:	48 85 f6             	test   %rsi,%rsi
    def0:	0f 84 28 0e 00 00    	je     ed1e <addr2line::ResUnit<R>::parse_lines+0x1bee>
    def6:	49 89 da             	mov    %rbx,%r10
    def9:	49 8d 78 ff          	lea    -0x1(%r8),%rdi
    defd:	31 f6                	xor    %esi,%esi
    deff:	48 c7 c0 fe ff ff ff 	mov    $0xfffffffffffffffe,%rax
    df06:	31 ed                	xor    %ebp,%ebp
    df08:	31 c9                	xor    %ecx,%ecx
    df0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    df10:	49 8d 14 31          	lea    (%r9,%rsi,1),%rdx
    df14:	48 83 c2 02          	add    $0x2,%rdx
    df18:	49 8d 1c 00          	lea    (%r8,%rax,1),%rbx
    df1c:	48 89 94 24 f8 02 00 	mov    %rdx,0x2f8(%rsp)
    df23:	00 
    df24:	48 89 9c 24 00 03 00 	mov    %rbx,0x300(%rsp)
    df2b:	00 
    df2c:	41 0f b6 54 31 01    	movzbl 0x1(%r9,%rsi,1),%edx
    df32:	83 f9 3f             	cmp    $0x3f,%ecx
    df35:	75 09                	jne    df40 <addr2line::ResUnit<R>::parse_lines+0xe10>
    df37:	80 fa 01             	cmp    $0x1,%dl
    df3a:	0f 87 30 0d 00 00    	ja     ec70 <addr2line::ResUnit<R>::parse_lines+0x1b40>
    df40:	0f b6 da             	movzbl %dl,%ebx
    df43:	89 da                	mov    %ebx,%edx
    df45:	83 e2 7f             	and    $0x7f,%edx
    df48:	48 d3 e2             	shl    %cl,%rdx
    df4b:	48 09 d5             	or     %rdx,%rbp
    df4e:	84 db                	test   %bl,%bl
    df50:	0f 89 55 06 00 00    	jns    e5ab <addr2line::ResUnit<R>::parse_lines+0x147b>
    df56:	83 c1 07             	add    $0x7,%ecx
    df59:	48 83 c6 01          	add    $0x1,%rsi
    df5d:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    df61:	48 39 f7             	cmp    %rsi,%rdi
    df64:	75 aa                	jne    df10 <addr2line::ResUnit<R>::parse_lines+0xde0>
    df66:	e9 28 0d 00 00       	jmpq   ec93 <addr2line::ResUnit<R>::parse_lines+0x1b63>
    df6b:	c6 44 24 08 06       	movb   $0x6,0x8(%rsp)
    df70:	8a 44 24 09          	mov    0x9(%rsp),%al
    df74:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    df79:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    df7f:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    df85:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    df8a:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    df8f:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    df96:	00 00 
    df98:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    df9f:	00 
    dfa0:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    dfa7:	00 
    dfa8:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    dfad:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    dfb2:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    dfb8:	b2 06                	mov    $0x6,%dl
    dfba:	0f b6 d2             	movzbl %dl,%edx
    dfbd:	48 8d 35 20 8c 02 00 	lea    0x28c20(%rip),%rsi        # 36be4 <_fini+0x12c0>
    dfc4:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    dfc8:	48 01 f2             	add    %rsi,%rdx
    dfcb:	ff e2                	jmpq   *%rdx
    dfcd:	c6 44 24 08 07       	movb   $0x7,0x8(%rsp)
    dfd2:	8a 44 24 09          	mov    0x9(%rsp),%al
    dfd6:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    dfdb:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    dfe1:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    dfe7:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    dfec:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    dff1:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    dff8:	00 00 
    dffa:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    e001:	00 
    e002:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    e009:	00 
    e00a:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    e00f:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    e014:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    e01a:	b2 07                	mov    $0x7,%dl
    e01c:	0f b6 d2             	movzbl %dl,%edx
    e01f:	48 8d 35 be 8b 02 00 	lea    0x28bbe(%rip),%rsi        # 36be4 <_fini+0x12c0>
    e026:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    e02a:	48 01 f2             	add    %rsi,%rdx
    e02d:	ff e2                	jmpq   *%rdx
    e02f:	c6 44 24 08 0b       	movb   $0xb,0x8(%rsp)
    e034:	8a 44 24 09          	mov    0x9(%rsp),%al
    e038:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    e03d:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    e043:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    e049:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    e04e:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    e053:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    e05a:	00 00 
    e05c:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    e063:	00 
    e064:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    e06b:	00 
    e06c:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    e071:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    e076:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    e07c:	b2 0b                	mov    $0xb,%dl
    e07e:	0f b6 d2             	movzbl %dl,%edx
    e081:	48 8d 35 5c 8b 02 00 	lea    0x28b5c(%rip),%rsi        # 36be4 <_fini+0x12c0>
    e088:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    e08c:	48 01 f2             	add    %rsi,%rdx
    e08f:	ff e2                	jmpq   *%rdx
    e091:	48 83 fe 02          	cmp    $0x2,%rsi
    e095:	0f 82 87 11 00 00    	jb     f222 <addr2line::ResUnit<R>::parse_lines+0x20f2>
    e09b:	49 8d 41 03          	lea    0x3(%r9),%rax
    e09f:	49 83 c0 fd          	add    $0xfffffffffffffffd,%r8
    e0a3:	48 89 84 24 f8 02 00 	mov    %rax,0x2f8(%rsp)
    e0aa:	00 
    e0ab:	4c 89 84 24 00 03 00 	mov    %r8,0x300(%rsp)
    e0b2:	00 
    e0b3:	41 0f b7 41 01       	movzwl 0x1(%r9),%eax
    e0b8:	c6 44 24 08 09       	movb   $0x9,0x8(%rsp)
    e0bd:	66 89 44 24 0a       	mov    %ax,0xa(%rsp)
    e0c2:	8a 44 24 09          	mov    0x9(%rsp),%al
    e0c6:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    e0cb:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    e0d1:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    e0d7:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    e0dc:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    e0e1:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    e0e8:	00 00 
    e0ea:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    e0f1:	00 
    e0f2:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    e0f9:	00 
    e0fa:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    e0ff:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    e104:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    e10a:	b2 09                	mov    $0x9,%dl
    e10c:	0f b6 d2             	movzbl %dl,%edx
    e10f:	48 8d 35 ce 8a 02 00 	lea    0x28ace(%rip),%rsi        # 36be4 <_fini+0x12c0>
    e116:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    e11a:	48 01 f2             	add    %rsi,%rdx
    e11d:	ff e2                	jmpq   *%rdx
    e11f:	4c 8b 94 24 d8 01 00 	mov    0x1d8(%rsp),%r10
    e126:	00 
    e127:	48 8b 8c 24 e0 01 00 	mov    0x1e0(%rsp),%rcx
    e12e:	00 
    e12f:	48 39 c1             	cmp    %rax,%rcx
    e132:	0f 82 2a 10 00 00    	jb     f162 <addr2line::ResUnit<R>::parse_lines+0x2032>
    e138:	49 01 c2             	add    %rax,%r10
    e13b:	48 39 c1             	cmp    %rax,%rcx
    e13e:	0f 84 1e 10 00 00    	je     f162 <addr2line::ResUnit<R>::parse_lines+0x2032>
    e144:	45 0f b6 12          	movzbl (%r10),%r10d
    e148:	4d 85 d2             	test   %r10,%r10
    e14b:	0f 84 c4 04 00 00    	je     e615 <addr2line::ResUnit<R>::parse_lines+0x14e5>
    e151:	41 80 fa 01          	cmp    $0x1,%r10b
    e155:	0f 85 21 05 00 00    	jne    e67c <addr2line::ResUnit<R>::parse_lines+0x154c>
    e15b:	48 85 f6             	test   %rsi,%rsi
    e15e:	0f 84 ba 0b 00 00    	je     ed1e <addr2line::ResUnit<R>::parse_lines+0x1bee>
    e164:	49 89 db             	mov    %rbx,%r11
    e167:	4d 8d 50 ff          	lea    -0x1(%r8),%r10
    e16b:	31 f6                	xor    %esi,%esi
    e16d:	48 c7 c0 fe ff ff ff 	mov    $0xfffffffffffffffe,%rax
    e174:	31 db                	xor    %ebx,%ebx
    e176:	31 c9                	xor    %ecx,%ecx
    e178:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    e17f:	00 
    e180:	49 8d 14 31          	lea    (%r9,%rsi,1),%rdx
    e184:	48 83 c2 02          	add    $0x2,%rdx
    e188:	49 8d 3c 00          	lea    (%r8,%rax,1),%rdi
    e18c:	48 89 94 24 f8 02 00 	mov    %rdx,0x2f8(%rsp)
    e193:	00 
    e194:	48 89 bc 24 00 03 00 	mov    %rdi,0x300(%rsp)
    e19b:	00 
    e19c:	41 0f b6 54 31 01    	movzbl 0x1(%r9,%rsi,1),%edx
    e1a2:	83 f9 3f             	cmp    $0x3f,%ecx
    e1a5:	75 09                	jne    e1b0 <addr2line::ResUnit<R>::parse_lines+0x1080>
    e1a7:	80 fa 01             	cmp    $0x1,%dl
    e1aa:	0f 87 c0 0a 00 00    	ja     ec70 <addr2line::ResUnit<R>::parse_lines+0x1b40>
    e1b0:	0f b6 d2             	movzbl %dl,%edx
    e1b3:	89 d7                	mov    %edx,%edi
    e1b5:	83 e7 7f             	and    $0x7f,%edi
    e1b8:	48 d3 e7             	shl    %cl,%rdi
    e1bb:	48 09 fb             	or     %rdi,%rbx
    e1be:	84 d2                	test   %dl,%dl
    e1c0:	0f 89 dc 07 00 00    	jns    e9a2 <addr2line::ResUnit<R>::parse_lines+0x1872>
    e1c6:	83 c1 07             	add    $0x7,%ecx
    e1c9:	48 83 c6 01          	add    $0x1,%rsi
    e1cd:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    e1d1:	49 39 f2             	cmp    %rsi,%r10
    e1d4:	75 aa                	jne    e180 <addr2line::ResUnit<R>::parse_lines+0x1050>
    e1d6:	e9 b8 0a 00 00       	jmpq   ec93 <addr2line::ResUnit<R>::parse_lines+0x1b63>
    e1db:	66 83 bc 24 aa 02 00 	cmpw   $0x5,0x2aa(%rsp)
    e1e2:	00 05 
    e1e4:	0f 83 8c 01 00 00    	jae    e376 <addr2line::ResUnit<R>::parse_lines+0x1246>
    e1ea:	4d 85 db             	test   %r11,%r11
    e1ed:	0f 84 67 0f 00 00    	je     f15a <addr2line::ResUnit<R>::parse_lines+0x202a>
    e1f3:	49 8d 04 29          	lea    (%r9,%rbp,1),%rax
    e1f7:	31 c9                	xor    %ecx,%ecx
    e1f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    e200:	80 7c 08 03 00       	cmpb   $0x0,0x3(%rax,%rcx,1)
    e205:	0f 84 6a 05 00 00    	je     e775 <addr2line::ResUnit<R>::parse_lines+0x1645>
    e20b:	48 83 c1 01          	add    $0x1,%rcx
    e20f:	49 39 cb             	cmp    %rcx,%r11
    e212:	75 ec                	jne    e200 <addr2line::ResUnit<R>::parse_lines+0x10d0>
    e214:	e9 41 0f 00 00       	jmpq   f15a <addr2line::ResUnit<R>::parse_lines+0x202a>
    e219:	4d 85 db             	test   %r11,%r11
    e21c:	0f 84 20 0f 00 00    	je     f142 <addr2line::ResUnit<R>::parse_lines+0x2012>
    e222:	49 01 e9             	add    %rbp,%r9
    e225:	31 d2                	xor    %edx,%edx
    e227:	48 c7 c0 fe ff ff ff 	mov    $0xfffffffffffffffe,%rax
    e22e:	31 ed                	xor    %ebp,%ebp
    e230:	31 c9                	xor    %ecx,%ecx
    e232:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    e239:	00 00 00 
    e23c:	0f 1f 40 00          	nopl   0x0(%rax)
    e240:	49 8d 1c 11          	lea    (%r9,%rdx,1),%rbx
    e244:	48 83 c3 04          	add    $0x4,%rbx
    e248:	48 8d 34 07          	lea    (%rdi,%rax,1),%rsi
    e24c:	48 89 9c 24 c8 00 00 	mov    %rbx,0xc8(%rsp)
    e253:	00 
    e254:	48 89 b4 24 d0 00 00 	mov    %rsi,0xd0(%rsp)
    e25b:	00 
    e25c:	41 0f b6 5c 11 03    	movzbl 0x3(%r9,%rdx,1),%ebx
    e262:	83 f9 3f             	cmp    $0x3f,%ecx
    e265:	75 09                	jne    e270 <addr2line::ResUnit<R>::parse_lines+0x1140>
    e267:	80 fb 01             	cmp    $0x1,%bl
    e26a:	0f 87 c1 0e 00 00    	ja     f131 <addr2line::ResUnit<R>::parse_lines+0x2001>
    e270:	0f b6 db             	movzbl %bl,%ebx
    e273:	89 de                	mov    %ebx,%esi
    e275:	83 e6 7f             	and    $0x7f,%esi
    e278:	48 d3 e6             	shl    %cl,%rsi
    e27b:	48 09 f5             	or     %rsi,%rbp
    e27e:	84 db                	test   %bl,%bl
    e280:	0f 89 85 04 00 00    	jns    e70b <addr2line::ResUnit<R>::parse_lines+0x15db>
    e286:	83 c1 07             	add    $0x7,%ecx
    e289:	48 83 c2 01          	add    $0x1,%rdx
    e28d:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    e291:	49 39 d3             	cmp    %rdx,%r11
    e294:	75 aa                	jne    e240 <addr2line::ResUnit<R>::parse_lines+0x1110>
    e296:	e9 a0 0e 00 00       	jmpq   f13b <addr2line::ResUnit<R>::parse_lines+0x200b>
    e29b:	44 0f b6 84 24 a8 02 	movzbl 0x2a8(%rsp),%r8d
    e2a2:	00 00 
    e2a4:	41 8d 40 ff          	lea    -0x1(%r8),%eax
    e2a8:	3c 07                	cmp    $0x7,%al
    e2aa:	0f 87 8e 0f 00 00    	ja     f23e <addr2line::ResUnit<R>::parse_lines+0x210e>
    e2b0:	0f b6 c0             	movzbl %al,%eax
    e2b3:	48 8d 0d 0a 89 02 00 	lea    0x2890a(%rip),%rcx        # 36bc4 <_fini+0x12a0>
    e2ba:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    e2be:	48 01 c8             	add    %rcx,%rax
    e2c1:	ff e0                	jmpq   *%rax
    e2c3:	4d 85 db             	test   %r11,%r11
    e2c6:	0f 84 7f 0f 00 00    	je     f24b <addr2line::ResUnit<R>::parse_lines+0x211b>
    e2cc:	49 8d 04 29          	lea    (%r9,%rbp,1),%rax
    e2d0:	48 83 c0 04          	add    $0x4,%rax
    e2d4:	48 83 c7 fe          	add    $0xfffffffffffffffe,%rdi
    e2d8:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
    e2df:	00 
    e2e0:	48 89 bc 24 d0 00 00 	mov    %rdi,0xd0(%rsp)
    e2e7:	00 
    e2e8:	41 0f b6 44 29 03    	movzbl 0x3(%r9,%rbp,1),%eax
    e2ee:	e9 35 06 00 00       	jmpq   e928 <addr2line::ResUnit<R>::parse_lines+0x17f8>
    e2f3:	c6 44 24 08 14       	movb   $0x14,0x8(%rsp)
    e2f8:	88 44 24 09          	mov    %al,0x9(%rsp)
    e2fc:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    e301:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    e306:	8a 44 24 09          	mov    0x9(%rsp),%al
    e30a:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    e30f:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    e315:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    e31b:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    e320:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    e325:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    e32c:	00 00 
    e32e:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    e335:	00 
    e336:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    e33d:	00 
    e33e:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    e343:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    e348:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    e34e:	b2 14                	mov    $0x14,%dl
    e350:	0f b6 d2             	movzbl %dl,%edx
    e353:	48 8d 35 8a 88 02 00 	lea    0x2888a(%rip),%rsi        # 36be4 <_fini+0x12c0>
    e35a:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    e35e:	48 01 f2             	add    %rsi,%rdx
    e361:	ff e2                	jmpq   *%rdx
    e363:	40 84 f6             	test   %sil,%sil
    e366:	0f 84 84 21 00 00    	je     104f0 <addr2line::ResUnit<R>::parse_lines+0x33c0>
    e36c:	66 48 0f 7e d8       	movq   %xmm3,%rax
    e371:	e9 a6 08 00 00       	jmpq   ec1c <addr2line::ResUnit<R>::parse_lines+0x1aec>
    e376:	66 c7 44 24 08 14 03 	movw   $0x314,0x8(%rsp)
    e37d:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    e382:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    e387:	8a 44 24 09          	mov    0x9(%rsp),%al
    e38b:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    e390:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    e396:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    e39c:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    e3a1:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    e3a6:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    e3ad:	00 00 
    e3af:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    e3b6:	00 
    e3b7:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    e3be:	00 
    e3bf:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    e3c4:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    e3c9:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    e3cf:	b2 14                	mov    $0x14,%dl
    e3d1:	0f b6 d2             	movzbl %dl,%edx
    e3d4:	48 8d 35 09 88 02 00 	lea    0x28809(%rip),%rsi        # 36be4 <_fini+0x12c0>
    e3db:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    e3df:	48 01 f2             	add    %rsi,%rdx
    e3e2:	ff e2                	jmpq   *%rdx
    e3e4:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
    e3eb:	48 d3 e2             	shl    %cl,%rdx
    e3ee:	a8 40                	test   $0x40,%al
    e3f0:	b8 00 00 00 00       	mov    $0x0,%eax
    e3f5:	48 0f 44 d0          	cmove  %rax,%rdx
    e3f9:	83 f9 40             	cmp    $0x40,%ecx
    e3fc:	48 0f 4d d0          	cmovge %rax,%rdx
    e400:	48 09 d6             	or     %rdx,%rsi
    e403:	c6 44 24 08 03       	movb   $0x3,0x8(%rsp)
    e408:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    e40d:	8a 44 24 09          	mov    0x9(%rsp),%al
    e411:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    e416:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    e41c:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    e422:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    e427:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    e42c:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    e433:	00 00 
    e435:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    e43c:	00 
    e43d:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    e444:	00 
    e445:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    e44a:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    e44f:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    e455:	b2 03                	mov    $0x3,%dl
    e457:	0f b6 d2             	movzbl %dl,%edx
    e45a:	48 8d 35 83 87 02 00 	lea    0x28783(%rip),%rsi        # 36be4 <_fini+0x12c0>
    e461:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    e465:	48 01 f2             	add    %rsi,%rdx
    e468:	4c 89 d3             	mov    %r10,%rbx
    e46b:	ff e2                	jmpq   *%rdx
    e46d:	c6 44 24 08 0c       	movb   $0xc,0x8(%rsp)
    e472:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
    e477:	8a 44 24 09          	mov    0x9(%rsp),%al
    e47b:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    e480:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    e486:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    e48c:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    e491:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    e496:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    e49d:	00 00 
    e49f:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    e4a6:	00 
    e4a7:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    e4ae:	00 
    e4af:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    e4b4:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    e4b9:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    e4bf:	b2 0c                	mov    $0xc,%dl
    e4c1:	0f b6 d2             	movzbl %dl,%edx
    e4c4:	48 8d 35 19 87 02 00 	lea    0x28719(%rip),%rsi        # 36be4 <_fini+0x12c0>
    e4cb:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    e4cf:	48 01 f2             	add    %rsi,%rdx
    e4d2:	4c 89 d3             	mov    %r10,%rbx
    e4d5:	ff e2                	jmpq   *%rdx
    e4d7:	c6 44 24 08 05       	movb   $0x5,0x8(%rsp)
    e4dc:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
    e4e1:	8a 44 24 09          	mov    0x9(%rsp),%al
    e4e5:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    e4ea:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    e4f0:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    e4f6:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    e4fb:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    e500:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    e507:	00 00 
    e509:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    e510:	00 
    e511:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    e518:	00 
    e519:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    e51e:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    e523:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    e529:	b2 05                	mov    $0x5,%dl
    e52b:	0f b6 d2             	movzbl %dl,%edx
    e52e:	48 8d 35 af 86 02 00 	lea    0x286af(%rip),%rsi        # 36be4 <_fini+0x12c0>
    e535:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    e539:	48 01 f2             	add    %rsi,%rdx
    e53c:	4c 89 d3             	mov    %r10,%rbx
    e53f:	ff e2                	jmpq   *%rdx
    e541:	c6 44 24 08 04       	movb   $0x4,0x8(%rsp)
    e546:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
    e54b:	8a 44 24 09          	mov    0x9(%rsp),%al
    e54f:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    e554:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    e55a:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    e560:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    e565:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    e56a:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    e571:	00 00 
    e573:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    e57a:	00 
    e57b:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    e582:	00 
    e583:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    e588:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    e58d:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    e593:	b2 04                	mov    $0x4,%dl
    e595:	0f b6 d2             	movzbl %dl,%edx
    e598:	48 8d 35 45 86 02 00 	lea    0x28645(%rip),%rsi        # 36be4 <_fini+0x12c0>
    e59f:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    e5a3:	48 01 f2             	add    %rsi,%rdx
    e5a6:	4c 89 d3             	mov    %r10,%rbx
    e5a9:	ff e2                	jmpq   *%rdx
    e5ab:	c6 44 24 08 02       	movb   $0x2,0x8(%rsp)
    e5b0:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
    e5b5:	8a 44 24 09          	mov    0x9(%rsp),%al
    e5b9:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    e5be:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    e5c4:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    e5ca:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    e5cf:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    e5d4:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    e5db:	00 00 
    e5dd:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    e5e4:	00 
    e5e5:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    e5ec:	00 
    e5ed:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    e5f2:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    e5f7:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    e5fd:	b2 02                	mov    $0x2,%dl
    e5ff:	0f b6 d2             	movzbl %dl,%edx
    e602:	48 8d 35 db 85 02 00 	lea    0x285db(%rip),%rsi        # 36be4 <_fini+0x12c0>
    e609:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    e60d:	48 01 f2             	add    %rsi,%rdx
    e610:	4c 89 d3             	mov    %r10,%rbx
    e613:	ff e2                	jmpq   *%rdx
    e615:	c6 44 24 08 0d       	movb   $0xd,0x8(%rsp)
    e61a:	40 88 6c 24 09       	mov    %bpl,0x9(%rsp)
    e61f:	8a 44 24 09          	mov    0x9(%rsp),%al
    e623:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    e628:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    e62e:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    e634:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    e639:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    e63e:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    e645:	00 00 
    e647:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    e64e:	00 
    e64f:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    e656:	00 
    e657:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    e65c:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    e661:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    e667:	b2 0d                	mov    $0xd,%dl
    e669:	0f b6 d2             	movzbl %dl,%edx
    e66c:	48 8d 35 71 85 02 00 	lea    0x28571(%rip),%rsi        # 36be4 <_fini+0x12c0>
    e673:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    e677:	48 01 f2             	add    %rsi,%rdx
    e67a:	ff e2                	jmpq   *%rdx
    e67c:	48 85 f6             	test   %rsi,%rsi
    e67f:	0f 84 6d 0b 00 00    	je     f1f2 <addr2line::ResUnit<R>::parse_lines+0x20c2>
    e685:	41 b9 01 00 00 00    	mov    $0x1,%r9d
    e68b:	49 89 f7             	mov    %rsi,%r15
    e68e:	4d 89 f3             	mov    %r14,%r11
    e691:	49 83 c3 01          	add    $0x1,%r11
    e695:	49 83 c7 ff          	add    $0xffffffffffffffff,%r15
    e699:	31 ff                	xor    %edi,%edi
    e69b:	4c 89 d8             	mov    %r11,%rax
    e69e:	31 c9                	xor    %ecx,%ecx
    e6a0:	49 89 c3             	mov    %rax,%r11
    e6a3:	48 89 84 24 f8 02 00 	mov    %rax,0x2f8(%rsp)
    e6aa:	00 
    e6ab:	4c 89 bc 24 00 03 00 	mov    %r15,0x300(%rsp)
    e6b2:	00 
    e6b3:	0f b6 40 ff          	movzbl -0x1(%rax),%eax
    e6b7:	83 f9 3f             	cmp    $0x3f,%ecx
    e6ba:	75 08                	jne    e6c4 <addr2line::ResUnit<R>::parse_lines+0x1594>
    e6bc:	3c 01                	cmp    $0x1,%al
    e6be:	0f 87 1e 0b 00 00    	ja     f1e2 <addr2line::ResUnit<R>::parse_lines+0x20b2>
    e6c4:	48 89 da             	mov    %rbx,%rdx
    e6c7:	0f b6 d8             	movzbl %al,%ebx
    e6ca:	89 d8                	mov    %ebx,%eax
    e6cc:	83 e0 7f             	and    $0x7f,%eax
    e6cf:	48 d3 e0             	shl    %cl,%rax
    e6d2:	48 09 c7             	or     %rax,%rdi
    e6d5:	84 db                	test   %bl,%bl
    e6d7:	79 15                	jns    e6ee <addr2line::ResUnit<R>::parse_lines+0x15be>
    e6d9:	83 c1 07             	add    $0x7,%ecx
    e6dc:	49 8d 43 01          	lea    0x1(%r11),%rax
    e6e0:	49 83 c7 ff          	add    $0xffffffffffffffff,%r15
    e6e4:	48 89 d3             	mov    %rdx,%rbx
    e6e7:	72 b7                	jb     e6a0 <addr2line::ResUnit<R>::parse_lines+0x1570>
    e6e9:	e9 01 0b 00 00       	jmpq   f1ef <addr2line::ResUnit<R>::parse_lines+0x20bf>
    e6ee:	4d 39 d1             	cmp    %r10,%r9
    e6f1:	48 89 d3             	mov    %rdx,%rbx
    e6f4:	0f 84 25 03 00 00    	je     ea1f <addr2line::ResUnit<R>::parse_lines+0x18ef>
    e6fa:	49 83 c1 01          	add    $0x1,%r9
    e6fe:	49 89 f8             	mov    %rdi,%r8
    e701:	4d 85 ff             	test   %r15,%r15
    e704:	75 8b                	jne    e691 <addr2line::ResUnit<R>::parse_lines+0x1561>
    e706:	e9 e4 0a 00 00       	jmpq   f1ef <addr2line::ResUnit<R>::parse_lines+0x20bf>
    e70b:	c6 44 24 08 13       	movb   $0x13,0x8(%rsp)
    e710:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
    e715:	8a 44 24 09          	mov    0x9(%rsp),%al
    e719:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    e71e:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    e724:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    e72a:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    e72f:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    e734:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    e73b:	00 00 
    e73d:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    e744:	00 
    e745:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    e74c:	00 
    e74d:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    e752:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    e757:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    e75d:	b2 13                	mov    $0x13,%dl
    e75f:	0f b6 d2             	movzbl %dl,%edx
    e762:	48 8d 35 7b 84 02 00 	lea    0x2847b(%rip),%rsi        # 36be4 <_fini+0x12c0>
    e769:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    e76d:	48 01 f2             	add    %rsi,%rdx
    e770:	4c 89 f3             	mov    %r14,%rbx
    e773:	ff e2                	jmpq   *%rdx
    e775:	4c 8d 14 01          	lea    (%rcx,%rax,1),%r10
    e779:	49 83 c2 03          	add    $0x3,%r10
    e77d:	48 89 cd             	mov    %rcx,%rbp
    e780:	48 f7 d5             	not    %rbp
    e783:	48 01 fd             	add    %rdi,%rbp
    e786:	4c 89 94 24 c8 00 00 	mov    %r10,0xc8(%rsp)
    e78d:	00 
    e78e:	48 89 ac 24 d0 00 00 	mov    %rbp,0xd0(%rsp)
    e795:	00 
    e796:	49 39 cb             	cmp    %rcx,%r11
    e799:	0f 84 c3 09 00 00    	je     f162 <addr2line::ResUnit<R>::parse_lines+0x2032>
    e79f:	48 01 c8             	add    %rcx,%rax
    e7a2:	48 83 c0 04          	add    $0x4,%rax
    e7a6:	48 29 cf             	sub    %rcx,%rdi
    e7a9:	48 83 c7 fe          	add    $0xfffffffffffffffe,%rdi
    e7ad:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
    e7b4:	00 
    e7b5:	48 89 bc 24 d0 00 00 	mov    %rdi,0xd0(%rsp)
    e7bc:	00 
    e7bd:	48 8d bc 24 10 01 00 	lea    0x110(%rsp),%rdi
    e7c4:	00 
    e7c5:	48 8d b4 24 c8 00 00 	lea    0xc8(%rsp),%rsi
    e7cc:	00 
    e7cd:	e8 0e bf ff ff       	callq  a6e0 <gimli::read::line::FileEntry<R,Offset>::parse>
    e7d2:	4c 8b 94 24 20 01 00 	mov    0x120(%rsp),%r10
    e7d9:	00 
    e7da:	48 8b 84 24 10 01 00 	mov    0x110(%rsp),%rax
    e7e1:	00 
    e7e2:	4c 8b 84 24 18 01 00 	mov    0x118(%rsp),%r8
    e7e9:	00 
    e7ea:	48 8d 8c 24 28 01 00 	lea    0x128(%rsp),%rcx
    e7f1:	00 
    e7f2:	f3 0f 6f 01          	movdqu (%rcx),%xmm0
    e7f6:	0f 10 49 10          	movups 0x10(%rcx),%xmm1
    e7fa:	0f 10 51 20          	movups 0x20(%rcx),%xmm2
    e7fe:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    e804:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    e809:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    e80e:	48 83 f8 01          	cmp    $0x1,%rax
    e812:	0f 84 5b 0a 00 00    	je     f273 <addr2line::ResUnit<R>::parse_lines+0x2143>
    e818:	0f 28 44 24 50       	movaps 0x50(%rsp),%xmm0
    e81d:	0f 28 4c 24 60       	movaps 0x60(%rsp),%xmm1
    e822:	0f 28 54 24 70       	movaps 0x70(%rsp),%xmm2
    e827:	0f 29 54 24 40       	movaps %xmm2,0x40(%rsp)
    e82c:	0f 29 4c 24 30       	movaps %xmm1,0x30(%rsp)
    e831:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
    e836:	c6 44 24 08 12       	movb   $0x12,0x8(%rsp)
    e83b:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    e840:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
    e845:	8a 44 24 09          	mov    0x9(%rsp),%al
    e849:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    e84e:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    e854:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    e85a:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    e85f:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    e864:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    e86b:	00 00 
    e86d:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    e874:	00 
    e875:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    e87c:	00 
    e87d:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    e882:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    e887:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    e88d:	b2 12                	mov    $0x12,%dl
    e88f:	0f b6 d2             	movzbl %dl,%edx
    e892:	48 8d 35 4b 83 02 00 	lea    0x2834b(%rip),%rsi        # 36be4 <_fini+0x12c0>
    e899:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    e89d:	48 01 f2             	add    %rsi,%rdx
    e8a0:	ff e2                	jmpq   *%rdx
    e8a2:	49 83 fb 04          	cmp    $0x4,%r11
    e8a6:	0f 82 9f 09 00 00    	jb     f24b <addr2line::ResUnit<R>::parse_lines+0x211b>
    e8ac:	49 8d 04 29          	lea    (%r9,%rbp,1),%rax
    e8b0:	48 83 c0 07          	add    $0x7,%rax
    e8b4:	48 83 c7 fb          	add    $0xfffffffffffffffb,%rdi
    e8b8:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
    e8bf:	00 
    e8c0:	48 89 bc 24 d0 00 00 	mov    %rdi,0xd0(%rsp)
    e8c7:	00 
    e8c8:	41 8b 44 29 03       	mov    0x3(%r9,%rbp,1),%eax
    e8cd:	eb 59                	jmp    e928 <addr2line::ResUnit<R>::parse_lines+0x17f8>
    e8cf:	49 83 fb 02          	cmp    $0x2,%r11
    e8d3:	0f 82 72 09 00 00    	jb     f24b <addr2line::ResUnit<R>::parse_lines+0x211b>
    e8d9:	49 8d 04 29          	lea    (%r9,%rbp,1),%rax
    e8dd:	48 83 c0 05          	add    $0x5,%rax
    e8e1:	48 83 c7 fd          	add    $0xfffffffffffffffd,%rdi
    e8e5:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
    e8ec:	00 
    e8ed:	48 89 bc 24 d0 00 00 	mov    %rdi,0xd0(%rsp)
    e8f4:	00 
    e8f5:	41 0f b7 44 29 03    	movzwl 0x3(%r9,%rbp,1),%eax
    e8fb:	eb 2b                	jmp    e928 <addr2line::ResUnit<R>::parse_lines+0x17f8>
    e8fd:	49 83 fb 08          	cmp    $0x8,%r11
    e901:	0f 82 44 09 00 00    	jb     f24b <addr2line::ResUnit<R>::parse_lines+0x211b>
    e907:	49 8d 04 29          	lea    (%r9,%rbp,1),%rax
    e90b:	48 83 c0 0b          	add    $0xb,%rax
    e90f:	48 83 c7 f7          	add    $0xfffffffffffffff7,%rdi
    e913:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
    e91a:	00 
    e91b:	48 89 bc 24 d0 00 00 	mov    %rdi,0xd0(%rsp)
    e922:	00 
    e923:	49 8b 44 29 03       	mov    0x3(%r9,%rbp,1),%rax
    e928:	c6 44 24 08 11       	movb   $0x11,0x8(%rsp)
    e92d:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    e932:	8a 44 24 09          	mov    0x9(%rsp),%al
    e936:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    e93b:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    e941:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    e947:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    e94c:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    e951:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    e958:	00 00 
    e95a:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    e961:	00 
    e962:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    e969:	00 
    e96a:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    e96f:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    e974:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    e97a:	b2 11                	mov    $0x11,%dl
    e97c:	0f b6 d2             	movzbl %dl,%edx
    e97f:	48 8d 35 5e 82 02 00 	lea    0x2825e(%rip),%rsi        # 36be4 <_fini+0x12c0>
    e986:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    e98a:	48 01 f2             	add    %rsi,%rdx
    e98d:	ff e2                	jmpq   *%rdx
    e98f:	66 48 0f 7e de       	movq   %xmm3,%rsi
    e994:	4c 89 ef             	mov    %r13,%rdi
    e997:	ff 15 cb 75 03 00    	callq  *0x375cb(%rip)        # 45f68 <_GLOBAL_OFFSET_TABLE_+0x5e0>
    e99d:	e9 ac ef ff ff       	jmpq   d94e <addr2line::ResUnit<R>::parse_lines+0x81e>
    e9a2:	c6 44 24 08 0e       	movb   $0xe,0x8(%rsp)
    e9a7:	40 88 6c 24 09       	mov    %bpl,0x9(%rsp)
    e9ac:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
    e9b1:	8a 44 24 09          	mov    0x9(%rsp),%al
    e9b5:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    e9ba:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    e9c0:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    e9c6:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    e9cb:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    e9d0:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    e9d7:	00 00 
    e9d9:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    e9e0:	00 
    e9e1:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    e9e8:	00 
    e9e9:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    e9ee:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    e9f3:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    e9f9:	b2 0e                	mov    $0xe,%dl
    e9fb:	0f b6 d2             	movzbl %dl,%edx
    e9fe:	48 8d 35 df 81 02 00 	lea    0x281df(%rip),%rsi        # 36be4 <_fini+0x12c0>
    ea05:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    ea09:	48 01 f2             	add    %rsi,%rdx
    ea0c:	4c 89 db             	mov    %r11,%rbx
    ea0f:	ff e2                	jmpq   *%rdx
    ea11:	66 0f d6 9c 24 c8 02 	movq   %xmm3,0x2c8(%rsp)
    ea18:	00 00 
    ea1a:	e9 2f ef ff ff       	jmpq   d94e <addr2line::ResUnit<R>::parse_lines+0x81e>
    ea1f:	4d 29 f3             	sub    %r14,%r11
    ea22:	4c 39 de             	cmp    %r11,%rsi
    ea25:	0f 82 f7 07 00 00    	jb     f222 <addr2line::ResUnit<R>::parse_lines+0x20f2>
    ea2b:	c6 44 24 08 0f       	movb   $0xf,0x8(%rsp)
    ea30:	40 88 6c 24 09       	mov    %bpl,0x9(%rsp)
    ea35:	4c 89 74 24 10       	mov    %r14,0x10(%rsp)
    ea3a:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    ea3f:	8a 44 24 09          	mov    0x9(%rsp),%al
    ea43:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    ea48:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    ea4e:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    ea54:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    ea59:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    ea5e:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    ea65:	00 00 
    ea67:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    ea6e:	00 
    ea6f:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    ea76:	00 
    ea77:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    ea7c:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    ea81:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    ea87:	b2 0f                	mov    $0xf,%dl
    ea89:	0f b6 d2             	movzbl %dl,%edx
    ea8c:	48 8d 35 51 81 02 00 	lea    0x28151(%rip),%rsi        # 36be4 <_fini+0x12c0>
    ea93:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    ea97:	48 01 f2             	add    %rsi,%rdx
    ea9a:	ff e2                	jmpq   *%rdx
    ea9c:	66 0f d6 9c 24 d8 02 	movq   %xmm3,0x2d8(%rsp)
    eaa3:	00 00 
    eaa5:	e9 a4 ee ff ff       	jmpq   d94e <addr2line::ResUnit<R>::parse_lines+0x81e>
    eaaa:	66 0f d6 9c 24 e8 02 	movq   %xmm3,0x2e8(%rsp)
    eab1:	00 00 
    eab3:	e9 96 ee ff ff       	jmpq   d94e <addr2line::ResUnit<R>::parse_lines+0x81e>
    eab8:	66 0f d6 9c 24 b8 02 	movq   %xmm3,0x2b8(%rsp)
    eabf:	00 00 
    eac1:	48 c7 84 24 c0 02 00 	movq   $0x0,0x2c0(%rsp)
    eac8:	00 00 00 00 00 
    eacd:	e9 7c ee ff ff       	jmpq   d94e <addr2line::ResUnit<R>::parse_lines+0x81e>
    ead2:	c6 84 24 f4 02 00 00 	movb   $0x1,0x2f4(%rsp)
    ead9:	01 
    eada:	e9 6f ee ff ff       	jmpq   d94e <addr2line::ResUnit<R>::parse_lines+0x81e>
    eadf:	66 0f d6 9c 24 e0 02 	movq   %xmm3,0x2e0(%rsp)
    eae6:	00 00 
    eae8:	e9 61 ee ff ff       	jmpq   d94e <addr2line::ResUnit<R>::parse_lines+0x81e>
    eaed:	8a 8c 24 b0 02 00 00 	mov    0x2b0(%rsp),%cl
    eaf4:	84 c9                	test   %cl,%cl
    eaf6:	0f 84 d6 19 00 00    	je     104d2 <addr2line::ResUnit<R>::parse_lines+0x33a2>
    eafc:	8a 84 24 b1 02 00 00 	mov    0x2b1(%rsp),%al
    eb03:	f6 d0                	not    %al
    eb05:	0f b6 c0             	movzbl %al,%eax
    eb08:	f6 f1                	div    %cl
    eb0a:	0f b6 c0             	movzbl %al,%eax
    eb0d:	0f b6 8c 24 ac 02 00 	movzbl 0x2ac(%rsp),%ecx
    eb14:	00 
    eb15:	0f b6 b4 24 ad 02 00 	movzbl 0x2ad(%rsp),%esi
    eb1c:	00 
    eb1d:	48 83 fe 01          	cmp    $0x1,%rsi
    eb21:	0f 85 ec 00 00 00    	jne    ec13 <addr2line::ResUnit<R>::parse_lines+0x1ae3>
    eb27:	48 0f af c8          	imul   %rax,%rcx
    eb2b:	48 01 8c 24 b8 02 00 	add    %rcx,0x2b8(%rsp)
    eb32:	00 
    eb33:	48 c7 84 24 c0 02 00 	movq   $0x0,0x2c0(%rsp)
    eb3a:	00 00 00 00 00 
    eb3f:	e9 0a ee ff ff       	jmpq   d94e <addr2line::ResUnit<R>::parse_lines+0x81e>
    eb44:	66 0f 7f 9c 24 e0 00 	movdqa %xmm3,0xe0(%rsp)
    eb4b:	00 00 
    eb4d:	66 0f 6f 44 24 50    	movdqa 0x50(%rsp),%xmm0
    eb53:	0f 28 4c 24 60       	movaps 0x60(%rsp),%xmm1
    eb58:	0f 28 54 24 70       	movaps 0x70(%rsp),%xmm2
    eb5d:	0f 29 94 24 30 01 00 	movaps %xmm2,0x130(%rsp)
    eb64:	00 
    eb65:	0f 29 8c 24 20 01 00 	movaps %xmm1,0x120(%rsp)
    eb6c:	00 
    eb6d:	66 0f 7f 84 24 10 01 	movdqa %xmm0,0x110(%rsp)
    eb74:	00 00 
    eb76:	48 8b 84 24 40 02 00 	mov    0x240(%rsp),%rax
    eb7d:	00 
    eb7e:	48 3b 84 24 38 02 00 	cmp    0x238(%rsp),%rax
    eb85:	00 
    eb86:	75 15                	jne    eb9d <addr2line::ResUnit<R>::parse_lines+0x1a6d>
    eb88:	be 01 00 00 00       	mov    $0x1,%esi
    eb8d:	4c 89 e7             	mov    %r12,%rdi
    eb90:	e8 1b ad ff ff       	callq  98b0 <alloc::vec::Vec<T>::reserve>
    eb95:	48 8b 84 24 40 02 00 	mov    0x240(%rsp),%rax
    eb9c:	00 
    eb9d:	48 8b 8c 24 30 02 00 	mov    0x230(%rsp),%rcx
    eba4:	00 
    eba5:	48 c1 e0 06          	shl    $0x6,%rax
    eba9:	0f 28 84 24 e0 00 00 	movaps 0xe0(%rsp),%xmm0
    ebb0:	00 
    ebb1:	0f 11 04 01          	movups %xmm0,(%rcx,%rax,1)
    ebb5:	66 0f 6f 84 24 10 01 	movdqa 0x110(%rsp),%xmm0
    ebbc:	00 00 
    ebbe:	0f 28 8c 24 20 01 00 	movaps 0x120(%rsp),%xmm1
    ebc5:	00 
    ebc6:	0f 28 94 24 30 01 00 	movaps 0x130(%rsp),%xmm2
    ebcd:	00 
    ebce:	f3 0f 7f 44 01 10    	movdqu %xmm0,0x10(%rcx,%rax,1)
    ebd4:	0f 11 4c 01 20       	movups %xmm1,0x20(%rcx,%rax,1)
    ebd9:	0f 11 54 01 30       	movups %xmm2,0x30(%rcx,%rax,1)
    ebde:	48 83 84 24 40 02 00 	addq   $0x1,0x240(%rsp)
    ebe5:	00 01 
    ebe7:	e9 62 ed ff ff       	jmpq   d94e <addr2line::ResUnit<R>::parse_lines+0x81e>
    ebec:	c6 84 24 f1 02 00 00 	movb   $0x1,0x2f1(%rsp)
    ebf3:	01 
    ebf4:	e9 55 ed ff ff       	jmpq   d94e <addr2line::ResUnit<R>::parse_lines+0x81e>
    ebf9:	80 b4 24 f0 02 00 00 	xorb   $0x1,0x2f0(%rsp)
    ec00:	01 
    ec01:	e9 48 ed ff ff       	jmpq   d94e <addr2line::ResUnit<R>::parse_lines+0x81e>
    ec06:	c6 84 24 f3 02 00 00 	movb   $0x1,0x2f3(%rsp)
    ec0d:	01 
    ec0e:	e9 3b ed ff ff       	jmpq   d94e <addr2line::ResUnit<R>::parse_lines+0x81e>
    ec13:	40 84 f6             	test   %sil,%sil
    ec16:	0f 84 98 18 00 00    	je     104b4 <addr2line::ResUnit<R>::parse_lines+0x3384>
    ec1c:	48 03 84 24 c0 02 00 	add    0x2c0(%rsp),%rax
    ec23:	00 
    ec24:	48 89 c2             	mov    %rax,%rdx
    ec27:	48 c1 ea 20          	shr    $0x20,%rdx
    ec2b:	74 07                	je     ec34 <addr2line::ResUnit<R>::parse_lines+0x1b04>
    ec2d:	31 d2                	xor    %edx,%edx
    ec2f:	48 f7 f6             	div    %rsi
    ec32:	eb 04                	jmp    ec38 <addr2line::ResUnit<R>::parse_lines+0x1b08>
    ec34:	31 d2                	xor    %edx,%edx
    ec36:	f7 f6                	div    %esi
    ec38:	48 0f af c1          	imul   %rcx,%rax
    ec3c:	48 01 84 24 b8 02 00 	add    %rax,0x2b8(%rsp)
    ec43:	00 
    ec44:	48 89 94 24 c0 02 00 	mov    %rdx,0x2c0(%rsp)
    ec4b:	00 
    ec4c:	e9 fd ec ff ff       	jmpq   d94e <addr2line::ResUnit<R>::parse_lines+0x81e>
    ec51:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    ec58:	00 00 00 
    ec5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ec60:	31 c0                	xor    %eax,%eax
    ec62:	31 c9                	xor    %ecx,%ecx
    ec64:	31 d2                	xor    %edx,%edx
    ec66:	45 31 c0             	xor    %r8d,%r8d
    ec69:	31 f6                	xor    %esi,%esi
    ec6b:	e9 21 01 00 00       	jmpq   ed91 <addr2line::ResUnit<R>::parse_lines+0x1c61>
    ec70:	41 b8 06 00 00 00    	mov    $0x6,%r8d
    ec76:	45 31 d2             	xor    %r10d,%r10d
    ec79:	e9 e2 00 00 00       	jmpq   ed60 <addr2line::ResUnit<R>::parse_lines+0x1c30>
    ec7e:	66 90                	xchg   %ax,%ax
    ec80:	4d 8d 14 29          	lea    (%r9,%rbp,1),%r10
    ec84:	49 83 c2 01          	add    $0x1,%r10
    ec88:	41 b8 13 00 00 00    	mov    $0x13,%r8d
    ec8e:	e9 cd 00 00 00       	jmpq   ed60 <addr2line::ResUnit<R>::parse_lines+0x1c30>
    ec93:	4d 8d 14 31          	lea    (%r9,%rsi,1),%r10
    ec97:	49 83 c2 01          	add    $0x1,%r10
    ec9b:	41 b8 13 00 00 00    	mov    $0x13,%r8d
    eca1:	e9 ba 00 00 00       	jmpq   ed60 <addr2line::ResUnit<R>::parse_lines+0x1c30>
    eca6:	c6 84 24 f2 02 00 00 	movb   $0x1,0x2f2(%rsp)
    ecad:	01 
    ecae:	e9 d7 04 00 00       	jmpq   f18a <addr2line::ResUnit<R>::parse_lines+0x205a>
    ecb3:	8a 8c 24 b0 02 00 00 	mov    0x2b0(%rsp),%cl
    ecba:	84 c9                	test   %cl,%cl
    ecbc:	0f 84 fe 18 00 00    	je     105c0 <addr2line::ResUnit<R>::parse_lines+0x3490>
    ecc2:	2a 84 24 b1 02 00 00 	sub    0x2b1(%rsp),%al
    ecc9:	0f b6 c0             	movzbl %al,%eax
    eccc:	f6 f1                	div    %cl
    ecce:	89 c3                	mov    %eax,%ebx
    ecd0:	0f b6 f4             	movzbl %ah,%esi
    ecd3:	48 0f be 84 24 af 02 	movsbq 0x2af(%rsp),%rax
    ecda:	00 00 
    ecdc:	48 01 c6             	add    %rax,%rsi
    ecdf:	4c 89 ef             	mov    %r13,%rdi
    ece2:	ff 15 80 72 03 00    	callq  *0x37280(%rip)        # 45f68 <_GLOBAL_OFFSET_TABLE_+0x5e0>
    ece8:	0f b6 c3             	movzbl %bl,%eax
    eceb:	0f b6 8c 24 ac 02 00 	movzbl 0x2ac(%rsp),%ecx
    ecf2:	00 
    ecf3:	0f b6 b4 24 ad 02 00 	movzbl 0x2ad(%rsp),%esi
    ecfa:	00 
    ecfb:	48 83 fe 01          	cmp    $0x1,%rsi
    ecff:	75 28                	jne    ed29 <addr2line::ResUnit<R>::parse_lines+0x1bf9>
    ed01:	48 0f af c8          	imul   %rax,%rcx
    ed05:	48 01 8c 24 b8 02 00 	add    %rcx,0x2b8(%rsp)
    ed0c:	00 
    ed0d:	48 c7 84 24 c0 02 00 	movq   $0x0,0x2c0(%rsp)
    ed14:	00 00 00 00 00 
    ed19:	e9 6c 04 00 00       	jmpq   f18a <addr2line::ResUnit<R>::parse_lines+0x205a>
    ed1e:	41 b8 13 00 00 00    	mov    $0x13,%r8d
    ed24:	4d 89 f2             	mov    %r14,%r10
    ed27:	eb 37                	jmp    ed60 <addr2line::ResUnit<R>::parse_lines+0x1c30>
    ed29:	40 84 f6             	test   %sil,%sil
    ed2c:	0f 84 a9 18 00 00    	je     105db <addr2line::ResUnit<R>::parse_lines+0x34ab>
    ed32:	48 03 84 24 c0 02 00 	add    0x2c0(%rsp),%rax
    ed39:	00 
    ed3a:	48 89 c2             	mov    %rax,%rdx
    ed3d:	48 c1 ea 20          	shr    $0x20,%rdx
    ed41:	0f 84 2b 04 00 00    	je     f172 <addr2line::ResUnit<R>::parse_lines+0x2042>
    ed47:	31 d2                	xor    %edx,%edx
    ed49:	48 f7 f6             	div    %rsi
    ed4c:	e9 25 04 00 00       	jmpq   f176 <addr2line::ResUnit<R>::parse_lines+0x2046>
    ed51:	4d 8d 14 39          	lea    (%r9,%rdi,1),%r10
    ed55:	49 83 c2 01          	add    $0x1,%r10
    ed59:	41 b8 13 00 00 00    	mov    $0x13,%r8d
    ed5f:	90                   	nop
    ed60:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    ed65:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    ed6a:	31 c0                	xor    %eax,%eax
    ed6c:	31 c9                	xor    %ecx,%ecx
    ed6e:	31 d2                	xor    %edx,%edx
    ed70:	48 8d 35 e1 84 02 00 	lea    0x284e1(%rip),%rsi        # 37258 <_fini+0x1934>
    ed77:	48 89 b4 24 f8 02 00 	mov    %rsi,0x2f8(%rsp)
    ed7e:	00 
    ed7f:	48 c7 84 24 00 03 00 	movq   $0x0,0x300(%rsp)
    ed86:	00 00 00 00 00 
    ed8b:	40 b6 01             	mov    $0x1,%sil
    ed8e:	4c 89 d3             	mov    %r10,%rbx
    ed91:	48 c1 e0 20          	shl    $0x20,%rax
    ed95:	c1 e1 10             	shl    $0x10,%ecx
    ed98:	48 09 c1             	or     %rax,%rcx
    ed9b:	c1 e2 08             	shl    $0x8,%edx
    ed9e:	0f b7 c2             	movzwl %dx,%eax
    eda1:	48 09 c8             	or     %rcx,%rax
    eda4:	45 0f b6 f8          	movzbl %r8b,%r15d
    eda8:	49 09 c7             	or     %rax,%r15
    edab:	40 84 f6             	test   %sil,%sil
    edae:	0f 85 f3 13 00 00    	jne    101a7 <addr2line::ResUnit<R>::parse_lines+0x3077>
    edb4:	4d 85 ff             	test   %r15,%r15
    edb7:	0f 84 dd 04 00 00    	je     f29a <addr2line::ResUnit<R>::parse_lines+0x216a>
    edbd:	80 7b 3a 00          	cmpb   $0x0,0x3a(%rbx)
    edc1:	0f 84 99 00 00 00    	je     ee60 <addr2line::ResUnit<R>::parse_lines+0x1d30>
    edc7:	48 8b ac 24 98 01 00 	mov    0x198(%rsp),%rbp
    edce:	00 
    edcf:	48 85 ed             	test   %rbp,%rbp
    edd2:	0f 84 ac 02 00 00    	je     f084 <addr2line::ResUnit<R>::parse_lines+0x1f54>
    edd8:	48 8b 84 24 88 01 00 	mov    0x188(%rsp),%rax
    eddf:	00 
    ede0:	48 8b 8c 24 90 01 00 	mov    0x190(%rsp),%rcx
    ede7:	00 
    ede8:	4c 8b 30             	mov    (%rax),%r14
    edeb:	4c 8b 3b             	mov    (%rbx),%r15
    edee:	48 c7 84 24 88 01 00 	movq   $0x8,0x188(%rsp)
    edf5:	00 08 00 00 00 
    edfa:	48 8d 94 24 90 01 00 	lea    0x190(%rsp),%rdx
    ee01:	00 
    ee02:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ee06:	f3 0f 7f 02          	movdqu %xmm0,(%rdx)
    ee0a:	48 39 e9             	cmp    %rbp,%rcx
    ee0d:	0f 86 58 01 00 00    	jbe    ef6b <addr2line::ResUnit<R>::parse_lines+0x1e3b>
    ee13:	4d 89 ec             	mov    %r13,%r12
    ee16:	49 89 dd             	mov    %rbx,%r13
    ee19:	48 c1 e1 03          	shl    $0x3,%rcx
    ee1d:	48 8d 34 49          	lea    (%rcx,%rcx,2),%rsi
    ee21:	48 8d 0c ed 00 00 00 	lea    0x0(,%rbp,8),%rcx
    ee28:	00 
    ee29:	48 8d 1c 49          	lea    (%rcx,%rcx,2),%rbx
    ee2d:	48 85 db             	test   %rbx,%rbx
    ee30:	0f 84 0f 01 00 00    	je     ef45 <addr2line::ResUnit<R>::parse_lines+0x1e15>
    ee36:	ba 08 00 00 00       	mov    $0x8,%edx
    ee3b:	48 89 c7             	mov    %rax,%rdi
    ee3e:	48 89 d9             	mov    %rbx,%rcx
    ee41:	ff 15 31 71 03 00    	callq  *0x37131(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
    ee47:	48 85 c0             	test   %rax,%rax
    ee4a:	0f 85 0d 01 00 00    	jne    ef5d <addr2line::ResUnit<R>::parse_lines+0x1e2d>
    ee50:	e9 5e 14 00 00       	jmpq   102b3 <addr2line::ResUnit<R>::parse_lines+0x3183>
    ee55:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    ee5c:	00 00 00 
    ee5f:	90                   	nop
    ee60:	4c 8b 33             	mov    (%rbx),%r14
    ee63:	4c 8b 6b 10          	mov    0x10(%rbx),%r13
    ee67:	48 89 d8             	mov    %rbx,%rax
    ee6a:	8b 5b 18             	mov    0x18(%rbx),%ebx
    ee6d:	49 89 c7             	mov    %rax,%r15
    ee70:	8b 68 20             	mov    0x20(%rax),%ebp
    ee73:	48 8b bc 24 88 01 00 	mov    0x188(%rsp),%rdi
    ee7a:	00 
    ee7b:	4c 8b a4 24 98 01 00 	mov    0x198(%rsp),%r12
    ee82:	00 
    ee83:	4c 89 e0             	mov    %r12,%rax
    ee86:	48 83 e8 01          	sub    $0x1,%rax
    ee8a:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    ee8e:	48 8d 0c c7          	lea    (%rdi,%rax,8),%rcx
    ee92:	b8 00 00 00 00       	mov    $0x0,%eax
    ee97:	48 0f 43 c1          	cmovae %rcx,%rax
    ee9b:	72 23                	jb     eec0 <addr2line::ResUnit<R>::parse_lines+0x1d90>
    ee9d:	4c 39 30             	cmp    %r14,(%rax)
    eea0:	75 1e                	jne    eec0 <addr2line::ResUnit<R>::parse_lines+0x1d90>
    eea2:	4c 89 68 08          	mov    %r13,0x8(%rax)
    eea6:	89 58 10             	mov    %ebx,0x10(%rax)
    eea9:	89 68 14             	mov    %ebp,0x14(%rax)
    eeac:	e9 59 02 00 00       	jmpq   f10a <addr2line::ResUnit<R>::parse_lines+0x1fda>
    eeb1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    eeb8:	00 00 00 
    eebb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    eec0:	4c 3b a4 24 90 01 00 	cmp    0x190(%rsp),%r12
    eec7:	00 
    eec8:	0f 85 1b 02 00 00    	jne    f0e9 <addr2line::ResUnit<R>::parse_lines+0x1fb9>
    eece:	4c 89 e0             	mov    %r12,%rax
    eed1:	48 ff c0             	inc    %rax
    eed4:	0f 84 4a 16 00 00    	je     10524 <addr2line::ResUnit<R>::parse_lines+0x33f4>
    eeda:	4b 8d 0c 24          	lea    (%r12,%r12,1),%rcx
    eede:	48 39 c1             	cmp    %rax,%rcx
    eee1:	48 0f 47 c1          	cmova  %rcx,%rax
    eee5:	48 83 f8 04          	cmp    $0x4,%rax
    eee9:	b9 04 00 00 00       	mov    $0x4,%ecx
    eeee:	48 0f 46 c1          	cmovbe %rcx,%rax
    eef2:	31 c9                	xor    %ecx,%ecx
    eef4:	ba 18 00 00 00       	mov    $0x18,%edx
    eef9:	48 f7 e2             	mul    %rdx
    eefc:	0f 90 c2             	seto   %dl
    eeff:	0f 91 c1             	setno  %cl
    ef02:	48 c1 e1 03          	shl    $0x3,%rcx
    ef06:	4d 85 e4             	test   %r12,%r12
    ef09:	48 89 84 24 e0 00 00 	mov    %rax,0xe0(%rsp)
    ef10:	00 
    ef11:	0f 84 81 01 00 00    	je     f098 <addr2line::ResUnit<R>::parse_lines+0x1f68>
    ef17:	84 d2                	test   %dl,%dl
    ef19:	0f 85 05 16 00 00    	jne    10524 <addr2line::ResUnit<R>::parse_lines+0x33f4>
    ef1f:	4a 8d 14 e5 00 00 00 	lea    0x0(,%r12,8),%rdx
    ef26:	00 
    ef27:	48 8d 34 52          	lea    (%rdx,%rdx,2),%rsi
    ef2b:	48 85 f6             	test   %rsi,%rsi
    ef2e:	0f 84 6c 01 00 00    	je     f0a0 <addr2line::ResUnit<R>::parse_lines+0x1f70>
    ef34:	48 89 ca             	mov    %rcx,%rdx
    ef37:	48 89 c1             	mov    %rax,%rcx
    ef3a:	ff 15 38 70 03 00    	callq  *0x37038(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
    ef40:	e9 6c 01 00 00       	jmpq   f0b1 <addr2line::ResUnit<R>::parse_lines+0x1f81>
    ef45:	48 85 f6             	test   %rsi,%rsi
    ef48:	74 0e                	je     ef58 <addr2line::ResUnit<R>::parse_lines+0x1e28>
    ef4a:	ba 08 00 00 00       	mov    $0x8,%edx
    ef4f:	48 89 c7             	mov    %rax,%rdi
    ef52:	ff 15 a0 6c 03 00    	callq  *0x36ca0(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    ef58:	b8 08 00 00 00       	mov    $0x8,%eax
    ef5d:	4c 89 eb             	mov    %r13,%rbx
    ef60:	4d 89 e5             	mov    %r12,%r13
    ef63:	4c 8d a4 24 30 02 00 	lea    0x230(%rsp),%r12
    ef6a:	00 
    ef6b:	4c 89 b4 24 10 01 00 	mov    %r14,0x110(%rsp)
    ef72:	00 
    ef73:	4c 89 bc 24 18 01 00 	mov    %r15,0x118(%rsp)
    ef7a:	00 
    ef7b:	48 89 84 24 20 01 00 	mov    %rax,0x120(%rsp)
    ef82:	00 
    ef83:	48 89 ac 24 28 01 00 	mov    %rbp,0x128(%rsp)
    ef8a:	00 
    ef8b:	48 8b ac 24 80 01 00 	mov    0x180(%rsp),%rbp
    ef92:	00 
    ef93:	48 3b ac 24 78 01 00 	cmp    0x178(%rsp),%rbp
    ef9a:	00 
    ef9b:	75 73                	jne    f010 <addr2line::ResUnit<R>::parse_lines+0x1ee0>
    ef9d:	48 89 e8             	mov    %rbp,%rax
    efa0:	48 ff c0             	inc    %rax
    efa3:	0f 84 65 15 00 00    	je     1050e <addr2line::ResUnit<R>::parse_lines+0x33de>
    efa9:	49 89 de             	mov    %rbx,%r14
    efac:	48 89 e9             	mov    %rbp,%rcx
    efaf:	48 01 e9             	add    %rbp,%rcx
    efb2:	48 39 c1             	cmp    %rax,%rcx
    efb5:	48 0f 47 c1          	cmova  %rcx,%rax
    efb9:	48 83 f8 04          	cmp    $0x4,%rax
    efbd:	b9 04 00 00 00       	mov    $0x4,%ecx
    efc2:	48 0f 46 c1          	cmovbe %rcx,%rax
    efc6:	31 c9                	xor    %ecx,%ecx
    efc8:	ba 20 00 00 00       	mov    $0x20,%edx
    efcd:	48 f7 e2             	mul    %rdx
    efd0:	48 89 c3             	mov    %rax,%rbx
    efd3:	0f 90 c0             	seto   %al
    efd6:	0f 91 c1             	setno  %cl
    efd9:	48 c1 e1 03          	shl    $0x3,%rcx
    efdd:	48 85 ed             	test   %rbp,%rbp
    efe0:	74 38                	je     f01a <addr2line::ResUnit<R>::parse_lines+0x1eea>
    efe2:	84 c0                	test   %al,%al
    efe4:	0f 85 24 15 00 00    	jne    1050e <addr2line::ResUnit<R>::parse_lines+0x33de>
    efea:	48 8b bc 24 70 01 00 	mov    0x170(%rsp),%rdi
    eff1:	00 
    eff2:	48 85 ff             	test   %rdi,%rdi
    eff5:	74 2b                	je     f022 <addr2line::ResUnit<R>::parse_lines+0x1ef2>
    eff7:	48 89 ee             	mov    %rbp,%rsi
    effa:	48 c1 e6 05          	shl    $0x5,%rsi
    effe:	74 22                	je     f022 <addr2line::ResUnit<R>::parse_lines+0x1ef2>
    f000:	48 89 ca             	mov    %rcx,%rdx
    f003:	48 89 d9             	mov    %rbx,%rcx
    f006:	ff 15 6c 6f 03 00    	callq  *0x36f6c(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
    f00c:	eb 25                	jmp    f033 <addr2line::ResUnit<R>::parse_lines+0x1f03>
    f00e:	66 90                	xchg   %ax,%ax
    f010:	48 8b 8c 24 70 01 00 	mov    0x170(%rsp),%rcx
    f017:	00 
    f018:	eb 3c                	jmp    f056 <addr2line::ResUnit<R>::parse_lines+0x1f26>
    f01a:	84 c0                	test   %al,%al
    f01c:	0f 85 ec 14 00 00    	jne    1050e <addr2line::ResUnit<R>::parse_lines+0x33de>
    f022:	48 85 db             	test   %rbx,%rbx
    f025:	74 0f                	je     f036 <addr2line::ResUnit<R>::parse_lines+0x1f06>
    f027:	48 89 df             	mov    %rbx,%rdi
    f02a:	48 89 ce             	mov    %rcx,%rsi
    f02d:	ff 15 4d 6b 03 00    	callq  *0x36b4d(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
    f033:	48 89 c1             	mov    %rax,%rcx
    f036:	48 85 c9             	test   %rcx,%rcx
    f039:	0f 84 74 12 00 00    	je     102b3 <addr2line::ResUnit<R>::parse_lines+0x3183>
    f03f:	48 89 8c 24 70 01 00 	mov    %rcx,0x170(%rsp)
    f046:	00 
    f047:	48 c1 eb 05          	shr    $0x5,%rbx
    f04b:	48 89 9c 24 78 01 00 	mov    %rbx,0x178(%rsp)
    f052:	00 
    f053:	4c 89 f3             	mov    %r14,%rbx
    f056:	48 89 e8             	mov    %rbp,%rax
    f059:	48 c1 e0 05          	shl    $0x5,%rax
    f05d:	f3 0f 6f 84 24 10 01 	movdqu 0x110(%rsp),%xmm0
    f064:	00 00 
    f066:	0f 10 8c 24 20 01 00 	movups 0x120(%rsp),%xmm1
    f06d:	00 
    f06e:	0f 11 4c 01 10       	movups %xmm1,0x10(%rcx,%rax,1)
    f073:	f3 0f 7f 04 01       	movdqu %xmm0,(%rcx,%rax,1)
    f078:	48 83 c5 01          	add    $0x1,%rbp
    f07c:	48 89 ac 24 80 01 00 	mov    %rbp,0x180(%rsp)
    f083:	00 
    f084:	8a 84 24 f2 02 00 00 	mov    0x2f2(%rsp),%al
    f08b:	84 c0                	test   %al,%al
    f08d:	0f 85 4d e8 ff ff    	jne    d8e0 <addr2line::ResUnit<R>::parse_lines+0x7b0>
    f093:	e9 98 e8 ff ff       	jmpq   d930 <addr2line::ResUnit<R>::parse_lines+0x800>
    f098:	84 d2                	test   %dl,%dl
    f09a:	0f 85 84 14 00 00    	jne    10524 <addr2line::ResUnit<R>::parse_lines+0x33f4>
    f0a0:	48 85 c0             	test   %rax,%rax
    f0a3:	74 0f                	je     f0b4 <addr2line::ResUnit<R>::parse_lines+0x1f84>
    f0a5:	48 89 c7             	mov    %rax,%rdi
    f0a8:	48 89 ce             	mov    %rcx,%rsi
    f0ab:	ff 15 cf 6a 03 00    	callq  *0x36acf(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
    f0b1:	48 89 c1             	mov    %rax,%rcx
    f0b4:	48 85 c9             	test   %rcx,%rcx
    f0b7:	0f 84 97 14 00 00    	je     10554 <addr2line::ResUnit<R>::parse_lines+0x3424>
    f0bd:	48 89 8c 24 88 01 00 	mov    %rcx,0x188(%rsp)
    f0c4:	00 
    f0c5:	48 8b 84 24 e0 00 00 	mov    0xe0(%rsp),%rax
    f0cc:	00 
    f0cd:	48 ba ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rdx
    f0d4:	aa aa aa 
    f0d7:	48 f7 e2             	mul    %rdx
    f0da:	48 c1 ea 04          	shr    $0x4,%rdx
    f0de:	48 89 94 24 90 01 00 	mov    %rdx,0x190(%rsp)
    f0e5:	00 
    f0e6:	48 89 cf             	mov    %rcx,%rdi
    f0e9:	4b 8d 04 64          	lea    (%r12,%r12,2),%rax
    f0ed:	4c 89 34 c7          	mov    %r14,(%rdi,%rax,8)
    f0f1:	4c 89 6c c7 08       	mov    %r13,0x8(%rdi,%rax,8)
    f0f6:	89 5c c7 10          	mov    %ebx,0x10(%rdi,%rax,8)
    f0fa:	89 6c c7 14          	mov    %ebp,0x14(%rdi,%rax,8)
    f0fe:	49 83 c4 01          	add    $0x1,%r12
    f102:	4c 89 a4 24 98 01 00 	mov    %r12,0x198(%rsp)
    f109:	00 
    f10a:	4c 8d a4 24 30 02 00 	lea    0x230(%rsp),%r12
    f111:	00 
    f112:	4c 8d ac 24 b8 02 00 	lea    0x2b8(%rsp),%r13
    f119:	00 
    f11a:	4c 89 fb             	mov    %r15,%rbx
    f11d:	8a 84 24 f2 02 00 00 	mov    0x2f2(%rsp),%al
    f124:	84 c0                	test   %al,%al
    f126:	0f 85 b4 e7 ff ff    	jne    d8e0 <addr2line::ResUnit<R>::parse_lines+0x7b0>
    f12c:	e9 ff e7 ff ff       	jmpq   d930 <addr2line::ResUnit<R>::parse_lines+0x800>
    f131:	41 b8 06 00 00 00    	mov    $0x6,%r8d
    f137:	31 d2                	xor    %edx,%edx
    f139:	eb 0d                	jmp    f148 <addr2line::ResUnit<R>::parse_lines+0x2018>
    f13b:	4c 01 ca             	add    %r9,%rdx
    f13e:	48 83 c2 03          	add    $0x3,%rdx
    f142:	41 b8 13 00 00 00    	mov    $0x13,%r8d
    f148:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    f14d:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    f152:	49 89 d2             	mov    %rdx,%r10
    f155:	e9 10 fc ff ff       	jmpq   ed6a <addr2line::ResUnit<R>::parse_lines+0x1c3a>
    f15a:	4d 8d 14 29          	lea    (%r9,%rbp,1),%r10
    f15e:	49 83 c2 03          	add    $0x3,%r10
    f162:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    f167:	48 c7 44 24 08 13 00 	movq   $0x13,0x8(%rsp)
    f16e:	00 00 
    f170:	eb 65                	jmp    f1d7 <addr2line::ResUnit<R>::parse_lines+0x20a7>
    f172:	31 d2                	xor    %edx,%edx
    f174:	f7 f6                	div    %esi
    f176:	48 0f af c1          	imul   %rcx,%rax
    f17a:	48 01 84 24 b8 02 00 	add    %rax,0x2b8(%rsp)
    f181:	00 
    f182:	48 89 94 24 c0 02 00 	mov    %rdx,0x2c0(%rsp)
    f189:	00 
    f18a:	31 f6                	xor    %esi,%esi
    f18c:	4c 89 eb             	mov    %r13,%rbx
    f18f:	48 8b 84 24 08 01 00 	mov    0x108(%rsp),%rax
    f196:	00 
    f197:	48 8b 8c 24 a0 01 00 	mov    0x1a0(%rsp),%rcx
    f19e:	00 
    f19f:	48 8b 94 24 f8 00 00 	mov    0xf8(%rsp),%rdx
    f1a6:	00 
    f1a7:	4c 8d 84 24 c0 01 00 	lea    0x1c0(%rsp),%r8
    f1ae:	00 
    f1af:	e9 dd fb ff ff       	jmpq   ed91 <addr2line::ResUnit<R>::parse_lines+0x1c61>
    f1b4:	41 b8 07 00 00 00    	mov    $0x7,%r8d
    f1ba:	e9 b7 fa ff ff       	jmpq   ec76 <addr2line::ResUnit<R>::parse_lines+0x1b46>
    f1bf:	4d 8d 14 29          	lea    (%r9,%rbp,1),%r10
    f1c3:	49 83 c2 02          	add    $0x2,%r10
    f1c7:	31 c0                	xor    %eax,%eax
    f1c9:	48 83 c8 13          	or     $0x13,%rax
    f1cd:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    f1d2:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    f1d7:	41 b8 13 00 00 00    	mov    $0x13,%r8d
    f1dd:	e9 88 fb ff ff       	jmpq   ed6a <addr2line::ResUnit<R>::parse_lines+0x1c3a>
    f1e2:	49 81 e0 00 ff ff ff 	and    $0xffffffffffffff00,%r8
    f1e9:	49 83 c8 06          	or     $0x6,%r8
    f1ed:	eb 09                	jmp    f1f8 <addr2line::ResUnit<R>::parse_lines+0x20c8>
    f1ef:	4d 89 de             	mov    %r11,%r14
    f1f2:	41 b8 13 00 00 00    	mov    $0x13,%r8d
    f1f8:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    f1fd:	4c 89 74 24 10       	mov    %r14,0x10(%rsp)
    f202:	4c 89 f2             	mov    %r14,%rdx
    f205:	4c 0f a4 c2 38       	shld   $0x38,%r8,%rdx
    f20a:	4c 89 f1             	mov    %r14,%rcx
    f20d:	4c 0f a4 c1 30       	shld   $0x30,%r8,%rcx
    f212:	4c 89 c0             	mov    %r8,%rax
    f215:	4c 0f ac f0 20       	shrd   $0x20,%r14,%rax
    f21a:	4d 89 f2             	mov    %r14,%r10
    f21d:	e9 4e fb ff ff       	jmpq   ed70 <addr2line::ResUnit<R>::parse_lines+0x1c40>
    f222:	4c 89 74 24 10       	mov    %r14,0x10(%rsp)
    f227:	48 c7 44 24 08 13 00 	movq   $0x13,0x8(%rsp)
    f22e:	00 00 
    f230:	41 b8 13 00 00 00    	mov    $0x13,%r8d
    f236:	4d 89 f2             	mov    %r14,%r10
    f239:	e9 2c fb ff ff       	jmpq   ed6a <addr2line::ResUnit<R>::parse_lines+0x1c3a>
    f23e:	49 c1 e0 08          	shl    $0x8,%r8
    f242:	49 83 c8 17          	or     $0x17,%r8
    f246:	45 31 d2             	xor    %r10d,%r10d
    f249:	eb 0e                	jmp    f259 <addr2line::ResUnit<R>::parse_lines+0x2129>
    f24b:	4d 8d 14 29          	lea    (%r9,%rbp,1),%r10
    f24f:	49 83 c2 03          	add    $0x3,%r10
    f253:	41 b8 13 00 00 00    	mov    $0x13,%r8d
    f259:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    f25e:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    f263:	4c 89 c2             	mov    %r8,%rdx
    f266:	48 c1 ea 08          	shr    $0x8,%rdx
    f26a:	31 c0                	xor    %eax,%eax
    f26c:	31 c9                	xor    %ecx,%ecx
    f26e:	e9 fd fa ff ff       	jmpq   ed70 <addr2line::ResUnit<R>::parse_lines+0x1c40>
    f273:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    f278:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    f27d:	4c 89 d2             	mov    %r10,%rdx
    f280:	4c 0f a4 c2 38       	shld   $0x38,%r8,%rdx
    f285:	4c 89 d1             	mov    %r10,%rcx
    f288:	4c 0f a4 c1 30       	shld   $0x30,%r8,%rcx
    f28d:	4c 89 c0             	mov    %r8,%rax
    f290:	4c 0f ac d0 20       	shrd   $0x20,%r10,%rax
    f295:	e9 d6 fa ff ff       	jmpq   ed70 <addr2line::ResUnit<R>::parse_lines+0x1c40>
    f29a:	48 8b 84 24 70 01 00 	mov    0x170(%rsp),%rax
    f2a1:	00 
    f2a2:	48 89 84 24 e0 00 00 	mov    %rax,0xe0(%rsp)
    f2a9:	00 
    f2aa:	4c 8b a4 24 80 01 00 	mov    0x180(%rsp),%r12
    f2b1:	00 
    f2b2:	49 83 fc 15          	cmp    $0x15,%r12
    f2b6:	0f 83 3b 01 00 00    	jae    f3f7 <addr2line::ResUnit<R>::parse_lines+0x22c7>
    f2bc:	49 83 fc 02          	cmp    $0x2,%r12
    f2c0:	0f 82 9a 08 00 00    	jb     fb60 <addr2line::ResUnit<R>::parse_lines+0x2a30>
    f2c6:	49 8d 7c 24 ff       	lea    -0x1(%r12),%rdi
    f2cb:	4c 89 e3             	mov    %r12,%rbx
    f2ce:	48 c1 e3 05          	shl    $0x5,%rbx
    f2d2:	48 03 9c 24 e0 00 00 	add    0xe0(%rsp),%rbx
    f2d9:	00 
    f2da:	31 f6                	xor    %esi,%esi
    f2dc:	4c 8b 94 24 e0 00 00 	mov    0xe0(%rsp),%r10
    f2e3:	00 
    f2e4:	eb 38                	jmp    f31e <addr2line::ResUnit<R>::parse_lines+0x21ee>
    f2e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    f2ed:	00 00 00 
    f2f0:	4c 89 02             	mov    %r8,(%rdx)
    f2f3:	66 0f 6f 84 24 10 01 	movdqa 0x110(%rsp),%xmm0
    f2fa:	00 00 
    f2fc:	f3 0f 7f 42 08       	movdqu %xmm0,0x8(%rdx)
    f301:	48 8b 84 24 20 01 00 	mov    0x120(%rsp),%rax
    f308:	00 
    f309:	48 89 42 18          	mov    %rax,0x18(%rdx)
    f30d:	48 83 c3 e0          	add    $0xffffffffffffffe0,%rbx
    f311:	48 83 c6 01          	add    $0x1,%rsi
    f315:	48 85 ff             	test   %rdi,%rdi
    f318:	0f 84 42 08 00 00    	je     fb60 <addr2line::ResUnit<R>::parse_lines+0x2a30>
    f31e:	48 89 fa             	mov    %rdi,%rdx
    f321:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
    f325:	4c 89 e5             	mov    %r12,%rbp
    f328:	48 29 fd             	sub    %rdi,%rbp
    f32b:	0f 82 fe 11 00 00    	jb     1052f <addr2line::ResUnit<R>::parse_lines+0x33ff>
    f331:	48 83 fd 02          	cmp    $0x2,%rbp
    f335:	72 d6                	jb     f30d <addr2line::ResUnit<R>::parse_lines+0x21dd>
    f337:	48 89 f9             	mov    %rdi,%rcx
    f33a:	48 c1 e1 05          	shl    $0x5,%rcx
    f33e:	48 8b 84 24 e0 00 00 	mov    0xe0(%rsp),%rax
    f345:	00 
    f346:	4c 8d 0c 08          	lea    (%rax,%rcx,1),%r9
    f34a:	48 c1 e2 05          	shl    $0x5,%rdx
    f34e:	4d 8b 01             	mov    (%r9),%r8
    f351:	4c 39 04 10          	cmp    %r8,(%rax,%rdx,1)
    f355:	73 b6                	jae    f30d <addr2line::ResUnit<R>::parse_lines+0x21dd>
    f357:	4c 01 d2             	add    %r10,%rdx
    f35a:	49 8b 44 0a 18       	mov    0x18(%r10,%rcx,1),%rax
    f35f:	48 89 84 24 20 01 00 	mov    %rax,0x120(%rsp)
    f366:	00 
    f367:	41 0f 10 44 0a 08    	movups 0x8(%r10,%rcx,1),%xmm0
    f36d:	0f 29 84 24 10 01 00 	movaps %xmm0,0x110(%rsp)
    f374:	00 
    f375:	f3 0f 6f 02          	movdqu (%rdx),%xmm0
    f379:	0f 10 4a 10          	movups 0x10(%rdx),%xmm1
    f37d:	41 0f 11 49 10       	movups %xmm1,0x10(%r9)
    f382:	f3 41 0f 7f 01       	movdqu %xmm0,(%r9)
    f387:	48 83 fd 03          	cmp    $0x3,%rbp
    f38b:	0f 82 5f ff ff ff    	jb     f2f0 <addr2line::ResUnit<R>::parse_lines+0x21c0>
    f391:	48 89 f1             	mov    %rsi,%rcx
    f394:	48 89 d8             	mov    %rbx,%rax
    f397:	4d 39 41 40          	cmp    %r8,0x40(%r9)
    f39b:	0f 83 4f ff ff ff    	jae    f2f0 <addr2line::ResUnit<R>::parse_lines+0x21c0>
    f3a1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    f3a8:	00 00 00 
    f3ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f3b0:	48 89 c2             	mov    %rax,%rdx
    f3b3:	f3 0f 6f 00          	movdqu (%rax),%xmm0
    f3b7:	0f 10 48 10          	movups 0x10(%rax),%xmm1
    f3bb:	0f 11 48 f0          	movups %xmm1,-0x10(%rax)
    f3bf:	f3 0f 7f 40 e0       	movdqu %xmm0,-0x20(%rax)
    f3c4:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
    f3c8:	0f 84 22 ff ff ff    	je     f2f0 <addr2line::ResUnit<R>::parse_lines+0x21c0>
    f3ce:	48 8d 42 20          	lea    0x20(%rdx),%rax
    f3d2:	4c 39 42 20          	cmp    %r8,0x20(%rdx)
    f3d6:	72 d8                	jb     f3b0 <addr2line::ResUnit<R>::parse_lines+0x2280>
    f3d8:	e9 13 ff ff ff       	jmpq   f2f0 <addr2line::ResUnit<R>::parse_lines+0x21c0>
    f3dd:	48 89 d8             	mov    %rbx,%rax
    f3e0:	48 85 c0             	test   %rax,%rax
    f3e3:	0f 85 ce e0 ff ff    	jne    d4b7 <addr2line::ResUnit<R>::parse_lines+0x387>
    f3e9:	48 89 ef             	mov    %rbp,%rdi
    f3ec:	48 89 de             	mov    %rbx,%rsi
    f3ef:	ff 15 2b 67 03 00    	callq  *0x3672b(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
    f3f5:	0f 0b                	ud2    
    f3f7:	4c 89 e0             	mov    %r12,%rax
    f3fa:	48 d1 e8             	shr    %rax
    f3fd:	b9 20 00 00 00       	mov    $0x20,%ecx
    f402:	31 db                	xor    %ebx,%ebx
    f404:	48 f7 e1             	mul    %rcx
    f407:	48 89 c7             	mov    %rax,%rdi
    f40a:	0f 91 c0             	setno  %al
    f40d:	0f 80 16 12 00 00    	jo     10629 <addr2line::ResUnit<R>::parse_lines+0x34f9>
    f413:	88 c3                	mov    %al,%bl
    f415:	48 c1 e3 03          	shl    $0x3,%rbx
    f419:	48 85 ff             	test   %rdi,%rdi
    f41c:	48 89 bc 24 b8 01 00 	mov    %rdi,0x1b8(%rsp)
    f423:	00 
    f424:	74 0b                	je     f431 <addr2line::ResUnit<R>::parse_lines+0x2301>
    f426:	48 89 de             	mov    %rbx,%rsi
    f429:	ff 15 51 67 03 00    	callq  *0x36751(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
    f42f:	eb 03                	jmp    f434 <addr2line::ResUnit<R>::parse_lines+0x2304>
    f431:	48 89 d8             	mov    %rbx,%rax
    f434:	48 85 c0             	test   %rax,%rax
    f437:	0f 84 f4 11 00 00    	je     10631 <addr2line::ResUnit<R>::parse_lines+0x3501>
    f43d:	48 8b 8c 24 b8 01 00 	mov    0x1b8(%rsp),%rcx
    f444:	00 
    f445:	48 c1 e9 05          	shr    $0x5,%rcx
    f449:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    f44e:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
    f453:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
    f45a:	00 00 
    f45c:	48 c7 44 24 50 08 00 	movq   $0x8,0x50(%rsp)
    f463:	00 00 
    f465:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f469:	f3 0f 7f 44 24 58    	movdqu %xmm0,0x58(%rsp)
    f46f:	48 8b 8c 24 e0 00 00 	mov    0xe0(%rsp),%rcx
    f476:	00 
    f477:	48 8d 51 a0          	lea    -0x60(%rcx),%rdx
    f47b:	48 89 94 24 70 03 00 	mov    %rdx,0x370(%rsp)
    f482:	00 
    f483:	48 8d 51 e0          	lea    -0x20(%rcx),%rdx
    f487:	48 89 94 24 18 03 00 	mov    %rdx,0x318(%rsp)
    f48e:	00 
    f48f:	48 8d 51 c0          	lea    -0x40(%rcx),%rdx
    f493:	48 89 94 24 68 03 00 	mov    %rdx,0x368(%rsp)
    f49a:	00 
    f49b:	48 8d 49 20          	lea    0x20(%rcx),%rcx
    f49f:	48 89 8c 24 60 03 00 	mov    %rcx,0x360(%rsp)
    f4a6:	00 
    f4a7:	4c 89 e6             	mov    %r12,%rsi
    f4aa:	48 89 84 24 60 01 00 	mov    %rax,0x160(%rsp)
    f4b1:	00 
    f4b2:	4c 89 a4 24 20 03 00 	mov    %r12,0x320(%rsp)
    f4b9:	00 
    f4ba:	e9 12 00 00 00       	jmpq   f4d1 <addr2line::ResUnit<R>::parse_lines+0x23a1>
    f4bf:	90                   	nop
    f4c0:	48 8b b4 24 80 03 00 	mov    0x380(%rsp),%rsi
    f4c7:	00 
    f4c8:	48 85 f6             	test   %rsi,%rsi
    f4cb:	0f 84 4f 06 00 00    	je     fb20 <addr2line::ResUnit<R>::parse_lines+0x29f0>
    f4d1:	49 89 f0             	mov    %rsi,%r8
    f4d4:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
    f4d8:	0f 84 02 01 00 00    	je     f5e0 <addr2line::ResUnit<R>::parse_lines+0x24b0>
    f4de:	4c 8d 4e fe          	lea    -0x2(%rsi),%r9
    f4e2:	4c 89 c1             	mov    %r8,%rcx
    f4e5:	48 c1 e1 05          	shl    $0x5,%rcx
    f4e9:	4c 89 c8             	mov    %r9,%rax
    f4ec:	48 c1 e0 05          	shl    $0x5,%rax
    f4f0:	48 8b 94 24 e0 00 00 	mov    0xe0(%rsp),%rdx
    f4f7:	00 
    f4f8:	4c 8b 34 02          	mov    (%rdx,%rax,1),%r14
    f4fc:	4c 39 34 0a          	cmp    %r14,(%rdx,%rcx,1)
    f500:	0f 83 ea 00 00 00    	jae    f5f0 <addr2line::ResUnit<R>::parse_lines+0x24c0>
    f506:	48 89 f1             	mov    %rsi,%rcx
    f509:	48 c1 e1 05          	shl    $0x5,%rcx
    f50d:	48 8b 84 24 68 03 00 	mov    0x368(%rsp),%rax
    f514:	00 
    f515:	4c 8d 14 08          	lea    (%rax,%rcx,1),%r10
    f519:	ba 02 00 00 00       	mov    $0x2,%edx
    f51e:	66 90                	xchg   %ax,%ax
    f520:	4c 89 cf             	mov    %r9,%rdi
    f523:	48 89 d5             	mov    %rdx,%rbp
    f526:	4c 89 d3             	mov    %r10,%rbx
    f529:	4d 85 c9             	test   %r9,%r9
    f52c:	74 27                	je     f555 <addr2line::ResUnit<R>::parse_lines+0x2425>
    f52e:	4c 8d 4f ff          	lea    -0x1(%rdi),%r9
    f532:	4c 89 ca             	mov    %r9,%rdx
    f535:	48 c1 e2 05          	shl    $0x5,%rdx
    f539:	48 8b 84 24 e0 00 00 	mov    0xe0(%rsp),%rax
    f540:	00 
    f541:	4c 8b 1c 10          	mov    (%rax,%rdx,1),%r11
    f545:	48 8d 55 01          	lea    0x1(%rbp),%rdx
    f549:	4c 8d 53 e0          	lea    -0x20(%rbx),%r10
    f54d:	4d 39 de             	cmp    %r11,%r14
    f550:	4d 89 de             	mov    %r11,%r14
    f553:	72 cb                	jb     f520 <addr2line::ResUnit<R>::parse_lines+0x23f0>
    f555:	48 89 f2             	mov    %rsi,%rdx
    f558:	48 29 fa             	sub    %rdi,%rdx
    f55b:	0f 82 18 10 00 00    	jb     10579 <addr2line::ResUnit<R>::parse_lines+0x3449>
    f561:	4c 39 e6             	cmp    %r12,%rsi
    f564:	0f 87 21 10 00 00    	ja     1058b <addr2line::ResUnit<R>::parse_lines+0x345b>
    f56a:	48 f7 c2 fe ff ff ff 	test   $0xfffffffffffffffe,%rdx
    f571:	74 59                	je     f5cc <addr2line::ResUnit<R>::parse_lines+0x249c>
    f573:	48 d1 ed             	shr    %rbp
    f576:	48 03 8c 24 18 03 00 	add    0x318(%rsp),%rcx
    f57d:	00 
    f57e:	66 90                	xchg   %ax,%ax
    f580:	0f 10 03             	movups (%rbx),%xmm0
    f583:	0f 10 4b 10          	movups 0x10(%rbx),%xmm1
    f587:	0f 29 8c 24 20 01 00 	movaps %xmm1,0x120(%rsp)
    f58e:	00 
    f58f:	0f 29 84 24 10 01 00 	movaps %xmm0,0x110(%rsp)
    f596:	00 
    f597:	0f 10 01             	movups (%rcx),%xmm0
    f59a:	0f 10 49 10          	movups 0x10(%rcx),%xmm1
    f59e:	0f 11 03             	movups %xmm0,(%rbx)
    f5a1:	0f 11 4b 10          	movups %xmm1,0x10(%rbx)
    f5a5:	66 0f 6f 84 24 10 01 	movdqa 0x110(%rsp),%xmm0
    f5ac:	00 00 
    f5ae:	0f 28 8c 24 20 01 00 	movaps 0x120(%rsp),%xmm1
    f5b5:	00 
    f5b6:	0f 11 49 10          	movups %xmm1,0x10(%rcx)
    f5ba:	f3 0f 7f 01          	movdqu %xmm0,(%rcx)
    f5be:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    f5c2:	48 83 c3 20          	add    $0x20,%rbx
    f5c6:	48 83 c5 ff          	add    $0xffffffffffffffff,%rbp
    f5ca:	75 b4                	jne    f580 <addr2line::ResUnit<R>::parse_lines+0x2450>
    f5cc:	48 83 fa 09          	cmp    $0x9,%rdx
    f5d0:	0f 86 6a 00 00 00    	jbe    f640 <addr2line::ResUnit<R>::parse_lines+0x2510>
    f5d6:	e9 a5 01 00 00       	jmpq   f780 <addr2line::ResUnit<R>::parse_lines+0x2650>
    f5db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f5e0:	ba 01 00 00 00       	mov    $0x1,%edx
    f5e5:	31 c9                	xor    %ecx,%ecx
    f5e7:	e9 a4 01 00 00       	jmpq   f790 <addr2line::ResUnit<R>::parse_lines+0x2660>
    f5ec:	0f 1f 40 00          	nopl   0x0(%rax)
    f5f0:	48 89 f1             	mov    %rsi,%rcx
    f5f3:	48 c1 e1 05          	shl    $0x5,%rcx
    f5f7:	48 03 8c 24 70 03 00 	add    0x370(%rsp),%rcx
    f5fe:	00 
    f5ff:	48 8d 7e fe          	lea    -0x2(%rsi),%rdi
    f603:	31 d2                	xor    %edx,%edx
    f605:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    f60c:	00 00 00 
    f60f:	90                   	nop
    f610:	48 39 d7             	cmp    %rdx,%rdi
    f613:	0f 84 6c 01 00 00    	je     f785 <addr2line::ResUnit<R>::parse_lines+0x2655>
    f619:	48 8b 29             	mov    (%rcx),%rbp
    f61c:	48 83 c2 01          	add    $0x1,%rdx
    f620:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    f624:	49 39 ee             	cmp    %rbp,%r14
    f627:	49 89 ee             	mov    %rbp,%r14
    f62a:	73 e4                	jae    f610 <addr2line::ResUnit<R>::parse_lines+0x24e0>
    f62c:	4c 89 c7             	mov    %r8,%rdi
    f62f:	48 29 d7             	sub    %rdx,%rdi
    f632:	48 83 c2 01          	add    $0x1,%rdx
    f636:	48 83 fa 09          	cmp    $0x9,%rdx
    f63a:	0f 87 40 01 00 00    	ja     f780 <addr2line::ResUnit<R>::parse_lines+0x2650>
    f640:	48 85 ff             	test   %rdi,%rdi
    f643:	0f 84 37 01 00 00    	je     f780 <addr2line::ResUnit<R>::parse_lines+0x2650>
    f649:	4c 39 e6             	cmp    %r12,%rsi
    f64c:	0f 87 a4 0f 00 00    	ja     105f6 <addr2line::ResUnit<R>::parse_lines+0x34c6>
    f652:	48 89 fb             	mov    %rdi,%rbx
    f655:	48 c1 e3 05          	shl    $0x5,%rbx
    f659:	48 03 9c 24 60 03 00 	add    0x360(%rsp),%rbx
    f660:	00 
    f661:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    f668:	00 00 00 
    f66b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f670:	48 8d 4f ff          	lea    -0x1(%rdi),%rcx
    f674:	48 89 f2             	mov    %rsi,%rdx
    f677:	48 29 ca             	sub    %rcx,%rdx
    f67a:	0f 82 82 0f 00 00    	jb     10602 <addr2line::ResUnit<R>::parse_lines+0x34d2>
    f680:	48 83 fa 02          	cmp    $0x2,%rdx
    f684:	0f 82 d7 00 00 00    	jb     f761 <addr2line::ResUnit<R>::parse_lines+0x2631>
    f68a:	48 89 c8             	mov    %rcx,%rax
    f68d:	48 c1 e0 05          	shl    $0x5,%rax
    f691:	49 89 ce             	mov    %rcx,%r14
    f694:	48 8b 8c 24 e0 00 00 	mov    0xe0(%rsp),%rcx
    f69b:	00 
    f69c:	4c 8d 14 01          	lea    (%rcx,%rax,1),%r10
    f6a0:	48 89 fd             	mov    %rdi,%rbp
    f6a3:	48 c1 e5 05          	shl    $0x5,%rbp
    f6a7:	4d 8b 0a             	mov    (%r10),%r9
    f6aa:	4c 39 0c 29          	cmp    %r9,(%rcx,%rbp,1)
    f6ae:	4c 89 f1             	mov    %r14,%rcx
    f6b1:	0f 83 aa 00 00 00    	jae    f761 <addr2line::ResUnit<R>::parse_lines+0x2631>
    f6b7:	4c 8b 9c 24 e0 00 00 	mov    0xe0(%rsp),%r11
    f6be:	00 
    f6bf:	4c 01 dd             	add    %r11,%rbp
    f6c2:	49 8b 4c 03 18       	mov    0x18(%r11,%rax,1),%rcx
    f6c7:	48 89 8c 24 20 01 00 	mov    %rcx,0x120(%rsp)
    f6ce:	00 
    f6cf:	41 0f 10 44 03 08    	movups 0x8(%r11,%rax,1),%xmm0
    f6d5:	0f 29 84 24 10 01 00 	movaps %xmm0,0x110(%rsp)
    f6dc:	00 
    f6dd:	f3 0f 6f 45 00       	movdqu 0x0(%rbp),%xmm0
    f6e2:	0f 10 4d 10          	movups 0x10(%rbp),%xmm1
    f6e6:	41 0f 11 4a 10       	movups %xmm1,0x10(%r10)
    f6eb:	f3 41 0f 7f 02       	movdqu %xmm0,(%r10)
    f6f0:	48 83 fa 03          	cmp    $0x3,%rdx
    f6f4:	72 4a                	jb     f740 <addr2line::ResUnit<R>::parse_lines+0x2610>
    f6f6:	4c 89 c0             	mov    %r8,%rax
    f6f9:	48 89 d9             	mov    %rbx,%rcx
    f6fc:	4d 39 4a 40          	cmp    %r9,0x40(%r10)
    f700:	0f 83 3a 00 00 00    	jae    f740 <addr2line::ResUnit<R>::parse_lines+0x2610>
    f706:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    f70d:	00 00 00 
    f710:	48 89 cd             	mov    %rcx,%rbp
    f713:	f3 0f 6f 01          	movdqu (%rcx),%xmm0
    f717:	0f 10 49 10          	movups 0x10(%rcx),%xmm1
    f71b:	0f 11 49 f0          	movups %xmm1,-0x10(%rcx)
    f71f:	f3 0f 7f 41 e0       	movdqu %xmm0,-0x20(%rcx)
    f724:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    f728:	48 39 c7             	cmp    %rax,%rdi
    f72b:	74 13                	je     f740 <addr2line::ResUnit<R>::parse_lines+0x2610>
    f72d:	48 8d 4d 20          	lea    0x20(%rbp),%rcx
    f731:	4c 39 4d 20          	cmp    %r9,0x20(%rbp)
    f735:	0f 82 d5 ff ff ff    	jb     f710 <addr2line::ResUnit<R>::parse_lines+0x25e0>
    f73b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f740:	4c 89 4d 00          	mov    %r9,0x0(%rbp)
    f744:	66 0f 6f 84 24 10 01 	movdqa 0x110(%rsp),%xmm0
    f74b:	00 00 
    f74d:	f3 0f 7f 45 08       	movdqu %xmm0,0x8(%rbp)
    f752:	48 8b 84 24 20 01 00 	mov    0x120(%rsp),%rax
    f759:	00 
    f75a:	48 89 45 18          	mov    %rax,0x18(%rbp)
    f75e:	4c 89 f1             	mov    %r14,%rcx
    f761:	48 85 c9             	test   %rcx,%rcx
    f764:	0f 84 26 00 00 00    	je     f790 <addr2line::ResUnit<R>::parse_lines+0x2660>
    f76a:	48 83 c3 e0          	add    $0xffffffffffffffe0,%rbx
    f76e:	48 89 cf             	mov    %rcx,%rdi
    f771:	48 83 fa 0a          	cmp    $0xa,%rdx
    f775:	0f 82 f5 fe ff ff    	jb     f670 <addr2line::ResUnit<R>::parse_lines+0x2540>
    f77b:	e9 10 00 00 00       	jmpq   f790 <addr2line::ResUnit<R>::parse_lines+0x2660>
    f780:	48 89 f9             	mov    %rdi,%rcx
    f783:	eb 0b                	jmp    f790 <addr2line::ResUnit<R>::parse_lines+0x2660>
    f785:	31 c9                	xor    %ecx,%ecx
    f787:	48 89 f2             	mov    %rsi,%rdx
    f78a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f790:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
    f795:	48 89 8c 24 80 03 00 	mov    %rcx,0x380(%rsp)
    f79c:	00 
    f79d:	48 89 ce             	mov    %rcx,%rsi
    f7a0:	e8 1b 9d ff ff       	callq  94c0 <alloc::vec::Vec<T>::push>
    f7a5:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    f7aa:	48 83 f8 02          	cmp    $0x2,%rax
    f7ae:	48 8b 9c 24 60 01 00 	mov    0x160(%rsp),%rbx
    f7b5:	00 
    f7b6:	0f 82 04 fd ff ff    	jb     f4c0 <addr2line::ResUnit<R>::parse_lines+0x2390>
    f7bc:	4c 8b 74 24 50       	mov    0x50(%rsp),%r14
    f7c1:	4c 89 b4 24 88 03 00 	mov    %r14,0x388(%rsp)
    f7c8:	00 
    f7c9:	e9 9c 00 00 00       	jmpq   f86a <addr2line::ResUnit<R>::parse_lines+0x273a>
    f7ce:	66 90                	xchg   %ax,%ax
    f7d0:	49 89 cc             	mov    %rcx,%r12
    f7d3:	48 89 ef             	mov    %rbp,%rdi
    f7d6:	48 89 de             	mov    %rbx,%rsi
    f7d9:	49 29 f6             	sub    %rsi,%r14
    f7dc:	49 83 e6 e0          	and    $0xffffffffffffffe0,%r14
    f7e0:	4c 89 f2             	mov    %r14,%rdx
    f7e3:	ff 15 0f 65 03 00    	callq  *0x3650f(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
    f7e9:	48 8b 8c 24 30 03 00 	mov    0x330(%rsp),%rcx
    f7f0:	00 
    f7f1:	4c 01 e1             	add    %r12,%rcx
    f7f4:	48 8b 84 24 00 01 00 	mov    0x100(%rsp),%rax
    f7fb:	00 
    f7fc:	48 8b 94 24 98 03 00 	mov    0x398(%rsp),%rdx
    f803:	00 
    f804:	48 89 02             	mov    %rax,(%rdx)
    f807:	48 8b 84 24 90 03 00 	mov    0x390(%rsp),%rax
    f80e:	00 
    f80f:	48 89 08             	mov    %rcx,(%rax)
    f812:	4c 8b b4 24 88 03 00 	mov    0x388(%rsp),%r14
    f819:	00 
    f81a:	48 8b 84 24 68 01 00 	mov    0x168(%rsp),%rax
    f821:	00 
    f822:	49 8d 3c 06          	lea    (%r14,%rax,1),%rdi
    f826:	49 8d 34 06          	lea    (%r14,%rax,1),%rsi
    f82a:	48 83 c6 10          	add    $0x10,%rsi
    f82e:	48 8b 94 24 08 01 00 	mov    0x108(%rsp),%rdx
    f835:	00 
    f836:	48 f7 d2             	not    %rdx
    f839:	48 03 94 24 a0 01 00 	add    0x1a0(%rsp),%rdx
    f840:	00 
    f841:	48 c1 e2 04          	shl    $0x4,%rdx
    f845:	ff 15 1d 66 03 00    	callq  *0x3661d(%rip)        # 45e68 <memmove@GLIBC_2.2.5>
    f84b:	48 8b 84 24 f8 00 00 	mov    0xf8(%rsp),%rax
    f852:	00 
    f853:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
    f858:	48 83 f8 01          	cmp    $0x1,%rax
    f85c:	4c 8b a4 24 20 03 00 	mov    0x320(%rsp),%r12
    f863:	00 
    f864:	0f 86 56 fc ff ff    	jbe    f4c0 <addr2line::ResUnit<R>::parse_lines+0x2390>
    f86a:	48 89 c6             	mov    %rax,%rsi
    f86d:	4c 8d 40 ff          	lea    -0x1(%rax),%r8
    f871:	4c 89 c5             	mov    %r8,%rbp
    f874:	48 c1 e5 04          	shl    $0x4,%rbp
    f878:	49 83 3c 2e 00       	cmpq   $0x0,(%r14,%rbp,1)
    f87d:	74 61                	je     f8e0 <addr2line::ResUnit<R>::parse_lines+0x27b0>
    f87f:	48 89 f2             	mov    %rsi,%rdx
    f882:	48 c1 e2 04          	shl    $0x4,%rdx
    f886:	4a 8b 44 32 e8       	mov    -0x18(%rdx,%r14,1),%rax
    f88b:	4d 8b 4c 2e 08       	mov    0x8(%r14,%rbp,1),%r9
    f890:	4c 39 c8             	cmp    %r9,%rax
    f893:	76 4b                	jbe    f8e0 <addr2line::ResUnit<R>::parse_lines+0x27b0>
    f895:	48 83 fe 02          	cmp    $0x2,%rsi
    f899:	0f 86 21 fc ff ff    	jbe    f4c0 <addr2line::ResUnit<R>::parse_lines+0x2390>
    f89f:	48 8d 7e fd          	lea    -0x3(%rsi),%rdi
    f8a3:	48 89 f9             	mov    %rdi,%rcx
    f8a6:	48 c1 e1 04          	shl    $0x4,%rcx
    f8aa:	49 8b 4c 0e 08       	mov    0x8(%r14,%rcx,1),%rcx
    f8af:	49 8d 2c 01          	lea    (%r9,%rax,1),%rbp
    f8b3:	48 39 e9             	cmp    %rbp,%rcx
    f8b6:	76 43                	jbe    f8fb <addr2line::ResUnit<R>::parse_lines+0x27cb>
    f8b8:	48 83 fe 03          	cmp    $0x3,%rsi
    f8bc:	0f 86 fe fb ff ff    	jbe    f4c0 <addr2line::ResUnit<R>::parse_lines+0x2390>
    f8c2:	48 01 c8             	add    %rcx,%rax
    f8c5:	4a 39 44 32 c8       	cmp    %rax,-0x38(%rdx,%r14,1)
    f8ca:	0f 86 2b 00 00 00    	jbe    f8fb <addr2line::ResUnit<R>::parse_lines+0x27cb>
    f8d0:	e9 eb fb ff ff       	jmpq   f4c0 <addr2line::ResUnit<R>::parse_lines+0x2390>
    f8d5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    f8dc:	00 00 00 
    f8df:	90                   	nop
    f8e0:	48 83 fe 03          	cmp    $0x3,%rsi
    f8e4:	72 1a                	jb     f900 <addr2line::ResUnit<R>::parse_lines+0x27d0>
    f8e6:	48 8d 7e fd          	lea    -0x3(%rsi),%rdi
    f8ea:	48 89 f8             	mov    %rdi,%rax
    f8ed:	48 c1 e0 04          	shl    $0x4,%rax
    f8f1:	49 8b 4c 06 08       	mov    0x8(%r14,%rax,1),%rcx
    f8f6:	4d 8b 4c 2e 08       	mov    0x8(%r14,%rbp,1),%r9
    f8fb:	4c 39 c9             	cmp    %r9,%rcx
    f8fe:	72 04                	jb     f904 <addr2line::ResUnit<R>::parse_lines+0x27d4>
    f900:	48 8d 7e fe          	lea    -0x2(%rsi),%rdi
    f904:	48 8d 47 01          	lea    0x1(%rdi),%rax
    f908:	48 39 c6             	cmp    %rax,%rsi
    f90b:	0f 86 47 0b 00 00    	jbe    10458 <addr2line::ResUnit<R>::parse_lines+0x3328>
    f911:	48 39 fe             	cmp    %rdi,%rsi
    f914:	0f 86 53 0b 00 00    	jbe    1046d <addr2line::ResUnit<R>::parse_lines+0x333d>
    f91a:	48 89 c1             	mov    %rax,%rcx
    f91d:	48 c1 e1 04          	shl    $0x4,%rcx
    f921:	4d 8b 2c 0e          	mov    (%r14,%rcx,1),%r13
    f925:	48 c1 e7 04          	shl    $0x4,%rdi
    f929:	49 8b 54 3e 08       	mov    0x8(%r14,%rdi,1),%rdx
    f92e:	4d 8b 3c 3e          	mov    (%r14,%rdi,1),%r15
    f932:	49 01 d7             	add    %rdx,%r15
    f935:	4c 89 fb             	mov    %r15,%rbx
    f938:	4c 29 eb             	sub    %r13,%rbx
    f93b:	0f 82 3e 0b 00 00    	jb     1047f <addr2line::ResUnit<R>::parse_lines+0x334f>
    f941:	4d 39 e7             	cmp    %r12,%r15
    f944:	0f 87 4d 0b 00 00    	ja     10497 <addr2line::ResUnit<R>::parse_lines+0x3367>
    f94a:	48 89 94 24 30 03 00 	mov    %rdx,0x330(%rsp)
    f951:	00 
    f952:	48 89 84 24 08 01 00 	mov    %rax,0x108(%rsp)
    f959:	00 
    f95a:	48 89 b4 24 a0 01 00 	mov    %rsi,0x1a0(%rsp)
    f961:	00 
    f962:	4c 89 84 24 f8 00 00 	mov    %r8,0xf8(%rsp)
    f969:	00 
    f96a:	48 89 8c 24 68 01 00 	mov    %rcx,0x168(%rsp)
    f971:	00 
    f972:	49 8b 4c 0e 08       	mov    0x8(%r14,%rcx,1),%rcx
    f977:	49 8d 04 3e          	lea    (%r14,%rdi,1),%rax
    f97b:	48 89 84 24 98 03 00 	mov    %rax,0x398(%rsp)
    f982:	00 
    f983:	49 8d 04 3e          	lea    (%r14,%rdi,1),%rax
    f987:	48 83 c0 08          	add    $0x8,%rax
    f98b:	48 89 84 24 90 03 00 	mov    %rax,0x390(%rsp)
    f992:	00 
    f993:	4c 89 ac 24 00 01 00 	mov    %r13,0x100(%rsp)
    f99a:	00 
    f99b:	49 c1 e5 05          	shl    $0x5,%r13
    f99f:	4c 03 ac 24 e0 00 00 	add    0xe0(%rsp),%r13
    f9a6:	00 
    f9a7:	49 89 ce             	mov    %rcx,%r14
    f9aa:	49 c1 e6 05          	shl    $0x5,%r14
    f9ae:	4b 8d 2c 2e          	lea    (%r14,%r13,1),%rbp
    f9b2:	49 c1 e7 05          	shl    $0x5,%r15
    f9b6:	49 89 dc             	mov    %rbx,%r12
    f9b9:	49 29 cc             	sub    %rcx,%r12
    f9bc:	48 89 8c 24 28 03 00 	mov    %rcx,0x328(%rsp)
    f9c3:	00 
    f9c4:	49 39 cc             	cmp    %rcx,%r12
    f9c7:	0f 83 93 00 00 00    	jae    fa60 <addr2line::ResUnit<R>::parse_lines+0x2930>
    f9cd:	4d 89 e6             	mov    %r12,%r14
    f9d0:	49 c1 e6 05          	shl    $0x5,%r14
    f9d4:	48 8b 9c 24 60 01 00 	mov    0x160(%rsp),%rbx
    f9db:	00 
    f9dc:	48 89 df             	mov    %rbx,%rdi
    f9df:	48 89 ee             	mov    %rbp,%rsi
    f9e2:	4c 89 f2             	mov    %r14,%rdx
    f9e5:	ff 15 0d 63 03 00    	callq  *0x3630d(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
    f9eb:	49 01 de             	add    %rbx,%r14
    f9ee:	48 8b 8c 24 28 03 00 	mov    0x328(%rsp),%rcx
    f9f5:	00 
    f9f6:	48 85 c9             	test   %rcx,%rcx
    f9f9:	0f 8e d1 fd ff ff    	jle    f7d0 <addr2line::ResUnit<R>::parse_lines+0x26a0>
    f9ff:	4d 85 e4             	test   %r12,%r12
    fa02:	0f 8e c8 fd ff ff    	jle    f7d0 <addr2line::ResUnit<R>::parse_lines+0x26a0>
    fa08:	4c 03 bc 24 18 03 00 	add    0x318(%rsp),%r15
    fa0f:	00 
    fa10:	49 8b 46 e0          	mov    -0x20(%r14),%rax
    fa14:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    fa18:	72 16                	jb     fa30 <addr2line::ResUnit<R>::parse_lines+0x2900>
    fa1a:	49 83 c6 e0          	add    $0xffffffffffffffe0,%r14
    fa1e:	4c 89 f0             	mov    %r14,%rax
    fa21:	e9 11 00 00 00       	jmpq   fa37 <addr2line::ResUnit<R>::parse_lines+0x2907>
    fa26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    fa2d:	00 00 00 
    fa30:	48 83 c5 e0          	add    $0xffffffffffffffe0,%rbp
    fa34:	48 89 e8             	mov    %rbp,%rax
    fa37:	f3 0f 6f 00          	movdqu (%rax),%xmm0
    fa3b:	0f 10 48 10          	movups 0x10(%rax),%xmm1
    fa3f:	41 0f 11 4f 10       	movups %xmm1,0x10(%r15)
    fa44:	f3 41 0f 7f 07       	movdqu %xmm0,(%r15)
    fa49:	49 39 ed             	cmp    %rbp,%r13
    fa4c:	0f 83 7e fd ff ff    	jae    f7d0 <addr2line::ResUnit<R>::parse_lines+0x26a0>
    fa52:	49 83 c7 e0          	add    $0xffffffffffffffe0,%r15
    fa56:	49 39 de             	cmp    %rbx,%r14
    fa59:	77 b5                	ja     fa10 <addr2line::ResUnit<R>::parse_lines+0x28e0>
    fa5b:	e9 70 fd ff ff       	jmpq   f7d0 <addr2line::ResUnit<R>::parse_lines+0x26a0>
    fa60:	4c 8b a4 24 60 01 00 	mov    0x160(%rsp),%r12
    fa67:	00 
    fa68:	4c 89 e7             	mov    %r12,%rdi
    fa6b:	4c 89 ee             	mov    %r13,%rsi
    fa6e:	4c 89 f2             	mov    %r14,%rdx
    fa71:	ff 15 81 62 03 00    	callq  *0x36281(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
    fa77:	4d 01 e6             	add    %r12,%r14
    fa7a:	48 8b 84 24 28 03 00 	mov    0x328(%rsp),%rax
    fa81:	00 
    fa82:	48 85 c0             	test   %rax,%rax
    fa85:	0f 8e 82 00 00 00    	jle    fb0d <addr2line::ResUnit<R>::parse_lines+0x29dd>
    fa8b:	49 89 c4             	mov    %rax,%r12
    fa8e:	48 39 c3             	cmp    %rax,%rbx
    fa91:	0f 8e 79 00 00 00    	jle    fb10 <addr2line::ResUnit<R>::parse_lines+0x29e0>
    fa97:	4c 03 bc 24 e0 00 00 	add    0xe0(%rsp),%r15
    fa9e:	00 
    fa9f:	48 8b 9c 24 60 01 00 	mov    0x160(%rsp),%rbx
    faa6:	00 
    faa7:	48 89 de             	mov    %rbx,%rsi
    faaa:	48 89 d8             	mov    %rbx,%rax
    faad:	0f 1f 00             	nopl   (%rax)
    fab0:	48 8b 4d 00          	mov    0x0(%rbp),%rcx
    fab4:	48 3b 08             	cmp    (%rax),%rcx
    fab7:	73 17                	jae    fad0 <addr2line::ResUnit<R>::parse_lines+0x29a0>
    fab9:	48 8d 4d 20          	lea    0x20(%rbp),%rcx
    fabd:	48 89 c2             	mov    %rax,%rdx
    fac0:	48 89 e8             	mov    %rbp,%rax
    fac3:	e9 12 00 00 00       	jmpq   fada <addr2line::ResUnit<R>::parse_lines+0x29aa>
    fac8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    facf:	00 
    fad0:	48 8d 70 20          	lea    0x20(%rax),%rsi
    fad4:	48 89 f2             	mov    %rsi,%rdx
    fad7:	48 89 e9             	mov    %rbp,%rcx
    fada:	49 8d 7d 20          	lea    0x20(%r13),%rdi
    fade:	f3 0f 6f 00          	movdqu (%rax),%xmm0
    fae2:	0f 10 48 10          	movups 0x10(%rax),%xmm1
    fae6:	41 0f 11 4d 10       	movups %xmm1,0x10(%r13)
    faeb:	f3 41 0f 7f 45 00    	movdqu %xmm0,0x0(%r13)
    faf1:	4c 39 f2             	cmp    %r14,%rdx
    faf4:	0f 83 df fc ff ff    	jae    f7d9 <addr2line::ResUnit<R>::parse_lines+0x26a9>
    fafa:	48 89 d0             	mov    %rdx,%rax
    fafd:	49 89 fd             	mov    %rdi,%r13
    fb00:	48 89 cd             	mov    %rcx,%rbp
    fb03:	4c 39 f9             	cmp    %r15,%rcx
    fb06:	72 a8                	jb     fab0 <addr2line::ResUnit<R>::parse_lines+0x2980>
    fb08:	e9 cc fc ff ff       	jmpq   f7d9 <addr2line::ResUnit<R>::parse_lines+0x26a9>
    fb0d:	49 89 c4             	mov    %rax,%r12
    fb10:	4c 89 ef             	mov    %r13,%rdi
    fb13:	48 8b 9c 24 60 01 00 	mov    0x160(%rsp),%rbx
    fb1a:	00 
    fb1b:	e9 b6 fc ff ff       	jmpq   f7d6 <addr2line::ResUnit<R>::parse_lines+0x26a6>
    fb20:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
    fb25:	48 85 f6             	test   %rsi,%rsi
    fb28:	74 1b                	je     fb45 <addr2line::ResUnit<R>::parse_lines+0x2a15>
    fb2a:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
    fb2f:	48 85 ff             	test   %rdi,%rdi
    fb32:	74 11                	je     fb45 <addr2line::ResUnit<R>::parse_lines+0x2a15>
    fb34:	48 c1 e6 04          	shl    $0x4,%rsi
    fb38:	74 0b                	je     fb45 <addr2line::ResUnit<R>::parse_lines+0x2a15>
    fb3a:	ba 08 00 00 00       	mov    $0x8,%edx
    fb3f:	ff 15 b3 60 03 00    	callq  *0x360b3(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    fb45:	48 8b b4 24 b8 01 00 	mov    0x1b8(%rsp),%rsi
    fb4c:	00 
    fb4d:	48 85 f6             	test   %rsi,%rsi
    fb50:	74 0e                	je     fb60 <addr2line::ResUnit<R>::parse_lines+0x2a30>
    fb52:	ba 08 00 00 00       	mov    $0x8,%edx
    fb57:	48 89 df             	mov    %rbx,%rdi
    fb5a:	ff 15 98 60 03 00    	callq  *0x36098(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    fb60:	48 c7 84 24 c8 00 00 	movq   $0x8,0xc8(%rsp)
    fb67:	00 08 00 00 00 
    fb6c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fb70:	f3 0f 7f 84 24 d0 00 	movdqu %xmm0,0xd0(%rsp)
    fb77:	00 00 
    fb79:	41 bd 08 00 00 00    	mov    $0x8,%r13d
    fb7f:	49 c7 c7 c0 ff ff ff 	mov    $0xffffffffffffffc0,%r15
    fb86:	31 c9                	xor    %ecx,%ecx
    fb88:	45 31 e4             	xor    %r12d,%r12d
    fb8b:	45 31 f6             	xor    %r14d,%r14d
    fb8e:	48 8b 9c 24 f0 00 00 	mov    0xf0(%rsp),%rbx
    fb95:	00 
    fb96:	eb 43                	jmp    fbdb <addr2line::ResUnit<R>::parse_lines+0x2aab>
    fb98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    fb9f:	00 
    fba0:	48 8b 9c 24 f0 00 00 	mov    0xf0(%rsp),%rbx
    fba7:	00 
    fba8:	48 8b 8c 24 e0 00 00 	mov    0xe0(%rsp),%rcx
    fbaf:	00 
    fbb0:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    fbb5:	49 89 44 0d 10       	mov    %rax,0x10(%r13,%rcx,1)
    fbba:	f3 0f 6f 44 24 08    	movdqu 0x8(%rsp),%xmm0
    fbc0:	f3 41 0f 7f 44 0d 00 	movdqu %xmm0,0x0(%r13,%rcx,1)
    fbc7:	49 83 c6 01          	add    $0x1,%r14
    fbcb:	4c 89 b4 24 d8 00 00 	mov    %r14,0xd8(%rsp)
    fbd2:	00 
    fbd3:	48 83 c1 18          	add    $0x18,%rcx
    fbd7:	49 83 c7 40          	add    $0x40,%r15
    fbdb:	66 83 bb a2 01 00 00 	cmpw   $0x5,0x1a2(%rbx)
    fbe2:	05 
    fbe3:	4c 89 b4 24 f8 00 00 	mov    %r14,0xf8(%rsp)
    fbea:	00 
    fbeb:	48 89 8c 24 e0 00 00 	mov    %rcx,0xe0(%rsp)
    fbf2:	00 
    fbf3:	4c 89 a4 24 a0 01 00 	mov    %r12,0x1a0(%rsp)
    fbfa:	00 
    fbfb:	73 23                	jae    fc20 <addr2line::ResUnit<R>::parse_lines+0x2af0>
    fbfd:	4d 85 f6             	test   %r14,%r14
    fc00:	74 3b                	je     fc3d <addr2line::ResUnit<R>::parse_lines+0x2b0d>
    fc02:	49 8d 46 ff          	lea    -0x1(%r14),%rax
    fc06:	48 39 83 38 01 00 00 	cmp    %rax,0x138(%rbx)
    fc0d:	0f 86 58 06 00 00    	jbe    1026b <addr2line::ResUnit<R>::parse_lines+0x313b>
    fc13:	4c 8b a3 28 01 00 00 	mov    0x128(%rbx),%r12
    fc1a:	4d 01 fc             	add    %r15,%r12
    fc1d:	eb 31                	jmp    fc50 <addr2line::ResUnit<R>::parse_lines+0x2b20>
    fc1f:	90                   	nop
    fc20:	4c 39 b3 38 01 00 00 	cmp    %r14,0x138(%rbx)
    fc27:	0f 86 3e 06 00 00    	jbe    1026b <addr2line::ResUnit<R>::parse_lines+0x313b>
    fc2d:	4d 89 f4             	mov    %r14,%r12
    fc30:	49 c1 e4 06          	shl    $0x6,%r12
    fc34:	4c 03 a3 28 01 00 00 	add    0x128(%rbx),%r12
    fc3b:	eb 13                	jmp    fc50 <addr2line::ResUnit<R>::parse_lines+0x2b20>
    fc3d:	4c 8b a4 24 10 03 00 	mov    0x310(%rsp),%r12
    fc44:	00 
    fc45:	41 83 3c 24 2d       	cmpl   $0x2d,(%r12)
    fc4a:	0f 84 1b 06 00 00    	je     1026b <addr2line::ResUnit<R>::parse_lines+0x313b>
    fc50:	4c 89 ac 24 68 01 00 	mov    %r13,0x168(%rsp)
    fc57:	00 
    fc58:	4c 89 bc 24 08 01 00 	mov    %r15,0x108(%rsp)
    fc5f:	00 
    fc60:	4c 8b ac 24 a0 03 00 	mov    0x3a0(%rsp),%r13
    fc67:	00 
    fc68:	4c 8b b4 24 a8 03 00 	mov    0x3a8(%rsp),%r14
    fc6f:	00 
    fc70:	49 8b b5 80 00 00 00 	mov    0x80(%r13),%rsi
    fc77:	48 85 f6             	test   %rsi,%rsi
    fc7a:	74 74                	je     fcf0 <addr2line::ResUnit<R>::parse_lines+0x2bc0>
    fc7c:	49 8b 95 88 00 00 00 	mov    0x88(%r13),%rdx
    fc83:	48 8d ac 24 10 01 00 	lea    0x110(%rsp),%rbp
    fc8a:	00 
    fc8b:	48 89 ef             	mov    %rbp,%rdi
    fc8e:	ff 15 14 62 03 00    	callq  *0x36214(%rip)        # 45ea8 <_GLOBAL_OFFSET_TABLE_+0x520>
    fc94:	4c 8b bc 24 18 01 00 	mov    0x118(%rsp),%r15
    fc9b:	00 
    fc9c:	f3 0f 6f 84 24 20 01 	movdqu 0x120(%rsp),%xmm0
    fca3:	00 00 
    fca5:	48 83 bc 24 10 01 00 	cmpq   $0x1,0x110(%rsp)
    fcac:	00 01 
    fcae:	0f 85 cc 00 00 00    	jne    fd80 <addr2line::ResUnit<R>::parse_lines+0x2c50>
    fcb4:	4c 89 bc 24 90 00 00 	mov    %r15,0x90(%rsp)
    fcbb:	00 
    fcbc:	f3 0f 7f 84 24 98 00 	movdqu %xmm0,0x98(%rsp)
    fcc3:	00 00 
    fcc5:	49 83 c5 08          	add    $0x8,%r13
    fcc9:	49 8b 44 24 18       	mov    0x18(%r12),%rax
    fcce:	66 83 bb a2 01 00 00 	cmpw   $0x5,0x1a2(%rbx)
    fcd5:	05 
    fcd6:	0f 82 4b 00 00 00    	jb     fd27 <addr2line::ResUnit<R>::parse_lines+0x2bf7>
    fcdc:	0f 1f 40 00          	nopl   0x0(%rax)
    fce0:	48 39 83 08 01 00 00 	cmp    %rax,0x108(%rbx)
    fce7:	77 58                	ja     fd41 <addr2line::ResUnit<R>::parse_lines+0x2c11>
    fce9:	e9 d2 01 00 00       	jmpq   fec0 <addr2line::ResUnit<R>::parse_lines+0x2d90>
    fcee:	66 90                	xchg   %ax,%ax
    fcf0:	48 c7 84 24 90 00 00 	movq   $0x1,0x90(%rsp)
    fcf7:	00 01 00 00 00 
    fcfc:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fd00:	48 8d 84 24 98 00 00 	lea    0x98(%rsp),%rax
    fd07:	00 
    fd08:	f3 0f 7f 00          	movdqu %xmm0,(%rax)
    fd0c:	48 8d ac 24 10 01 00 	lea    0x110(%rsp),%rbp
    fd13:	00 
    fd14:	49 83 c5 08          	add    $0x8,%r13
    fd18:	49 8b 44 24 18       	mov    0x18(%r12),%rax
    fd1d:	66 83 bb a2 01 00 00 	cmpw   $0x5,0x1a2(%rbx)
    fd24:	05 
    fd25:	73 b9                	jae    fce0 <addr2line::ResUnit<R>::parse_lines+0x2bb0>
    fd27:	48 85 c0             	test   %rax,%rax
    fd2a:	0f 84 85 00 00 00    	je     fdb5 <addr2line::ResUnit<R>::parse_lines+0x2c85>
    fd30:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    fd34:	48 39 83 08 01 00 00 	cmp    %rax,0x108(%rbx)
    fd3b:	0f 86 7f 01 00 00    	jbe    fec0 <addr2line::ResUnit<R>::parse_lines+0x2d90>
    fd41:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
    fd45:	48 c1 e6 03          	shl    $0x3,%rsi
    fd49:	48 03 b3 f8 00 00 00 	add    0xf8(%rbx),%rsi
    fd50:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    fd55:	e8 d6 d0 ff ff       	callq  ce30 <<gimli::read::unit::AttributeValue<R,Offset> as core::clone::Clone>::clone>
    fd5a:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    fd5f:	48 83 f9 2d          	cmp    $0x2d,%rcx
    fd63:	0f 84 60 01 00 00    	je     fec9 <addr2line::ResUnit<R>::parse_lines+0x2d99>
    fd69:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
    fd6e:	4c 8b 4c 24 30       	mov    0x30(%rsp),%r9
    fd73:	e9 6c 00 00 00       	jmpq   fde4 <addr2line::ResUnit<R>::parse_lines+0x2cb4>
    fd78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    fd7f:	00 
    fd80:	4c 89 b4 24 00 01 00 	mov    %r14,0x100(%rsp)
    fd87:	00 
    fd88:	66 48 0f 7e c3       	movq   %xmm0,%rbx
    fd8d:	48 85 db             	test   %rbx,%rbx
    fd90:	0f 84 0a 03 00 00    	je     100a0 <addr2line::ResUnit<R>::parse_lines+0x2f70>
    fd96:	be 01 00 00 00       	mov    $0x1,%esi
    fd9b:	48 89 df             	mov    %rbx,%rdi
    fd9e:	ff 15 dc 5d 03 00    	callq  *0x35ddc(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
    fda4:	49 89 c6             	mov    %rax,%r14
    fda7:	48 85 c0             	test   %rax,%rax
    fdaa:	0f 85 f6 02 00 00    	jne    100a6 <addr2line::ResUnit<R>::parse_lines+0x2f76>
    fdb0:	e9 b4 07 00 00       	jmpq   10569 <addr2line::ResUnit<R>::parse_lines+0x3439>
    fdb5:	4c 8b 83 50 01 00 00 	mov    0x150(%rbx),%r8
    fdbc:	4d 85 c0             	test   %r8,%r8
    fdbf:	0f 84 fb 00 00 00    	je     fec0 <addr2line::ResUnit<R>::parse_lines+0x2d90>
    fdc5:	4c 8b 8b 58 01 00 00 	mov    0x158(%rbx),%r9
    fdcc:	48 c7 44 24 20 1f 00 	movq   $0x1f,0x20(%rsp)
    fdd3:	00 00 
    fdd5:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
    fdda:	4c 89 4c 24 30       	mov    %r9,0x30(%rsp)
    fddf:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    fde4:	48 89 ef             	mov    %rbp,%rdi
    fde7:	4c 89 f6             	mov    %r14,%rsi
    fdea:	4c 89 ea             	mov    %r13,%rdx
    fded:	e8 ae c4 ff ff       	callq  c2a0 <gimli::read::dwarf::Dwarf<R>::attr_string>
    fdf2:	4c 8b bc 24 18 01 00 	mov    0x118(%rsp),%r15
    fdf9:	00 
    fdfa:	48 8b 8c 24 20 01 00 	mov    0x120(%rsp),%rcx
    fe01:	00 
    fe02:	48 83 bc 24 10 01 00 	cmpq   $0x1,0x110(%rsp)
    fe09:	00 01 
    fe0b:	0f 84 f0 02 00 00    	je     10101 <addr2line::ResUnit<R>::parse_lines+0x2fd1>
    fe11:	4c 89 b4 24 00 01 00 	mov    %r14,0x100(%rsp)
    fe18:	00 
    fe19:	48 89 ef             	mov    %rbp,%rdi
    fe1c:	4c 89 fe             	mov    %r15,%rsi
    fe1f:	48 89 ca             	mov    %rcx,%rdx
    fe22:	ff 15 80 60 03 00    	callq  *0x36080(%rip)        # 45ea8 <_GLOBAL_OFFSET_TABLE_+0x520>
    fe28:	48 8b 9c 24 10 01 00 	mov    0x110(%rsp),%rbx
    fe2f:	00 
    fe30:	4c 8b b4 24 18 01 00 	mov    0x118(%rsp),%r14
    fe37:	00 
    fe38:	48 8d 84 24 20 01 00 	lea    0x120(%rsp),%rax
    fe3f:	00 
    fe40:	f3 0f 6f 00          	movdqu (%rax),%xmm0
    fe44:	66 0f 7f 84 24 40 03 	movdqa %xmm0,0x340(%rsp)
    fe4b:	00 00 
    fe4d:	4c 89 74 24 58       	mov    %r14,0x58(%rsp)
    fe52:	48 89 5c 24 50       	mov    %rbx,0x50(%rsp)
    fe57:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
    fe5c:	f3 0f 7f 00          	movdqu %xmm0,(%rax)
    fe60:	4c 8b 7c 24 60       	mov    0x60(%rsp),%r15
    fe65:	4c 89 fa             	mov    %r15,%rdx
    fe68:	48 83 fb 01          	cmp    $0x1,%rbx
    fe6c:	75 05                	jne    fe73 <addr2line::ResUnit<R>::parse_lines+0x2d43>
    fe6e:	48 8b 54 24 68       	mov    0x68(%rsp),%rdx
    fe73:	48 8d bc 24 90 00 00 	lea    0x90(%rsp),%rdi
    fe7a:	00 
    fe7b:	4c 89 f6             	mov    %r14,%rsi
    fe7e:	ff 15 8c 5c 03 00    	callq  *0x35c8c(%rip)        # 45b10 <_GLOBAL_OFFSET_TABLE_+0x188>
    fe84:	48 85 db             	test   %rbx,%rbx
    fe87:	74 1b                	je     fea4 <addr2line::ResUnit<R>::parse_lines+0x2d74>
    fe89:	4d 85 f6             	test   %r14,%r14
    fe8c:	74 16                	je     fea4 <addr2line::ResUnit<R>::parse_lines+0x2d74>
    fe8e:	4d 85 ff             	test   %r15,%r15
    fe91:	74 11                	je     fea4 <addr2line::ResUnit<R>::parse_lines+0x2d74>
    fe93:	ba 01 00 00 00       	mov    $0x1,%edx
    fe98:	4c 89 f7             	mov    %r14,%rdi
    fe9b:	4c 89 fe             	mov    %r15,%rsi
    fe9e:	ff 15 54 5d 03 00    	callq  *0x35d54(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    fea4:	48 8d ac 24 10 01 00 	lea    0x110(%rsp),%rbp
    feab:	00 
    feac:	4c 8b b4 24 00 01 00 	mov    0x100(%rsp),%r14
    feb3:	00 
    feb4:	e9 10 00 00 00       	jmpq   fec9 <addr2line::ResUnit<R>::parse_lines+0x2d99>
    feb9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    fec0:	48 c7 44 24 20 2d 00 	movq   $0x2d,0x20(%rsp)
    fec7:	00 00 
    fec9:	48 89 ef             	mov    %rbp,%rdi
    fecc:	4c 89 e6             	mov    %r12,%rsi
    fecf:	e8 5c cf ff ff       	callq  ce30 <<gimli::read::unit::AttributeValue<R,Offset> as core::clone::Clone>::clone>
    fed4:	48 8b 8c 24 10 01 00 	mov    0x110(%rsp),%rcx
    fedb:	00 
    fedc:	4c 8b 84 24 18 01 00 	mov    0x118(%rsp),%r8
    fee3:	00 
    fee4:	4c 8b 8c 24 20 01 00 	mov    0x120(%rsp),%r9
    feeb:	00 
    feec:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    fef1:	4c 89 f6             	mov    %r14,%rsi
    fef4:	4c 89 ea             	mov    %r13,%rdx
    fef7:	e8 a4 c3 ff ff       	callq  c2a0 <gimli::read::dwarf::Dwarf<R>::attr_string>
    fefc:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
    ff01:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
    ff06:	48 83 7c 24 20 01    	cmpq   $0x1,0x20(%rsp)
    ff0c:	0f 84 ef 01 00 00    	je     10101 <addr2line::ResUnit<R>::parse_lines+0x2fd1>
    ff12:	48 89 ef             	mov    %rbp,%rdi
    ff15:	4c 89 fe             	mov    %r15,%rsi
    ff18:	48 89 ca             	mov    %rcx,%rdx
    ff1b:	ff 15 87 5f 03 00    	callq  *0x35f87(%rip)        # 45ea8 <_GLOBAL_OFFSET_TABLE_+0x520>
    ff21:	48 8b ac 24 10 01 00 	mov    0x110(%rsp),%rbp
    ff28:	00 
    ff29:	48 8b 9c 24 18 01 00 	mov    0x118(%rsp),%rbx
    ff30:	00 
    ff31:	48 8d 84 24 20 01 00 	lea    0x120(%rsp),%rax
    ff38:	00 
    ff39:	f3 0f 6f 00          	movdqu (%rax),%xmm0
    ff3d:	66 0f 7f 84 24 40 03 	movdqa %xmm0,0x340(%rsp)
    ff44:	00 00 
    ff46:	48 89 5c 24 58       	mov    %rbx,0x58(%rsp)
    ff4b:	48 89 6c 24 50       	mov    %rbp,0x50(%rsp)
    ff50:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
    ff55:	f3 0f 7f 00          	movdqu %xmm0,(%rax)
    ff59:	4c 8b 74 24 60       	mov    0x60(%rsp),%r14
    ff5e:	4c 89 f2             	mov    %r14,%rdx
    ff61:	48 83 fd 01          	cmp    $0x1,%rbp
    ff65:	4c 8b bc 24 08 01 00 	mov    0x108(%rsp),%r15
    ff6c:	00 
    ff6d:	4c 8b ac 24 68 01 00 	mov    0x168(%rsp),%r13
    ff74:	00 
    ff75:	4c 8b a4 24 a0 01 00 	mov    0x1a0(%rsp),%r12
    ff7c:	00 
    ff7d:	75 05                	jne    ff84 <addr2line::ResUnit<R>::parse_lines+0x2e54>
    ff7f:	48 8b 54 24 68       	mov    0x68(%rsp),%rdx
    ff84:	48 8d bc 24 90 00 00 	lea    0x90(%rsp),%rdi
    ff8b:	00 
    ff8c:	48 89 de             	mov    %rbx,%rsi
    ff8f:	ff 15 7b 5b 03 00    	callq  *0x35b7b(%rip)        # 45b10 <_GLOBAL_OFFSET_TABLE_+0x188>
    ff95:	48 85 ed             	test   %rbp,%rbp
    ff98:	74 1b                	je     ffb5 <addr2line::ResUnit<R>::parse_lines+0x2e85>
    ff9a:	48 85 db             	test   %rbx,%rbx
    ff9d:	74 16                	je     ffb5 <addr2line::ResUnit<R>::parse_lines+0x2e85>
    ff9f:	4d 85 f6             	test   %r14,%r14
    ffa2:	74 11                	je     ffb5 <addr2line::ResUnit<R>::parse_lines+0x2e85>
    ffa4:	ba 01 00 00 00       	mov    $0x1,%edx
    ffa9:	48 89 df             	mov    %rbx,%rdi
    ffac:	4c 89 f6             	mov    %r14,%rsi
    ffaf:	ff 15 43 5c 03 00    	callq  *0x35c43(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
    ffb5:	0f 10 84 24 90 00 00 	movups 0x90(%rsp),%xmm0
    ffbc:	00 
    ffbd:	48 8b 84 24 a0 00 00 	mov    0xa0(%rsp),%rax
    ffc4:	00 
    ffc5:	0f 11 44 24 08       	movups %xmm0,0x8(%rsp)
    ffca:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    ffcf:	4c 8b b4 24 f8 00 00 	mov    0xf8(%rsp),%r14
    ffd6:	00 
    ffd7:	4d 39 e6             	cmp    %r12,%r14
    ffda:	0f 85 c0 fb ff ff    	jne    fba0 <addr2line::ResUnit<R>::parse_lines+0x2a70>
    ffe0:	4c 89 e0             	mov    %r12,%rax
    ffe3:	48 ff c0             	inc    %rax
    ffe6:	48 8b 9c 24 f0 00 00 	mov    0xf0(%rsp),%rbx
    ffed:	00 
    ffee:	0f 84 25 05 00 00    	je     10519 <addr2line::ResUnit<R>::parse_lines+0x33e9>
    fff4:	4b 8d 0c 24          	lea    (%r12,%r12,1),%rcx
    fff8:	48 39 c1             	cmp    %rax,%rcx
    fffb:	48 0f 47 c1          	cmova  %rcx,%rax
    ffff:	48 83 f8 04          	cmp    $0x4,%rax
   10003:	77 05                	ja     1000a <addr2line::ResUnit<R>::parse_lines+0x2eda>
   10005:	b8 04 00 00 00       	mov    $0x4,%eax
   1000a:	31 c9                	xor    %ecx,%ecx
   1000c:	ba 18 00 00 00       	mov    $0x18,%edx
   10011:	48 f7 e2             	mul    %rdx
   10014:	48 89 c5             	mov    %rax,%rbp
   10017:	0f 90 c0             	seto   %al
   1001a:	0f 91 c1             	setno  %cl
   1001d:	48 c1 e1 03          	shl    $0x3,%rcx
   10021:	4d 85 e4             	test   %r12,%r12
   10024:	74 26                	je     1004c <addr2line::ResUnit<R>::parse_lines+0x2f1c>
   10026:	84 c0                	test   %al,%al
   10028:	0f 85 eb 04 00 00    	jne    10519 <addr2line::ResUnit<R>::parse_lines+0x33e9>
   1002e:	49 c1 e4 03          	shl    $0x3,%r12
   10032:	4b 8d 34 64          	lea    (%r12,%r12,2),%rsi
   10036:	48 85 f6             	test   %rsi,%rsi
   10039:	74 19                	je     10054 <addr2line::ResUnit<R>::parse_lines+0x2f24>
   1003b:	4c 89 ef             	mov    %r13,%rdi
   1003e:	48 89 ca             	mov    %rcx,%rdx
   10041:	48 89 e9             	mov    %rbp,%rcx
   10044:	ff 15 2e 5f 03 00    	callq  *0x35f2e(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
   1004a:	eb 19                	jmp    10065 <addr2line::ResUnit<R>::parse_lines+0x2f35>
   1004c:	84 c0                	test   %al,%al
   1004e:	0f 85 c5 04 00 00    	jne    10519 <addr2line::ResUnit<R>::parse_lines+0x33e9>
   10054:	48 85 ed             	test   %rbp,%rbp
   10057:	74 0f                	je     10068 <addr2line::ResUnit<R>::parse_lines+0x2f38>
   10059:	48 89 ef             	mov    %rbp,%rdi
   1005c:	48 89 ce             	mov    %rcx,%rsi
   1005f:	ff 15 1b 5b 03 00    	callq  *0x35b1b(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   10065:	48 89 c1             	mov    %rax,%rcx
   10068:	48 85 c9             	test   %rcx,%rcx
   1006b:	0f 84 d3 04 00 00    	je     10544 <addr2line::ResUnit<R>::parse_lines+0x3414>
   10071:	48 89 8c 24 c8 00 00 	mov    %rcx,0xc8(%rsp)
   10078:	00 
   10079:	48 89 e8             	mov    %rbp,%rax
   1007c:	48 ba ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rdx
   10083:	aa aa aa 
   10086:	48 f7 e2             	mul    %rdx
   10089:	49 89 d4             	mov    %rdx,%r12
   1008c:	49 c1 ec 04          	shr    $0x4,%r12
   10090:	4c 89 a4 24 d0 00 00 	mov    %r12,0xd0(%rsp)
   10097:	00 
   10098:	49 89 cd             	mov    %rcx,%r13
   1009b:	e9 08 fb ff ff       	jmpq   fba8 <addr2line::ResUnit<R>::parse_lines+0x2a78>
   100a0:	41 be 01 00 00 00    	mov    $0x1,%r14d
   100a6:	4c 89 f7             	mov    %r14,%rdi
   100a9:	4c 89 fe             	mov    %r15,%rsi
   100ac:	48 89 da             	mov    %rbx,%rdx
   100af:	ff 15 43 5c 03 00    	callq  *0x35c43(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
   100b5:	4c 89 b4 24 90 00 00 	mov    %r14,0x90(%rsp)
   100bc:	00 
   100bd:	48 89 9c 24 98 00 00 	mov    %rbx,0x98(%rsp)
   100c4:	00 
   100c5:	48 89 9c 24 a0 00 00 	mov    %rbx,0xa0(%rsp)
   100cc:	00 
   100cd:	48 8b 9c 24 f0 00 00 	mov    0xf0(%rsp),%rbx
   100d4:	00 
   100d5:	48 8d ac 24 10 01 00 	lea    0x110(%rsp),%rbp
   100dc:	00 
   100dd:	4c 8b b4 24 00 01 00 	mov    0x100(%rsp),%r14
   100e4:	00 
   100e5:	49 83 c5 08          	add    $0x8,%r13
   100e9:	49 8b 44 24 18       	mov    0x18(%r12),%rax
   100ee:	66 83 bb a2 01 00 00 	cmpw   $0x5,0x1a2(%rbx)
   100f5:	05 
   100f6:	0f 83 e4 fb ff ff    	jae    fce0 <addr2line::ResUnit<R>::parse_lines+0x2bb0>
   100fc:	e9 26 fc ff ff       	jmpq   fd27 <addr2line::ResUnit<R>::parse_lines+0x2bf7>
   10101:	49 89 ce             	mov    %rcx,%r14
   10104:	48 8b bc 24 90 00 00 	mov    0x90(%rsp),%rdi
   1010b:	00 
   1010c:	48 85 ff             	test   %rdi,%rdi
   1010f:	74 18                	je     10129 <addr2line::ResUnit<R>::parse_lines+0x2ff9>
   10111:	48 8b b4 24 98 00 00 	mov    0x98(%rsp),%rsi
   10118:	00 
   10119:	48 85 f6             	test   %rsi,%rsi
   1011c:	74 0b                	je     10129 <addr2line::ResUnit<R>::parse_lines+0x2ff9>
   1011e:	ba 01 00 00 00       	mov    $0x1,%edx
   10123:	ff 15 cf 5a 03 00    	callq  *0x35acf(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   10129:	48 8b ac 24 c8 00 00 	mov    0xc8(%rsp),%rbp
   10130:	00 
   10131:	48 83 bc 24 f8 00 00 	cmpq   $0x0,0xf8(%rsp)
   10138:	00 00 
   1013a:	0f 84 3c 00 00 00    	je     1017c <addr2line::ResUnit<R>::parse_lines+0x304c>
   10140:	48 01 ac 24 e0 00 00 	add    %rbp,0xe0(%rsp)
   10147:	00 
   10148:	48 89 eb             	mov    %rbp,%rbx
   1014b:	e9 0e 00 00 00       	jmpq   1015e <addr2line::ResUnit<R>::parse_lines+0x302e>
   10150:	48 83 c3 18          	add    $0x18,%rbx
   10154:	48 39 9c 24 e0 00 00 	cmp    %rbx,0xe0(%rsp)
   1015b:	00 
   1015c:	74 1e                	je     1017c <addr2line::ResUnit<R>::parse_lines+0x304c>
   1015e:	48 8b 3b             	mov    (%rbx),%rdi
   10161:	48 85 ff             	test   %rdi,%rdi
   10164:	74 ea                	je     10150 <addr2line::ResUnit<R>::parse_lines+0x3020>
   10166:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   1016a:	48 85 f6             	test   %rsi,%rsi
   1016d:	74 e1                	je     10150 <addr2line::ResUnit<R>::parse_lines+0x3020>
   1016f:	ba 01 00 00 00       	mov    $0x1,%edx
   10174:	ff 15 7e 5a 03 00    	callq  *0x35a7e(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   1017a:	eb d4                	jmp    10150 <addr2line::ResUnit<R>::parse_lines+0x3020>
   1017c:	48 8b 84 24 d0 00 00 	mov    0xd0(%rsp),%rax
   10183:	00 
   10184:	48 85 c0             	test   %rax,%rax
   10187:	74 1b                	je     101a4 <addr2line::ResUnit<R>::parse_lines+0x3074>
   10189:	48 c1 e0 03          	shl    $0x3,%rax
   1018d:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
   10191:	48 85 f6             	test   %rsi,%rsi
   10194:	74 0e                	je     101a4 <addr2line::ResUnit<R>::parse_lines+0x3074>
   10196:	ba 08 00 00 00       	mov    $0x8,%edx
   1019b:	48 89 ef             	mov    %rbp,%rdi
   1019e:	ff 15 54 5a 03 00    	callq  *0x35a54(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   101a4:	4c 89 f3             	mov    %r14,%rbx
   101a7:	49 89 dc             	mov    %rbx,%r12
   101aa:	48 8d bc 24 c0 01 00 	lea    0x1c0(%rsp),%rdi
   101b1:	00 
   101b2:	e8 f9 67 ff ff       	callq  69b0 <core::ptr::drop_in_place>
   101b7:	48 8b 84 24 90 01 00 	mov    0x190(%rsp),%rax
   101be:	00 
   101bf:	48 85 c0             	test   %rax,%rax
   101c2:	74 25                	je     101e9 <addr2line::ResUnit<R>::parse_lines+0x30b9>
   101c4:	48 8b bc 24 88 01 00 	mov    0x188(%rsp),%rdi
   101cb:	00 
   101cc:	48 85 ff             	test   %rdi,%rdi
   101cf:	74 18                	je     101e9 <addr2line::ResUnit<R>::parse_lines+0x30b9>
   101d1:	48 c1 e0 03          	shl    $0x3,%rax
   101d5:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
   101d9:	48 85 f6             	test   %rsi,%rsi
   101dc:	74 0b                	je     101e9 <addr2line::ResUnit<R>::parse_lines+0x30b9>
   101de:	ba 08 00 00 00       	mov    $0x8,%edx
   101e3:	ff 15 0f 5a 03 00    	callq  *0x35a0f(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   101e9:	48 8b 9c 24 70 01 00 	mov    0x170(%rsp),%rbx
   101f0:	00 
   101f1:	4c 8b b4 24 80 01 00 	mov    0x180(%rsp),%r14
   101f8:	00 
   101f9:	4d 85 f6             	test   %r14,%r14
   101fc:	74 3f                	je     1023d <addr2line::ResUnit<R>::parse_lines+0x310d>
   101fe:	49 c1 e6 05          	shl    $0x5,%r14
   10202:	31 ed                	xor    %ebp,%ebp
   10204:	eb 13                	jmp    10219 <addr2line::ResUnit<R>::parse_lines+0x30e9>
   10206:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1020d:	00 00 00 
   10210:	48 83 c5 20          	add    $0x20,%rbp
   10214:	49 39 ee             	cmp    %rbp,%r14
   10217:	74 24                	je     1023d <addr2line::ResUnit<R>::parse_lines+0x310d>
   10219:	48 8b 44 2b 18       	mov    0x18(%rbx,%rbp,1),%rax
   1021e:	48 c1 e0 03          	shl    $0x3,%rax
   10222:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
   10226:	48 85 f6             	test   %rsi,%rsi
   10229:	74 e5                	je     10210 <addr2line::ResUnit<R>::parse_lines+0x30e0>
   1022b:	48 8b 7c 2b 10       	mov    0x10(%rbx,%rbp,1),%rdi
   10230:	ba 08 00 00 00       	mov    $0x8,%edx
   10235:	ff 15 bd 59 03 00    	callq  *0x359bd(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   1023b:	eb d3                	jmp    10210 <addr2line::ResUnit<R>::parse_lines+0x30e0>
   1023d:	48 8b b4 24 78 01 00 	mov    0x178(%rsp),%rsi
   10244:	00 
   10245:	48 85 f6             	test   %rsi,%rsi
   10248:	74 14                	je     1025e <addr2line::ResUnit<R>::parse_lines+0x312e>
   1024a:	48 c1 e6 05          	shl    $0x5,%rsi
   1024e:	74 0e                	je     1025e <addr2line::ResUnit<R>::parse_lines+0x312e>
   10250:	ba 08 00 00 00       	mov    $0x8,%edx
   10255:	48 89 df             	mov    %rbx,%rdi
   10258:	ff 15 9a 59 03 00    	callq  *0x3599a(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   1025e:	b8 01 00 00 00       	mov    $0x1,%eax
   10263:	4d 89 e6             	mov    %r12,%r14
   10266:	e9 24 01 00 00       	jmpq   1038f <addr2line::ResUnit<R>::parse_lines+0x325f>
   1026b:	4c 8b bc 24 c8 00 00 	mov    0xc8(%rsp),%r15
   10272:	00 
   10273:	48 8b 84 24 d0 00 00 	mov    0xd0(%rsp),%rax
   1027a:	00 
   1027b:	4c 39 f0             	cmp    %r14,%rax
   1027e:	76 56                	jbe    102d6 <addr2line::ResUnit<R>::parse_lines+0x31a6>
   10280:	4d 85 ff             	test   %r15,%r15
   10283:	74 51                	je     102d6 <addr2line::ResUnit<R>::parse_lines+0x31a6>
   10285:	48 c1 e0 03          	shl    $0x3,%rax
   10289:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
   1028d:	48 8b 9c 24 e0 00 00 	mov    0xe0(%rsp),%rbx
   10294:	00 
   10295:	48 85 db             	test   %rbx,%rbx
   10298:	74 23                	je     102bd <addr2line::ResUnit<R>::parse_lines+0x318d>
   1029a:	ba 08 00 00 00       	mov    $0x8,%edx
   1029f:	4c 89 ff             	mov    %r15,%rdi
   102a2:	48 89 d9             	mov    %rbx,%rcx
   102a5:	ff 15 cd 5c 03 00    	callq  *0x35ccd(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
   102ab:	49 89 c7             	mov    %rax,%r15
   102ae:	48 85 c0             	test   %rax,%rax
   102b1:	75 23                	jne    102d6 <addr2line::ResUnit<R>::parse_lines+0x31a6>
   102b3:	be 08 00 00 00       	mov    $0x8,%esi
   102b8:	e9 b1 02 00 00       	jmpq   1056e <addr2line::ResUnit<R>::parse_lines+0x343e>
   102bd:	48 85 f6             	test   %rsi,%rsi
   102c0:	74 0e                	je     102d0 <addr2line::ResUnit<R>::parse_lines+0x31a0>
   102c2:	ba 08 00 00 00       	mov    $0x8,%edx
   102c7:	4c 89 ff             	mov    %r15,%rdi
   102ca:	ff 15 28 59 03 00    	callq  *0x35928(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   102d0:	41 bf 08 00 00 00    	mov    $0x8,%r15d
   102d6:	48 8b 9c 24 70 01 00 	mov    0x170(%rsp),%rbx
   102dd:	00 
   102de:	48 8b b4 24 78 01 00 	mov    0x178(%rsp),%rsi
   102e5:	00 
   102e6:	48 8b ac 24 80 01 00 	mov    0x180(%rsp),%rbp
   102ed:	00 
   102ee:	48 39 ee             	cmp    %rbp,%rsi
   102f1:	76 5b                	jbe    1034e <addr2line::ResUnit<R>::parse_lines+0x321e>
   102f3:	48 85 db             	test   %rbx,%rbx
   102f6:	74 56                	je     1034e <addr2line::ResUnit<R>::parse_lines+0x321e>
   102f8:	48 c1 e6 05          	shl    $0x5,%rsi
   102fc:	49 89 ee             	mov    %rbp,%r14
   102ff:	49 c1 e6 05          	shl    $0x5,%r14
   10303:	74 29                	je     1032e <addr2line::ResUnit<R>::parse_lines+0x31fe>
   10305:	ba 08 00 00 00       	mov    $0x8,%edx
   1030a:	48 89 df             	mov    %rbx,%rdi
   1030d:	4c 89 f1             	mov    %r14,%rcx
   10310:	ff 15 62 5c 03 00    	callq  *0x35c62(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
   10316:	48 89 c3             	mov    %rax,%rbx
   10319:	48 85 c0             	test   %rax,%rax
   1031c:	75 28                	jne    10346 <addr2line::ResUnit<R>::parse_lines+0x3216>
   1031e:	be 08 00 00 00       	mov    $0x8,%esi
   10323:	4c 89 f7             	mov    %r14,%rdi
   10326:	ff 15 f4 57 03 00    	callq  *0x357f4(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   1032c:	0f 0b                	ud2    
   1032e:	48 85 f6             	test   %rsi,%rsi
   10331:	74 0e                	je     10341 <addr2line::ResUnit<R>::parse_lines+0x3211>
   10333:	ba 08 00 00 00       	mov    $0x8,%edx
   10338:	48 89 df             	mov    %rbx,%rdi
   1033b:	ff 15 b7 58 03 00    	callq  *0x358b7(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   10341:	bb 08 00 00 00       	mov    $0x8,%ebx
   10346:	4c 8b b4 24 f8 00 00 	mov    0xf8(%rsp),%r14
   1034d:	00 
   1034e:	48 8d bc 24 c0 01 00 	lea    0x1c0(%rsp),%rdi
   10355:	00 
   10356:	e8 55 66 ff ff       	callq  69b0 <core::ptr::drop_in_place>
   1035b:	48 8b 84 24 90 01 00 	mov    0x190(%rsp),%rax
   10362:	00 
   10363:	48 85 c0             	test   %rax,%rax
   10366:	74 25                	je     1038d <addr2line::ResUnit<R>::parse_lines+0x325d>
   10368:	48 8b bc 24 88 01 00 	mov    0x188(%rsp),%rdi
   1036f:	00 
   10370:	48 85 ff             	test   %rdi,%rdi
   10373:	74 18                	je     1038d <addr2line::ResUnit<R>::parse_lines+0x325d>
   10375:	48 c1 e0 03          	shl    $0x3,%rax
   10379:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
   1037d:	48 85 f6             	test   %rsi,%rsi
   10380:	74 0b                	je     1038d <addr2line::ResUnit<R>::parse_lines+0x325d>
   10382:	ba 08 00 00 00       	mov    $0x8,%edx
   10387:	ff 15 6b 58 03 00    	callq  *0x3586b(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   1038d:	31 c0                	xor    %eax,%eax
   1038f:	48 89 84 24 c0 01 00 	mov    %rax,0x1c0(%rsp)
   10396:	00 
   10397:	4c 89 b4 24 d0 01 00 	mov    %r14,0x1d0(%rsp)
   1039e:	00 
   1039f:	4c 89 bc 24 c8 01 00 	mov    %r15,0x1c8(%rsp)
   103a6:	00 
   103a7:	48 89 9c 24 d8 01 00 	mov    %rbx,0x1d8(%rsp)
   103ae:	00 
   103af:	48 89 ac 24 e0 01 00 	mov    %rbp,0x1e0(%rsp)
   103b6:	00 
   103b7:	48 8b 9c 24 78 03 00 	mov    0x378(%rsp),%rbx
   103be:	00 
   103bf:	83 3b 02             	cmpl   $0x2,(%rbx)
   103c2:	75 3d                	jne    10401 <addr2line::ResUnit<R>::parse_lines+0x32d1>
   103c4:	48 8b 84 24 c0 01 00 	mov    0x1c0(%rsp),%rax
   103cb:	00 
   103cc:	48 8b 8c 24 c8 01 00 	mov    0x1c8(%rsp),%rcx
   103d3:	00 
   103d4:	48 8b 94 24 d0 01 00 	mov    0x1d0(%rsp),%rdx
   103db:	00 
   103dc:	48 8b b4 24 d8 01 00 	mov    0x1d8(%rsp),%rsi
   103e3:	00 
   103e4:	48 89 03             	mov    %rax,(%rbx)
   103e7:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
   103eb:	48 8b 84 24 e0 01 00 	mov    0x1e0(%rsp),%rax
   103f2:	00 
   103f3:	48 89 43 20          	mov    %rax,0x20(%rbx)
   103f7:	48 89 53 10          	mov    %rdx,0x10(%rbx)
   103fb:	48 89 73 18          	mov    %rsi,0x18(%rbx)
   103ff:	eb 0d                	jmp    1040e <addr2line::ResUnit<R>::parse_lines+0x32de>
   10401:	48 8d bc 24 c0 01 00 	lea    0x1c0(%rsp),%rdi
   10408:	00 
   10409:	e8 02 60 ff ff       	callq  6410 <core::ptr::drop_in_place>
   1040e:	48 8b 03             	mov    (%rbx),%rax
   10411:	48 8b bc 24 08 03 00 	mov    0x308(%rsp),%rdi
   10418:	00 
   10419:	48 8b b4 24 f0 00 00 	mov    0xf0(%rsp),%rsi
   10420:	00 
   10421:	48 81 c6 b8 01 00 00 	add    $0x1b8,%rsi
   10428:	48 85 c0             	test   %rax,%rax
   1042b:	74 10                	je     1043d <addr2line::ResUnit<R>::parse_lines+0x330d>
   1042d:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
   10431:	f3 0f 7f 47 08       	movdqu %xmm0,0x8(%rdi)
   10436:	b8 01 00 00 00       	mov    $0x1,%eax
   1043b:	eb 06                	jmp    10443 <addr2line::ResUnit<R>::parse_lines+0x3313>
   1043d:	48 89 77 08          	mov    %rsi,0x8(%rdi)
   10441:	31 c0                	xor    %eax,%eax
   10443:	48 89 07             	mov    %rax,(%rdi)
   10446:	48 81 c4 08 04 00 00 	add    $0x408,%rsp
   1044d:	5b                   	pop    %rbx
   1044e:	41 5c                	pop    %r12
   10450:	41 5d                	pop    %r13
   10452:	41 5e                	pop    %r14
   10454:	41 5f                	pop    %r15
   10456:	5d                   	pop    %rbp
   10457:	c3                   	retq   
   10458:	48 8d 15 a1 34 03 00 	lea    0x334a1(%rip),%rdx        # 43900 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3c8>
   1045f:	48 89 c7             	mov    %rax,%rdi
   10462:	ff 15 28 58 03 00    	callq  *0x35828(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   10468:	e9 a5 01 00 00       	jmpq   10612 <addr2line::ResUnit<R>::parse_lines+0x34e2>
   1046d:	48 8d 15 a4 34 03 00 	lea    0x334a4(%rip),%rdx        # 43918 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3e0>
   10474:	ff 15 16 58 03 00    	callq  *0x35816(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   1047a:	e9 93 01 00 00       	jmpq   10612 <addr2line::ResUnit<R>::parse_lines+0x34e2>
   1047f:	48 8d 15 aa 34 03 00 	lea    0x334aa(%rip),%rdx        # 43930 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3f8>
   10486:	4c 89 ef             	mov    %r13,%rdi
   10489:	4c 89 fe             	mov    %r15,%rsi
   1048c:	ff 15 0e 5a 03 00    	callq  *0x35a0e(%rip)        # 45ea0 <_GLOBAL_OFFSET_TABLE_+0x518>
   10492:	e9 7b 01 00 00       	jmpq   10612 <addr2line::ResUnit<R>::parse_lines+0x34e2>
   10497:	48 8d 15 92 34 03 00 	lea    0x33492(%rip),%rdx        # 43930 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3f8>
   1049e:	4c 89 ff             	mov    %r15,%rdi
   104a1:	48 8b b4 24 20 03 00 	mov    0x320(%rsp),%rsi
   104a8:	00 
   104a9:	ff 15 79 55 03 00    	callq  *0x35579(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   104af:	e9 5e 01 00 00       	jmpq   10612 <addr2line::ResUnit<R>::parse_lines+0x34e2>
   104b4:	48 8d 3d 45 6e 02 00 	lea    0x26e45(%rip),%rdi        # 37300 <str.5>
   104bb:	48 8d 15 7e 31 03 00 	lea    0x3317e(%rip),%rdx        # 43640 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x108>
   104c2:	be 19 00 00 00       	mov    $0x19,%esi
   104c7:	ff 15 0b 5a 03 00    	callq  *0x35a0b(%rip)        # 45ed8 <_GLOBAL_OFFSET_TABLE_+0x550>
   104cd:	e9 40 01 00 00       	jmpq   10612 <addr2line::ResUnit<R>::parse_lines+0x34e2>
   104d2:	48 8d 3d 27 6e 02 00 	lea    0x26e27(%rip),%rdi        # 37300 <str.5>
   104d9:	48 8d 15 b0 34 03 00 	lea    0x334b0(%rip),%rdx        # 43990 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x458>
   104e0:	be 19 00 00 00       	mov    $0x19,%esi
   104e5:	ff 15 ed 59 03 00    	callq  *0x359ed(%rip)        # 45ed8 <_GLOBAL_OFFSET_TABLE_+0x550>
   104eb:	e9 22 01 00 00       	jmpq   10612 <addr2line::ResUnit<R>::parse_lines+0x34e2>
   104f0:	48 8d 3d 09 6e 02 00 	lea    0x26e09(%rip),%rdi        # 37300 <str.5>
   104f7:	48 8d 15 42 31 03 00 	lea    0x33142(%rip),%rdx        # 43640 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x108>
   104fe:	be 19 00 00 00       	mov    $0x19,%esi
   10503:	ff 15 cf 59 03 00    	callq  *0x359cf(%rip)        # 45ed8 <_GLOBAL_OFFSET_TABLE_+0x550>
   10509:	e9 04 01 00 00       	jmpq   10612 <addr2line::ResUnit<R>::parse_lines+0x34e2>
   1050e:	ff 15 cc 55 03 00    	callq  *0x355cc(%rip)        # 45ae0 <_GLOBAL_OFFSET_TABLE_+0x158>
   10514:	e9 f9 00 00 00       	jmpq   10612 <addr2line::ResUnit<R>::parse_lines+0x34e2>
   10519:	ff 15 c1 55 03 00    	callq  *0x355c1(%rip)        # 45ae0 <_GLOBAL_OFFSET_TABLE_+0x158>
   1051f:	e9 ee 00 00 00       	jmpq   10612 <addr2line::ResUnit<R>::parse_lines+0x34e2>
   10524:	ff 15 b6 55 03 00    	callq  *0x355b6(%rip)        # 45ae0 <_GLOBAL_OFFSET_TABLE_+0x158>
   1052a:	e9 e3 00 00 00       	jmpq   10612 <addr2line::ResUnit<R>::parse_lines+0x34e2>
   1052f:	48 8d 15 82 33 03 00 	lea    0x33382(%rip),%rdx        # 438b8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x380>
   10536:	4c 89 e6             	mov    %r12,%rsi
   10539:	ff 15 b1 58 03 00    	callq  *0x358b1(%rip)        # 45df0 <_GLOBAL_OFFSET_TABLE_+0x468>
   1053f:	e9 ce 00 00 00       	jmpq   10612 <addr2line::ResUnit<R>::parse_lines+0x34e2>
   10544:	be 08 00 00 00       	mov    $0x8,%esi
   10549:	48 89 ef             	mov    %rbp,%rdi
   1054c:	ff 15 ce 55 03 00    	callq  *0x355ce(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   10552:	0f 0b                	ud2    
   10554:	be 08 00 00 00       	mov    $0x8,%esi
   10559:	48 8b bc 24 e0 00 00 	mov    0xe0(%rsp),%rdi
   10560:	00 
   10561:	ff 15 b9 55 03 00    	callq  *0x355b9(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   10567:	0f 0b                	ud2    
   10569:	be 01 00 00 00       	mov    $0x1,%esi
   1056e:	48 89 df             	mov    %rbx,%rdi
   10571:	ff 15 a9 55 03 00    	callq  *0x355a9(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   10577:	0f 0b                	ud2    
   10579:	48 8d 15 50 33 03 00 	lea    0x33350(%rip),%rdx        # 438d0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x398>
   10580:	ff 15 1a 59 03 00    	callq  *0x3591a(%rip)        # 45ea0 <_GLOBAL_OFFSET_TABLE_+0x518>
   10586:	e9 87 00 00 00       	jmpq   10612 <addr2line::ResUnit<R>::parse_lines+0x34e2>
   1058b:	48 8d 15 3e 33 03 00 	lea    0x3333e(%rip),%rdx        # 438d0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x398>
   10592:	48 89 f7             	mov    %rsi,%rdi
   10595:	4c 89 e6             	mov    %r12,%rsi
   10598:	ff 15 8a 54 03 00    	callq  *0x3548a(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   1059e:	eb 72                	jmp    10612 <addr2line::ResUnit<R>::parse_lines+0x34e2>
   105a0:	ff 15 3a 55 03 00    	callq  *0x3553a(%rip)        # 45ae0 <_GLOBAL_OFFSET_TABLE_+0x158>
   105a6:	eb 6a                	jmp    10612 <addr2line::ResUnit<R>::parse_lines+0x34e2>
   105a8:	ff 15 32 55 03 00    	callq  *0x35532(%rip)        # 45ae0 <_GLOBAL_OFFSET_TABLE_+0x158>
   105ae:	eb 62                	jmp    10612 <addr2line::ResUnit<R>::parse_lines+0x34e2>
   105b0:	ff 15 2a 55 03 00    	callq  *0x3552a(%rip)        # 45ae0 <_GLOBAL_OFFSET_TABLE_+0x158>
   105b6:	eb 5a                	jmp    10612 <addr2line::ResUnit<R>::parse_lines+0x34e2>
   105b8:	ff 15 22 55 03 00    	callq  *0x35522(%rip)        # 45ae0 <_GLOBAL_OFFSET_TABLE_+0x158>
   105be:	eb 52                	jmp    10612 <addr2line::ResUnit<R>::parse_lines+0x34e2>
   105c0:	48 8d 3d 59 6d 02 00 	lea    0x26d59(%rip),%rdi        # 37320 <str.6>
   105c7:	48 8d 15 aa 33 03 00 	lea    0x333aa(%rip),%rdx        # 43978 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x440>
   105ce:	be 39 00 00 00       	mov    $0x39,%esi
   105d3:	ff 15 ff 58 03 00    	callq  *0x358ff(%rip)        # 45ed8 <_GLOBAL_OFFSET_TABLE_+0x550>
   105d9:	eb 37                	jmp    10612 <addr2line::ResUnit<R>::parse_lines+0x34e2>
   105db:	48 8d 3d 1e 6d 02 00 	lea    0x26d1e(%rip),%rdi        # 37300 <str.5>
   105e2:	48 8d 15 57 30 03 00 	lea    0x33057(%rip),%rdx        # 43640 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x108>
   105e9:	be 19 00 00 00       	mov    $0x19,%esi
   105ee:	ff 15 e4 58 03 00    	callq  *0x358e4(%rip)        # 45ed8 <_GLOBAL_OFFSET_TABLE_+0x550>
   105f4:	eb 1c                	jmp    10612 <addr2line::ResUnit<R>::parse_lines+0x34e2>
   105f6:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   105fa:	48 89 f9             	mov    %rdi,%rcx
   105fd:	48 39 fe             	cmp    %rdi,%rsi
   10600:	73 12                	jae    10614 <addr2line::ResUnit<R>::parse_lines+0x34e4>
   10602:	48 8d 15 df 32 03 00 	lea    0x332df(%rip),%rdx        # 438e8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3b0>
   10609:	48 89 cf             	mov    %rcx,%rdi
   1060c:	ff 15 8e 58 03 00    	callq  *0x3588e(%rip)        # 45ea0 <_GLOBAL_OFFSET_TABLE_+0x518>
   10612:	0f 0b                	ud2    
   10614:	48 8d 15 cd 32 03 00 	lea    0x332cd(%rip),%rdx        # 438e8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3b0>
   1061b:	48 89 f7             	mov    %rsi,%rdi
   1061e:	4c 89 e6             	mov    %r12,%rsi
   10621:	ff 15 01 54 03 00    	callq  *0x35401(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   10627:	eb e9                	jmp    10612 <addr2line::ResUnit<R>::parse_lines+0x34e2>
   10629:	ff 15 b1 54 03 00    	callq  *0x354b1(%rip)        # 45ae0 <_GLOBAL_OFFSET_TABLE_+0x158>
   1062f:	eb e1                	jmp    10612 <addr2line::ResUnit<R>::parse_lines+0x34e2>
   10631:	48 8b bc 24 b8 01 00 	mov    0x1b8(%rsp),%rdi
   10638:	00 
   10639:	48 89 de             	mov    %rbx,%rsi
   1063c:	ff 15 de 54 03 00    	callq  *0x354de(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   10642:	0f 0b                	ud2    
   10644:	eb 5f                	jmp    106a5 <addr2line::ResUnit<R>::parse_lines+0x3575>
   10646:	eb 6f                	jmp    106b7 <addr2line::ResUnit<R>::parse_lines+0x3587>
   10648:	eb 7c                	jmp    106c6 <addr2line::ResUnit<R>::parse_lines+0x3596>
   1064a:	48 89 c3             	mov    %rax,%rbx
   1064d:	e9 e1 00 00 00       	jmpq   10733 <addr2line::ResUnit<R>::parse_lines+0x3603>
   10652:	48 89 c3             	mov    %rax,%rbx
   10655:	e9 cc 00 00 00       	jmpq   10726 <addr2line::ResUnit<R>::parse_lines+0x35f6>
   1065a:	48 89 c3             	mov    %rax,%rbx
   1065d:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   10662:	e9 ad 00 00 00       	jmpq   10714 <addr2line::ResUnit<R>::parse_lines+0x35e4>
   10667:	48 89 c3             	mov    %rax,%rbx
   1066a:	48 8d bc 24 10 01 00 	lea    0x110(%rsp),%rdi
   10671:	00 
   10672:	e8 79 6e ff ff       	callq  74f0 <core::ptr::drop_in_place>
   10677:	e9 aa 00 00 00       	jmpq   10726 <addr2line::ResUnit<R>::parse_lines+0x35f6>
   1067c:	48 89 c3             	mov    %rax,%rbx
   1067f:	e9 a2 00 00 00       	jmpq   10726 <addr2line::ResUnit<R>::parse_lines+0x35f6>
   10684:	eb 56                	jmp    106dc <addr2line::ResUnit<R>::parse_lines+0x35ac>
   10686:	48 89 c3             	mov    %rax,%rbx
   10689:	e9 98 00 00 00       	jmpq   10726 <addr2line::ResUnit<R>::parse_lines+0x35f6>
   1068e:	48 89 c3             	mov    %rax,%rbx
   10691:	e9 90 00 00 00       	jmpq   10726 <addr2line::ResUnit<R>::parse_lines+0x35f6>
   10696:	48 89 c3             	mov    %rax,%rbx
   10699:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   1069e:	e8 ad 69 ff ff       	callq  7050 <core::ptr::drop_in_place>
   106a3:	eb 03                	jmp    106a8 <addr2line::ResUnit<R>::parse_lines+0x3578>
   106a5:	48 89 c3             	mov    %rax,%rbx
   106a8:	48 8d bc 24 90 00 00 	lea    0x90(%rsp),%rdi
   106af:	00 
   106b0:	e8 1b 61 ff ff       	callq  67d0 <core::ptr::drop_in_place>
   106b5:	eb 03                	jmp    106ba <addr2line::ResUnit<R>::parse_lines+0x358a>
   106b7:	48 89 c3             	mov    %rax,%rbx
   106ba:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   106bf:	e8 dc 63 ff ff       	callq  6aa0 <core::ptr::drop_in_place>
   106c4:	eb 03                	jmp    106c9 <addr2line::ResUnit<R>::parse_lines+0x3599>
   106c6:	48 89 c3             	mov    %rax,%rbx
   106c9:	48 8d bc 24 c8 00 00 	lea    0xc8(%rsp),%rdi
   106d0:	00 
   106d1:	e8 fa 60 ff ff       	callq  67d0 <core::ptr::drop_in_place>
   106d6:	eb 5b                	jmp    10733 <addr2line::ResUnit<R>::parse_lines+0x3603>
   106d8:	eb 20                	jmp    106fa <addr2line::ResUnit<R>::parse_lines+0x35ca>
   106da:	eb 2d                	jmp    10709 <addr2line::ResUnit<R>::parse_lines+0x35d9>
   106dc:	48 89 c3             	mov    %rax,%rbx
   106df:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
   106e4:	e8 e7 63 ff ff       	callq  6ad0 <core::ptr::drop_in_place>
   106e9:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   106ee:	e8 0d 64 ff ff       	callq  6b00 <core::ptr::drop_in_place>
   106f3:	eb 31                	jmp    10726 <addr2line::ResUnit<R>::parse_lines+0x35f6>
   106f5:	48 89 c3             	mov    %rax,%rbx
   106f8:	eb 1f                	jmp    10719 <addr2line::ResUnit<R>::parse_lines+0x35e9>
   106fa:	48 89 c3             	mov    %rax,%rbx
   106fd:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
   10702:	e8 79 62 ff ff       	callq  6980 <core::ptr::drop_in_place>
   10707:	eb 03                	jmp    1070c <addr2line::ResUnit<R>::parse_lines+0x35dc>
   10709:	48 89 c3             	mov    %rax,%rbx
   1070c:	48 8d bc 24 90 00 00 	lea    0x90(%rsp),%rdi
   10713:	00 
   10714:	e8 17 61 ff ff       	callq  6830 <core::ptr::drop_in_place>
   10719:	48 8d bc 24 c8 00 00 	lea    0xc8(%rsp),%rdi
   10720:	00 
   10721:	e8 2a 61 ff ff       	callq  6850 <core::ptr::drop_in_place>
   10726:	48 8d bc 24 c0 01 00 	lea    0x1c0(%rsp),%rdi
   1072d:	00 
   1072e:	e8 8d 60 ff ff       	callq  67c0 <core::ptr::drop_in_place>
   10733:	48 8d bc 24 88 01 00 	lea    0x188(%rsp),%rdi
   1073a:	00 
   1073b:	e8 60 63 ff ff       	callq  6aa0 <core::ptr::drop_in_place>
   10740:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
   10747:	00 
   10748:	e8 b3 63 ff ff       	callq  6b00 <core::ptr::drop_in_place>
   1074d:	48 89 df             	mov    %rbx,%rdi
   10750:	e8 fb 48 ff ff       	callq  5050 <_Unwind_Resume@plt>
   10755:	0f 0b                	ud2    
   10757:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1075e:	00 00 

0000000000010760 <addr2line::ResUnit<R>::parse_functions>:
   10760:	55                   	push   %rbp
   10761:	41 57                	push   %r15
   10763:	41 56                	push   %r14
   10765:	41 55                	push   %r13
   10767:	41 54                	push   %r12
   10769:	53                   	push   %rbx
   1076a:	48 81 ec a8 01 00 00 	sub    $0x1a8,%rsp
   10771:	48 89 f3             	mov    %rsi,%rbx
   10774:	48 8b 86 d8 01 00 00 	mov    0x1d8(%rsi),%rax
   1077b:	48 83 f8 02          	cmp    $0x2,%rax
   1077f:	0f 85 9a 09 00 00    	jne    1111f <addr2line::ResUnit<R>::parse_functions+0x9bf>
   10785:	48 89 bc 24 88 01 00 	mov    %rdi,0x188(%rsp)
   1078c:	00 
   1078d:	48 c7 84 24 38 01 00 	movq   $0x8,0x138(%rsp)
   10794:	00 08 00 00 00 
   10799:	0f 57 c0             	xorps  %xmm0,%xmm0
   1079c:	0f 11 84 24 40 01 00 	movups %xmm0,0x140(%rsp)
   107a3:	00 
   107a4:	48 c7 84 24 e8 00 00 	movq   $0x8,0xe8(%rsp)
   107ab:	00 08 00 00 00 
   107b0:	0f 11 84 24 f0 00 00 	movups %xmm0,0xf0(%rsp)
   107b7:	00 
   107b8:	48 8d 4b 18          	lea    0x18(%rbx),%rcx
   107bc:	48 8d 7b 40          	lea    0x40(%rbx),%rdi
   107c0:	48 8b 73 28          	mov    0x28(%rbx),%rsi
   107c4:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
   107c9:	48 8b 43 30          	mov    0x30(%rbx),%rax
   107cd:	48 89 b4 24 00 01 00 	mov    %rsi,0x100(%rsp)
   107d4:	00 
   107d5:	48 89 84 24 08 01 00 	mov    %rax,0x108(%rsp)
   107dc:	00 
   107dd:	48 89 8c 24 10 01 00 	mov    %rcx,0x110(%rsp)
   107e4:	00 
   107e5:	48 89 bc 24 18 01 00 	mov    %rdi,0x118(%rsp)
   107ec:	00 
   107ed:	48 c7 84 24 20 01 00 	movq   $0x0,0x120(%rsp)
   107f4:	00 00 00 00 00 
   107f9:	48 85 c0             	test   %rax,%rax
   107fc:	0f 84 5c 07 00 00    	je     10f5e <addr2line::ResUnit<R>::parse_functions+0x7fe>
   10802:	48 89 94 24 b0 00 00 	mov    %rdx,0xb0(%rsp)
   10809:	00 
   1080a:	41 bc 08 00 00 00    	mov    $0x8,%r12d
   10810:	4c 8d 2d 29 93 01 00 	lea    0x19329(%rip),%r13        # 29b40 <<gimli::read::abbrev::Attributes as core::ops::deref::Deref>::deref>
   10817:	ba 08 00 00 00       	mov    $0x8,%edx
   1081c:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   10821:	ba 00 00 00 00       	mov    $0x0,%edx
   10826:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   1082b:	ba 00 00 00 00       	mov    $0x0,%edx
   10830:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   10835:	31 d2                	xor    %edx,%edx
   10837:	80 79 21 08          	cmpb   $0x8,0x21(%rcx)
   1083b:	0f 94 c2             	sete   %dl
   1083e:	48 8b 39             	mov    (%rcx),%rdi
   10841:	48 01 f7             	add    %rsi,%rdi
   10844:	48 8d 2c d7          	lea    (%rdi,%rdx,8),%rbp
   10848:	48 8b 51 18          	mov    0x18(%rcx),%rdx
   1084c:	48 03 51 10          	add    0x10(%rcx),%rdx
   10850:	48 29 d5             	sub    %rdx,%rbp
   10853:	48 83 c5 04          	add    $0x4,%rbp
   10857:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
   1085b:	31 d2                	xor    %edx,%edx
   1085d:	31 c9                	xor    %ecx,%ecx
   1085f:	90                   	nop
   10860:	4c 8d 7e 01          	lea    0x1(%rsi),%r15
   10864:	4c 89 bc 24 00 01 00 	mov    %r15,0x100(%rsp)
   1086b:	00 
   1086c:	48 89 84 24 08 01 00 	mov    %rax,0x108(%rsp)
   10873:	00 
   10874:	0f b6 1e             	movzbl (%rsi),%ebx
   10877:	83 f9 3f             	cmp    $0x3f,%ecx
   1087a:	75 09                	jne    10885 <addr2line::ResUnit<R>::parse_functions+0x125>
   1087c:	80 fb 01             	cmp    $0x1,%bl
   1087f:	0f 87 4a 07 00 00    	ja     10fcf <addr2line::ResUnit<R>::parse_functions+0x86f>
   10885:	0f b6 f3             	movzbl %bl,%esi
   10888:	89 f7                	mov    %esi,%edi
   1088a:	83 e7 7f             	and    $0x7f,%edi
   1088d:	48 d3 e7             	shl    %cl,%rdi
   10890:	48 09 fa             	or     %rdi,%rdx
   10893:	40 84 f6             	test   %sil,%sil
   10896:	79 11                	jns    108a9 <addr2line::ResUnit<R>::parse_functions+0x149>
   10898:	83 c1 07             	add    $0x7,%ecx
   1089b:	4c 89 fe             	mov    %r15,%rsi
   1089e:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
   108a2:	72 bc                	jb     10860 <addr2line::ResUnit<R>::parse_functions+0x100>
   108a4:	e9 31 07 00 00       	jmpq   10fda <addr2line::ResUnit<R>::parse_functions+0x87a>
   108a9:	48 85 d2             	test   %rdx,%rdx
   108ac:	0f 84 8f 00 00 00    	je     10941 <addr2line::ResUnit<R>::parse_functions+0x1e1>
   108b2:	48 8b 8c 24 18 01 00 	mov    0x118(%rsp),%rcx
   108b9:	00 
   108ba:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
   108be:	48 3b 41 10          	cmp    0x10(%rcx),%rax
   108c2:	0f 83 bc 00 00 00    	jae    10984 <addr2line::ResUnit<R>::parse_functions+0x224>
   108c8:	48 6b f0 70          	imul   $0x70,%rax,%rsi
   108cc:	48 03 31             	add    (%rcx),%rsi
   108cf:	80 7e 6a 01          	cmpb   $0x1,0x6a(%rsi)
   108d3:	75 09                	jne    108de <addr2line::ResUnit<R>::parse_functions+0x17e>
   108d5:	48 83 84 24 20 01 00 	addq   $0x1,0x120(%rsp)
   108dc:	00 01 
   108de:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
   108e2:	66 83 7e 68 2e       	cmpw   $0x2e,0x68(%rsi)
   108e7:	0f 85 1b 01 00 00    	jne    10a08 <addr2line::ResUnit<R>::parse_functions+0x2a8>
   108ed:	41 ff d5             	callq  *%r13
   108f0:	48 89 ac 24 a8 00 00 	mov    %rbp,0xa8(%rsp)
   108f7:	00 
   108f8:	48 85 d2             	test   %rdx,%rdx
   108fb:	0f 84 42 03 00 00    	je     10c43 <addr2line::ResUnit<R>::parse_functions+0x4e3>
   10901:	49 89 c5             	mov    %rax,%r13
   10904:	48 c1 e2 04          	shl    $0x4,%rdx
   10908:	48 01 c2             	add    %rax,%rdx
   1090b:	48 8b 84 24 b0 00 00 	mov    0xb0(%rsp),%rax
   10912:	00 
   10913:	4c 8b b8 c0 00 00 00 	mov    0xc0(%rax),%r15
   1091a:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax
   10921:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
   10928:	00 
   10929:	45 31 f6             	xor    %r14d,%r14d
   1092c:	31 c0                	xor    %eax,%eax
   1092e:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   10933:	31 db                	xor    %ebx,%ebx
   10935:	31 c0                	xor    %eax,%eax
   10937:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1093c:	e9 6f 01 00 00       	jmpq   10ab0 <addr2line::ResUnit<R>::parse_functions+0x350>
   10941:	48 83 84 24 20 01 00 	addq   $0xffffffffffffffff,0x120(%rsp)
   10948:	00 ff 
   1094a:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   1094f:	4c 8b 7c 24 10       	mov    0x10(%rsp),%r15
   10954:	48 8b 84 24 08 01 00 	mov    0x108(%rsp),%rax
   1095b:	00 
   1095c:	48 85 c0             	test   %rax,%rax
   1095f:	0f 84 1a 08 00 00    	je     1117f <addr2line::ResUnit<R>::parse_functions+0xa1f>
   10965:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
   1096a:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   1096f:	48 8b b4 24 00 01 00 	mov    0x100(%rsp),%rsi
   10976:	00 
   10977:	48 8b 8c 24 10 01 00 	mov    0x110(%rsp),%rcx
   1097e:	00 
   1097f:	e9 b1 fe ff ff       	jmpq   10835 <addr2line::ResUnit<R>::parse_functions+0xd5>
   10984:	48 8b 41 18          	mov    0x18(%rcx),%rax
   10988:	41 be 12 00 00 00    	mov    $0x12,%r14d
   1098e:	48 85 c0             	test   %rax,%rax
   10991:	0f 84 3e 06 00 00    	je     10fd5 <addr2line::ResUnit<R>::parse_functions+0x875>
   10997:	49 89 ea             	mov    %rbp,%r10
   1099a:	4c 8b 41 20          	mov    0x20(%rcx),%r8
   1099e:	44 0f b7 88 32 05 00 	movzwl 0x532(%rax),%r9d
   109a5:	00 
   109a6:	48 8d 70 f0          	lea    -0x10(%rax),%rsi
   109aa:	4c 89 cb             	mov    %r9,%rbx
   109ad:	48 f7 db             	neg    %rbx
   109b0:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   109b7:	48 8d 0c 3b          	lea    (%rbx,%rdi,1),%rcx
   109bb:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
   109bf:	74 2d                	je     109ee <addr2line::ResUnit<R>::parse_functions+0x28e>
   109c1:	31 c9                	xor    %ecx,%ecx
   109c3:	48 39 54 f8 10       	cmp    %rdx,0x10(%rax,%rdi,8)
   109c8:	0f 95 c1             	setne  %cl
   109cb:	48 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%rbp
   109d2:	48 0f 47 cd          	cmova  %rbp,%rcx
   109d6:	48 83 c7 01          	add    $0x1,%rdi
   109da:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
   109de:	74 11                	je     109f1 <addr2line::ResUnit<R>::parse_functions+0x291>
   109e0:	48 83 c6 70          	add    $0x70,%rsi
   109e4:	48 85 c9             	test   %rcx,%rcx
   109e7:	75 ce                	jne    109b7 <addr2line::ResUnit<R>::parse_functions+0x257>
   109e9:	e9 85 00 00 00       	jmpq   10a73 <addr2line::ResUnit<R>::parse_functions+0x313>
   109ee:	4c 89 cf             	mov    %r9,%rdi
   109f1:	4d 85 c0             	test   %r8,%r8
   109f4:	0f 84 db 05 00 00    	je     10fd5 <addr2line::ResUnit<R>::parse_functions+0x875>
   109fa:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   109fe:	48 8b 84 f8 38 05 00 	mov    0x538(%rax,%rdi,8),%rax
   10a05:	00 
   10a06:	eb 96                	jmp    1099e <addr2line::ResUnit<R>::parse_functions+0x23e>
   10a08:	4c 89 eb             	mov    %r13,%rbx
   10a0b:	41 ff d5             	callq  *%r13
   10a0e:	49 89 d6             	mov    %rdx,%r14
   10a11:	48 85 d2             	test   %rdx,%rdx
   10a14:	0f 84 78 03 00 00    	je     10d92 <addr2line::ResUnit<R>::parse_functions+0x632>
   10a1a:	48 89 c5             	mov    %rax,%rbp
   10a1d:	49 c1 e6 04          	shl    $0x4,%r14
   10a21:	49 01 c6             	add    %rax,%r14
   10a24:	49 89 dd             	mov    %rbx,%r13
   10a27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   10a2e:	00 00 
   10a30:	48 8b 4d 00          	mov    0x0(%rbp),%rcx
   10a34:	48 8b 84 24 10 01 00 	mov    0x110(%rsp),%rax
   10a3b:	00 
   10a3c:	8b 50 20             	mov    0x20(%rax),%edx
   10a3f:	44 0f b7 4d 0a       	movzwl 0xa(%rbp),%r9d
   10a44:	44 8b 45 08          	mov    0x8(%rbp),%r8d
   10a48:	48 8d 7c 24 60       	lea    0x60(%rsp),%rdi
   10a4d:	48 8d b4 24 00 01 00 	lea    0x100(%rsp),%rsi
   10a54:	00 
   10a55:	e8 66 9e ff ff       	callq  a8c0 <gimli::read::unit::parse_attribute>
   10a5a:	83 7c 24 60 01       	cmpl   $0x1,0x60(%rsp)
   10a5f:	0f 84 ef 06 00 00    	je     11154 <addr2line::ResUnit<R>::parse_functions+0x9f4>
   10a65:	48 83 c5 10          	add    $0x10,%rbp
   10a69:	4c 39 f5             	cmp    %r14,%rbp
   10a6c:	75 c2                	jne    10a30 <addr2line::ResUnit<R>::parse_functions+0x2d0>
   10a6e:	e9 d7 fe ff ff       	jmpq   1094a <addr2line::ResUnit<R>::parse_functions+0x1ea>
   10a73:	4c 89 d5             	mov    %r10,%rbp
   10a76:	80 7e 6a 01          	cmpb   $0x1,0x6a(%rsi)
   10a7a:	0f 84 55 fe ff ff    	je     108d5 <addr2line::ResUnit<R>::parse_functions+0x175>
   10a80:	e9 59 fe ff ff       	jmpq   108de <addr2line::ResUnit<R>::parse_functions+0x17e>
   10a85:	b8 01 00 00 00       	mov    $0x1,%eax
   10a8a:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   10a8f:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   10a94:	48 89 84 24 c0 00 00 	mov    %rax,0xc0(%rsp)
   10a9b:	00 
   10a9c:	0f 1f 40 00          	nopl   0x0(%rax)
   10aa0:	48 89 ea             	mov    %rbp,%rdx
   10aa3:	49 83 c5 10          	add    $0x10,%r13
   10aa7:	49 39 d5             	cmp    %rdx,%r13
   10aaa:	0f 84 a6 01 00 00    	je     10c56 <addr2line::ResUnit<R>::parse_functions+0x4f6>
   10ab0:	48 89 d5             	mov    %rdx,%rbp
   10ab3:	49 8b 4d 00          	mov    0x0(%r13),%rcx
   10ab7:	48 8b 84 24 10 01 00 	mov    0x110(%rsp),%rax
   10abe:	00 
   10abf:	8b 50 20             	mov    0x20(%rax),%edx
   10ac2:	45 0f b7 4d 0a       	movzwl 0xa(%r13),%r9d
   10ac7:	45 8b 45 08          	mov    0x8(%r13),%r8d
   10acb:	48 8d 7c 24 60       	lea    0x60(%rsp),%rdi
   10ad0:	48 8d b4 24 00 01 00 	lea    0x100(%rsp),%rsi
   10ad7:	00 
   10ad8:	e8 e3 9d ff ff       	callq  a8c0 <gimli::read::unit::parse_attribute>
   10add:	83 7c 24 60 01       	cmpl   $0x1,0x60(%rsp)
   10ae2:	0f 84 6c 06 00 00    	je     11154 <addr2line::ResUnit<R>::parse_functions+0x9f4>
   10ae8:	0f b7 84 24 80 00 00 	movzwl 0x80(%rsp),%eax
   10aef:	00 
   10af0:	66 83 f8 55          	cmp    $0x55,%ax
   10af4:	74 7d                	je     10b73 <addr2line::ResUnit<R>::parse_functions+0x413>
   10af6:	66 83 f8 12          	cmp    $0x12,%ax
   10afa:	74 36                	je     10b32 <addr2line::ResUnit<R>::parse_functions+0x3d2>
   10afc:	66 83 f8 11          	cmp    $0x11,%ax
   10b00:	75 9e                	jne    10aa0 <addr2line::ResUnit<R>::parse_functions+0x340>
   10b02:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   10b07:	48 8d 74 24 68       	lea    0x68(%rsp),%rsi
   10b0c:	e8 ef af ff ff       	callq  bb00 <gimli::read::unit::Attribute<R>::value>
   10b11:	48 83 7c 24 40 00    	cmpq   $0x0,0x40(%rsp)
   10b17:	75 87                	jne    10aa0 <addr2line::ResUnit<R>::parse_functions+0x340>
   10b19:	b8 01 00 00 00       	mov    $0x1,%eax
   10b1e:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   10b23:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   10b28:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   10b2d:	e9 6e ff ff ff       	jmpq   10aa0 <addr2line::ResUnit<R>::parse_functions+0x340>
   10b32:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   10b37:	48 8d 74 24 68       	lea    0x68(%rsp),%rsi
   10b3c:	e8 bf af ff ff       	callq  bb00 <gimli::read::unit::Attribute<R>::value>
   10b41:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   10b46:	48 83 f8 07          	cmp    $0x7,%rax
   10b4a:	0f 84 35 ff ff ff    	je     10a85 <addr2line::ResUnit<R>::parse_functions+0x325>
   10b50:	48 85 c0             	test   %rax,%rax
   10b53:	48 89 ea             	mov    %rbp,%rdx
   10b56:	0f 85 47 ff ff ff    	jne    10aa3 <addr2line::ResUnit<R>::parse_functions+0x343>
   10b5c:	bb 01 00 00 00       	mov    $0x1,%ebx
   10b61:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   10b66:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
   10b6d:	00 
   10b6e:	e9 30 ff ff ff       	jmpq   10aa3 <addr2line::ResUnit<R>::parse_functions+0x343>
   10b73:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   10b78:	48 8d 74 24 68       	lea    0x68(%rsp),%rsi
   10b7d:	e8 7e af ff ff       	callq  bb00 <gimli::read::unit::Attribute<R>::value>
   10b82:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   10b87:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
   10b8c:	48 83 f8 16          	cmp    $0x16,%rax
   10b90:	74 6c                	je     10bfe <addr2line::ResUnit<R>::parse_functions+0x49e>
   10b92:	48 83 f8 18          	cmp    $0x18,%rax
   10b96:	75 6b                	jne    10c03 <addr2line::ResUnit<R>::parse_functions+0x4a3>
   10b98:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   10b9d:	48 8b 81 b0 00 00 00 	mov    0xb0(%rcx),%rax
   10ba4:	41 be 13 00 00 00    	mov    $0x13,%r14d
   10baa:	48 8b 94 24 d0 00 00 	mov    0xd0(%rsp),%rdx
   10bb1:	00 
   10bb2:	48 29 c2             	sub    %rax,%rdx
   10bb5:	0f 82 25 04 00 00    	jb     10fe0 <addr2line::ResUnit<R>::parse_functions+0x880>
   10bbb:	49 89 d9             	mov    %rbx,%r9
   10bbe:	0f b6 59 39          	movzbl 0x39(%rcx),%ebx
   10bc2:	49 8d 0c 07          	lea    (%r15,%rax,1),%rcx
   10bc6:	31 f6                	xor    %esi,%esi
   10bc8:	80 fb 08             	cmp    $0x8,%bl
   10bcb:	40 0f 94 c6          	sete   %sil
   10bcf:	48 8d 34 b5 04 00 00 	lea    0x4(,%rsi,4),%rsi
   10bd6:	00 
   10bd7:	48 0f af f7          	imul   %rdi,%rsi
   10bdb:	48 29 f2             	sub    %rsi,%rdx
   10bde:	0f 82 8c 06 00 00    	jb     11270 <addr2line::ResUnit<R>::parse_functions+0xb10>
   10be4:	48 01 f1             	add    %rsi,%rcx
   10be7:	80 fb 08             	cmp    $0x8,%bl
   10bea:	75 24                	jne    10c10 <addr2line::ResUnit<R>::parse_functions+0x4b0>
   10bec:	48 83 fa 07          	cmp    $0x7,%rdx
   10bf0:	0f 86 7a 06 00 00    	jbe    11270 <addr2line::ResUnit<R>::parse_functions+0xb10>
   10bf6:	4c 89 cb             	mov    %r9,%rbx
   10bf9:	48 8b 09             	mov    (%rcx),%rcx
   10bfc:	eb 21                	jmp    10c1f <addr2line::ResUnit<R>::parse_functions+0x4bf>
   10bfe:	48 89 f8             	mov    %rdi,%rax
   10c01:	eb 22                	jmp    10c25 <addr2line::ResUnit<R>::parse_functions+0x4c5>
   10c03:	45 31 f6             	xor    %r14d,%r14d
   10c06:	48 8b 84 24 e0 00 00 	mov    0xe0(%rsp),%rax
   10c0d:	00 
   10c0e:	eb 1b                	jmp    10c2b <addr2line::ResUnit<R>::parse_functions+0x4cb>
   10c10:	48 83 fa 04          	cmp    $0x4,%rdx
   10c14:	0f 82 56 06 00 00    	jb     11270 <addr2line::ResUnit<R>::parse_functions+0xb10>
   10c1a:	4c 89 cb             	mov    %r9,%rbx
   10c1d:	8b 09                	mov    (%rcx),%ecx
   10c1f:	48 01 c1             	add    %rax,%rcx
   10c22:	48 89 c8             	mov    %rcx,%rax
   10c25:	41 be 01 00 00 00    	mov    $0x1,%r14d
   10c2b:	48 89 ea             	mov    %rbp,%rdx
   10c2e:	48 89 84 24 d8 00 00 	mov    %rax,0xd8(%rsp)
   10c35:	00 
   10c36:	48 89 84 24 e0 00 00 	mov    %rax,0xe0(%rsp)
   10c3d:	00 
   10c3e:	e9 60 fe ff ff       	jmpq   10aa3 <addr2line::ResUnit<R>::parse_functions+0x343>
   10c43:	31 c0                	xor    %eax,%eax
   10c45:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   10c4a:	31 db                	xor    %ebx,%ebx
   10c4c:	31 c0                	xor    %eax,%eax
   10c4e:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   10c53:	45 31 f6             	xor    %r14d,%r14d
   10c56:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   10c5b:	48 89 84 24 90 01 00 	mov    %rax,0x190(%rsp)
   10c62:	00 
   10c63:	48 8d 84 24 e8 00 00 	lea    0xe8(%rsp),%rax
   10c6a:	00 
   10c6b:	48 89 84 24 98 01 00 	mov    %rax,0x198(%rsp)
   10c72:	00 
   10c73:	48 8d 84 24 90 01 00 	lea    0x190(%rsp),%rax
   10c7a:	00 
   10c7b:	48 89 84 24 a0 01 00 	mov    %rax,0x1a0(%rsp)
   10c82:	00 
   10c83:	c6 44 24 07 00       	movb   $0x0,0x7(%rsp)
   10c88:	48 8d 84 24 98 01 00 	lea    0x198(%rsp),%rax
   10c8f:	00 
   10c90:	48 89 84 24 50 01 00 	mov    %rax,0x150(%rsp)
   10c97:	00 
   10c98:	48 8d 44 24 07       	lea    0x7(%rsp),%rax
   10c9d:	48 89 84 24 58 01 00 	mov    %rax,0x158(%rsp)
   10ca4:	00 
   10ca5:	49 83 fe 01          	cmp    $0x1,%r14
   10ca9:	0f 85 f5 00 00 00    	jne    10da4 <addr2line::ResUnit<R>::parse_functions+0x644>
   10caf:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   10cb4:	8b 47 38             	mov    0x38(%rdi),%eax
   10cb7:	89 c1                	mov    %eax,%ecx
   10cb9:	c1 e9 10             	shr    $0x10,%ecx
   10cbc:	48 8b 94 24 b0 00 00 	mov    0xb0(%rsp),%rdx
   10cc3:	00 
   10cc4:	4c 8d 8a b0 00 00 00 	lea    0xb0(%rdx),%r9
   10ccb:	48 8d b2 c0 00 00 00 	lea    0xc0(%rdx),%rsi
   10cd2:	4c 8d 82 b8 00 00 00 	lea    0xb8(%rdx),%r8
   10cd9:	48 8d 9a c8 00 00 00 	lea    0xc8(%rdx),%rbx
   10ce0:	66 83 f9 05          	cmp    $0x5,%cx
   10ce4:	49 0f 42 f1          	cmovb  %r9,%rsi
   10ce8:	4c 8b 3e             	mov    (%rsi),%r15
   10ceb:	49 0f 42 d8          	cmovb  %r8,%rbx
   10cef:	48 8b 0b             	mov    (%rbx),%rcx
   10cf2:	48 8b ac 24 d8 00 00 	mov    0xd8(%rsp),%rbp
   10cf9:	00 
   10cfa:	48 29 e9             	sub    %rbp,%rcx
   10cfd:	4c 8d 2d 3c 8e 01 00 	lea    0x18e3c(%rip),%r13        # 29b40 <<gimli::read::abbrev::Attributes as core::ops::deref::Deref>::deref>
   10d04:	0f 82 d0 02 00 00    	jb     10fda <addr2line::ResUnit<R>::parse_functions+0x87a>
   10d0a:	48 8b 9f 90 00 00 00 	mov    0x90(%rdi),%rbx
   10d11:	48 8b b7 a0 00 00 00 	mov    0xa0(%rdi),%rsi
   10d18:	49 01 ef             	add    %rbp,%r15
   10d1b:	0f 10 42 10          	movups 0x10(%rdx),%xmm0
   10d1f:	48 89 4c 24 68       	mov    %rcx,0x68(%rsp)
   10d24:	4c 89 7c 24 60       	mov    %r15,0x60(%rsp)
   10d29:	89 44 24 70          	mov    %eax,0x70(%rsp)
   10d2d:	48 89 5c 24 78       	mov    %rbx,0x78(%rsp)
   10d32:	0f 11 84 24 80 00 00 	movups %xmm0,0x80(%rsp)
   10d39:	00 
   10d3a:	48 89 b4 24 90 00 00 	mov    %rsi,0x90(%rsp)
   10d41:	00 
   10d42:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   10d49:	00 00 00 
   10d4c:	0f 1f 40 00          	nopl   0x0(%rax)
   10d50:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   10d55:	48 8d 74 24 60       	lea    0x60(%rsp),%rsi
   10d5a:	e8 e1 b7 ff ff       	callq  c540 <gimli::read::rnglists::RngListIter<R>::next>
   10d5f:	4c 8b 74 24 48       	mov    0x48(%rsp),%r14
   10d64:	4c 8b 7c 24 50       	mov    0x50(%rsp),%r15
   10d69:	48 83 7c 24 40 01    	cmpq   $0x1,0x40(%rsp)
   10d6f:	0f 84 6b 02 00 00    	je     10fe0 <addr2line::ResUnit<R>::parse_functions+0x880>
   10d75:	49 83 fe 01          	cmp    $0x1,%r14
   10d79:	75 65                	jne    10de0 <addr2line::ResUnit<R>::parse_functions+0x680>
   10d7b:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
   10d80:	48 8d bc 24 50 01 00 	lea    0x150(%rsp),%rdi
   10d87:	00 
   10d88:	4c 89 fe             	mov    %r15,%rsi
   10d8b:	e8 80 1d 00 00       	callq  12b10 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}>
   10d90:	eb be                	jmp    10d50 <addr2line::ResUnit<R>::parse_functions+0x5f0>
   10d92:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   10d97:	4c 8b 7c 24 10       	mov    0x10(%rsp),%r15
   10d9c:	49 89 dd             	mov    %rbx,%r13
   10d9f:	e9 b0 fb ff ff       	jmpq   10954 <addr2line::ResUnit<R>::parse_functions+0x1f4>
   10da4:	48 89 d8             	mov    %rbx,%rax
   10da7:	48 83 7c 24 30 01    	cmpq   $0x1,0x30(%rsp)
   10dad:	4c 8d 2d 8c 8d 01 00 	lea    0x18d8c(%rip),%r13        # 29b40 <<gimli::read::abbrev::Attributes as core::ops::deref::Deref>::deref>
   10db4:	48 8b 9c 24 a8 00 00 	mov    0xa8(%rsp),%rbx
   10dbb:	00 
   10dbc:	75 52                	jne    10e10 <addr2line::ResUnit<R>::parse_functions+0x6b0>
   10dbe:	48 83 f8 01          	cmp    $0x1,%rax
   10dc2:	75 26                	jne    10dea <addr2line::ResUnit<R>::parse_functions+0x68a>
   10dc4:	48 8d bc 24 50 01 00 	lea    0x150(%rsp),%rdi
   10dcb:	00 
   10dcc:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   10dd1:	48 8b 94 24 c8 00 00 	mov    0xc8(%rsp),%rdx
   10dd8:	00 
   10dd9:	e8 32 1d 00 00       	callq  12b10 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}>
   10dde:	eb 30                	jmp    10e10 <addr2line::ResUnit<R>::parse_functions+0x6b0>
   10de0:	48 8b 9c 24 a8 00 00 	mov    0xa8(%rsp),%rbx
   10de7:	00 
   10de8:	eb 26                	jmp    10e10 <addr2line::ResUnit<R>::parse_functions+0x6b0>
   10dea:	48 83 7c 24 28 01    	cmpq   $0x1,0x28(%rsp)
   10df0:	75 1e                	jne    10e10 <addr2line::ResUnit<R>::parse_functions+0x6b0>
   10df2:	48 8b 84 24 c0 00 00 	mov    0xc0(%rsp),%rax
   10df9:	00 
   10dfa:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   10dff:	48 8d 14 30          	lea    (%rax,%rsi,1),%rdx
   10e03:	48 8d bc 24 50 01 00 	lea    0x150(%rsp),%rdi
   10e0a:	00 
   10e0b:	e8 00 1d 00 00       	callq  12b10 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}>
   10e10:	80 7c 24 07 00       	cmpb   $0x0,0x7(%rsp)
   10e15:	0f 84 2f fb ff ff    	je     1094a <addr2line::ResUnit<R>::parse_functions+0x1ea>
   10e1b:	48 89 5c 24 60       	mov    %rbx,0x60(%rsp)
   10e20:	48 c7 44 24 68 02 00 	movq   $0x2,0x68(%rsp)
   10e27:	00 00 
   10e29:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   10e2e:	4c 8b 7c 24 10       	mov    0x10(%rsp),%r15
   10e33:	49 39 d7             	cmp    %rdx,%r15
   10e36:	0f 85 ca 00 00 00    	jne    10f06 <addr2line::ResUnit<R>::parse_functions+0x7a6>
   10e3c:	48 89 d0             	mov    %rdx,%rax
   10e3f:	48 ff c0             	inc    %rax
   10e42:	0f 84 a3 0b 00 00    	je     119eb <addr2line::ResUnit<R>::parse_functions+0x128b>
   10e48:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   10e4d:	48 8d 0c 36          	lea    (%rsi,%rsi,1),%rcx
   10e51:	48 39 c1             	cmp    %rax,%rcx
   10e54:	48 0f 47 c1          	cmova  %rcx,%rax
   10e58:	48 83 f8 04          	cmp    $0x4,%rax
   10e5c:	b9 04 00 00 00       	mov    $0x4,%ecx
   10e61:	48 0f 46 c1          	cmovbe %rcx,%rax
   10e65:	45 31 e4             	xor    %r12d,%r12d
   10e68:	b9 48 00 00 00       	mov    $0x48,%ecx
   10e6d:	48 f7 e1             	mul    %rcx
   10e70:	48 89 c5             	mov    %rax,%rbp
   10e73:	0f 90 c0             	seto   %al
   10e76:	41 0f 91 c4          	setno  %r12b
   10e7a:	49 c1 e4 03          	shl    $0x3,%r12
   10e7e:	48 85 f6             	test   %rsi,%rsi
   10e81:	74 35                	je     10eb8 <addr2line::ResUnit<R>::parse_functions+0x758>
   10e83:	84 c0                	test   %al,%al
   10e85:	0f 85 60 0b 00 00    	jne    119eb <addr2line::ResUnit<R>::parse_functions+0x128b>
   10e8b:	48 83 7c 24 38 00    	cmpq   $0x0,0x38(%rsp)
   10e91:	74 2d                	je     10ec0 <addr2line::ResUnit<R>::parse_functions+0x760>
   10e93:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   10e98:	48 c1 e0 03          	shl    $0x3,%rax
   10e9c:	48 8d 34 c0          	lea    (%rax,%rax,8),%rsi
   10ea0:	48 85 f6             	test   %rsi,%rsi
   10ea3:	74 1b                	je     10ec0 <addr2line::ResUnit<R>::parse_functions+0x760>
   10ea5:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
   10eaa:	4c 89 e2             	mov    %r12,%rdx
   10ead:	48 89 e9             	mov    %rbp,%rcx
   10eb0:	ff 15 c2 50 03 00    	callq  *0x350c2(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
   10eb6:	eb 19                	jmp    10ed1 <addr2line::ResUnit<R>::parse_functions+0x771>
   10eb8:	84 c0                	test   %al,%al
   10eba:	0f 85 2b 0b 00 00    	jne    119eb <addr2line::ResUnit<R>::parse_functions+0x128b>
   10ec0:	48 85 ed             	test   %rbp,%rbp
   10ec3:	74 0f                	je     10ed4 <addr2line::ResUnit<R>::parse_functions+0x774>
   10ec5:	48 89 ef             	mov    %rbp,%rdi
   10ec8:	4c 89 e6             	mov    %r12,%rsi
   10ecb:	ff 15 af 4c 03 00    	callq  *0x34caf(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   10ed1:	49 89 c4             	mov    %rax,%r12
   10ed4:	4d 85 e4             	test   %r12,%r12
   10ed7:	0f 84 dc 0a 00 00    	je     119b9 <addr2line::ResUnit<R>::parse_functions+0x1259>
   10edd:	4c 89 a4 24 38 01 00 	mov    %r12,0x138(%rsp)
   10ee4:	00 
   10ee5:	48 89 e8             	mov    %rbp,%rax
   10ee8:	48 b9 8f e3 38 8e e3 	movabs $0xe38e38e38e38e38f,%rcx
   10eef:	38 8e e3 
   10ef2:	48 f7 e1             	mul    %rcx
   10ef5:	48 c1 ea 06          	shr    $0x6,%rdx
   10ef9:	48 89 94 24 40 01 00 	mov    %rdx,0x140(%rsp)
   10f00:	00 
   10f01:	4c 8b 7c 24 10       	mov    0x10(%rsp),%r15
   10f06:	4b 8d 04 ff          	lea    (%r15,%r15,8),%rax
   10f0a:	48 8b 8c 24 a0 00 00 	mov    0xa0(%rsp),%rcx
   10f11:	00 
   10f12:	49 89 4c c4 40       	mov    %rcx,0x40(%r12,%rax,8)
   10f17:	0f 10 44 24 60       	movups 0x60(%rsp),%xmm0
   10f1c:	0f 10 4c 24 70       	movups 0x70(%rsp),%xmm1
   10f21:	0f 10 94 24 80 00 00 	movups 0x80(%rsp),%xmm2
   10f28:	00 
   10f29:	0f 10 9c 24 90 00 00 	movups 0x90(%rsp),%xmm3
   10f30:	00 
   10f31:	41 0f 11 5c c4 30    	movups %xmm3,0x30(%r12,%rax,8)
   10f37:	41 0f 11 54 c4 20    	movups %xmm2,0x20(%r12,%rax,8)
   10f3d:	41 0f 11 4c c4 10    	movups %xmm1,0x10(%r12,%rax,8)
   10f43:	41 0f 11 04 c4       	movups %xmm0,(%r12,%rax,8)
   10f48:	49 83 c7 01          	add    $0x1,%r15
   10f4c:	4c 89 bc 24 48 01 00 	mov    %r15,0x148(%rsp)
   10f53:	00 
   10f54:	4c 89 64 24 38       	mov    %r12,0x38(%rsp)
   10f59:	e9 f6 f9 ff ff       	jmpq   10954 <addr2line::ResUnit<R>::parse_functions+0x1f4>
   10f5e:	41 bc 08 00 00 00    	mov    $0x8,%r12d
   10f64:	45 31 ff             	xor    %r15d,%r15d
   10f67:	4d 89 e6             	mov    %r12,%r14
   10f6a:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
   10f6f:	48 8b bc 24 e8 00 00 	mov    0xe8(%rsp),%rdi
   10f76:	00 
   10f77:	48 8b 84 24 f0 00 00 	mov    0xf0(%rsp),%rax
   10f7e:	00 
   10f7f:	4c 8b a4 24 f8 00 00 	mov    0xf8(%rsp),%r12
   10f86:	00 
   10f87:	4c 39 e0             	cmp    %r12,%rax
   10f8a:	76 3c                	jbe    10fc8 <addr2line::ResUnit<R>::parse_functions+0x868>
   10f8c:	48 85 ff             	test   %rdi,%rdi
   10f8f:	74 37                	je     10fc8 <addr2line::ResUnit<R>::parse_functions+0x868>
   10f91:	48 c1 e0 03          	shl    $0x3,%rax
   10f95:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
   10f99:	4a 8d 04 e5 00 00 00 	lea    0x0(,%r12,8),%rax
   10fa0:	00 
   10fa1:	48 8d 2c 40          	lea    (%rax,%rax,2),%rbp
   10fa5:	48 85 ed             	test   %rbp,%rbp
   10fa8:	0f 84 b5 01 00 00    	je     11163 <addr2line::ResUnit<R>::parse_functions+0xa03>
   10fae:	ba 08 00 00 00       	mov    $0x8,%edx
   10fb3:	48 89 e9             	mov    %rbp,%rcx
   10fb6:	ff 15 bc 4f 03 00    	callq  *0x34fbc(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
   10fbc:	48 89 c7             	mov    %rax,%rdi
   10fbf:	48 85 c0             	test   %rax,%rax
   10fc2:	0f 84 f1 09 00 00    	je     119b9 <addr2line::ResUnit<R>::parse_functions+0x1259>
   10fc8:	31 c0                	xor    %eax,%eax
   10fca:	e9 df 00 00 00       	jmpq   110ae <addr2line::ResUnit<R>::parse_functions+0x94e>
   10fcf:	41 be 06 00 00 00    	mov    $0x6,%r14d
   10fd5:	45 31 ff             	xor    %r15d,%r15d
   10fd8:	eb 06                	jmp    10fe0 <addr2line::ResUnit<R>::parse_functions+0x880>
   10fda:	41 be 13 00 00 00    	mov    $0x13,%r14d
   10fe0:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
   10fe5:	48 8b 84 24 f0 00 00 	mov    0xf0(%rsp),%rax
   10fec:	00 
   10fed:	48 85 c0             	test   %rax,%rax
   10ff0:	74 25                	je     11017 <addr2line::ResUnit<R>::parse_functions+0x8b7>
   10ff2:	48 8b bc 24 e8 00 00 	mov    0xe8(%rsp),%rdi
   10ff9:	00 
   10ffa:	48 85 ff             	test   %rdi,%rdi
   10ffd:	74 18                	je     11017 <addr2line::ResUnit<R>::parse_functions+0x8b7>
   10fff:	48 c1 e0 03          	shl    $0x3,%rax
   11003:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
   11007:	48 85 f6             	test   %rsi,%rsi
   1100a:	74 0b                	je     11017 <addr2line::ResUnit<R>::parse_functions+0x8b7>
   1100c:	ba 08 00 00 00       	mov    $0x8,%edx
   11011:	ff 15 e1 4b 03 00    	callq  *0x34be1(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   11017:	48 85 db             	test   %rbx,%rbx
   1101a:	74 5e                	je     1107a <addr2line::ResUnit<R>::parse_functions+0x91a>
   1101c:	48 c1 e3 03          	shl    $0x3,%rbx
   11020:	48 8d 1c db          	lea    (%rbx,%rbx,8),%rbx
   11024:	31 ed                	xor    %ebp,%ebp
   11026:	4c 8d 2d 13 44 ff ff 	lea    -0xbbed(%rip),%r13        # 5440 <__rust_dealloc>
   1102d:	eb 0a                	jmp    11039 <addr2line::ResUnit<R>::parse_functions+0x8d9>
   1102f:	90                   	nop
   11030:	48 83 c5 48          	add    $0x48,%rbp
   11034:	48 39 eb             	cmp    %rbp,%rbx
   11037:	74 41                	je     1107a <addr2line::ResUnit<R>::parse_functions+0x91a>
   11039:	49 83 7c 2c 08 00    	cmpq   $0x0,0x8(%r12,%rbp,1)
   1103f:	75 ef                	jne    11030 <addr2line::ResUnit<R>::parse_functions+0x8d0>
   11041:	49 8b 44 2c 30       	mov    0x30(%r12,%rbp,1),%rax
   11046:	48 c1 e0 03          	shl    $0x3,%rax
   1104a:	48 8d 34 80          	lea    (%rax,%rax,4),%rsi
   1104e:	48 85 f6             	test   %rsi,%rsi
   11051:	74 0d                	je     11060 <addr2line::ResUnit<R>::parse_functions+0x900>
   11053:	49 8b 7c 2c 28       	mov    0x28(%r12,%rbp,1),%rdi
   11058:	ba 08 00 00 00       	mov    $0x8,%edx
   1105d:	41 ff d5             	callq  *%r13
   11060:	49 8b 74 2c 40       	mov    0x40(%r12,%rbp,1),%rsi
   11065:	48 c1 e6 05          	shl    $0x5,%rsi
   11069:	74 c5                	je     11030 <addr2line::ResUnit<R>::parse_functions+0x8d0>
   1106b:	49 8b 7c 2c 38       	mov    0x38(%r12,%rbp,1),%rdi
   11070:	ba 08 00 00 00       	mov    $0x8,%edx
   11075:	41 ff d5             	callq  *%r13
   11078:	eb b6                	jmp    11030 <addr2line::ResUnit<R>::parse_functions+0x8d0>
   1107a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1107f:	48 85 c0             	test   %rax,%rax
   11082:	74 20                	je     110a4 <addr2line::ResUnit<R>::parse_functions+0x944>
   11084:	48 c1 e0 03          	shl    $0x3,%rax
   11088:	48 8d 34 c0          	lea    (%rax,%rax,8),%rsi
   1108c:	48 85 f6             	test   %rsi,%rsi
   1108f:	74 13                	je     110a4 <addr2line::ResUnit<R>::parse_functions+0x944>
   11091:	4d 85 e4             	test   %r12,%r12
   11094:	74 0e                	je     110a4 <addr2line::ResUnit<R>::parse_functions+0x944>
   11096:	ba 08 00 00 00       	mov    $0x8,%edx
   1109b:	4c 89 e7             	mov    %r12,%rdi
   1109e:	ff 15 54 4b 03 00    	callq  *0x34b54(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   110a4:	b8 01 00 00 00       	mov    $0x1,%eax
   110a9:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
   110ae:	48 8d ab d8 01 00 00 	lea    0x1d8(%rbx),%rbp
   110b5:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   110ba:	4c 89 7c 24 70       	mov    %r15,0x70(%rsp)
   110bf:	4c 89 74 24 68       	mov    %r14,0x68(%rsp)
   110c4:	48 89 7c 24 78       	mov    %rdi,0x78(%rsp)
   110c9:	4c 89 a4 24 80 00 00 	mov    %r12,0x80(%rsp)
   110d0:	00 
   110d1:	83 7d 00 02          	cmpl   $0x2,0x0(%rbp)
   110d5:	75 32                	jne    11109 <addr2line::ResUnit<R>::parse_functions+0x9a9>
   110d7:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   110dc:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
   110e1:	48 8b 54 24 70       	mov    0x70(%rsp),%rdx
   110e6:	48 8b 74 24 78       	mov    0x78(%rsp),%rsi
   110eb:	48 89 45 00          	mov    %rax,0x0(%rbp)
   110ef:	48 89 4d 08          	mov    %rcx,0x8(%rbp)
   110f3:	48 8b 84 24 80 00 00 	mov    0x80(%rsp),%rax
   110fa:	00 
   110fb:	48 89 45 20          	mov    %rax,0x20(%rbp)
   110ff:	48 89 55 10          	mov    %rdx,0x10(%rbp)
   11103:	48 89 75 18          	mov    %rsi,0x18(%rbp)
   11107:	eb 0a                	jmp    11113 <addr2line::ResUnit<R>::parse_functions+0x9b3>
   11109:	48 8d 7c 24 60       	lea    0x60(%rsp),%rdi
   1110e:	e8 4d 60 ff ff       	callq  7160 <core::ptr::drop_in_place>
   11113:	48 8b 45 00          	mov    0x0(%rbp),%rax
   11117:	48 8b bc 24 88 01 00 	mov    0x188(%rsp),%rdi
   1111e:	00 
   1111f:	48 81 c3 e0 01 00 00 	add    $0x1e0,%rbx
   11126:	48 85 c0             	test   %rax,%rax
   11129:	74 0e                	je     11139 <addr2line::ResUnit<R>::parse_functions+0x9d9>
   1112b:	0f 10 03             	movups (%rbx),%xmm0
   1112e:	0f 11 47 08          	movups %xmm0,0x8(%rdi)
   11132:	b8 01 00 00 00       	mov    $0x1,%eax
   11137:	eb 06                	jmp    1113f <addr2line::ResUnit<R>::parse_functions+0x9df>
   11139:	48 89 5f 08          	mov    %rbx,0x8(%rdi)
   1113d:	31 c0                	xor    %eax,%eax
   1113f:	48 89 07             	mov    %rax,(%rdi)
   11142:	48 81 c4 a8 01 00 00 	add    $0x1a8,%rsp
   11149:	5b                   	pop    %rbx
   1114a:	41 5c                	pop    %r12
   1114c:	41 5d                	pop    %r13
   1114e:	41 5e                	pop    %r14
   11150:	41 5f                	pop    %r15
   11152:	5d                   	pop    %rbp
   11153:	c3                   	retq   
   11154:	4c 8b 74 24 68       	mov    0x68(%rsp),%r14
   11159:	4c 8b 7c 24 70       	mov    0x70(%rsp),%r15
   1115e:	e9 7d fe ff ff       	jmpq   10fe0 <addr2line::ResUnit<R>::parse_functions+0x880>
   11163:	48 85 f6             	test   %rsi,%rsi
   11166:	74 0b                	je     11173 <addr2line::ResUnit<R>::parse_functions+0xa13>
   11168:	ba 08 00 00 00       	mov    $0x8,%edx
   1116d:	ff 15 85 4a 03 00    	callq  *0x34a85(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   11173:	bf 08 00 00 00       	mov    $0x8,%edi
   11178:	31 c0                	xor    %eax,%eax
   1117a:	e9 2f ff ff ff       	jmpq   110ae <addr2line::ResUnit<R>::parse_functions+0x94e>
   1117f:	48 8b 84 24 e8 00 00 	mov    0xe8(%rsp),%rax
   11186:	00 
   11187:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1118c:	4c 8b b4 24 f8 00 00 	mov    0xf8(%rsp),%r14
   11193:	00 
   11194:	49 83 fe 15          	cmp    $0x15,%r14
   11198:	0f 83 da 00 00 00    	jae    11278 <addr2line::ResUnit<R>::parse_functions+0xb18>
   1119e:	49 83 fe 02          	cmp    $0x2,%r14
   111a2:	0f 82 c4 07 00 00    	jb     1196c <addr2line::ResUnit<R>::parse_functions+0x120c>
   111a8:	49 89 d2             	mov    %rdx,%r10
   111ab:	49 8d 7e ff          	lea    -0x1(%r14),%rdi
   111af:	4b 8d 04 76          	lea    (%r14,%r14,2),%rax
   111b3:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   111b8:	48 8d 1c c1          	lea    (%rcx,%rax,8),%rbx
   111bc:	31 d2                	xor    %edx,%edx
   111be:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   111c3:	eb 1d                	jmp    111e2 <addr2line::ResUnit<R>::parse_functions+0xa82>
   111c5:	4c 89 06             	mov    %r8,(%rsi)
   111c8:	0f 28 44 24 60       	movaps 0x60(%rsp),%xmm0
   111cd:	0f 11 46 08          	movups %xmm0,0x8(%rsi)
   111d1:	48 83 c3 e8          	add    $0xffffffffffffffe8,%rbx
   111d5:	48 83 c2 01          	add    $0x1,%rdx
   111d9:	48 85 ff             	test   %rdi,%rdi
   111dc:	0f 84 d4 00 00 00    	je     112b6 <addr2line::ResUnit<R>::parse_functions+0xb56>
   111e2:	48 89 f9             	mov    %rdi,%rcx
   111e5:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   111e9:	4c 89 f5             	mov    %r14,%rbp
   111ec:	48 29 fd             	sub    %rdi,%rbp
   111ef:	0f 82 4f 08 00 00    	jb     11a44 <addr2line::ResUnit<R>::parse_functions+0x12e4>
   111f5:	48 83 fd 02          	cmp    $0x2,%rbp
   111f9:	72 d6                	jb     111d1 <addr2line::ResUnit<R>::parse_functions+0xa71>
   111fb:	48 8d 04 7f          	lea    (%rdi,%rdi,2),%rax
   111ff:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   11204:	4c 8d 0c c6          	lea    (%rsi,%rax,8),%r9
   11208:	48 8d 0c 49          	lea    (%rcx,%rcx,2),%rcx
   1120c:	4d 8b 01             	mov    (%r9),%r8
   1120f:	4c 39 04 ce          	cmp    %r8,(%rsi,%rcx,8)
   11213:	73 bc                	jae    111d1 <addr2line::ResUnit<R>::parse_functions+0xa71>
   11215:	49 8d 34 cb          	lea    (%r11,%rcx,8),%rsi
   11219:	41 0f 10 44 c3 08    	movups 0x8(%r11,%rax,8),%xmm0
   1121f:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
   11224:	48 8b 46 10          	mov    0x10(%rsi),%rax
   11228:	49 89 41 10          	mov    %rax,0x10(%r9)
   1122c:	0f 10 06             	movups (%rsi),%xmm0
   1122f:	41 0f 11 01          	movups %xmm0,(%r9)
   11233:	48 83 fd 03          	cmp    $0x3,%rbp
   11237:	72 8c                	jb     111c5 <addr2line::ResUnit<R>::parse_functions+0xa65>
   11239:	48 89 d1             	mov    %rdx,%rcx
   1123c:	48 89 d8             	mov    %rbx,%rax
   1123f:	4d 39 41 30          	cmp    %r8,0x30(%r9)
   11243:	73 80                	jae    111c5 <addr2line::ResUnit<R>::parse_functions+0xa65>
   11245:	48 89 c6             	mov    %rax,%rsi
   11248:	48 8b 40 10          	mov    0x10(%rax),%rax
   1124c:	48 89 46 f8          	mov    %rax,-0x8(%rsi)
   11250:	0f 10 06             	movups (%rsi),%xmm0
   11253:	0f 11 46 e8          	movups %xmm0,-0x18(%rsi)
   11257:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
   1125b:	0f 84 64 ff ff ff    	je     111c5 <addr2line::ResUnit<R>::parse_functions+0xa65>
   11261:	48 8d 46 18          	lea    0x18(%rsi),%rax
   11265:	4c 39 46 18          	cmp    %r8,0x18(%rsi)
   11269:	72 da                	jb     11245 <addr2line::ResUnit<R>::parse_functions+0xae5>
   1126b:	e9 55 ff ff ff       	jmpq   111c5 <addr2line::ResUnit<R>::parse_functions+0xa65>
   11270:	49 89 cf             	mov    %rcx,%r15
   11273:	e9 68 fd ff ff       	jmpq   10fe0 <addr2line::ResUnit<R>::parse_functions+0x880>
   11278:	4c 89 f0             	mov    %r14,%rax
   1127b:	48 d1 e8             	shr    %rax
   1127e:	b9 18 00 00 00       	mov    $0x18,%ecx
   11283:	31 ed                	xor    %ebp,%ebp
   11285:	48 f7 e1             	mul    %rcx
   11288:	48 89 c7             	mov    %rax,%rdi
   1128b:	0f 91 c0             	setno  %al
   1128e:	0f 80 1e 08 00 00    	jo     11ab2 <addr2line::ResUnit<R>::parse_functions+0x1352>
   11294:	40 88 c5             	mov    %al,%bpl
   11297:	48 c1 e5 03          	shl    $0x3,%rbp
   1129b:	48 85 ff             	test   %rdi,%rdi
   1129e:	48 89 bc 24 b8 00 00 	mov    %rdi,0xb8(%rsp)
   112a5:	00 
   112a6:	74 16                	je     112be <addr2line::ResUnit<R>::parse_functions+0xb5e>
   112a8:	48 89 ee             	mov    %rbp,%rsi
   112ab:	ff 15 cf 48 03 00    	callq  *0x348cf(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   112b1:	49 89 c4             	mov    %rax,%r12
   112b4:	eb 0b                	jmp    112c1 <addr2line::ResUnit<R>::parse_functions+0xb61>
   112b6:	4c 89 d2             	mov    %r10,%rdx
   112b9:	e9 ae 06 00 00       	jmpq   1196c <addr2line::ResUnit<R>::parse_functions+0x120c>
   112be:	49 89 ec             	mov    %rbp,%r12
   112c1:	4d 85 e4             	test   %r12,%r12
   112c4:	0f 84 f0 07 00 00    	je     11aba <addr2line::ResUnit<R>::parse_functions+0x135a>
   112ca:	48 b9 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rcx
   112d1:	aa aa aa 
   112d4:	48 8b 84 24 b8 00 00 	mov    0xb8(%rsp),%rax
   112db:	00 
   112dc:	48 f7 e1             	mul    %rcx
   112df:	48 c1 ea 04          	shr    $0x4,%rdx
   112e3:	4c 89 a4 24 50 01 00 	mov    %r12,0x150(%rsp)
   112ea:	00 
   112eb:	48 89 94 24 68 01 00 	mov    %rdx,0x168(%rsp)
   112f2:	00 
   112f3:	48 89 94 24 58 01 00 	mov    %rdx,0x158(%rsp)
   112fa:	00 
   112fb:	48 c7 84 24 60 01 00 	movq   $0x0,0x160(%rsp)
   11302:	00 00 00 00 00 
   11307:	48 c7 44 24 40 08 00 	movq   $0x8,0x40(%rsp)
   1130e:	00 00 
   11310:	0f 57 c0             	xorps  %xmm0,%xmm0
   11313:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
   11318:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1131d:	48 8d 48 b8          	lea    -0x48(%rax),%rcx
   11321:	48 89 8c 24 80 01 00 	mov    %rcx,0x180(%rsp)
   11328:	00 
   11329:	48 8d 48 e8          	lea    -0x18(%rax),%rcx
   1132d:	48 89 8c 24 28 01 00 	mov    %rcx,0x128(%rsp)
   11334:	00 
   11335:	48 8d 48 d0          	lea    -0x30(%rax),%rcx
   11339:	48 89 8c 24 78 01 00 	mov    %rcx,0x178(%rsp)
   11340:	00 
   11341:	48 8d 40 18          	lea    0x18(%rax),%rax
   11345:	48 89 84 24 70 01 00 	mov    %rax,0x170(%rsp)
   1134c:	00 
   1134d:	4d 89 f7             	mov    %r14,%r15
   11350:	4c 89 b4 24 30 01 00 	mov    %r14,0x130(%rsp)
   11357:	00 
   11358:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   1135d:	eb 09                	jmp    11368 <addr2line::ResUnit<R>::parse_functions+0xc08>
   1135f:	4d 85 ff             	test   %r15,%r15
   11362:	0f 84 99 05 00 00    	je     11901 <addr2line::ResUnit<R>::parse_functions+0x11a1>
   11368:	4d 89 f9             	mov    %r15,%r9
   1136b:	49 83 c1 ff          	add    $0xffffffffffffffff,%r9
   1136f:	0f 84 d9 00 00 00    	je     1144e <addr2line::ResUnit<R>::parse_functions+0xcee>
   11375:	4c 89 fe             	mov    %r15,%rsi
   11378:	49 83 c7 fe          	add    $0xfffffffffffffffe,%r15
   1137c:	4b 8d 04 49          	lea    (%r9,%r9,2),%rax
   11380:	4b 8d 0c 7f          	lea    (%r15,%r15,2),%rcx
   11384:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   11389:	48 8b 1c ca          	mov    (%rdx,%rcx,8),%rbx
   1138d:	48 39 1c c2          	cmp    %rbx,(%rdx,%rax,8)
   11391:	0f 83 c4 00 00 00    	jae    1145b <addr2line::ResUnit<R>::parse_functions+0xcfb>
   11397:	4c 8d 04 76          	lea    (%rsi,%rsi,2),%r8
   1139b:	48 8b 84 24 78 01 00 	mov    0x178(%rsp),%rax
   113a2:	00 
   113a3:	4e 8d 14 c0          	lea    (%rax,%r8,8),%r10
   113a7:	b8 02 00 00 00       	mov    $0x2,%eax
   113ac:	4c 89 ff             	mov    %r15,%rdi
   113af:	48 89 c1             	mov    %rax,%rcx
   113b2:	4c 89 d5             	mov    %r10,%rbp
   113b5:	4d 85 ff             	test   %r15,%r15
   113b8:	74 21                	je     113db <addr2line::ResUnit<R>::parse_functions+0xc7b>
   113ba:	4c 8d 7f ff          	lea    -0x1(%rdi),%r15
   113be:	4b 8d 04 7f          	lea    (%r15,%r15,2),%rax
   113c2:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   113c7:	4c 8b 1c c2          	mov    (%rdx,%rax,8),%r11
   113cb:	48 8d 41 01          	lea    0x1(%rcx),%rax
   113cf:	4c 8d 55 e8          	lea    -0x18(%rbp),%r10
   113d3:	4c 39 db             	cmp    %r11,%rbx
   113d6:	4c 89 db             	mov    %r11,%rbx
   113d9:	72 d1                	jb     113ac <addr2line::ResUnit<R>::parse_functions+0xc4c>
   113db:	48 89 f2             	mov    %rsi,%rdx
   113de:	48 29 fa             	sub    %rdi,%rdx
   113e1:	0f 82 6f 06 00 00    	jb     11a56 <addr2line::ResUnit<R>::parse_functions+0x12f6>
   113e7:	4c 39 f6             	cmp    %r14,%rsi
   113ea:	0f 87 75 06 00 00    	ja     11a65 <addr2line::ResUnit<R>::parse_functions+0x1305>
   113f0:	48 f7 c2 fe ff ff ff 	test   $0xfffffffffffffffe,%rdx
   113f7:	0f 84 9a 00 00 00    	je     11497 <addr2line::ResUnit<R>::parse_functions+0xd37>
   113fd:	48 d1 e9             	shr    %rcx
   11400:	48 8b 84 24 28 01 00 	mov    0x128(%rsp),%rax
   11407:	00 
   11408:	4a 8d 1c c0          	lea    (%rax,%r8,8),%rbx
   1140c:	48 8b 45 10          	mov    0x10(%rbp),%rax
   11410:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   11415:	0f 10 45 00          	movups 0x0(%rbp),%xmm0
   11419:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
   1141e:	48 8b 43 10          	mov    0x10(%rbx),%rax
   11422:	0f 10 03             	movups (%rbx),%xmm0
   11425:	0f 11 45 00          	movups %xmm0,0x0(%rbp)
   11429:	48 89 45 10          	mov    %rax,0x10(%rbp)
   1142d:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   11432:	48 89 43 10          	mov    %rax,0x10(%rbx)
   11436:	0f 28 44 24 60       	movaps 0x60(%rsp),%xmm0
   1143b:	0f 11 03             	movups %xmm0,(%rbx)
   1143e:	48 83 c3 e8          	add    $0xffffffffffffffe8,%rbx
   11442:	48 83 c5 18          	add    $0x18,%rbp
   11446:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
   1144a:	75 c0                	jne    1140c <addr2line::ResUnit<R>::parse_functions+0xcac>
   1144c:	eb 49                	jmp    11497 <addr2line::ResUnit<R>::parse_functions+0xd37>
   1144e:	ba 01 00 00 00       	mov    $0x1,%edx
   11453:	45 31 ff             	xor    %r15d,%r15d
   11456:	e9 25 01 00 00       	jmpq   11580 <addr2line::ResUnit<R>::parse_functions+0xe20>
   1145b:	48 8d 04 76          	lea    (%rsi,%rsi,2),%rax
   1145f:	48 8b 8c 24 80 01 00 	mov    0x180(%rsp),%rcx
   11466:	00 
   11467:	48 8d 0c c1          	lea    (%rcx,%rax,8),%rcx
   1146b:	48 8d 7e fe          	lea    -0x2(%rsi),%rdi
   1146f:	31 d2                	xor    %edx,%edx
   11471:	48 39 d7             	cmp    %rdx,%rdi
   11474:	0f 84 00 01 00 00    	je     1157a <addr2line::ResUnit<R>::parse_functions+0xe1a>
   1147a:	48 8b 01             	mov    (%rcx),%rax
   1147d:	48 83 c2 01          	add    $0x1,%rdx
   11481:	48 83 c1 e8          	add    $0xffffffffffffffe8,%rcx
   11485:	48 39 c3             	cmp    %rax,%rbx
   11488:	48 89 c3             	mov    %rax,%rbx
   1148b:	73 e4                	jae    11471 <addr2line::ResUnit<R>::parse_functions+0xd11>
   1148d:	4c 89 cf             	mov    %r9,%rdi
   11490:	48 29 d7             	sub    %rdx,%rdi
   11493:	48 83 c2 01          	add    $0x1,%rdx
   11497:	48 83 fa 09          	cmp    $0x9,%rdx
   1149b:	0f 87 d4 00 00 00    	ja     11575 <addr2line::ResUnit<R>::parse_functions+0xe15>
   114a1:	48 85 ff             	test   %rdi,%rdi
   114a4:	0f 84 cb 00 00 00    	je     11575 <addr2line::ResUnit<R>::parse_functions+0xe15>
   114aa:	4c 39 f6             	cmp    %r14,%rsi
   114ad:	0f 87 c7 05 00 00    	ja     11a7a <addr2line::ResUnit<R>::parse_functions+0x131a>
   114b3:	48 8d 04 7f          	lea    (%rdi,%rdi,2),%rax
   114b7:	48 8b 8c 24 70 01 00 	mov    0x170(%rsp),%rcx
   114be:	00 
   114bf:	48 8d 04 c1          	lea    (%rcx,%rax,8),%rax
   114c3:	4c 8d 7f ff          	lea    -0x1(%rdi),%r15
   114c7:	48 89 f2             	mov    %rsi,%rdx
   114ca:	4c 29 fa             	sub    %r15,%rdx
   114cd:	0f 82 b3 05 00 00    	jb     11a86 <addr2line::ResUnit<R>::parse_functions+0x1326>
   114d3:	48 83 fa 02          	cmp    $0x2,%rdx
   114d7:	0f 82 80 00 00 00    	jb     1155d <addr2line::ResUnit<R>::parse_functions+0xdfd>
   114dd:	4b 8d 0c 7f          	lea    (%r15,%r15,2),%rcx
   114e1:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   114e6:	4c 8d 14 cb          	lea    (%rbx,%rcx,8),%r10
   114ea:	48 8d 2c 7f          	lea    (%rdi,%rdi,2),%rbp
   114ee:	4d 8b 02             	mov    (%r10),%r8
   114f1:	4c 39 04 eb          	cmp    %r8,(%rbx,%rbp,8)
   114f5:	73 66                	jae    1155d <addr2line::ResUnit<R>::parse_functions+0xdfd>
   114f7:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   114fc:	49 8d 1c eb          	lea    (%r11,%rbp,8),%rbx
   11500:	41 0f 10 44 cb 08    	movups 0x8(%r11,%rcx,8),%xmm0
   11506:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
   1150b:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
   1150f:	49 89 4a 10          	mov    %rcx,0x10(%r10)
   11513:	0f 10 03             	movups (%rbx),%xmm0
   11516:	41 0f 11 02          	movups %xmm0,(%r10)
   1151a:	48 83 fa 03          	cmp    $0x3,%rdx
   1151e:	72 31                	jb     11551 <addr2line::ResUnit<R>::parse_functions+0xdf1>
   11520:	4c 89 cd             	mov    %r9,%rbp
   11523:	48 89 c1             	mov    %rax,%rcx
   11526:	4d 39 42 30          	cmp    %r8,0x30(%r10)
   1152a:	73 25                	jae    11551 <addr2line::ResUnit<R>::parse_functions+0xdf1>
   1152c:	48 89 cb             	mov    %rcx,%rbx
   1152f:	48 8b 49 10          	mov    0x10(%rcx),%rcx
   11533:	48 89 4b f8          	mov    %rcx,-0x8(%rbx)
   11537:	0f 10 03             	movups (%rbx),%xmm0
   1153a:	0f 11 43 e8          	movups %xmm0,-0x18(%rbx)
   1153e:	48 83 c5 ff          	add    $0xffffffffffffffff,%rbp
   11542:	48 39 ef             	cmp    %rbp,%rdi
   11545:	74 0a                	je     11551 <addr2line::ResUnit<R>::parse_functions+0xdf1>
   11547:	48 8d 4b 18          	lea    0x18(%rbx),%rcx
   1154b:	4c 39 43 18          	cmp    %r8,0x18(%rbx)
   1154f:	72 db                	jb     1152c <addr2line::ResUnit<R>::parse_functions+0xdcc>
   11551:	4c 89 03             	mov    %r8,(%rbx)
   11554:	0f 28 44 24 60       	movaps 0x60(%rsp),%xmm0
   11559:	0f 11 43 08          	movups %xmm0,0x8(%rbx)
   1155d:	4d 85 ff             	test   %r15,%r15
   11560:	74 1e                	je     11580 <addr2line::ResUnit<R>::parse_functions+0xe20>
   11562:	48 83 c0 e8          	add    $0xffffffffffffffe8,%rax
   11566:	4c 89 ff             	mov    %r15,%rdi
   11569:	48 83 fa 0a          	cmp    $0xa,%rdx
   1156d:	0f 82 50 ff ff ff    	jb     114c3 <addr2line::ResUnit<R>::parse_functions+0xd63>
   11573:	eb 0b                	jmp    11580 <addr2line::ResUnit<R>::parse_functions+0xe20>
   11575:	49 89 ff             	mov    %rdi,%r15
   11578:	eb 06                	jmp    11580 <addr2line::ResUnit<R>::parse_functions+0xe20>
   1157a:	45 31 ff             	xor    %r15d,%r15d
   1157d:	48 89 f2             	mov    %rsi,%rdx
   11580:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   11585:	4c 89 fe             	mov    %r15,%rsi
   11588:	e8 33 7f ff ff       	callq  94c0 <alloc::vec::Vec<T>::push>
   1158d:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   11592:	48 83 f8 02          	cmp    $0x2,%rax
   11596:	0f 82 c3 fd ff ff    	jb     1135f <addr2line::ResUnit<R>::parse_functions+0xbff>
   1159c:	4c 8b 6c 24 40       	mov    0x40(%rsp),%r13
   115a1:	4c 89 bc 24 c8 00 00 	mov    %r15,0xc8(%rsp)
   115a8:	00 
   115a9:	4c 89 ac 24 c0 00 00 	mov    %r13,0xc0(%rsp)
   115b0:	00 
   115b1:	e9 b2 00 00 00       	jmpq   11668 <addr2line::ResUnit<R>::parse_functions+0xf08>
   115b6:	4c 89 ff             	mov    %r15,%rdi
   115b9:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
   115be:	4c 89 e6             	mov    %r12,%rsi
   115c1:	49 29 f6             	sub    %rsi,%r14
   115c4:	4c 89 f0             	mov    %r14,%rax
   115c7:	48 b9 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rcx
   115ce:	aa aa aa 
   115d1:	48 f7 e1             	mul    %rcx
   115d4:	48 d1 ea             	shr    %rdx
   115d7:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
   115db:	48 8d 14 52          	lea    (%rdx,%rdx,2),%rdx
   115df:	ff 15 13 47 03 00    	callq  *0x34713(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
   115e5:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   115ea:	48 03 4c 24 10       	add    0x10(%rsp),%rcx
   115ef:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   115f4:	48 8b 94 24 a8 00 00 	mov    0xa8(%rsp),%rdx
   115fb:	00 
   115fc:	48 89 02             	mov    %rax,(%rdx)
   115ff:	48 8b 84 24 d0 00 00 	mov    0xd0(%rsp),%rax
   11606:	00 
   11607:	48 89 08             	mov    %rcx,(%rax)
   1160a:	4c 8b ac 24 c0 00 00 	mov    0xc0(%rsp),%r13
   11611:	00 
   11612:	48 8b 84 24 d8 00 00 	mov    0xd8(%rsp),%rax
   11619:	00 
   1161a:	49 8d 7c 05 00       	lea    0x0(%r13,%rax,1),%rdi
   1161f:	4a 8d 34 28          	lea    (%rax,%r13,1),%rsi
   11623:	48 83 c6 10          	add    $0x10,%rsi
   11627:	48 8b 94 24 e0 00 00 	mov    0xe0(%rsp),%rdx
   1162e:	00 
   1162f:	48 f7 d2             	not    %rdx
   11632:	48 03 54 24 38       	add    0x38(%rsp),%rdx
   11637:	48 c1 e2 04          	shl    $0x4,%rdx
   1163b:	ff 15 27 48 03 00    	callq  *0x34827(%rip)        # 45e68 <memmove@GLIBC_2.2.5>
   11641:	48 8b 84 24 b0 00 00 	mov    0xb0(%rsp),%rax
   11648:	00 
   11649:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   1164e:	48 83 f8 01          	cmp    $0x1,%rax
   11652:	4c 8b b4 24 30 01 00 	mov    0x130(%rsp),%r14
   11659:	00 
   1165a:	4c 8b bc 24 c8 00 00 	mov    0xc8(%rsp),%r15
   11661:	00 
   11662:	0f 86 f7 fc ff ff    	jbe    1135f <addr2line::ResUnit<R>::parse_functions+0xbff>
   11668:	48 89 c6             	mov    %rax,%rsi
   1166b:	4c 8d 40 ff          	lea    -0x1(%rax),%r8
   1166f:	4c 89 c5             	mov    %r8,%rbp
   11672:	48 c1 e5 04          	shl    $0x4,%rbp
   11676:	49 83 7c 2d 00 00    	cmpq   $0x0,0x0(%r13,%rbp,1)
   1167c:	74 52                	je     116d0 <addr2line::ResUnit<R>::parse_functions+0xf70>
   1167e:	48 89 f2             	mov    %rsi,%rdx
   11681:	48 c1 e2 04          	shl    $0x4,%rdx
   11685:	4a 8b 44 2a e8       	mov    -0x18(%rdx,%r13,1),%rax
   1168a:	4d 8b 4c 2d 08       	mov    0x8(%r13,%rbp,1),%r9
   1168f:	4c 39 c8             	cmp    %r9,%rax
   11692:	76 3c                	jbe    116d0 <addr2line::ResUnit<R>::parse_functions+0xf70>
   11694:	48 83 fe 02          	cmp    $0x2,%rsi
   11698:	0f 86 c1 fc ff ff    	jbe    1135f <addr2line::ResUnit<R>::parse_functions+0xbff>
   1169e:	48 8d 7e fd          	lea    -0x3(%rsi),%rdi
   116a2:	48 89 f9             	mov    %rdi,%rcx
   116a5:	48 c1 e1 04          	shl    $0x4,%rcx
   116a9:	49 8b 4c 0d 08       	mov    0x8(%r13,%rcx,1),%rcx
   116ae:	49 8d 2c 01          	lea    (%r9,%rax,1),%rbp
   116b2:	48 39 e9             	cmp    %rbp,%rcx
   116b5:	76 34                	jbe    116eb <addr2line::ResUnit<R>::parse_functions+0xf8b>
   116b7:	48 83 fe 03          	cmp    $0x3,%rsi
   116bb:	0f 86 9e fc ff ff    	jbe    1135f <addr2line::ResUnit<R>::parse_functions+0xbff>
   116c1:	48 01 c8             	add    %rcx,%rax
   116c4:	4a 39 44 2a c8       	cmp    %rax,-0x38(%rdx,%r13,1)
   116c9:	76 20                	jbe    116eb <addr2line::ResUnit<R>::parse_functions+0xf8b>
   116cb:	e9 8f fc ff ff       	jmpq   1135f <addr2line::ResUnit<R>::parse_functions+0xbff>
   116d0:	48 83 fe 03          	cmp    $0x3,%rsi
   116d4:	72 1a                	jb     116f0 <addr2line::ResUnit<R>::parse_functions+0xf90>
   116d6:	48 8d 7e fd          	lea    -0x3(%rsi),%rdi
   116da:	48 89 f8             	mov    %rdi,%rax
   116dd:	48 c1 e0 04          	shl    $0x4,%rax
   116e1:	49 8b 4c 05 08       	mov    0x8(%r13,%rax,1),%rcx
   116e6:	4d 8b 4c 2d 08       	mov    0x8(%r13,%rbp,1),%r9
   116eb:	4c 39 c9             	cmp    %r9,%rcx
   116ee:	72 04                	jb     116f4 <addr2line::ResUnit<R>::parse_functions+0xf94>
   116f0:	48 8d 7e fe          	lea    -0x2(%rsi),%rdi
   116f4:	48 8d 47 01          	lea    0x1(%rdi),%rax
   116f8:	48 39 c6             	cmp    %rax,%rsi
   116fb:	0f 86 f5 02 00 00    	jbe    119f6 <addr2line::ResUnit<R>::parse_functions+0x1296>
   11701:	48 39 fe             	cmp    %rdi,%rsi
   11704:	0f 86 01 03 00 00    	jbe    11a0b <addr2line::ResUnit<R>::parse_functions+0x12ab>
   1170a:	48 89 c1             	mov    %rax,%rcx
   1170d:	48 c1 e1 04          	shl    $0x4,%rcx
   11711:	49 8b 5c 0d 00       	mov    0x0(%r13,%rcx,1),%rbx
   11716:	48 c1 e7 04          	shl    $0x4,%rdi
   1171a:	49 8b 54 3d 08       	mov    0x8(%r13,%rdi,1),%rdx
   1171f:	49 8b 6c 3d 00       	mov    0x0(%r13,%rdi,1),%rbp
   11724:	48 01 d5             	add    %rdx,%rbp
   11727:	49 89 ec             	mov    %rbp,%r12
   1172a:	49 29 dc             	sub    %rbx,%r12
   1172d:	0f 82 e7 02 00 00    	jb     11a1a <addr2line::ResUnit<R>::parse_functions+0x12ba>
   11733:	4c 39 f5             	cmp    %r14,%rbp
   11736:	0f 87 f3 02 00 00    	ja     11a2f <addr2line::ResUnit<R>::parse_functions+0x12cf>
   1173c:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
   11741:	48 89 84 24 e0 00 00 	mov    %rax,0xe0(%rsp)
   11748:	00 
   11749:	48 89 74 24 38       	mov    %rsi,0x38(%rsp)
   1174e:	4c 89 84 24 b0 00 00 	mov    %r8,0xb0(%rsp)
   11755:	00 
   11756:	48 89 8c 24 d8 00 00 	mov    %rcx,0xd8(%rsp)
   1175d:	00 
   1175e:	49 8b 54 0d 08       	mov    0x8(%r13,%rcx,1),%rdx
   11763:	49 8d 44 3d 00       	lea    0x0(%r13,%rdi,1),%rax
   11768:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
   1176f:	00 
   11770:	49 8d 44 3d 08       	lea    0x8(%r13,%rdi,1),%rax
   11775:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
   1177c:	00 
   1177d:	48 89 5c 24 30       	mov    %rbx,0x30(%rsp)
   11782:	48 8d 04 5b          	lea    (%rbx,%rbx,2),%rax
   11786:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1178b:	4c 8d 3c c1          	lea    (%rcx,%rax,8),%r15
   1178f:	48 8d 04 52          	lea    (%rdx,%rdx,2),%rax
   11793:	4d 8d 2c c7          	lea    (%r15,%rax,8),%r13
   11797:	48 8d 6c 6d 00       	lea    0x0(%rbp,%rbp,2),%rbp
   1179c:	4c 89 e3             	mov    %r12,%rbx
   1179f:	48 29 d3             	sub    %rdx,%rbx
   117a2:	48 39 d3             	cmp    %rdx,%rbx
   117a5:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   117aa:	0f 83 9f 00 00 00    	jae    1184f <addr2line::ResUnit<R>::parse_functions+0x10ef>
   117b0:	48 8d 04 dd 00 00 00 	lea    0x0(,%rbx,8),%rax
   117b7:	00 
   117b8:	4c 8d 34 40          	lea    (%rax,%rax,2),%r14
   117bc:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
   117c1:	4c 89 e7             	mov    %r12,%rdi
   117c4:	4c 89 ee             	mov    %r13,%rsi
   117c7:	4c 89 f2             	mov    %r14,%rdx
   117ca:	ff 15 28 45 03 00    	callq  *0x34528(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
   117d0:	4d 01 e6             	add    %r12,%r14
   117d3:	48 83 7c 24 10 00    	cmpq   $0x0,0x10(%rsp)
   117d9:	0f 8e 1a 01 00 00    	jle    118f9 <addr2line::ResUnit<R>::parse_functions+0x1199>
   117df:	48 85 db             	test   %rbx,%rbx
   117e2:	0f 8e 11 01 00 00    	jle    118f9 <addr2line::ResUnit<R>::parse_functions+0x1199>
   117e8:	48 8b 84 24 28 01 00 	mov    0x128(%rsp),%rax
   117ef:	00 
   117f0:	48 8d 04 e8          	lea    (%rax,%rbp,8),%rax
   117f4:	4c 89 ef             	mov    %r13,%rdi
   117f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   117fe:	00 00 
   11800:	49 8b 4e e8          	mov    -0x18(%r14),%rcx
   11804:	48 3b 4f e8          	cmp    -0x18(%rdi),%rcx
   11808:	73 16                	jae    11820 <addr2line::ResUnit<R>::parse_functions+0x10c0>
   1180a:	48 83 c7 e8          	add    $0xffffffffffffffe8,%rdi
   1180e:	48 89 f9             	mov    %rdi,%rcx
   11811:	e9 11 00 00 00       	jmpq   11827 <addr2line::ResUnit<R>::parse_functions+0x10c7>
   11816:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1181d:	00 00 00 
   11820:	49 83 c6 e8          	add    $0xffffffffffffffe8,%r14
   11824:	4c 89 f1             	mov    %r14,%rcx
   11827:	48 8b 51 10          	mov    0x10(%rcx),%rdx
   1182b:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1182f:	0f 10 01             	movups (%rcx),%xmm0
   11832:	0f 11 00             	movups %xmm0,(%rax)
   11835:	4d 39 e6             	cmp    %r12,%r14
   11838:	0f 86 80 fd ff ff    	jbe    115be <addr2line::ResUnit<R>::parse_functions+0xe5e>
   1183e:	48 83 c0 e8          	add    $0xffffffffffffffe8,%rax
   11842:	4c 89 e6             	mov    %r12,%rsi
   11845:	49 39 ff             	cmp    %rdi,%r15
   11848:	72 b6                	jb     11800 <addr2line::ResUnit<R>::parse_functions+0x10a0>
   1184a:	e9 72 fd ff ff       	jmpq   115c1 <addr2line::ResUnit<R>::parse_functions+0xe61>
   1184f:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
   11856:	00 
   11857:	4c 8d 34 40          	lea    (%rax,%rax,2),%r14
   1185b:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   11860:	48 89 df             	mov    %rbx,%rdi
   11863:	4c 89 fe             	mov    %r15,%rsi
   11866:	4c 89 f2             	mov    %r14,%rdx
   11869:	ff 15 89 44 03 00    	callq  *0x34489(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
   1186f:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   11874:	49 01 de             	add    %rbx,%r14
   11877:	48 85 c0             	test   %rax,%rax
   1187a:	0f 8e 36 fd ff ff    	jle    115b6 <addr2line::ResUnit<R>::parse_functions+0xe56>
   11880:	49 39 c4             	cmp    %rax,%r12
   11883:	0f 8e 2d fd ff ff    	jle    115b6 <addr2line::ResUnit<R>::parse_functions+0xe56>
   11889:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1188e:	48 8d 04 e8          	lea    (%rax,%rbp,8),%rax
   11892:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
   11897:	4c 89 e6             	mov    %r12,%rsi
   1189a:	4c 89 e1             	mov    %r12,%rcx
   1189d:	0f 1f 00             	nopl   (%rax)
   118a0:	49 8b 55 00          	mov    0x0(%r13),%rdx
   118a4:	48 3b 11             	cmp    (%rcx),%rdx
   118a7:	73 17                	jae    118c0 <addr2line::ResUnit<R>::parse_functions+0x1160>
   118a9:	49 8d 55 18          	lea    0x18(%r13),%rdx
   118ad:	48 89 cb             	mov    %rcx,%rbx
   118b0:	4c 89 e9             	mov    %r13,%rcx
   118b3:	e9 12 00 00 00       	jmpq   118ca <addr2line::ResUnit<R>::parse_functions+0x116a>
   118b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   118bf:	00 
   118c0:	48 8d 71 18          	lea    0x18(%rcx),%rsi
   118c4:	48 89 f3             	mov    %rsi,%rbx
   118c7:	4c 89 ea             	mov    %r13,%rdx
   118ca:	49 8d 7f 18          	lea    0x18(%r15),%rdi
   118ce:	48 8b 69 10          	mov    0x10(%rcx),%rbp
   118d2:	49 89 6f 10          	mov    %rbp,0x10(%r15)
   118d6:	0f 10 01             	movups (%rcx),%xmm0
   118d9:	41 0f 11 07          	movups %xmm0,(%r15)
   118dd:	4c 39 f3             	cmp    %r14,%rbx
   118e0:	0f 83 db fc ff ff    	jae    115c1 <addr2line::ResUnit<R>::parse_functions+0xe61>
   118e6:	48 89 d9             	mov    %rbx,%rcx
   118e9:	49 89 ff             	mov    %rdi,%r15
   118ec:	49 89 d5             	mov    %rdx,%r13
   118ef:	48 39 c2             	cmp    %rax,%rdx
   118f2:	72 ac                	jb     118a0 <addr2line::ResUnit<R>::parse_functions+0x1140>
   118f4:	e9 c8 fc ff ff       	jmpq   115c1 <addr2line::ResUnit<R>::parse_functions+0xe61>
   118f9:	4c 89 ef             	mov    %r13,%rdi
   118fc:	e9 bd fc ff ff       	jmpq   115be <addr2line::ResUnit<R>::parse_functions+0xe5e>
   11901:	48 8b 74 24 48       	mov    0x48(%rsp),%rsi
   11906:	48 85 f6             	test   %rsi,%rsi
   11909:	74 1b                	je     11926 <addr2line::ResUnit<R>::parse_functions+0x11c6>
   1190b:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   11910:	48 85 ff             	test   %rdi,%rdi
   11913:	74 11                	je     11926 <addr2line::ResUnit<R>::parse_functions+0x11c6>
   11915:	48 c1 e6 04          	shl    $0x4,%rsi
   11919:	74 0b                	je     11926 <addr2line::ResUnit<R>::parse_functions+0x11c6>
   1191b:	ba 08 00 00 00       	mov    $0x8,%edx
   11920:	ff 15 d2 42 03 00    	callq  *0x342d2(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   11926:	48 83 bc 24 b8 00 00 	cmpq   $0x18,0xb8(%rsp)
   1192d:	00 18 
   1192f:	72 23                	jb     11954 <addr2line::ResUnit<R>::parse_functions+0x11f4>
   11931:	48 8b 84 24 68 01 00 	mov    0x168(%rsp),%rax
   11938:	00 
   11939:	48 c1 e0 03          	shl    $0x3,%rax
   1193d:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
   11941:	48 85 f6             	test   %rsi,%rsi
   11944:	74 0e                	je     11954 <addr2line::ResUnit<R>::parse_functions+0x11f4>
   11946:	ba 08 00 00 00       	mov    $0x8,%edx
   1194b:	4c 89 e7             	mov    %r12,%rdi
   1194e:	ff 15 a4 42 03 00    	callq  *0x342a4(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   11954:	4c 8b a4 24 38 01 00 	mov    0x138(%rsp),%r12
   1195b:	00 
   1195c:	48 8b 94 24 40 01 00 	mov    0x140(%rsp),%rdx
   11963:	00 
   11964:	4c 8b bc 24 48 01 00 	mov    0x148(%rsp),%r15
   1196b:	00 
   1196c:	4c 39 fa             	cmp    %r15,%rdx
   1196f:	0f 86 f2 f5 ff ff    	jbe    10f67 <addr2line::ResUnit<R>::parse_functions+0x807>
   11975:	4d 85 e4             	test   %r12,%r12
   11978:	0f 84 e9 f5 ff ff    	je     10f67 <addr2line::ResUnit<R>::parse_functions+0x807>
   1197e:	48 c1 e2 03          	shl    $0x3,%rdx
   11982:	48 8d 34 d2          	lea    (%rdx,%rdx,8),%rsi
   11986:	4a 8d 04 fd 00 00 00 	lea    0x0(,%r15,8),%rax
   1198d:	00 
   1198e:	48 8d 2c c0          	lea    (%rax,%rax,8),%rbp
   11992:	48 85 ed             	test   %rbp,%rbp
   11995:	74 32                	je     119c9 <addr2line::ResUnit<R>::parse_functions+0x1269>
   11997:	ba 08 00 00 00       	mov    $0x8,%edx
   1199c:	4c 89 e7             	mov    %r12,%rdi
   1199f:	48 89 e9             	mov    %rbp,%rcx
   119a2:	ff 15 d0 45 03 00    	callq  *0x345d0(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
   119a8:	49 89 c6             	mov    %rax,%r14
   119ab:	48 85 c0             	test   %rax,%rax
   119ae:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
   119b3:	0f 85 b6 f5 ff ff    	jne    10f6f <addr2line::ResUnit<R>::parse_functions+0x80f>
   119b9:	be 08 00 00 00       	mov    $0x8,%esi
   119be:	48 89 ef             	mov    %rbp,%rdi
   119c1:	ff 15 59 41 03 00    	callq  *0x34159(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   119c7:	0f 0b                	ud2    
   119c9:	41 be 08 00 00 00    	mov    $0x8,%r14d
   119cf:	48 85 f6             	test   %rsi,%rsi
   119d2:	0f 84 92 f5 ff ff    	je     10f6a <addr2line::ResUnit<R>::parse_functions+0x80a>
   119d8:	ba 08 00 00 00       	mov    $0x8,%edx
   119dd:	4c 89 e7             	mov    %r12,%rdi
   119e0:	ff 15 12 42 03 00    	callq  *0x34212(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   119e6:	e9 7f f5 ff ff       	jmpq   10f6a <addr2line::ResUnit<R>::parse_functions+0x80a>
   119eb:	ff 15 ef 40 03 00    	callq  *0x340ef(%rip)        # 45ae0 <_GLOBAL_OFFSET_TABLE_+0x158>
   119f1:	e9 a0 00 00 00       	jmpq   11a96 <addr2line::ResUnit<R>::parse_functions+0x1336>
   119f6:	48 8d 15 03 1f 03 00 	lea    0x31f03(%rip),%rdx        # 43900 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3c8>
   119fd:	48 89 c7             	mov    %rax,%rdi
   11a00:	ff 15 8a 42 03 00    	callq  *0x3428a(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   11a06:	e9 8b 00 00 00       	jmpq   11a96 <addr2line::ResUnit<R>::parse_functions+0x1336>
   11a0b:	48 8d 15 06 1f 03 00 	lea    0x31f06(%rip),%rdx        # 43918 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3e0>
   11a12:	ff 15 78 42 03 00    	callq  *0x34278(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   11a18:	eb 7c                	jmp    11a96 <addr2line::ResUnit<R>::parse_functions+0x1336>
   11a1a:	48 8d 15 0f 1f 03 00 	lea    0x31f0f(%rip),%rdx        # 43930 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3f8>
   11a21:	48 89 df             	mov    %rbx,%rdi
   11a24:	48 89 ee             	mov    %rbp,%rsi
   11a27:	ff 15 73 44 03 00    	callq  *0x34473(%rip)        # 45ea0 <_GLOBAL_OFFSET_TABLE_+0x518>
   11a2d:	eb 67                	jmp    11a96 <addr2line::ResUnit<R>::parse_functions+0x1336>
   11a2f:	48 8d 15 fa 1e 03 00 	lea    0x31efa(%rip),%rdx        # 43930 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3f8>
   11a36:	48 89 ef             	mov    %rbp,%rdi
   11a39:	4c 89 f6             	mov    %r14,%rsi
   11a3c:	ff 15 e6 3f 03 00    	callq  *0x33fe6(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   11a42:	eb 52                	jmp    11a96 <addr2line::ResUnit<R>::parse_functions+0x1336>
   11a44:	48 8d 15 6d 1e 03 00 	lea    0x31e6d(%rip),%rdx        # 438b8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x380>
   11a4b:	4c 89 f6             	mov    %r14,%rsi
   11a4e:	ff 15 9c 43 03 00    	callq  *0x3439c(%rip)        # 45df0 <_GLOBAL_OFFSET_TABLE_+0x468>
   11a54:	eb 40                	jmp    11a96 <addr2line::ResUnit<R>::parse_functions+0x1336>
   11a56:	48 8d 15 73 1e 03 00 	lea    0x31e73(%rip),%rdx        # 438d0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x398>
   11a5d:	ff 15 3d 44 03 00    	callq  *0x3443d(%rip)        # 45ea0 <_GLOBAL_OFFSET_TABLE_+0x518>
   11a63:	eb 31                	jmp    11a96 <addr2line::ResUnit<R>::parse_functions+0x1336>
   11a65:	48 8d 15 64 1e 03 00 	lea    0x31e64(%rip),%rdx        # 438d0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x398>
   11a6c:	48 89 f7             	mov    %rsi,%rdi
   11a6f:	4c 89 f6             	mov    %r14,%rsi
   11a72:	ff 15 b0 3f 03 00    	callq  *0x33fb0(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   11a78:	eb 1c                	jmp    11a96 <addr2line::ResUnit<R>::parse_functions+0x1336>
   11a7a:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   11a7e:	49 89 ff             	mov    %rdi,%r15
   11a81:	48 39 fe             	cmp    %rdi,%rsi
   11a84:	73 12                	jae    11a98 <addr2line::ResUnit<R>::parse_functions+0x1338>
   11a86:	48 8d 15 5b 1e 03 00 	lea    0x31e5b(%rip),%rdx        # 438e8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3b0>
   11a8d:	4c 89 ff             	mov    %r15,%rdi
   11a90:	ff 15 0a 44 03 00    	callq  *0x3440a(%rip)        # 45ea0 <_GLOBAL_OFFSET_TABLE_+0x518>
   11a96:	0f 0b                	ud2    
   11a98:	48 8d 15 49 1e 03 00 	lea    0x31e49(%rip),%rdx        # 438e8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3b0>
   11a9f:	48 89 f7             	mov    %rsi,%rdi
   11aa2:	48 8b b4 24 30 01 00 	mov    0x130(%rsp),%rsi
   11aa9:	00 
   11aaa:	ff 15 78 3f 03 00    	callq  *0x33f78(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   11ab0:	eb e4                	jmp    11a96 <addr2line::ResUnit<R>::parse_functions+0x1336>
   11ab2:	ff 15 28 40 03 00    	callq  *0x34028(%rip)        # 45ae0 <_GLOBAL_OFFSET_TABLE_+0x158>
   11ab8:	eb dc                	jmp    11a96 <addr2line::ResUnit<R>::parse_functions+0x1336>
   11aba:	48 8b bc 24 b8 00 00 	mov    0xb8(%rsp),%rdi
   11ac1:	00 
   11ac2:	48 89 ee             	mov    %rbp,%rsi
   11ac5:	ff 15 55 40 03 00    	callq  *0x34055(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   11acb:	0f 0b                	ud2    
   11acd:	eb 35                	jmp    11b04 <addr2line::ResUnit<R>::parse_functions+0x13a4>
   11acf:	48 89 c3             	mov    %rax,%rbx
   11ad2:	48 8d 7c 24 60       	lea    0x60(%rsp),%rdi
   11ad7:	e8 74 57 ff ff       	callq  7250 <core::ptr::drop_in_place>
   11adc:	eb 29                	jmp    11b07 <addr2line::ResUnit<R>::parse_functions+0x13a7>
   11ade:	eb 02                	jmp    11ae2 <addr2line::ResUnit<R>::parse_functions+0x1382>
   11ae0:	eb 22                	jmp    11b04 <addr2line::ResUnit<R>::parse_functions+0x13a4>
   11ae2:	48 89 c3             	mov    %rax,%rbx
   11ae5:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   11aea:	e8 e1 4f ff ff       	callq  6ad0 <core::ptr::drop_in_place>
   11aef:	48 8d bc 24 50 01 00 	lea    0x150(%rsp),%rdi
   11af6:	00 
   11af7:	e8 a4 4f ff ff       	callq  6aa0 <core::ptr::drop_in_place>
   11afc:	eb 09                	jmp    11b07 <addr2line::ResUnit<R>::parse_functions+0x13a7>
   11afe:	eb 04                	jmp    11b04 <addr2line::ResUnit<R>::parse_functions+0x13a4>
   11b00:	eb 02                	jmp    11b04 <addr2line::ResUnit<R>::parse_functions+0x13a4>
   11b02:	eb 00                	jmp    11b04 <addr2line::ResUnit<R>::parse_functions+0x13a4>
   11b04:	48 89 c3             	mov    %rax,%rbx
   11b07:	48 8d bc 24 e8 00 00 	lea    0xe8(%rsp),%rdi
   11b0e:	00 
   11b0f:	e8 8c 4f ff ff       	callq  6aa0 <core::ptr::drop_in_place>
   11b14:	48 8d bc 24 38 01 00 	lea    0x138(%rsp),%rdi
   11b1b:	00 
   11b1c:	e8 ef 47 ff ff       	callq  6310 <core::ptr::drop_in_place>
   11b21:	48 89 df             	mov    %rbx,%rdi
   11b24:	e8 27 35 ff ff       	callq  5050 <_Unwind_Resume@plt>
   11b29:	0f 0b                	ud2    
   11b2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000011b30 <addr2line::Function<R>::parse_children>:
   11b30:	55                   	push   %rbp
   11b31:	41 57                	push   %r15
   11b33:	41 56                	push   %r14
   11b35:	41 55                	push   %r13
   11b37:	41 54                	push   %r12
   11b39:	53                   	push   %rbx
   11b3a:	48 81 ec 48 01 00 00 	sub    $0x148,%rsp
   11b41:	4c 8b 77 20          	mov    0x20(%rdi),%r14
   11b45:	49 39 f6             	cmp    %rsi,%r14
   11b48:	0f 8e 0c 0e 00 00    	jle    1295a <addr2line::Function<R>::parse_children+0xe2a>
   11b4e:	4d 89 cc             	mov    %r9,%r12
   11b51:	49 89 f5             	mov    %rsi,%r13
   11b54:	48 89 fb             	mov    %rdi,%rbx
   11b57:	48 89 54 24 68       	mov    %rdx,0x68(%rsp)
   11b5c:	48 89 4c 24 70       	mov    %rcx,0x70(%rsp)
   11b61:	4c 89 84 24 f8 00 00 	mov    %r8,0xf8(%rsp)
   11b68:	00 
   11b69:	4c 8b 94 24 90 01 00 	mov    0x190(%rsp),%r10
   11b70:	00 
   11b71:	4c 8b 9c 24 88 01 00 	mov    0x188(%rsp),%r11
   11b78:	00 
   11b79:	48 8b 47 10          	mov    0x10(%rdi),%rax
   11b7d:	31 c9                	xor    %ecx,%ecx
   11b7f:	80 78 21 08          	cmpb   $0x8,0x21(%rax)
   11b83:	0f 94 c1             	sete   %cl
   11b86:	48 c1 e1 03          	shl    $0x3,%rcx
   11b8a:	48 03 08             	add    (%rax),%rcx
   11b8d:	48 8b 17             	mov    (%rdi),%rdx
   11b90:	48 8b 70 18          	mov    0x18(%rax),%rsi
   11b94:	48 03 70 10          	add    0x10(%rax),%rsi
   11b98:	48 29 f1             	sub    %rsi,%rcx
   11b9b:	4c 8d 0c 11          	lea    (%rcx,%rdx,1),%r9
   11b9f:	49 83 c1 04          	add    $0x4,%r9
   11ba3:	4c 8d 05 96 7f 01 00 	lea    0x17f96(%rip),%r8        # 29b40 <<gimli::read::abbrev::Attributes as core::ops::deref::Deref>::deref>
   11baa:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   11bae:	41 bf 13 00 00 00    	mov    $0x13,%r15d
   11bb4:	48 85 f6             	test   %rsi,%rsi
   11bb7:	0f 84 af 0d 00 00    	je     1296c <addr2line::Function<R>::parse_children+0xe3c>
   11bbd:	48 83 c6 ff          	add    $0xffffffffffffffff,%rsi
   11bc1:	31 c0                	xor    %eax,%eax
   11bc3:	31 c9                	xor    %ecx,%ecx
   11bc5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   11bcc:	00 00 00 
   11bcf:	90                   	nop
   11bd0:	48 8d 7a 01          	lea    0x1(%rdx),%rdi
   11bd4:	48 89 3b             	mov    %rdi,(%rbx)
   11bd7:	48 89 73 08          	mov    %rsi,0x8(%rbx)
   11bdb:	0f b6 12             	movzbl (%rdx),%edx
   11bde:	83 f9 3f             	cmp    $0x3f,%ecx
   11be1:	75 09                	jne    11bec <addr2line::Function<R>::parse_children+0xbc>
   11be3:	80 fa 01             	cmp    $0x1,%dl
   11be6:	0f 87 73 0d 00 00    	ja     1295f <addr2line::Function<R>::parse_children+0xe2f>
   11bec:	0f b6 ea             	movzbl %dl,%ebp
   11bef:	89 ea                	mov    %ebp,%edx
   11bf1:	83 e2 7f             	and    $0x7f,%edx
   11bf4:	48 d3 e2             	shl    %cl,%rdx
   11bf7:	48 09 d0             	or     %rdx,%rax
   11bfa:	40 84 ed             	test   %bpl,%bpl
   11bfd:	79 11                	jns    11c10 <addr2line::Function<R>::parse_children+0xe0>
   11bff:	83 c1 07             	add    $0x7,%ecx
   11c02:	48 89 fa             	mov    %rdi,%rdx
   11c05:	48 83 c6 ff          	add    $0xffffffffffffffff,%rsi
   11c09:	72 c5                	jb     11bd0 <addr2line::Function<R>::parse_children+0xa0>
   11c0b:	e9 59 0d 00 00       	jmpq   12969 <addr2line::Function<R>::parse_children+0xe39>
   11c10:	48 85 c0             	test   %rax,%rax
   11c13:	0f 84 a1 00 00 00    	je     11cba <addr2line::Function<R>::parse_children+0x18a>
   11c19:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   11c1d:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   11c21:	48 3b 4a 10          	cmp    0x10(%rdx),%rcx
   11c25:	0f 83 9c 00 00 00    	jae    11cc7 <addr2line::Function<R>::parse_children+0x197>
   11c2b:	48 6b f9 70          	imul   $0x70,%rcx,%rdi
   11c2f:	48 03 3a             	add    (%rdx),%rdi
   11c32:	80 7f 6a 01          	cmpb   $0x1,0x6a(%rdi)
   11c36:	75 08                	jne    11c40 <addr2line::Function<R>::parse_children+0x110>
   11c38:	49 8d 46 01          	lea    0x1(%r14),%rax
   11c3c:	48 89 43 20          	mov    %rax,0x20(%rbx)
   11c40:	0f b7 47 68          	movzwl 0x68(%rdi),%eax
   11c44:	66 83 f8 1d          	cmp    $0x1d,%ax
   11c48:	0f 84 36 01 00 00    	je     11d84 <addr2line::Function<R>::parse_children+0x254>
   11c4e:	48 83 c7 08          	add    $0x8,%rdi
   11c52:	66 83 f8 2e          	cmp    $0x2e,%ax
   11c56:	0f 85 cd 01 00 00    	jne    11e29 <addr2line::Function<R>::parse_children+0x2f9>
   11c5c:	41 ff d0             	callq  *%r8
   11c5f:	48 85 d2             	test   %rdx,%rdx
   11c62:	0f 84 78 0a 00 00    	je     126e0 <addr2line::Function<R>::parse_children+0xbb0>
   11c68:	48 89 c5             	mov    %rax,%rbp
   11c6b:	49 89 d7             	mov    %rdx,%r15
   11c6e:	49 c1 e7 04          	shl    $0x4,%r15
   11c72:	49 01 c7             	add    %rax,%r15
   11c75:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   11c7c:	00 00 00 
   11c7f:	90                   	nop
   11c80:	48 8b 4d 00          	mov    0x0(%rbp),%rcx
   11c84:	48 8b 43 10          	mov    0x10(%rbx),%rax
   11c88:	8b 50 20             	mov    0x20(%rax),%edx
   11c8b:	44 0f b7 4d 0a       	movzwl 0xa(%rbp),%r9d
   11c90:	44 8b 45 08          	mov    0x8(%rbp),%r8d
   11c94:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   11c99:	48 89 de             	mov    %rbx,%rsi
   11c9c:	e8 1f 8c ff ff       	callq  a8c0 <gimli::read::unit::parse_attribute>
   11ca1:	83 7c 24 10 01       	cmpl   $0x1,0x10(%rsp)
   11ca6:	0f 84 ad 0b 00 00    	je     12859 <addr2line::Function<R>::parse_children+0xd29>
   11cac:	48 83 c5 10          	add    $0x10,%rbp
   11cb0:	4c 39 fd             	cmp    %r15,%rbp
   11cb3:	75 cb                	jne    11c80 <addr2line::Function<R>::parse_children+0x150>
   11cb5:	e9 26 0a 00 00       	jmpq   126e0 <addr2line::Function<R>::parse_children+0xbb0>
   11cba:	49 83 c6 ff          	add    $0xffffffffffffffff,%r14
   11cbe:	4c 89 73 20          	mov    %r14,0x20(%rbx)
   11cc2:	e9 ef 0b 00 00       	jmpq   128b6 <addr2line::Function<R>::parse_children+0xd86>
   11cc7:	48 8b 4a 18          	mov    0x18(%rdx),%rcx
   11ccb:	41 bf 12 00 00 00    	mov    $0x12,%r15d
   11cd1:	48 85 c9             	test   %rcx,%rcx
   11cd4:	0f 84 8b 0c 00 00    	je     12965 <addr2line::Function<R>::parse_children+0xe35>
   11cda:	4c 89 64 24 08       	mov    %r12,0x8(%rsp)
   11cdf:	4c 89 8c 24 a0 00 00 	mov    %r9,0xa0(%rsp)
   11ce6:	00 
   11ce7:	4c 89 ac 24 d8 00 00 	mov    %r13,0xd8(%rsp)
   11cee:	00 
   11cef:	4d 89 c4             	mov    %r8,%r12
   11cf2:	4c 8b 42 20          	mov    0x20(%rdx),%r8
   11cf6:	44 0f b7 89 32 05 00 	movzwl 0x532(%rcx),%r9d
   11cfd:	00 
   11cfe:	48 8d 79 f0          	lea    -0x10(%rcx),%rdi
   11d02:	4c 89 cd             	mov    %r9,%rbp
   11d05:	48 f7 dd             	neg    %rbp
   11d08:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
   11d0f:	48 8d 14 2e          	lea    (%rsi,%rbp,1),%rdx
   11d13:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   11d17:	74 2a                	je     11d43 <addr2line::Function<R>::parse_children+0x213>
   11d19:	31 d2                	xor    %edx,%edx
   11d1b:	48 39 44 f1 10       	cmp    %rax,0x10(%rcx,%rsi,8)
   11d20:	0f 95 c2             	setne  %dl
   11d23:	49 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%r13
   11d2a:	49 0f 47 d5          	cmova  %r13,%rdx
   11d2e:	48 83 c6 01          	add    $0x1,%rsi
   11d32:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   11d36:	74 0e                	je     11d46 <addr2line::Function<R>::parse_children+0x216>
   11d38:	48 83 c7 70          	add    $0x70,%rdi
   11d3c:	48 85 d2             	test   %rdx,%rdx
   11d3f:	75 ce                	jne    11d0f <addr2line::Function<R>::parse_children+0x1df>
   11d41:	eb 1a                	jmp    11d5d <addr2line::Function<R>::parse_children+0x22d>
   11d43:	4c 89 ce             	mov    %r9,%rsi
   11d46:	4d 85 c0             	test   %r8,%r8
   11d49:	0f 84 16 0c 00 00    	je     12965 <addr2line::Function<R>::parse_children+0xe35>
   11d4f:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   11d53:	48 8b 8c f1 38 05 00 	mov    0x538(%rcx,%rsi,8),%rcx
   11d5a:	00 
   11d5b:	eb 99                	jmp    11cf6 <addr2line::Function<R>::parse_children+0x1c6>
   11d5d:	4d 89 e0             	mov    %r12,%r8
   11d60:	4c 8b ac 24 d8 00 00 	mov    0xd8(%rsp),%r13
   11d67:	00 
   11d68:	4c 8b 8c 24 a0 00 00 	mov    0xa0(%rsp),%r9
   11d6f:	00 
   11d70:	4c 8b 64 24 08       	mov    0x8(%rsp),%r12
   11d75:	80 7f 6a 01          	cmpb   $0x1,0x6a(%rdi)
   11d79:	0f 84 b9 fe ff ff    	je     11c38 <addr2line::Function<R>::parse_children+0x108>
   11d7f:	e9 bc fe ff ff       	jmpq   11c40 <addr2line::Function<R>::parse_children+0x110>
   11d84:	4c 89 8c 24 a0 00 00 	mov    %r9,0xa0(%rsp)
   11d8b:	00 
   11d8c:	4c 89 64 24 08       	mov    %r12,0x8(%rsp)
   11d91:	4c 89 9c 24 00 01 00 	mov    %r11,0x100(%rsp)
   11d98:	00 
   11d99:	4c 89 94 24 08 01 00 	mov    %r10,0x108(%rsp)
   11da0:	00 
   11da1:	48 83 c7 08          	add    $0x8,%rdi
   11da5:	41 ff d0             	callq  *%r8
   11da8:	48 85 d2             	test   %rdx,%rdx
   11dab:	0f 84 ec 00 00 00    	je     11e9d <addr2line::Function<R>::parse_children+0x36d>
   11db1:	49 89 c4             	mov    %rax,%r12
   11db4:	48 c1 e2 04          	shl    $0x4,%rdx
   11db8:	48 01 c2             	add    %rax,%rdx
   11dbb:	48 89 94 24 d8 00 00 	mov    %rdx,0xd8(%rsp)
   11dc2:	00 
   11dc3:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   11dc8:	48 8b 88 c0 00 00 00 	mov    0xc0(%rax),%rcx
   11dcf:	48 89 8c 24 e8 00 00 	mov    %rcx,0xe8(%rsp)
   11dd6:	00 
   11dd7:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax
   11dde:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
   11de5:	00 
   11de6:	31 c0                	xor    %eax,%eax
   11de8:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   11def:	00 
   11df0:	31 c0                	xor    %eax,%eax
   11df2:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
   11df9:	00 
   11dfa:	31 c0                	xor    %eax,%eax
   11dfc:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
   11e03:	00 
   11e04:	45 31 ff             	xor    %r15d,%r15d
   11e07:	31 c0                	xor    %eax,%eax
   11e09:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   11e0e:	31 c0                	xor    %eax,%eax
   11e10:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
   11e17:	00 
   11e18:	31 c0                	xor    %eax,%eax
   11e1a:	48 89 84 24 b0 00 00 	mov    %rax,0xb0(%rsp)
   11e21:	00 
   11e22:	31 ed                	xor    %ebp,%ebp
   11e24:	e9 79 01 00 00       	jmpq   11fa2 <addr2line::Function<R>::parse_children+0x472>
   11e29:	4d 89 c7             	mov    %r8,%r15
   11e2c:	41 ff d0             	callq  *%r8
   11e2f:	48 85 d2             	test   %rdx,%rdx
   11e32:	74 51                	je     11e85 <addr2line::Function<R>::parse_children+0x355>
   11e34:	48 89 c5             	mov    %rax,%rbp
   11e37:	49 89 d6             	mov    %rdx,%r14
   11e3a:	49 c1 e6 04          	shl    $0x4,%r14
   11e3e:	49 01 c6             	add    %rax,%r14
   11e41:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   11e48:	00 00 00 
   11e4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11e50:	48 8b 4d 00          	mov    0x0(%rbp),%rcx
   11e54:	48 8b 43 10          	mov    0x10(%rbx),%rax
   11e58:	8b 50 20             	mov    0x20(%rax),%edx
   11e5b:	44 0f b7 4d 0a       	movzwl 0xa(%rbp),%r9d
   11e60:	44 8b 45 08          	mov    0x8(%rbp),%r8d
   11e64:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   11e69:	48 89 de             	mov    %rbx,%rsi
   11e6c:	e8 4f 8a ff ff       	callq  a8c0 <gimli::read::unit::parse_attribute>
   11e71:	83 7c 24 10 01       	cmpl   $0x1,0x10(%rsp)
   11e76:	0f 84 20 0b 00 00    	je     1299c <addr2line::Function<R>::parse_children+0xe6c>
   11e7c:	48 83 c5 10          	add    $0x10,%rbp
   11e80:	4c 39 f5             	cmp    %r14,%rbp
   11e83:	75 cb                	jne    11e50 <addr2line::Function<R>::parse_children+0x320>
   11e85:	4c 8b 94 24 90 01 00 	mov    0x190(%rsp),%r10
   11e8c:	00 
   11e8d:	4c 8b 9c 24 88 01 00 	mov    0x188(%rsp),%r11
   11e94:	00 
   11e95:	4d 89 f8             	mov    %r15,%r8
   11e98:	e9 19 0a 00 00       	jmpq   128b6 <addr2line::Function<R>::parse_children+0xd86>
   11e9d:	31 ed                	xor    %ebp,%ebp
   11e9f:	31 c0                	xor    %eax,%eax
   11ea1:	48 89 84 24 b0 00 00 	mov    %rax,0xb0(%rsp)
   11ea8:	00 
   11ea9:	31 c0                	xor    %eax,%eax
   11eab:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
   11eb2:	00 
   11eb3:	31 c0                	xor    %eax,%eax
   11eb5:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   11eba:	45 31 ff             	xor    %r15d,%r15d
   11ebd:	31 c0                	xor    %eax,%eax
   11ebf:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
   11ec6:	00 
   11ec7:	31 c0                	xor    %eax,%eax
   11ec9:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
   11ed0:	00 
   11ed1:	31 c0                	xor    %eax,%eax
   11ed3:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   11eda:	00 
   11edb:	48 8b bc 24 80 01 00 	mov    0x180(%rsp),%rdi
   11ee2:	00 
   11ee3:	48 8b 77 10          	mov    0x10(%rdi),%rsi
   11ee7:	48 89 b4 24 40 01 00 	mov    %rsi,0x140(%rsp)
   11eee:	00 
   11eef:	48 3b 77 08          	cmp    0x8(%rdi),%rsi
   11ef3:	0f 85 82 00 00 00    	jne    11f7b <addr2line::Function<R>::parse_children+0x44b>
   11ef9:	48 89 f0             	mov    %rsi,%rax
   11efc:	48 ff c0             	inc    %rax
   11eff:	0f 84 d0 0a 00 00    	je     129d5 <addr2line::Function<R>::parse_children+0xea5>
   11f05:	48 8d 0c 36          	lea    (%rsi,%rsi,1),%rcx
   11f09:	48 39 c1             	cmp    %rax,%rcx
   11f0c:	48 0f 47 c1          	cmova  %rcx,%rax
   11f10:	48 83 f8 04          	cmp    $0x4,%rax
   11f14:	b9 04 00 00 00       	mov    $0x4,%ecx
   11f19:	48 0f 46 c1          	cmovbe %rcx,%rax
   11f1d:	31 c9                	xor    %ecx,%ecx
   11f1f:	ba 28 00 00 00       	mov    $0x28,%edx
   11f24:	48 f7 e2             	mul    %rdx
   11f27:	49 89 c4             	mov    %rax,%r12
   11f2a:	0f 90 c0             	seto   %al
   11f2d:	0f 91 c1             	setno  %cl
   11f30:	48 c1 e1 03          	shl    $0x3,%rcx
   11f34:	48 85 f6             	test   %rsi,%rsi
   11f37:	0f 84 f5 04 00 00    	je     12432 <addr2line::Function<R>::parse_children+0x902>
   11f3d:	84 c0                	test   %al,%al
   11f3f:	0f 85 90 0a 00 00    	jne    129d5 <addr2line::Function<R>::parse_children+0xea5>
   11f45:	48 8b 84 24 80 01 00 	mov    0x180(%rsp),%rax
   11f4c:	00 
   11f4d:	48 8b 38             	mov    (%rax),%rdi
   11f50:	48 85 ff             	test   %rdi,%rdi
   11f53:	0f 84 e1 04 00 00    	je     1243a <addr2line::Function<R>::parse_children+0x90a>
   11f59:	48 c1 e6 03          	shl    $0x3,%rsi
   11f5d:	48 8d 34 b6          	lea    (%rsi,%rsi,4),%rsi
   11f61:	48 85 f6             	test   %rsi,%rsi
   11f64:	0f 84 d0 04 00 00    	je     1243a <addr2line::Function<R>::parse_children+0x90a>
   11f6a:	48 89 ca             	mov    %rcx,%rdx
   11f6d:	4c 89 e1             	mov    %r12,%rcx
   11f70:	ff 15 02 40 03 00    	callq  *0x34002(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
   11f76:	e9 d0 04 00 00       	jmpq   1244b <addr2line::Function<R>::parse_children+0x91b>
   11f7b:	48 8b 0f             	mov    (%rdi),%rcx
   11f7e:	e9 fb 04 00 00       	jmpq   1247e <addr2line::Function<R>::parse_children+0x94e>
   11f83:	31 c0                	xor    %eax,%eax
   11f85:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
   11f8c:	00 
   11f8d:	0f 1f 00             	nopl   (%rax)
   11f90:	49 83 c4 10          	add    $0x10,%r12
   11f94:	4c 3b a4 24 d8 00 00 	cmp    0xd8(%rsp),%r12
   11f9b:	00 
   11f9c:	0f 84 39 ff ff ff    	je     11edb <addr2line::Function<R>::parse_children+0x3ab>
   11fa2:	49 8b 0c 24          	mov    (%r12),%rcx
   11fa6:	48 8b 43 10          	mov    0x10(%rbx),%rax
   11faa:	8b 50 20             	mov    0x20(%rax),%edx
   11fad:	45 0f b7 4c 24 0a    	movzwl 0xa(%r12),%r9d
   11fb3:	45 8b 44 24 08       	mov    0x8(%r12),%r8d
   11fb8:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   11fbd:	48 89 de             	mov    %rbx,%rsi
   11fc0:	e8 fb 88 ff ff       	callq  a8c0 <gimli::read::unit::parse_attribute>
   11fc5:	83 7c 24 10 01       	cmpl   $0x1,0x10(%rsp)
   11fca:	0f 84 42 04 00 00    	je     12412 <addr2line::Function<R>::parse_children+0x8e2>
   11fd0:	8b 44 24 30          	mov    0x30(%rsp),%eax
   11fd4:	8d 48 fd             	lea    -0x3(%rax),%ecx
   11fd7:	66 83 f9 56          	cmp    $0x56,%cx
   11fdb:	0f 87 86 00 00 00    	ja     12067 <addr2line::Function<R>::parse_children+0x537>
   11fe1:	0f b7 c1             	movzwl %cx,%eax
   11fe4:	48 8d 0d 4d 4c 02 00 	lea    0x24c4d(%rip),%rcx        # 36c38 <_fini+0x1314>
   11feb:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   11fef:	48 01 c8             	add    %rcx,%rax
   11ff2:	ff e0                	jmpq   *%rax
   11ff4:	4d 85 ff             	test   %r15,%r15
   11ff7:	75 97                	jne    11f90 <addr2line::Function<R>::parse_children+0x460>
   11ff9:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
   11ffe:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   12003:	e8 f8 9a ff ff       	callq  bb00 <gimli::read::unit::Attribute<R>::value>
   12008:	48 8b 74 24 48       	mov    0x48(%rsp),%rsi
   1200d:	48 8b 54 24 50       	mov    0x50(%rsp),%rdx
   12012:	48 8d bc 24 80 00 00 	lea    0x80(%rsp),%rdi
   12019:	00 
   1201a:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
   1201f:	4c 8b 44 24 70       	mov    0x70(%rsp),%r8
   12024:	4c 8b 8c 24 f8 00 00 	mov    0xf8(%rsp),%r9
   1202b:	00 
   1202c:	6a 10                	pushq  $0x10
   1202e:	ff 74 24 10          	pushq  0x10(%rsp)
   12032:	e8 39 0d 00 00       	callq  12d70 <addr2line::name_attr>
   12037:	48 83 c4 10          	add    $0x10,%rsp
   1203b:	4c 8b bc 24 88 00 00 	mov    0x88(%rsp),%r15
   12042:	00 
   12043:	48 8b b4 24 90 00 00 	mov    0x90(%rsp),%rsi
   1204a:	00 
   1204b:	48 83 bc 24 80 00 00 	cmpq   $0x1,0x80(%rsp)
   12052:	00 01 
   12054:	0f 84 95 08 00 00    	je     128ef <addr2line::Function<R>::parse_children+0xdbf>
   1205a:	48 89 b4 24 c0 00 00 	mov    %rsi,0xc0(%rsp)
   12061:	00 
   12062:	e9 29 ff ff ff       	jmpq   11f90 <addr2line::Function<R>::parse_children+0x460>
   12067:	66 83 f8 6e          	cmp    $0x6e,%ax
   1206b:	74 0e                	je     1207b <addr2line::Function<R>::parse_children+0x54b>
   1206d:	0f b7 c0             	movzwl %ax,%eax
   12070:	3d 07 20 00 00       	cmp    $0x2007,%eax
   12075:	0f 85 15 ff ff ff    	jne    11f90 <addr2line::Function<R>::parse_children+0x460>
   1207b:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
   12080:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   12085:	e8 76 9a ff ff       	callq  bb00 <gimli::read::unit::Attribute<R>::value>
   1208a:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
   1208f:	4c 8b 44 24 50       	mov    0x50(%rsp),%r8
   12094:	4c 8b 4c 24 58       	mov    0x58(%rsp),%r9
   12099:	48 8d bc 24 80 00 00 	lea    0x80(%rsp),%rdi
   120a0:	00 
   120a1:	48 8b 74 24 70       	mov    0x70(%rsp),%rsi
   120a6:	48 8b 54 24 68       	mov    0x68(%rsp),%rdx
   120ab:	e8 f0 a1 ff ff       	callq  c2a0 <gimli::read::dwarf::Dwarf<R>::attr_string>
   120b0:	48 83 bc 24 80 00 00 	cmpq   $0x0,0x80(%rsp)
   120b7:	00 00 
   120b9:	0f 85 d1 fe ff ff    	jne    11f90 <addr2line::Function<R>::parse_children+0x460>
   120bf:	4c 8b bc 24 88 00 00 	mov    0x88(%rsp),%r15
   120c6:	00 
   120c7:	48 8b 84 24 90 00 00 	mov    0x90(%rsp),%rax
   120ce:	00 
   120cf:	48 89 84 24 c0 00 00 	mov    %rax,0xc0(%rsp)
   120d6:	00 
   120d7:	e9 b4 fe ff ff       	jmpq   11f90 <addr2line::Function<R>::parse_children+0x460>
   120dc:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
   120e1:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   120e6:	e8 15 9a ff ff       	callq  bb00 <gimli::read::unit::Attribute<R>::value>
   120eb:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   120f0:	48 83 f8 07          	cmp    $0x7,%rax
   120f4:	0f 84 0d 02 00 00    	je     12307 <addr2line::Function<R>::parse_children+0x7d7>
   120fa:	48 85 c0             	test   %rax,%rax
   120fd:	0f 85 8d fe ff ff    	jne    11f90 <addr2line::Function<R>::parse_children+0x460>
   12103:	b8 01 00 00 00       	mov    $0x1,%eax
   12108:	48 89 84 24 b0 00 00 	mov    %rax,0xb0(%rsp)
   1210f:	00 
   12110:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   12115:	48 89 84 24 28 01 00 	mov    %rax,0x128(%rsp)
   1211c:	00 
   1211d:	e9 6e fe ff ff       	jmpq   11f90 <addr2line::Function<R>::parse_children+0x460>
   12122:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   12127:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
   1212b:	48 83 f8 05          	cmp    $0x5,%rax
   1212f:	0f 87 9e 02 00 00    	ja     123d3 <addr2line::Function<R>::parse_children+0x8a3>
   12135:	48 8d 0d 70 4c 02 00 	lea    0x24c70(%rip),%rcx        # 36dac <_fini+0x1488>
   1213c:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   12140:	48 01 c8             	add    %rcx,%rax
   12143:	ff e0                	jmpq   *%rax
   12145:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   1214a:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
   12151:	00 
   12152:	e9 39 fe ff ff       	jmpq   11f90 <addr2line::Function<R>::parse_children+0x460>
   12157:	4d 85 ff             	test   %r15,%r15
   1215a:	0f 85 30 fe ff ff    	jne    11f90 <addr2line::Function<R>::parse_children+0x460>
   12160:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
   12165:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   1216a:	e8 91 99 ff ff       	callq  bb00 <gimli::read::unit::Attribute<R>::value>
   1216f:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
   12174:	4c 8b 44 24 50       	mov    0x50(%rsp),%r8
   12179:	4c 8b 4c 24 58       	mov    0x58(%rsp),%r9
   1217e:	48 8d bc 24 80 00 00 	lea    0x80(%rsp),%rdi
   12185:	00 
   12186:	48 8b 74 24 70       	mov    0x70(%rsp),%rsi
   1218b:	48 8b 54 24 68       	mov    0x68(%rsp),%rdx
   12190:	e8 0b a1 ff ff       	callq  c2a0 <gimli::read::dwarf::Dwarf<R>::attr_string>
   12195:	83 bc 24 80 00 00 00 	cmpl   $0x1,0x80(%rsp)
   1219c:	01 
   1219d:	48 8b 84 24 90 00 00 	mov    0x90(%rsp),%rax
   121a4:	00 
   121a5:	48 89 84 24 c0 00 00 	mov    %rax,0xc0(%rsp)
   121ac:	00 
   121ad:	0f 84 a3 01 00 00    	je     12356 <addr2line::Function<R>::parse_children+0x826>
   121b3:	4c 8b bc 24 88 00 00 	mov    0x88(%rsp),%r15
   121ba:	00 
   121bb:	e9 d0 fd ff ff       	jmpq   11f90 <addr2line::Function<R>::parse_children+0x460>
   121c0:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
   121c5:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   121ca:	e8 31 99 ff ff       	callq  bb00 <gimli::read::unit::Attribute<R>::value>
   121cf:	48 83 7c 24 48 00    	cmpq   $0x0,0x48(%rsp)
   121d5:	0f 85 b5 fd ff ff    	jne    11f90 <addr2line::Function<R>::parse_children+0x460>
   121db:	bd 01 00 00 00       	mov    $0x1,%ebp
   121e0:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   121e5:	48 89 84 24 e0 00 00 	mov    %rax,0xe0(%rsp)
   121ec:	00 
   121ed:	e9 9e fd ff ff       	jmpq   11f90 <addr2line::Function<R>::parse_children+0x460>
   121f2:	48 89 ac 24 98 00 00 	mov    %rbp,0x98(%rsp)
   121f9:	00 
   121fa:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
   121ff:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   12204:	e8 f7 98 ff ff       	callq  bb00 <gimli::read::unit::Attribute<R>::value>
   12209:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   1220e:	48 8b 6c 24 50       	mov    0x50(%rsp),%rbp
   12213:	48 83 f8 16          	cmp    $0x16,%rax
   12217:	0f 84 09 01 00 00    	je     12326 <addr2line::Function<R>::parse_children+0x7f6>
   1221d:	48 83 f8 18          	cmp    $0x18,%rax
   12221:	0f 85 16 01 00 00    	jne    1233d <addr2line::Function<R>::parse_children+0x80d>
   12227:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
   1222c:	48 8b b0 a8 00 00 00 	mov    0xa8(%rax),%rsi
   12233:	48 8b 94 24 30 01 00 	mov    0x130(%rsp),%rdx
   1223a:	00 
   1223b:	48 29 f2             	sub    %rsi,%rdx
   1223e:	0f 82 c9 06 00 00    	jb     1290d <addr2line::Function<R>::parse_children+0xddd>
   12244:	0f b6 48 31          	movzbl 0x31(%rax),%ecx
   12248:	48 8b 84 24 e8 00 00 	mov    0xe8(%rsp),%rax
   1224f:	00 
   12250:	48 01 f0             	add    %rsi,%rax
   12253:	31 ff                	xor    %edi,%edi
   12255:	80 f9 08             	cmp    $0x8,%cl
   12258:	40 0f 94 c7          	sete   %dil
   1225c:	48 8d 3c bd 04 00 00 	lea    0x4(,%rdi,4),%rdi
   12263:	00 
   12264:	48 0f af fd          	imul   %rbp,%rdi
   12268:	48 29 fa             	sub    %rdi,%rdx
   1226b:	4c 8b 94 24 90 01 00 	mov    0x190(%rsp),%r10
   12272:	00 
   12273:	4c 8b 9c 24 88 01 00 	mov    0x188(%rsp),%r11
   1227a:	00 
   1227b:	4c 8d 05 be 78 01 00 	lea    0x178be(%rip),%r8        # 29b40 <<gimli::read::abbrev::Attributes as core::ops::deref::Deref>::deref>
   12282:	0f 82 7d 06 00 00    	jb     12905 <addr2line::Function<R>::parse_children+0xdd5>
   12288:	48 01 f8             	add    %rdi,%rax
   1228b:	80 f9 08             	cmp    $0x8,%cl
   1228e:	0f 85 ca 00 00 00    	jne    1235e <addr2line::Function<R>::parse_children+0x82e>
   12294:	48 83 fa 07          	cmp    $0x7,%rdx
   12298:	48 8b ac 24 98 00 00 	mov    0x98(%rsp),%rbp
   1229f:	00 
   122a0:	0f 86 5f 06 00 00    	jbe    12905 <addr2line::Function<R>::parse_children+0xdd5>
   122a6:	48 8b 08             	mov    (%rax),%rcx
   122a9:	e9 c4 00 00 00       	jmpq   12372 <addr2line::Function<R>::parse_children+0x842>
   122ae:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   122b3:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
   122b7:	48 83 f8 05          	cmp    $0x5,%rax
   122bb:	0f 87 c2 fc ff ff    	ja     11f83 <addr2line::Function<R>::parse_children+0x453>
   122c1:	48 8d 0d cc 4a 02 00 	lea    0x24acc(%rip),%rcx        # 36d94 <_fini+0x1470>
   122c8:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   122cc:	48 01 c8             	add    %rcx,%rax
   122cf:	ff e0                	jmpq   *%rax
   122d1:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   122d6:	e9 aa fc ff ff       	jmpq   11f85 <addr2line::Function<R>::parse_children+0x455>
   122db:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
   122e0:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   122e5:	e8 16 98 ff ff       	callq  bb00 <gimli::read::unit::Attribute<R>::value>
   122ea:	83 7c 24 48 2c       	cmpl   $0x2c,0x48(%rsp)
   122ef:	0f 85 9b fc ff ff    	jne    11f90 <addr2line::Function<R>::parse_children+0x460>
   122f5:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   122fa:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   12301:	00 
   12302:	e9 89 fc ff ff       	jmpq   11f90 <addr2line::Function<R>::parse_children+0x460>
   12307:	b8 01 00 00 00       	mov    $0x1,%eax
   1230c:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
   12313:	00 
   12314:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   12319:	48 89 84 24 20 01 00 	mov    %rax,0x120(%rsp)
   12320:	00 
   12321:	e9 6a fc ff ff       	jmpq   11f90 <addr2line::Function<R>::parse_children+0x460>
   12326:	b8 01 00 00 00       	mov    $0x1,%eax
   1232b:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   12330:	48 89 e9             	mov    %rbp,%rcx
   12333:	48 8b ac 24 98 00 00 	mov    0x98(%rsp),%rbp
   1233a:	00 
   1233b:	eb 42                	jmp    1237f <addr2line::Function<R>::parse_children+0x84f>
   1233d:	31 c0                	xor    %eax,%eax
   1233f:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   12344:	48 8b 8c 24 f0 00 00 	mov    0xf0(%rsp),%rcx
   1234b:	00 
   1234c:	48 8b ac 24 98 00 00 	mov    0x98(%rsp),%rbp
   12353:	00 
   12354:	eb 29                	jmp    1237f <addr2line::Function<R>::parse_children+0x84f>
   12356:	45 31 ff             	xor    %r15d,%r15d
   12359:	e9 32 fc ff ff       	jmpq   11f90 <addr2line::Function<R>::parse_children+0x460>
   1235e:	48 83 fa 03          	cmp    $0x3,%rdx
   12362:	48 8b ac 24 98 00 00 	mov    0x98(%rsp),%rbp
   12369:	00 
   1236a:	0f 86 95 05 00 00    	jbe    12905 <addr2line::Function<R>::parse_children+0xdd5>
   12370:	8b 08                	mov    (%rax),%ecx
   12372:	48 01 f1             	add    %rsi,%rcx
   12375:	b8 01 00 00 00       	mov    $0x1,%eax
   1237a:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   1237f:	48 89 8c 24 38 01 00 	mov    %rcx,0x138(%rsp)
   12386:	00 
   12387:	48 89 8c 24 f0 00 00 	mov    %rcx,0xf0(%rsp)
   1238e:	00 
   1238f:	e9 fc fb ff ff       	jmpq   11f90 <addr2line::Function<R>::parse_children+0x460>
   12394:	0f b6 44 24 20       	movzbl 0x20(%rsp),%eax
   12399:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
   123a0:	00 
   123a1:	e9 ea fb ff ff       	jmpq   11f90 <addr2line::Function<R>::parse_children+0x460>
   123a6:	0f b7 44 24 20       	movzwl 0x20(%rsp),%eax
   123ab:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
   123b2:	00 
   123b3:	e9 d8 fb ff ff       	jmpq   11f90 <addr2line::Function<R>::parse_children+0x460>
   123b8:	8b 44 24 20          	mov    0x20(%rsp),%eax
   123bc:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
   123c3:	00 
   123c4:	e9 c7 fb ff ff       	jmpq   11f90 <addr2line::Function<R>::parse_children+0x460>
   123c9:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   123ce:	48 85 c0             	test   %rax,%rax
   123d1:	79 02                	jns    123d5 <addr2line::Function<R>::parse_children+0x8a5>
   123d3:	31 c0                	xor    %eax,%eax
   123d5:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
   123dc:	00 
   123dd:	e9 ae fb ff ff       	jmpq   11f90 <addr2line::Function<R>::parse_children+0x460>
   123e2:	8b 44 24 20          	mov    0x20(%rsp),%eax
   123e6:	e9 9a fb ff ff       	jmpq   11f85 <addr2line::Function<R>::parse_children+0x455>
   123eb:	0f b6 44 24 20       	movzbl 0x20(%rsp),%eax
   123f0:	e9 90 fb ff ff       	jmpq   11f85 <addr2line::Function<R>::parse_children+0x455>
   123f5:	0f b7 44 24 20       	movzwl 0x20(%rsp),%eax
   123fa:	e9 86 fb ff ff       	jmpq   11f85 <addr2line::Function<R>::parse_children+0x455>
   123ff:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   12404:	48 85 c0             	test   %rax,%rax
   12407:	0f 89 78 fb ff ff    	jns    11f85 <addr2line::Function<R>::parse_children+0x455>
   1240d:	e9 71 fb ff ff       	jmpq   11f83 <addr2line::Function<R>::parse_children+0x453>
   12412:	4c 8b 7c 24 18       	mov    0x18(%rsp),%r15
   12417:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   1241c:	48 89 d6             	mov    %rdx,%rsi
   1241f:	48 c1 ee 08          	shr    $0x8,%rsi
   12423:	4c 0f a4 fa 38       	shld   $0x38,%r15,%rdx
   12428:	4c 8b 64 24 08       	mov    0x8(%rsp),%r12
   1242d:	e9 fd 01 00 00       	jmpq   1262f <addr2line::Function<R>::parse_children+0xaff>
   12432:	84 c0                	test   %al,%al
   12434:	0f 85 9b 05 00 00    	jne    129d5 <addr2line::Function<R>::parse_children+0xea5>
   1243a:	4d 85 e4             	test   %r12,%r12
   1243d:	74 0f                	je     1244e <addr2line::Function<R>::parse_children+0x91e>
   1243f:	4c 89 e7             	mov    %r12,%rdi
   12442:	48 89 ce             	mov    %rcx,%rsi
   12445:	ff 15 35 37 03 00    	callq  *0x33735(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   1244b:	48 89 c1             	mov    %rax,%rcx
   1244e:	48 85 c9             	test   %rcx,%rcx
   12451:	0f 84 86 05 00 00    	je     129dd <addr2line::Function<R>::parse_children+0xead>
   12457:	4c 89 e0             	mov    %r12,%rax
   1245a:	48 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rdx
   12461:	cc cc cc 
   12464:	48 f7 e2             	mul    %rdx
   12467:	48 8b bc 24 80 01 00 	mov    0x180(%rsp),%rdi
   1246e:	00 
   1246f:	48 89 0f             	mov    %rcx,(%rdi)
   12472:	48 c1 ea 05          	shr    $0x5,%rdx
   12476:	48 89 57 08          	mov    %rdx,0x8(%rdi)
   1247a:	48 8b 77 10          	mov    0x10(%rdi),%rsi
   1247e:	4c 8b 64 24 08       	mov    0x8(%rsp),%r12
   12483:	48 8b 94 24 a0 00 00 	mov    0xa0(%rsp),%rdx
   1248a:	00 
   1248b:	48 8d 04 b6          	lea    (%rsi,%rsi,4),%rax
   1248f:	48 89 14 c1          	mov    %rdx,(%rcx,%rax,8)
   12493:	4c 89 7c c1 08       	mov    %r15,0x8(%rcx,%rax,8)
   12498:	48 8b 94 24 c0 00 00 	mov    0xc0(%rsp),%rdx
   1249f:	00 
   124a0:	48 89 54 c1 10       	mov    %rdx,0x10(%rcx,%rax,8)
   124a5:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
   124ac:	00 
   124ad:	48 89 54 c1 18       	mov    %rdx,0x18(%rcx,%rax,8)
   124b2:	48 8b 94 24 c8 00 00 	mov    0xc8(%rsp),%rdx
   124b9:	00 
   124ba:	89 54 c1 20          	mov    %edx,0x20(%rcx,%rax,8)
   124be:	48 8b 94 24 d0 00 00 	mov    0xd0(%rsp),%rdx
   124c5:	00 
   124c6:	89 54 c1 24          	mov    %edx,0x24(%rcx,%rax,8)
   124ca:	48 83 47 10 01       	addq   $0x1,0x10(%rdi)
   124cf:	48 8d 84 24 00 01 00 	lea    0x100(%rsp),%rax
   124d6:	00 
   124d7:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   124de:	00 
   124df:	48 8d 84 24 08 01 00 	lea    0x108(%rsp),%rax
   124e6:	00 
   124e7:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
   124ee:	00 
   124ef:	48 8d 84 24 40 01 00 	lea    0x140(%rsp),%rax
   124f6:	00 
   124f7:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
   124fe:	00 
   124ff:	c6 44 24 07 00       	movb   $0x0,0x7(%rsp)
   12504:	48 8d 84 24 80 00 00 	lea    0x80(%rsp),%rax
   1250b:	00 
   1250c:	48 89 84 24 10 01 00 	mov    %rax,0x110(%rsp)
   12513:	00 
   12514:	48 8d 44 24 07       	lea    0x7(%rsp),%rax
   12519:	48 89 84 24 18 01 00 	mov    %rax,0x118(%rsp)
   12520:	00 
   12521:	48 83 7c 24 78 01    	cmpq   $0x1,0x78(%rsp)
   12527:	75 67                	jne    12590 <addr2line::Function<R>::parse_children+0xa60>
   12529:	48 8b 7c 24 68       	mov    0x68(%rsp),%rdi
   1252e:	44 8b 47 30          	mov    0x30(%rdi),%r8d
   12532:	44 89 c1             	mov    %r8d,%ecx
   12535:	c1 e9 10             	shr    $0x10,%ecx
   12538:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   1253d:	48 8d 90 b0 00 00 00 	lea    0xb0(%rax),%rdx
   12544:	48 8d b0 c0 00 00 00 	lea    0xc0(%rax),%rsi
   1254b:	4c 8d 88 b8 00 00 00 	lea    0xb8(%rax),%r9
   12552:	48 8d a8 c8 00 00 00 	lea    0xc8(%rax),%rbp
   12559:	66 83 f9 05          	cmp    $0x5,%cx
   1255d:	48 0f 42 f2          	cmovb  %rdx,%rsi
   12561:	48 8b 16             	mov    (%rsi),%rdx
   12564:	49 0f 42 e9          	cmovb  %r9,%rbp
   12568:	48 8b 4d 00          	mov    0x0(%rbp),%rcx
   1256c:	48 8b ac 24 38 01 00 	mov    0x138(%rsp),%rbp
   12573:	00 
   12574:	48 29 e9             	sub    %rbp,%rcx
   12577:	0f 83 d8 00 00 00    	jae    12655 <addr2line::Function<R>::parse_children+0xb25>
   1257d:	48 89 d6             	mov    %rdx,%rsi
   12580:	48 c1 ee 08          	shr    $0x8,%rsi
   12584:	48 c1 e2 38          	shl    $0x38,%rdx
   12588:	41 b7 13             	mov    $0x13,%r15b
   1258b:	e9 9f 00 00 00       	jmpq   1262f <addr2line::Function<R>::parse_children+0xaff>
   12590:	48 83 fd 01          	cmp    $0x1,%rbp
   12594:	75 47                	jne    125dd <addr2line::Function<R>::parse_children+0xaad>
   12596:	48 83 bc 24 b0 00 00 	cmpq   $0x1,0xb0(%rsp)
   1259d:	00 01 
   1259f:	48 8b 94 24 28 01 00 	mov    0x128(%rsp),%rdx
   125a6:	00 
   125a7:	48 8b b4 24 e0 00 00 	mov    0xe0(%rsp),%rsi
   125ae:	00 
   125af:	74 1f                	je     125d0 <addr2line::Function<R>::parse_children+0xaa0>
   125b1:	48 83 bc 24 a8 00 00 	cmpq   $0x1,0xa8(%rsp)
   125b8:	00 01 
   125ba:	75 21                	jne    125dd <addr2line::Function<R>::parse_children+0xaad>
   125bc:	48 8b 84 24 20 01 00 	mov    0x120(%rsp),%rax
   125c3:	00 
   125c4:	48 8b b4 24 e0 00 00 	mov    0xe0(%rsp),%rsi
   125cb:	00 
   125cc:	48 8d 14 30          	lea    (%rax,%rsi,1),%rdx
   125d0:	48 8d bc 24 10 01 00 	lea    0x110(%rsp),%rdi
   125d7:	00 
   125d8:	e8 63 06 00 00       	callq  12c40 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}>
   125dd:	48 8b 84 24 08 01 00 	mov    0x108(%rsp),%rax
   125e4:	00 
   125e5:	48 83 c0 01          	add    $0x1,%rax
   125e9:	48 83 ec 08          	sub    $0x8,%rsp
   125ed:	48 89 df             	mov    %rbx,%rdi
   125f0:	4c 89 f6             	mov    %r14,%rsi
   125f3:	48 8b 54 24 70       	mov    0x70(%rsp),%rdx
   125f8:	48 8b 4c 24 78       	mov    0x78(%rsp),%rcx
   125fd:	4c 8b 84 24 00 01 00 	mov    0x100(%rsp),%r8
   12604:	00 
   12605:	4d 89 e1             	mov    %r12,%r9
   12608:	50                   	push   %rax
   12609:	ff b4 24 10 01 00 00 	pushq  0x110(%rsp)
   12610:	ff b4 24 98 01 00 00 	pushq  0x198(%rsp)
   12617:	e8 14 f5 ff ff       	callq  11b30 <addr2line::Function<R>::parse_children>
   1261c:	48 83 c4 20          	add    $0x20,%rsp
   12620:	49 89 c7             	mov    %rax,%r15
   12623:	48 89 d6             	mov    %rdx,%rsi
   12626:	48 c1 ee 08          	shr    $0x8,%rsi
   1262a:	48 0f a4 c2 38       	shld   $0x38,%rax,%rdx
   1262f:	4c 8b 94 24 90 01 00 	mov    0x190(%rsp),%r10
   12636:	00 
   12637:	4c 8b 9c 24 88 01 00 	mov    0x188(%rsp),%r11
   1263e:	00 
   1263f:	4c 8d 05 fa 74 01 00 	lea    0x174fa(%rip),%r8        # 29b40 <<gimli::read::abbrev::Attributes as core::ops::deref::Deref>::deref>
   12646:	41 80 ff 46          	cmp    $0x46,%r15b
   1264a:	0f 84 66 02 00 00    	je     128b6 <addr2line::Function<R>::parse_children+0xd86>
   12650:	e9 22 03 00 00       	jmpq   12977 <addr2line::Function<R>::parse_children+0xe47>
   12655:	48 8b b7 88 00 00 00 	mov    0x88(%rdi),%rsi
   1265c:	48 8b bf 98 00 00 00 	mov    0x98(%rdi),%rdi
   12663:	48 01 ea             	add    %rbp,%rdx
   12666:	0f 10 40 10          	movups 0x10(%rax),%xmm0
   1266a:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   1266f:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   12674:	44 89 44 24 20       	mov    %r8d,0x20(%rsp)
   12679:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
   1267e:	0f 11 44 24 30       	movups %xmm0,0x30(%rsp)
   12683:	48 89 7c 24 40       	mov    %rdi,0x40(%rsp)
   12688:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
   1268d:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   12692:	e8 a9 9e ff ff       	callq  c540 <gimli::read::rnglists::RngListIter<R>::next>
   12697:	4c 8b 7c 24 50       	mov    0x50(%rsp),%r15
   1269c:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
   126a1:	48 83 7c 24 48 01    	cmpq   $0x1,0x48(%rsp)
   126a7:	74 1e                	je     126c7 <addr2line::Function<R>::parse_children+0xb97>
   126a9:	49 83 ff 01          	cmp    $0x1,%r15
   126ad:	0f 85 2a ff ff ff    	jne    125dd <addr2line::Function<R>::parse_children+0xaad>
   126b3:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
   126b8:	48 8d bc 24 10 01 00 	lea    0x110(%rsp),%rdi
   126bf:	00 
   126c0:	e8 7b 05 00 00       	callq  12c40 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}>
   126c5:	eb c1                	jmp    12688 <addr2line::Function<R>::parse_children+0xb58>
   126c7:	4c 89 fa             	mov    %r15,%rdx
   126ca:	48 0f ac f2 08       	shrd   $0x8,%rsi,%rdx
   126cf:	48 c1 ee 08          	shr    $0x8,%rsi
   126d3:	e9 57 ff ff ff       	jmpq   1262f <addr2line::Function<R>::parse_children+0xaff>
   126d8:	49 83 c3 ff          	add    $0xffffffffffffffff,%r11
   126dc:	4c 89 5b 20          	mov    %r11,0x20(%rbx)
   126e0:	4c 8b 5b 20          	mov    0x20(%rbx),%r11
   126e4:	4d 39 f3             	cmp    %r14,%r11
   126e7:	0f 8e b2 01 00 00    	jle    1289f <addr2line::Function<R>::parse_children+0xd6f>
   126ed:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   126f1:	48 85 ff             	test   %rdi,%rdi
   126f4:	4c 8d 05 45 74 01 00 	lea    0x17445(%rip),%r8        # 29b40 <<gimli::read::abbrev::Attributes as core::ops::deref::Deref>::deref>
   126fb:	0f 84 c9 02 00 00    	je     129ca <addr2line::Function<R>::parse_children+0xe9a>
   12701:	48 8b 2b             	mov    (%rbx),%rbp
   12704:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   12708:	31 f6                	xor    %esi,%esi
   1270a:	31 c9                	xor    %ecx,%ecx
   1270c:	0f 1f 40 00          	nopl   0x0(%rax)
   12710:	48 8d 55 01          	lea    0x1(%rbp),%rdx
   12714:	48 89 13             	mov    %rdx,(%rbx)
   12717:	48 89 7b 08          	mov    %rdi,0x8(%rbx)
   1271b:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
   1271f:	83 f9 3f             	cmp    $0x3f,%ecx
   12722:	75 08                	jne    1272c <addr2line::Function<R>::parse_children+0xbfc>
   12724:	3c 01                	cmp    $0x1,%al
   12726:	0f 87 33 02 00 00    	ja     1295f <addr2line::Function<R>::parse_children+0xe2f>
   1272c:	0f b6 e8             	movzbl %al,%ebp
   1272f:	89 e8                	mov    %ebp,%eax
   12731:	83 e0 7f             	and    $0x7f,%eax
   12734:	48 d3 e0             	shl    %cl,%rax
   12737:	48 09 c6             	or     %rax,%rsi
   1273a:	40 84 ed             	test   %bpl,%bpl
   1273d:	79 11                	jns    12750 <addr2line::Function<R>::parse_children+0xc20>
   1273f:	83 c1 07             	add    $0x7,%ecx
   12742:	48 89 d5             	mov    %rdx,%rbp
   12745:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   12749:	72 c5                	jb     12710 <addr2line::Function<R>::parse_children+0xbe0>
   1274b:	e9 72 02 00 00       	jmpq   129c2 <addr2line::Function<R>::parse_children+0xe92>
   12750:	48 85 f6             	test   %rsi,%rsi
   12753:	0f 84 7f ff ff ff    	je     126d8 <addr2line::Function<R>::parse_children+0xba8>
   12759:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
   1275d:	48 8d 46 ff          	lea    -0x1(%rsi),%rax
   12761:	48 3b 41 10          	cmp    0x10(%rcx),%rax
   12765:	73 0c                	jae    12773 <addr2line::Function<R>::parse_children+0xc43>
   12767:	48 6b f8 70          	imul   $0x70,%rax,%rdi
   1276b:	48 03 39             	add    (%rcx),%rdi
   1276e:	e9 85 00 00 00       	jmpq   127f8 <addr2line::Function<R>::parse_children+0xcc8>
   12773:	4c 8b 51 18          	mov    0x18(%rcx),%r10
   12777:	41 bf 12 00 00 00    	mov    $0x12,%r15d
   1277d:	4d 85 d2             	test   %r10,%r10
   12780:	0f 84 df 01 00 00    	je     12965 <addr2line::Function<R>::parse_children+0xe35>
   12786:	4c 8b 41 20          	mov    0x20(%rcx),%r8
   1278a:	45 0f b7 8a 32 05 00 	movzwl 0x532(%r10),%r9d
   12791:	00 
   12792:	49 8d 7a f0          	lea    -0x10(%r10),%rdi
   12796:	4c 89 ca             	mov    %r9,%rdx
   12799:	48 f7 da             	neg    %rdx
   1279c:	48 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%rbp
   127a3:	48 8d 04 2a          	lea    (%rdx,%rbp,1),%rax
   127a7:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   127ab:	74 2a                	je     127d7 <addr2line::Function<R>::parse_children+0xca7>
   127ad:	31 c9                	xor    %ecx,%ecx
   127af:	49 39 74 ea 10       	cmp    %rsi,0x10(%r10,%rbp,8)
   127b4:	0f 95 c1             	setne  %cl
   127b7:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   127be:	48 0f 47 c8          	cmova  %rax,%rcx
   127c2:	48 83 c5 01          	add    $0x1,%rbp
   127c6:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
   127ca:	74 0e                	je     127da <addr2line::Function<R>::parse_children+0xcaa>
   127cc:	48 83 c7 70          	add    $0x70,%rdi
   127d0:	48 85 c9             	test   %rcx,%rcx
   127d3:	75 ce                	jne    127a3 <addr2line::Function<R>::parse_children+0xc73>
   127d5:	eb 1a                	jmp    127f1 <addr2line::Function<R>::parse_children+0xcc1>
   127d7:	4c 89 cd             	mov    %r9,%rbp
   127da:	4d 85 c0             	test   %r8,%r8
   127dd:	0f 84 82 01 00 00    	je     12965 <addr2line::Function<R>::parse_children+0xe35>
   127e3:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   127e7:	4d 8b 94 ea 38 05 00 	mov    0x538(%r10,%rbp,8),%r10
   127ee:	00 
   127ef:	eb 99                	jmp    1278a <addr2line::Function<R>::parse_children+0xc5a>
   127f1:	4c 8d 05 48 73 01 00 	lea    0x17348(%rip),%r8        # 29b40 <<gimli::read::abbrev::Attributes as core::ops::deref::Deref>::deref>
   127f8:	80 7f 6a 01          	cmpb   $0x1,0x6a(%rdi)
   127fc:	75 08                	jne    12806 <addr2line::Function<R>::parse_children+0xcd6>
   127fe:	49 83 c3 01          	add    $0x1,%r11
   12802:	4c 89 5b 20          	mov    %r11,0x20(%rbx)
   12806:	48 83 c7 08          	add    $0x8,%rdi
   1280a:	41 ff d0             	callq  *%r8
   1280d:	48 85 d2             	test   %rdx,%rdx
   12810:	0f 84 ca fe ff ff    	je     126e0 <addr2line::Function<R>::parse_children+0xbb0>
   12816:	48 89 c5             	mov    %rax,%rbp
   12819:	49 89 d7             	mov    %rdx,%r15
   1281c:	49 c1 e7 04          	shl    $0x4,%r15
   12820:	49 01 c7             	add    %rax,%r15
   12823:	48 8b 4d 00          	mov    0x0(%rbp),%rcx
   12827:	48 8b 43 10          	mov    0x10(%rbx),%rax
   1282b:	8b 50 20             	mov    0x20(%rax),%edx
   1282e:	44 0f b7 4d 0a       	movzwl 0xa(%rbp),%r9d
   12833:	44 8b 45 08          	mov    0x8(%rbp),%r8d
   12837:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1283c:	48 89 de             	mov    %rbx,%rsi
   1283f:	e8 7c 80 ff ff       	callq  a8c0 <gimli::read::unit::parse_attribute>
   12844:	83 7c 24 10 01       	cmpl   $0x1,0x10(%rsp)
   12849:	74 0e                	je     12859 <addr2line::Function<R>::parse_children+0xd29>
   1284b:	48 83 c5 10          	add    $0x10,%rbp
   1284f:	4c 39 fd             	cmp    %r15,%rbp
   12852:	75 cf                	jne    12823 <addr2line::Function<R>::parse_children+0xcf3>
   12854:	e9 87 fe ff ff       	jmpq   126e0 <addr2line::Function<R>::parse_children+0xbb0>
   12859:	44 8a 7c 24 18       	mov    0x18(%rsp),%r15b
   1285e:	0f b6 44 24 27       	movzbl 0x27(%rsp),%eax
   12863:	c1 e0 10             	shl    $0x10,%eax
   12866:	0f b7 4c 24 25       	movzwl 0x25(%rsp),%ecx
   1286b:	09 c1                	or     %eax,%ecx
   1286d:	48 c1 e1 20          	shl    $0x20,%rcx
   12871:	8b 74 24 21          	mov    0x21(%rsp),%esi
   12875:	48 09 ce             	or     %rcx,%rsi
   12878:	48 8b 54 24 19       	mov    0x19(%rsp),%rdx
   1287d:	4c 8d 05 bc 72 01 00 	lea    0x172bc(%rip),%r8        # 29b40 <<gimli::read::abbrev::Attributes as core::ops::deref::Deref>::deref>
   12884:	41 80 ff 46          	cmp    $0x46,%r15b
   12888:	4c 8b 94 24 90 01 00 	mov    0x190(%rsp),%r10
   1288f:	00 
   12890:	4c 8b 9c 24 88 01 00 	mov    0x188(%rsp),%r11
   12897:	00 
   12898:	74 1c                	je     128b6 <addr2line::Function<R>::parse_children+0xd86>
   1289a:	e9 d8 00 00 00       	jmpq   12977 <addr2line::Function<R>::parse_children+0xe47>
   1289f:	4c 8b 94 24 90 01 00 	mov    0x190(%rsp),%r10
   128a6:	00 
   128a7:	4c 8b 9c 24 88 01 00 	mov    0x188(%rsp),%r11
   128ae:	00 
   128af:	4c 8d 05 8a 72 01 00 	lea    0x1728a(%rip),%r8        # 29b40 <<gimli::read::abbrev::Attributes as core::ops::deref::Deref>::deref>
   128b6:	48 8b 43 10          	mov    0x10(%rbx),%rax
   128ba:	31 c9                	xor    %ecx,%ecx
   128bc:	80 78 21 08          	cmpb   $0x8,0x21(%rax)
   128c0:	0f 94 c1             	sete   %cl
   128c3:	48 c1 e1 03          	shl    $0x3,%rcx
   128c7:	48 03 08             	add    (%rax),%rcx
   128ca:	48 8b 13             	mov    (%rbx),%rdx
   128cd:	48 8b 70 18          	mov    0x18(%rax),%rsi
   128d1:	48 03 70 10          	add    0x10(%rax),%rsi
   128d5:	48 29 f1             	sub    %rsi,%rcx
   128d8:	4c 8d 0c 11          	lea    (%rcx,%rdx,1),%r9
   128dc:	49 83 c1 04          	add    $0x4,%r9
   128e0:	4c 8b 73 20          	mov    0x20(%rbx),%r14
   128e4:	4d 39 ee             	cmp    %r13,%r14
   128e7:	0f 8f bd f2 ff ff    	jg     11baa <addr2line::Function<R>::parse_children+0x7a>
   128ed:	eb 6b                	jmp    1295a <addr2line::Function<R>::parse_children+0xe2a>
   128ef:	4c 89 fa             	mov    %r15,%rdx
   128f2:	48 0f ac f2 08       	shrd   $0x8,%rsi,%rdx
   128f7:	48 c1 ee 08          	shr    $0x8,%rsi
   128fb:	4c 8b 64 24 08       	mov    0x8(%rsp),%r12
   12900:	e9 2a fd ff ff       	jmpq   1262f <addr2line::Function<R>::parse_children+0xaff>
   12905:	41 bf 13 00 00 00    	mov    $0x13,%r15d
   1290b:	eb 25                	jmp    12932 <addr2line::Function<R>::parse_children+0xe02>
   1290d:	41 bf 13 00 00 00    	mov    $0x13,%r15d
   12913:	48 8b 84 24 e8 00 00 	mov    0xe8(%rsp),%rax
   1291a:	00 
   1291b:	4c 8b 94 24 90 01 00 	mov    0x190(%rsp),%r10
   12922:	00 
   12923:	4c 8b 9c 24 88 01 00 	mov    0x188(%rsp),%r11
   1292a:	00 
   1292b:	4c 8d 05 0e 72 01 00 	lea    0x1720e(%rip),%r8        # 29b40 <<gimli::read::abbrev::Attributes as core::ops::deref::Deref>::deref>
   12932:	4c 89 fa             	mov    %r15,%rdx
   12935:	48 0f ac c2 08       	shrd   $0x8,%rax,%rdx
   1293a:	48 89 84 24 f0 00 00 	mov    %rax,0xf0(%rsp)
   12941:	00 
   12942:	48 89 c6             	mov    %rax,%rsi
   12945:	48 c1 ee 08          	shr    $0x8,%rsi
   12949:	4c 8b 64 24 08       	mov    0x8(%rsp),%r12
   1294e:	41 80 ff 46          	cmp    $0x46,%r15b
   12952:	0f 84 5e ff ff ff    	je     128b6 <addr2line::Function<R>::parse_children+0xd86>
   12958:	eb 1d                	jmp    12977 <addr2line::Function<R>::parse_children+0xe47>
   1295a:	41 b7 46             	mov    $0x46,%r15b
   1295d:	eb 18                	jmp    12977 <addr2line::Function<R>::parse_children+0xe47>
   1295f:	41 bf 06 00 00 00    	mov    $0x6,%r15d
   12965:	31 d2                	xor    %edx,%edx
   12967:	eb 03                	jmp    1296c <addr2line::Function<R>::parse_children+0xe3c>
   12969:	48 89 fa             	mov    %rdi,%rdx
   1296c:	48 89 d6             	mov    %rdx,%rsi
   1296f:	48 c1 ee 08          	shr    $0x8,%rsi
   12973:	48 c1 e2 38          	shl    $0x38,%rdx
   12977:	48 0f a4 d6 08       	shld   $0x8,%rdx,%rsi
   1297c:	48 c1 e2 08          	shl    $0x8,%rdx
   12980:	41 0f b6 c7          	movzbl %r15b,%eax
   12984:	48 09 d0             	or     %rdx,%rax
   12987:	48 89 f2             	mov    %rsi,%rdx
   1298a:	48 81 c4 48 01 00 00 	add    $0x148,%rsp
   12991:	5b                   	pop    %rbx
   12992:	41 5c                	pop    %r12
   12994:	41 5d                	pop    %r13
   12996:	41 5e                	pop    %r14
   12998:	41 5f                	pop    %r15
   1299a:	5d                   	pop    %rbp
   1299b:	c3                   	retq   
   1299c:	44 8a 7c 24 18       	mov    0x18(%rsp),%r15b
   129a1:	0f b6 44 24 27       	movzbl 0x27(%rsp),%eax
   129a6:	c1 e0 10             	shl    $0x10,%eax
   129a9:	0f b7 4c 24 25       	movzwl 0x25(%rsp),%ecx
   129ae:	09 c1                	or     %eax,%ecx
   129b0:	48 c1 e1 20          	shl    $0x20,%rcx
   129b4:	8b 74 24 21          	mov    0x21(%rsp),%esi
   129b8:	48 09 ce             	or     %rcx,%rsi
   129bb:	48 8b 54 24 19       	mov    0x19(%rsp),%rdx
   129c0:	eb b5                	jmp    12977 <addr2line::Function<R>::parse_children+0xe47>
   129c2:	41 bf 13 00 00 00    	mov    $0x13,%r15d
   129c8:	eb a2                	jmp    1296c <addr2line::Function<R>::parse_children+0xe3c>
   129ca:	48 8b 13             	mov    (%rbx),%rdx
   129cd:	41 bf 13 00 00 00    	mov    $0x13,%r15d
   129d3:	eb 97                	jmp    1296c <addr2line::Function<R>::parse_children+0xe3c>
   129d5:	ff 15 05 31 03 00    	callq  *0x33105(%rip)        # 45ae0 <_GLOBAL_OFFSET_TABLE_+0x158>
   129db:	0f 0b                	ud2    
   129dd:	be 08 00 00 00       	mov    $0x8,%esi
   129e2:	4c 89 e7             	mov    %r12,%rdi
   129e5:	ff 15 35 31 03 00    	callq  *0x33135(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   129eb:	0f 0b                	ud2    
   129ed:	0f 1f 00             	nopl   (%rax)

00000000000129f0 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}>:
   129f0:	55                   	push   %rbp
   129f1:	41 57                	push   %r15
   129f3:	41 56                	push   %r14
   129f5:	41 55                	push   %r13
   129f7:	41 54                	push   %r12
   129f9:	53                   	push   %rbx
   129fa:	50                   	push   %rax
   129fb:	48 39 d6             	cmp    %rdx,%rsi
   129fe:	0f 83 dc 00 00 00    	jae    12ae0 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xf0>
   12a04:	49 89 d7             	mov    %rdx,%r15
   12a07:	49 89 f5             	mov    %rsi,%r13
   12a0a:	49 89 fe             	mov    %rdi,%r14
   12a0d:	48 8b 07             	mov    (%rdi),%rax
   12a10:	48 8b 18             	mov    (%rax),%rbx
   12a13:	48 8b 40 08          	mov    0x8(%rax),%rax
   12a17:	48 8b 28             	mov    (%rax),%rbp
   12a1a:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   12a1e:	48 3b 73 08          	cmp    0x8(%rbx),%rsi
   12a22:	75 64                	jne    12a88 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0x98>
   12a24:	48 89 f1             	mov    %rsi,%rcx
   12a27:	48 ff c1             	inc    %rcx
   12a2a:	0f 84 bf 00 00 00    	je     12aef <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xff>
   12a30:	48 8d 04 36          	lea    (%rsi,%rsi,1),%rax
   12a34:	48 39 c8             	cmp    %rcx,%rax
   12a37:	48 0f 47 c8          	cmova  %rax,%rcx
   12a3b:	48 83 f9 04          	cmp    $0x4,%rcx
   12a3f:	b8 04 00 00 00       	mov    $0x4,%eax
   12a44:	48 0f 47 c1          	cmova  %rcx,%rax
   12a48:	ba 20 00 00 00       	mov    $0x20,%edx
   12a4d:	31 c9                	xor    %ecx,%ecx
   12a4f:	48 f7 e2             	mul    %rdx
   12a52:	49 89 c4             	mov    %rax,%r12
   12a55:	0f 90 c0             	seto   %al
   12a58:	0f 91 c1             	setno  %cl
   12a5b:	48 c1 e1 03          	shl    $0x3,%rcx
   12a5f:	48 85 f6             	test   %rsi,%rsi
   12a62:	74 29                	je     12a8d <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0x9d>
   12a64:	84 c0                	test   %al,%al
   12a66:	0f 85 83 00 00 00    	jne    12aef <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xff>
   12a6c:	48 8b 3b             	mov    (%rbx),%rdi
   12a6f:	48 85 ff             	test   %rdi,%rdi
   12a72:	74 1d                	je     12a91 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xa1>
   12a74:	48 c1 e6 05          	shl    $0x5,%rsi
   12a78:	74 17                	je     12a91 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xa1>
   12a7a:	48 89 ca             	mov    %rcx,%rdx
   12a7d:	4c 89 e1             	mov    %r12,%rcx
   12a80:	ff 15 f2 34 03 00    	callq  *0x334f2(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
   12a86:	eb 1a                	jmp    12aa2 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xb2>
   12a88:	48 8b 0b             	mov    (%rbx),%rcx
   12a8b:	eb 2c                	jmp    12ab9 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xc9>
   12a8d:	84 c0                	test   %al,%al
   12a8f:	75 5e                	jne    12aef <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xff>
   12a91:	4d 85 e4             	test   %r12,%r12
   12a94:	74 0f                	je     12aa5 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xb5>
   12a96:	4c 89 e7             	mov    %r12,%rdi
   12a99:	48 89 ce             	mov    %rcx,%rsi
   12a9c:	ff 15 de 30 03 00    	callq  *0x330de(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   12aa2:	48 89 c1             	mov    %rax,%rcx
   12aa5:	48 85 c9             	test   %rcx,%rcx
   12aa8:	74 4d                	je     12af7 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0x107>
   12aaa:	48 89 0b             	mov    %rcx,(%rbx)
   12aad:	49 c1 ec 05          	shr    $0x5,%r12
   12ab1:	4c 89 63 08          	mov    %r12,0x8(%rbx)
   12ab5:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   12ab9:	48 c1 e6 05          	shl    $0x5,%rsi
   12abd:	48 89 2c 31          	mov    %rbp,(%rcx,%rsi,1)
   12ac1:	48 c7 44 31 08 00 00 	movq   $0x0,0x8(%rcx,%rsi,1)
   12ac8:	00 00 
   12aca:	4c 89 6c 31 10       	mov    %r13,0x10(%rcx,%rsi,1)
   12acf:	4c 89 7c 31 18       	mov    %r15,0x18(%rcx,%rsi,1)
   12ad4:	48 83 43 10 01       	addq   $0x1,0x10(%rbx)
   12ad9:	49 8b 46 08          	mov    0x8(%r14),%rax
   12add:	c6 00 01             	movb   $0x1,(%rax)
   12ae0:	48 83 c4 08          	add    $0x8,%rsp
   12ae4:	5b                   	pop    %rbx
   12ae5:	41 5c                	pop    %r12
   12ae7:	41 5d                	pop    %r13
   12ae9:	41 5e                	pop    %r14
   12aeb:	41 5f                	pop    %r15
   12aed:	5d                   	pop    %rbp
   12aee:	c3                   	retq   
   12aef:	ff 15 eb 2f 03 00    	callq  *0x32feb(%rip)        # 45ae0 <_GLOBAL_OFFSET_TABLE_+0x158>
   12af5:	0f 0b                	ud2    
   12af7:	be 08 00 00 00       	mov    $0x8,%esi
   12afc:	4c 89 e7             	mov    %r12,%rdi
   12aff:	ff 15 1b 30 03 00    	callq  *0x3301b(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   12b05:	0f 0b                	ud2    
   12b07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   12b0e:	00 00 

0000000000012b10 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}>:
   12b10:	55                   	push   %rbp
   12b11:	41 57                	push   %r15
   12b13:	41 56                	push   %r14
   12b15:	41 55                	push   %r13
   12b17:	41 54                	push   %r12
   12b19:	53                   	push   %rbx
   12b1a:	50                   	push   %rax
   12b1b:	48 39 d6             	cmp    %rdx,%rsi
   12b1e:	0f 83 ea 00 00 00    	jae    12c0e <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xfe>
   12b24:	49 89 d7             	mov    %rdx,%r15
   12b27:	49 89 f5             	mov    %rsi,%r13
   12b2a:	49 89 fe             	mov    %rdi,%r14
   12b2d:	48 8b 07             	mov    (%rdi),%rax
   12b30:	48 8b 18             	mov    (%rax),%rbx
   12b33:	48 8b 40 08          	mov    0x8(%rax),%rax
   12b37:	48 8b 28             	mov    (%rax),%rbp
   12b3a:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   12b3e:	48 3b 73 08          	cmp    0x8(%rbx),%rsi
   12b42:	75 6b                	jne    12baf <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0x9f>
   12b44:	48 89 f1             	mov    %rsi,%rcx
   12b47:	48 ff c1             	inc    %rcx
   12b4a:	0f 84 cd 00 00 00    	je     12c1d <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0x10d>
   12b50:	48 8d 04 36          	lea    (%rsi,%rsi,1),%rax
   12b54:	48 39 c8             	cmp    %rcx,%rax
   12b57:	48 0f 47 c8          	cmova  %rax,%rcx
   12b5b:	48 83 f9 04          	cmp    $0x4,%rcx
   12b5f:	b8 04 00 00 00       	mov    $0x4,%eax
   12b64:	48 0f 47 c1          	cmova  %rcx,%rax
   12b68:	ba 18 00 00 00       	mov    $0x18,%edx
   12b6d:	31 c9                	xor    %ecx,%ecx
   12b6f:	48 f7 e2             	mul    %rdx
   12b72:	49 89 c4             	mov    %rax,%r12
   12b75:	0f 90 c0             	seto   %al
   12b78:	0f 91 c1             	setno  %cl
   12b7b:	48 c1 e1 03          	shl    $0x3,%rcx
   12b7f:	48 85 f6             	test   %rsi,%rsi
   12b82:	74 30                	je     12bb4 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xa4>
   12b84:	84 c0                	test   %al,%al
   12b86:	0f 85 91 00 00 00    	jne    12c1d <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0x10d>
   12b8c:	48 8b 3b             	mov    (%rbx),%rdi
   12b8f:	48 85 ff             	test   %rdi,%rdi
   12b92:	74 24                	je     12bb8 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xa8>
   12b94:	48 c1 e6 03          	shl    $0x3,%rsi
   12b98:	48 8d 34 76          	lea    (%rsi,%rsi,2),%rsi
   12b9c:	48 85 f6             	test   %rsi,%rsi
   12b9f:	74 17                	je     12bb8 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xa8>
   12ba1:	48 89 ca             	mov    %rcx,%rdx
   12ba4:	4c 89 e1             	mov    %r12,%rcx
   12ba7:	ff 15 cb 33 03 00    	callq  *0x333cb(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
   12bad:	eb 1a                	jmp    12bc9 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xb9>
   12baf:	48 8b 0b             	mov    (%rbx),%rcx
   12bb2:	eb 3c                	jmp    12bf0 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xe0>
   12bb4:	84 c0                	test   %al,%al
   12bb6:	75 65                	jne    12c1d <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0x10d>
   12bb8:	4d 85 e4             	test   %r12,%r12
   12bbb:	74 0f                	je     12bcc <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xbc>
   12bbd:	4c 89 e7             	mov    %r12,%rdi
   12bc0:	48 89 ce             	mov    %rcx,%rsi
   12bc3:	ff 15 b7 2f 03 00    	callq  *0x32fb7(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   12bc9:	48 89 c1             	mov    %rax,%rcx
   12bcc:	48 85 c9             	test   %rcx,%rcx
   12bcf:	74 54                	je     12c25 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0x115>
   12bd1:	48 ba ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rdx
   12bd8:	aa aa aa 
   12bdb:	4c 89 e0             	mov    %r12,%rax
   12bde:	48 f7 e2             	mul    %rdx
   12be1:	48 89 0b             	mov    %rcx,(%rbx)
   12be4:	48 c1 ea 04          	shr    $0x4,%rdx
   12be8:	48 89 53 08          	mov    %rdx,0x8(%rbx)
   12bec:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   12bf0:	48 8d 04 76          	lea    (%rsi,%rsi,2),%rax
   12bf4:	4c 89 2c c1          	mov    %r13,(%rcx,%rax,8)
   12bf8:	4c 89 7c c1 08       	mov    %r15,0x8(%rcx,%rax,8)
   12bfd:	48 89 6c c1 10       	mov    %rbp,0x10(%rcx,%rax,8)
   12c02:	48 83 43 10 01       	addq   $0x1,0x10(%rbx)
   12c07:	49 8b 46 08          	mov    0x8(%r14),%rax
   12c0b:	c6 00 01             	movb   $0x1,(%rax)
   12c0e:	48 83 c4 08          	add    $0x8,%rsp
   12c12:	5b                   	pop    %rbx
   12c13:	41 5c                	pop    %r12
   12c15:	41 5d                	pop    %r13
   12c17:	41 5e                	pop    %r14
   12c19:	41 5f                	pop    %r15
   12c1b:	5d                   	pop    %rbp
   12c1c:	c3                   	retq   
   12c1d:	ff 15 bd 2e 03 00    	callq  *0x32ebd(%rip)        # 45ae0 <_GLOBAL_OFFSET_TABLE_+0x158>
   12c23:	0f 0b                	ud2    
   12c25:	be 08 00 00 00       	mov    $0x8,%esi
   12c2a:	4c 89 e7             	mov    %r12,%rdi
   12c2d:	ff 15 ed 2e 03 00    	callq  *0x32eed(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   12c33:	0f 0b                	ud2    
   12c35:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   12c3c:	00 00 00 
   12c3f:	90                   	nop

0000000000012c40 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}>:
   12c40:	55                   	push   %rbp
   12c41:	41 57                	push   %r15
   12c43:	41 56                	push   %r14
   12c45:	41 55                	push   %r13
   12c47:	41 54                	push   %r12
   12c49:	53                   	push   %rbx
   12c4a:	50                   	push   %rax
   12c4b:	48 39 d6             	cmp    %rdx,%rsi
   12c4e:	0f 83 ea 00 00 00    	jae    12d3e <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xfe>
   12c54:	49 89 d7             	mov    %rdx,%r15
   12c57:	49 89 f5             	mov    %rsi,%r13
   12c5a:	49 89 fe             	mov    %rdi,%r14
   12c5d:	48 8b 07             	mov    (%rdi),%rax
   12c60:	48 8b 08             	mov    (%rax),%rcx
   12c63:	48 8b 50 08          	mov    0x8(%rax),%rdx
   12c67:	48 8b 19             	mov    (%rcx),%rbx
   12c6a:	48 8b 12             	mov    (%rdx),%rdx
   12c6d:	48 8b 40 10          	mov    0x10(%rax),%rax
   12c71:	48 8b 28             	mov    (%rax),%rbp
   12c74:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   12c78:	48 3b 73 08          	cmp    0x8(%rbx),%rsi
   12c7c:	75 68                	jne    12ce6 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xa6>
   12c7e:	48 89 14 24          	mov    %rdx,(%rsp)
   12c82:	48 89 f1             	mov    %rsi,%rcx
   12c85:	48 ff c1             	inc    %rcx
   12c88:	0f 84 bf 00 00 00    	je     12d4d <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0x10d>
   12c8e:	48 8d 04 36          	lea    (%rsi,%rsi,1),%rax
   12c92:	48 39 c8             	cmp    %rcx,%rax
   12c95:	48 0f 47 c8          	cmova  %rax,%rcx
   12c99:	48 83 f9 04          	cmp    $0x4,%rcx
   12c9d:	b8 04 00 00 00       	mov    $0x4,%eax
   12ca2:	48 0f 47 c1          	cmova  %rcx,%rax
   12ca6:	ba 20 00 00 00       	mov    $0x20,%edx
   12cab:	31 c9                	xor    %ecx,%ecx
   12cad:	48 f7 e2             	mul    %rdx
   12cb0:	49 89 c4             	mov    %rax,%r12
   12cb3:	0f 90 c0             	seto   %al
   12cb6:	0f 91 c1             	setno  %cl
   12cb9:	48 c1 e1 03          	shl    $0x3,%rcx
   12cbd:	48 85 f6             	test   %rsi,%rsi
   12cc0:	74 29                	je     12ceb <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xab>
   12cc2:	84 c0                	test   %al,%al
   12cc4:	0f 85 83 00 00 00    	jne    12d4d <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0x10d>
   12cca:	48 8b 3b             	mov    (%rbx),%rdi
   12ccd:	48 85 ff             	test   %rdi,%rdi
   12cd0:	74 1d                	je     12cef <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xaf>
   12cd2:	48 c1 e6 05          	shl    $0x5,%rsi
   12cd6:	74 17                	je     12cef <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xaf>
   12cd8:	48 89 ca             	mov    %rcx,%rdx
   12cdb:	4c 89 e1             	mov    %r12,%rcx
   12cde:	ff 15 94 32 03 00    	callq  *0x33294(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
   12ce4:	eb 1a                	jmp    12d00 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xc0>
   12ce6:	48 8b 0b             	mov    (%rbx),%rcx
   12ce9:	eb 30                	jmp    12d1b <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xdb>
   12ceb:	84 c0                	test   %al,%al
   12ced:	75 5e                	jne    12d4d <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0x10d>
   12cef:	4d 85 e4             	test   %r12,%r12
   12cf2:	74 0f                	je     12d03 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xc3>
   12cf4:	4c 89 e7             	mov    %r12,%rdi
   12cf7:	48 89 ce             	mov    %rcx,%rsi
   12cfa:	ff 15 80 2e 03 00    	callq  *0x32e80(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   12d00:	48 89 c1             	mov    %rax,%rcx
   12d03:	48 85 c9             	test   %rcx,%rcx
   12d06:	74 4d                	je     12d55 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0x115>
   12d08:	48 89 0b             	mov    %rcx,(%rbx)
   12d0b:	49 c1 ec 05          	shr    $0x5,%r12
   12d0f:	4c 89 63 08          	mov    %r12,0x8(%rbx)
   12d13:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   12d17:	48 8b 14 24          	mov    (%rsp),%rdx
   12d1b:	48 c1 e6 05          	shl    $0x5,%rsi
   12d1f:	4c 89 2c 31          	mov    %r13,(%rcx,%rsi,1)
   12d23:	4c 89 7c 31 08       	mov    %r15,0x8(%rcx,%rsi,1)
   12d28:	48 89 54 31 10       	mov    %rdx,0x10(%rcx,%rsi,1)
   12d2d:	48 89 6c 31 18       	mov    %rbp,0x18(%rcx,%rsi,1)
   12d32:	48 83 43 10 01       	addq   $0x1,0x10(%rbx)
   12d37:	49 8b 46 08          	mov    0x8(%r14),%rax
   12d3b:	c6 00 01             	movb   $0x1,(%rax)
   12d3e:	48 83 c4 08          	add    $0x8,%rsp
   12d42:	5b                   	pop    %rbx
   12d43:	41 5c                	pop    %r12
   12d45:	41 5d                	pop    %r13
   12d47:	41 5e                	pop    %r14
   12d49:	41 5f                	pop    %r15
   12d4b:	5d                   	pop    %rbp
   12d4c:	c3                   	retq   
   12d4d:	ff 15 8d 2d 03 00    	callq  *0x32d8d(%rip)        # 45ae0 <_GLOBAL_OFFSET_TABLE_+0x158>
   12d53:	0f 0b                	ud2    
   12d55:	be 08 00 00 00       	mov    $0x8,%esi
   12d5a:	4c 89 e7             	mov    %r12,%rdi
   12d5d:	ff 15 bd 2d 03 00    	callq  *0x32dbd(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   12d63:	0f 0b                	ud2    
   12d65:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   12d6c:	00 00 00 
   12d6f:	90                   	nop

0000000000012d70 <addr2line::name_attr>:
   12d70:	55                   	push   %rbp
   12d71:	41 57                	push   %r15
   12d73:	41 56                	push   %r14
   12d75:	41 55                	push   %r13
   12d77:	41 54                	push   %r12
   12d79:	53                   	push   %rbx
   12d7a:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
   12d81:	49 89 fe             	mov    %rdi,%r14
   12d84:	4c 8b a4 24 f8 00 00 	mov    0xf8(%rsp),%r12
   12d8b:	00 
   12d8c:	4d 85 e4             	test   %r12,%r12
   12d8f:	0f 84 79 04 00 00    	je     1320e <addr2line::name_attr+0x49e>
   12d95:	4c 89 cb             	mov    %r9,%rbx
   12d98:	4d 89 c7             	mov    %r8,%r15
   12d9b:	49 89 cd             	mov    %rcx,%r13
   12d9e:	4c 8b 84 24 f0 00 00 	mov    0xf0(%rsp),%r8
   12da5:	00 
   12da6:	48 83 fe 0d          	cmp    $0xd,%rsi
   12daa:	0f 84 a7 00 00 00    	je     12e57 <addr2line::name_attr+0xe7>
   12db0:	48 83 fe 0e          	cmp    $0xe,%rsi
   12db4:	0f 85 54 04 00 00    	jne    1320e <addr2line::name_attr+0x49e>
   12dba:	4d 85 c0             	test   %r8,%r8
   12dbd:	0f 84 62 03 00 00    	je     13125 <addr2line::name_attr+0x3b5>
   12dc3:	31 ff                	xor    %edi,%edi
   12dc5:	49 83 f8 01          	cmp    $0x1,%r8
   12dc9:	0f 85 58 01 00 00    	jne    12f27 <addr2line::name_attr+0x1b7>
   12dcf:	48 89 f8             	mov    %rdi,%rax
   12dd2:	48 c1 e0 09          	shl    $0x9,%rax
   12dd6:	48 8d 04 f8          	lea    (%rax,%rdi,8),%rax
   12dda:	48 39 14 03          	cmp    %rdx,(%rbx,%rax,1)
   12dde:	0f 84 41 03 00 00    	je     13125 <addr2line::name_attr+0x3b5>
   12de4:	0f 92 c0             	setb   %al
   12de7:	0f b6 c0             	movzbl %al,%eax
   12dea:	48 01 c7             	add    %rax,%rdi
   12ded:	0f 84 32 03 00 00    	je     13125 <addr2line::name_attr+0x3b5>
   12df3:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   12df7:	4c 39 c7             	cmp    %r8,%rdi
   12dfa:	0f 83 66 04 00 00    	jae    13266 <addr2line::name_attr+0x4f6>
   12e00:	48 89 f8             	mov    %rdi,%rax
   12e03:	48 c1 e0 09          	shl    $0x9,%rax
   12e07:	48 8d 04 f8          	lea    (%rax,%rdi,8),%rax
   12e0b:	48 2b 14 03          	sub    (%rbx,%rax,1),%rdx
   12e0f:	31 c9                	xor    %ecx,%ecx
   12e11:	80 7c 03 39 08       	cmpb   $0x8,0x39(%rbx,%rax,1)
   12e16:	0f 94 c1             	sete   %cl
   12e19:	48 8b 74 03 18       	mov    0x18(%rbx,%rax,1),%rsi
   12e1e:	48 8b 7c 03 30       	mov    0x30(%rbx,%rax,1),%rdi
   12e23:	48 29 fe             	sub    %rdi,%rsi
   12e26:	48 8d 0c ce          	lea    (%rsi,%rcx,8),%rcx
   12e2a:	48 83 c1 04          	add    $0x4,%rcx
   12e2e:	48 29 ca             	sub    %rcx,%rdx
   12e31:	0f 82 d4 00 00 00    	jb     12f0b <addr2line::name_attr+0x19b>
   12e37:	48 29 d7             	sub    %rdx,%rdi
   12e3a:	0f 86 cb 00 00 00    	jbe    12f0b <addr2line::name_attr+0x19b>
   12e40:	4c 8d 14 03          	lea    (%rbx,%rax,1),%r10
   12e44:	49 83 c2 18          	add    $0x18,%r10
   12e48:	4c 8d 04 03          	lea    (%rbx,%rax,1),%r8
   12e4c:	49 83 c0 40          	add    $0x40,%r8
   12e50:	48 03 54 03 28       	add    0x28(%rbx,%rax,1),%rdx
   12e55:	eb 3b                	jmp    12e92 <addr2line::name_attr+0x122>
   12e57:	31 c0                	xor    %eax,%eax
   12e59:	41 80 7d 31 08       	cmpb   $0x8,0x31(%r13)
   12e5e:	0f 94 c0             	sete   %al
   12e61:	49 8b 4d 10          	mov    0x10(%r13),%rcx
   12e65:	49 8b 7d 28          	mov    0x28(%r13),%rdi
   12e69:	48 29 f9             	sub    %rdi,%rcx
   12e6c:	48 8d 04 c1          	lea    (%rcx,%rax,8),%rax
   12e70:	48 83 c0 04          	add    $0x4,%rax
   12e74:	48 29 c2             	sub    %rax,%rdx
   12e77:	0f 82 8e 00 00 00    	jb     12f0b <addr2line::name_attr+0x19b>
   12e7d:	48 29 d7             	sub    %rdx,%rdi
   12e80:	0f 86 85 00 00 00    	jbe    12f0b <addr2line::name_attr+0x19b>
   12e86:	4d 8d 55 10          	lea    0x10(%r13),%r10
   12e8a:	4d 8d 45 38          	lea    0x38(%r13),%r8
   12e8e:	49 03 55 20          	add    0x20(%r13),%rdx
   12e92:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   12e97:	48 89 7c 24 40       	mov    %rdi,0x40(%rsp)
   12e9c:	4c 89 54 24 48       	mov    %r10,0x48(%rsp)
   12ea1:	4c 89 44 24 50       	mov    %r8,0x50(%rsp)
   12ea6:	48 c7 44 24 58 00 00 	movq   $0x0,0x58(%rsp)
   12ead:	00 00 
   12eaf:	41 b9 13 00 00 00    	mov    $0x13,%r9d
   12eb5:	48 85 ff             	test   %rdi,%rdi
   12eb8:	0f 84 a7 00 00 00    	je     12f65 <addr2line::name_attr+0x1f5>
   12ebe:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   12ec2:	31 f6                	xor    %esi,%esi
   12ec4:	31 c9                	xor    %ecx,%ecx
   12ec6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   12ecd:	00 00 00 
   12ed0:	48 89 d0             	mov    %rdx,%rax
   12ed3:	48 83 c2 01          	add    $0x1,%rdx
   12ed7:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   12edc:	48 89 7c 24 40       	mov    %rdi,0x40(%rsp)
   12ee1:	0f b6 00             	movzbl (%rax),%eax
   12ee4:	83 f9 3f             	cmp    $0x3f,%ecx
   12ee7:	75 04                	jne    12eed <addr2line::name_attr+0x17d>
   12ee9:	3c 01                	cmp    $0x1,%al
   12eeb:	77 70                	ja     12f5d <addr2line::name_attr+0x1ed>
   12eed:	0f b6 e8             	movzbl %al,%ebp
   12ef0:	89 e8                	mov    %ebp,%eax
   12ef2:	83 e0 7f             	and    $0x7f,%eax
   12ef5:	48 d3 e0             	shl    %cl,%rax
   12ef8:	48 09 c6             	or     %rax,%rsi
   12efb:	40 84 ed             	test   %bpl,%bpl
   12efe:	79 79                	jns    12f79 <addr2line::name_attr+0x209>
   12f00:	83 c1 07             	add    $0x7,%ecx
   12f03:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   12f07:	72 c7                	jb     12ed0 <addr2line::name_attr+0x160>
   12f09:	eb 5a                	jmp    12f65 <addr2line::name_attr+0x1f5>
   12f0b:	49 c7 46 10 00 00 00 	movq   $0x0,0x10(%r14)
   12f12:	00 
   12f13:	49 c7 46 08 37 00 00 	movq   $0x37,0x8(%r14)
   12f1a:	00 
   12f1b:	49 c7 06 01 00 00 00 	movq   $0x1,(%r14)
   12f22:	e9 ee 02 00 00       	jmpq   13215 <addr2line::name_attr+0x4a5>
   12f27:	4c 89 c0             	mov    %r8,%rax
   12f2a:	e9 0e 00 00 00       	jmpq   12f3d <addr2line::name_attr+0x1cd>
   12f2f:	90                   	nop
   12f30:	48 29 c8             	sub    %rcx,%rax
   12f33:	48 83 f8 01          	cmp    $0x1,%rax
   12f37:	0f 86 92 fe ff ff    	jbe    12dcf <addr2line::name_attr+0x5f>
   12f3d:	48 89 c1             	mov    %rax,%rcx
   12f40:	48 d1 e9             	shr    %rcx
   12f43:	48 8d 2c 39          	lea    (%rcx,%rdi,1),%rbp
   12f47:	48 89 ee             	mov    %rbp,%rsi
   12f4a:	48 c1 e6 09          	shl    $0x9,%rsi
   12f4e:	48 8d 34 ee          	lea    (%rsi,%rbp,8),%rsi
   12f52:	48 39 14 33          	cmp    %rdx,(%rbx,%rsi,1)
   12f56:	77 d8                	ja     12f30 <addr2line::name_attr+0x1c0>
   12f58:	48 89 ef             	mov    %rbp,%rdi
   12f5b:	eb d3                	jmp    12f30 <addr2line::name_attr+0x1c0>
   12f5d:	41 b9 06 00 00 00    	mov    $0x6,%r9d
   12f63:	31 d2                	xor    %edx,%edx
   12f65:	49 89 56 10          	mov    %rdx,0x10(%r14)
   12f69:	4d 89 4e 08          	mov    %r9,0x8(%r14)
   12f6d:	49 c7 06 01 00 00 00 	movq   $0x1,(%r14)
   12f74:	e9 9c 02 00 00       	jmpq   13215 <addr2line::name_attr+0x4a5>
   12f79:	48 85 f6             	test   %rsi,%rsi
   12f7c:	0f 84 9a 01 00 00    	je     1311c <addr2line::name_attr+0x3ac>
   12f82:	48 8d 46 ff          	lea    -0x1(%rsi),%rax
   12f86:	49 3b 40 10          	cmp    0x10(%r8),%rax
   12f8a:	4c 89 94 24 80 00 00 	mov    %r10,0x80(%rsp)
   12f91:	00 
   12f92:	0f 83 9e 01 00 00    	jae    13136 <addr2line::name_attr+0x3c6>
   12f98:	48 6b f8 70          	imul   $0x70,%rax,%rdi
   12f9c:	49 03 38             	add    (%r8),%rdi
   12f9f:	80 7f 6a 01          	cmpb   $0x1,0x6a(%rdi)
   12fa3:	75 09                	jne    12fae <addr2line::name_attr+0x23e>
   12fa5:	48 c7 44 24 58 01 00 	movq   $0x1,0x58(%rsp)
   12fac:	00 00 
   12fae:	48 83 c7 08          	add    $0x8,%rdi
   12fb2:	ff 15 d0 2a 03 00    	callq  *0x32ad0(%rip)        # 45a88 <_GLOBAL_OFFSET_TABLE_+0x100>
   12fb8:	48 85 d2             	test   %rdx,%rdx
   12fbb:	0f 84 4d 02 00 00    	je     1320e <addr2line::name_attr+0x49e>
   12fc1:	48 89 c5             	mov    %rax,%rbp
   12fc4:	48 c1 e2 04          	shl    $0x4,%rdx
   12fc8:	48 01 c2             	add    %rax,%rdx
   12fcb:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   12fd0:	b8 2d 00 00 00       	mov    $0x2d,%eax
   12fd5:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   12fda:	31 c0                	xor    %eax,%eax
   12fdc:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   12fe1:	48 8b 84 24 80 00 00 	mov    0x80(%rsp),%rax
   12fe8:	00 
   12fe9:	48 8b 4d 00          	mov    0x0(%rbp),%rcx
   12fed:	8b 50 20             	mov    0x20(%rax),%edx
   12ff0:	44 0f b7 4d 0a       	movzwl 0xa(%rbp),%r9d
   12ff5:	44 8b 45 08          	mov    0x8(%rbp),%r8d
   12ff9:	48 8d bc 24 90 00 00 	lea    0x90(%rsp),%rdi
   13000:	00 
   13001:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   13006:	e8 b5 78 ff ff       	callq  a8c0 <gimli::read::unit::parse_attribute>
   1300b:	83 bc 24 90 00 00 00 	cmpl   $0x1,0x90(%rsp)
   13012:	01 
   13013:	0f 84 b1 01 00 00    	je     131ca <addr2line::name_attr+0x45a>
   13019:	0f b7 84 24 b0 00 00 	movzwl 0xb0(%rsp),%eax
   13020:	00 
   13021:	66 83 f8 46          	cmp    $0x46,%ax
   13025:	7e 55                	jle    1307c <addr2line::name_attr+0x30c>
   13027:	66 83 f8 47          	cmp    $0x47,%ax
   1302b:	74 5b                	je     13088 <addr2line::name_attr+0x318>
   1302d:	0f b7 c8             	movzwl %ax,%ecx
   13030:	81 f9 07 20 00 00    	cmp    $0x2007,%ecx
   13036:	74 06                	je     1303e <addr2line::name_attr+0x2ce>
   13038:	66 83 f8 6e          	cmp    $0x6e,%ax
   1303c:	75 73                	jne    130b1 <addr2line::name_attr+0x341>
   1303e:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   13043:	48 8d b4 24 98 00 00 	lea    0x98(%rsp),%rsi
   1304a:	00 
   1304b:	e8 b0 8a ff ff       	callq  bb00 <gimli::read::unit::Attribute<R>::value>
   13050:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   13055:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   1305a:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   1305f:	48 8d 7c 24 60       	lea    0x60(%rsp),%rdi
   13064:	4c 89 fe             	mov    %r15,%rsi
   13067:	4c 89 ea             	mov    %r13,%rdx
   1306a:	e8 31 92 ff ff       	callq  c2a0 <gimli::read::dwarf::Dwarf<R>::attr_string>
   1306f:	48 83 7c 24 60 00    	cmpq   $0x0,0x60(%rsp)
   13075:	75 3a                	jne    130b1 <addr2line::name_attr+0x341>
   13077:	e9 ab 01 00 00       	jmpq   13227 <addr2line::name_attr+0x4b7>
   1307c:	66 83 f8 03          	cmp    $0x3,%ax
   13080:	74 4b                	je     130cd <addr2line::name_attr+0x35d>
   13082:	66 83 f8 31          	cmp    $0x31,%ax
   13086:	75 29                	jne    130b1 <addr2line::name_attr+0x341>
   13088:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1308d:	48 8d b4 24 98 00 00 	lea    0x98(%rsp),%rsi
   13094:	00 
   13095:	e8 66 8a ff ff       	callq  bb00 <gimli::read::unit::Attribute<R>::value>
   1309a:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1309f:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   130a4:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   130a9:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
   130b0:	00 
   130b1:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   130b6:	48 83 c5 10          	add    $0x10,%rbp
   130ba:	48 39 c5             	cmp    %rax,%rbp
   130bd:	0f 84 20 01 00 00    	je     131e3 <addr2line::name_attr+0x473>
   130c3:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   130c8:	e9 1c ff ff ff       	jmpq   12fe9 <addr2line::name_attr+0x279>
   130cd:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   130d2:	48 8d b4 24 98 00 00 	lea    0x98(%rsp),%rsi
   130d9:	00 
   130da:	e8 21 8a ff ff       	callq  bb00 <gimli::read::unit::Attribute<R>::value>
   130df:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   130e4:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   130e9:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   130ee:	48 8d 7c 24 60       	lea    0x60(%rsp),%rdi
   130f3:	4c 89 fe             	mov    %r15,%rsi
   130f6:	4c 89 ea             	mov    %r13,%rdx
   130f9:	e8 a2 91 ff ff       	callq  c2a0 <gimli::read::dwarf::Dwarf<R>::attr_string>
   130fe:	48 83 7c 24 60 00    	cmpq   $0x0,0x60(%rsp)
   13104:	75 ab                	jne    130b1 <addr2line::name_attr+0x341>
   13106:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
   1310b:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   13110:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   13115:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   1311a:	eb 95                	jmp    130b1 <addr2line::name_attr+0x341>
   1311c:	48 c7 44 24 58 ff ff 	movq   $0xffffffffffffffff,0x58(%rsp)
   13123:	ff ff 
   13125:	41 c6 46 08 36       	movb   $0x36,0x8(%r14)
   1312a:	49 c7 06 01 00 00 00 	movq   $0x1,(%r14)
   13131:	e9 df 00 00 00       	jmpq   13215 <addr2line::name_attr+0x4a5>
   13136:	4d 8b 58 18          	mov    0x18(%r8),%r11
   1313a:	41 b9 12 00 00 00    	mov    $0x12,%r9d
   13140:	4d 85 db             	test   %r11,%r11
   13143:	0f 84 1a fe ff ff    	je     12f63 <addr2line::name_attr+0x1f3>
   13149:	49 8b 40 20          	mov    0x20(%r8),%rax
   1314d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   13152:	31 d2                	xor    %edx,%edx
   13154:	45 0f b7 93 32 05 00 	movzwl 0x532(%r11),%r10d
   1315b:	00 
   1315c:	49 8d 7b f0          	lea    -0x10(%r11),%rdi
   13160:	4c 89 d1             	mov    %r10,%rcx
   13163:	48 f7 d9             	neg    %rcx
   13166:	48 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%rbp
   1316d:	48 8d 04 29          	lea    (%rcx,%rbp,1),%rax
   13171:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   13175:	74 2f                	je     131a6 <addr2line::name_attr+0x436>
   13177:	45 31 c0             	xor    %r8d,%r8d
   1317a:	49 39 74 eb 10       	cmp    %rsi,0x10(%r11,%rbp,8)
   1317f:	41 0f 95 c0          	setne  %r8b
   13183:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   1318a:	4c 0f 47 c0          	cmova  %rax,%r8
   1318e:	48 83 c5 01          	add    $0x1,%rbp
   13192:	49 83 f8 ff          	cmp    $0xffffffffffffffff,%r8
   13196:	74 11                	je     131a9 <addr2line::name_attr+0x439>
   13198:	48 83 c7 70          	add    $0x70,%rdi
   1319c:	4d 85 c0             	test   %r8,%r8
   1319f:	75 cc                	jne    1316d <addr2line::name_attr+0x3fd>
   131a1:	e9 f9 fd ff ff       	jmpq   12f9f <addr2line::name_attr+0x22f>
   131a6:	4c 89 d5             	mov    %r10,%rbp
   131a9:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   131ae:	48 85 c0             	test   %rax,%rax
   131b1:	0f 84 ae fd ff ff    	je     12f65 <addr2line::name_attr+0x1f5>
   131b7:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
   131bb:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   131c0:	4d 8b 9c eb 38 05 00 	mov    0x538(%r11,%rbp,8),%r11
   131c7:	00 
   131c8:	eb 8a                	jmp    13154 <addr2line::name_attr+0x3e4>
   131ca:	48 8d 84 24 98 00 00 	lea    0x98(%rsp),%rax
   131d1:	00 
   131d2:	0f 10 00             	movups (%rax),%xmm0
   131d5:	41 0f 11 46 08       	movups %xmm0,0x8(%r14)
   131da:	49 c7 06 01 00 00 00 	movq   $0x1,(%r14)
   131e1:	eb 32                	jmp    13215 <addr2line::name_attr+0x4a5>
   131e3:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   131e8:	48 85 c0             	test   %rax,%rax
   131eb:	74 16                	je     13203 <addr2line::name_attr+0x493>
   131ed:	49 89 46 08          	mov    %rax,0x8(%r14)
   131f1:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   131f6:	49 89 46 10          	mov    %rax,0x10(%r14)
   131fa:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
   13201:	eb 12                	jmp    13215 <addr2line::name_attr+0x4a5>
   13203:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   13208:	48 83 fe 2d          	cmp    $0x2d,%rsi
   1320c:	75 2c                	jne    1323a <addr2line::name_attr+0x4ca>
   1320e:	0f 57 c0             	xorps  %xmm0,%xmm0
   13211:	41 0f 11 06          	movups %xmm0,(%r14)
   13215:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
   1321c:	5b                   	pop    %rbx
   1321d:	41 5c                	pop    %r12
   1321f:	41 5d                	pop    %r13
   13221:	41 5e                	pop    %r14
   13223:	41 5f                	pop    %r15
   13225:	5d                   	pop    %rbp
   13226:	c3                   	retq   
   13227:	0f 10 44 24 68       	movups 0x68(%rsp),%xmm0
   1322c:	41 0f 11 46 08       	movups %xmm0,0x8(%r14)
   13231:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
   13238:	eb db                	jmp    13215 <addr2line::name_attr+0x4a5>
   1323a:	49 83 c4 ff          	add    $0xffffffffffffffff,%r12
   1323e:	4c 89 f7             	mov    %r14,%rdi
   13241:	48 8b 94 24 88 00 00 	mov    0x88(%rsp),%rdx
   13248:	00 
   13249:	4c 89 e9             	mov    %r13,%rcx
   1324c:	4d 89 f8             	mov    %r15,%r8
   1324f:	49 89 d9             	mov    %rbx,%r9
   13252:	41 54                	push   %r12
   13254:	ff b4 24 f8 00 00 00 	pushq  0xf8(%rsp)
   1325b:	e8 10 fb ff ff       	callq  12d70 <addr2line::name_attr>
   13260:	48 83 c4 10          	add    $0x10,%rsp
   13264:	eb af                	jmp    13215 <addr2line::name_attr+0x4a5>
   13266:	48 8d 15 4b 08 03 00 	lea    0x3084b(%rip),%rdx        # 43ab8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x580>
   1326d:	4c 89 c6             	mov    %r8,%rsi
   13270:	ff 15 1a 2a 03 00    	callq  *0x32a1a(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   13276:	0f 0b                	ud2    
   13278:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1327f:	00 

0000000000013280 <<std::thread::local::AccessError as core::fmt::Debug>::fmt>:
   13280:	48 83 ec 18          	sub    $0x18,%rsp
   13284:	48 89 f7             	mov    %rsi,%rdi
   13287:	48 8d 35 b5 45 02 00 	lea    0x245b5(%rip),%rsi        # 37843 <str.6+0x523>
   1328e:	ba 0b 00 00 00       	mov    $0xb,%edx
   13293:	ff 15 9f 27 03 00    	callq  *0x3279f(%rip)        # 45a38 <_GLOBAL_OFFSET_TABLE_+0xb0>
   13299:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   1329e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   132a3:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   132a8:	ff 15 22 29 03 00    	callq  *0x32922(%rip)        # 45bd0 <_GLOBAL_OFFSET_TABLE_+0x248>
   132ae:	48 83 c4 18          	add    $0x18,%rsp
   132b2:	c3                   	retq   
   132b3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   132ba:	00 00 00 
   132bd:	0f 1f 00             	nopl   (%rax)

00000000000132c0 <std::thread::local::LocalKey<T>::try_with>:
   132c0:	41 57                	push   %r15
   132c2:	41 56                	push   %r14
   132c4:	53                   	push   %rbx
   132c5:	48 83 ec 30          	sub    $0x30,%rsp
   132c9:	49 89 d6             	mov    %rdx,%r14
   132cc:	48 89 f3             	mov    %rsi,%rbx
   132cf:	49 89 ff             	mov    %rdi,%r15
   132d2:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   132d7:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   132dc:	66 66 66 64 48 8b 04 	data16 data16 data16 mov %fs:0x0,%rax
   132e3:	25 00 00 00 00 
   132e8:	83 b8 60 ff ff ff 01 	cmpl   $0x1,-0xa0(%rax)
   132ef:	75 09                	jne    132fa <std::thread::local::LocalKey<T>::try_with+0x3a>
   132f1:	48 8d 80 68 ff ff ff 	lea    -0x98(%rax),%rax
   132f8:	eb 0a                	jmp    13304 <std::thread::local::LocalKey<T>::try_with+0x44>
   132fa:	e8 d1 00 00 00       	callq  133d0 <std::thread::local::fast::Key<T>::try_initialize>
   132ff:	48 85 c0             	test   %rax,%rax
   13302:	74 39                	je     1333d <std::thread::local::LocalKey<T>::try_with+0x7d>
   13304:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
   13309:	4c 89 74 24 28       	mov    %r14,0x28(%rsp)
   1330e:	48 83 38 00          	cmpq   $0x0,(%rax)
   13312:	75 5a                	jne    1336e <std::thread::local::LocalKey<T>::try_with+0xae>
   13314:	0f 10 40 08          	movups 0x8(%rax),%xmm0
   13318:	48 89 58 08          	mov    %rbx,0x8(%rax)
   1331c:	4c 89 70 10          	mov    %r14,0x10(%rax)
   13320:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   13327:	41 0f 11 47 08       	movups %xmm0,0x8(%r15)
   1332c:	49 c7 07 00 00 00 00 	movq   $0x0,(%r15)
   13333:	48 83 c4 30          	add    $0x30,%rsp
   13337:	5b                   	pop    %rbx
   13338:	41 5e                	pop    %r14
   1333a:	41 5f                	pop    %r15
   1333c:	c3                   	retq   
   1333d:	49 c7 07 01 00 00 00 	movq   $0x1,(%r15)
   13344:	48 85 db             	test   %rbx,%rbx
   13347:	74 ea                	je     13333 <std::thread::local::LocalKey<T>::try_with+0x73>
   13349:	48 89 df             	mov    %rbx,%rdi
   1334c:	41 ff 16             	callq  *(%r14)
   1334f:	49 8b 76 08          	mov    0x8(%r14),%rsi
   13353:	48 85 f6             	test   %rsi,%rsi
   13356:	74 db                	je     13333 <std::thread::local::LocalKey<T>::try_with+0x73>
   13358:	49 8b 56 10          	mov    0x10(%r14),%rdx
   1335c:	48 89 df             	mov    %rbx,%rdi
   1335f:	48 83 c4 30          	add    $0x30,%rsp
   13363:	5b                   	pop    %rbx
   13364:	41 5e                	pop    %r14
   13366:	41 5f                	pop    %r15
   13368:	ff 25 8a 28 03 00    	jmpq   *0x3288a(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   1336e:	48 8d 3d 5b 2f 02 00 	lea    0x22f5b(%rip),%rdi        # 362d0 <_fini+0x9ac>
   13375:	48 8d 0d 64 04 03 00 	lea    0x30464(%rip),%rcx        # 437e0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2a8>
   1337c:	4c 8d 05 6d 09 03 00 	lea    0x3096d(%rip),%r8        # 43cf0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x7b8>
   13383:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   13388:	be 10 00 00 00       	mov    $0x10,%esi
   1338d:	ff 15 4d 28 03 00    	callq  *0x3284d(%rip)        # 45be0 <_GLOBAL_OFFSET_TABLE_+0x258>
   13393:	0f 0b                	ud2    
   13395:	49 89 c7             	mov    %rax,%r15
   13398:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   1339d:	eb 18                	jmp    133b7 <std::thread::local::LocalKey<T>::try_with+0xf7>
   1339f:	49 89 c7             	mov    %rax,%r15
   133a2:	48 89 df             	mov    %rbx,%rdi
   133a5:	4c 89 f6             	mov    %r14,%rsi
   133a8:	e8 23 66 ff ff       	callq  99d0 <alloc::alloc::box_free>
   133ad:	eb 0d                	jmp    133bc <std::thread::local::LocalKey<T>::try_with+0xfc>
   133af:	49 89 c7             	mov    %rax,%r15
   133b2:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   133b7:	e8 44 31 ff ff       	callq  6500 <core::ptr::drop_in_place>
   133bc:	4c 89 ff             	mov    %r15,%rdi
   133bf:	e8 8c 1c ff ff       	callq  5050 <_Unwind_Resume@plt>
   133c4:	0f 0b                	ud2    
   133c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   133cd:	00 00 00 

00000000000133d0 <std::thread::local::fast::Key<T>::try_initialize>:
   133d0:	41 57                	push   %r15
   133d2:	41 56                	push   %r14
   133d4:	53                   	push   %rbx
   133d5:	66 66 66 64 48 8b 04 	data16 data16 data16 mov %fs:0x0,%rax
   133dc:	25 00 00 00 00 
   133e1:	49 89 c6             	mov    %rax,%r14
   133e4:	8a 80 80 ff ff ff    	mov    -0x80(%rax),%al
   133ea:	84 c0                	test   %al,%al
   133ec:	74 0c                	je     133fa <std::thread::local::fast::Key<T>::try_initialize+0x2a>
   133ee:	3c 01                	cmp    $0x1,%al
   133f0:	74 4d                	je     1343f <std::thread::local::fast::Key<T>::try_initialize+0x6f>
   133f2:	31 c0                	xor    %eax,%eax
   133f4:	5b                   	pop    %rbx
   133f5:	41 5e                	pop    %r14
   133f7:	41 5f                	pop    %r15
   133f9:	c3                   	retq   
   133fa:	48 83 3d 9e 26 03 00 	cmpq   $0x0,0x3269e(%rip)        # 45aa0 <__cxa_thread_atexit_impl@GLIBC_2.18>
   13401:	00 
   13402:	75 15                	jne    13419 <std::thread::local::fast::Key<T>::try_initialize+0x49>
   13404:	49 8d be 60 ff ff ff 	lea    -0xa0(%r14),%rdi
   1340b:	48 8d 35 5e 03 00 00 	lea    0x35e(%rip),%rsi        # 13770 <std::thread::local::fast::destroy_value>
   13412:	e8 79 59 00 00       	callq  18d90 <std::sys_common::thread_local_dtor::register_dtor_fallback>
   13417:	eb 1b                	jmp    13434 <std::thread::local::fast::Key<T>::try_initialize+0x64>
   13419:	49 8d b6 60 ff ff ff 	lea    -0xa0(%r14),%rsi
   13420:	48 8d 3d 49 03 00 00 	lea    0x349(%rip),%rdi        # 13770 <std::thread::local::fast::destroy_value>
   13427:	48 8d 15 fa 2b 03 00 	lea    0x32bfa(%rip),%rdx        # 46028 <_rust_extern_with_linkage___dso_handle>
   1342e:	ff 15 6c 26 03 00    	callq  *0x3266c(%rip)        # 45aa0 <__cxa_thread_atexit_impl@GLIBC_2.18>
   13434:	4c 89 f0             	mov    %r14,%rax
   13437:	41 c6 86 80 ff ff ff 	movb   $0x1,-0x80(%r14)
   1343e:	01 
   1343f:	4c 89 f0             	mov    %r14,%rax
   13442:	66 41 0f 6f 86 70 ff 	movdqa -0x90(%r14),%xmm0
   13449:	ff ff 
   1344b:	49 83 be 60 ff ff ff 	cmpq   $0x0,-0xa0(%r14)
   13452:	00 
   13453:	0f 28 0d 06 2c 02 00 	movaps 0x22c06(%rip),%xmm1        # 36060 <_fini+0x73c>
   1345a:	41 0f 29 8e 60 ff ff 	movaps %xmm1,-0xa0(%r14)
   13461:	ff 
   13462:	0f 57 c9             	xorps  %xmm1,%xmm1
   13465:	41 0f 29 8e 70 ff ff 	movaps %xmm1,-0x90(%r14)
   1346c:	ff 
   1346d:	74 30                	je     1349f <std::thread::local::fast::Key<T>::try_initialize+0xcf>
   1346f:	66 48 0f 7e c3       	movq   %xmm0,%rbx
   13474:	48 85 db             	test   %rbx,%rbx
   13477:	74 26                	je     1349f <std::thread::local::fast::Key<T>::try_initialize+0xcf>
   13479:	66 0f 70 c0 4e       	pshufd $0x4e,%xmm0,%xmm0
   1347e:	66 49 0f 7e c7       	movq   %xmm0,%r15
   13483:	48 89 df             	mov    %rbx,%rdi
   13486:	41 ff 17             	callq  *(%r15)
   13489:	49 8b 77 08          	mov    0x8(%r15),%rsi
   1348d:	48 85 f6             	test   %rsi,%rsi
   13490:	74 0d                	je     1349f <std::thread::local::fast::Key<T>::try_initialize+0xcf>
   13492:	49 8b 57 10          	mov    0x10(%r15),%rdx
   13496:	48 89 df             	mov    %rbx,%rdi
   13499:	ff 15 59 27 03 00    	callq  *0x32759(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   1349f:	4c 89 f0             	mov    %r14,%rax
   134a2:	49 8d 86 68 ff ff ff 	lea    -0x98(%r14),%rax
   134a9:	5b                   	pop    %rbx
   134aa:	41 5e                	pop    %r14
   134ac:	41 5f                	pop    %r15
   134ae:	c3                   	retq   
   134af:	49 89 c6             	mov    %rax,%r14
   134b2:	48 89 df             	mov    %rbx,%rdi
   134b5:	4c 89 fe             	mov    %r15,%rsi
   134b8:	e8 13 65 ff ff       	callq  99d0 <alloc::alloc::box_free>
   134bd:	4c 89 f7             	mov    %r14,%rdi
   134c0:	e8 8b 1b ff ff       	callq  5050 <_Unwind_Resume@plt>
   134c5:	0f 0b                	ud2    
   134c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   134ce:	00 00 

00000000000134d0 <std::thread::local::fast::Key<T>::try_initialize>:
   134d0:	41 57                	push   %r15
   134d2:	41 56                	push   %r14
   134d4:	53                   	push   %rbx
   134d5:	66 66 66 64 48 8b 04 	data16 data16 data16 mov %fs:0x0,%rax
   134dc:	25 00 00 00 00 
   134e1:	49 89 c6             	mov    %rax,%r14
   134e4:	8a 80 40 ff ff ff    	mov    -0xc0(%rax),%al
   134ea:	84 c0                	test   %al,%al
   134ec:	74 0c                	je     134fa <std::thread::local::fast::Key<T>::try_initialize+0x2a>
   134ee:	3c 01                	cmp    $0x1,%al
   134f0:	74 4d                	je     1353f <std::thread::local::fast::Key<T>::try_initialize+0x6f>
   134f2:	31 c0                	xor    %eax,%eax
   134f4:	5b                   	pop    %rbx
   134f5:	41 5e                	pop    %r14
   134f7:	41 5f                	pop    %r15
   134f9:	c3                   	retq   
   134fa:	48 83 3d 9e 25 03 00 	cmpq   $0x0,0x3259e(%rip)        # 45aa0 <__cxa_thread_atexit_impl@GLIBC_2.18>
   13501:	00 
   13502:	75 15                	jne    13519 <std::thread::local::fast::Key<T>::try_initialize+0x49>
   13504:	49 8d be 20 ff ff ff 	lea    -0xe0(%r14),%rdi
   1350b:	48 8d 35 5e 02 00 00 	lea    0x25e(%rip),%rsi        # 13770 <std::thread::local::fast::destroy_value>
   13512:	e8 79 58 00 00       	callq  18d90 <std::sys_common::thread_local_dtor::register_dtor_fallback>
   13517:	eb 1b                	jmp    13534 <std::thread::local::fast::Key<T>::try_initialize+0x64>
   13519:	49 8d b6 20 ff ff ff 	lea    -0xe0(%r14),%rsi
   13520:	48 8d 3d 49 02 00 00 	lea    0x249(%rip),%rdi        # 13770 <std::thread::local::fast::destroy_value>
   13527:	48 8d 15 fa 2a 03 00 	lea    0x32afa(%rip),%rdx        # 46028 <_rust_extern_with_linkage___dso_handle>
   1352e:	ff 15 6c 25 03 00    	callq  *0x3256c(%rip)        # 45aa0 <__cxa_thread_atexit_impl@GLIBC_2.18>
   13534:	4c 89 f0             	mov    %r14,%rax
   13537:	41 c6 86 40 ff ff ff 	movb   $0x1,-0xc0(%r14)
   1353e:	01 
   1353f:	4c 89 f0             	mov    %r14,%rax
   13542:	66 41 0f 6f 86 30 ff 	movdqa -0xd0(%r14),%xmm0
   13549:	ff ff 
   1354b:	49 83 be 20 ff ff ff 	cmpq   $0x0,-0xe0(%r14)
   13552:	00 
   13553:	0f 28 0d 06 2b 02 00 	movaps 0x22b06(%rip),%xmm1        # 36060 <_fini+0x73c>
   1355a:	41 0f 29 8e 20 ff ff 	movaps %xmm1,-0xe0(%r14)
   13561:	ff 
   13562:	0f 57 c9             	xorps  %xmm1,%xmm1
   13565:	41 0f 29 8e 30 ff ff 	movaps %xmm1,-0xd0(%r14)
   1356c:	ff 
   1356d:	74 30                	je     1359f <std::thread::local::fast::Key<T>::try_initialize+0xcf>
   1356f:	66 48 0f 7e c3       	movq   %xmm0,%rbx
   13574:	48 85 db             	test   %rbx,%rbx
   13577:	74 26                	je     1359f <std::thread::local::fast::Key<T>::try_initialize+0xcf>
   13579:	66 0f 70 c0 4e       	pshufd $0x4e,%xmm0,%xmm0
   1357e:	66 49 0f 7e c7       	movq   %xmm0,%r15
   13583:	48 89 df             	mov    %rbx,%rdi
   13586:	41 ff 17             	callq  *(%r15)
   13589:	49 8b 77 08          	mov    0x8(%r15),%rsi
   1358d:	48 85 f6             	test   %rsi,%rsi
   13590:	74 0d                	je     1359f <std::thread::local::fast::Key<T>::try_initialize+0xcf>
   13592:	49 8b 57 10          	mov    0x10(%r15),%rdx
   13596:	48 89 df             	mov    %rbx,%rdi
   13599:	ff 15 59 26 03 00    	callq  *0x32659(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   1359f:	4c 89 f0             	mov    %r14,%rax
   135a2:	49 8d 86 28 ff ff ff 	lea    -0xd8(%r14),%rax
   135a9:	5b                   	pop    %rbx
   135aa:	41 5e                	pop    %r14
   135ac:	41 5f                	pop    %r15
   135ae:	c3                   	retq   
   135af:	49 89 c6             	mov    %rax,%r14
   135b2:	48 89 df             	mov    %rbx,%rdi
   135b5:	4c 89 fe             	mov    %r15,%rsi
   135b8:	e8 13 64 ff ff       	callq  99d0 <alloc::alloc::box_free>
   135bd:	4c 89 f7             	mov    %r14,%rdi
   135c0:	e8 8b 1a ff ff       	callq  5050 <_Unwind_Resume@plt>
   135c5:	0f 0b                	ud2    
   135c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   135ce:	00 00 

00000000000135d0 <std::thread::local::fast::Key<T>::try_initialize>:
   135d0:	50                   	push   %rax
   135d1:	66 66 66 64 48 8b 04 	data16 data16 data16 mov %fs:0x0,%rax
   135d8:	25 00 00 00 00 
   135dd:	0f 28 05 7c 2a 02 00 	movaps 0x22a7c(%rip),%xmm0        # 36060 <_fini+0x73c>
   135e4:	0f 29 80 e0 ff ff ff 	movaps %xmm0,-0x20(%rax)
   135eb:	48 8d 80 e8 ff ff ff 	lea    -0x18(%rax),%rax
   135f2:	59                   	pop    %rcx
   135f3:	c3                   	retq   
   135f4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   135fb:	00 00 00 
   135fe:	66 90                	xchg   %ax,%ax

0000000000013600 <std::thread::local::fast::Key<T>::try_initialize>:
   13600:	53                   	push   %rbx
   13601:	48 83 ec 30          	sub    $0x30,%rsp
   13605:	66 66 66 64 48 8b 04 	data16 data16 data16 mov %fs:0x0,%rax
   1360c:	25 00 00 00 00 
   13611:	48 89 c3             	mov    %rax,%rbx
   13614:	8a 80 d0 ff ff ff    	mov    -0x30(%rax),%al
   1361a:	84 c0                	test   %al,%al
   1361c:	74 0c                	je     1362a <std::thread::local::fast::Key<T>::try_initialize+0x2a>
   1361e:	3c 01                	cmp    $0x1,%al
   13620:	74 4c                	je     1366e <std::thread::local::fast::Key<T>::try_initialize+0x6e>
   13622:	31 c0                	xor    %eax,%eax
   13624:	48 83 c4 30          	add    $0x30,%rsp
   13628:	5b                   	pop    %rbx
   13629:	c3                   	retq   
   1362a:	48 83 3d 6e 24 03 00 	cmpq   $0x0,0x3246e(%rip)        # 45aa0 <__cxa_thread_atexit_impl@GLIBC_2.18>
   13631:	00 
   13632:	75 15                	jne    13649 <std::thread::local::fast::Key<T>::try_initialize+0x49>
   13634:	48 8d bb a0 ff ff ff 	lea    -0x60(%rbx),%rdi
   1363b:	48 8d 35 be 00 00 00 	lea    0xbe(%rip),%rsi        # 13700 <std::thread::local::fast::destroy_value>
   13642:	e8 49 57 00 00       	callq  18d90 <std::sys_common::thread_local_dtor::register_dtor_fallback>
   13647:	eb 1b                	jmp    13664 <std::thread::local::fast::Key<T>::try_initialize+0x64>
   13649:	48 8d b3 a0 ff ff ff 	lea    -0x60(%rbx),%rsi
   13650:	48 8d 3d a9 00 00 00 	lea    0xa9(%rip),%rdi        # 13700 <std::thread::local::fast::destroy_value>
   13657:	48 8d 15 ca 29 03 00 	lea    0x329ca(%rip),%rdx        # 46028 <_rust_extern_with_linkage___dso_handle>
   1365e:	ff 15 3c 24 03 00    	callq  *0x3243c(%rip)        # 45aa0 <__cxa_thread_atexit_impl@GLIBC_2.18>
   13664:	48 89 d8             	mov    %rbx,%rax
   13667:	c6 83 d0 ff ff ff 01 	movb   $0x1,-0x30(%rbx)
   1366e:	48 89 d8             	mov    %rbx,%rax
   13671:	66 0f 6f 8b a0 ff ff 	movdqa -0x60(%rbx),%xmm1
   13678:	ff 
   13679:	66 0f 6f 83 b0 ff ff 	movdqa -0x50(%rbx),%xmm0
   13680:	ff 
   13681:	0f 28 15 d8 29 02 00 	movaps 0x229d8(%rip),%xmm2        # 36060 <_fini+0x73c>
   13688:	0f 29 93 a0 ff ff ff 	movaps %xmm2,-0x60(%rbx)
   1368f:	b9 02 00 00 00       	mov    $0x2,%ecx
   13694:	66 48 0f 6e d1       	movq   %rcx,%xmm2
   13699:	66 0f 7f 93 b0 ff ff 	movdqa %xmm2,-0x50(%rbx)
   136a0:	ff 
   136a1:	f3 0f 7f 44 24 10    	movdqu %xmm0,0x10(%rsp)
   136a7:	f3 0f 7f 0c 24       	movdqu %xmm1,(%rsp)
   136ac:	0f 28 93 c0 ff ff ff 	movaps -0x40(%rbx),%xmm2
   136b3:	0f 11 54 24 20       	movups %xmm2,0x20(%rsp)
   136b8:	66 48 0f 7e c8       	movq   %xmm1,%rax
   136bd:	48 85 c0             	test   %rax,%rax
   136c0:	74 21                	je     136e3 <std::thread::local::fast::Key<T>::try_initialize+0xe3>
   136c2:	66 48 0f 7e c0       	movq   %xmm0,%rax
   136c7:	48 83 f8 02          	cmp    $0x2,%rax
   136cb:	74 16                	je     136e3 <std::thread::local::fast::Key<T>::try_initialize+0xe3>
   136cd:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   136d2:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   136d7:	75 0a                	jne    136e3 <std::thread::local::fast::Key<T>::try_initialize+0xe3>
   136d9:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
   136de:	e8 9d 62 ff ff       	callq  9980 <alloc::sync::Arc<T>::drop_slow>
   136e3:	48 89 d8             	mov    %rbx,%rax
   136e6:	48 8d 83 a8 ff ff ff 	lea    -0x58(%rbx),%rax
   136ed:	48 83 c4 30          	add    $0x30,%rsp
   136f1:	5b                   	pop    %rbx
   136f2:	c3                   	retq   
   136f3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   136fa:	00 00 00 
   136fd:	0f 1f 00             	nopl   (%rax)

0000000000013700 <std::thread::local::fast::destroy_value>:
   13700:	48 83 ec 68          	sub    $0x68,%rsp
   13704:	0f 10 07             	movups (%rdi),%xmm0
   13707:	0f 10 4f 10          	movups 0x10(%rdi),%xmm1
   1370b:	0f 57 d2             	xorps  %xmm2,%xmm2
   1370e:	0f 11 17             	movups %xmm2,(%rdi)
   13711:	0f 11 4c 24 48       	movups %xmm1,0x48(%rsp)
   13716:	0f 11 44 24 38       	movups %xmm0,0x38(%rsp)
   1371b:	0f 10 47 20          	movups 0x20(%rdi),%xmm0
   1371f:	0f 11 44 24 58       	movups %xmm0,0x58(%rsp)
   13724:	c6 47 30 02          	movb   $0x2,0x30(%rdi)
   13728:	0f 10 44 24 38       	movups 0x38(%rsp),%xmm0
   1372d:	0f 10 4c 24 48       	movups 0x48(%rsp),%xmm1
   13732:	0f 10 54 24 58       	movups 0x58(%rsp),%xmm2
   13737:	0f 29 04 24          	movaps %xmm0,(%rsp)
   1373b:	0f 29 54 24 20       	movaps %xmm2,0x20(%rsp)
   13740:	0f 29 4c 24 10       	movaps %xmm1,0x10(%rsp)
   13745:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
   1374a:	74 1d                	je     13769 <std::thread::local::fast::destroy_value+0x69>
   1374c:	83 7c 24 10 02       	cmpl   $0x2,0x10(%rsp)
   13751:	74 16                	je     13769 <std::thread::local::fast::destroy_value+0x69>
   13753:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   13758:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   1375d:	75 0a                	jne    13769 <std::thread::local::fast::destroy_value+0x69>
   1375f:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
   13764:	e8 17 62 ff ff       	callq  9980 <alloc::sync::Arc<T>::drop_slow>
   13769:	48 83 c4 68          	add    $0x68,%rsp
   1376d:	c3                   	retq   
   1376e:	66 90                	xchg   %ax,%ax

0000000000013770 <std::thread::local::fast::destroy_value>:
   13770:	41 57                	push   %r15
   13772:	41 56                	push   %r14
   13774:	53                   	push   %rbx
   13775:	48 8b 5f 10          	mov    0x10(%rdi),%rbx
   13779:	4c 8b 77 18          	mov    0x18(%rdi),%r14
   1377d:	0f 57 c0             	xorps  %xmm0,%xmm0
   13780:	48 83 3f 00          	cmpq   $0x0,(%rdi)
   13784:	0f 11 07             	movups %xmm0,(%rdi)
   13787:	c6 47 20 02          	movb   $0x2,0x20(%rdi)
   1378b:	74 26                	je     137b3 <std::thread::local::fast::destroy_value+0x43>
   1378d:	48 85 db             	test   %rbx,%rbx
   13790:	74 21                	je     137b3 <std::thread::local::fast::destroy_value+0x43>
   13792:	48 89 df             	mov    %rbx,%rdi
   13795:	41 ff 16             	callq  *(%r14)
   13798:	49 8b 76 08          	mov    0x8(%r14),%rsi
   1379c:	48 85 f6             	test   %rsi,%rsi
   1379f:	74 12                	je     137b3 <std::thread::local::fast::destroy_value+0x43>
   137a1:	49 8b 56 10          	mov    0x10(%r14),%rdx
   137a5:	48 89 df             	mov    %rbx,%rdi
   137a8:	5b                   	pop    %rbx
   137a9:	41 5e                	pop    %r14
   137ab:	41 5f                	pop    %r15
   137ad:	ff 25 45 24 03 00    	jmpq   *0x32445(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   137b3:	5b                   	pop    %rbx
   137b4:	41 5e                	pop    %r14
   137b6:	41 5f                	pop    %r15
   137b8:	c3                   	retq   
   137b9:	49 89 c7             	mov    %rax,%r15
   137bc:	48 89 df             	mov    %rbx,%rdi
   137bf:	4c 89 f6             	mov    %r14,%rsi
   137c2:	e8 09 62 ff ff       	callq  99d0 <alloc::alloc::box_free>
   137c7:	4c 89 ff             	mov    %r15,%rdi
   137ca:	e8 81 18 ff ff       	callq  5050 <_Unwind_Resume@plt>
   137cf:	0f 0b                	ud2    
   137d1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   137d8:	00 00 00 
   137db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000137e0 <std::thread::Thread::new>:
   137e0:	41 57                	push   %r15
   137e2:	41 56                	push   %r14
   137e4:	53                   	push   %rbx
   137e5:	48 83 ec 60          	sub    $0x60,%rsp
   137e9:	48 8b 07             	mov    (%rdi),%rax
   137ec:	0f 10 47 08          	movups 0x8(%rdi),%xmm0
   137f0:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
   137f5:	48 85 c0             	test   %rax,%rax
   137f8:	74 5e                	je     13858 <std::thread::Thread::new+0x78>
   137fa:	48 89 04 24          	mov    %rax,(%rsp)
   137fe:	0f 28 44 24 40       	movaps 0x40(%rsp),%xmm0
   13803:	0f 11 44 24 08       	movups %xmm0,0x8(%rsp)
   13808:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
   1380d:	48 89 e6             	mov    %rsp,%rsi
   13810:	ff 15 a2 23 03 00    	callq  *0x323a2(%rip)        # 45bb8 <_GLOBAL_OFFSET_TABLE_+0x230>
   13816:	48 8b 5c 24 28       	mov    0x28(%rsp),%rbx
   1381b:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
   13820:	48 89 df             	mov    %rbx,%rdi
   13823:	31 f6                	xor    %esi,%esi
   13825:	ff 15 3d 24 03 00    	callq  *0x3243d(%rip)        # 45c68 <memchr@GLIBC_2.2.5>
   1382b:	48 85 c0             	test   %rax,%rax
   1382e:	0f 85 f2 00 00 00    	jne    13926 <std::thread::Thread::new+0x146>
   13834:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   13839:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1383e:	0f 10 44 24 28       	movups 0x28(%rsp),%xmm0
   13843:	0f 29 04 24          	movaps %xmm0,(%rsp)
   13847:	48 89 e7             	mov    %rsp,%rdi
   1384a:	ff 15 f8 24 03 00    	callq  *0x324f8(%rip)        # 45d48 <_GLOBAL_OFFSET_TABLE_+0x3c0>
   13850:	49 89 c7             	mov    %rax,%r15
   13853:	49 89 d6             	mov    %rdx,%r14
   13856:	eb 03                	jmp    1385b <std::thread::Thread::new+0x7b>
   13858:	45 31 ff             	xor    %r15d,%r15d
   1385b:	4c 89 3c 24          	mov    %r15,(%rsp)
   1385f:	4c 89 74 24 08       	mov    %r14,0x8(%rsp)
   13864:	48 8d 1d d5 27 03 00 	lea    0x327d5(%rip),%rbx        # 46040 <std::thread::ThreadId::new::GUARD>
   1386b:	48 89 df             	mov    %rbx,%rdi
   1386e:	ff 15 4c 27 03 00    	callq  *0x3274c(%rip)        # 45fc0 <pthread_mutex_lock@GLIBC_2.2.5>
   13874:	48 89 5c 24 28       	mov    %rbx,0x28(%rsp)
   13879:	48 8b 1d 88 27 03 00 	mov    0x32788(%rip),%rbx        # 46008 <std::thread::ThreadId::new::COUNTER>
   13880:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
   13884:	74 59                	je     138df <std::thread::Thread::new+0xff>
   13886:	48 8d 43 01          	lea    0x1(%rbx),%rax
   1388a:	48 89 05 77 27 03 00 	mov    %rax,0x32777(%rip)        # 46008 <std::thread::ThreadId::new::COUNTER>
   13891:	48 85 db             	test   %rbx,%rbx
   13894:	74 63                	je     138f9 <std::thread::Thread::new+0x119>
   13896:	48 8d 3d a3 27 03 00 	lea    0x327a3(%rip),%rdi        # 46040 <std::thread::ThreadId::new::GUARD>
   1389d:	ff 15 c5 24 03 00    	callq  *0x324c5(%rip)        # 45d68 <pthread_mutex_unlock@GLIBC_2.2.5>
   138a3:	bf 30 00 00 00       	mov    $0x30,%edi
   138a8:	be 08 00 00 00       	mov    $0x8,%esi
   138ad:	ff 15 cd 22 03 00    	callq  *0x322cd(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   138b3:	48 85 c0             	test   %rax,%rax
   138b6:	74 5c                	je     13914 <std::thread::Thread::new+0x134>
   138b8:	0f 28 05 81 27 02 00 	movaps 0x22781(%rip),%xmm0        # 36040 <_fini+0x71c>
   138bf:	0f 11 00             	movups %xmm0,(%rax)
   138c2:	4c 89 78 10          	mov    %r15,0x10(%rax)
   138c6:	4c 89 70 18          	mov    %r14,0x18(%rax)
   138ca:	48 89 58 20          	mov    %rbx,0x20(%rax)
   138ce:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%rax)
   138d5:	48 83 c4 60          	add    $0x60,%rsp
   138d9:	5b                   	pop    %rbx
   138da:	41 5e                	pop    %r14
   138dc:	41 5f                	pop    %r15
   138de:	c3                   	retq   
   138df:	48 8d 3d 48 40 02 00 	lea    0x24048(%rip),%rdi        # 3792e <str.6+0x60e>
   138e6:	48 8d 15 13 02 03 00 	lea    0x30213(%rip),%rdx        # 43b00 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x5c8>
   138ed:	be 37 00 00 00       	mov    $0x37,%esi
   138f2:	e8 09 6c 00 00       	callq  1a500 <std::panicking::begin_panic>
   138f7:	eb 6b                	jmp    13964 <std::thread::Thread::new+0x184>
   138f9:	48 8d 3d fa 3c 02 00 	lea    0x23cfa(%rip),%rdi        # 375fa <str.6+0x2da>
   13900:	48 8d 15 11 02 03 00 	lea    0x30211(%rip),%rdx        # 43b18 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x5e0>
   13907:	be 2b 00 00 00       	mov    $0x2b,%esi
   1390c:	ff 15 c6 25 03 00    	callq  *0x325c6(%rip)        # 45ed8 <_GLOBAL_OFFSET_TABLE_+0x550>
   13912:	eb 50                	jmp    13964 <std::thread::Thread::new+0x184>
   13914:	bf 30 00 00 00       	mov    $0x30,%edi
   13919:	be 08 00 00 00       	mov    $0x8,%esi
   1391e:	ff 15 fc 21 03 00    	callq  *0x321fc(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   13924:	0f 0b                	ud2    
   13926:	48 29 d8             	sub    %rbx,%rax
   13929:	0f 10 44 24 30       	movups 0x30(%rsp),%xmm0
   1392e:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   13933:	48 89 04 24          	mov    %rax,(%rsp)
   13937:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   1393c:	0f 11 44 24 10       	movups %xmm0,0x10(%rsp)
   13941:	48 8d 3d 1d 40 02 00 	lea    0x2401d(%rip),%rdi        # 37965 <str.6+0x645>
   13948:	48 8d 0d f1 fe 02 00 	lea    0x2fef1(%rip),%rcx        # 43840 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x308>
   1394f:	4c 8d 05 da 01 03 00 	lea    0x301da(%rip),%r8        # 43b30 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x5f8>
   13956:	48 89 e2             	mov    %rsp,%rdx
   13959:	be 2f 00 00 00       	mov    $0x2f,%esi
   1395e:	ff 15 7c 22 03 00    	callq  *0x3227c(%rip)        # 45be0 <_GLOBAL_OFFSET_TABLE_+0x258>
   13964:	0f 0b                	ud2    
   13966:	48 89 c3             	mov    %rax,%rbx
   13969:	48 89 e7             	mov    %rsp,%rdi
   1396c:	e8 3f 32 ff ff       	callq  6bb0 <core::ptr::drop_in_place>
   13971:	eb 15                	jmp    13988 <std::thread::Thread::new+0x1a8>
   13973:	48 89 c3             	mov    %rax,%rbx
   13976:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
   1397b:	e8 e0 32 ff ff       	callq  6c60 <core::ptr::drop_in_place>
   13980:	48 89 e7             	mov    %rsp,%rdi
   13983:	e8 78 2e ff ff       	callq  6800 <core::ptr::drop_in_place>
   13988:	48 89 df             	mov    %rbx,%rdi
   1398b:	e8 c0 16 ff ff       	callq  5050 <_Unwind_Resume@plt>
   13990:	0f 0b                	ud2    
   13992:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   13999:	00 00 00 
   1399c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000139a0 <std::env::current_dir>:
   139a0:	55                   	push   %rbp
   139a1:	41 57                	push   %r15
   139a3:	41 56                	push   %r14
   139a5:	41 55                	push   %r13
   139a7:	41 54                	push   %r12
   139a9:	53                   	push   %rbx
   139aa:	48 83 ec 18          	sub    $0x18,%rsp
   139ae:	49 89 fe             	mov    %rdi,%r14
   139b1:	bb 00 02 00 00       	mov    $0x200,%ebx
   139b6:	bf 00 02 00 00       	mov    $0x200,%edi
   139bb:	be 01 00 00 00       	mov    $0x1,%esi
   139c0:	ff 15 ba 21 03 00    	callq  *0x321ba(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   139c6:	48 85 c0             	test   %rax,%rax
   139c9:	0f 84 13 02 00 00    	je     13be2 <std::env::current_dir+0x242>
   139cf:	49 89 c7             	mov    %rax,%r15
   139d2:	48 89 04 24          	mov    %rax,(%rsp)
   139d6:	0f 28 05 c3 26 02 00 	movaps 0x226c3(%rip),%xmm0        # 360a0 <_fini+0x77c>
   139dd:	0f 11 44 24 08       	movups %xmm0,0x8(%rsp)
   139e2:	be 00 02 00 00       	mov    $0x200,%esi
   139e7:	48 89 c7             	mov    %rax,%rdi
   139ea:	ff 15 30 22 03 00    	callq  *0x32230(%rip)        # 45c20 <getcwd@GLIBC_2.2.5>
   139f0:	48 85 c0             	test   %rax,%rax
   139f3:	74 5d                	je     13a52 <std::env::current_dir+0xb2>
   139f5:	4c 89 ff             	mov    %r15,%rdi
   139f8:	ff 15 4a 21 03 00    	callq  *0x3214a(%rip)        # 45b48 <strlen@GLIBC_2.2.5>
   139fe:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   13a02:	0f 84 9c 01 00 00    	je     13ba4 <std::env::current_dir+0x204>
   13a08:	49 89 c4             	mov    %rax,%r12
   13a0b:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   13a10:	48 39 c3             	cmp    %rax,%rbx
   13a13:	0f 86 37 01 00 00    	jbe    13b50 <std::env::current_dir+0x1b0>
   13a19:	4d 85 e4             	test   %r12,%r12
   13a1c:	0f 84 0e 01 00 00    	je     13b30 <std::env::current_dir+0x190>
   13a22:	ba 01 00 00 00       	mov    $0x1,%edx
   13a27:	4c 89 ff             	mov    %r15,%rdi
   13a2a:	48 89 de             	mov    %rbx,%rsi
   13a2d:	4c 89 e1             	mov    %r12,%rcx
   13a30:	ff 15 42 25 03 00    	callq  *0x32542(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
   13a36:	49 89 c5             	mov    %rax,%r13
   13a39:	48 85 c0             	test   %rax,%rax
   13a3c:	0f 85 05 01 00 00    	jne    13b47 <std::env::current_dir+0x1a7>
   13a42:	be 01 00 00 00       	mov    $0x1,%esi
   13a47:	4c 89 e7             	mov    %r12,%rdi
   13a4a:	ff 15 d0 20 03 00    	callq  *0x320d0(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   13a50:	0f 0b                	ud2    
   13a52:	ff 15 c0 1f 03 00    	callq  *0x31fc0(%rip)        # 45a18 <__errno_location@GLIBC_2.2.5>
   13a58:	8b 00                	mov    (%rax),%eax
   13a5a:	83 f8 22             	cmp    $0x22,%eax
   13a5d:	0f 85 81 00 00 00    	jne    13ae4 <std::env::current_dir+0x144>
   13a63:	41 bc 00 02 00 00    	mov    $0x200,%r12d
   13a69:	48 8d 2d e0 19 ff ff 	lea    -0xe620(%rip),%rbp        # 5450 <__rust_realloc>
   13a70:	4c 8b 2d a9 21 03 00 	mov    0x321a9(%rip),%r13        # 45c20 <getcwd@GLIBC_2.2.5>
   13a77:	4c 89 e3             	mov    %r12,%rbx
   13a7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   13a80:	48 ff c3             	inc    %rbx
   13a83:	0f 84 33 01 00 00    	je     13bbc <std::env::current_dir+0x21c>
   13a89:	4b 8d 04 24          	lea    (%r12,%r12,1),%rax
   13a8d:	48 39 d8             	cmp    %rbx,%rax
   13a90:	48 0f 47 d8          	cmova  %rax,%rbx
   13a94:	48 83 fb 08          	cmp    $0x8,%rbx
   13a98:	b8 08 00 00 00       	mov    $0x8,%eax
   13a9d:	48 0f 46 d8          	cmovbe %rax,%rbx
   13aa1:	ba 01 00 00 00       	mov    $0x1,%edx
   13aa6:	4c 89 ff             	mov    %r15,%rdi
   13aa9:	4c 89 e6             	mov    %r12,%rsi
   13aac:	48 89 d9             	mov    %rbx,%rcx
   13aaf:	ff d5                	callq  *%rbp
   13ab1:	48 85 c0             	test   %rax,%rax
   13ab4:	0f 84 18 01 00 00    	je     13bd2 <std::env::current_dir+0x232>
   13aba:	49 89 c7             	mov    %rax,%r15
   13abd:	48 89 c7             	mov    %rax,%rdi
   13ac0:	48 89 de             	mov    %rbx,%rsi
   13ac3:	41 ff d5             	callq  *%r13
   13ac6:	48 85 c0             	test   %rax,%rax
   13ac9:	0f 85 b4 00 00 00    	jne    13b83 <std::env::current_dir+0x1e3>
   13acf:	ff 15 43 1f 03 00    	callq  *0x31f43(%rip)        # 45a18 <__errno_location@GLIBC_2.2.5>
   13ad5:	8b 00                	mov    (%rax),%eax
   13ad7:	4c 89 e1             	mov    %r12,%rcx
   13ada:	49 89 dc             	mov    %rbx,%r12
   13add:	83 f8 22             	cmp    $0x22,%eax
   13ae0:	74 9e                	je     13a80 <std::env::current_dir+0xe0>
   13ae2:	eb 07                	jmp    13aeb <std::env::current_dir+0x14b>
   13ae4:	bb 00 02 00 00       	mov    $0x200,%ebx
   13ae9:	31 c9                	xor    %ecx,%ecx
   13aeb:	4c 89 3c 24          	mov    %r15,(%rsp)
   13aef:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   13af4:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   13af9:	41 c6 46 08 00       	movb   $0x0,0x8(%r14)
   13afe:	41 c6 46 0b 00       	movb   $0x0,0xb(%r14)
   13b03:	66 41 c7 46 09 00 00 	movw   $0x0,0x9(%r14)
   13b0a:	41 89 46 0c          	mov    %eax,0xc(%r14)
   13b0e:	49 c7 46 10 00 00 00 	movq   $0x0,0x10(%r14)
   13b15:	00 
   13b16:	49 c7 06 01 00 00 00 	movq   $0x1,(%r14)
   13b1d:	ba 01 00 00 00       	mov    $0x1,%edx
   13b22:	4c 89 ff             	mov    %r15,%rdi
   13b25:	48 89 de             	mov    %rbx,%rsi
   13b28:	ff 15 ca 20 03 00    	callq  *0x320ca(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   13b2e:	eb 41                	jmp    13b71 <std::env::current_dir+0x1d1>
   13b30:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   13b36:	ba 01 00 00 00       	mov    $0x1,%edx
   13b3b:	4c 89 ff             	mov    %r15,%rdi
   13b3e:	48 89 de             	mov    %rbx,%rsi
   13b41:	ff 15 b1 20 03 00    	callq  *0x320b1(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   13b47:	4c 89 2c 24          	mov    %r13,(%rsp)
   13b4b:	4c 89 64 24 08       	mov    %r12,0x8(%rsp)
   13b50:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   13b55:	49 89 46 18          	mov    %rax,0x18(%r14)
   13b59:	48 8b 04 24          	mov    (%rsp),%rax
   13b5d:	49 89 46 08          	mov    %rax,0x8(%r14)
   13b61:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   13b66:	49 89 46 10          	mov    %rax,0x10(%r14)
   13b6a:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
   13b71:	4c 89 f0             	mov    %r14,%rax
   13b74:	48 83 c4 18          	add    $0x18,%rsp
   13b78:	5b                   	pop    %rbx
   13b79:	41 5c                	pop    %r12
   13b7b:	41 5d                	pop    %r13
   13b7d:	41 5e                	pop    %r14
   13b7f:	41 5f                	pop    %r15
   13b81:	5d                   	pop    %rbp
   13b82:	c3                   	retq   
   13b83:	4c 89 3c 24          	mov    %r15,(%rsp)
   13b87:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   13b8c:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   13b91:	4c 89 ff             	mov    %r15,%rdi
   13b94:	ff 15 ae 1f 03 00    	callq  *0x31fae(%rip)        # 45b48 <strlen@GLIBC_2.2.5>
   13b9a:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   13b9e:	0f 85 64 fe ff ff    	jne    13a08 <std::env::current_dir+0x68>
   13ba4:	48 8d 15 25 00 03 00 	lea    0x30025(%rip),%rdx        # 43bd0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x698>
   13bab:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   13bb2:	31 f6                	xor    %esi,%esi
   13bb4:	ff 15 6e 1e 03 00    	callq  *0x31e6e(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   13bba:	eb 14                	jmp    13bd0 <std::env::current_dir+0x230>
   13bbc:	4c 89 3c 24          	mov    %r15,(%rsp)
   13bc0:	4c 89 64 24 08       	mov    %r12,0x8(%rsp)
   13bc5:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   13bca:	ff 15 10 1f 03 00    	callq  *0x31f10(%rip)        # 45ae0 <_GLOBAL_OFFSET_TABLE_+0x158>
   13bd0:	0f 0b                	ud2    
   13bd2:	be 01 00 00 00       	mov    $0x1,%esi
   13bd7:	48 89 df             	mov    %rbx,%rdi
   13bda:	ff 15 40 1f 03 00    	callq  *0x31f40(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   13be0:	0f 0b                	ud2    
   13be2:	bf 00 02 00 00       	mov    $0x200,%edi
   13be7:	be 01 00 00 00       	mov    $0x1,%esi
   13bec:	ff 15 2e 1f 03 00    	callq  *0x31f2e(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   13bf2:	0f 0b                	ud2    
   13bf4:	48 89 c3             	mov    %rax,%rbx
   13bf7:	48 89 e7             	mov    %rsp,%rdi
   13bfa:	e8 31 2c ff ff       	callq  6830 <core::ptr::drop_in_place>
   13bff:	48 89 df             	mov    %rbx,%rdi
   13c02:	e8 49 14 ff ff       	callq  5050 <_Unwind_Resume@plt>
   13c07:	0f 0b                	ud2    
   13c09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000013c10 <std::env::_var_os>:
   13c10:	55                   	push   %rbp
   13c11:	41 57                	push   %r15
   13c13:	41 56                	push   %r14
   13c15:	41 55                	push   %r13
   13c17:	41 54                	push   %r12
   13c19:	53                   	push   %rbx
   13c1a:	48 83 ec 78          	sub    $0x78,%rsp
   13c1e:	49 89 d5             	mov    %rdx,%r13
   13c21:	49 89 f4             	mov    %rsi,%r12
   13c24:	49 89 fe             	mov    %rdi,%r14
   13c27:	48 89 74 24 68       	mov    %rsi,0x68(%rsp)
   13c2c:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
   13c31:	49 89 d7             	mov    %rdx,%r15
   13c34:	49 ff c7             	inc    %r15
   13c37:	75 35                	jne    13c6e <std::env::_var_os+0x5e>
   13c39:	49 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%r15
   13c40:	be 01 00 00 00       	mov    $0x1,%esi
   13c45:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   13c4c:	ff 15 2e 1f 03 00    	callq  *0x31f2e(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   13c52:	48 89 c3             	mov    %rax,%rbx
   13c55:	48 85 c0             	test   %rax,%rax
   13c58:	75 2e                	jne    13c88 <std::env::_var_os+0x78>
   13c5a:	be 01 00 00 00       	mov    $0x1,%esi
   13c5f:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   13c66:	ff 15 b4 1e 03 00    	callq  *0x31eb4(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   13c6c:	0f 0b                	ud2    
   13c6e:	be 01 00 00 00       	mov    $0x1,%esi
   13c73:	4c 89 ff             	mov    %r15,%rdi
   13c76:	ff 15 04 1f 03 00    	callq  *0x31f04(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   13c7c:	48 85 c0             	test   %rax,%rax
   13c7f:	0f 84 c4 01 00 00    	je     13e49 <std::env::_var_os+0x239>
   13c85:	48 89 c3             	mov    %rax,%rbx
   13c88:	48 89 df             	mov    %rbx,%rdi
   13c8b:	4c 89 e6             	mov    %r12,%rsi
   13c8e:	4c 89 ea             	mov    %r13,%rdx
   13c91:	ff 15 61 20 03 00    	callq  *0x32061(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
   13c97:	48 89 df             	mov    %rbx,%rdi
   13c9a:	31 f6                	xor    %esi,%esi
   13c9c:	4c 89 ea             	mov    %r13,%rdx
   13c9f:	ff 15 c3 1f 03 00    	callq  *0x31fc3(%rip)        # 45c68 <memchr@GLIBC_2.2.5>
   13ca5:	48 85 c0             	test   %rax,%rax
   13ca8:	0f 85 e6 00 00 00    	jne    13d94 <std::env::_var_os+0x184>
   13cae:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   13cb3:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
   13cb8:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   13cbd:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   13cc2:	ff 15 80 20 03 00    	callq  *0x32080(%rip)        # 45d48 <_GLOBAL_OFFSET_TABLE_+0x3c0>
   13cc8:	49 89 c4             	mov    %rax,%r12
   13ccb:	49 89 d7             	mov    %rdx,%r15
   13cce:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   13cd3:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
   13cd8:	48 8d 1d e9 24 03 00 	lea    0x324e9(%rip),%rbx        # 461c8 <std::sys::unix::os::env_lock::ENV_LOCK>
   13cdf:	48 89 df             	mov    %rbx,%rdi
   13ce2:	ff 15 d8 22 03 00    	callq  *0x322d8(%rip)        # 45fc0 <pthread_mutex_lock@GLIBC_2.2.5>
   13ce8:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   13ced:	4c 89 e7             	mov    %r12,%rdi
   13cf0:	ff 15 c2 1c 03 00    	callq  *0x31cc2(%rip)        # 459b8 <getenv@GLIBC_2.2.5>
   13cf6:	48 85 c0             	test   %rax,%rax
   13cf9:	74 4f                	je     13d4a <std::env::_var_os+0x13a>
   13cfb:	48 89 c5             	mov    %rax,%rbp
   13cfe:	48 89 c7             	mov    %rax,%rdi
   13d01:	ff 15 41 1e 03 00    	callq  *0x31e41(%rip)        # 45b48 <strlen@GLIBC_2.2.5>
   13d07:	48 89 c3             	mov    %rax,%rbx
   13d0a:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   13d10:	48 85 c0             	test   %rax,%rax
   13d13:	74 24                	je     13d39 <std::env::_var_os+0x129>
   13d15:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
   13d19:	0f 84 12 01 00 00    	je     13e31 <std::env::_var_os+0x221>
   13d1f:	be 01 00 00 00       	mov    $0x1,%esi
   13d24:	48 89 df             	mov    %rbx,%rdi
   13d27:	ff 15 53 1e 03 00    	callq  *0x31e53(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   13d2d:	49 89 c5             	mov    %rax,%r13
   13d30:	48 85 c0             	test   %rax,%rax
   13d33:	0f 84 20 01 00 00    	je     13e59 <std::env::_var_os+0x249>
   13d39:	4c 89 ef             	mov    %r13,%rdi
   13d3c:	48 89 ee             	mov    %rbp,%rsi
   13d3f:	48 89 da             	mov    %rbx,%rdx
   13d42:	ff 15 b0 1f 03 00    	callq  *0x31fb0(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
   13d48:	eb 03                	jmp    13d4d <std::env::_var_os+0x13d>
   13d4a:	45 31 ed             	xor    %r13d,%r13d
   13d4d:	48 8d 3d 74 24 03 00 	lea    0x32474(%rip),%rdi        # 461c8 <std::sys::unix::os::env_lock::ENV_LOCK>
   13d54:	ff 15 0e 20 03 00    	callq  *0x3200e(%rip)        # 45d68 <pthread_mutex_unlock@GLIBC_2.2.5>
   13d5a:	41 c6 04 24 00       	movb   $0x0,(%r12)
   13d5f:	4d 85 ff             	test   %r15,%r15
   13d62:	74 13                	je     13d77 <std::env::_var_os+0x167>
   13d64:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
   13d69:	ba 01 00 00 00       	mov    $0x1,%edx
   13d6e:	4c 89 fe             	mov    %r15,%rsi
   13d71:	ff 15 81 1e 03 00    	callq  *0x31e81(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   13d77:	4d 89 2e             	mov    %r13,(%r14)
   13d7a:	49 89 5e 08          	mov    %rbx,0x8(%r14)
   13d7e:	49 89 5e 10          	mov    %rbx,0x10(%r14)
   13d82:	4c 89 f0             	mov    %r14,%rax
   13d85:	48 83 c4 78          	add    $0x78,%rsp
   13d89:	5b                   	pop    %rbx
   13d8a:	41 5c                	pop    %r12
   13d8c:	41 5d                	pop    %r13
   13d8e:	41 5e                	pop    %r14
   13d90:	41 5f                	pop    %r15
   13d92:	5d                   	pop    %rbp
   13d93:	c3                   	retq   
   13d94:	48 29 d8             	sub    %rbx,%rax
   13d97:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   13d9c:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
   13da1:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
   13da6:	4c 89 6c 24 20       	mov    %r13,0x20(%rsp)
   13dab:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   13db0:	ff 15 62 1d 03 00    	callq  *0x31d62(%rip)        # 45b18 <_GLOBAL_OFFSET_TABLE_+0x190>
   13db6:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   13dbb:	48 89 54 24 60       	mov    %rdx,0x60(%rsp)
   13dc0:	48 8d 44 24 68       	lea    0x68(%rsp),%rax
   13dc5:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   13dca:	48 8d 05 bf 33 00 00 	lea    0x33bf(%rip),%rax        # 17190 <<std::path::Display as core::fmt::Debug>::fmt>
   13dd1:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   13dd6:	48 8d 44 24 58       	lea    0x58(%rsp),%rax
   13ddb:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   13de0:	48 8d 05 a9 0d 00 00 	lea    0xda9(%rip),%rax        # 14b90 <<std::io::error::Error as core::fmt::Display>::fmt>
   13de7:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   13dec:	48 8d 05 55 fd 02 00 	lea    0x2fd55(%rip),%rax        # 43b48 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x610>
   13df3:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   13df8:	48 c7 44 24 10 02 00 	movq   $0x2,0x10(%rsp)
   13dff:	00 00 
   13e01:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   13e08:	00 00 
   13e0a:	48 8d 44 24 38       	lea    0x38(%rsp),%rax
   13e0f:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   13e14:	48 c7 44 24 30 02 00 	movq   $0x2,0x30(%rsp)
   13e1b:	00 00 
   13e1d:	48 8d 35 44 fd 02 00 	lea    0x2fd44(%rip),%rsi        # 43b68 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x630>
   13e24:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   13e29:	ff 15 b1 21 03 00    	callq  *0x321b1(%rip)        # 45fe0 <_GLOBAL_OFFSET_TABLE_+0x658>
   13e2f:	eb 16                	jmp    13e47 <std::env::_var_os+0x237>
   13e31:	48 8d 15 98 fd 02 00 	lea    0x2fd98(%rip),%rdx        # 43bd0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x698>
   13e38:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   13e3f:	31 f6                	xor    %esi,%esi
   13e41:	ff 15 e1 1b 03 00    	callq  *0x31be1(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   13e47:	0f 0b                	ud2    
   13e49:	be 01 00 00 00       	mov    $0x1,%esi
   13e4e:	4c 89 ff             	mov    %r15,%rdi
   13e51:	ff 15 c9 1c 03 00    	callq  *0x31cc9(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   13e57:	0f 0b                	ud2    
   13e59:	be 01 00 00 00       	mov    $0x1,%esi
   13e5e:	48 89 df             	mov    %rbx,%rdi
   13e61:	ff 15 b9 1c 03 00    	callq  *0x31cb9(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   13e67:	0f 0b                	ud2    
   13e69:	48 89 c3             	mov    %rax,%rbx
   13e6c:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   13e71:	e8 ea 2d ff ff       	callq  6c60 <core::ptr::drop_in_place>
   13e76:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
   13e7b:	e8 00 2c ff ff       	callq  6a80 <core::ptr::drop_in_place>
   13e80:	eb 0d                	jmp    13e8f <std::env::_var_os+0x27f>
   13e82:	48 89 c3             	mov    %rax,%rbx
   13e85:	48 8d 7c 24 58       	lea    0x58(%rsp),%rdi
   13e8a:	e8 41 31 ff ff       	callq  6fd0 <core::ptr::drop_in_place>
   13e8f:	48 89 df             	mov    %rbx,%rdi
   13e92:	e8 b9 11 ff ff       	callq  5050 <_Unwind_Resume@plt>
   13e97:	0f 0b                	ud2    
   13e99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000013ea0 <std::env::current_exe>:
   13ea0:	41 57                	push   %r15
   13ea2:	41 56                	push   %r14
   13ea4:	53                   	push   %rbx
   13ea5:	48 83 ec 30          	sub    $0x30,%rsp
   13ea9:	48 89 fb             	mov    %rdi,%rbx
   13eac:	48 8d 35 bb 44 02 00 	lea    0x244bb(%rip),%rsi        # 3836e <str.6+0x104e>
   13eb3:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   13eb8:	ba 0e 00 00 00       	mov    $0xe,%edx
   13ebd:	ff 15 95 1b 03 00    	callq  *0x31b95(%rip)        # 45a58 <_GLOBAL_OFFSET_TABLE_+0xd0>
   13ec3:	83 7c 24 10 01       	cmpl   $0x1,0x10(%rsp)
   13ec8:	75 25                	jne    13eef <std::env::current_exe+0x4f>
   13eca:	0f b6 44 24 18       	movzbl 0x18(%rsp),%eax
   13ecf:	48 85 c0             	test   %rax,%rax
   13ed2:	74 39                	je     13f0d <std::env::current_exe+0x6d>
   13ed4:	83 f8 02             	cmp    $0x2,%eax
   13ed7:	74 0a                	je     13ee3 <std::env::current_exe+0x43>
   13ed9:	8a 44 24 19          	mov    0x19(%rsp),%al
   13edd:	84 c0                	test   %al,%al
   13edf:	75 0e                	jne    13eef <std::env::current_exe+0x4f>
   13ee1:	eb 37                	jmp    13f1a <std::env::current_exe+0x7a>
   13ee3:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   13ee8:	8a 40 10             	mov    0x10(%rax),%al
   13eeb:	84 c0                	test   %al,%al
   13eed:	74 2b                	je     13f1a <std::env::current_exe+0x7a>
   13eef:	0f 10 44 24 10       	movups 0x10(%rsp),%xmm0
   13ef4:	0f 10 4c 24 20       	movups 0x20(%rsp),%xmm1
   13ef9:	0f 11 4b 10          	movups %xmm1,0x10(%rbx)
   13efd:	0f 11 03             	movups %xmm0,(%rbx)
   13f00:	48 89 d8             	mov    %rbx,%rax
   13f03:	48 83 c4 30          	add    $0x30,%rsp
   13f07:	5b                   	pop    %rbx
   13f08:	41 5e                	pop    %r14
   13f0a:	41 5f                	pop    %r15
   13f0c:	c3                   	retq   
   13f0d:	8b 7c 24 1c          	mov    0x1c(%rsp),%edi
   13f11:	e8 1a 84 00 00       	callq  1c330 <std::sys::unix::decode_error_kind>
   13f16:	84 c0                	test   %al,%al
   13f18:	75 d5                	jne    13eef <std::env::current_exe+0x4f>
   13f1a:	bf 2e 00 00 00       	mov    $0x2e,%edi
   13f1f:	be 01 00 00 00       	mov    $0x1,%esi
   13f24:	ff 15 56 1c 03 00    	callq  *0x31c56(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   13f2a:	48 85 c0             	test   %rax,%rax
   13f2d:	0f 84 b2 00 00 00    	je     13fe5 <std::env::current_exe+0x145>
   13f33:	49 89 c6             	mov    %rax,%r14
   13f36:	0f 10 05 5d 44 02 00 	movups 0x2445d(%rip),%xmm0        # 3839a <str.6+0x107a>
   13f3d:	0f 11 40 1e          	movups %xmm0,0x1e(%rax)
   13f41:	0f 10 05 44 44 02 00 	movups 0x24444(%rip),%xmm0        # 3838c <str.6+0x106c>
   13f48:	0f 11 40 10          	movups %xmm0,0x10(%rax)
   13f4c:	0f 10 05 29 44 02 00 	movups 0x24429(%rip),%xmm0        # 3837c <str.6+0x105c>
   13f53:	0f 11 00             	movups %xmm0,(%rax)
   13f56:	bf 18 00 00 00       	mov    $0x18,%edi
   13f5b:	be 08 00 00 00       	mov    $0x8,%esi
   13f60:	ff 15 1a 1c 03 00    	callq  *0x31c1a(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   13f66:	48 85 c0             	test   %rax,%rax
   13f69:	74 68                	je     13fd3 <std::env::current_exe+0x133>
   13f6b:	49 89 c7             	mov    %rax,%r15
   13f6e:	4c 89 30             	mov    %r14,(%rax)
   13f71:	0f 28 05 48 21 02 00 	movaps 0x22148(%rip),%xmm0        # 360c0 <_fini+0x79c>
   13f78:	0f 11 40 08          	movups %xmm0,0x8(%rax)
   13f7c:	bf 18 00 00 00       	mov    $0x18,%edi
   13f81:	be 08 00 00 00       	mov    $0x8,%esi
   13f86:	ff 15 f4 1b 03 00    	callq  *0x31bf4(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   13f8c:	48 85 c0             	test   %rax,%rax
   13f8f:	74 42                	je     13fd3 <std::env::current_exe+0x133>
   13f91:	4c 89 38             	mov    %r15,(%rax)
   13f94:	48 8d 0d e5 fb 02 00 	lea    0x2fbe5(%rip),%rcx        # 43b80 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x648>
   13f9b:	48 89 48 08          	mov    %rcx,0x8(%rax)
   13f9f:	c6 40 10 10          	movb   $0x10,0x10(%rax)
   13fa3:	8b 4c 24 09          	mov    0x9(%rsp),%ecx
   13fa7:	8b 54 24 0c          	mov    0xc(%rsp),%edx
   13fab:	89 48 11             	mov    %ecx,0x11(%rax)
   13fae:	89 50 14             	mov    %edx,0x14(%rax)
   13fb1:	48 89 43 10          	mov    %rax,0x10(%rbx)
   13fb5:	48 c7 43 08 02 00 00 	movq   $0x2,0x8(%rbx)
   13fbc:	00 
   13fbd:	48 c7 03 01 00 00 00 	movq   $0x1,(%rbx)
   13fc4:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   13fc9:	e8 72 21 ff ff       	callq  6140 <core::ptr::drop_in_place>
   13fce:	e9 2d ff ff ff       	jmpq   13f00 <std::env::current_exe+0x60>
   13fd3:	bf 18 00 00 00       	mov    $0x18,%edi
   13fd8:	be 08 00 00 00       	mov    $0x8,%esi
   13fdd:	ff 15 3d 1b 03 00    	callq  *0x31b3d(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   13fe3:	0f 0b                	ud2    
   13fe5:	bf 2e 00 00 00       	mov    $0x2e,%edi
   13fea:	be 01 00 00 00       	mov    $0x1,%esi
   13fef:	ff 15 2b 1b 03 00    	callq  *0x31b2b(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   13ff5:	0f 0b                	ud2    
   13ff7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   13ffe:	00 00 

0000000000014000 <std::error::Error::type_id>:
   14000:	48 b8 1d 7c fa a7 76 	movabs $0x21ac0e76a7fa7c1d,%rax
   14007:	0e ac 21 
   1400a:	c3                   	retq   
   1400b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000014010 <std::error::Error::backtrace>:
   14010:	31 c0                	xor    %eax,%eax
   14012:	c3                   	retq   
   14013:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1401a:	00 00 00 
   1401d:	0f 1f 00             	nopl   (%rax)

0000000000014020 <std::error::Error::cause>:
   14020:	31 c0                	xor    %eax,%eax
   14022:	c3                   	retq   
   14023:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1402a:	00 00 00 
   1402d:	0f 1f 00             	nopl   (%rax)

0000000000014030 <<std::error::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<dyn std::error::Error+core::marker::Sync+core::marker::Send>>::from::StringError as std::error::Error>::description>:
   14030:	48 8b 07             	mov    (%rdi),%rax
   14033:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   14037:	c3                   	retq   
   14038:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1403f:	00 

0000000000014040 <<std::error::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<dyn std::error::Error+core::marker::Sync+core::marker::Send>>::from::StringError as core::fmt::Display>::fmt>:
   14040:	48 89 f2             	mov    %rsi,%rdx
   14043:	48 8b 07             	mov    (%rdi),%rax
   14046:	48 8b 77 10          	mov    0x10(%rdi),%rsi
   1404a:	48 89 c7             	mov    %rax,%rdi
   1404d:	ff 25 95 1c 03 00    	jmpq   *0x31c95(%rip)        # 45ce8 <_GLOBAL_OFFSET_TABLE_+0x360>
   14053:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1405a:	00 00 00 
   1405d:	0f 1f 00             	nopl   (%rax)

0000000000014060 <<std::error::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<dyn std::error::Error+core::marker::Sync+core::marker::Send>>::from::StringError as core::fmt::Debug>::fmt>:
   14060:	48 89 f2             	mov    %rsi,%rdx
   14063:	48 8b 07             	mov    (%rdi),%rax
   14066:	48 8b 77 10          	mov    0x10(%rdi),%rsi
   1406a:	48 89 c7             	mov    %rax,%rdi
   1406d:	ff 25 7d 1c 03 00    	jmpq   *0x31c7d(%rip)        # 45cf0 <_GLOBAL_OFFSET_TABLE_+0x368>
   14073:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1407a:	00 00 00 
   1407d:	0f 1f 00             	nopl   (%rax)

0000000000014080 <std::ffi::c_str::CString::from_vec_unchecked>:
   14080:	41 57                	push   %r15
   14082:	41 56                	push   %r14
   14084:	41 54                	push   %r12
   14086:	53                   	push   %rbx
   14087:	50                   	push   %rax
   14088:	49 89 fe             	mov    %rdi,%r14
   1408b:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
   1408f:	4c 8b 7f 10          	mov    0x10(%rdi),%r15
   14093:	4c 39 fb             	cmp    %r15,%rbx
   14096:	75 4a                	jne    140e2 <std::ffi::c_str::CString::from_vec_unchecked+0x62>
   14098:	4c 89 fb             	mov    %r15,%rbx
   1409b:	48 ff c3             	inc    %rbx
   1409e:	0f 84 02 01 00 00    	je     141a6 <std::ffi::c_str::CString::from_vec_unchecked+0x126>
   140a4:	4d 85 ff             	test   %r15,%r15
   140a7:	74 1b                	je     140c4 <std::ffi::c_str::CString::from_vec_unchecked+0x44>
   140a9:	49 8b 3e             	mov    (%r14),%rdi
   140ac:	48 85 ff             	test   %rdi,%rdi
   140af:	74 13                	je     140c4 <std::ffi::c_str::CString::from_vec_unchecked+0x44>
   140b1:	ba 01 00 00 00       	mov    $0x1,%edx
   140b6:	4c 89 fe             	mov    %r15,%rsi
   140b9:	48 89 d9             	mov    %rbx,%rcx
   140bc:	ff 15 b6 1e 03 00    	callq  *0x31eb6(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
   140c2:	eb 0e                	jmp    140d2 <std::ffi::c_str::CString::from_vec_unchecked+0x52>
   140c4:	be 01 00 00 00       	mov    $0x1,%esi
   140c9:	48 89 df             	mov    %rbx,%rdi
   140cc:	ff 15 ae 1a 03 00    	callq  *0x31aae(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   140d2:	48 85 c0             	test   %rax,%rax
   140d5:	0f 84 a1 00 00 00    	je     1417c <std::ffi::c_str::CString::from_vec_unchecked+0xfc>
   140db:	49 89 06             	mov    %rax,(%r14)
   140de:	49 89 5e 08          	mov    %rbx,0x8(%r14)
   140e2:	49 39 df             	cmp    %rbx,%r15
   140e5:	75 45                	jne    1412c <std::ffi::c_str::CString::from_vec_unchecked+0xac>
   140e7:	4c 89 fb             	mov    %r15,%rbx
   140ea:	48 ff c3             	inc    %rbx
   140ed:	0f 84 bb 00 00 00    	je     141ae <std::ffi::c_str::CString::from_vec_unchecked+0x12e>
   140f3:	4b 8d 04 3f          	lea    (%r15,%r15,1),%rax
   140f7:	48 39 d8             	cmp    %rbx,%rax
   140fa:	48 0f 46 c3          	cmovbe %rbx,%rax
   140fe:	48 83 f8 08          	cmp    $0x8,%rax
   14102:	41 bc 08 00 00 00    	mov    $0x8,%r12d
   14108:	4c 0f 47 e0          	cmova  %rax,%r12
   1410c:	4d 85 ff             	test   %r15,%r15
   1410f:	74 24                	je     14135 <std::ffi::c_str::CString::from_vec_unchecked+0xb5>
   14111:	49 8b 3e             	mov    (%r14),%rdi
   14114:	48 85 ff             	test   %rdi,%rdi
   14117:	74 1c                	je     14135 <std::ffi::c_str::CString::from_vec_unchecked+0xb5>
   14119:	ba 01 00 00 00       	mov    $0x1,%edx
   1411e:	4c 89 fe             	mov    %r15,%rsi
   14121:	4c 89 e1             	mov    %r12,%rcx
   14124:	ff 15 4e 1e 03 00    	callq  *0x31e4e(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
   1412a:	eb 17                	jmp    14143 <std::ffi::c_str::CString::from_vec_unchecked+0xc3>
   1412c:	49 8b 06             	mov    (%r14),%rax
   1412f:	49 8d 5f 01          	lea    0x1(%r15),%rbx
   14133:	eb 1a                	jmp    1414f <std::ffi::c_str::CString::from_vec_unchecked+0xcf>
   14135:	be 01 00 00 00       	mov    $0x1,%esi
   1413a:	4c 89 e7             	mov    %r12,%rdi
   1413d:	ff 15 3d 1a 03 00    	callq  *0x31a3d(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   14143:	48 85 c0             	test   %rax,%rax
   14146:	74 6e                	je     141b6 <std::ffi::c_str::CString::from_vec_unchecked+0x136>
   14148:	49 89 06             	mov    %rax,(%r14)
   1414b:	4d 89 66 08          	mov    %r12,0x8(%r14)
   1414f:	42 c6 04 38 00       	movb   $0x0,(%rax,%r15,1)
   14154:	49 89 5e 10          	mov    %rbx,0x10(%r14)
   14158:	49 8b 76 08          	mov    0x8(%r14),%rsi
   1415c:	48 39 de             	cmp    %rbx,%rsi
   1415f:	76 36                	jbe    14197 <std::ffi::c_str::CString::from_vec_unchecked+0x117>
   14161:	ba 01 00 00 00       	mov    $0x1,%edx
   14166:	48 89 c7             	mov    %rax,%rdi
   14169:	48 85 db             	test   %rbx,%rbx
   1416c:	74 1e                	je     1418c <std::ffi::c_str::CString::from_vec_unchecked+0x10c>
   1416e:	48 89 d9             	mov    %rbx,%rcx
   14171:	ff 15 01 1e 03 00    	callq  *0x31e01(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
   14177:	48 85 c0             	test   %rax,%rax
   1417a:	75 1b                	jne    14197 <std::ffi::c_str::CString::from_vec_unchecked+0x117>
   1417c:	be 01 00 00 00       	mov    $0x1,%esi
   14181:	48 89 df             	mov    %rbx,%rdi
   14184:	ff 15 96 19 03 00    	callq  *0x31996(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   1418a:	0f 0b                	ud2    
   1418c:	ff 15 66 1a 03 00    	callq  *0x31a66(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   14192:	b8 01 00 00 00       	mov    $0x1,%eax
   14197:	48 89 da             	mov    %rbx,%rdx
   1419a:	48 83 c4 08          	add    $0x8,%rsp
   1419e:	5b                   	pop    %rbx
   1419f:	41 5c                	pop    %r12
   141a1:	41 5e                	pop    %r14
   141a3:	41 5f                	pop    %r15
   141a5:	c3                   	retq   
   141a6:	ff 15 34 19 03 00    	callq  *0x31934(%rip)        # 45ae0 <_GLOBAL_OFFSET_TABLE_+0x158>
   141ac:	eb 06                	jmp    141b4 <std::ffi::c_str::CString::from_vec_unchecked+0x134>
   141ae:	ff 15 2c 19 03 00    	callq  *0x3192c(%rip)        # 45ae0 <_GLOBAL_OFFSET_TABLE_+0x158>
   141b4:	0f 0b                	ud2    
   141b6:	be 01 00 00 00       	mov    $0x1,%esi
   141bb:	4c 89 e7             	mov    %r12,%rdi
   141be:	ff 15 5c 19 03 00    	callq  *0x3195c(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   141c4:	0f 0b                	ud2    
   141c6:	48 89 c3             	mov    %rax,%rbx
   141c9:	4c 89 f7             	mov    %r14,%rdi
   141cc:	e8 5f 26 ff ff       	callq  6830 <core::ptr::drop_in_place>
   141d1:	48 89 df             	mov    %rbx,%rdi
   141d4:	e8 77 0e ff ff       	callq  5050 <_Unwind_Resume@plt>
   141d9:	0f 0b                	ud2    
   141db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000141e0 <std::ffi::c_str::<impl core::convert::From<std::ffi::c_str::NulError> for std::io::error::Error>::from>:
   141e0:	41 57                	push   %r15
   141e2:	41 56                	push   %r14
   141e4:	53                   	push   %rbx
   141e5:	48 83 ec 10          	sub    $0x10,%rsp
   141e9:	49 89 fe             	mov    %rdi,%r14
   141ec:	bf 21 00 00 00       	mov    $0x21,%edi
   141f1:	be 01 00 00 00       	mov    $0x1,%esi
   141f6:	ff 15 84 19 03 00    	callq  *0x31984(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   141fc:	48 85 c0             	test   %rax,%rax
   141ff:	0f 84 c0 00 00 00    	je     142c5 <std::ffi::c_str::<impl core::convert::From<std::ffi::c_str::NulError> for std::io::error::Error>::from+0xe5>
   14205:	48 89 c3             	mov    %rax,%rbx
   14208:	8a 05 a2 39 02 00    	mov    0x239a2(%rip),%al        # 37bb0 <str.6+0x890>
   1420e:	88 43 20             	mov    %al,0x20(%rbx)
   14211:	0f 10 05 88 39 02 00 	movups 0x23988(%rip),%xmm0        # 37ba0 <str.6+0x880>
   14218:	0f 11 43 10          	movups %xmm0,0x10(%rbx)
   1421c:	0f 10 05 6d 39 02 00 	movups 0x2396d(%rip),%xmm0        # 37b90 <str.6+0x870>
   14223:	0f 11 03             	movups %xmm0,(%rbx)
   14226:	bf 18 00 00 00       	mov    $0x18,%edi
   1422b:	be 08 00 00 00       	mov    $0x8,%esi
   14230:	ff 15 4a 19 03 00    	callq  *0x3194a(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   14236:	48 85 c0             	test   %rax,%rax
   14239:	74 78                	je     142b3 <std::ffi::c_str::<impl core::convert::From<std::ffi::c_str::NulError> for std::io::error::Error>::from+0xd3>
   1423b:	49 89 c7             	mov    %rax,%r15
   1423e:	48 89 18             	mov    %rbx,(%rax)
   14241:	0f 28 05 88 1e 02 00 	movaps 0x21e88(%rip),%xmm0        # 360d0 <_fini+0x7ac>
   14248:	0f 11 40 08          	movups %xmm0,0x8(%rax)
   1424c:	bf 18 00 00 00       	mov    $0x18,%edi
   14251:	be 08 00 00 00       	mov    $0x8,%esi
   14256:	ff 15 24 19 03 00    	callq  *0x31924(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   1425c:	48 85 c0             	test   %rax,%rax
   1425f:	74 52                	je     142b3 <std::ffi::c_str::<impl core::convert::From<std::ffi::c_str::NulError> for std::io::error::Error>::from+0xd3>
   14261:	48 89 c3             	mov    %rax,%rbx
   14264:	4c 89 38             	mov    %r15,(%rax)
   14267:	48 8d 05 12 f9 02 00 	lea    0x2f912(%rip),%rax        # 43b80 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x648>
   1426e:	48 89 43 08          	mov    %rax,0x8(%rbx)
   14272:	c6 43 10 0b          	movb   $0xb,0x10(%rbx)
   14276:	8b 44 24 09          	mov    0x9(%rsp),%eax
   1427a:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
   1427e:	89 43 11             	mov    %eax,0x11(%rbx)
   14281:	89 4b 14             	mov    %ecx,0x14(%rbx)
   14284:	49 8b 7e 08          	mov    0x8(%r14),%rdi
   14288:	48 85 ff             	test   %rdi,%rdi
   1428b:	74 14                	je     142a1 <std::ffi::c_str::<impl core::convert::From<std::ffi::c_str::NulError> for std::io::error::Error>::from+0xc1>
   1428d:	49 8b 76 10          	mov    0x10(%r14),%rsi
   14291:	48 85 f6             	test   %rsi,%rsi
   14294:	74 0b                	je     142a1 <std::ffi::c_str::<impl core::convert::From<std::ffi::c_str::NulError> for std::io::error::Error>::from+0xc1>
   14296:	ba 01 00 00 00       	mov    $0x1,%edx
   1429b:	ff 15 57 19 03 00    	callq  *0x31957(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   142a1:	b8 02 00 00 00       	mov    $0x2,%eax
   142a6:	48 89 da             	mov    %rbx,%rdx
   142a9:	48 83 c4 10          	add    $0x10,%rsp
   142ad:	5b                   	pop    %rbx
   142ae:	41 5e                	pop    %r14
   142b0:	41 5f                	pop    %r15
   142b2:	c3                   	retq   
   142b3:	bf 18 00 00 00       	mov    $0x18,%edi
   142b8:	be 08 00 00 00       	mov    $0x8,%esi
   142bd:	ff 15 5d 18 03 00    	callq  *0x3185d(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   142c3:	0f 0b                	ud2    
   142c5:	bf 21 00 00 00       	mov    $0x21,%edi
   142ca:	be 01 00 00 00       	mov    $0x1,%esi
   142cf:	ff 15 4b 18 03 00    	callq  *0x3184b(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   142d5:	0f 0b                	ud2    
   142d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   142de:	00 00 

00000000000142e0 <std::fs::OpenOptions::_open>:
   142e0:	55                   	push   %rbp
   142e1:	41 57                	push   %r15
   142e3:	41 56                	push   %r14
   142e5:	41 55                	push   %r13
   142e7:	41 54                	push   %r12
   142e9:	53                   	push   %rbx
   142ea:	48 83 ec 28          	sub    $0x28,%rsp
   142ee:	49 89 cc             	mov    %rcx,%r12
   142f1:	49 89 d5             	mov    %rdx,%r13
   142f4:	49 89 f6             	mov    %rsi,%r14
   142f7:	49 89 ff             	mov    %rdi,%r15
   142fa:	48 89 cb             	mov    %rcx,%rbx
   142fd:	48 ff c3             	inc    %rbx
   14300:	75 35                	jne    14337 <std::fs::OpenOptions::_open+0x57>
   14302:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
   14309:	be 01 00 00 00       	mov    $0x1,%esi
   1430e:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   14315:	ff 15 65 18 03 00    	callq  *0x31865(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   1431b:	48 89 c5             	mov    %rax,%rbp
   1431e:	48 85 c0             	test   %rax,%rax
   14321:	75 2e                	jne    14351 <std::fs::OpenOptions::_open+0x71>
   14323:	be 01 00 00 00       	mov    $0x1,%esi
   14328:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   1432f:	ff 15 eb 17 03 00    	callq  *0x317eb(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   14335:	0f 0b                	ud2    
   14337:	be 01 00 00 00       	mov    $0x1,%esi
   1433c:	48 89 df             	mov    %rbx,%rdi
   1433f:	ff 15 3b 18 03 00    	callq  *0x3183b(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   14345:	48 85 c0             	test   %rax,%rax
   14348:	0f 84 db 00 00 00    	je     14429 <std::fs::OpenOptions::_open+0x149>
   1434e:	48 89 c5             	mov    %rax,%rbp
   14351:	48 89 ef             	mov    %rbp,%rdi
   14354:	4c 89 ee             	mov    %r13,%rsi
   14357:	4c 89 e2             	mov    %r12,%rdx
   1435a:	ff 15 98 19 03 00    	callq  *0x31998(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
   14360:	48 89 ef             	mov    %rbp,%rdi
   14363:	31 f6                	xor    %esi,%esi
   14365:	4c 89 e2             	mov    %r12,%rdx
   14368:	ff 15 fa 18 03 00    	callq  *0x318fa(%rip)        # 45c68 <memchr@GLIBC_2.2.5>
   1436e:	48 85 c0             	test   %rax,%rax
   14371:	74 36                	je     143a9 <std::fs::OpenOptions::_open+0xc9>
   14373:	48 29 e8             	sub    %rbp,%rax
   14376:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1437b:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
   14380:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   14385:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
   1438a:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   1438f:	ff 15 83 17 03 00    	callq  *0x31783(%rip)        # 45b18 <_GLOBAL_OFFSET_TABLE_+0x190>
   14395:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   1439a:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1439f:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%rsp)
   143a6:	00 
   143a7:	eb 49                	jmp    143f2 <std::fs::OpenOptions::_open+0x112>
   143a9:	48 89 6c 24 08       	mov    %rbp,0x8(%rsp)
   143ae:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
   143b3:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   143b8:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   143bd:	ff 15 85 19 03 00    	callq  *0x31985(%rip)        # 45d48 <_GLOBAL_OFFSET_TABLE_+0x3c0>
   143c3:	48 89 c3             	mov    %rax,%rbx
   143c6:	48 89 d5             	mov    %rdx,%rbp
   143c9:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   143ce:	48 89 c6             	mov    %rax,%rsi
   143d1:	4c 89 f1             	mov    %r14,%rcx
   143d4:	e8 17 74 00 00       	callq  1b7f0 <std::sys::unix::fs::File::open_c>
   143d9:	c6 03 00             	movb   $0x0,(%rbx)
   143dc:	48 85 ed             	test   %rbp,%rbp
   143df:	74 11                	je     143f2 <std::fs::OpenOptions::_open+0x112>
   143e1:	ba 01 00 00 00       	mov    $0x1,%edx
   143e6:	48 89 df             	mov    %rbx,%rdi
   143e9:	48 89 ee             	mov    %rbp,%rsi
   143ec:	ff 15 06 18 03 00    	callq  *0x31806(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   143f2:	83 7c 24 08 01       	cmpl   $0x1,0x8(%rsp)
   143f7:	75 11                	jne    1440a <std::fs::OpenOptions::_open+0x12a>
   143f9:	0f 10 44 24 10       	movups 0x10(%rsp),%xmm0
   143fe:	41 0f 11 47 08       	movups %xmm0,0x8(%r15)
   14403:	b8 01 00 00 00       	mov    $0x1,%eax
   14408:	eb 0a                	jmp    14414 <std::fs::OpenOptions::_open+0x134>
   1440a:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   1440e:	41 89 47 04          	mov    %eax,0x4(%r15)
   14412:	31 c0                	xor    %eax,%eax
   14414:	41 89 07             	mov    %eax,(%r15)
   14417:	4c 89 f8             	mov    %r15,%rax
   1441a:	48 83 c4 28          	add    $0x28,%rsp
   1441e:	5b                   	pop    %rbx
   1441f:	41 5c                	pop    %r12
   14421:	41 5d                	pop    %r13
   14423:	41 5e                	pop    %r14
   14425:	41 5f                	pop    %r15
   14427:	5d                   	pop    %rbp
   14428:	c3                   	retq   
   14429:	be 01 00 00 00       	mov    $0x1,%esi
   1442e:	48 89 df             	mov    %rbx,%rdi
   14431:	ff 15 e9 16 03 00    	callq  *0x316e9(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   14437:	0f 0b                	ud2    
   14439:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000014440 <std::io::buffered::BufWriter<W>::flush_buf>:
   14440:	55                   	push   %rbp
   14441:	41 57                	push   %r15
   14443:	41 56                	push   %r14
   14445:	41 55                	push   %r13
   14447:	41 54                	push   %r12
   14449:	53                   	push   %rbx
   1444a:	48 83 ec 38          	sub    $0x38,%rsp
   1444e:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   14453:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   1445a:	00 00 
   1445c:	80 7f 18 01          	cmpb   $0x1,0x18(%rdi)
   14460:	0f 85 13 03 00 00    	jne    14779 <std::io::buffered::BufWriter<W>::flush_buf+0x339>
   14466:	49 89 fe             	mov    %rdi,%r14
   14469:	48 8b 77 10          	mov    0x10(%rdi),%rsi
   1446d:	48 85 f6             	test   %rsi,%rsi
   14470:	0f 84 a0 01 00 00    	je     14616 <std::io::buffered::BufWriter<W>::flush_buf+0x1d6>
   14476:	45 31 ed             	xor    %r13d,%r13d
   14479:	48 8b 1d 50 16 03 00 	mov    0x31650(%rip),%rbx        # 45ad0 <write@GLIBC_2.2.5>
   14480:	4c 8d 3d b9 0f ff ff 	lea    -0xf047(%rip),%r15        # 5440 <__rust_dealloc>
   14487:	e9 24 00 00 00       	jmpq   144b0 <std::io::buffered::BufWriter<W>::flush_buf+0x70>
   1448c:	0f 1f 40 00          	nopl   0x0(%rax)
   14490:	be 18 00 00 00       	mov    $0x18,%esi
   14495:	ba 08 00 00 00       	mov    $0x8,%edx
   1449a:	48 89 df             	mov    %rbx,%rdi
   1449d:	41 ff d7             	callq  *%r15
   144a0:	48 89 eb             	mov    %rbp,%rbx
   144a3:	49 8b 76 10          	mov    0x10(%r14),%rsi
   144a7:	4c 39 ee             	cmp    %r13,%rsi
   144aa:	0f 86 30 01 00 00    	jbe    145e0 <std::io::buffered::BufWriter<W>::flush_buf+0x1a0>
   144b0:	41 c6 46 19 01       	movb   $0x1,0x19(%r14)
   144b5:	48 89 f5             	mov    %rsi,%rbp
   144b8:	4c 29 ed             	sub    %r13,%rbp
   144bb:	0f 82 a1 02 00 00    	jb     14762 <std::io::buffered::BufWriter<W>::flush_buf+0x322>
   144c1:	49 8b 36             	mov    (%r14),%rsi
   144c4:	4c 01 ee             	add    %r13,%rsi
   144c7:	48 ba ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rdx
   144ce:	ff ff 7f 
   144d1:	48 39 d5             	cmp    %rdx,%rbp
   144d4:	48 0f 42 d5          	cmovb  %rbp,%rdx
   144d8:	bf 01 00 00 00       	mov    $0x1,%edi
   144dd:	ff d3                	callq  *%rbx
   144df:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   144e3:	74 0b                	je     144f0 <std::io::buffered::BufWriter<W>::flush_buf+0xb0>
   144e5:	31 c9                	xor    %ecx,%ecx
   144e7:	31 d2                	xor    %edx,%edx
   144e9:	48 89 c5             	mov    %rax,%rbp
   144ec:	eb 4c                	jmp    1453a <std::io::buffered::BufWriter<W>::flush_buf+0xfa>
   144ee:	66 90                	xchg   %ax,%ax
   144f0:	ff 15 22 15 03 00    	callq  *0x31522(%rip)        # 45a18 <__errno_location@GLIBC_2.2.5>
   144f6:	8b 00                	mov    (%rax),%eax
   144f8:	66 48 0f 6e c0       	movq   %rax,%xmm0
   144fd:	66 0f 74 05 6b 1c 02 	pcmpeqb 0x21c6b(%rip),%xmm0        # 36170 <_fini+0x84c>
   14504:	00 
   14505:	66 0f d7 c8          	pmovmskb %xmm0,%ecx
   14509:	81 f9 ff ff 00 00    	cmp    $0xffff,%ecx
   1450f:	75 18                	jne    14529 <std::io::buffered::BufWriter<W>::flush_buf+0xe9>
   14511:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   14516:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   1451d:	00 00 
   1451f:	41 c6 46 19 00       	movb   $0x0,0x19(%r14)
   14524:	45 31 e4             	xor    %r12d,%r12d
   14527:	eb 47                	jmp    14570 <std::io::buffered::BufWriter<W>::flush_buf+0x130>
   14529:	48 c1 e0 20          	shl    $0x20,%rax
   1452d:	ba 01 00 00 00       	mov    $0x1,%edx
   14532:	b1 01                	mov    $0x1,%cl
   14534:	48 89 c5             	mov    %rax,%rbp
   14537:	45 31 e4             	xor    %r12d,%r12d
   1453a:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   1453f:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   14544:	4c 89 64 24 28       	mov    %r12,0x28(%rsp)
   14549:	41 c6 46 19 00       	movb   $0x0,0x19(%r14)
   1454e:	84 c9                	test   %cl,%cl
   14550:	74 1e                	je     14570 <std::io::buffered::BufWriter<W>::flush_buf+0x130>
   14552:	40 84 ed             	test   %bpl,%bpl
   14555:	74 3a                	je     14591 <std::io::buffered::BufWriter<W>::flush_buf+0x151>
   14557:	40 80 fd 01          	cmp    $0x1,%bpl
   1455b:	74 24                	je     14581 <std::io::buffered::BufWriter<W>::flush_buf+0x141>
   1455d:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   14562:	80 78 10 0f          	cmpb   $0xf,0x10(%rax)
   14566:	74 47                	je     145af <std::io::buffered::BufWriter<W>::flush_buf+0x16f>
   14568:	e9 92 01 00 00       	jmpq   146ff <std::io::buffered::BufWriter<W>::flush_buf+0x2bf>
   1456d:	0f 1f 00             	nopl   (%rax)
   14570:	48 85 ed             	test   %rbp,%rbp
   14573:	0f 84 c2 00 00 00    	je     1463b <std::io::buffered::BufWriter<W>::flush_buf+0x1fb>
   14579:	49 01 ed             	add    %rbp,%r13
   1457c:	e9 22 ff ff ff       	jmpq   144a3 <std::io::buffered::BufWriter<W>::flush_buf+0x63>
   14581:	48 89 e8             	mov    %rbp,%rax
   14584:	48 c1 e8 08          	shr    $0x8,%rax
   14588:	3c 0f                	cmp    $0xf,%al
   1458a:	74 19                	je     145a5 <std::io::buffered::BufWriter<W>::flush_buf+0x165>
   1458c:	e9 6e 01 00 00       	jmpq   146ff <std::io::buffered::BufWriter<W>::flush_buf+0x2bf>
   14591:	48 89 ef             	mov    %rbp,%rdi
   14594:	48 c1 ef 20          	shr    $0x20,%rdi
   14598:	e8 93 7d 00 00       	callq  1c330 <std::sys::unix::decode_error_kind>
   1459d:	3c 0f                	cmp    $0xf,%al
   1459f:	0f 85 5a 01 00 00    	jne    146ff <std::io::buffered::BufWriter<W>::flush_buf+0x2bf>
   145a5:	40 80 fd 02          	cmp    $0x2,%bpl
   145a9:	0f 82 f4 fe ff ff    	jb     144a3 <std::io::buffered::BufWriter<W>::flush_buf+0x63>
   145af:	48 89 dd             	mov    %rbx,%rbp
   145b2:	48 8b 5c 24 28       	mov    0x28(%rsp),%rbx
   145b7:	48 8b 3b             	mov    (%rbx),%rdi
   145ba:	48 8b 43 08          	mov    0x8(%rbx),%rax
   145be:	ff 10                	callq  *(%rax)
   145c0:	48 8b 43 08          	mov    0x8(%rbx),%rax
   145c4:	48 8b 70 08          	mov    0x8(%rax),%rsi
   145c8:	48 85 f6             	test   %rsi,%rsi
   145cb:	0f 84 bf fe ff ff    	je     14490 <std::io::buffered::BufWriter<W>::flush_buf+0x50>
   145d1:	48 8b 3b             	mov    (%rbx),%rdi
   145d4:	48 8b 50 10          	mov    0x10(%rax),%rdx
   145d8:	41 ff d7             	callq  *%r15
   145db:	e9 b0 fe ff ff       	jmpq   14490 <std::io::buffered::BufWriter<W>::flush_buf+0x50>
   145e0:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
   145e5:	4d 85 ed             	test   %r13,%r13
   145e8:	74 2c                	je     14616 <std::io::buffered::BufWriter<W>::flush_buf+0x1d6>
   145ea:	48 89 f3             	mov    %rsi,%rbx
   145ed:	4c 29 eb             	sub    %r13,%rbx
   145f0:	0f 82 9e 01 00 00    	jb     14794 <std::io::buffered::BufWriter<W>::flush_buf+0x354>
   145f6:	49 c7 46 10 00 00 00 	movq   $0x0,0x10(%r14)
   145fd:	00 
   145fe:	74 16                	je     14616 <std::io::buffered::BufWriter<W>::flush_buf+0x1d6>
   14600:	49 8b 3e             	mov    (%r14),%rdi
   14603:	49 01 fd             	add    %rdi,%r13
   14606:	4c 89 ee             	mov    %r13,%rsi
   14609:	48 89 da             	mov    %rbx,%rdx
   1460c:	ff 15 56 18 03 00    	callq  *0x31856(%rip)        # 45e68 <memmove@GLIBC_2.2.5>
   14612:	49 89 5e 10          	mov    %rbx,0x10(%r14)
   14616:	40 b5 03             	mov    $0x3,%bpl
   14619:	4d 0f a4 fc 08       	shld   $0x8,%r15,%r12
   1461e:	49 c1 e7 08          	shl    $0x8,%r15
   14622:	40 0f b6 c5          	movzbl %bpl,%eax
   14626:	4c 09 f8             	or     %r15,%rax
   14629:	4c 89 e2             	mov    %r12,%rdx
   1462c:	48 83 c4 38          	add    $0x38,%rsp
   14630:	5b                   	pop    %rbx
   14631:	41 5c                	pop    %r12
   14633:	41 5d                	pop    %r13
   14635:	41 5e                	pop    %r14
   14637:	41 5f                	pop    %r15
   14639:	5d                   	pop    %rbp
   1463a:	c3                   	retq   
   1463b:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
   14640:	bf 21 00 00 00       	mov    $0x21,%edi
   14645:	be 01 00 00 00       	mov    $0x1,%esi
   1464a:	ff 15 30 15 03 00    	callq  *0x31530(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   14650:	48 85 c0             	test   %rax,%rax
   14653:	0f 84 5f 01 00 00    	je     147b8 <std::io::buffered::BufWriter<W>::flush_buf+0x378>
   14659:	48 89 c3             	mov    %rax,%rbx
   1465c:	8a 05 8d 35 02 00    	mov    0x2358d(%rip),%al        # 37bef <str.6+0x8cf>
   14662:	88 43 20             	mov    %al,0x20(%rbx)
   14665:	0f 10 05 73 35 02 00 	movups 0x23573(%rip),%xmm0        # 37bdf <str.6+0x8bf>
   1466c:	0f 11 43 10          	movups %xmm0,0x10(%rbx)
   14670:	f3 0f 6f 05 57 35 02 	movdqu 0x23557(%rip),%xmm0        # 37bcf <str.6+0x8af>
   14677:	00 
   14678:	f3 0f 7f 03          	movdqu %xmm0,(%rbx)
   1467c:	bf 18 00 00 00       	mov    $0x18,%edi
   14681:	be 08 00 00 00       	mov    $0x8,%esi
   14686:	ff 15 f4 14 03 00    	callq  *0x314f4(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   1468c:	48 85 c0             	test   %rax,%rax
   1468f:	0f 84 11 01 00 00    	je     147a6 <std::io::buffered::BufWriter<W>::flush_buf+0x366>
   14695:	49 89 c4             	mov    %rax,%r12
   14698:	48 89 18             	mov    %rbx,(%rax)
   1469b:	66 0f 6f 05 2d 1a 02 	movdqa 0x21a2d(%rip),%xmm0        # 360d0 <_fini+0x7ac>
   146a2:	00 
   146a3:	f3 0f 7f 40 08       	movdqu %xmm0,0x8(%rax)
   146a8:	bf 18 00 00 00       	mov    $0x18,%edi
   146ad:	be 08 00 00 00       	mov    $0x8,%esi
   146b2:	ff 15 c8 14 03 00    	callq  *0x314c8(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   146b8:	48 85 c0             	test   %rax,%rax
   146bb:	0f 84 e5 00 00 00    	je     147a6 <std::io::buffered::BufWriter<W>::flush_buf+0x366>
   146c1:	49 89 c7             	mov    %rax,%r15
   146c4:	4c 89 20             	mov    %r12,(%rax)
   146c7:	48 8d 05 b2 f4 02 00 	lea    0x2f4b2(%rip),%rax        # 43b80 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x648>
   146ce:	49 89 47 08          	mov    %rax,0x8(%r15)
   146d2:	41 c6 47 10 0e       	movb   $0xe,0x10(%r15)
   146d7:	8b 44 24 31          	mov    0x31(%rsp),%eax
   146db:	8b 4c 24 34          	mov    0x34(%rsp),%ecx
   146df:	41 89 47 11          	mov    %eax,0x11(%r15)
   146e3:	41 89 4f 14          	mov    %ecx,0x14(%r15)
   146e7:	4d 89 fc             	mov    %r15,%r12
   146ea:	49 c1 ec 08          	shr    $0x8,%r12
   146ee:	49 c1 e7 38          	shl    $0x38,%r15
   146f2:	40 b5 02             	mov    $0x2,%bpl
   146f5:	4d 85 ed             	test   %r13,%r13
   146f8:	75 33                	jne    1472d <std::io::buffered::BufWriter<W>::flush_buf+0x2ed>
   146fa:	e9 1a ff ff ff       	jmpq   14619 <std::io::buffered::BufWriter<W>::flush_buf+0x1d9>
   146ff:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
   14704:	0f b6 44 24 2f       	movzbl 0x2f(%rsp),%eax
   14709:	c1 e0 10             	shl    $0x10,%eax
   1470c:	0f b7 4c 24 2d       	movzwl 0x2d(%rsp),%ecx
   14711:	09 c1                	or     %eax,%ecx
   14713:	48 c1 e1 20          	shl    $0x20,%rcx
   14717:	44 8b 64 24 29       	mov    0x29(%rsp),%r12d
   1471c:	49 09 cc             	or     %rcx,%r12
   1471f:	4c 8b 7c 24 21       	mov    0x21(%rsp),%r15
   14724:	4d 85 ed             	test   %r13,%r13
   14727:	0f 84 ec fe ff ff    	je     14619 <std::io::buffered::BufWriter<W>::flush_buf+0x1d9>
   1472d:	49 8b 76 10          	mov    0x10(%r14),%rsi
   14731:	48 89 f3             	mov    %rsi,%rbx
   14734:	4c 29 eb             	sub    %r13,%rbx
   14737:	72 5b                	jb     14794 <std::io::buffered::BufWriter<W>::flush_buf+0x354>
   14739:	49 c7 46 10 00 00 00 	movq   $0x0,0x10(%r14)
   14740:	00 
   14741:	0f 84 d2 fe ff ff    	je     14619 <std::io::buffered::BufWriter<W>::flush_buf+0x1d9>
   14747:	49 8b 3e             	mov    (%r14),%rdi
   1474a:	49 01 fd             	add    %rdi,%r13
   1474d:	4c 89 ee             	mov    %r13,%rsi
   14750:	48 89 da             	mov    %rbx,%rdx
   14753:	ff 15 0f 17 03 00    	callq  *0x3170f(%rip)        # 45e68 <memmove@GLIBC_2.2.5>
   14759:	49 89 5e 10          	mov    %rbx,0x10(%r14)
   1475d:	e9 b7 fe ff ff       	jmpq   14619 <std::io::buffered::BufWriter<W>::flush_buf+0x1d9>
   14762:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
   14767:	48 8d 15 92 f4 02 00 	lea    0x2f492(%rip),%rdx        # 43c00 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x6c8>
   1476e:	4c 89 ef             	mov    %r13,%rdi
   14771:	ff 15 79 16 03 00    	callq  *0x31679(%rip)        # 45df0 <_GLOBAL_OFFSET_TABLE_+0x468>
   14777:	0f 0b                	ud2    
   14779:	48 8d 3d 7a 2e 02 00 	lea    0x22e7a(%rip),%rdi        # 375fa <str.6+0x2da>
   14780:	48 8d 15 61 f4 02 00 	lea    0x2f461(%rip),%rdx        # 43be8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x6b0>
   14787:	be 2b 00 00 00       	mov    $0x2b,%esi
   1478c:	ff 15 46 17 03 00    	callq  *0x31746(%rip)        # 45ed8 <_GLOBAL_OFFSET_TABLE_+0x550>
   14792:	eb e3                	jmp    14777 <std::io::buffered::BufWriter<W>::flush_buf+0x337>
   14794:	48 8d 15 05 f1 02 00 	lea    0x2f105(%rip),%rdx        # 438a0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x368>
   1479b:	4c 89 ef             	mov    %r13,%rdi
   1479e:	ff 15 84 12 03 00    	callq  *0x31284(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   147a4:	0f 0b                	ud2    
   147a6:	bf 18 00 00 00       	mov    $0x18,%edi
   147ab:	be 08 00 00 00       	mov    $0x8,%esi
   147b0:	ff 15 6a 13 03 00    	callq  *0x3136a(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   147b6:	0f 0b                	ud2    
   147b8:	bf 21 00 00 00       	mov    $0x21,%edi
   147bd:	be 01 00 00 00       	mov    $0x1,%esi
   147c2:	ff 15 58 13 03 00    	callq  *0x31358(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   147c8:	0f 0b                	ud2    
   147ca:	49 89 c6             	mov    %rax,%r14
   147cd:	eb 1c                	jmp    147eb <std::io::buffered::BufWriter<W>::flush_buf+0x3ab>
   147cf:	49 89 c6             	mov    %rax,%r14
   147d2:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
   147d7:	48 8b 3b             	mov    (%rbx),%rdi
   147da:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   147de:	e8 ed 51 ff ff       	callq  99d0 <alloc::alloc::box_free>
   147e3:	48 89 df             	mov    %rbx,%rdi
   147e6:	e8 05 52 ff ff       	callq  99f0 <alloc::alloc::box_free>
   147eb:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   147f0:	e8 eb 15 ff ff       	callq  5de0 <core::ptr::drop_in_place>
   147f5:	4c 89 f7             	mov    %r14,%rdi
   147f8:	e8 53 08 ff ff       	callq  5050 <_Unwind_Resume@plt>
   147fd:	0f 0b                	ud2    
   147ff:	90                   	nop

0000000000014800 <<std::io::buffered::BufWriter<W> as std::io::Write>::write_all>:
   14800:	41 57                	push   %r15
   14802:	41 56                	push   %r14
   14804:	41 54                	push   %r12
   14806:	53                   	push   %rbx
   14807:	50                   	push   %rax
   14808:	49 89 d6             	mov    %rdx,%r14
   1480b:	49 89 f7             	mov    %rsi,%r15
   1480e:	48 89 fb             	mov    %rdi,%rbx
   14811:	48 8b 47 10          	mov    0x10(%rdi),%rax
   14815:	48 01 d0             	add    %rdx,%rax
   14818:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   1481c:	48 39 f0             	cmp    %rsi,%rax
   1481f:	76 14                	jbe    14835 <<std::io::buffered::BufWriter<W> as std::io::Write>::write_all+0x35>
   14821:	48 89 df             	mov    %rbx,%rdi
   14824:	e8 17 fc ff ff       	callq  14440 <std::io::buffered::BufWriter<W>::flush_buf>
   14829:	3c 03                	cmp    $0x3,%al
   1482b:	0f 85 c0 00 00 00    	jne    148f1 <<std::io::buffered::BufWriter<W> as std::io::Write>::write_all+0xf1>
   14831:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   14835:	4c 39 f6             	cmp    %r14,%rsi
   14838:	76 68                	jbe    148a2 <<std::io::buffered::BufWriter<W> as std::io::Write>::write_all+0xa2>
   1483a:	48 8b 43 10          	mov    0x10(%rbx),%rax
   1483e:	48 89 f1             	mov    %rsi,%rcx
   14841:	48 29 c1             	sub    %rax,%rcx
   14844:	4c 39 f1             	cmp    %r14,%rcx
   14847:	0f 83 b2 00 00 00    	jae    148ff <<std::io::buffered::BufWriter<W> as std::io::Write>::write_all+0xff>
   1484d:	4c 01 f0             	add    %r14,%rax
   14850:	0f 82 32 01 00 00    	jb     14988 <<std::io::buffered::BufWriter<W> as std::io::Write>::write_all+0x188>
   14856:	48 8d 0c 36          	lea    (%rsi,%rsi,1),%rcx
   1485a:	48 39 c1             	cmp    %rax,%rcx
   1485d:	48 0f 47 c1          	cmova  %rcx,%rax
   14861:	48 83 f8 08          	cmp    $0x8,%rax
   14865:	41 bc 08 00 00 00    	mov    $0x8,%r12d
   1486b:	4c 0f 47 e0          	cmova  %rax,%r12
   1486f:	48 8b 3b             	mov    (%rbx),%rdi
   14872:	48 85 ff             	test   %rdi,%rdi
   14875:	0f 84 c8 00 00 00    	je     14943 <<std::io::buffered::BufWriter<W> as std::io::Write>::write_all+0x143>
   1487b:	ba 01 00 00 00       	mov    $0x1,%edx
   14880:	4c 89 e1             	mov    %r12,%rcx
   14883:	ff 15 ef 16 03 00    	callq  *0x316ef(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
   14889:	48 89 c7             	mov    %rax,%rdi
   1488c:	48 85 c0             	test   %rax,%rax
   1488f:	0f 84 c8 00 00 00    	je     1495d <<std::io::buffered::BufWriter<W> as std::io::Write>::write_all+0x15d>
   14895:	48 89 3b             	mov    %rdi,(%rbx)
   14898:	4c 89 63 08          	mov    %r12,0x8(%rbx)
   1489c:	48 8b 43 10          	mov    0x10(%rbx),%rax
   148a0:	eb 60                	jmp    14902 <<std::io::buffered::BufWriter<W> as std::io::Write>::write_all+0x102>
   148a2:	c6 43 19 01          	movb   $0x1,0x19(%rbx)
   148a6:	80 7b 18 01          	cmpb   $0x1,0x18(%rbx)
   148aa:	0f 85 bd 00 00 00    	jne    1496d <<std::io::buffered::BufWriter<W> as std::io::Write>::write_all+0x16d>
   148b0:	4c 89 ff             	mov    %r15,%rdi
   148b3:	4c 89 f6             	mov    %r14,%rsi
   148b6:	e8 25 10 00 00       	callq  158e0 <std::io::Write::write_all>
   148bb:	48 89 d1             	mov    %rdx,%rcx
   148be:	48 89 d7             	mov    %rdx,%rdi
   148c1:	48 0f a4 c7 20       	shld   $0x20,%rax,%rdi
   148c6:	3c 03                	cmp    $0x3,%al
   148c8:	75 4f                	jne    14919 <<std::io::buffered::BufWriter<W> as std::io::Write>::write_all+0x119>
   148ca:	48 89 c6             	mov    %rax,%rsi
   148cd:	48 0f ac ce 08       	shrd   $0x8,%rcx,%rsi
   148d2:	48 89 ca             	mov    %rcx,%rdx
   148d5:	48 c1 ea 08          	shr    $0x8,%rdx
   148d9:	48 c1 e1 38          	shl    $0x38,%rcx
   148dd:	89 ff                	mov    %edi,%edi
   148df:	48 c1 e7 18          	shl    $0x18,%rdi
   148e3:	81 e6 ff ff ff 00    	and    $0xffffff,%esi
   148e9:	48 09 ce             	or     %rcx,%rsi
   148ec:	48 09 fe             	or     %rdi,%rsi
   148ef:	eb 33                	jmp    14924 <<std::io::buffered::BufWriter<W> as std::io::Write>::write_all+0x124>
   148f1:	48 89 c6             	mov    %rax,%rsi
   148f4:	48 0f ac d6 08       	shrd   $0x8,%rdx,%rsi
   148f9:	48 c1 ea 08          	shr    $0x8,%rdx
   148fd:	eb 29                	jmp    14928 <<std::io::buffered::BufWriter<W> as std::io::Write>::write_all+0x128>
   148ff:	48 8b 3b             	mov    (%rbx),%rdi
   14902:	48 01 c7             	add    %rax,%rdi
   14905:	4c 89 fe             	mov    %r15,%rsi
   14908:	4c 89 f2             	mov    %r14,%rdx
   1490b:	ff 15 e7 13 03 00    	callq  *0x313e7(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
   14911:	4c 01 73 10          	add    %r14,0x10(%rbx)
   14915:	b0 03                	mov    $0x3,%al
   14917:	eb 0f                	jmp    14928 <<std::io::buffered::BufWriter<W> as std::io::Write>::write_all+0x128>
   14919:	84 c0                	test   %al,%al
   1491b:	75 ad                	jne    148ca <<std::io::buffered::BufWriter<W> as std::io::Write>::write_all+0xca>
   1491d:	83 ff 09             	cmp    $0x9,%edi
   14920:	75 a8                	jne    148ca <<std::io::buffered::BufWriter<W> as std::io::Write>::write_all+0xca>
   14922:	b0 03                	mov    $0x3,%al
   14924:	c6 43 19 00          	movb   $0x0,0x19(%rbx)
   14928:	48 0f a4 f2 08       	shld   $0x8,%rsi,%rdx
   1492d:	48 c1 e6 08          	shl    $0x8,%rsi
   14931:	0f b6 c0             	movzbl %al,%eax
   14934:	48 09 f0             	or     %rsi,%rax
   14937:	48 83 c4 08          	add    $0x8,%rsp
   1493b:	5b                   	pop    %rbx
   1493c:	41 5c                	pop    %r12
   1493e:	41 5e                	pop    %r14
   14940:	41 5f                	pop    %r15
   14942:	c3                   	retq   
   14943:	be 01 00 00 00       	mov    $0x1,%esi
   14948:	4c 89 e7             	mov    %r12,%rdi
   1494b:	ff 15 2f 12 03 00    	callq  *0x3122f(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   14951:	48 89 c7             	mov    %rax,%rdi
   14954:	48 85 c0             	test   %rax,%rax
   14957:	0f 85 38 ff ff ff    	jne    14895 <<std::io::buffered::BufWriter<W> as std::io::Write>::write_all+0x95>
   1495d:	be 01 00 00 00       	mov    $0x1,%esi
   14962:	4c 89 e7             	mov    %r12,%rdi
   14965:	ff 15 b5 11 03 00    	callq  *0x311b5(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   1496b:	0f 0b                	ud2    
   1496d:	48 8d 3d 86 2c 02 00 	lea    0x22c86(%rip),%rdi        # 375fa <str.6+0x2da>
   14974:	48 8d 15 9d f2 02 00 	lea    0x2f29d(%rip),%rdx        # 43c18 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x6e0>
   1497b:	be 2b 00 00 00       	mov    $0x2b,%esi
   14980:	ff 15 52 15 03 00    	callq  *0x31552(%rip)        # 45ed8 <_GLOBAL_OFFSET_TABLE_+0x550>
   14986:	0f 0b                	ud2    
   14988:	ff 15 52 11 03 00    	callq  *0x31152(%rip)        # 45ae0 <_GLOBAL_OFFSET_TABLE_+0x158>
   1498e:	0f 0b                	ud2    

0000000000014990 <<std::io::error::Error as core::fmt::Debug>::fmt>:
   14990:	ff 25 12 14 03 00    	jmpq   *0x31412(%rip)        # 45da8 <_GLOBAL_OFFSET_TABLE_+0x420>
   14996:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1499d:	00 00 00 

00000000000149a0 <<std::io::error::Repr as core::fmt::Debug>::fmt>:
   149a0:	41 57                	push   %r15
   149a2:	41 56                	push   %r14
   149a4:	53                   	push   %rbx
   149a5:	48 83 ec 30          	sub    $0x30,%rsp
   149a9:	0f b6 07             	movzbl (%rdi),%eax
   149ac:	48 85 c0             	test   %rax,%rax
   149af:	74 4d                	je     149fe <<std::io::error::Repr as core::fmt::Debug>::fmt+0x5e>
   149b1:	83 f8 02             	cmp    $0x2,%eax
   149b4:	0f 84 29 01 00 00    	je     14ae3 <<std::io::error::Repr as core::fmt::Debug>::fmt+0x143>
   149ba:	8a 47 01             	mov    0x1(%rdi),%al
   149bd:	88 44 24 08          	mov    %al,0x8(%rsp)
   149c1:	48 8d 15 a8 2d 02 00 	lea    0x22da8(%rip),%rdx        # 37770 <str.6+0x450>
   149c8:	48 8d 5c 24 18       	lea    0x18(%rsp),%rbx
   149cd:	b9 04 00 00 00       	mov    $0x4,%ecx
   149d2:	48 89 df             	mov    %rbx,%rdi
   149d5:	ff 15 a5 14 03 00    	callq  *0x314a5(%rip)        # 45e80 <_GLOBAL_OFFSET_TABLE_+0x4f8>
   149db:	48 8d 15 4e f2 02 00 	lea    0x2f24e(%rip),%rdx        # 43c30 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x6f8>
   149e2:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   149e7:	48 89 df             	mov    %rbx,%rdi
   149ea:	ff 15 40 13 03 00    	callq  *0x31340(%rip)        # 45d30 <_GLOBAL_OFFSET_TABLE_+0x3a8>
   149f0:	48 89 c7             	mov    %rax,%rdi
   149f3:	ff 15 07 10 03 00    	callq  *0x31007(%rip)        # 45a00 <_GLOBAL_OFFSET_TABLE_+0x78>
   149f9:	e9 6a 01 00 00       	jmpq   14b68 <<std::io::error::Repr as core::fmt::Debug>::fmt+0x1c8>
   149fe:	8b 47 04             	mov    0x4(%rdi),%eax
   14a01:	89 44 24 04          	mov    %eax,0x4(%rsp)
   14a05:	48 8d 05 ed 32 02 00 	lea    0x232ed(%rip),%rax        # 37cf9 <str.6+0x9d9>
   14a0c:	ba 02 00 00 00       	mov    $0x2,%edx
   14a11:	48 89 f7             	mov    %rsi,%rdi
   14a14:	48 89 c6             	mov    %rax,%rsi
   14a17:	ff 15 1b 10 03 00    	callq  *0x3101b(%rip)        # 45a38 <_GLOBAL_OFFSET_TABLE_+0xb0>
   14a1d:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   14a22:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   14a27:	48 8d 35 46 2d 02 00 	lea    0x22d46(%rip),%rsi        # 37774 <str.6+0x454>
   14a2e:	4c 8d 05 1b f2 02 00 	lea    0x2f21b(%rip),%r8        # 43c50 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x718>
   14a35:	4c 8d 3d b4 b2 01 00 	lea    0x1b2b4(%rip),%r15        # 2fcf0 <core::fmt::builders::DebugStruct::field>
   14a3c:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   14a41:	48 8d 4c 24 04       	lea    0x4(%rsp),%rcx
   14a46:	ba 04 00 00 00       	mov    $0x4,%edx
   14a4b:	41 ff d7             	callq  *%r15
   14a4e:	48 89 c3             	mov    %rax,%rbx
   14a51:	8b 7c 24 04          	mov    0x4(%rsp),%edi
   14a55:	e8 d6 78 00 00       	callq  1c330 <std::sys::unix::decode_error_kind>
   14a5a:	88 44 24 03          	mov    %al,0x3(%rsp)
   14a5e:	48 8d 35 13 2d 02 00 	lea    0x22d13(%rip),%rsi        # 37778 <str.6+0x458>
   14a65:	4c 8d 05 c4 f1 02 00 	lea    0x2f1c4(%rip),%r8        # 43c30 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x6f8>
   14a6c:	48 8d 4c 24 03       	lea    0x3(%rsp),%rcx
   14a71:	ba 04 00 00 00       	mov    $0x4,%edx
   14a76:	48 89 df             	mov    %rbx,%rdi
   14a79:	41 ff d7             	callq  *%r15
   14a7c:	48 89 c3             	mov    %rax,%rbx
   14a7f:	8b 74 24 04          	mov    0x4(%rsp),%esi
   14a83:	4c 8d 74 24 18       	lea    0x18(%rsp),%r14
   14a88:	4c 89 f7             	mov    %r14,%rdi
   14a8b:	e8 e0 71 00 00       	callq  1bc70 <std::sys::unix::os::error_string>
   14a90:	48 8d 35 64 32 02 00 	lea    0x23264(%rip),%rsi        # 37cfb <str.6+0x9db>
   14a97:	4c 8d 05 d2 f1 02 00 	lea    0x2f1d2(%rip),%r8        # 43c70 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x738>
   14a9e:	ba 07 00 00 00       	mov    $0x7,%edx
   14aa3:	48 89 df             	mov    %rbx,%rdi
   14aa6:	4c 89 f1             	mov    %r14,%rcx
   14aa9:	41 ff d7             	callq  *%r15
   14aac:	48 89 c7             	mov    %rax,%rdi
   14aaf:	ff 15 1b 11 03 00    	callq  *0x3111b(%rip)        # 45bd0 <_GLOBAL_OFFSET_TABLE_+0x248>
   14ab5:	89 c3                	mov    %eax,%ebx
   14ab7:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   14abc:	48 85 ff             	test   %rdi,%rdi
   14abf:	0f 84 a5 00 00 00    	je     14b6a <<std::io::error::Repr as core::fmt::Debug>::fmt+0x1ca>
   14ac5:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   14aca:	48 85 f6             	test   %rsi,%rsi
   14acd:	0f 84 97 00 00 00    	je     14b6a <<std::io::error::Repr as core::fmt::Debug>::fmt+0x1ca>
   14ad3:	ba 01 00 00 00       	mov    $0x1,%edx
   14ad8:	ff 15 1a 11 03 00    	callq  *0x3111a(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   14ade:	e9 87 00 00 00       	jmpq   14b6a <<std::io::error::Repr as core::fmt::Debug>::fmt+0x1ca>
   14ae3:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
   14ae7:	4c 8d 73 10          	lea    0x10(%rbx),%r14
   14aeb:	48 8d 05 52 37 02 00 	lea    0x23752(%rip),%rax        # 38244 <str.6+0xf24>
   14af2:	ba 06 00 00 00       	mov    $0x6,%edx
   14af7:	48 89 f7             	mov    %rsi,%rdi
   14afa:	48 89 c6             	mov    %rax,%rsi
   14afd:	ff 15 35 0f 03 00    	callq  *0x30f35(%rip)        # 45a38 <_GLOBAL_OFFSET_TABLE_+0xb0>
   14b03:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   14b08:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   14b0d:	4c 89 74 24 08       	mov    %r14,0x8(%rsp)
   14b12:	48 8d 35 5f 2c 02 00 	lea    0x22c5f(%rip),%rsi        # 37778 <str.6+0x458>
   14b19:	4c 8d 05 d0 f9 02 00 	lea    0x2f9d0(%rip),%r8        # 444f0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xfb8>
   14b20:	4c 8d 3d c9 b1 01 00 	lea    0x1b1c9(%rip),%r15        # 2fcf0 <core::fmt::builders::DebugStruct::field>
   14b27:	4c 8d 74 24 18       	lea    0x18(%rsp),%r14
   14b2c:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
   14b31:	ba 04 00 00 00       	mov    $0x4,%edx
   14b36:	4c 89 f7             	mov    %r14,%rdi
   14b39:	41 ff d7             	callq  *%r15
   14b3c:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   14b41:	48 8d 35 f7 36 02 00 	lea    0x236f7(%rip),%rsi        # 3823f <str.6+0xf1f>
   14b48:	4c 8d 05 c1 f9 02 00 	lea    0x2f9c1(%rip),%r8        # 44510 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xfd8>
   14b4f:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
   14b54:	ba 05 00 00 00       	mov    $0x5,%edx
   14b59:	4c 89 f7             	mov    %r14,%rdi
   14b5c:	41 ff d7             	callq  *%r15
   14b5f:	4c 89 f7             	mov    %r14,%rdi
   14b62:	ff 15 68 10 03 00    	callq  *0x31068(%rip)        # 45bd0 <_GLOBAL_OFFSET_TABLE_+0x248>
   14b68:	89 c3                	mov    %eax,%ebx
   14b6a:	89 d8                	mov    %ebx,%eax
   14b6c:	48 83 c4 30          	add    $0x30,%rsp
   14b70:	5b                   	pop    %rbx
   14b71:	41 5e                	pop    %r14
   14b73:	41 5f                	pop    %r15
   14b75:	c3                   	retq   
   14b76:	48 89 c3             	mov    %rax,%rbx
   14b79:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   14b7e:	e8 ad 1c ff ff       	callq  6830 <core::ptr::drop_in_place>
   14b83:	48 89 df             	mov    %rbx,%rdi
   14b86:	e8 c5 04 ff ff       	callq  5050 <_Unwind_Resume@plt>
   14b8b:	0f 0b                	ud2    
   14b8d:	0f 1f 00             	nopl   (%rax)

0000000000014b90 <<std::io::error::Error as core::fmt::Display>::fmt>:
   14b90:	41 56                	push   %r14
   14b92:	53                   	push   %rbx
   14b93:	48 83 ec 78          	sub    $0x78,%rsp
   14b97:	49 89 f6             	mov    %rsi,%r14
   14b9a:	0f b6 07             	movzbl (%rdi),%eax
   14b9d:	48 85 c0             	test   %rax,%rax
   14ba0:	74 51                	je     14bf3 <<std::io::error::Error as core::fmt::Display>::fmt+0x63>
   14ba2:	83 f8 02             	cmp    $0x2,%eax
   14ba5:	74 31                	je     14bd8 <<std::io::error::Error as core::fmt::Display>::fmt+0x48>
   14ba7:	0f b6 57 01          	movzbl 0x1(%rdi),%edx
   14bab:	48 8d 05 3e 30 02 00 	lea    0x2303e(%rip),%rax        # 37bf0 <str.6+0x8d0>
   14bb2:	b9 16 00 00 00       	mov    $0x16,%ecx
   14bb7:	48 8d 35 06 22 02 00 	lea    0x22206(%rip),%rsi        # 36dc4 <_fini+0x14a0>
   14bbe:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
   14bc2:	48 01 f2             	add    %rsi,%rdx
   14bc5:	ff e2                	jmpq   *%rdx
   14bc7:	48 8d 05 22 17 02 00 	lea    0x21722(%rip),%rax        # 362f0 <_fini+0x9cc>
   14bce:	b9 10 00 00 00       	mov    $0x10,%ecx
   14bd3:	e9 ae 01 00 00       	jmpq   14d86 <<std::io::error::Error as core::fmt::Display>::fmt+0x1f6>
   14bd8:	48 8b 47 08          	mov    0x8(%rdi),%rax
   14bdc:	48 8b 38             	mov    (%rax),%rdi
   14bdf:	48 8b 40 08          	mov    0x8(%rax),%rax
   14be3:	48 8b 40 40          	mov    0x40(%rax),%rax
   14be7:	4c 89 f6             	mov    %r14,%rsi
   14bea:	48 83 c4 78          	add    $0x78,%rsp
   14bee:	5b                   	pop    %rbx
   14bef:	41 5e                	pop    %r14
   14bf1:	ff e0                	jmpq   *%rax
   14bf3:	8b 77 04             	mov    0x4(%rdi),%esi
   14bf6:	89 74 24 0c          	mov    %esi,0xc(%rsp)
   14bfa:	48 8d 5c 24 10       	lea    0x10(%rsp),%rbx
   14bff:	48 89 df             	mov    %rbx,%rdi
   14c02:	e8 69 70 00 00       	callq  1bc70 <std::sys::unix::os::error_string>
   14c07:	48 89 5c 24 28       	mov    %rbx,0x28(%rsp)
   14c0c:	48 8d 05 fd 81 ff ff 	lea    -0x7e03(%rip),%rax        # ce10 <<alloc::string::String as core::fmt::Display>::fmt>
   14c13:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   14c18:	48 8d 44 24 0c       	lea    0xc(%rsp),%rax
   14c1d:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   14c22:	48 8d 05 d7 fe 01 00 	lea    0x1fed7(%rip),%rax        # 34b00 <core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt>
   14c29:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   14c2e:	48 8d 05 5b f0 02 00 	lea    0x2f05b(%rip),%rax        # 43c90 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x758>
   14c35:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   14c3a:	48 c7 44 24 50 03 00 	movq   $0x3,0x50(%rsp)
   14c41:	00 00 
   14c43:	48 c7 44 24 58 00 00 	movq   $0x0,0x58(%rsp)
   14c4a:	00 00 
   14c4c:	48 8d 44 24 28       	lea    0x28(%rsp),%rax
   14c51:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   14c56:	48 c7 44 24 70 02 00 	movq   $0x2,0x70(%rsp)
   14c5d:	00 00 
   14c5f:	48 8d 74 24 48       	lea    0x48(%rsp),%rsi
   14c64:	4c 89 f7             	mov    %r14,%rdi
   14c67:	ff 15 1b 12 03 00    	callq  *0x3121b(%rip)        # 45e88 <_GLOBAL_OFFSET_TABLE_+0x500>
   14c6d:	89 c3                	mov    %eax,%ebx
   14c6f:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   14c74:	48 85 ff             	test   %rdi,%rdi
   14c77:	0f 84 6a 01 00 00    	je     14de7 <<std::io::error::Error as core::fmt::Display>::fmt+0x257>
   14c7d:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   14c82:	48 85 f6             	test   %rsi,%rsi
   14c85:	0f 84 5c 01 00 00    	je     14de7 <<std::io::error::Error as core::fmt::Display>::fmt+0x257>
   14c8b:	ba 01 00 00 00       	mov    $0x1,%edx
   14c90:	ff 15 62 0f 03 00    	callq  *0x30f62(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   14c96:	e9 4c 01 00 00       	jmpq   14de7 <<std::io::error::Error as core::fmt::Display>::fmt+0x257>
   14c9b:	48 8d 05 46 30 02 00 	lea    0x23046(%rip),%rax        # 37ce8 <str.6+0x9c8>
   14ca2:	b9 11 00 00 00       	mov    $0x11,%ecx
   14ca7:	e9 da 00 00 00       	jmpq   14d86 <<std::io::error::Error as core::fmt::Display>::fmt+0x1f6>
   14cac:	48 8d 05 23 30 02 00 	lea    0x23023(%rip),%rax        # 37cd6 <str.6+0x9b6>
   14cb3:	b9 12 00 00 00       	mov    $0x12,%ecx
   14cb8:	e9 c9 00 00 00       	jmpq   14d86 <<std::io::error::Error as core::fmt::Display>::fmt+0x1f6>
   14cbd:	48 8d 05 1c 16 02 00 	lea    0x2161c(%rip),%rax        # 362e0 <_fini+0x9bc>
   14cc4:	b9 10 00 00 00       	mov    $0x10,%ecx
   14cc9:	e9 b8 00 00 00       	jmpq   14d86 <<std::io::error::Error as core::fmt::Display>::fmt+0x1f6>
   14cce:	48 8d 05 ef 2f 02 00 	lea    0x22fef(%rip),%rax        # 37cc4 <str.6+0x9a4>
   14cd5:	b9 12 00 00 00       	mov    $0x12,%ecx
   14cda:	e9 a7 00 00 00       	jmpq   14d86 <<std::io::error::Error as core::fmt::Display>::fmt+0x1f6>
   14cdf:	48 8d 05 d1 2f 02 00 	lea    0x22fd1(%rip),%rax        # 37cb7 <str.6+0x997>
   14ce6:	b9 0d 00 00 00       	mov    $0xd,%ecx
   14ceb:	e9 96 00 00 00       	jmpq   14d86 <<std::io::error::Error as core::fmt::Display>::fmt+0x1f6>
   14cf0:	48 8d 05 b2 2f 02 00 	lea    0x22fb2(%rip),%rax        # 37ca9 <str.6+0x989>
   14cf7:	e9 85 00 00 00       	jmpq   14d81 <<std::io::error::Error as core::fmt::Display>::fmt+0x1f1>
   14cfc:	48 8d 05 91 2f 02 00 	lea    0x22f91(%rip),%rax        # 37c94 <str.6+0x974>
   14d03:	b9 15 00 00 00       	mov    $0x15,%ecx
   14d08:	eb 7c                	jmp    14d86 <<std::io::error::Error as core::fmt::Display>::fmt+0x1f6>
   14d0a:	48 8d 05 78 2f 02 00 	lea    0x22f78(%rip),%rax        # 37c89 <str.6+0x969>
   14d11:	b9 0b 00 00 00       	mov    $0xb,%ecx
   14d16:	eb 6e                	jmp    14d86 <<std::io::error::Error as core::fmt::Display>::fmt+0x1f6>
   14d18:	48 8d 05 55 2f 02 00 	lea    0x22f55(%rip),%rax        # 37c74 <str.6+0x954>
   14d1f:	b9 15 00 00 00       	mov    $0x15,%ecx
   14d24:	eb 60                	jmp    14d86 <<std::io::error::Error as core::fmt::Display>::fmt+0x1f6>
   14d26:	48 8d 05 32 2f 02 00 	lea    0x22f32(%rip),%rax        # 37c5f <str.6+0x93f>
   14d2d:	b9 15 00 00 00       	mov    $0x15,%ecx
   14d32:	eb 52                	jmp    14d86 <<std::io::error::Error as core::fmt::Display>::fmt+0x1f6>
   14d34:	48 8d 05 0d 2f 02 00 	lea    0x22f0d(%rip),%rax        # 37c48 <str.6+0x928>
   14d3b:	b9 17 00 00 00       	mov    $0x17,%ecx
   14d40:	eb 44                	jmp    14d86 <<std::io::error::Error as core::fmt::Display>::fmt+0x1f6>
   14d42:	48 8d 05 f3 2e 02 00 	lea    0x22ef3(%rip),%rax        # 37c3c <str.6+0x91c>
   14d49:	b9 0c 00 00 00       	mov    $0xc,%ecx
   14d4e:	eb 36                	jmp    14d86 <<std::io::error::Error as core::fmt::Display>::fmt+0x1f6>
   14d50:	48 8d 05 dc 2e 02 00 	lea    0x22edc(%rip),%rax        # 37c33 <str.6+0x913>
   14d57:	b9 09 00 00 00       	mov    $0x9,%ecx
   14d5c:	eb 28                	jmp    14d86 <<std::io::error::Error as core::fmt::Display>::fmt+0x1f6>
   14d5e:	48 8d 05 c4 2e 02 00 	lea    0x22ec4(%rip),%rax        # 37c29 <str.6+0x909>
   14d65:	b9 0a 00 00 00       	mov    $0xa,%ecx
   14d6a:	eb 1a                	jmp    14d86 <<std::io::error::Error as core::fmt::Display>::fmt+0x1f6>
   14d6c:	48 8d 05 a1 2e 02 00 	lea    0x22ea1(%rip),%rax        # 37c14 <str.6+0x8f4>
   14d73:	b9 15 00 00 00       	mov    $0x15,%ecx
   14d78:	eb 0c                	jmp    14d86 <<std::io::error::Error as core::fmt::Display>::fmt+0x1f6>
   14d7a:	48 8d 05 85 2e 02 00 	lea    0x22e85(%rip),%rax        # 37c06 <str.6+0x8e6>
   14d81:	b9 0e 00 00 00       	mov    $0xe,%ecx
   14d86:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   14d8b:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   14d90:	48 8d 44 24 28       	lea    0x28(%rsp),%rax
   14d95:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   14d9a:	48 8d 05 af 0b ff ff 	lea    -0xf451(%rip),%rax        # 5950 <<&T as core::fmt::Display>::fmt>
   14da1:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   14da6:	48 8d 05 d3 e7 02 00 	lea    0x2e7d3(%rip),%rax        # 43580 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x48>
   14dad:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   14db2:	48 c7 44 24 50 01 00 	movq   $0x1,0x50(%rsp)
   14db9:	00 00 
   14dbb:	48 c7 44 24 58 00 00 	movq   $0x0,0x58(%rsp)
   14dc2:	00 00 
   14dc4:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   14dc9:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   14dce:	48 c7 44 24 70 01 00 	movq   $0x1,0x70(%rsp)
   14dd5:	00 00 
   14dd7:	48 8d 74 24 48       	lea    0x48(%rsp),%rsi
   14ddc:	4c 89 f7             	mov    %r14,%rdi
   14ddf:	ff 15 a3 10 03 00    	callq  *0x310a3(%rip)        # 45e88 <_GLOBAL_OFFSET_TABLE_+0x500>
   14de5:	89 c3                	mov    %eax,%ebx
   14de7:	89 d8                	mov    %ebx,%eax
   14de9:	48 83 c4 78          	add    $0x78,%rsp
   14ded:	5b                   	pop    %rbx
   14dee:	41 5e                	pop    %r14
   14df0:	c3                   	retq   
   14df1:	48 89 c3             	mov    %rax,%rbx
   14df4:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   14df9:	e8 32 1a ff ff       	callq  6830 <core::ptr::drop_in_place>
   14dfe:	48 89 df             	mov    %rbx,%rdi
   14e01:	e8 4a 02 ff ff       	callq  5050 <_Unwind_Resume@plt>
   14e06:	0f 0b                	ud2    
   14e08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   14e0f:	00 

0000000000014e10 <std::io::impls::<impl std::io::Write for alloc::boxed::Box<W>>::write>:
   14e10:	53                   	push   %rbx
   14e11:	48 89 fb             	mov    %rdi,%rbx
   14e14:	48 8b 06             	mov    (%rsi),%rax
   14e17:	4c 8b 46 08          	mov    0x8(%rsi),%r8
   14e1b:	48 89 c6             	mov    %rax,%rsi
   14e1e:	41 ff 50 18          	callq  *0x18(%r8)
   14e22:	48 89 d8             	mov    %rbx,%rax
   14e25:	5b                   	pop    %rbx
   14e26:	c3                   	retq   
   14e27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   14e2e:	00 00 

0000000000014e30 <std::io::impls::<impl std::io::Write for alloc::boxed::Box<W>>::write_vectored>:
   14e30:	53                   	push   %rbx
   14e31:	48 89 fb             	mov    %rdi,%rbx
   14e34:	48 8b 06             	mov    (%rsi),%rax
   14e37:	4c 8b 46 08          	mov    0x8(%rsi),%r8
   14e3b:	48 89 c6             	mov    %rax,%rsi
   14e3e:	41 ff 50 20          	callq  *0x20(%r8)
   14e42:	48 89 d8             	mov    %rbx,%rax
   14e45:	5b                   	pop    %rbx
   14e46:	c3                   	retq   
   14e47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   14e4e:	00 00 

0000000000014e50 <std::io::impls::<impl std::io::Write for alloc::boxed::Box<W>>::is_write_vectored>:
   14e50:	48 8b 07             	mov    (%rdi),%rax
   14e53:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
   14e57:	48 89 c7             	mov    %rax,%rdi
   14e5a:	ff 61 28             	jmpq   *0x28(%rcx)
   14e5d:	0f 1f 00             	nopl   (%rax)

0000000000014e60 <std::io::impls::<impl std::io::Write for alloc::boxed::Box<W>>::flush>:
   14e60:	48 8b 07             	mov    (%rdi),%rax
   14e63:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
   14e67:	48 89 c7             	mov    %rax,%rdi
   14e6a:	ff 61 30             	jmpq   *0x30(%rcx)
   14e6d:	0f 1f 00             	nopl   (%rax)

0000000000014e70 <std::io::impls::<impl std::io::Write for alloc::boxed::Box<W>>::write_all>:
   14e70:	48 8b 07             	mov    (%rdi),%rax
   14e73:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
   14e77:	48 8b 49 38          	mov    0x38(%rcx),%rcx
   14e7b:	48 89 c7             	mov    %rax,%rdi
   14e7e:	ff e1                	jmpq   *%rcx

0000000000014e80 <std::io::impls::<impl std::io::Write for alloc::boxed::Box<W>>::write_fmt>:
   14e80:	48 83 ec 38          	sub    $0x38,%rsp
   14e84:	48 8b 07             	mov    (%rdi),%rax
   14e87:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
   14e8b:	0f 10 06             	movups (%rsi),%xmm0
   14e8e:	0f 10 4e 10          	movups 0x10(%rsi),%xmm1
   14e92:	0f 10 56 20          	movups 0x20(%rsi),%xmm2
   14e96:	0f 29 54 24 20       	movaps %xmm2,0x20(%rsp)
   14e9b:	0f 29 4c 24 10       	movaps %xmm1,0x10(%rsp)
   14ea0:	0f 29 04 24          	movaps %xmm0,(%rsp)
   14ea4:	48 89 e6             	mov    %rsp,%rsi
   14ea7:	48 89 c7             	mov    %rax,%rdi
   14eaa:	ff 51 48             	callq  *0x48(%rcx)
   14ead:	48 83 c4 38          	add    $0x38,%rsp
   14eb1:	c3                   	retq   
   14eb2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   14eb9:	00 00 00 
   14ebc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000014ec0 <<&std::io::stdio::Stdout as std::io::Write>::write_fmt>:
   14ec0:	41 56                	push   %r14
   14ec2:	53                   	push   %rbx
   14ec3:	48 83 ec 58          	sub    $0x58,%rsp
   14ec7:	48 89 f3             	mov    %rsi,%rbx
   14eca:	48 8b 07             	mov    (%rdi),%rax
   14ecd:	4c 8b 30             	mov    (%rax),%r14
   14ed0:	4c 89 f7             	mov    %r14,%rdi
   14ed3:	ff 15 e7 10 03 00    	callq  *0x310e7(%rip)        # 45fc0 <pthread_mutex_lock@GLIBC_2.2.5>
   14ed9:	4c 89 34 24          	mov    %r14,(%rsp)
   14edd:	48 89 e0             	mov    %rsp,%rax
   14ee0:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   14ee5:	c6 44 24 10 03       	movb   $0x3,0x10(%rsp)
   14eea:	0f 10 03             	movups (%rbx),%xmm0
   14eed:	0f 10 4b 10          	movups 0x10(%rbx),%xmm1
   14ef1:	0f 10 53 20          	movups 0x20(%rbx),%xmm2
   14ef5:	0f 29 54 24 40       	movaps %xmm2,0x40(%rsp)
   14efa:	0f 29 4c 24 30       	movaps %xmm1,0x30(%rsp)
   14eff:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   14f04:	48 8d 35 95 ee 02 00 	lea    0x2ee95(%rip),%rsi        # 43da0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x868>
   14f0b:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   14f10:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
   14f15:	ff 15 dd 0e 03 00    	callq  *0x30edd(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x470>
   14f1b:	8a 54 24 10          	mov    0x10(%rsp),%dl
   14f1f:	84 c0                	test   %al,%al
   14f21:	0f 84 af 00 00 00    	je     14fd6 <<&std::io::stdio::Stdout as std::io::Write>::write_fmt+0x116>
   14f27:	80 fa 03             	cmp    $0x3,%dl
   14f2a:	0f 85 f1 00 00 00    	jne    15021 <<&std::io::stdio::Stdout as std::io::Write>::write_fmt+0x161>
   14f30:	bf 0f 00 00 00       	mov    $0xf,%edi
   14f35:	be 01 00 00 00       	mov    $0x1,%esi
   14f3a:	ff 15 40 0c 03 00    	callq  *0x30c40(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   14f40:	48 85 c0             	test   %rax,%rax
   14f43:	0f 84 33 01 00 00    	je     1507c <<&std::io::stdio::Stdout as std::io::Write>::write_fmt+0x1bc>
   14f49:	49 89 c6             	mov    %rax,%r14
   14f4c:	48 8b 05 2d 2e 02 00 	mov    0x22e2d(%rip),%rax        # 37d80 <str.6+0xa60>
   14f53:	49 89 46 07          	mov    %rax,0x7(%r14)
   14f57:	48 8b 05 1b 2e 02 00 	mov    0x22e1b(%rip),%rax        # 37d79 <str.6+0xa59>
   14f5e:	49 89 06             	mov    %rax,(%r14)
   14f61:	bf 18 00 00 00       	mov    $0x18,%edi
   14f66:	be 08 00 00 00       	mov    $0x8,%esi
   14f6b:	ff 15 0f 0c 03 00    	callq  *0x30c0f(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   14f71:	48 85 c0             	test   %rax,%rax
   14f74:	0f 84 f0 00 00 00    	je     1506a <<&std::io::stdio::Stdout as std::io::Write>::write_fmt+0x1aa>
   14f7a:	48 89 c3             	mov    %rax,%rbx
   14f7d:	4c 89 30             	mov    %r14,(%rax)
   14f80:	0f 28 05 09 12 02 00 	movaps 0x21209(%rip),%xmm0        # 36190 <_fini+0x86c>
   14f87:	0f 11 40 08          	movups %xmm0,0x8(%rax)
   14f8b:	bf 18 00 00 00       	mov    $0x18,%edi
   14f90:	be 08 00 00 00       	mov    $0x8,%esi
   14f95:	ff 15 e5 0b 03 00    	callq  *0x30be5(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   14f9b:	48 85 c0             	test   %rax,%rax
   14f9e:	0f 84 c6 00 00 00    	je     1506a <<&std::io::stdio::Stdout as std::io::Write>::write_fmt+0x1aa>
   14fa4:	48 89 c1             	mov    %rax,%rcx
   14fa7:	48 89 18             	mov    %rbx,(%rax)
   14faa:	48 8d 05 cf eb 02 00 	lea    0x2ebcf(%rip),%rax        # 43b80 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x648>
   14fb1:	48 89 41 08          	mov    %rax,0x8(%rcx)
   14fb5:	c6 41 10 10          	movb   $0x10,0x10(%rcx)
   14fb9:	8b 44 24 20          	mov    0x20(%rsp),%eax
   14fbd:	8b 54 24 23          	mov    0x23(%rsp),%edx
   14fc1:	89 41 11             	mov    %eax,0x11(%rcx)
   14fc4:	89 51 14             	mov    %edx,0x14(%rcx)
   14fc7:	49 89 ce             	mov    %rcx,%r14
   14fca:	49 c1 ee 08          	shr    $0x8,%r14
   14fce:	48 c1 e1 38          	shl    $0x38,%rcx
   14fd2:	b3 02                	mov    $0x2,%bl
   14fd4:	eb 6d                	jmp    15043 <<&std::io::stdio::Stdout as std::io::Write>::write_fmt+0x183>
   14fd6:	b3 03                	mov    $0x3,%bl
   14fd8:	80 fa 03             	cmp    $0x3,%dl
   14fdb:	77 05                	ja     14fe2 <<&std::io::stdio::Stdout as std::io::Write>::write_fmt+0x122>
   14fdd:	80 fa 02             	cmp    $0x2,%dl
   14fe0:	75 3d                	jne    1501f <<&std::io::stdio::Stdout as std::io::Write>::write_fmt+0x15f>
   14fe2:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   14fe7:	49 8b 3e             	mov    (%r14),%rdi
   14fea:	49 8b 46 08          	mov    0x8(%r14),%rax
   14fee:	ff 10                	callq  *(%rax)
   14ff0:	49 8b 46 08          	mov    0x8(%r14),%rax
   14ff4:	48 8b 70 08          	mov    0x8(%rax),%rsi
   14ff8:	48 85 f6             	test   %rsi,%rsi
   14ffb:	74 0d                	je     1500a <<&std::io::stdio::Stdout as std::io::Write>::write_fmt+0x14a>
   14ffd:	49 8b 3e             	mov    (%r14),%rdi
   15000:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15004:	ff 15 ee 0b 03 00    	callq  *0x30bee(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   1500a:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   1500f:	be 18 00 00 00       	mov    $0x18,%esi
   15014:	ba 08 00 00 00       	mov    $0x8,%edx
   15019:	ff 15 d9 0b 03 00    	callq  *0x30bd9(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   1501f:	eb 22                	jmp    15043 <<&std::io::stdio::Stdout as std::io::Write>::write_fmt+0x183>
   15021:	0f b6 44 24 1f       	movzbl 0x1f(%rsp),%eax
   15026:	c1 e0 10             	shl    $0x10,%eax
   15029:	0f b7 4c 24 1d       	movzwl 0x1d(%rsp),%ecx
   1502e:	09 c1                	or     %eax,%ecx
   15030:	48 c1 e1 20          	shl    $0x20,%rcx
   15034:	44 8b 74 24 19       	mov    0x19(%rsp),%r14d
   15039:	49 09 ce             	or     %rcx,%r14
   1503c:	48 8b 4c 24 11       	mov    0x11(%rsp),%rcx
   15041:	89 d3                	mov    %edx,%ebx
   15043:	49 0f a4 ce 08       	shld   $0x8,%rcx,%r14
   15048:	48 c1 e1 08          	shl    $0x8,%rcx
   1504c:	0f b6 db             	movzbl %bl,%ebx
   1504f:	48 09 cb             	or     %rcx,%rbx
   15052:	48 8b 3c 24          	mov    (%rsp),%rdi
   15056:	ff 15 0c 0d 03 00    	callq  *0x30d0c(%rip)        # 45d68 <pthread_mutex_unlock@GLIBC_2.2.5>
   1505c:	48 89 d8             	mov    %rbx,%rax
   1505f:	4c 89 f2             	mov    %r14,%rdx
   15062:	48 83 c4 58          	add    $0x58,%rsp
   15066:	5b                   	pop    %rbx
   15067:	41 5e                	pop    %r14
   15069:	c3                   	retq   
   1506a:	bf 18 00 00 00       	mov    $0x18,%edi
   1506f:	be 08 00 00 00       	mov    $0x8,%esi
   15074:	ff 15 a6 0a 03 00    	callq  *0x30aa6(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   1507a:	0f 0b                	ud2    
   1507c:	bf 0f 00 00 00       	mov    $0xf,%edi
   15081:	be 01 00 00 00       	mov    $0x1,%esi
   15086:	ff 15 94 0a 03 00    	callq  *0x30a94(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   1508c:	0f 0b                	ud2    
   1508e:	48 89 c3             	mov    %rax,%rbx
   15091:	49 8b 3e             	mov    (%r14),%rdi
   15094:	49 8b 76 08          	mov    0x8(%r14),%rsi
   15098:	e8 33 49 ff ff       	callq  99d0 <alloc::alloc::box_free>
   1509d:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   150a2:	e8 49 49 ff ff       	callq  99f0 <alloc::alloc::box_free>
   150a7:	eb 0d                	jmp    150b6 <<&std::io::stdio::Stdout as std::io::Write>::write_fmt+0x1f6>
   150a9:	48 89 c3             	mov    %rax,%rbx
   150ac:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   150b1:	e8 da 11 ff ff       	callq  6290 <core::ptr::drop_in_place>
   150b6:	48 89 e7             	mov    %rsp,%rdi
   150b9:	e8 a2 1b ff ff       	callq  6c60 <core::ptr::drop_in_place>
   150be:	48 89 df             	mov    %rbx,%rdi
   150c1:	e8 8a ff fe ff       	callq  5050 <_Unwind_Resume@plt>
   150c6:	0f 0b                	ud2    
   150c8:	48 89 c3             	mov    %rax,%rbx
   150cb:	eb e9                	jmp    150b6 <<&std::io::stdio::Stdout as std::io::Write>::write_fmt+0x1f6>
   150cd:	0f 1f 00             	nopl   (%rax)

00000000000150d0 <<std::io::stdio::StdoutLock as std::io::Write>::write_all>:
   150d0:	55                   	push   %rbp
   150d1:	41 57                	push   %r15
   150d3:	41 56                	push   %r14
   150d5:	41 55                	push   %r13
   150d7:	41 54                	push   %r12
   150d9:	53                   	push   %rbx
   150da:	50                   	push   %rax
   150db:	48 8b 2f             	mov    (%rdi),%rbp
   150de:	48 83 7d 28 00       	cmpq   $0x0,0x28(%rbp)
   150e3:	0f 85 25 01 00 00    	jne    1520e <<std::io::stdio::StdoutLock as std::io::Write>::write_all+0x13e>
   150e9:	49 89 d5             	mov    %rdx,%r13
   150ec:	49 89 f7             	mov    %rsi,%r15
   150ef:	4c 8d 75 28          	lea    0x28(%rbp),%r14
   150f3:	48 c7 45 28 ff ff ff 	movq   $0xffffffffffffffff,0x28(%rbp)
   150fa:	ff 
   150fb:	4c 8d 65 30          	lea    0x30(%rbp),%r12
   150ff:	48 85 d2             	test   %rdx,%rdx
   15102:	74 50                	je     15154 <<std::io::stdio::StdoutLock as std::io::Write>::write_all+0x84>
   15104:	4c 89 ff             	mov    %r15,%rdi
   15107:	be 0a 00 00 00       	mov    $0xa,%esi
   1510c:	4c 89 ea             	mov    %r13,%rdx
   1510f:	ff 15 83 0d 03 00    	callq  *0x30d83(%rip)        # 45e98 <memrchr@GLIBC_2.2.5>
   15115:	48 85 c0             	test   %rax,%rax
   15118:	74 3a                	je     15154 <<std::io::stdio::StdoutLock as std::io::Write>::write_all+0x84>
   1511a:	48 89 c3             	mov    %rax,%rbx
   1511d:	4c 29 fb             	sub    %r15,%rbx
   15120:	48 83 c3 01          	add    $0x1,%rbx
   15124:	4c 39 eb             	cmp    %r13,%rbx
   15127:	0f 87 06 01 00 00    	ja     15233 <<std::io::stdio::StdoutLock as std::io::Write>::write_all+0x163>
   1512d:	48 83 7d 40 00       	cmpq   $0x0,0x40(%rbp)
   15132:	74 50                	je     15184 <<std::io::stdio::StdoutLock as std::io::Write>::write_all+0xb4>
   15134:	4c 89 e7             	mov    %r12,%rdi
   15137:	4c 89 fe             	mov    %r15,%rsi
   1513a:	48 89 da             	mov    %rbx,%rdx
   1513d:	e8 be f6 ff ff       	callq  14800 <<std::io::buffered::BufWriter<W> as std::io::Write>::write_all>
   15142:	3c 03                	cmp    $0x3,%al
   15144:	75 7f                	jne    151c5 <<std::io::stdio::StdoutLock as std::io::Write>::write_all+0xf5>
   15146:	4c 89 e7             	mov    %r12,%rdi
   15149:	e8 f2 f2 ff ff       	callq  14440 <std::io::buffered::BufWriter<W>::flush_buf>
   1514e:	3c 03                	cmp    $0x3,%al
   15150:	74 5f                	je     151b1 <<std::io::stdio::StdoutLock as std::io::Write>::write_all+0xe1>
   15152:	eb 71                	jmp    151c5 <<std::io::stdio::StdoutLock as std::io::Write>::write_all+0xf5>
   15154:	48 8b 45 40          	mov    0x40(%rbp),%rax
   15158:	48 85 c0             	test   %rax,%rax
   1515b:	74 17                	je     15174 <<std::io::stdio::StdoutLock as std::io::Write>::write_all+0xa4>
   1515d:	49 8b 0c 24          	mov    (%r12),%rcx
   15161:	80 7c 08 ff 0a       	cmpb   $0xa,-0x1(%rax,%rcx,1)
   15166:	75 0c                	jne    15174 <<std::io::stdio::StdoutLock as std::io::Write>::write_all+0xa4>
   15168:	4c 89 e7             	mov    %r12,%rdi
   1516b:	e8 d0 f2 ff ff       	callq  14440 <std::io::buffered::BufWriter<W>::flush_buf>
   15170:	3c 03                	cmp    $0x3,%al
   15172:	75 51                	jne    151c5 <<std::io::stdio::StdoutLock as std::io::Write>::write_all+0xf5>
   15174:	4c 89 e7             	mov    %r12,%rdi
   15177:	4c 89 fe             	mov    %r15,%rsi
   1517a:	4c 89 ea             	mov    %r13,%rdx
   1517d:	e8 7e f6 ff ff       	callq  14800 <<std::io::buffered::BufWriter<W> as std::io::Write>::write_all>
   15182:	eb 41                	jmp    151c5 <<std::io::stdio::StdoutLock as std::io::Write>::write_all+0xf5>
   15184:	80 7d 48 01          	cmpb   $0x1,0x48(%rbp)
   15188:	0f 85 c0 00 00 00    	jne    1524e <<std::io::stdio::StdoutLock as std::io::Write>::write_all+0x17e>
   1518e:	4c 89 ff             	mov    %r15,%rdi
   15191:	48 89 de             	mov    %rbx,%rsi
   15194:	e8 47 07 00 00       	callq  158e0 <std::io::Write::write_all>
   15199:	3c 03                	cmp    $0x3,%al
   1519b:	74 14                	je     151b1 <<std::io::stdio::StdoutLock as std::io::Write>::write_all+0xe1>
   1519d:	48 89 d1             	mov    %rdx,%rcx
   151a0:	48 89 d6             	mov    %rdx,%rsi
   151a3:	48 0f a4 c6 20       	shld   $0x20,%rax,%rsi
   151a8:	84 c0                	test   %al,%al
   151aa:	75 2c                	jne    151d8 <<std::io::stdio::StdoutLock as std::io::Write>::write_all+0x108>
   151ac:	83 fe 09             	cmp    $0x9,%esi
   151af:	75 27                	jne    151d8 <<std::io::stdio::StdoutLock as std::io::Write>::write_all+0x108>
   151b1:	49 01 df             	add    %rbx,%r15
   151b4:	49 29 dd             	sub    %rbx,%r13
   151b7:	4c 89 e7             	mov    %r12,%rdi
   151ba:	4c 89 fe             	mov    %r15,%rsi
   151bd:	4c 89 ea             	mov    %r13,%rdx
   151c0:	e8 3b f6 ff ff       	callq  14800 <<std::io::buffered::BufWriter<W> as std::io::Write>::write_all>
   151c5:	49 83 06 01          	addq   $0x1,(%r14)
   151c9:	48 83 c4 08          	add    $0x8,%rsp
   151cd:	5b                   	pop    %rbx
   151ce:	41 5c                	pop    %r12
   151d0:	41 5d                	pop    %r13
   151d2:	41 5e                	pop    %r14
   151d4:	41 5f                	pop    %r15
   151d6:	5d                   	pop    %rbp
   151d7:	c3                   	retq   
   151d8:	48 89 c7             	mov    %rax,%rdi
   151db:	48 0f ac cf 08       	shrd   $0x8,%rcx,%rdi
   151e0:	81 e7 ff ff ff 00    	and    $0xffffff,%edi
   151e6:	48 89 ca             	mov    %rcx,%rdx
   151e9:	48 c1 ea 08          	shr    $0x8,%rdx
   151ed:	48 c1 e1 38          	shl    $0x38,%rcx
   151f1:	48 09 f9             	or     %rdi,%rcx
   151f4:	89 f6                	mov    %esi,%esi
   151f6:	48 c1 e6 18          	shl    $0x18,%rsi
   151fa:	48 09 ce             	or     %rcx,%rsi
   151fd:	48 0f a4 f2 08       	shld   $0x8,%rsi,%rdx
   15202:	48 c1 e6 08          	shl    $0x8,%rsi
   15206:	0f b6 c0             	movzbl %al,%eax
   15209:	48 09 f0             	or     %rsi,%rax
   1520c:	eb b7                	jmp    151c5 <<std::io::stdio::StdoutLock as std::io::Write>::write_all+0xf5>
   1520e:	48 8d 3d bb 10 02 00 	lea    0x210bb(%rip),%rdi        # 362d0 <_fini+0x9ac>
   15215:	48 8d 0d c4 e5 02 00 	lea    0x2e5c4(%rip),%rcx        # 437e0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2a8>
   1521c:	4c 8d 05 b5 ea 02 00 	lea    0x2eab5(%rip),%r8        # 43cd8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x7a0>
   15223:	48 89 e2             	mov    %rsp,%rdx
   15226:	be 10 00 00 00       	mov    $0x10,%esi
   1522b:	ff 15 af 09 03 00    	callq  *0x309af(%rip)        # 45be0 <_GLOBAL_OFFSET_TABLE_+0x258>
   15231:	0f 0b                	ud2    
   15233:	48 8d 3d 4e 23 02 00 	lea    0x2234e(%rip),%rdi        # 37588 <str.6+0x268>
   1523a:	48 8d 15 0f e5 02 00 	lea    0x2e50f(%rip),%rdx        # 43750 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x218>
   15241:	be 23 00 00 00       	mov    $0x23,%esi
   15246:	ff 15 8c 0c 03 00    	callq  *0x30c8c(%rip)        # 45ed8 <_GLOBAL_OFFSET_TABLE_+0x550>
   1524c:	eb 19                	jmp    15267 <<std::io::stdio::StdoutLock as std::io::Write>::write_all+0x197>
   1524e:	48 8d 3d a5 23 02 00 	lea    0x223a5(%rip),%rdi        # 375fa <str.6+0x2da>
   15255:	48 8d 15 bc e9 02 00 	lea    0x2e9bc(%rip),%rdx        # 43c18 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x6e0>
   1525c:	be 2b 00 00 00       	mov    $0x2b,%esi
   15261:	ff 15 71 0c 03 00    	callq  *0x30c71(%rip)        # 45ed8 <_GLOBAL_OFFSET_TABLE_+0x550>
   15267:	0f 0b                	ud2    
   15269:	48 89 c3             	mov    %rax,%rbx
   1526c:	4c 89 f7             	mov    %r14,%rdi
   1526f:	e8 dc 0b ff ff       	callq  5e50 <core::ptr::drop_in_place>
   15274:	48 89 df             	mov    %rbx,%rdi
   15277:	e8 d4 fd fe ff       	callq  5050 <_Unwind_Resume@plt>
   1527c:	0f 0b                	ud2    
   1527e:	66 90                	xchg   %ax,%ax

0000000000015280 <std::io::stdio::set_panic>:
   15280:	41 57                	push   %r15
   15282:	41 56                	push   %r14
   15284:	53                   	push   %rbx
   15285:	48 83 ec 20          	sub    $0x20,%rsp
   15289:	48 89 f2             	mov    %rsi,%rdx
   1528c:	48 89 fe             	mov    %rdi,%rsi
   1528f:	48 85 ff             	test   %rdi,%rdi
   15292:	75 0e                	jne    152a2 <std::io::stdio::set_panic+0x22>
   15294:	8a 05 96 0f 03 00    	mov    0x30f96(%rip),%al        # 46230 <_ZN3std2io5stdio13LOCAL_STREAMS17h0b4e40a1b3779d2dE.0.0>
   1529a:	84 c0                	test   %al,%al
   1529c:	0f 84 89 00 00 00    	je     1532b <std::io::stdio::set_panic+0xab>
   152a2:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   152a7:	e8 14 e0 ff ff       	callq  132c0 <std::thread::local::LocalKey<T>::try_with>
   152ac:	83 7c 24 08 01       	cmpl   $0x1,0x8(%rsp)
   152b1:	74 7c                	je     1532f <std::io::stdio::set_panic+0xaf>
   152b3:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
   152b8:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   152bd:	48 85 db             	test   %rbx,%rbx
   152c0:	74 52                	je     15314 <std::io::stdio::set_panic+0x94>
   152c2:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   152c7:	4c 89 74 24 10       	mov    %r14,0x10(%rsp)
   152cc:	48 89 df             	mov    %rbx,%rdi
   152cf:	41 ff 56 30          	callq  *0x30(%r14)
   152d3:	49 89 d7             	mov    %rdx,%r15
   152d6:	3c 03                	cmp    $0x3,%al
   152d8:	77 04                	ja     152de <std::io::stdio::set_panic+0x5e>
   152da:	3c 02                	cmp    $0x2,%al
   152dc:	75 36                	jne    15314 <std::io::stdio::set_panic+0x94>
   152de:	49 8b 3f             	mov    (%r15),%rdi
   152e1:	49 8b 47 08          	mov    0x8(%r15),%rax
   152e5:	ff 10                	callq  *(%rax)
   152e7:	49 8b 47 08          	mov    0x8(%r15),%rax
   152eb:	48 8b 70 08          	mov    0x8(%rax),%rsi
   152ef:	48 85 f6             	test   %rsi,%rsi
   152f2:	74 0d                	je     15301 <std::io::stdio::set_panic+0x81>
   152f4:	49 8b 3f             	mov    (%r15),%rdi
   152f7:	48 8b 50 10          	mov    0x10(%rax),%rdx
   152fb:	ff 15 f7 08 03 00    	callq  *0x308f7(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   15301:	be 18 00 00 00       	mov    $0x18,%esi
   15306:	ba 08 00 00 00       	mov    $0x8,%edx
   1530b:	4c 89 ff             	mov    %r15,%rdi
   1530e:	ff 15 e4 08 03 00    	callq  *0x308e4(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   15314:	c6 05 15 0f 03 00 01 	movb   $0x1,0x30f15(%rip)        # 46230 <_ZN3std2io5stdio13LOCAL_STREAMS17h0b4e40a1b3779d2dE.0.0>
   1531b:	48 89 d8             	mov    %rbx,%rax
   1531e:	4c 89 f2             	mov    %r14,%rdx
   15321:	48 83 c4 20          	add    $0x20,%rsp
   15325:	5b                   	pop    %rbx
   15326:	41 5e                	pop    %r14
   15328:	41 5f                	pop    %r15
   1532a:	c3                   	retq   
   1532b:	31 db                	xor    %ebx,%ebx
   1532d:	eb ec                	jmp    1531b <std::io::stdio::set_panic+0x9b>
   1532f:	48 8d 3d 18 25 02 00 	lea    0x22518(%rip),%rdi        # 3784e <str.6+0x52e>
   15336:	48 8d 0d c3 e4 02 00 	lea    0x2e4c3(%rip),%rcx        # 43800 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2c8>
   1533d:	4c 8d 05 8c e7 02 00 	lea    0x2e78c(%rip),%r8        # 43ad0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x598>
   15344:	48 89 e2             	mov    %rsp,%rdx
   15347:	be 46 00 00 00       	mov    $0x46,%esi
   1534c:	ff 15 8e 08 03 00    	callq  *0x3088e(%rip)        # 45be0 <_GLOBAL_OFFSET_TABLE_+0x258>
   15352:	0f 0b                	ud2    
   15354:	48 89 c3             	mov    %rax,%rbx
   15357:	49 8b 3f             	mov    (%r15),%rdi
   1535a:	49 8b 77 08          	mov    0x8(%r15),%rsi
   1535e:	e8 6d 46 ff ff       	callq  99d0 <alloc::alloc::box_free>
   15363:	4c 89 ff             	mov    %r15,%rdi
   15366:	e8 85 46 ff ff       	callq  99f0 <alloc::alloc::box_free>
   1536b:	eb 03                	jmp    15370 <std::io::stdio::set_panic+0xf0>
   1536d:	48 89 c3             	mov    %rax,%rbx
   15370:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   15375:	e8 86 18 ff ff       	callq  6c00 <core::ptr::drop_in_place>
   1537a:	48 89 df             	mov    %rbx,%rdi
   1537d:	e8 ce fc fe ff       	callq  5050 <_Unwind_Resume@plt>
   15382:	0f 0b                	ud2    
   15384:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1538b:	00 00 00 
   1538e:	66 90                	xchg   %ax,%ax

0000000000015390 <std::io::stdio::_print>:
   15390:	41 57                	push   %r15
   15392:	41 56                	push   %r14
   15394:	41 55                	push   %r13
   15396:	41 54                	push   %r12
   15398:	53                   	push   %rbx
   15399:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
   153a0:	0f 10 07             	movups (%rdi),%xmm0
   153a3:	0f 10 4f 10          	movups 0x10(%rdi),%xmm1
   153a7:	0f 10 57 20          	movups 0x20(%rdi),%xmm2
   153ab:	0f 29 94 24 90 00 00 	movaps %xmm2,0x90(%rsp)
   153b2:	00 
   153b3:	0f 29 8c 24 80 00 00 	movaps %xmm1,0x80(%rsp)
   153ba:	00 
   153bb:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
   153c0:	48 8d 05 93 29 02 00 	lea    0x22993(%rip),%rax        # 37d5a <str.6+0xa3a>
   153c7:	48 89 84 24 a0 00 00 	mov    %rax,0xa0(%rsp)
   153ce:	00 
   153cf:	48 c7 84 24 a8 00 00 	movq   $0x6,0xa8(%rsp)
   153d6:	00 06 00 00 00 
   153db:	8a 05 4f 0e 03 00    	mov    0x30e4f(%rip),%al        # 46230 <_ZN3std2io5stdio13LOCAL_STREAMS17h0b4e40a1b3779d2dE.0.0>
   153e1:	84 c0                	test   %al,%al
   153e3:	0f 84 70 01 00 00    	je     15559 <std::io::stdio::_print+0x1c9>
   153e9:	66 66 66 64 48 8b 04 	data16 data16 data16 mov %fs:0x0,%rax
   153f0:	25 00 00 00 00 
   153f5:	83 b8 20 ff ff ff 01 	cmpl   $0x1,-0xe0(%rax)
   153fc:	75 09                	jne    15407 <std::io::stdio::_print+0x77>
   153fe:	48 8d 98 28 ff ff ff 	lea    -0xd8(%rax),%rbx
   15405:	eb 11                	jmp    15418 <std::io::stdio::_print+0x88>
   15407:	e8 c4 e0 ff ff       	callq  134d0 <std::thread::local::fast::Key<T>::try_initialize>
   1540c:	48 89 c3             	mov    %rax,%rbx
   1540f:	48 85 c0             	test   %rax,%rax
   15412:	0f 84 41 01 00 00    	je     15559 <std::io::stdio::_print+0x1c9>
   15418:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   1541c:	0f 85 50 02 00 00    	jne    15672 <std::io::stdio::_print+0x2e2>
   15422:	4c 8b 63 08          	mov    0x8(%rbx),%r12
   15426:	4c 8b 6b 10          	mov    0x10(%rbx),%r13
   1542a:	4c 89 a4 24 b0 00 00 	mov    %r12,0xb0(%rsp)
   15431:	00 
   15432:	4c 89 ac 24 b8 00 00 	mov    %r13,0xb8(%rsp)
   15439:	00 
   1543a:	0f 57 c0             	xorps  %xmm0,%xmm0
   1543d:	0f 11 03             	movups %xmm0,(%rbx)
   15440:	4d 85 e4             	test   %r12,%r12
   15443:	0f 84 9d 00 00 00    	je     154e6 <std::io::stdio::_print+0x156>
   15449:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   1544e:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   15453:	0f 28 44 24 70       	movaps 0x70(%rsp),%xmm0
   15458:	0f 28 8c 24 80 00 00 	movaps 0x80(%rsp),%xmm1
   1545f:	00 
   15460:	0f 28 94 24 90 00 00 	movaps 0x90(%rsp),%xmm2
   15467:	00 
   15468:	0f 29 54 24 40       	movaps %xmm2,0x40(%rsp)
   1546d:	0f 29 4c 24 30       	movaps %xmm1,0x30(%rsp)
   15472:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   15477:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
   1547c:	4c 89 e7             	mov    %r12,%rdi
   1547f:	41 ff 55 48          	callq  *0x48(%r13)
   15483:	49 89 c7             	mov    %rax,%r15
   15486:	49 89 d6             	mov    %rdx,%r14
   15489:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   1548e:	48 89 54 24 58       	mov    %rdx,0x58(%rsp)
   15493:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
   15498:	4c 89 6c 24 28       	mov    %r13,0x28(%rsp)
   1549d:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   154a1:	0f 85 f2 01 00 00    	jne    15699 <std::io::stdio::_print+0x309>
   154a7:	48 c7 03 ff ff ff ff 	movq   $0xffffffffffffffff,(%rbx)
   154ae:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   154b2:	48 85 ff             	test   %rdi,%rdi
   154b5:	74 21                	je     154d8 <std::io::stdio::_print+0x148>
   154b7:	48 8b 43 10          	mov    0x10(%rbx),%rax
   154bb:	ff 10                	callq  *(%rax)
   154bd:	48 8b 43 10          	mov    0x10(%rbx),%rax
   154c1:	48 8b 70 08          	mov    0x8(%rax),%rsi
   154c5:	48 85 f6             	test   %rsi,%rsi
   154c8:	74 0e                	je     154d8 <std::io::stdio::_print+0x148>
   154ca:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   154ce:	48 8b 50 10          	mov    0x10(%rax),%rdx
   154d2:	ff 15 20 07 03 00    	callq  *0x30720(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   154d8:	4c 89 63 08          	mov    %r12,0x8(%rbx)
   154dc:	4c 89 6b 10          	mov    %r13,0x10(%rbx)
   154e0:	48 83 03 01          	addq   $0x1,(%rbx)
   154e4:	eb 62                	jmp    15548 <std::io::stdio::_print+0x1b8>
   154e6:	48 8b 05 7b 0b 03 00 	mov    0x30b7b(%rip),%rax        # 46068 <std::io::stdio::stdout::INSTANCE>
   154ed:	48 83 f8 03          	cmp    $0x3,%rax
   154f1:	74 05                	je     154f8 <std::io::stdio::_print+0x168>
   154f3:	e8 a8 28 00 00       	callq  17da0 <std::lazy::SyncOnceCell<T>::initialize>
   154f8:	48 8d 05 71 0b 03 00 	lea    0x30b71(%rip),%rax        # 46070 <std::io::stdio::stdout::INSTANCE+0x8>
   154ff:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   15504:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   15509:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   1550e:	0f 28 44 24 70       	movaps 0x70(%rsp),%xmm0
   15513:	0f 28 8c 24 80 00 00 	movaps 0x80(%rsp),%xmm1
   1551a:	00 
   1551b:	0f 28 94 24 90 00 00 	movaps 0x90(%rsp),%xmm2
   15522:	00 
   15523:	0f 29 54 24 40       	movaps %xmm2,0x40(%rsp)
   15528:	0f 29 4c 24 30       	movaps %xmm1,0x30(%rsp)
   1552d:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   15532:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
   15537:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
   1553c:	ff 15 fe 06 03 00    	callq  *0x306fe(%rip)        # 45c40 <_GLOBAL_OFFSET_TABLE_+0x2b8>
   15542:	49 89 c7             	mov    %rax,%r15
   15545:	49 89 d6             	mov    %rdx,%r14
   15548:	4c 89 f1             	mov    %r14,%rcx
   1554b:	4c 0f a4 f9 38       	shld   $0x38,%r15,%rcx
   15550:	44 89 f8             	mov    %r15d,%eax
   15553:	24 fe                	and    $0xfe,%al
   15555:	3c 04                	cmp    $0x4,%al
   15557:	75 65                	jne    155be <std::io::stdio::_print+0x22e>
   15559:	48 8b 05 08 0b 03 00 	mov    0x30b08(%rip),%rax        # 46068 <std::io::stdio::stdout::INSTANCE>
   15560:	48 83 f8 03          	cmp    $0x3,%rax
   15564:	75 6f                	jne    155d5 <std::io::stdio::_print+0x245>
   15566:	48 8d 05 03 0b 03 00 	lea    0x30b03(%rip),%rax        # 46070 <std::io::stdio::stdout::INSTANCE+0x8>
   1556d:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   15572:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   15577:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   1557c:	0f 28 44 24 70       	movaps 0x70(%rsp),%xmm0
   15581:	0f 28 8c 24 80 00 00 	movaps 0x80(%rsp),%xmm1
   15588:	00 
   15589:	0f 28 94 24 90 00 00 	movaps 0x90(%rsp),%xmm2
   15590:	00 
   15591:	0f 29 54 24 40       	movaps %xmm2,0x40(%rsp)
   15596:	0f 29 4c 24 30       	movaps %xmm1,0x30(%rsp)
   1559b:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   155a0:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
   155a5:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
   155aa:	ff 15 90 06 03 00    	callq  *0x30690(%rip)        # 45c40 <_GLOBAL_OFFSET_TABLE_+0x2b8>
   155b0:	49 89 c7             	mov    %rax,%r15
   155b3:	49 89 d6             	mov    %rdx,%r14
   155b6:	48 89 c1             	mov    %rax,%rcx
   155b9:	48 0f ac d1 08       	shrd   $0x8,%rdx,%rcx
   155be:	41 80 ff 03          	cmp    $0x3,%r15b
   155c2:	75 18                	jne    155dc <std::io::stdio::_print+0x24c>
   155c4:	48 81 c4 c0 00 00 00 	add    $0xc0,%rsp
   155cb:	5b                   	pop    %rbx
   155cc:	41 5c                	pop    %r12
   155ce:	41 5d                	pop    %r13
   155d0:	41 5e                	pop    %r14
   155d2:	41 5f                	pop    %r15
   155d4:	c3                   	retq   
   155d5:	e8 c6 27 00 00       	callq  17da0 <std::lazy::SyncOnceCell<T>::initialize>
   155da:	eb 8a                	jmp    15566 <std::io::stdio::_print+0x1d6>
   155dc:	44 88 7c 24 10       	mov    %r15b,0x10(%rsp)
   155e1:	89 4c 24 11          	mov    %ecx,0x11(%rsp)
   155e5:	48 89 c8             	mov    %rcx,%rax
   155e8:	48 c1 e8 30          	shr    $0x30,%rax
   155ec:	88 44 24 17          	mov    %al,0x17(%rsp)
   155f0:	48 c1 e9 20          	shr    $0x20,%rcx
   155f4:	66 89 4c 24 15       	mov    %cx,0x15(%rsp)
   155f9:	4c 89 74 24 18       	mov    %r14,0x18(%rsp)
   155fe:	48 8d 84 24 a0 00 00 	lea    0xa0(%rsp),%rax
   15605:	00 
   15606:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   1560b:	48 8d 05 3e 03 ff ff 	lea    -0xfcc2(%rip),%rax        # 5950 <<&T as core::fmt::Display>::fmt>
   15612:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   15617:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   1561c:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   15621:	48 8d 05 68 f5 ff ff 	lea    -0xa98(%rip),%rax        # 14b90 <<std::io::error::Error as core::fmt::Display>::fmt>
   15628:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   1562d:	48 8d 05 d4 e6 02 00 	lea    0x2e6d4(%rip),%rax        # 43d08 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x7d0>
   15634:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   15639:	48 c7 44 24 28 02 00 	movq   $0x2,0x28(%rsp)
   15640:	00 00 
   15642:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   15649:	00 00 
   1564b:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
   15650:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   15655:	48 c7 44 24 48 02 00 	movq   $0x2,0x48(%rsp)
   1565c:	00 00 
   1565e:	48 8d 35 c3 e6 02 00 	lea    0x2e6c3(%rip),%rsi        # 43d28 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x7f0>
   15665:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   1566a:	ff 15 70 09 03 00    	callq  *0x30970(%rip)        # 45fe0 <_GLOBAL_OFFSET_TABLE_+0x658>
   15670:	eb 4c                	jmp    156be <std::io::stdio::_print+0x32e>
   15672:	48 8d 3d 57 0c 02 00 	lea    0x20c57(%rip),%rdi        # 362d0 <_fini+0x9ac>
   15679:	48 8d 0d 60 e1 02 00 	lea    0x2e160(%rip),%rcx        # 437e0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2a8>
   15680:	4c 8d 05 b9 e6 02 00 	lea    0x2e6b9(%rip),%r8        # 43d40 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x808>
   15687:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   1568c:	be 10 00 00 00       	mov    $0x10,%esi
   15691:	ff 15 49 05 03 00    	callq  *0x30549(%rip)        # 45be0 <_GLOBAL_OFFSET_TABLE_+0x258>
   15697:	0f 0b                	ud2    
   15699:	48 8d 3d 30 0c 02 00 	lea    0x20c30(%rip),%rdi        # 362d0 <_fini+0x9ac>
   156a0:	48 8d 0d 39 e1 02 00 	lea    0x2e139(%rip),%rcx        # 437e0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2a8>
   156a7:	4c 8d 05 aa e6 02 00 	lea    0x2e6aa(%rip),%r8        # 43d58 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x820>
   156ae:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   156b3:	be 10 00 00 00       	mov    $0x10,%esi
   156b8:	ff 15 22 05 03 00    	callq  *0x30522(%rip)        # 45be0 <_GLOBAL_OFFSET_TABLE_+0x258>
   156be:	0f 0b                	ud2    
   156c0:	49 89 c6             	mov    %rax,%r14
   156c3:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   156c8:	e8 33 0e ff ff       	callq  6500 <core::ptr::drop_in_place>
   156cd:	eb 46                	jmp    15715 <std::io::stdio::_print+0x385>
   156cf:	49 89 c6             	mov    %rax,%r14
   156d2:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   156d7:	e8 f4 18 ff ff       	callq  6fd0 <core::ptr::drop_in_place>
   156dc:	eb 50                	jmp    1572e <std::io::stdio::_print+0x39e>
   156de:	49 89 c6             	mov    %rax,%r14
   156e1:	eb 4b                	jmp    1572e <std::io::stdio::_print+0x39e>
   156e3:	49 89 c6             	mov    %rax,%r14
   156e6:	48 8d bc 24 b0 00 00 	lea    0xb0(%rsp),%rdi
   156ed:	00 
   156ee:	e8 0d 0e ff ff       	callq  6500 <core::ptr::drop_in_place>
   156f3:	eb 39                	jmp    1572e <std::io::stdio::_print+0x39e>
   156f5:	49 89 c6             	mov    %rax,%r14
   156f8:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   156fc:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   15700:	e8 cb 42 ff ff       	callq  99d0 <alloc::alloc::box_free>
   15705:	4c 89 63 08          	mov    %r12,0x8(%rbx)
   15709:	4c 89 6b 10          	mov    %r13,0x10(%rbx)
   1570d:	48 89 df             	mov    %rbx,%rdi
   15710:	e8 3b 07 ff ff       	callq  5e50 <core::ptr::drop_in_place>
   15715:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
   1571a:	e8 51 1d ff ff       	callq  7470 <core::ptr::drop_in_place>
   1571f:	eb 0d                	jmp    1572e <std::io::stdio::_print+0x39e>
   15721:	49 89 c6             	mov    %rax,%r14
   15724:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   15729:	e8 d2 14 ff ff       	callq  6c00 <core::ptr::drop_in_place>
   1572e:	4c 89 f7             	mov    %r14,%rdi
   15731:	e8 1a f9 fe ff       	callq  5050 <_Unwind_Resume@plt>
   15736:	0f 0b                	ud2    
   15738:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1573f:	00 

0000000000015740 <std::io::Write::write_all>:
   15740:	55                   	push   %rbp
   15741:	41 57                	push   %r15
   15743:	41 56                	push   %r14
   15745:	41 55                	push   %r13
   15747:	41 54                	push   %r12
   15749:	53                   	push   %rbx
   1574a:	50                   	push   %rax
   1574b:	b1 03                	mov    $0x3,%cl
   1574d:	48 85 d2             	test   %rdx,%rdx
   15750:	0f 84 81 00 00 00    	je     157d7 <std::io::Write::write_all+0x97>
   15756:	48 89 d3             	mov    %rdx,%rbx
   15759:	49 89 f6             	mov    %rsi,%r14
   1575c:	49 bc ff ff ff ff ff 	movabs $0x7fffffffffffffff,%r12
   15763:	ff ff 7f 
   15766:	4c 8b 2d 63 03 03 00 	mov    0x30363(%rip),%r13        # 45ad0 <write@GLIBC_2.2.5>
   1576d:	4c 8b 3d a4 02 03 00 	mov    0x302a4(%rip),%r15        # 45a18 <__errno_location@GLIBC_2.2.5>
   15774:	e9 20 00 00 00       	jmpq   15799 <std::io::Write::write_all+0x59>
   15779:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   15780:	41 ff d7             	callq  *%r15
   15783:	8b 28                	mov    (%rax),%ebp
   15785:	89 ef                	mov    %ebp,%edi
   15787:	e8 a4 6b 00 00       	callq  1c330 <std::sys::unix::decode_error_kind>
   1578c:	3c 0f                	cmp    $0xf,%al
   1578e:	0f 85 e7 00 00 00    	jne    1587b <std::io::Write::write_all+0x13b>
   15794:	48 85 db             	test   %rbx,%rbx
   15797:	74 37                	je     157d0 <std::io::Write::write_all+0x90>
   15799:	4c 39 e3             	cmp    %r12,%rbx
   1579c:	4c 89 e2             	mov    %r12,%rdx
   1579f:	48 0f 42 d3          	cmovb  %rbx,%rdx
   157a3:	bf 02 00 00 00       	mov    $0x2,%edi
   157a8:	4c 89 f6             	mov    %r14,%rsi
   157ab:	41 ff d5             	callq  *%r13
   157ae:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   157b2:	74 cc                	je     15780 <std::io::Write::write_all+0x40>
   157b4:	48 85 c0             	test   %rax,%rax
   157b7:	74 23                	je     157dc <std::io::Write::write_all+0x9c>
   157b9:	48 89 d9             	mov    %rbx,%rcx
   157bc:	48 29 c1             	sub    %rax,%rcx
   157bf:	0f 82 e1 00 00 00    	jb     158a6 <std::io::Write::write_all+0x166>
   157c5:	49 01 c6             	add    %rax,%r14
   157c8:	48 89 cb             	mov    %rcx,%rbx
   157cb:	48 85 db             	test   %rbx,%rbx
   157ce:	75 c9                	jne    15799 <std::io::Write::write_all+0x59>
   157d0:	b1 03                	mov    $0x3,%cl
   157d2:	e9 ae 00 00 00       	jmpq   15885 <std::io::Write::write_all+0x145>
   157d7:	e9 a9 00 00 00       	jmpq   15885 <std::io::Write::write_all+0x145>
   157dc:	bf 1c 00 00 00       	mov    $0x1c,%edi
   157e1:	be 01 00 00 00       	mov    $0x1,%esi
   157e6:	ff 15 94 03 03 00    	callq  *0x30394(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   157ec:	48 85 c0             	test   %rax,%rax
   157ef:	0f 84 d8 00 00 00    	je     158cd <std::io::Write::write_all+0x18d>
   157f5:	49 89 c6             	mov    %rax,%r14
   157f8:	0f 10 05 1b 25 02 00 	movups 0x2251b(%rip),%xmm0        # 37d1a <str.6+0x9fa>
   157ff:	0f 11 40 0c          	movups %xmm0,0xc(%rax)
   15803:	0f 10 05 04 25 02 00 	movups 0x22504(%rip),%xmm0        # 37d0e <str.6+0x9ee>
   1580a:	0f 11 00             	movups %xmm0,(%rax)
   1580d:	bf 18 00 00 00       	mov    $0x18,%edi
   15812:	be 08 00 00 00       	mov    $0x8,%esi
   15817:	ff 15 63 03 03 00    	callq  *0x30363(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   1581d:	48 85 c0             	test   %rax,%rax
   15820:	0f 84 95 00 00 00    	je     158bb <std::io::Write::write_all+0x17b>
   15826:	48 89 c3             	mov    %rax,%rbx
   15829:	4c 89 30             	mov    %r14,(%rax)
   1582c:	0f 28 05 4d 09 02 00 	movaps 0x2094d(%rip),%xmm0        # 36180 <_fini+0x85c>
   15833:	0f 11 40 08          	movups %xmm0,0x8(%rax)
   15837:	bf 18 00 00 00       	mov    $0x18,%edi
   1583c:	be 08 00 00 00       	mov    $0x8,%esi
   15841:	ff 15 39 03 03 00    	callq  *0x30339(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   15847:	48 85 c0             	test   %rax,%rax
   1584a:	74 6f                	je     158bb <std::io::Write::write_all+0x17b>
   1584c:	48 89 18             	mov    %rbx,(%rax)
   1584f:	48 8d 0d 2a e3 02 00 	lea    0x2e32a(%rip),%rcx        # 43b80 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x648>
   15856:	48 89 48 08          	mov    %rcx,0x8(%rax)
   1585a:	c6 40 10 0e          	movb   $0xe,0x10(%rax)
   1585e:	8b 4c 24 01          	mov    0x1(%rsp),%ecx
   15862:	8b 54 24 04          	mov    0x4(%rsp),%edx
   15866:	89 48 11             	mov    %ecx,0x11(%rax)
   15869:	89 50 14             	mov    %edx,0x14(%rax)
   1586c:	48 89 c2             	mov    %rax,%rdx
   1586f:	48 c1 ea 08          	shr    $0x8,%rdx
   15873:	48 c1 e0 38          	shl    $0x38,%rax
   15877:	b1 02                	mov    $0x2,%cl
   15879:	eb 0a                	jmp    15885 <std::io::Write::write_all+0x145>
   1587b:	89 e8                	mov    %ebp,%eax
   1587d:	48 c1 e0 18          	shl    $0x18,%rax
   15881:	31 d2                	xor    %edx,%edx
   15883:	31 c9                	xor    %ecx,%ecx
   15885:	48 0f a4 c2 08       	shld   $0x8,%rax,%rdx
   1588a:	48 c1 e0 08          	shl    $0x8,%rax
   1588e:	0f b6 c9             	movzbl %cl,%ecx
   15891:	48 09 c1             	or     %rax,%rcx
   15894:	48 89 c8             	mov    %rcx,%rax
   15897:	48 83 c4 08          	add    $0x8,%rsp
   1589b:	5b                   	pop    %rbx
   1589c:	41 5c                	pop    %r12
   1589e:	41 5d                	pop    %r13
   158a0:	41 5e                	pop    %r14
   158a2:	41 5f                	pop    %r15
   158a4:	5d                   	pop    %rbp
   158a5:	c3                   	retq   
   158a6:	48 8d 15 db e4 02 00 	lea    0x2e4db(%rip),%rdx        # 43d88 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x850>
   158ad:	48 89 c7             	mov    %rax,%rdi
   158b0:	48 89 de             	mov    %rbx,%rsi
   158b3:	ff 15 37 05 03 00    	callq  *0x30537(%rip)        # 45df0 <_GLOBAL_OFFSET_TABLE_+0x468>
   158b9:	0f 0b                	ud2    
   158bb:	bf 18 00 00 00       	mov    $0x18,%edi
   158c0:	be 08 00 00 00       	mov    $0x8,%esi
   158c5:	ff 15 55 02 03 00    	callq  *0x30255(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   158cb:	0f 0b                	ud2    
   158cd:	bf 1c 00 00 00       	mov    $0x1c,%edi
   158d2:	be 01 00 00 00       	mov    $0x1,%esi
   158d7:	ff 15 43 02 03 00    	callq  *0x30243(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   158dd:	0f 0b                	ud2    
   158df:	90                   	nop

00000000000158e0 <std::io::Write::write_all>:
   158e0:	55                   	push   %rbp
   158e1:	41 57                	push   %r15
   158e3:	41 56                	push   %r14
   158e5:	41 55                	push   %r13
   158e7:	41 54                	push   %r12
   158e9:	53                   	push   %rbx
   158ea:	50                   	push   %rax
   158eb:	b1 03                	mov    $0x3,%cl
   158ed:	48 85 f6             	test   %rsi,%rsi
   158f0:	0f 84 81 00 00 00    	je     15977 <std::io::Write::write_all+0x97>
   158f6:	48 89 f3             	mov    %rsi,%rbx
   158f9:	49 89 fe             	mov    %rdi,%r14
   158fc:	49 bc ff ff ff ff ff 	movabs $0x7fffffffffffffff,%r12
   15903:	ff ff 7f 
   15906:	4c 8b 2d c3 01 03 00 	mov    0x301c3(%rip),%r13        # 45ad0 <write@GLIBC_2.2.5>
   1590d:	4c 8b 3d 04 01 03 00 	mov    0x30104(%rip),%r15        # 45a18 <__errno_location@GLIBC_2.2.5>
   15914:	e9 20 00 00 00       	jmpq   15939 <std::io::Write::write_all+0x59>
   15919:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   15920:	41 ff d7             	callq  *%r15
   15923:	8b 28                	mov    (%rax),%ebp
   15925:	89 ef                	mov    %ebp,%edi
   15927:	e8 04 6a 00 00       	callq  1c330 <std::sys::unix::decode_error_kind>
   1592c:	3c 0f                	cmp    $0xf,%al
   1592e:	0f 85 e7 00 00 00    	jne    15a1b <std::io::Write::write_all+0x13b>
   15934:	48 85 db             	test   %rbx,%rbx
   15937:	74 37                	je     15970 <std::io::Write::write_all+0x90>
   15939:	4c 39 e3             	cmp    %r12,%rbx
   1593c:	4c 89 e2             	mov    %r12,%rdx
   1593f:	48 0f 42 d3          	cmovb  %rbx,%rdx
   15943:	bf 01 00 00 00       	mov    $0x1,%edi
   15948:	4c 89 f6             	mov    %r14,%rsi
   1594b:	41 ff d5             	callq  *%r13
   1594e:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   15952:	74 cc                	je     15920 <std::io::Write::write_all+0x40>
   15954:	48 85 c0             	test   %rax,%rax
   15957:	74 23                	je     1597c <std::io::Write::write_all+0x9c>
   15959:	48 89 d9             	mov    %rbx,%rcx
   1595c:	48 29 c1             	sub    %rax,%rcx
   1595f:	0f 82 e1 00 00 00    	jb     15a46 <std::io::Write::write_all+0x166>
   15965:	49 01 c6             	add    %rax,%r14
   15968:	48 89 cb             	mov    %rcx,%rbx
   1596b:	48 85 db             	test   %rbx,%rbx
   1596e:	75 c9                	jne    15939 <std::io::Write::write_all+0x59>
   15970:	b1 03                	mov    $0x3,%cl
   15972:	e9 ae 00 00 00       	jmpq   15a25 <std::io::Write::write_all+0x145>
   15977:	e9 a9 00 00 00       	jmpq   15a25 <std::io::Write::write_all+0x145>
   1597c:	bf 1c 00 00 00       	mov    $0x1c,%edi
   15981:	be 01 00 00 00       	mov    $0x1,%esi
   15986:	ff 15 f4 01 03 00    	callq  *0x301f4(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   1598c:	48 85 c0             	test   %rax,%rax
   1598f:	0f 84 d8 00 00 00    	je     15a6d <std::io::Write::write_all+0x18d>
   15995:	49 89 c6             	mov    %rax,%r14
   15998:	0f 10 05 7b 23 02 00 	movups 0x2237b(%rip),%xmm0        # 37d1a <str.6+0x9fa>
   1599f:	0f 11 40 0c          	movups %xmm0,0xc(%rax)
   159a3:	0f 10 05 64 23 02 00 	movups 0x22364(%rip),%xmm0        # 37d0e <str.6+0x9ee>
   159aa:	0f 11 00             	movups %xmm0,(%rax)
   159ad:	bf 18 00 00 00       	mov    $0x18,%edi
   159b2:	be 08 00 00 00       	mov    $0x8,%esi
   159b7:	ff 15 c3 01 03 00    	callq  *0x301c3(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   159bd:	48 85 c0             	test   %rax,%rax
   159c0:	0f 84 95 00 00 00    	je     15a5b <std::io::Write::write_all+0x17b>
   159c6:	48 89 c3             	mov    %rax,%rbx
   159c9:	4c 89 30             	mov    %r14,(%rax)
   159cc:	0f 28 05 ad 07 02 00 	movaps 0x207ad(%rip),%xmm0        # 36180 <_fini+0x85c>
   159d3:	0f 11 40 08          	movups %xmm0,0x8(%rax)
   159d7:	bf 18 00 00 00       	mov    $0x18,%edi
   159dc:	be 08 00 00 00       	mov    $0x8,%esi
   159e1:	ff 15 99 01 03 00    	callq  *0x30199(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   159e7:	48 85 c0             	test   %rax,%rax
   159ea:	74 6f                	je     15a5b <std::io::Write::write_all+0x17b>
   159ec:	48 89 18             	mov    %rbx,(%rax)
   159ef:	48 8d 0d 8a e1 02 00 	lea    0x2e18a(%rip),%rcx        # 43b80 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x648>
   159f6:	48 89 48 08          	mov    %rcx,0x8(%rax)
   159fa:	c6 40 10 0e          	movb   $0xe,0x10(%rax)
   159fe:	8b 4c 24 01          	mov    0x1(%rsp),%ecx
   15a02:	8b 54 24 04          	mov    0x4(%rsp),%edx
   15a06:	89 48 11             	mov    %ecx,0x11(%rax)
   15a09:	89 50 14             	mov    %edx,0x14(%rax)
   15a0c:	48 89 c2             	mov    %rax,%rdx
   15a0f:	48 c1 ea 08          	shr    $0x8,%rdx
   15a13:	48 c1 e0 38          	shl    $0x38,%rax
   15a17:	b1 02                	mov    $0x2,%cl
   15a19:	eb 0a                	jmp    15a25 <std::io::Write::write_all+0x145>
   15a1b:	89 e8                	mov    %ebp,%eax
   15a1d:	48 c1 e0 18          	shl    $0x18,%rax
   15a21:	31 d2                	xor    %edx,%edx
   15a23:	31 c9                	xor    %ecx,%ecx
   15a25:	48 0f a4 c2 08       	shld   $0x8,%rax,%rdx
   15a2a:	48 c1 e0 08          	shl    $0x8,%rax
   15a2e:	0f b6 c9             	movzbl %cl,%ecx
   15a31:	48 09 c1             	or     %rax,%rcx
   15a34:	48 89 c8             	mov    %rcx,%rax
   15a37:	48 83 c4 08          	add    $0x8,%rsp
   15a3b:	5b                   	pop    %rbx
   15a3c:	41 5c                	pop    %r12
   15a3e:	41 5d                	pop    %r13
   15a40:	41 5e                	pop    %r14
   15a42:	41 5f                	pop    %r15
   15a44:	5d                   	pop    %rbp
   15a45:	c3                   	retq   
   15a46:	48 8d 15 3b e3 02 00 	lea    0x2e33b(%rip),%rdx        # 43d88 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x850>
   15a4d:	48 89 c7             	mov    %rax,%rdi
   15a50:	48 89 de             	mov    %rbx,%rsi
   15a53:	ff 15 97 03 03 00    	callq  *0x30397(%rip)        # 45df0 <_GLOBAL_OFFSET_TABLE_+0x468>
   15a59:	0f 0b                	ud2    
   15a5b:	bf 18 00 00 00       	mov    $0x18,%edi
   15a60:	be 08 00 00 00       	mov    $0x8,%esi
   15a65:	ff 15 b5 00 03 00    	callq  *0x300b5(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   15a6b:	0f 0b                	ud2    
   15a6d:	bf 1c 00 00 00       	mov    $0x1c,%edi
   15a72:	be 01 00 00 00       	mov    $0x1,%esi
   15a77:	ff 15 a3 00 03 00    	callq  *0x300a3(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   15a7d:	0f 0b                	ud2    
   15a7f:	90                   	nop

0000000000015a80 <std::io::Write::write_all_vectored>:
   15a80:	55                   	push   %rbp
   15a81:	41 57                	push   %r15
   15a83:	41 56                	push   %r14
   15a85:	41 55                	push   %r13
   15a87:	41 54                	push   %r12
   15a89:	53                   	push   %rbx
   15a8a:	48 83 ec 28          	sub    $0x28,%rsp
   15a8e:	49 89 d5             	mov    %rdx,%r13
   15a91:	49 89 f7             	mov    %rsi,%r15
   15a94:	49 89 fe             	mov    %rdi,%r14
   15a97:	48 85 d2             	test   %rdx,%rdx
   15a9a:	0f 84 df 01 00 00    	je     15c7f <std::io::Write::write_all_vectored+0x1ff>
   15aa0:	4c 89 e8             	mov    %r13,%rax
   15aa3:	48 c1 e0 04          	shl    $0x4,%rax
   15aa7:	48 83 c0 f0          	add    $0xfffffffffffffff0,%rax
   15aab:	48 c1 e8 04          	shr    $0x4,%rax
   15aaf:	48 83 c0 01          	add    $0x1,%rax
   15ab3:	49 8d 4f 08          	lea    0x8(%r15),%rcx
   15ab7:	31 ff                	xor    %edi,%edi
   15ab9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   15ac0:	48 83 39 00          	cmpq   $0x0,(%rcx)
   15ac4:	75 10                	jne    15ad6 <std::io::Write::write_all_vectored+0x56>
   15ac6:	48 83 c7 01          	add    $0x1,%rdi
   15aca:	48 83 c1 10          	add    $0x10,%rcx
   15ace:	48 39 f8             	cmp    %rdi,%rax
   15ad1:	75 ed                	jne    15ac0 <std::io::Write::write_all_vectored+0x40>
   15ad3:	48 89 c7             	mov    %rax,%rdi
   15ad6:	4c 39 ef             	cmp    %r13,%rdi
   15ad9:	0f 87 9e 02 00 00    	ja     15d7d <std::io::Write::write_all_vectored+0x2fd>
   15adf:	b1 03                	mov    $0x3,%cl
   15ae1:	49 29 fd             	sub    %rdi,%r13
   15ae4:	0f 84 a2 01 00 00    	je     15c8c <std::io::Write::write_all_vectored+0x20c>
   15aea:	48 c1 e7 04          	shl    $0x4,%rdi
   15aee:	49 01 ff             	add    %rdi,%r15
   15af1:	4c 8d 64 24 08       	lea    0x8(%rsp),%r12
   15af6:	48 8d 2d 43 f9 fe ff 	lea    -0x106bd(%rip),%rbp        # 5440 <__rust_dealloc>
   15afd:	eb 19                	jmp    15b18 <std::io::Write::write_all_vectored+0x98>
   15aff:	90                   	nop
   15b00:	be 18 00 00 00       	mov    $0x18,%esi
   15b05:	ba 08 00 00 00       	mov    $0x8,%edx
   15b0a:	48 89 df             	mov    %rbx,%rdi
   15b0d:	ff d5                	callq  *%rbp
   15b0f:	4d 85 ed             	test   %r13,%r13
   15b12:	0f 84 79 01 00 00    	je     15c91 <std::io::Write::write_all_vectored+0x211>
   15b18:	49 8b 36             	mov    (%r14),%rsi
   15b1b:	49 8b 46 08          	mov    0x8(%r14),%rax
   15b1f:	4c 89 e7             	mov    %r12,%rdi
   15b22:	4c 89 fa             	mov    %r15,%rdx
   15b25:	4c 89 e9             	mov    %r13,%rcx
   15b28:	ff 50 20             	callq  *0x20(%rax)
   15b2b:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   15b30:	48 83 f9 01          	cmp    $0x1,%rcx
   15b34:	75 3a                	jne    15b70 <std::io::Write::write_all_vectored+0xf0>
   15b36:	0f b6 5c 24 10       	movzbl 0x10(%rsp),%ebx
   15b3b:	48 85 db             	test   %rbx,%rbx
   15b3e:	0f 84 dc 00 00 00    	je     15c20 <std::io::Write::write_all_vectored+0x1a0>
   15b44:	83 fb 02             	cmp    $0x2,%ebx
   15b47:	0f 84 bd 00 00 00    	je     15c0a <std::io::Write::write_all_vectored+0x18a>
   15b4d:	8a 44 24 11          	mov    0x11(%rsp),%al
   15b51:	b9 01 00 00 00       	mov    $0x1,%ecx
   15b56:	3c 0f                	cmp    $0xf,%al
   15b58:	0f 84 e2 00 00 00    	je     15c40 <std::io::Write::write_all_vectored+0x1c0>
   15b5e:	e9 d8 01 00 00       	jmpq   15d3b <std::io::Write::write_all_vectored+0x2bb>
   15b63:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   15b6a:	00 00 00 
   15b6d:	0f 1f 00             	nopl   (%rax)
   15b70:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
   15b75:	48 85 db             	test   %rbx,%rbx
   15b78:	0f 84 1a 01 00 00    	je     15c98 <std::io::Write::write_all_vectored+0x218>
   15b7e:	49 89 e8             	mov    %rbp,%r8
   15b81:	4c 89 ea             	mov    %r13,%rdx
   15b84:	48 c1 e2 04          	shl    $0x4,%rdx
   15b88:	48 83 c2 f0          	add    $0xfffffffffffffff0,%rdx
   15b8c:	48 c1 ea 04          	shr    $0x4,%rdx
   15b90:	48 83 c2 01          	add    $0x1,%rdx
   15b94:	49 8d 77 08          	lea    0x8(%r15),%rsi
   15b98:	31 ff                	xor    %edi,%edi
   15b9a:	31 ed                	xor    %ebp,%ebp
   15b9c:	0f 1f 40 00          	nopl   0x0(%rax)
   15ba0:	48 8b 06             	mov    (%rsi),%rax
   15ba3:	48 01 e8             	add    %rbp,%rax
   15ba6:	48 39 d8             	cmp    %rbx,%rax
   15ba9:	77 16                	ja     15bc1 <std::io::Write::write_all_vectored+0x141>
   15bab:	48 83 c7 01          	add    $0x1,%rdi
   15baf:	48 83 c6 10          	add    $0x10,%rsi
   15bb3:	48 89 c5             	mov    %rax,%rbp
   15bb6:	48 39 fa             	cmp    %rdi,%rdx
   15bb9:	75 e5                	jne    15ba0 <std::io::Write::write_all_vectored+0x120>
   15bbb:	48 89 c5             	mov    %rax,%rbp
   15bbe:	48 89 d7             	mov    %rdx,%rdi
   15bc1:	49 39 fd             	cmp    %rdi,%r13
   15bc4:	0f 82 b3 01 00 00    	jb     15d7d <std::io::Write::write_all_vectored+0x2fd>
   15bca:	48 89 fe             	mov    %rdi,%rsi
   15bcd:	48 c1 e6 04          	shl    $0x4,%rsi
   15bd1:	49 8d 14 37          	lea    (%r15,%rsi,1),%rdx
   15bd5:	49 29 fd             	sub    %rdi,%r13
   15bd8:	74 28                	je     15c02 <std::io::Write::write_all_vectored+0x182>
   15bda:	48 29 eb             	sub    %rbp,%rbx
   15bdd:	49 8b 44 37 08       	mov    0x8(%r15,%rsi,1),%rax
   15be2:	48 29 d8             	sub    %rbx,%rax
   15be5:	0f 82 a4 01 00 00    	jb     15d8f <std::io::Write::write_all_vectored+0x30f>
   15beb:	49 8d 0c 37          	lea    (%r15,%rsi,1),%rcx
   15bef:	48 83 c1 08          	add    $0x8,%rcx
   15bf3:	48 89 01             	mov    %rax,(%rcx)
   15bf6:	48 01 1a             	add    %rbx,(%rdx)
   15bf9:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   15bfe:	8a 5c 24 10          	mov    0x10(%rsp),%bl
   15c02:	49 89 d7             	mov    %rdx,%r15
   15c05:	4c 89 c5             	mov    %r8,%rbp
   15c08:	eb 36                	jmp    15c40 <std::io::Write::write_all_vectored+0x1c0>
   15c0a:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   15c0f:	8a 40 10             	mov    0x10(%rax),%al
   15c12:	b9 01 00 00 00       	mov    $0x1,%ecx
   15c17:	3c 0f                	cmp    $0xf,%al
   15c19:	74 25                	je     15c40 <std::io::Write::write_all_vectored+0x1c0>
   15c1b:	e9 1b 01 00 00       	jmpq   15d3b <std::io::Write::write_all_vectored+0x2bb>
   15c20:	8b 7c 24 14          	mov    0x14(%rsp),%edi
   15c24:	e8 07 67 00 00       	callq  1c330 <std::sys::unix::decode_error_kind>
   15c29:	b9 01 00 00 00       	mov    $0x1,%ecx
   15c2e:	3c 0f                	cmp    $0xf,%al
   15c30:	0f 85 05 01 00 00    	jne    15d3b <std::io::Write::write_all_vectored+0x2bb>
   15c36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   15c3d:	00 00 00 
   15c40:	48 85 c9             	test   %rcx,%rcx
   15c43:	0f 84 c6 fe ff ff    	je     15b0f <std::io::Write::write_all_vectored+0x8f>
   15c49:	80 fb 02             	cmp    $0x2,%bl
   15c4c:	0f 82 bd fe ff ff    	jb     15b0f <std::io::Write::write_all_vectored+0x8f>
   15c52:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   15c57:	48 8b 3b             	mov    (%rbx),%rdi
   15c5a:	48 8b 43 08          	mov    0x8(%rbx),%rax
   15c5e:	ff 10                	callq  *(%rax)
   15c60:	48 8b 43 08          	mov    0x8(%rbx),%rax
   15c64:	48 8b 70 08          	mov    0x8(%rax),%rsi
   15c68:	48 85 f6             	test   %rsi,%rsi
   15c6b:	0f 84 8f fe ff ff    	je     15b00 <std::io::Write::write_all_vectored+0x80>
   15c71:	48 8b 3b             	mov    (%rbx),%rdi
   15c74:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15c78:	ff d5                	callq  *%rbp
   15c7a:	e9 81 fe ff ff       	jmpq   15b00 <std::io::Write::write_all_vectored+0x80>
   15c7f:	31 ff                	xor    %edi,%edi
   15c81:	b1 03                	mov    $0x3,%cl
   15c83:	49 29 fd             	sub    %rdi,%r13
   15c86:	0f 85 5e fe ff ff    	jne    15aea <std::io::Write::write_all_vectored+0x6a>
   15c8c:	e9 cb 00 00 00       	jmpq   15d5c <std::io::Write::write_all_vectored+0x2dc>
   15c91:	b1 03                	mov    $0x3,%cl
   15c93:	e9 c4 00 00 00       	jmpq   15d5c <std::io::Write::write_all_vectored+0x2dc>
   15c98:	bf 1c 00 00 00       	mov    $0x1c,%edi
   15c9d:	be 01 00 00 00       	mov    $0x1,%esi
   15ca2:	ff 15 d8 fe 02 00    	callq  *0x2fed8(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   15ca8:	48 85 c0             	test   %rax,%rax
   15cab:	0f 84 0a 01 00 00    	je     15dbb <std::io::Write::write_all_vectored+0x33b>
   15cb1:	49 89 c6             	mov    %rax,%r14
   15cb4:	0f 10 05 5f 20 02 00 	movups 0x2205f(%rip),%xmm0        # 37d1a <str.6+0x9fa>
   15cbb:	0f 11 40 0c          	movups %xmm0,0xc(%rax)
   15cbf:	0f 10 05 48 20 02 00 	movups 0x22048(%rip),%xmm0        # 37d0e <str.6+0x9ee>
   15cc6:	0f 11 00             	movups %xmm0,(%rax)
   15cc9:	bf 18 00 00 00       	mov    $0x18,%edi
   15cce:	be 08 00 00 00       	mov    $0x8,%esi
   15cd3:	ff 15 a7 fe 02 00    	callq  *0x2fea7(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   15cd9:	48 85 c0             	test   %rax,%rax
   15cdc:	0f 84 c7 00 00 00    	je     15da9 <std::io::Write::write_all_vectored+0x329>
   15ce2:	48 89 c3             	mov    %rax,%rbx
   15ce5:	4c 89 30             	mov    %r14,(%rax)
   15ce8:	0f 28 05 91 04 02 00 	movaps 0x20491(%rip),%xmm0        # 36180 <_fini+0x85c>
   15cef:	0f 11 40 08          	movups %xmm0,0x8(%rax)
   15cf3:	bf 18 00 00 00       	mov    $0x18,%edi
   15cf8:	be 08 00 00 00       	mov    $0x8,%esi
   15cfd:	ff 15 7d fe 02 00    	callq  *0x2fe7d(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   15d03:	48 85 c0             	test   %rax,%rax
   15d06:	0f 84 9d 00 00 00    	je     15da9 <std::io::Write::write_all_vectored+0x329>
   15d0c:	48 89 18             	mov    %rbx,(%rax)
   15d0f:	48 8d 0d 6a de 02 00 	lea    0x2de6a(%rip),%rcx        # 43b80 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x648>
   15d16:	48 89 48 08          	mov    %rcx,0x8(%rax)
   15d1a:	c6 40 10 0e          	movb   $0xe,0x10(%rax)
   15d1e:	8b 4c 24 21          	mov    0x21(%rsp),%ecx
   15d22:	8b 54 24 24          	mov    0x24(%rsp),%edx
   15d26:	89 48 11             	mov    %ecx,0x11(%rax)
   15d29:	89 50 14             	mov    %edx,0x14(%rax)
   15d2c:	48 89 c2             	mov    %rax,%rdx
   15d2f:	48 c1 ea 08          	shr    $0x8,%rdx
   15d33:	48 c1 e0 38          	shl    $0x38,%rax
   15d37:	b3 02                	mov    $0x2,%bl
   15d39:	eb 1f                	jmp    15d5a <std::io::Write::write_all_vectored+0x2da>
   15d3b:	0f b6 44 24 1f       	movzbl 0x1f(%rsp),%eax
   15d40:	c1 e0 10             	shl    $0x10,%eax
   15d43:	0f b7 4c 24 1d       	movzwl 0x1d(%rsp),%ecx
   15d48:	09 c1                	or     %eax,%ecx
   15d4a:	48 c1 e1 20          	shl    $0x20,%rcx
   15d4e:	8b 54 24 19          	mov    0x19(%rsp),%edx
   15d52:	48 09 ca             	or     %rcx,%rdx
   15d55:	48 8b 44 24 11       	mov    0x11(%rsp),%rax
   15d5a:	89 d9                	mov    %ebx,%ecx
   15d5c:	48 0f a4 c2 08       	shld   $0x8,%rax,%rdx
   15d61:	48 c1 e0 08          	shl    $0x8,%rax
   15d65:	0f b6 c9             	movzbl %cl,%ecx
   15d68:	48 09 c1             	or     %rax,%rcx
   15d6b:	48 89 c8             	mov    %rcx,%rax
   15d6e:	48 83 c4 28          	add    $0x28,%rsp
   15d72:	5b                   	pop    %rbx
   15d73:	41 5c                	pop    %r12
   15d75:	41 5d                	pop    %r13
   15d77:	41 5e                	pop    %r14
   15d79:	41 5f                	pop    %r15
   15d7b:	5d                   	pop    %rbp
   15d7c:	c3                   	retq   
   15d7d:	48 8d 15 ec df 02 00 	lea    0x2dfec(%rip),%rdx        # 43d70 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x838>
   15d84:	4c 89 ee             	mov    %r13,%rsi
   15d87:	ff 15 63 00 03 00    	callq  *0x30063(%rip)        # 45df0 <_GLOBAL_OFFSET_TABLE_+0x468>
   15d8d:	0f 0b                	ud2    
   15d8f:	48 8d 3d 67 25 02 00 	lea    0x22567(%rip),%rdi        # 382fd <str.6+0xfdd>
   15d96:	48 8d 15 b3 e7 02 00 	lea    0x2e7b3(%rip),%rdx        # 44550 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1018>
   15d9d:	be 23 00 00 00       	mov    $0x23,%esi
   15da2:	e8 59 47 00 00       	callq  1a500 <std::panicking::begin_panic>
   15da7:	0f 0b                	ud2    
   15da9:	bf 18 00 00 00       	mov    $0x18,%edi
   15dae:	be 08 00 00 00       	mov    $0x8,%esi
   15db3:	ff 15 67 fd 02 00    	callq  *0x2fd67(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   15db9:	0f 0b                	ud2    
   15dbb:	bf 1c 00 00 00       	mov    $0x1c,%edi
   15dc0:	be 01 00 00 00       	mov    $0x1,%esi
   15dc5:	ff 15 55 fd 02 00    	callq  *0x2fd55(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   15dcb:	0f 0b                	ud2    
   15dcd:	49 89 c6             	mov    %rax,%r14
   15dd0:	48 8b 3b             	mov    (%rbx),%rdi
   15dd3:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   15dd7:	e8 f4 3b ff ff       	callq  99d0 <alloc::alloc::box_free>
   15ddc:	48 89 df             	mov    %rbx,%rdi
   15ddf:	e8 0c 3c ff ff       	callq  99f0 <alloc::alloc::box_free>
   15de4:	4c 89 f7             	mov    %r14,%rdi
   15de7:	e8 64 f2 fe ff       	callq  5050 <_Unwind_Resume@plt>
   15dec:	0f 0b                	ud2    
   15dee:	66 90                	xchg   %ax,%ax

0000000000015df0 <std::io::Write::write_all_vectored>:
   15df0:	55                   	push   %rbp
   15df1:	41 57                	push   %r15
   15df3:	41 56                	push   %r14
   15df5:	41 55                	push   %r13
   15df7:	41 54                	push   %r12
   15df9:	53                   	push   %rbx
   15dfa:	48 83 ec 28          	sub    $0x28,%rsp
   15dfe:	49 89 d7             	mov    %rdx,%r15
   15e01:	48 89 f5             	mov    %rsi,%rbp
   15e04:	48 85 d2             	test   %rdx,%rdx
   15e07:	0f 84 b8 01 00 00    	je     15fc5 <std::io::Write::write_all_vectored+0x1d5>
   15e0d:	4c 89 f8             	mov    %r15,%rax
   15e10:	48 c1 e0 04          	shl    $0x4,%rax
   15e14:	48 83 c0 f0          	add    $0xfffffffffffffff0,%rax
   15e18:	48 c1 e8 04          	shr    $0x4,%rax
   15e1c:	48 83 c0 01          	add    $0x1,%rax
   15e20:	48 8d 4d 08          	lea    0x8(%rbp),%rcx
   15e24:	31 ff                	xor    %edi,%edi
   15e26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   15e2d:	00 00 00 
   15e30:	48 83 39 00          	cmpq   $0x0,(%rcx)
   15e34:	75 10                	jne    15e46 <std::io::Write::write_all_vectored+0x56>
   15e36:	48 83 c7 01          	add    $0x1,%rdi
   15e3a:	48 83 c1 10          	add    $0x10,%rcx
   15e3e:	48 39 f8             	cmp    %rdi,%rax
   15e41:	75 ed                	jne    15e30 <std::io::Write::write_all_vectored+0x40>
   15e43:	48 89 c7             	mov    %rax,%rdi
   15e46:	4c 39 ff             	cmp    %r15,%rdi
   15e49:	0f 87 5a 02 00 00    	ja     160a9 <std::io::Write::write_all_vectored+0x2b9>
   15e4f:	b1 03                	mov    $0x3,%cl
   15e51:	49 29 ff             	sub    %rdi,%r15
   15e54:	0f 84 78 01 00 00    	je     15fd2 <std::io::Write::write_all_vectored+0x1e2>
   15e5a:	48 c1 e7 04          	shl    $0x4,%rdi
   15e5e:	48 01 fd             	add    %rdi,%rbp
   15e61:	4c 8b 2d f8 fb 02 00 	mov    0x2fbf8(%rip),%r13        # 45a60 <writev@GLIBC_2.2.5>
   15e68:	4c 8d 25 d1 f5 fe ff 	lea    -0x10a2f(%rip),%r12        # 5440 <__rust_dealloc>
   15e6f:	eb 44                	jmp    15eb5 <std::io::Write::write_all_vectored+0xc5>
   15e71:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   15e78:	00 00 00 
   15e7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   15e80:	ff 15 92 fb 02 00    	callq  *0x2fb92(%rip)        # 45a18 <__errno_location@GLIBC_2.2.5>
   15e86:	8b 18                	mov    (%rax),%ebx
   15e88:	48 89 d8             	mov    %rbx,%rax
   15e8b:	48 c1 e0 20          	shl    $0x20,%rax
   15e8f:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   15e94:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   15e9b:	00 00 
   15e9d:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   15ea4:	00 00 
   15ea6:	89 df                	mov    %ebx,%edi
   15ea8:	e8 83 64 00 00       	callq  1c330 <std::sys::unix::decode_error_kind>
   15ead:	3c 0f                	cmp    $0xf,%al
   15eaf:	0f 85 c9 01 00 00    	jne    1607e <std::io::Write::write_all_vectored+0x28e>
   15eb5:	49 81 ff 00 04 00 00 	cmp    $0x400,%r15
   15ebc:	ba 00 04 00 00       	mov    $0x400,%edx
   15ec1:	41 0f 42 d7          	cmovb  %r15d,%edx
   15ec5:	bf 02 00 00 00       	mov    $0x2,%edi
   15eca:	48 89 ee             	mov    %rbp,%rsi
   15ecd:	41 ff d5             	callq  *%r13
   15ed0:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   15ed4:	74 aa                	je     15e80 <std::io::Write::write_all_vectored+0x90>
   15ed6:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   15edb:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   15ee2:	00 00 
   15ee4:	48 85 c0             	test   %rax,%rax
   15ee7:	0f 84 ea 00 00 00    	je     15fd7 <std::io::Write::write_all_vectored+0x1e7>
   15eed:	4c 89 f9             	mov    %r15,%rcx
   15ef0:	48 c1 e1 04          	shl    $0x4,%rcx
   15ef4:	48 83 c1 f0          	add    $0xfffffffffffffff0,%rcx
   15ef8:	48 c1 e9 04          	shr    $0x4,%rcx
   15efc:	48 83 c1 01          	add    $0x1,%rcx
   15f00:	48 8d 75 08          	lea    0x8(%rbp),%rsi
   15f04:	31 ff                	xor    %edi,%edi
   15f06:	31 db                	xor    %ebx,%ebx
   15f08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   15f0f:	00 
   15f10:	48 8b 16             	mov    (%rsi),%rdx
   15f13:	48 01 da             	add    %rbx,%rdx
   15f16:	48 39 c2             	cmp    %rax,%rdx
   15f19:	77 16                	ja     15f31 <std::io::Write::write_all_vectored+0x141>
   15f1b:	48 83 c7 01          	add    $0x1,%rdi
   15f1f:	48 83 c6 10          	add    $0x10,%rsi
   15f23:	48 89 d3             	mov    %rdx,%rbx
   15f26:	48 39 f9             	cmp    %rdi,%rcx
   15f29:	75 e5                	jne    15f10 <std::io::Write::write_all_vectored+0x120>
   15f2b:	48 89 d3             	mov    %rdx,%rbx
   15f2e:	48 89 cf             	mov    %rcx,%rdi
   15f31:	49 39 ff             	cmp    %rdi,%r15
   15f34:	0f 82 6f 01 00 00    	jb     160a9 <std::io::Write::write_all_vectored+0x2b9>
   15f3a:	49 29 ff             	sub    %rdi,%r15
   15f3d:	0f 84 37 01 00 00    	je     1607a <std::io::Write::write_all_vectored+0x28a>
   15f43:	48 c1 e7 04          	shl    $0x4,%rdi
   15f47:	48 29 d8             	sub    %rbx,%rax
   15f4a:	48 8b 4c 3d 08       	mov    0x8(%rbp,%rdi,1),%rcx
   15f4f:	48 29 c1             	sub    %rax,%rcx
   15f52:	0f 82 63 01 00 00    	jb     160bb <std::io::Write::write_all_vectored+0x2cb>
   15f58:	4c 8d 34 2f          	lea    (%rdi,%rbp,1),%r14
   15f5c:	48 8d 14 2f          	lea    (%rdi,%rbp,1),%rdx
   15f60:	48 83 c2 08          	add    $0x8,%rdx
   15f64:	48 89 0a             	mov    %rcx,(%rdx)
   15f67:	49 01 06             	add    %rax,(%r14)
   15f6a:	83 7c 24 08 01       	cmpl   $0x1,0x8(%rsp)
   15f6f:	75 4c                	jne    15fbd <std::io::Write::write_all_vectored+0x1cd>
   15f71:	80 7c 24 10 02       	cmpb   $0x2,0x10(%rsp)
   15f76:	72 3d                	jb     15fb5 <std::io::Write::write_all_vectored+0x1c5>
   15f78:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   15f7d:	48 8b 3b             	mov    (%rbx),%rdi
   15f80:	48 8b 43 08          	mov    0x8(%rbx),%rax
   15f84:	ff 10                	callq  *(%rax)
   15f86:	48 8b 43 08          	mov    0x8(%rbx),%rax
   15f8a:	48 8b 70 08          	mov    0x8(%rax),%rsi
   15f8e:	48 85 f6             	test   %rsi,%rsi
   15f91:	74 0a                	je     15f9d <std::io::Write::write_all_vectored+0x1ad>
   15f93:	48 8b 3b             	mov    (%rbx),%rdi
   15f96:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15f9a:	41 ff d4             	callq  *%r12
   15f9d:	be 18 00 00 00       	mov    $0x18,%esi
   15fa2:	ba 08 00 00 00       	mov    $0x8,%edx
   15fa7:	48 89 df             	mov    %rbx,%rdi
   15faa:	41 ff d4             	callq  *%r12
   15fad:	4c 89 f5             	mov    %r14,%rbp
   15fb0:	e9 00 ff ff ff       	jmpq   15eb5 <std::io::Write::write_all_vectored+0xc5>
   15fb5:	4c 89 f5             	mov    %r14,%rbp
   15fb8:	e9 f8 fe ff ff       	jmpq   15eb5 <std::io::Write::write_all_vectored+0xc5>
   15fbd:	4c 89 f5             	mov    %r14,%rbp
   15fc0:	e9 f0 fe ff ff       	jmpq   15eb5 <std::io::Write::write_all_vectored+0xc5>
   15fc5:	31 ff                	xor    %edi,%edi
   15fc7:	b1 03                	mov    $0x3,%cl
   15fc9:	49 29 ff             	sub    %rdi,%r15
   15fcc:	0f 85 88 fe ff ff    	jne    15e5a <std::io::Write::write_all_vectored+0x6a>
   15fd2:	e9 b1 00 00 00       	jmpq   16088 <std::io::Write::write_all_vectored+0x298>
   15fd7:	bf 1c 00 00 00       	mov    $0x1c,%edi
   15fdc:	be 01 00 00 00       	mov    $0x1,%esi
   15fe1:	ff 15 99 fb 02 00    	callq  *0x2fb99(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   15fe7:	48 85 c0             	test   %rax,%rax
   15fea:	0f 84 f7 00 00 00    	je     160e7 <std::io::Write::write_all_vectored+0x2f7>
   15ff0:	49 89 c6             	mov    %rax,%r14
   15ff3:	0f 10 05 20 1d 02 00 	movups 0x21d20(%rip),%xmm0        # 37d1a <str.6+0x9fa>
   15ffa:	0f 11 40 0c          	movups %xmm0,0xc(%rax)
   15ffe:	0f 10 05 09 1d 02 00 	movups 0x21d09(%rip),%xmm0        # 37d0e <str.6+0x9ee>
   16005:	0f 11 00             	movups %xmm0,(%rax)
   16008:	bf 18 00 00 00       	mov    $0x18,%edi
   1600d:	be 08 00 00 00       	mov    $0x8,%esi
   16012:	ff 15 68 fb 02 00    	callq  *0x2fb68(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   16018:	48 85 c0             	test   %rax,%rax
   1601b:	0f 84 b4 00 00 00    	je     160d5 <std::io::Write::write_all_vectored+0x2e5>
   16021:	48 89 c3             	mov    %rax,%rbx
   16024:	4c 89 30             	mov    %r14,(%rax)
   16027:	0f 28 05 52 01 02 00 	movaps 0x20152(%rip),%xmm0        # 36180 <_fini+0x85c>
   1602e:	0f 11 40 08          	movups %xmm0,0x8(%rax)
   16032:	bf 18 00 00 00       	mov    $0x18,%edi
   16037:	be 08 00 00 00       	mov    $0x8,%esi
   1603c:	ff 15 3e fb 02 00    	callq  *0x2fb3e(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   16042:	48 85 c0             	test   %rax,%rax
   16045:	0f 84 8a 00 00 00    	je     160d5 <std::io::Write::write_all_vectored+0x2e5>
   1604b:	48 89 18             	mov    %rbx,(%rax)
   1604e:	48 8d 0d 2b db 02 00 	lea    0x2db2b(%rip),%rcx        # 43b80 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x648>
   16055:	48 89 48 08          	mov    %rcx,0x8(%rax)
   16059:	c6 40 10 0e          	movb   $0xe,0x10(%rax)
   1605d:	8b 4c 24 21          	mov    0x21(%rsp),%ecx
   16061:	8b 54 24 24          	mov    0x24(%rsp),%edx
   16065:	89 48 11             	mov    %ecx,0x11(%rax)
   16068:	89 50 14             	mov    %edx,0x14(%rax)
   1606b:	48 89 c2             	mov    %rax,%rdx
   1606e:	48 c1 ea 08          	shr    $0x8,%rdx
   16072:	48 c1 e0 38          	shl    $0x38,%rax
   16076:	b1 02                	mov    $0x2,%cl
   16078:	eb 0e                	jmp    16088 <std::io::Write::write_all_vectored+0x298>
   1607a:	b1 03                	mov    $0x3,%cl
   1607c:	eb 0a                	jmp    16088 <std::io::Write::write_all_vectored+0x298>
   1607e:	89 d8                	mov    %ebx,%eax
   16080:	48 c1 e0 18          	shl    $0x18,%rax
   16084:	31 d2                	xor    %edx,%edx
   16086:	31 c9                	xor    %ecx,%ecx
   16088:	48 0f a4 c2 08       	shld   $0x8,%rax,%rdx
   1608d:	48 c1 e0 08          	shl    $0x8,%rax
   16091:	0f b6 c9             	movzbl %cl,%ecx
   16094:	48 09 c1             	or     %rax,%rcx
   16097:	48 89 c8             	mov    %rcx,%rax
   1609a:	48 83 c4 28          	add    $0x28,%rsp
   1609e:	5b                   	pop    %rbx
   1609f:	41 5c                	pop    %r12
   160a1:	41 5d                	pop    %r13
   160a3:	41 5e                	pop    %r14
   160a5:	41 5f                	pop    %r15
   160a7:	5d                   	pop    %rbp
   160a8:	c3                   	retq   
   160a9:	48 8d 15 c0 dc 02 00 	lea    0x2dcc0(%rip),%rdx        # 43d70 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x838>
   160b0:	4c 89 fe             	mov    %r15,%rsi
   160b3:	ff 15 37 fd 02 00    	callq  *0x2fd37(%rip)        # 45df0 <_GLOBAL_OFFSET_TABLE_+0x468>
   160b9:	0f 0b                	ud2    
   160bb:	48 8d 3d 3b 22 02 00 	lea    0x2223b(%rip),%rdi        # 382fd <str.6+0xfdd>
   160c2:	48 8d 15 87 e4 02 00 	lea    0x2e487(%rip),%rdx        # 44550 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1018>
   160c9:	be 23 00 00 00       	mov    $0x23,%esi
   160ce:	e8 2d 44 00 00       	callq  1a500 <std::panicking::begin_panic>
   160d3:	0f 0b                	ud2    
   160d5:	bf 18 00 00 00       	mov    $0x18,%edi
   160da:	be 08 00 00 00       	mov    $0x8,%esi
   160df:	ff 15 3b fa 02 00    	callq  *0x2fa3b(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   160e5:	0f 0b                	ud2    
   160e7:	bf 1c 00 00 00       	mov    $0x1c,%edi
   160ec:	be 01 00 00 00       	mov    $0x1,%esi
   160f1:	ff 15 29 fa 02 00    	callq  *0x2fa29(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   160f7:	0f 0b                	ud2    
   160f9:	49 89 c6             	mov    %rax,%r14
   160fc:	48 8b 3b             	mov    (%rbx),%rdi
   160ff:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   16103:	e8 c8 38 ff ff       	callq  99d0 <alloc::alloc::box_free>
   16108:	48 89 df             	mov    %rbx,%rdi
   1610b:	e8 e0 38 ff ff       	callq  99f0 <alloc::alloc::box_free>
   16110:	4c 89 f7             	mov    %r14,%rdi
   16113:	e8 38 ef fe ff       	callq  5050 <_Unwind_Resume@plt>
   16118:	0f 0b                	ud2    
   1611a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000016120 <std::io::Write::write_fmt>:
   16120:	41 56                	push   %r14
   16122:	53                   	push   %rbx
   16123:	48 83 ec 58          	sub    $0x58,%rsp
   16127:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   1612c:	c6 44 24 10 03       	movb   $0x3,0x10(%rsp)
   16131:	0f 10 06             	movups (%rsi),%xmm0
   16134:	0f 10 4e 10          	movups 0x10(%rsi),%xmm1
   16138:	0f 10 56 20          	movups 0x20(%rsi),%xmm2
   1613c:	0f 29 54 24 40       	movaps %xmm2,0x40(%rsp)
   16141:	0f 29 4c 24 30       	movaps %xmm1,0x30(%rsp)
   16146:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   1614b:	48 8d 35 7e dc 02 00 	lea    0x2dc7e(%rip),%rsi        # 43dd0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x898>
   16152:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   16157:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
   1615c:	ff 15 96 fc 02 00    	callq  *0x2fc96(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x470>
   16162:	8a 54 24 10          	mov    0x10(%rsp),%dl
   16166:	84 c0                	test   %al,%al
   16168:	0f 84 af 00 00 00    	je     1621d <std::io::Write::write_fmt+0xfd>
   1616e:	80 fa 03             	cmp    $0x3,%dl
   16171:	0f 85 f1 00 00 00    	jne    16268 <std::io::Write::write_fmt+0x148>
   16177:	bf 0f 00 00 00       	mov    $0xf,%edi
   1617c:	be 01 00 00 00       	mov    $0x1,%esi
   16181:	ff 15 f9 f9 02 00    	callq  *0x2f9f9(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   16187:	48 85 c0             	test   %rax,%rax
   1618a:	0f 84 25 01 00 00    	je     162b5 <std::io::Write::write_fmt+0x195>
   16190:	49 89 c6             	mov    %rax,%r14
   16193:	48 8b 05 e6 1b 02 00 	mov    0x21be6(%rip),%rax        # 37d80 <str.6+0xa60>
   1619a:	49 89 46 07          	mov    %rax,0x7(%r14)
   1619e:	48 8b 05 d4 1b 02 00 	mov    0x21bd4(%rip),%rax        # 37d79 <str.6+0xa59>
   161a5:	49 89 06             	mov    %rax,(%r14)
   161a8:	bf 18 00 00 00       	mov    $0x18,%edi
   161ad:	be 08 00 00 00       	mov    $0x8,%esi
   161b2:	ff 15 c8 f9 02 00    	callq  *0x2f9c8(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   161b8:	48 85 c0             	test   %rax,%rax
   161bb:	0f 84 e2 00 00 00    	je     162a3 <std::io::Write::write_fmt+0x183>
   161c1:	48 89 c3             	mov    %rax,%rbx
   161c4:	4c 89 30             	mov    %r14,(%rax)
   161c7:	0f 28 05 c2 ff 01 00 	movaps 0x1ffc2(%rip),%xmm0        # 36190 <_fini+0x86c>
   161ce:	0f 11 40 08          	movups %xmm0,0x8(%rax)
   161d2:	bf 18 00 00 00       	mov    $0x18,%edi
   161d7:	be 08 00 00 00       	mov    $0x8,%esi
   161dc:	ff 15 9e f9 02 00    	callq  *0x2f99e(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   161e2:	48 85 c0             	test   %rax,%rax
   161e5:	0f 84 b8 00 00 00    	je     162a3 <std::io::Write::write_fmt+0x183>
   161eb:	48 89 c1             	mov    %rax,%rcx
   161ee:	48 89 18             	mov    %rbx,(%rax)
   161f1:	48 8d 05 88 d9 02 00 	lea    0x2d988(%rip),%rax        # 43b80 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x648>
   161f8:	48 89 41 08          	mov    %rax,0x8(%rcx)
   161fc:	c6 41 10 10          	movb   $0x10,0x10(%rcx)
   16200:	8b 44 24 20          	mov    0x20(%rsp),%eax
   16204:	8b 54 24 23          	mov    0x23(%rsp),%edx
   16208:	89 41 11             	mov    %eax,0x11(%rcx)
   1620b:	89 51 14             	mov    %edx,0x14(%rcx)
   1620e:	48 89 ce             	mov    %rcx,%rsi
   16211:	48 c1 ee 08          	shr    $0x8,%rsi
   16215:	48 c1 e1 38          	shl    $0x38,%rcx
   16219:	b3 02                	mov    $0x2,%bl
   1621b:	eb 6c                	jmp    16289 <std::io::Write::write_fmt+0x169>
   1621d:	b3 03                	mov    $0x3,%bl
   1621f:	80 fa 03             	cmp    $0x3,%dl
   16222:	77 05                	ja     16229 <std::io::Write::write_fmt+0x109>
   16224:	80 fa 02             	cmp    $0x2,%dl
   16227:	75 3d                	jne    16266 <std::io::Write::write_fmt+0x146>
   16229:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   1622e:	49 8b 3e             	mov    (%r14),%rdi
   16231:	49 8b 46 08          	mov    0x8(%r14),%rax
   16235:	ff 10                	callq  *(%rax)
   16237:	49 8b 46 08          	mov    0x8(%r14),%rax
   1623b:	48 8b 70 08          	mov    0x8(%rax),%rsi
   1623f:	48 85 f6             	test   %rsi,%rsi
   16242:	74 0d                	je     16251 <std::io::Write::write_fmt+0x131>
   16244:	49 8b 3e             	mov    (%r14),%rdi
   16247:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1624b:	ff 15 a7 f9 02 00    	callq  *0x2f9a7(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   16251:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   16256:	be 18 00 00 00       	mov    $0x18,%esi
   1625b:	ba 08 00 00 00       	mov    $0x8,%edx
   16260:	ff 15 92 f9 02 00    	callq  *0x2f992(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   16266:	eb 21                	jmp    16289 <std::io::Write::write_fmt+0x169>
   16268:	0f b6 44 24 1f       	movzbl 0x1f(%rsp),%eax
   1626d:	c1 e0 10             	shl    $0x10,%eax
   16270:	0f b7 4c 24 1d       	movzwl 0x1d(%rsp),%ecx
   16275:	09 c1                	or     %eax,%ecx
   16277:	48 c1 e1 20          	shl    $0x20,%rcx
   1627b:	8b 74 24 19          	mov    0x19(%rsp),%esi
   1627f:	48 09 ce             	or     %rcx,%rsi
   16282:	48 8b 4c 24 11       	mov    0x11(%rsp),%rcx
   16287:	89 d3                	mov    %edx,%ebx
   16289:	48 0f a4 ce 08       	shld   $0x8,%rcx,%rsi
   1628e:	48 c1 e1 08          	shl    $0x8,%rcx
   16292:	0f b6 c3             	movzbl %bl,%eax
   16295:	48 09 c8             	or     %rcx,%rax
   16298:	48 89 f2             	mov    %rsi,%rdx
   1629b:	48 83 c4 58          	add    $0x58,%rsp
   1629f:	5b                   	pop    %rbx
   162a0:	41 5e                	pop    %r14
   162a2:	c3                   	retq   
   162a3:	bf 18 00 00 00       	mov    $0x18,%edi
   162a8:	be 08 00 00 00       	mov    $0x8,%esi
   162ad:	ff 15 6d f8 02 00    	callq  *0x2f86d(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   162b3:	0f 0b                	ud2    
   162b5:	bf 0f 00 00 00       	mov    $0xf,%edi
   162ba:	be 01 00 00 00       	mov    $0x1,%esi
   162bf:	ff 15 5b f8 02 00    	callq  *0x2f85b(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   162c5:	0f 0b                	ud2    
   162c7:	48 89 c3             	mov    %rax,%rbx
   162ca:	49 8b 3e             	mov    (%r14),%rdi
   162cd:	49 8b 76 08          	mov    0x8(%r14),%rsi
   162d1:	e8 fa 36 ff ff       	callq  99d0 <alloc::alloc::box_free>
   162d6:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   162db:	e8 10 37 ff ff       	callq  99f0 <alloc::alloc::box_free>
   162e0:	eb 0d                	jmp    162ef <std::io::Write::write_fmt+0x1cf>
   162e2:	48 89 c3             	mov    %rax,%rbx
   162e5:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   162ea:	e8 a1 ff fe ff       	callq  6290 <core::ptr::drop_in_place>
   162ef:	48 89 df             	mov    %rbx,%rdi
   162f2:	e8 59 ed fe ff       	callq  5050 <_Unwind_Resume@plt>
   162f7:	0f 0b                	ud2    
   162f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000016300 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str>:
   16300:	55                   	push   %rbp
   16301:	41 57                	push   %r15
   16303:	41 56                	push   %r14
   16305:	41 55                	push   %r13
   16307:	41 54                	push   %r12
   16309:	53                   	push   %rbx
   1630a:	50                   	push   %rax
   1630b:	48 89 fb             	mov    %rdi,%rbx
   1630e:	48 8b 3f             	mov    (%rdi),%rdi
   16311:	ff 15 51 f8 02 00    	callq  *0x2f851(%rip)        # 45b68 <_GLOBAL_OFFSET_TABLE_+0x1e0>
   16317:	49 89 c6             	mov    %rax,%r14
   1631a:	41 80 fe 03          	cmp    $0x3,%r14b
   1631e:	75 04                	jne    16324 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str+0x24>
   16320:	31 c0                	xor    %eax,%eax
   16322:	eb 78                	jmp    1639c <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str+0x9c>
   16324:	44 89 f5             	mov    %r14d,%ebp
   16327:	49 89 d4             	mov    %rdx,%r12
   1632a:	49 c1 ec 08          	shr    $0x8,%r12
   1632e:	49 0f ac d6 08       	shrd   $0x8,%rdx,%r14
   16333:	8a 43 08             	mov    0x8(%rbx),%al
   16336:	3c 03                	cmp    $0x3,%al
   16338:	77 04                	ja     1633e <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str+0x3e>
   1633a:	3c 02                	cmp    $0x2,%al
   1633c:	75 3d                	jne    1637b <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str+0x7b>
   1633e:	4c 8b 6b 10          	mov    0x10(%rbx),%r13
   16342:	49 8b 7d 00          	mov    0x0(%r13),%rdi
   16346:	49 8b 45 08          	mov    0x8(%r13),%rax
   1634a:	ff 10                	callq  *(%rax)
   1634c:	49 8b 45 08          	mov    0x8(%r13),%rax
   16350:	48 8b 70 08          	mov    0x8(%rax),%rsi
   16354:	48 85 f6             	test   %rsi,%rsi
   16357:	74 0e                	je     16367 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str+0x67>
   16359:	49 8b 7d 00          	mov    0x0(%r13),%rdi
   1635d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16361:	ff 15 91 f8 02 00    	callq  *0x2f891(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   16367:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   1636b:	be 18 00 00 00       	mov    $0x18,%esi
   16370:	ba 08 00 00 00       	mov    $0x8,%edx
   16375:	ff 15 7d f8 02 00    	callq  *0x2f87d(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   1637b:	40 88 6b 08          	mov    %bpl,0x8(%rbx)
   1637f:	4c 89 73 09          	mov    %r14,0x9(%rbx)
   16383:	44 89 63 11          	mov    %r12d,0x11(%rbx)
   16387:	4c 89 e0             	mov    %r12,%rax
   1638a:	48 c1 e8 30          	shr    $0x30,%rax
   1638e:	88 43 17             	mov    %al,0x17(%rbx)
   16391:	49 c1 ec 20          	shr    $0x20,%r12
   16395:	66 44 89 63 15       	mov    %r12w,0x15(%rbx)
   1639a:	b0 01                	mov    $0x1,%al
   1639c:	48 83 c4 08          	add    $0x8,%rsp
   163a0:	5b                   	pop    %rbx
   163a1:	41 5c                	pop    %r12
   163a3:	41 5d                	pop    %r13
   163a5:	41 5e                	pop    %r14
   163a7:	41 5f                	pop    %r15
   163a9:	5d                   	pop    %rbp
   163aa:	c3                   	retq   
   163ab:	49 89 c7             	mov    %rax,%r15
   163ae:	49 8b 7d 00          	mov    0x0(%r13),%rdi
   163b2:	49 8b 75 08          	mov    0x8(%r13),%rsi
   163b6:	e8 15 36 ff ff       	callq  99d0 <alloc::alloc::box_free>
   163bb:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   163bf:	e8 2c 36 ff ff       	callq  99f0 <alloc::alloc::box_free>
   163c4:	40 88 6b 08          	mov    %bpl,0x8(%rbx)
   163c8:	4c 89 e0             	mov    %r12,%rax
   163cb:	48 c1 e8 30          	shr    $0x30,%rax
   163cf:	88 43 17             	mov    %al,0x17(%rbx)
   163d2:	4c 89 e0             	mov    %r12,%rax
   163d5:	48 c1 e8 20          	shr    $0x20,%rax
   163d9:	66 89 43 15          	mov    %ax,0x15(%rbx)
   163dd:	44 89 63 11          	mov    %r12d,0x11(%rbx)
   163e1:	4c 89 73 09          	mov    %r14,0x9(%rbx)
   163e5:	4c 89 ff             	mov    %r15,%rdi
   163e8:	e8 63 ec fe ff       	callq  5050 <_Unwind_Resume@plt>
   163ed:	0f 0b                	ud2    
   163ef:	90                   	nop

00000000000163f0 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str>:
   163f0:	55                   	push   %rbp
   163f1:	41 57                	push   %r15
   163f3:	41 56                	push   %r14
   163f5:	41 55                	push   %r13
   163f7:	41 54                	push   %r12
   163f9:	53                   	push   %rbx
   163fa:	50                   	push   %rax
   163fb:	48 89 fb             	mov    %rdi,%rbx
   163fe:	48 8b 3f             	mov    (%rdi),%rdi
   16401:	e8 3a f3 ff ff       	callq  15740 <std::io::Write::write_all>
   16406:	49 89 c6             	mov    %rax,%r14
   16409:	41 80 fe 03          	cmp    $0x3,%r14b
   1640d:	75 04                	jne    16413 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str+0x23>
   1640f:	31 c0                	xor    %eax,%eax
   16411:	eb 78                	jmp    1648b <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str+0x9b>
   16413:	44 89 f5             	mov    %r14d,%ebp
   16416:	49 89 d4             	mov    %rdx,%r12
   16419:	49 c1 ec 08          	shr    $0x8,%r12
   1641d:	49 0f ac d6 08       	shrd   $0x8,%rdx,%r14
   16422:	8a 43 08             	mov    0x8(%rbx),%al
   16425:	3c 03                	cmp    $0x3,%al
   16427:	77 04                	ja     1642d <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str+0x3d>
   16429:	3c 02                	cmp    $0x2,%al
   1642b:	75 3d                	jne    1646a <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str+0x7a>
   1642d:	4c 8b 6b 10          	mov    0x10(%rbx),%r13
   16431:	49 8b 7d 00          	mov    0x0(%r13),%rdi
   16435:	49 8b 45 08          	mov    0x8(%r13),%rax
   16439:	ff 10                	callq  *(%rax)
   1643b:	49 8b 45 08          	mov    0x8(%r13),%rax
   1643f:	48 8b 70 08          	mov    0x8(%rax),%rsi
   16443:	48 85 f6             	test   %rsi,%rsi
   16446:	74 0e                	je     16456 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str+0x66>
   16448:	49 8b 7d 00          	mov    0x0(%r13),%rdi
   1644c:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16450:	ff 15 a2 f7 02 00    	callq  *0x2f7a2(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   16456:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   1645a:	be 18 00 00 00       	mov    $0x18,%esi
   1645f:	ba 08 00 00 00       	mov    $0x8,%edx
   16464:	ff 15 8e f7 02 00    	callq  *0x2f78e(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   1646a:	40 88 6b 08          	mov    %bpl,0x8(%rbx)
   1646e:	4c 89 73 09          	mov    %r14,0x9(%rbx)
   16472:	44 89 63 11          	mov    %r12d,0x11(%rbx)
   16476:	4c 89 e0             	mov    %r12,%rax
   16479:	48 c1 e8 30          	shr    $0x30,%rax
   1647d:	88 43 17             	mov    %al,0x17(%rbx)
   16480:	49 c1 ec 20          	shr    $0x20,%r12
   16484:	66 44 89 63 15       	mov    %r12w,0x15(%rbx)
   16489:	b0 01                	mov    $0x1,%al
   1648b:	48 83 c4 08          	add    $0x8,%rsp
   1648f:	5b                   	pop    %rbx
   16490:	41 5c                	pop    %r12
   16492:	41 5d                	pop    %r13
   16494:	41 5e                	pop    %r14
   16496:	41 5f                	pop    %r15
   16498:	5d                   	pop    %rbp
   16499:	c3                   	retq   
   1649a:	49 89 c7             	mov    %rax,%r15
   1649d:	49 8b 7d 00          	mov    0x0(%r13),%rdi
   164a1:	49 8b 75 08          	mov    0x8(%r13),%rsi
   164a5:	e8 26 35 ff ff       	callq  99d0 <alloc::alloc::box_free>
   164aa:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   164ae:	e8 3d 35 ff ff       	callq  99f0 <alloc::alloc::box_free>
   164b3:	40 88 6b 08          	mov    %bpl,0x8(%rbx)
   164b7:	4c 89 e0             	mov    %r12,%rax
   164ba:	48 c1 e8 30          	shr    $0x30,%rax
   164be:	88 43 17             	mov    %al,0x17(%rbx)
   164c1:	4c 89 e0             	mov    %r12,%rax
   164c4:	48 c1 e8 20          	shr    $0x20,%rax
   164c8:	66 89 43 15          	mov    %ax,0x15(%rbx)
   164cc:	44 89 63 11          	mov    %r12d,0x11(%rbx)
   164d0:	4c 89 73 09          	mov    %r14,0x9(%rbx)
   164d4:	4c 89 ff             	mov    %r15,%rdi
   164d7:	e8 74 eb fe ff       	callq  5050 <_Unwind_Resume@plt>
   164dc:	0f 0b                	ud2    
   164de:	66 90                	xchg   %ax,%ax

00000000000164e0 <std::path::iter_after>:
   164e0:	55                   	push   %rbp
   164e1:	41 57                	push   %r15
   164e3:	41 56                	push   %r14
   164e5:	41 55                	push   %r13
   164e7:	41 54                	push   %r12
   164e9:	53                   	push   %rbx
   164ea:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
   164f1:	49 89 d7             	mov    %rdx,%r15
   164f4:	48 89 f3             	mov    %rsi,%rbx
   164f7:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   164fc:	4c 8d 76 11          	lea    0x11(%rsi),%r14
   16500:	48 8d 6c 24 21       	lea    0x21(%rsp),%rbp
   16505:	4c 8d a4 24 90 00 00 	lea    0x90(%rsp),%r12
   1650c:	00 
   1650d:	4c 8d 2d bc 07 00 00 	lea    0x7bc(%rip),%r13        # 16cd0 <<std::path::Components as core::iter::traits::iterator::Iterator>::next>
   16514:	e9 2a 00 00 00       	jmpq   16543 <std::path::iter_after+0x63>
   16519:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   16520:	0f 28 44 24 10       	movaps 0x10(%rsp),%xmm0
   16525:	0f 28 4c 24 20       	movaps 0x20(%rsp),%xmm1
   1652a:	0f 28 54 24 30       	movaps 0x30(%rsp),%xmm2
   1652f:	0f 28 5c 24 40       	movaps 0x40(%rsp),%xmm3
   16534:	0f 11 5b 30          	movups %xmm3,0x30(%rbx)
   16538:	0f 11 53 20          	movups %xmm2,0x20(%rbx)
   1653c:	0f 11 4b 10          	movups %xmm1,0x10(%rbx)
   16540:	0f 11 03             	movups %xmm0,(%rbx)
   16543:	0f 10 03             	movups (%rbx),%xmm0
   16546:	0f b6 43 10          	movzbl 0x10(%rbx),%eax
   1654a:	3c 06                	cmp    $0x6,%al
   1654c:	74 1c                	je     1656a <std::path::iter_after+0x8a>
   1654e:	49 8b 4e 1f          	mov    0x1f(%r14),%rcx
   16552:	48 89 4c 24 6f       	mov    %rcx,0x6f(%rsp)
   16557:	41 0f 10 0e          	movups (%r14),%xmm1
   1655b:	41 0f 10 56 10       	movups 0x10(%r14),%xmm2
   16560:	0f 29 54 24 60       	movaps %xmm2,0x60(%rsp)
   16565:	0f 29 4c 24 50       	movaps %xmm1,0x50(%rsp)
   1656a:	80 7b 38 00          	cmpb   $0x0,0x38(%rbx)
   1656e:	0f b7 4b 39          	movzwl 0x39(%rbx),%ecx
   16572:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   16577:	88 44 24 20          	mov    %al,0x20(%rsp)
   1657b:	0f 28 44 24 50       	movaps 0x50(%rsp),%xmm0
   16580:	0f 28 4c 24 60       	movaps 0x60(%rsp),%xmm1
   16585:	0f 11 4d 10          	movups %xmm1,0x10(%rbp)
   16589:	48 8b 44 24 6f       	mov    0x6f(%rsp),%rax
   1658e:	48 89 45 1f          	mov    %rax,0x1f(%rbp)
   16592:	0f 11 45 00          	movups %xmm0,0x0(%rbp)
   16596:	0f 95 44 24 48       	setne  0x48(%rsp)
   1659b:	66 89 4c 24 49       	mov    %cx,0x49(%rsp)
   165a0:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
   165a5:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   165aa:	41 ff d5             	callq  *%r13
   165ad:	48 8d bc 24 d8 00 00 	lea    0xd8(%rsp),%rdi
   165b4:	00 
   165b5:	4c 89 fe             	mov    %r15,%rsi
   165b8:	41 ff d5             	callq  *%r13
   165bb:	0f 10 84 24 d8 00 00 	movups 0xd8(%rsp),%xmm0
   165c2:	00 
   165c3:	0f 10 8c 24 e8 00 00 	movups 0xe8(%rsp),%xmm1
   165ca:	00 
   165cb:	0f 10 94 24 f8 00 00 	movups 0xf8(%rsp),%xmm2
   165d2:	00 
   165d3:	0f 10 9c 24 08 01 00 	movups 0x108(%rsp),%xmm3
   165da:	00 
   165db:	41 0f 11 5c 24 30    	movups %xmm3,0x30(%r12)
   165e1:	41 0f 11 54 24 20    	movups %xmm2,0x20(%r12)
   165e7:	41 0f 11 4c 24 10    	movups %xmm1,0x10(%r12)
   165ed:	41 0f 11 04 24       	movups %xmm0,(%r12)
   165f2:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   165f7:	48 8b 8c 24 90 00 00 	mov    0x90(%rsp),%rcx
   165fe:	00 
   165ff:	48 83 f8 05          	cmp    $0x5,%rax
   16603:	74 75                	je     1667a <std::path::iter_after+0x19a>
   16605:	83 f9 05             	cmp    $0x5,%ecx
   16608:	0f 84 8d 00 00 00    	je     1669b <std::path::iter_after+0x1bb>
   1660e:	48 39 c8             	cmp    %rcx,%rax
   16611:	75 60                	jne    16673 <std::path::iter_after+0x193>
   16613:	83 f8 04             	cmp    $0x4,%eax
   16616:	74 28                	je     16640 <std::path::iter_after+0x160>
   16618:	48 85 c0             	test   %rax,%rax
   1661b:	0f 85 ff fe ff ff    	jne    16520 <std::path::iter_after+0x40>
   16621:	48 8d 7c 24 58       	lea    0x58(%rsp),%rdi
   16626:	48 8d b4 24 98 00 00 	lea    0x98(%rsp),%rsi
   1662d:	00 
   1662e:	ff 15 8c f6 02 00    	callq  *0x2f68c(%rip)        # 45cc0 <_GLOBAL_OFFSET_TABLE_+0x338>
   16634:	84 c0                	test   %al,%al
   16636:	0f 85 e4 fe ff ff    	jne    16520 <std::path::iter_after+0x40>
   1663c:	eb 35                	jmp    16673 <std::path::iter_after+0x193>
   1663e:	66 90                	xchg   %ax,%ax
   16640:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
   16645:	48 3b 94 24 a0 00 00 	cmp    0xa0(%rsp),%rdx
   1664c:	00 
   1664d:	75 24                	jne    16673 <std::path::iter_after+0x193>
   1664f:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
   16654:	48 8b b4 24 98 00 00 	mov    0x98(%rsp),%rsi
   1665b:	00 
   1665c:	48 39 f7             	cmp    %rsi,%rdi
   1665f:	0f 84 bb fe ff ff    	je     16520 <std::path::iter_after+0x40>
   16665:	ff 15 4d f7 02 00    	callq  *0x2f74d(%rip)        # 45db8 <bcmp@GLIBC_2.2.5>
   1666b:	85 c0                	test   %eax,%eax
   1666d:	0f 84 ad fe ff ff    	je     16520 <std::path::iter_after+0x40>
   16673:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   16678:	eb 1b                	jmp    16695 <std::path::iter_after+0x1b5>
   1667a:	83 f9 05             	cmp    $0x5,%ecx
   1667d:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   16682:	75 11                	jne    16695 <std::path::iter_after+0x1b5>
   16684:	0f 10 03             	movups (%rbx),%xmm0
   16687:	0f 10 4b 10          	movups 0x10(%rbx),%xmm1
   1668b:	0f 10 53 20          	movups 0x20(%rbx),%xmm2
   1668f:	0f 10 5b 30          	movups 0x30(%rbx),%xmm3
   16693:	eb 1a                	jmp    166af <std::path::iter_after+0x1cf>
   16695:	c6 40 38 02          	movb   $0x2,0x38(%rax)
   16699:	eb 23                	jmp    166be <std::path::iter_after+0x1de>
   1669b:	0f 10 03             	movups (%rbx),%xmm0
   1669e:	0f 10 4b 10          	movups 0x10(%rbx),%xmm1
   166a2:	0f 10 53 20          	movups 0x20(%rbx),%xmm2
   166a6:	0f 10 5b 30          	movups 0x30(%rbx),%xmm3
   166aa:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   166af:	0f 11 58 30          	movups %xmm3,0x30(%rax)
   166b3:	0f 11 50 20          	movups %xmm2,0x20(%rax)
   166b7:	0f 11 48 10          	movups %xmm1,0x10(%rax)
   166bb:	0f 11 00             	movups %xmm0,(%rax)
   166be:	48 81 c4 18 01 00 00 	add    $0x118,%rsp
   166c5:	5b                   	pop    %rbx
   166c6:	41 5c                	pop    %r12
   166c8:	41 5d                	pop    %r13
   166ca:	41 5e                	pop    %r14
   166cc:	41 5f                	pop    %r15
   166ce:	5d                   	pop    %rbp
   166cf:	c3                   	retq   

00000000000166d0 <<std::path::PrefixComponent as core::cmp::PartialEq>::eq>:
   166d0:	41 56                	push   %r14
   166d2:	53                   	push   %rbx
   166d3:	50                   	push   %rax
   166d4:	0f b6 47 10          	movzbl 0x10(%rdi),%eax
   166d8:	3a 46 10             	cmp    0x10(%rsi),%al
   166db:	75 79                	jne    16756 <<std::path::PrefixComponent as core::cmp::PartialEq>::eq+0x86>
   166dd:	49 89 f6             	mov    %rsi,%r14
   166e0:	48 89 fb             	mov    %rdi,%rbx
   166e3:	48 8d 0d 22 07 02 00 	lea    0x20722(%rip),%rcx        # 36e0c <_fini+0x14e8>
   166ea:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   166ee:	48 01 c8             	add    %rcx,%rax
   166f1:	ff e0                	jmpq   *%rax
   166f3:	48 8b 53 20          	mov    0x20(%rbx),%rdx
   166f7:	49 3b 56 20          	cmp    0x20(%r14),%rdx
   166fb:	75 59                	jne    16756 <<std::path::PrefixComponent as core::cmp::PartialEq>::eq+0x86>
   166fd:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   16701:	49 8b 76 18          	mov    0x18(%r14),%rsi
   16705:	48 39 f7             	cmp    %rsi,%rdi
   16708:	74 42                	je     1674c <<std::path::PrefixComponent as core::cmp::PartialEq>::eq+0x7c>
   1670a:	ff 15 a8 f6 02 00    	callq  *0x2f6a8(%rip)        # 45db8 <bcmp@GLIBC_2.2.5>
   16710:	85 c0                	test   %eax,%eax
   16712:	eb 53                	jmp    16767 <<std::path::PrefixComponent as core::cmp::PartialEq>::eq+0x97>
   16714:	48 8b 53 20          	mov    0x20(%rbx),%rdx
   16718:	49 3b 56 20          	cmp    0x20(%r14),%rdx
   1671c:	75 38                	jne    16756 <<std::path::PrefixComponent as core::cmp::PartialEq>::eq+0x86>
   1671e:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   16722:	49 8b 76 18          	mov    0x18(%r14),%rsi
   16726:	48 39 f7             	cmp    %rsi,%rdi
   16729:	74 0a                	je     16735 <<std::path::PrefixComponent as core::cmp::PartialEq>::eq+0x65>
   1672b:	ff 15 87 f6 02 00    	callq  *0x2f687(%rip)        # 45db8 <bcmp@GLIBC_2.2.5>
   16731:	85 c0                	test   %eax,%eax
   16733:	75 21                	jne    16756 <<std::path::PrefixComponent as core::cmp::PartialEq>::eq+0x86>
   16735:	48 8b 53 30          	mov    0x30(%rbx),%rdx
   16739:	49 3b 56 30          	cmp    0x30(%r14),%rdx
   1673d:	75 17                	jne    16756 <<std::path::PrefixComponent as core::cmp::PartialEq>::eq+0x86>
   1673f:	48 8b 7b 28          	mov    0x28(%rbx),%rdi
   16743:	49 8b 76 28          	mov    0x28(%r14),%rsi
   16747:	48 39 f7             	cmp    %rsi,%rdi
   1674a:	75 be                	jne    1670a <<std::path::PrefixComponent as core::cmp::PartialEq>::eq+0x3a>
   1674c:	b0 01                	mov    $0x1,%al
   1674e:	48 83 c4 08          	add    $0x8,%rsp
   16752:	5b                   	pop    %rbx
   16753:	41 5e                	pop    %r14
   16755:	c3                   	retq   
   16756:	31 c0                	xor    %eax,%eax
   16758:	48 83 c4 08          	add    $0x8,%rsp
   1675c:	5b                   	pop    %rbx
   1675d:	41 5e                	pop    %r14
   1675f:	c3                   	retq   
   16760:	8a 43 11             	mov    0x11(%rbx),%al
   16763:	41 3a 46 11          	cmp    0x11(%r14),%al
   16767:	0f 94 c0             	sete   %al
   1676a:	48 83 c4 08          	add    $0x8,%rsp
   1676e:	5b                   	pop    %rbx
   1676f:	41 5e                	pop    %r14
   16771:	c3                   	retq   
   16772:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   16779:	00 00 00 
   1677c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000016780 <std::path::Components::len_before_body>:
   16780:	53                   	push   %rbx
   16781:	8a 57 39             	mov    0x39(%rdi),%dl
   16784:	31 c9                	xor    %ecx,%ecx
   16786:	31 c0                	xor    %eax,%eax
   16788:	80 fa 01             	cmp    $0x1,%dl
   1678b:	0f 95 c0             	setne  %al
   1678e:	be 00 00 00 00       	mov    $0x0,%esi
   16793:	48 19 f6             	sbb    %rsi,%rsi
   16796:	48 09 c6             	or     %rax,%rsi
   16799:	80 fa 01             	cmp    $0x1,%dl
   1679c:	48 0f 44 f1          	cmove  %rcx,%rsi
   167a0:	48 83 c6 01          	add    $0x1,%rsi
   167a4:	b8 00 00 00 00       	mov    $0x0,%eax
   167a9:	48 83 fe 01          	cmp    $0x1,%rsi
   167ad:	0f 87 c4 00 00 00    	ja     16877 <std::path::Components::len_before_body+0xf7>
   167b3:	8a 47 38             	mov    0x38(%rdi),%al
   167b6:	31 c9                	xor    %ecx,%ecx
   167b8:	84 c0                	test   %al,%al
   167ba:	0f 95 c1             	setne  %cl
   167bd:	48 83 fe 01          	cmp    $0x1,%rsi
   167c1:	0f 87 ae 00 00 00    	ja     16875 <std::path::Components::len_before_body+0xf5>
   167c7:	84 c0                	test   %al,%al
   167c9:	0f 85 a6 00 00 00    	jne    16875 <std::path::Components::len_before_body+0xf5>
   167cf:	8a 5f 10             	mov    0x10(%rdi),%bl
   167d2:	8d 43 fb             	lea    -0x5(%rbx),%eax
   167d5:	3c 01                	cmp    $0x1,%al
   167d7:	0f 87 98 00 00 00    	ja     16875 <std::path::Components::len_before_body+0xf5>
   167dd:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   167e1:	4c 8d 47 10          	lea    0x10(%rdi),%r8
   167e5:	31 c0                	xor    %eax,%eax
   167e7:	80 fb 06             	cmp    $0x6,%bl
   167ea:	4c 0f 44 c0          	cmove  %rax,%r8
   167ee:	74 69                	je     16859 <std::path::Components::len_before_body+0xd9>
   167f0:	41 0f b6 18          	movzbl (%r8),%ebx
   167f4:	b8 02 00 00 00       	mov    $0x2,%eax
   167f9:	4c 8d 0d 24 06 02 00 	lea    0x20624(%rip),%r9        # 36e24 <_fini+0x1500>
   16800:	49 63 1c 99          	movslq (%r9,%rbx,4),%rbx
   16804:	4c 01 cb             	add    %r9,%rbx
   16807:	ff e3                	jmpq   *%rbx
   16809:	49 8b 40 10          	mov    0x10(%r8),%rax
   1680d:	48 83 c0 04          	add    $0x4,%rax
   16811:	eb 3d                	jmp    16850 <std::path::Components::len_before_body+0xd0>
   16813:	b8 06 00 00 00       	mov    $0x6,%eax
   16818:	eb 36                	jmp    16850 <std::path::Components::len_before_body+0xd0>
   1681a:	4d 8b 48 10          	mov    0x10(%r8),%r9
   1681e:	49 8b 58 20          	mov    0x20(%r8),%rbx
   16822:	48 8d 43 01          	lea    0x1(%rbx),%rax
   16826:	48 85 db             	test   %rbx,%rbx
   16829:	48 0f 44 c3          	cmove  %rbx,%rax
   1682d:	4c 01 c8             	add    %r9,%rax
   16830:	48 83 c0 08          	add    $0x8,%rax
   16834:	eb 1a                	jmp    16850 <std::path::Components::len_before_body+0xd0>
   16836:	4d 8b 48 10          	mov    0x10(%r8),%r9
   1683a:	49 8b 58 20          	mov    0x20(%r8),%rbx
   1683e:	48 8d 43 01          	lea    0x1(%rbx),%rax
   16842:	48 85 db             	test   %rbx,%rbx
   16845:	48 0f 44 c3          	cmove  %rbx,%rax
   16849:	4c 01 c8             	add    %r9,%rax
   1684c:	48 83 c0 02          	add    $0x2,%rax
   16850:	48 39 c6             	cmp    %rax,%rsi
   16853:	0f 82 f3 00 00 00    	jb     1694c <std::path::Components::len_before_body+0x1cc>
   16859:	4c 8b 0f             	mov    (%rdi),%r9
   1685c:	4d 8d 04 01          	lea    (%r9,%rax,1),%r8
   16860:	45 31 d2             	xor    %r10d,%r10d
   16863:	48 39 f0             	cmp    %rsi,%rax
   16866:	41 0f 95 c3          	setne  %r11b
   1686a:	49 8d 5c 01 01       	lea    0x1(%r9,%rax,1),%rbx
   1686f:	49 0f 44 d8          	cmove  %r8,%rbx
   16873:	75 4a                	jne    168bf <std::path::Components::len_before_body+0x13f>
   16875:	31 c0                	xor    %eax,%eax
   16877:	84 d2                	test   %dl,%dl
   16879:	74 04                	je     1687f <std::path::Components::len_before_body+0xff>
   1687b:	31 d2                	xor    %edx,%edx
   1687d:	eb 10                	jmp    1688f <std::path::Components::len_before_body+0x10f>
   1687f:	48 8d 77 10          	lea    0x10(%rdi),%rsi
   16883:	31 d2                	xor    %edx,%edx
   16885:	80 7f 10 06          	cmpb   $0x6,0x10(%rdi)
   16889:	48 0f 44 f2          	cmove  %rdx,%rsi
   1688d:	75 08                	jne    16897 <std::path::Components::len_before_body+0x117>
   1688f:	48 01 c8             	add    %rcx,%rax
   16892:	48 01 d0             	add    %rdx,%rax
   16895:	5b                   	pop    %rbx
   16896:	c3                   	retq   
   16897:	0f b6 3e             	movzbl (%rsi),%edi
   1689a:	ba 02 00 00 00       	mov    $0x2,%edx
   1689f:	48 8d 1d 96 05 02 00 	lea    0x20596(%rip),%rbx        # 36e3c <_fini+0x1518>
   168a6:	48 63 3c bb          	movslq (%rbx,%rdi,4),%rdi
   168aa:	48 01 df             	add    %rbx,%rdi
   168ad:	ff e7                	jmpq   *%rdi
   168af:	48 8b 56 10          	mov    0x10(%rsi),%rdx
   168b3:	48 83 c2 04          	add    $0x4,%rdx
   168b7:	48 01 c8             	add    %rcx,%rax
   168ba:	48 01 d0             	add    %rdx,%rax
   168bd:	5b                   	pop    %rbx
   168be:	c3                   	retq   
   168bf:	49 01 f1             	add    %rsi,%r9
   168c2:	41 8a 30             	mov    (%r8),%sil
   168c5:	4c 39 cb             	cmp    %r9,%rbx
   168c8:	74 63                	je     1692d <std::path::Components::len_before_body+0x1ad>
   168ca:	40 80 fe 2e          	cmp    $0x2e,%sil
   168ce:	75 5d                	jne    1692d <std::path::Components::len_before_body+0x1ad>
   168d0:	45 88 da             	mov    %r11b,%r10b
   168d3:	43 80 3c 10 2f       	cmpb   $0x2f,(%r8,%r10,1)
   168d8:	75 9b                	jne    16875 <std::path::Components::len_before_body+0xf5>
   168da:	eb 66                	jmp    16942 <std::path::Components::len_before_body+0x1c2>
   168dc:	ba 06 00 00 00       	mov    $0x6,%edx
   168e1:	48 01 c8             	add    %rcx,%rax
   168e4:	48 01 d0             	add    %rdx,%rax
   168e7:	5b                   	pop    %rbx
   168e8:	c3                   	retq   
   168e9:	48 8b 56 10          	mov    0x10(%rsi),%rdx
   168ed:	48 8b 76 20          	mov    0x20(%rsi),%rsi
   168f1:	48 8d 7e 01          	lea    0x1(%rsi),%rdi
   168f5:	48 85 f6             	test   %rsi,%rsi
   168f8:	48 0f 44 fe          	cmove  %rsi,%rdi
   168fc:	48 01 fa             	add    %rdi,%rdx
   168ff:	48 83 c2 08          	add    $0x8,%rdx
   16903:	48 01 c8             	add    %rcx,%rax
   16906:	48 01 d0             	add    %rdx,%rax
   16909:	5b                   	pop    %rbx
   1690a:	c3                   	retq   
   1690b:	48 8b 56 10          	mov    0x10(%rsi),%rdx
   1690f:	48 8b 76 20          	mov    0x20(%rsi),%rsi
   16913:	48 8d 7e 01          	lea    0x1(%rsi),%rdi
   16917:	48 85 f6             	test   %rsi,%rsi
   1691a:	48 0f 44 fe          	cmove  %rsi,%rdi
   1691e:	48 01 fa             	add    %rdi,%rdx
   16921:	48 83 c2 02          	add    $0x2,%rdx
   16925:	48 01 c8             	add    %rcx,%rax
   16928:	48 01 d0             	add    %rdx,%rax
   1692b:	5b                   	pop    %rbx
   1692c:	c3                   	retq   
   1692d:	31 c0                	xor    %eax,%eax
   1692f:	4c 39 cb             	cmp    %r9,%rbx
   16932:	0f 85 3f ff ff ff    	jne    16877 <std::path::Components::len_before_body+0xf7>
   16938:	40 80 fe 2e          	cmp    $0x2e,%sil
   1693c:	0f 85 35 ff ff ff    	jne    16877 <std::path::Components::len_before_body+0xf7>
   16942:	b8 01 00 00 00       	mov    $0x1,%eax
   16947:	e9 2b ff ff ff       	jmpq   16877 <std::path::Components::len_before_body+0xf7>
   1694c:	48 8d 15 ad d4 02 00 	lea    0x2d4ad(%rip),%rdx        # 43e00 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x8c8>
   16953:	48 89 c7             	mov    %rax,%rdi
   16956:	ff 15 94 f4 02 00    	callq  *0x2f494(%rip)        # 45df0 <_GLOBAL_OFFSET_TABLE_+0x468>
   1695c:	0f 0b                	ud2    
   1695e:	66 90                	xchg   %ax,%ax

0000000000016960 <std::path::Components::as_path>:
   16960:	41 57                	push   %r15
   16962:	41 56                	push   %r14
   16964:	53                   	push   %rbx
   16965:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
   1696c:	4c 8b 37             	mov    (%rdi),%r14
   1696f:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
   16973:	8a 4f 10             	mov    0x10(%rdi),%cl
   16976:	80 f9 06             	cmp    $0x6,%cl
   16979:	74 1b                	je     16996 <std::path::Components::as_path+0x36>
   1697b:	48 8b 47 30          	mov    0x30(%rdi),%rax
   1697f:	48 89 44 24 5f       	mov    %rax,0x5f(%rsp)
   16984:	0f 10 47 11          	movups 0x11(%rdi),%xmm0
   16988:	0f 10 4f 21          	movups 0x21(%rdi),%xmm1
   1698c:	0f 29 4c 24 50       	movaps %xmm1,0x50(%rsp)
   16991:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
   16996:	80 7f 38 00          	cmpb   $0x0,0x38(%rdi)
   1699a:	4c 89 34 24          	mov    %r14,(%rsp)
   1699e:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   169a3:	88 4c 24 10          	mov    %cl,0x10(%rsp)
   169a7:	0f 28 44 24 50       	movaps 0x50(%rsp),%xmm0
   169ac:	0f 11 44 24 21       	movups %xmm0,0x21(%rsp)
   169b1:	48 8b 44 24 5f       	mov    0x5f(%rsp),%rax
   169b6:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   169bb:	8a 57 39             	mov    0x39(%rdi),%dl
   169be:	0f 28 44 24 40       	movaps 0x40(%rsp),%xmm0
   169c3:	0f 11 44 24 11       	movups %xmm0,0x11(%rsp)
   169c8:	0f 95 44 24 38       	setne  0x38(%rsp)
   169cd:	8a 47 3a             	mov    0x3a(%rdi),%al
   169d0:	88 54 24 39          	mov    %dl,0x39(%rsp)
   169d4:	88 44 24 3a          	mov    %al,0x3a(%rsp)
   169d8:	48 85 db             	test   %rbx,%rbx
   169db:	0f 84 e5 00 00 00    	je     16ac6 <std::path::Components::as_path+0x166>
   169e1:	80 fa 02             	cmp    $0x2,%dl
   169e4:	0f 85 dc 00 00 00    	jne    16ac6 <std::path::Components::as_path+0x166>
   169ea:	80 f9 02             	cmp    $0x2,%cl
   169ed:	0f 86 7d 00 00 00    	jbe    16a70 <std::path::Components::as_path+0x110>
   169f3:	48 8d 0d 8f 13 02 00 	lea    0x2138f(%rip),%rcx        # 37d89 <str.6+0xa69>
   169fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16a00:	31 d2                	xor    %edx,%edx
   16a02:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   16a09:	00 00 00 
   16a0c:	0f 1f 40 00          	nopl   0x0(%rax)
   16a10:	41 80 3c 16 2f       	cmpb   $0x2f,(%r14,%rdx,1)
   16a15:	74 19                	je     16a30 <std::path::Components::as_path+0xd0>
   16a17:	48 83 c2 01          	add    $0x1,%rdx
   16a1b:	48 39 d3             	cmp    %rdx,%rbx
   16a1e:	75 f0                	jne    16a10 <std::path::Components::as_path+0xb0>
   16a20:	48 89 da             	mov    %rbx,%rdx
   16a23:	31 ff                	xor    %edi,%edi
   16a25:	48 85 d2             	test   %rdx,%rdx
   16a28:	75 10                	jne    16a3a <std::path::Components::as_path+0xda>
   16a2a:	e9 20 00 00 00       	jmpq   16a4f <std::path::Components::as_path+0xef>
   16a2f:	90                   	nop
   16a30:	bf 01 00 00 00       	mov    $0x1,%edi
   16a35:	48 85 d2             	test   %rdx,%rdx
   16a38:	74 15                	je     16a4f <std::path::Components::as_path+0xef>
   16a3a:	48 83 fa 01          	cmp    $0x1,%rdx
   16a3e:	0f 85 82 00 00 00    	jne    16ac6 <std::path::Components::as_path+0x166>
   16a44:	49 39 ce             	cmp    %rcx,%r14
   16a47:	74 06                	je     16a4f <std::path::Components::as_path+0xef>
   16a49:	41 80 3e 2e          	cmpb   $0x2e,(%r14)
   16a4d:	75 77                	jne    16ac6 <std::path::Components::as_path+0x166>
   16a4f:	48 01 d7             	add    %rdx,%rdi
   16a52:	48 39 fb             	cmp    %rdi,%rbx
   16a55:	0f 82 da 00 00 00    	jb     16b35 <std::path::Components::as_path+0x1d5>
   16a5b:	49 01 fe             	add    %rdi,%r14
   16a5e:	4c 89 34 24          	mov    %r14,(%rsp)
   16a62:	48 29 fb             	sub    %rdi,%rbx
   16a65:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   16a6a:	75 94                	jne    16a00 <std::path::Components::as_path+0xa0>
   16a6c:	eb 56                	jmp    16ac4 <std::path::Components::as_path+0x164>
   16a6e:	66 90                	xchg   %ax,%ax
   16a70:	31 c9                	xor    %ecx,%ecx
   16a72:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   16a79:	00 00 00 
   16a7c:	0f 1f 40 00          	nopl   0x0(%rax)
   16a80:	41 80 3c 0e 2f       	cmpb   $0x2f,(%r14,%rcx,1)
   16a85:	74 19                	je     16aa0 <std::path::Components::as_path+0x140>
   16a87:	48 83 c1 01          	add    $0x1,%rcx
   16a8b:	48 39 cb             	cmp    %rcx,%rbx
   16a8e:	75 f0                	jne    16a80 <std::path::Components::as_path+0x120>
   16a90:	48 89 d9             	mov    %rbx,%rcx
   16a93:	31 d2                	xor    %edx,%edx
   16a95:	48 85 c9             	test   %rcx,%rcx
   16a98:	74 10                	je     16aaa <std::path::Components::as_path+0x14a>
   16a9a:	e9 27 00 00 00       	jmpq   16ac6 <std::path::Components::as_path+0x166>
   16a9f:	90                   	nop
   16aa0:	ba 01 00 00 00       	mov    $0x1,%edx
   16aa5:	48 85 c9             	test   %rcx,%rcx
   16aa8:	75 1c                	jne    16ac6 <std::path::Components::as_path+0x166>
   16aaa:	48 39 d3             	cmp    %rdx,%rbx
   16aad:	0f 82 7d 00 00 00    	jb     16b30 <std::path::Components::as_path+0x1d0>
   16ab3:	49 01 d6             	add    %rdx,%r14
   16ab6:	4c 89 34 24          	mov    %r14,(%rsp)
   16aba:	48 29 d3             	sub    %rdx,%rbx
   16abd:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   16ac2:	75 ac                	jne    16a70 <std::path::Components::as_path+0x110>
   16ac4:	31 db                	xor    %ebx,%ebx
   16ac6:	3c 02                	cmp    $0x2,%al
   16ac8:	75 53                	jne    16b1d <std::path::Components::as_path+0x1bd>
   16aca:	48 89 e7             	mov    %rsp,%rdi
   16acd:	e8 ae fc ff ff       	callq  16780 <std::path::Components::len_before_body>
   16ad2:	48 39 c3             	cmp    %rax,%rbx
   16ad5:	76 46                	jbe    16b1d <std::path::Components::as_path+0x1bd>
   16ad7:	4c 8d 74 24 40       	lea    0x40(%rsp),%r14
   16adc:	49 89 e7             	mov    %rsp,%r15
   16adf:	90                   	nop
   16ae0:	4c 89 f7             	mov    %r14,%rdi
   16ae3:	4c 89 fe             	mov    %r15,%rsi
   16ae6:	e8 75 00 00 00       	callq  16b60 <std::path::Components::parse_next_component_back>
   16aeb:	48 83 7c 24 48 05    	cmpq   $0x5,0x48(%rsp)
   16af1:	75 21                	jne    16b14 <std::path::Components::as_path+0x1b4>
   16af3:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   16af8:	48 89 f3             	mov    %rsi,%rbx
   16afb:	48 2b 5c 24 40       	sub    0x40(%rsp),%rbx
   16b00:	72 45                	jb     16b47 <std::path::Components::as_path+0x1e7>
   16b02:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   16b07:	4c 89 ff             	mov    %r15,%rdi
   16b0a:	e8 71 fc ff ff       	callq  16780 <std::path::Components::len_before_body>
   16b0f:	48 39 c3             	cmp    %rax,%rbx
   16b12:	77 cc                	ja     16ae0 <std::path::Components::as_path+0x180>
   16b14:	4c 8b 34 24          	mov    (%rsp),%r14
   16b18:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   16b1d:	4c 89 f0             	mov    %r14,%rax
   16b20:	48 89 da             	mov    %rbx,%rdx
   16b23:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
   16b2a:	5b                   	pop    %rbx
   16b2b:	41 5e                	pop    %r14
   16b2d:	41 5f                	pop    %r15
   16b2f:	c3                   	retq   
   16b30:	bf 01 00 00 00       	mov    $0x1,%edi
   16b35:	48 8d 15 0c d3 02 00 	lea    0x2d30c(%rip),%rdx        # 43e48 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x910>
   16b3c:	48 89 de             	mov    %rbx,%rsi
   16b3f:	ff 15 ab f2 02 00    	callq  *0x2f2ab(%rip)        # 45df0 <_GLOBAL_OFFSET_TABLE_+0x468>
   16b45:	0f 0b                	ud2    
   16b47:	48 8d 15 12 d3 02 00 	lea    0x2d312(%rip),%rdx        # 43e60 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x928>
   16b4e:	48 89 df             	mov    %rbx,%rdi
   16b51:	ff 15 d1 ee 02 00    	callq  *0x2eed1(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   16b57:	0f 0b                	ud2    
   16b59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000016b60 <std::path::Components::parse_next_component_back>:
   16b60:	41 57                	push   %r15
   16b62:	41 56                	push   %r14
   16b64:	53                   	push   %rbx
   16b65:	48 83 ec 30          	sub    $0x30,%rsp
   16b69:	49 89 f6             	mov    %rsi,%r14
   16b6c:	49 89 ff             	mov    %rdi,%r15
   16b6f:	48 89 f7             	mov    %rsi,%rdi
   16b72:	e8 09 fc ff ff       	callq  16780 <std::path::Components::len_before_body>
   16b77:	49 8b 76 08          	mov    0x8(%r14),%rsi
   16b7b:	48 39 c6             	cmp    %rax,%rsi
   16b7e:	0f 82 1c 01 00 00    	jb     16ca0 <std::path::Components::parse_next_component_back+0x140>
   16b84:	4d 8b 1e             	mov    (%r14),%r11
   16b87:	4d 8d 04 03          	lea    (%r11,%rax,1),%r8
   16b8b:	4d 8d 14 33          	lea    (%r11,%rsi,1),%r10
   16b8f:	49 8d 3c 33          	lea    (%r11,%rsi,1),%rdi
   16b93:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   16b97:	48 89 c3             	mov    %rax,%rbx
   16b9a:	48 29 f3             	sub    %rsi,%rbx
   16b9d:	45 31 c9             	xor    %r9d,%r9d
   16ba0:	31 d2                	xor    %edx,%edx
   16ba2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   16ba9:	00 00 00 
   16bac:	0f 1f 40 00          	nopl   0x0(%rax)
   16bb0:	48 39 d3             	cmp    %rdx,%rbx
   16bb3:	74 38                	je     16bed <std::path::Components::parse_next_component_back+0x8d>
   16bb5:	48 8d 4a ff          	lea    -0x1(%rdx),%rcx
   16bb9:	80 3c 17 2f          	cmpb   $0x2f,(%rdi,%rdx,1)
   16bbd:	48 89 ca             	mov    %rcx,%rdx
   16bc0:	75 ee                	jne    16bb0 <std::path::Components::parse_next_component_back+0x50>
   16bc2:	4c 01 d0             	add    %r10,%rax
   16bc5:	4c 29 c0             	sub    %r8,%rax
   16bc8:	48 8d 3c 08          	lea    (%rax,%rcx,1),%rdi
   16bcc:	48 83 c7 01          	add    $0x1,%rdi
   16bd0:	48 39 fe             	cmp    %rdi,%rsi
   16bd3:	0f 82 d9 00 00 00    	jb     16cb2 <std::path::Components::parse_next_component_back+0x152>
   16bd9:	4c 01 d8             	add    %r11,%rax
   16bdc:	4c 8d 04 01          	lea    (%rcx,%rax,1),%r8
   16be0:	49 83 c0 01          	add    $0x1,%r8
   16be4:	41 b9 01 00 00 00    	mov    $0x1,%r9d
   16bea:	48 89 f8             	mov    %rdi,%rax
   16bed:	48 29 c6             	sub    %rax,%rsi
   16bf0:	74 70                	je     16c62 <std::path::Components::parse_next_component_back+0x102>
   16bf2:	b8 04 00 00 00       	mov    $0x4,%eax
   16bf7:	48 83 fe 02          	cmp    $0x2,%rsi
   16bfb:	74 46                	je     16c43 <std::path::Components::parse_next_component_back+0xe3>
   16bfd:	48 83 fe 01          	cmp    $0x1,%rsi
   16c01:	75 64                	jne    16c67 <std::path::Components::parse_next_component_back+0x107>
   16c03:	48 8d 0d 7f 11 02 00 	lea    0x2117f(%rip),%rcx        # 37d89 <str.6+0xa69>
   16c0a:	49 39 c8             	cmp    %rcx,%r8
   16c0d:	74 06                	je     16c15 <std::path::Components::parse_next_component_back+0xb5>
   16c0f:	41 80 38 2e          	cmpb   $0x2e,(%r8)
   16c13:	75 52                	jne    16c67 <std::path::Components::parse_next_component_back+0x107>
   16c15:	41 8a 46 10          	mov    0x10(%r14),%al
   16c19:	31 c9                	xor    %ecx,%ecx
   16c1b:	3c 03                	cmp    $0x3,%al
   16c1d:	0f 92 c1             	setb   %cl
   16c20:	3c 06                	cmp    $0x6,%al
   16c22:	b8 02 00 00 00       	mov    $0x2,%eax
   16c27:	0f 45 c1             	cmovne %ecx,%eax
   16c2a:	31 c9                	xor    %ecx,%ecx
   16c2c:	a8 01                	test   $0x1,%al
   16c2e:	0f 94 c1             	sete   %cl
   16c31:	3c 02                	cmp    $0x2,%al
   16c33:	48 8d 4c 49 02       	lea    0x2(%rcx,%rcx,2),%rcx
   16c38:	b8 05 00 00 00       	mov    $0x5,%eax
   16c3d:	48 0f 45 c1          	cmovne %rcx,%rax
   16c41:	eb 24                	jmp    16c67 <std::path::Components::parse_next_component_back+0x107>
   16c43:	48 8d 0d 57 11 02 00 	lea    0x21157(%rip),%rcx        # 37da1 <str.6+0xa81>
   16c4a:	49 39 c8             	cmp    %rcx,%r8
   16c4d:	74 0c                	je     16c5b <std::path::Components::parse_next_component_back+0xfb>
   16c4f:	41 0f b7 08          	movzwl (%r8),%ecx
   16c53:	81 f9 2e 2e 00 00    	cmp    $0x2e2e,%ecx
   16c59:	75 0c                	jne    16c67 <std::path::Components::parse_next_component_back+0x107>
   16c5b:	b8 03 00 00 00       	mov    $0x3,%eax
   16c60:	eb 05                	jmp    16c67 <std::path::Components::parse_next_component_back+0x107>
   16c62:	b8 05 00 00 00       	mov    $0x5,%eax
   16c67:	49 01 f1             	add    %rsi,%r9
   16c6a:	4d 89 0f             	mov    %r9,(%r15)
   16c6d:	49 89 47 08          	mov    %rax,0x8(%r15)
   16c71:	4d 89 47 10          	mov    %r8,0x10(%r15)
   16c75:	49 89 77 18          	mov    %rsi,0x18(%r15)
   16c79:	0f 10 44 24 08       	movups 0x8(%rsp),%xmm0
   16c7e:	0f 10 4c 24 18       	movups 0x18(%rsp),%xmm1
   16c83:	41 0f 11 47 20       	movups %xmm0,0x20(%r15)
   16c88:	41 0f 11 4f 30       	movups %xmm1,0x30(%r15)
   16c8d:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   16c92:	49 89 47 40          	mov    %rax,0x40(%r15)
   16c96:	48 83 c4 30          	add    $0x30,%rsp
   16c9a:	5b                   	pop    %rbx
   16c9b:	41 5e                	pop    %r14
   16c9d:	41 5f                	pop    %r15
   16c9f:	c3                   	retq   
   16ca0:	48 8d 15 71 d1 02 00 	lea    0x2d171(%rip),%rdx        # 43e18 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x8e0>
   16ca7:	48 89 c7             	mov    %rax,%rdi
   16caa:	ff 15 40 f1 02 00    	callq  *0x2f140(%rip)        # 45df0 <_GLOBAL_OFFSET_TABLE_+0x468>
   16cb0:	0f 0b                	ud2    
   16cb2:	48 8d 15 77 d1 02 00 	lea    0x2d177(%rip),%rdx        # 43e30 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x8f8>
   16cb9:	ff 15 31 f1 02 00    	callq  *0x2f131(%rip)        # 45df0 <_GLOBAL_OFFSET_TABLE_+0x468>
   16cbf:	0f 0b                	ud2    
   16cc1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   16cc8:	00 00 00 
   16ccb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000016cd0 <<std::path::Components as core::iter::traits::iterator::Iterator>::next>:
   16cd0:	55                   	push   %rbp
   16cd1:	41 57                	push   %r15
   16cd3:	41 56                	push   %r14
   16cd5:	41 55                	push   %r13
   16cd7:	41 54                	push   %r12
   16cd9:	53                   	push   %rbx
   16cda:	48 83 ec 68          	sub    $0x68,%rsp
   16cde:	48 89 f8             	mov    %rdi,%rax
   16ce1:	44 8a 5e 39          	mov    0x39(%rsi),%r11b
   16ce5:	44 8a 66 3a          	mov    0x3a(%rsi),%r12b
   16ce9:	45 38 e3             	cmp    %r12b,%r11b
   16cec:	0f 87 73 04 00 00    	ja     17165 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x495>
   16cf2:	41 80 fb 03          	cmp    $0x3,%r11b
   16cf6:	0f 84 69 04 00 00    	je     17165 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x495>
   16cfc:	41 80 fc 03          	cmp    $0x3,%r12b
   16d00:	0f 84 5f 04 00 00    	je     17165 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x495>
   16d06:	48 8d 56 10          	lea    0x10(%rsi),%rdx
   16d0a:	8a 4e 10             	mov    0x10(%rsi),%cl
   16d0d:	8a 5e 38             	mov    0x38(%rsi),%bl
   16d10:	88 5c 24 07          	mov    %bl,0x7(%rsp)
   16d14:	31 ff                	xor    %edi,%edi
   16d16:	80 f9 03             	cmp    $0x3,%cl
   16d19:	40 0f 92 c7          	setb   %dil
   16d1d:	45 31 d2             	xor    %r10d,%r10d
   16d20:	80 f9 06             	cmp    $0x6,%cl
   16d23:	bd 02 00 00 00       	mov    $0x2,%ebp
   16d28:	0f 45 ef             	cmovne %edi,%ebp
   16d2b:	4c 0f 45 d2          	cmovne %rdx,%r10
   16d2f:	31 d2                	xor    %edx,%edx
   16d31:	40 f6 c5 01          	test   $0x1,%bpl
   16d35:	0f 94 c2             	sete   %dl
   16d38:	40 80 fd 02          	cmp    $0x2,%bpl
   16d3c:	48 8d 54 52 02       	lea    0x2(%rdx,%rdx,2),%rdx
   16d41:	bf 05 00 00 00       	mov    $0x5,%edi
   16d46:	48 0f 45 fa          	cmovne %rdx,%rdi
   16d4a:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   16d4f:	41 b6 27             	mov    $0x27,%r14b
   16d52:	41 d2 ee             	shr    %cl,%r14b
   16d55:	41 0f b6 d3          	movzbl %r11b,%edx
   16d59:	4c 8d 3d f4 00 02 00 	lea    0x200f4(%rip),%r15        # 36e54 <_fini+0x1530>
   16d60:	49 63 14 97          	movslq (%r15,%rdx,4),%rdx
   16d64:	4c 01 fa             	add    %r15,%rdx
   16d67:	ff e2                	jmpq   *%rdx
   16d69:	48 8d 3d e0 08 02 00 	lea    0x208e0(%rip),%rdi        # 37650 <str.6+0x330>
   16d70:	48 8d 15 01 d1 02 00 	lea    0x2d101(%rip),%rdx        # 43e78 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x940>
   16d77:	be 28 00 00 00       	mov    $0x28,%esi
   16d7c:	e8 7f 37 00 00       	callq  1a500 <std::panicking::begin_panic>
   16d81:	0f 0b                	ud2    
   16d83:	80 f9 06             	cmp    $0x6,%cl
   16d86:	75 0c                	jne    16d94 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0xc4>
   16d88:	c6 46 39 01          	movb   $0x1,0x39(%rsi)
   16d8c:	41 b3 01             	mov    $0x1,%r11b
   16d8f:	e9 a6 02 00 00       	jmpq   1703a <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x36a>
   16d94:	41 0f b6 2a          	movzbl (%r10),%ebp
   16d98:	48 8d 15 c5 00 02 00 	lea    0x200c5(%rip),%rdx        # 36e64 <_fini+0x1540>
   16d9f:	48 63 3c aa          	movslq (%rdx,%rbp,4),%rdi
   16da3:	48 01 d7             	add    %rdx,%rdi
   16da6:	ff e7                	jmpq   *%rdi
   16da8:	c6 46 39 01          	movb   $0x1,0x39(%rsi)
   16dac:	4c 8b 1e             	mov    (%rsi),%r11
   16daf:	4c 8b 46 08          	mov    0x8(%rsi),%r8
   16db3:	bf 02 00 00 00       	mov    $0x2,%edi
   16db8:	48 8d 1d bd 00 02 00 	lea    0x200bd(%rip),%rbx        # 36e7c <_fini+0x1558>
   16dbf:	48 63 14 ab          	movslq (%rbx,%rbp,4),%rdx
   16dc3:	48 01 da             	add    %rbx,%rdx
   16dc6:	ff e2                	jmpq   *%rdx
   16dc8:	49 8b 7a 10          	mov    0x10(%r10),%rdi
   16dcc:	48 83 c7 04          	add    $0x4,%rdi
   16dd0:	e9 ab 00 00 00       	jmpq   16e80 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x1b0>
   16dd5:	49 8b 52 10          	mov    0x10(%r10),%rdx
   16dd9:	48 83 c2 04          	add    $0x4,%rdx
   16ddd:	eb 36                	jmp    16e15 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x145>
   16ddf:	49 8b 52 10          	mov    0x10(%r10),%rdx
   16de3:	49 8b 7a 20          	mov    0x20(%r10),%rdi
   16de7:	48 8d 5f 01          	lea    0x1(%rdi),%rbx
   16deb:	48 85 ff             	test   %rdi,%rdi
   16dee:	48 0f 44 df          	cmove  %rdi,%rbx
   16df2:	48 01 da             	add    %rbx,%rdx
   16df5:	48 83 c2 08          	add    $0x8,%rdx
   16df9:	eb 1a                	jmp    16e15 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x145>
   16dfb:	49 8b 52 10          	mov    0x10(%r10),%rdx
   16dff:	49 8b 7a 20          	mov    0x20(%r10),%rdi
   16e03:	48 8d 5f 01          	lea    0x1(%rdi),%rbx
   16e07:	48 85 ff             	test   %rdi,%rdi
   16e0a:	48 0f 44 df          	cmove  %rdi,%rbx
   16e0e:	48 01 da             	add    %rbx,%rdx
   16e11:	48 83 c2 02          	add    $0x2,%rdx
   16e15:	c6 46 39 01          	movb   $0x1,0x39(%rsi)
   16e19:	41 b3 01             	mov    $0x1,%r11b
   16e1c:	48 85 d2             	test   %rdx,%rdx
   16e1f:	0f 84 15 02 00 00    	je     1703a <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x36a>
   16e25:	4c 8b 1e             	mov    (%rsi),%r11
   16e28:	4c 8b 46 08          	mov    0x8(%rsi),%r8
   16e2c:	bf 02 00 00 00       	mov    $0x2,%edi
   16e31:	48 8d 15 44 00 02 00 	lea    0x20044(%rip),%rdx        # 36e7c <_fini+0x1558>
   16e38:	48 63 1c aa          	movslq (%rdx,%rbp,4),%rbx
   16e3c:	48 01 d3             	add    %rdx,%rbx
   16e3f:	ff e3                	jmpq   *%rbx
   16e41:	49 8b 52 10          	mov    0x10(%r10),%rdx
   16e45:	49 8b 7a 20          	mov    0x20(%r10),%rdi
   16e49:	48 8d 5f 01          	lea    0x1(%rdi),%rbx
   16e4d:	48 85 ff             	test   %rdi,%rdi
   16e50:	48 0f 44 df          	cmove  %rdi,%rbx
   16e54:	48 8d 3c 1a          	lea    (%rdx,%rbx,1),%rdi
   16e58:	48 83 c7 08          	add    $0x8,%rdi
   16e5c:	eb 22                	jmp    16e80 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x1b0>
   16e5e:	bf 06 00 00 00       	mov    $0x6,%edi
   16e63:	eb 1b                	jmp    16e80 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x1b0>
   16e65:	49 8b 52 10          	mov    0x10(%r10),%rdx
   16e69:	49 8b 7a 20          	mov    0x20(%r10),%rdi
   16e6d:	48 8d 5f 01          	lea    0x1(%rdi),%rbx
   16e71:	48 85 ff             	test   %rdi,%rdi
   16e74:	48 0f 44 df          	cmove  %rdi,%rbx
   16e78:	48 8d 3c 1a          	lea    (%rdx,%rbx,1),%rdi
   16e7c:	48 83 c7 02          	add    $0x2,%rdi
   16e80:	49 39 f8             	cmp    %rdi,%r8
   16e83:	0f 82 d3 00 00 00    	jb     16f5c <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x28c>
   16e89:	41 b9 02 00 00 00    	mov    $0x2,%r9d
   16e8f:	48 8d 15 fe ff 01 00 	lea    0x1fffe(%rip),%rdx        # 36e94 <_fini+0x1570>
   16e96:	48 63 1c aa          	movslq (%rdx,%rbp,4),%rbx
   16e9a:	48 01 d3             	add    %rdx,%rbx
   16e9d:	ff e3                	jmpq   *%rbx
   16e9f:	4d 8b 4a 10          	mov    0x10(%r10),%r9
   16ea3:	49 83 c1 04          	add    $0x4,%r9
   16ea7:	eb 40                	jmp    16ee9 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x219>
   16ea9:	41 b9 06 00 00 00    	mov    $0x6,%r9d
   16eaf:	eb 38                	jmp    16ee9 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x219>
   16eb1:	49 8b 52 10          	mov    0x10(%r10),%rdx
   16eb5:	49 8b 6a 20          	mov    0x20(%r10),%rbp
   16eb9:	48 8d 5d 01          	lea    0x1(%rbp),%rbx
   16ebd:	48 85 ed             	test   %rbp,%rbp
   16ec0:	48 0f 44 dd          	cmove  %rbp,%rbx
   16ec4:	4c 8d 0c 1a          	lea    (%rdx,%rbx,1),%r9
   16ec8:	49 83 c1 08          	add    $0x8,%r9
   16ecc:	eb 1b                	jmp    16ee9 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x219>
   16ece:	49 8b 52 10          	mov    0x10(%r10),%rdx
   16ed2:	49 8b 6a 20          	mov    0x20(%r10),%rbp
   16ed6:	48 8d 5d 01          	lea    0x1(%rbp),%rbx
   16eda:	48 85 ed             	test   %rbp,%rbp
   16edd:	48 0f 44 dd          	cmove  %rbp,%rbx
   16ee1:	4c 8d 0c 1a          	lea    (%rdx,%rbx,1),%r9
   16ee5:	49 83 c1 02          	add    $0x2,%r9
   16ee9:	4c 89 c5             	mov    %r8,%rbp
   16eec:	4c 29 cd             	sub    %r9,%rbp
   16eef:	72 7d                	jb     16f6e <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x29e>
   16ef1:	4d 01 d9             	add    %r11,%r9
   16ef4:	4c 89 0e             	mov    %r9,(%rsi)
   16ef7:	48 89 6e 08          	mov    %rbp,0x8(%rsi)
   16efb:	48 8b 56 30          	mov    0x30(%rsi),%rdx
   16eff:	48 89 54 24 2f       	mov    %rdx,0x2f(%rsp)
   16f04:	0f 10 46 11          	movups 0x11(%rsi),%xmm0
   16f08:	0f 10 4e 21          	movups 0x21(%rsi),%xmm1
   16f0c:	0f 29 4c 24 20       	movaps %xmm1,0x20(%rsp)
   16f11:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
   16f16:	0f 28 44 24 20       	movaps 0x20(%rsp),%xmm0
   16f1b:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   16f20:	48 8b 54 24 2f       	mov    0x2f(%rsp),%rdx
   16f25:	48 89 54 24 5f       	mov    %rdx,0x5f(%rsp)
   16f2a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   16f31:	4c 89 58 08          	mov    %r11,0x8(%rax)
   16f35:	48 89 78 10          	mov    %rdi,0x10(%rax)
   16f39:	88 48 18             	mov    %cl,0x18(%rax)
   16f3c:	0f 28 44 24 40       	movaps 0x40(%rsp),%xmm0
   16f41:	0f 28 4c 24 50       	movaps 0x50(%rsp),%xmm1
   16f46:	0f 11 40 19          	movups %xmm0,0x19(%rax)
   16f4a:	0f 11 48 29          	movups %xmm1,0x29(%rax)
   16f4e:	48 8b 4c 24 5f       	mov    0x5f(%rsp),%rcx
   16f53:	48 89 48 38          	mov    %rcx,0x38(%rax)
   16f57:	e9 10 02 00 00       	jmpq   1716c <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x49c>
   16f5c:	48 8d 15 5d cf 02 00 	lea    0x2cf5d(%rip),%rdx        # 43ec0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x988>
   16f63:	4c 89 c6             	mov    %r8,%rsi
   16f66:	ff 15 bc ea 02 00    	callq  *0x2eabc(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   16f6c:	0f 0b                	ud2    
   16f6e:	48 8d 15 63 cf 02 00 	lea    0x2cf63(%rip),%rdx        # 43ed8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x9a0>
   16f75:	4c 89 cf             	mov    %r9,%rdi
   16f78:	e9 05 02 00 00       	jmpq   17182 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x4b2>
   16f7d:	c6 46 39 02          	movb   $0x2,0x39(%rsi)
   16f81:	80 7c 24 07 00       	cmpb   $0x0,0x7(%rsp)
   16f86:	75 7b                	jne    17003 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x333>
   16f88:	80 f9 06             	cmp    $0x6,%cl
   16f8b:	75 38                	jne    16fc5 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x2f5>
   16f8d:	48 8b 2e             	mov    (%rsi),%rbp
   16f90:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   16f94:	4c 8d 45 01          	lea    0x1(%rbp),%r8
   16f98:	4c 89 c7             	mov    %r8,%rdi
   16f9b:	41 b3 02             	mov    $0x2,%r11b
   16f9e:	48 85 d2             	test   %rdx,%rdx
   16fa1:	48 0f 44 fd          	cmove  %rbp,%rdi
   16fa5:	0f 84 8f 00 00 00    	je     1703a <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x36a>
   16fab:	4c 8d 2c 2a          	lea    (%rdx,%rbp,1),%r13
   16faf:	40 8a 6d 00          	mov    0x0(%rbp),%bpl
   16fb3:	4c 39 ef             	cmp    %r13,%rdi
   16fb6:	74 29                	je     16fe1 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x311>
   16fb8:	40 80 fd 2e          	cmp    $0x2e,%bpl
   16fbc:	75 23                	jne    16fe1 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x311>
   16fbe:	80 3f 2f             	cmpb   $0x2f,(%rdi)
   16fc1:	75 77                	jne    1703a <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x36a>
   16fc3:	eb 27                	jmp    16fec <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x31c>
   16fc5:	80 f9 05             	cmp    $0x5,%cl
   16fc8:	77 0b                	ja     16fd5 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x305>
   16fca:	44 89 f2             	mov    %r14d,%edx
   16fcd:	41 b3 02             	mov    $0x2,%r11b
   16fd0:	80 e2 01             	and    $0x1,%dl
   16fd3:	75 65                	jne    1703a <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x36a>
   16fd5:	48 c7 00 01 00 00 00 	movq   $0x1,(%rax)
   16fdc:	e9 8b 01 00 00       	jmpq   1716c <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x49c>
   16fe1:	4c 39 ef             	cmp    %r13,%rdi
   16fe4:	75 54                	jne    1703a <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x36a>
   16fe6:	40 80 fd 2e          	cmp    $0x2e,%bpl
   16fea:	75 4e                	jne    1703a <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x36a>
   16fec:	48 83 c2 ff          	add    $0xffffffffffffffff,%rdx
   16ff0:	4c 89 06             	mov    %r8,(%rsi)
   16ff3:	48 89 56 08          	mov    %rdx,0x8(%rsi)
   16ff7:	48 c7 00 02 00 00 00 	movq   $0x2,(%rax)
   16ffe:	e9 69 01 00 00       	jmpq   1716c <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x49c>
   17003:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
   17007:	48 85 c9             	test   %rcx,%rcx
   1700a:	74 18                	je     17024 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x354>
   1700c:	48 83 06 01          	addq   $0x1,(%rsi)
   17010:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
   17014:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
   17018:	48 c7 00 01 00 00 00 	movq   $0x1,(%rax)
   1701f:	e9 48 01 00 00       	jmpq   1716c <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x49c>
   17024:	48 8d 15 7d ce 02 00 	lea    0x2ce7d(%rip),%rdx        # 43ea8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x970>
   1702b:	bf 01 00 00 00       	mov    $0x1,%edi
   17030:	31 f6                	xor    %esi,%esi
   17032:	ff 15 b8 ed 02 00    	callq  *0x2edb8(%rip)        # 45df0 <_GLOBAL_OFFSET_TABLE_+0x468>
   17038:	0f 0b                	ud2    
   1703a:	45 38 e3             	cmp    %r12b,%r11b
   1703d:	0f 87 22 01 00 00    	ja     17165 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x495>
   17043:	41 80 fb 03          	cmp    $0x3,%r11b
   17047:	0f 84 18 01 00 00    	je     17165 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x495>
   1704d:	41 0f b6 d3          	movzbl %r11b,%edx
   17051:	49 63 14 97          	movslq (%r15,%rdx,4),%rdx
   17055:	4c 01 fa             	add    %r15,%rdx
   17058:	ff e2                	jmpq   *%rdx
   1705a:	4c 8b 46 08          	mov    0x8(%rsi),%r8
   1705e:	4d 85 c0             	test   %r8,%r8
   17061:	0f 84 fa 00 00 00    	je     17161 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x491>
   17067:	48 8b 2e             	mov    (%rsi),%rbp
   1706a:	31 ff                	xor    %edi,%edi
   1706c:	31 d2                	xor    %edx,%edx
   1706e:	66 90                	xchg   %ax,%ax
   17070:	80 7c 15 00 2f       	cmpb   $0x2f,0x0(%rbp,%rdx,1)
   17075:	74 19                	je     17090 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x3c0>
   17077:	48 83 c2 01          	add    $0x1,%rdx
   1707b:	49 39 d0             	cmp    %rdx,%r8
   1707e:	75 f0                	jne    17070 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x3a0>
   17080:	4c 89 c2             	mov    %r8,%rdx
   17083:	48 85 d2             	test   %rdx,%rdx
   17086:	75 12                	jne    1709a <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x3ca>
   17088:	41 bd 05 00 00 00    	mov    $0x5,%r13d
   1708e:	eb 5e                	jmp    170ee <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x41e>
   17090:	bf 01 00 00 00       	mov    $0x1,%edi
   17095:	48 85 d2             	test   %rdx,%rdx
   17098:	74 ee                	je     17088 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x3b8>
   1709a:	41 bd 04 00 00 00    	mov    $0x4,%r13d
   170a0:	48 83 fa 02          	cmp    $0x2,%rdx
   170a4:	74 2a                	je     170d0 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x400>
   170a6:	48 83 fa 01          	cmp    $0x1,%rdx
   170aa:	75 42                	jne    170ee <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x41e>
   170ac:	4c 8d 0d d6 0c 02 00 	lea    0x20cd6(%rip),%r9        # 37d89 <str.6+0xa69>
   170b3:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
   170b8:	4c 39 cd             	cmp    %r9,%rbp
   170bb:	74 31                	je     170ee <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x41e>
   170bd:	80 7d 00 2e          	cmpb   $0x2e,0x0(%rbp)
   170c1:	41 bd 04 00 00 00    	mov    $0x4,%r13d
   170c7:	75 25                	jne    170ee <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x41e>
   170c9:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
   170ce:	eb 1e                	jmp    170ee <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x41e>
   170d0:	48 8d 1d ca 0c 02 00 	lea    0x20cca(%rip),%rbx        # 37da1 <str.6+0xa81>
   170d7:	48 39 dd             	cmp    %rbx,%rbp
   170da:	74 0c                	je     170e8 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x418>
   170dc:	0f b7 5d 00          	movzwl 0x0(%rbp),%ebx
   170e0:	81 fb 2e 2e 00 00    	cmp    $0x2e2e,%ebx
   170e6:	75 06                	jne    170ee <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x41e>
   170e8:	41 bd 03 00 00 00    	mov    $0x3,%r13d
   170ee:	48 01 d7             	add    %rdx,%rdi
   170f1:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
   170f6:	48 89 5c 24 60       	mov    %rbx,0x60(%rsp)
   170fb:	0f 10 44 24 10       	movups 0x10(%rsp),%xmm0
   17100:	0f 10 4c 24 20       	movups 0x20(%rsp),%xmm1
   17105:	0f 29 4c 24 50       	movaps %xmm1,0x50(%rsp)
   1710a:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
   1710f:	48 89 5c 24 30       	mov    %rbx,0x30(%rsp)
   17114:	0f 29 4c 24 20       	movaps %xmm1,0x20(%rsp)
   17119:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   1711e:	4d 89 c1             	mov    %r8,%r9
   17121:	49 29 f9             	sub    %rdi,%r9
   17124:	72 55                	jb     1717b <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x4ab>
   17126:	48 01 ef             	add    %rbp,%rdi
   17129:	48 89 3e             	mov    %rdi,(%rsi)
   1712c:	4c 89 4e 08          	mov    %r9,0x8(%rsi)
   17130:	49 83 fd 05          	cmp    $0x5,%r13
   17134:	0f 84 00 ff ff ff    	je     1703a <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x36a>
   1713a:	4c 89 28             	mov    %r13,(%rax)
   1713d:	48 89 68 08          	mov    %rbp,0x8(%rax)
   17141:	48 89 50 10          	mov    %rdx,0x10(%rax)
   17145:	0f 28 44 24 10       	movaps 0x10(%rsp),%xmm0
   1714a:	0f 28 4c 24 20       	movaps 0x20(%rsp),%xmm1
   1714f:	0f 11 40 18          	movups %xmm0,0x18(%rax)
   17153:	0f 11 48 28          	movups %xmm1,0x28(%rax)
   17157:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   1715c:	e9 f2 fd ff ff       	jmpq   16f53 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x283>
   17161:	c6 46 39 03          	movb   $0x3,0x39(%rsi)
   17165:	48 c7 00 05 00 00 00 	movq   $0x5,(%rax)
   1716c:	48 83 c4 68          	add    $0x68,%rsp
   17170:	5b                   	pop    %rbx
   17171:	41 5c                	pop    %r12
   17173:	41 5d                	pop    %r13
   17175:	41 5e                	pop    %r14
   17177:	41 5f                	pop    %r15
   17179:	5d                   	pop    %rbp
   1717a:	c3                   	retq   
   1717b:	48 8d 15 0e cd 02 00 	lea    0x2cd0e(%rip),%rdx        # 43e90 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x958>
   17182:	4c 89 c6             	mov    %r8,%rsi
   17185:	ff 15 65 ec 02 00    	callq  *0x2ec65(%rip)        # 45df0 <_GLOBAL_OFFSET_TABLE_+0x468>
   1718b:	0f 0b                	ud2    
   1718d:	0f 1f 00             	nopl   (%rax)

0000000000017190 <<std::path::Display as core::fmt::Debug>::fmt>:
   17190:	48 89 f2             	mov    %rsi,%rdx
   17193:	48 8b 07             	mov    (%rdi),%rax
   17196:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   1719a:	48 89 c7             	mov    %rax,%rdi
   1719d:	ff 25 e5 ea 02 00    	jmpq   *0x2eae5(%rip)        # 45c88 <_GLOBAL_OFFSET_TABLE_+0x300>
   171a3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   171aa:	00 00 00 
   171ad:	0f 1f 00             	nopl   (%rax)

00000000000171b0 <std::process::abort>:
   171b0:	50                   	push   %rax
   171b1:	e8 ca 51 00 00       	callq  1c380 <std::sys::unix::abort_internal>
   171b6:	0f 0b                	ud2    
   171b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   171bf:	00 

00000000000171c0 <std::sync::once::Once::call_once::{{closure}}>:
   171c0:	55                   	push   %rbp
   171c1:	41 57                	push   %r15
   171c3:	41 56                	push   %r14
   171c5:	41 55                	push   %r13
   171c7:	41 54                	push   %r12
   171c9:	53                   	push   %rbx
   171ca:	48 83 ec 28          	sub    $0x28,%rsp
   171ce:	48 8b 07             	mov    (%rdi),%rax
   171d1:	f6 00 01             	testb  $0x1,(%rax)
   171d4:	c6 00 00             	movb   $0x0,(%rax)
   171d7:	0f 84 e3 01 00 00    	je     173c0 <std::sync::once::Once::call_once::{{closure}}+0x200>
   171dd:	48 8d 1d bc ef 02 00 	lea    0x2efbc(%rip),%rbx        # 461a0 <std::sys::unix::args::imp::LOCK>
   171e4:	48 89 df             	mov    %rbx,%rdi
   171e7:	ff 15 d3 ed 02 00    	callq  *0x2edd3(%rip)        # 45fc0 <pthread_mutex_lock@GLIBC_2.2.5>
   171ed:	48 c7 05 98 ef 02 00 	movq   $0x0,0x2ef98(%rip)        # 46190 <std::sys::unix::args::imp::ARGC>
   171f4:	00 00 00 00 
   171f8:	48 c7 05 95 ef 02 00 	movq   $0x0,0x2ef95(%rip)        # 46198 <std::sys::unix::args::imp::ARGV>
   171ff:	00 00 00 00 
   17203:	48 89 df             	mov    %rbx,%rdi
   17206:	ff 15 5c eb 02 00    	callq  *0x2eb5c(%rip)        # 45d68 <pthread_mutex_unlock@GLIBC_2.2.5>
   1720c:	48 8b 1d dd ef 02 00 	mov    0x2efdd(%rip),%rbx        # 461f0 <std::sys::unix::stack_overflow::imp::MAIN_ALTSTACK>
   17213:	48 85 db             	test   %rbx,%rbx
   17216:	74 4f                	je     17267 <std::sync::once::Once::call_once::{{closure}}+0xa7>
   17218:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   1721f:	00 00 
   17221:	c7 44 24 10 02 00 00 	movl   $0x2,0x10(%rsp)
   17228:	00 
   17229:	48 c7 44 24 18 00 20 	movq   $0x2000,0x18(%rsp)
   17230:	00 00 
   17232:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   17237:	31 f6                	xor    %esi,%esi
   17239:	ff 15 31 ed 02 00    	callq  *0x2ed31(%rip)        # 45f70 <sigaltstack@GLIBC_2.2.5>
   1723f:	48 8b 2d a2 ec 02 00 	mov    0x2eca2(%rip),%rbp        # 45ee8 <sysconf@GLIBC_2.2.5>
   17246:	bf 1e 00 00 00       	mov    $0x1e,%edi
   1724b:	ff d5                	callq  *%rbp
   1724d:	48 29 c3             	sub    %rax,%rbx
   17250:	bf 1e 00 00 00       	mov    $0x1e,%edi
   17255:	ff d5                	callq  *%rbp
   17257:	48 8d b0 00 20 00 00 	lea    0x2000(%rax),%rsi
   1725e:	48 89 df             	mov    %rbx,%rdi
   17261:	ff 15 b9 eb 02 00    	callq  *0x2ebb9(%rip)        # 45e20 <munmap@GLIBC_2.2.5>
   17267:	bd 01 00 00 00       	mov    $0x1,%ebp
   1726c:	41 bd 0a 00 00 00    	mov    $0xa,%r13d
   17272:	48 8d 1d 47 ee 02 00 	lea    0x2ee47(%rip),%rbx        # 460c0 <std::sys_common::at_exit_imp::LOCK>
   17279:	4c 8b 35 40 ed 02 00 	mov    0x2ed40(%rip),%r14        # 45fc0 <pthread_mutex_lock@GLIBC_2.2.5>
   17280:	e9 48 00 00 00       	jmpq   172cd <std::sync::once::Once::call_once::{{closure}}+0x10d>
   17285:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1728c:	00 00 00 
   1728f:	90                   	nop
   17290:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   17295:	e8 36 00 ff ff       	callq  72d0 <core::ptr::drop_in_place>
   1729a:	be 18 00 00 00       	mov    $0x18,%esi
   1729f:	ba 08 00 00 00       	mov    $0x8,%edx
   172a4:	4c 89 e7             	mov    %r12,%rdi
   172a7:	ff 15 4b e9 02 00    	callq  *0x2e94b(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   172ad:	41 bd 0a 00 00 00    	mov    $0xa,%r13d
   172b3:	4c 89 f3             	mov    %r14,%rbx
   172b6:	4c 8b 35 03 ed 02 00 	mov    0x2ed03(%rip),%r14        # 45fc0 <pthread_mutex_lock@GLIBC_2.2.5>
   172bd:	48 83 fd 0a          	cmp    $0xa,%rbp
   172c1:	0f 97 c0             	seta   %al
   172c4:	44 08 f8             	or     %r15b,%al
   172c7:	0f 85 ca 00 00 00    	jne    17397 <std::sync::once::Once::call_once::{{closure}}+0x1d7>
   172cd:	45 31 ff             	xor    %r15d,%r15d
   172d0:	48 83 fd 09          	cmp    $0x9,%rbp
   172d4:	41 0f 97 c7          	seta   %r15b
   172d8:	48 83 fd 0a          	cmp    $0xa,%rbp
   172dc:	48 8d 6d 01          	lea    0x1(%rbp),%rbp
   172e0:	49 0f 43 ed          	cmovae %r13,%rbp
   172e4:	48 89 df             	mov    %rbx,%rdi
   172e7:	41 ff d6             	callq  *%r14
   172ea:	4c 8b 25 f7 ed 02 00 	mov    0x2edf7(%rip),%r12        # 460e8 <std::sys_common::at_exit_imp::QUEUE>
   172f1:	4c 89 3d f0 ed 02 00 	mov    %r15,0x2edf0(%rip)        # 460e8 <std::sys_common::at_exit_imp::QUEUE>
   172f8:	48 89 df             	mov    %rbx,%rdi
   172fb:	ff 15 67 ea 02 00    	callq  *0x2ea67(%rip)        # 45d68 <pthread_mutex_unlock@GLIBC_2.2.5>
   17301:	4d 85 e4             	test   %r12,%r12
   17304:	74 b7                	je     172bd <std::sync::once::Once::call_once::{{closure}}+0xfd>
   17306:	49 83 fc 01          	cmp    $0x1,%r12
   1730a:	0f 84 96 00 00 00    	je     173a6 <std::sync::once::Once::call_once::{{closure}}+0x1e6>
   17310:	49 89 de             	mov    %rbx,%r14
   17313:	49 8b 04 24          	mov    (%r12),%rax
   17317:	49 8b 4c 24 08       	mov    0x8(%r12),%rcx
   1731c:	49 8b 54 24 10       	mov    0x10(%r12),%rdx
   17321:	48 89 d6             	mov    %rdx,%rsi
   17324:	48 c1 e6 04          	shl    $0x4,%rsi
   17328:	48 01 c6             	add    %rax,%rsi
   1732b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   17330:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   17335:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1733a:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
   1733f:	48 85 d2             	test   %rdx,%rdx
   17342:	0f 85 18 00 00 00    	jne    17360 <std::sync::once::Once::call_once::{{closure}}+0x1a0>
   17348:	e9 43 ff ff ff       	jmpq   17290 <std::sync::once::Once::call_once::{{closure}}+0xd0>
   1734d:	0f 1f 00             	nopl   (%rax)
   17350:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   17355:	48 3b 44 24 20       	cmp    0x20(%rsp),%rax
   1735a:	0f 84 30 ff ff ff    	je     17290 <std::sync::once::Once::call_once::{{closure}}+0xd0>
   17360:	48 8d 48 10          	lea    0x10(%rax),%rcx
   17364:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   17369:	4c 8b 28             	mov    (%rax),%r13
   1736c:	4d 85 ed             	test   %r13,%r13
   1736f:	0f 84 1b ff ff ff    	je     17290 <std::sync::once::Once::call_once::{{closure}}+0xd0>
   17375:	48 8b 58 08          	mov    0x8(%rax),%rbx
   17379:	4c 89 ef             	mov    %r13,%rdi
   1737c:	ff 53 18             	callq  *0x18(%rbx)
   1737f:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   17383:	48 85 f6             	test   %rsi,%rsi
   17386:	74 c8                	je     17350 <std::sync::once::Once::call_once::{{closure}}+0x190>
   17388:	48 8b 53 10          	mov    0x10(%rbx),%rdx
   1738c:	4c 89 ef             	mov    %r13,%rdi
   1738f:	ff 15 63 e8 02 00    	callq  *0x2e863(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   17395:	eb b9                	jmp    17350 <std::sync::once::Once::call_once::{{closure}}+0x190>
   17397:	48 83 c4 28          	add    $0x28,%rsp
   1739b:	5b                   	pop    %rbx
   1739c:	41 5c                	pop    %r12
   1739e:	41 5d                	pop    %r13
   173a0:	41 5e                	pop    %r14
   173a2:	41 5f                	pop    %r15
   173a4:	5d                   	pop    %rbp
   173a5:	c3                   	retq   
   173a6:	48 8d 3d 75 0a 02 00 	lea    0x20a75(%rip),%rdi        # 37e22 <str.6+0xb02>
   173ad:	48 8d 15 1c cc 02 00 	lea    0x2cc1c(%rip),%rdx        # 43fd0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xa98>
   173b4:	be 1f 00 00 00       	mov    $0x1f,%esi
   173b9:	e8 42 31 00 00       	callq  1a500 <std::panicking::begin_panic>
   173be:	0f 0b                	ud2    
   173c0:	48 8d 3d 33 02 02 00 	lea    0x20233(%rip),%rdi        # 375fa <str.6+0x2da>
   173c7:	48 8d 15 4a cb 02 00 	lea    0x2cb4a(%rip),%rdx        # 43f18 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x9e0>
   173ce:	be 2b 00 00 00       	mov    $0x2b,%esi
   173d3:	ff 15 ff ea 02 00    	callq  *0x2eaff(%rip)        # 45ed8 <_GLOBAL_OFFSET_TABLE_+0x550>
   173d9:	0f 0b                	ud2    
   173db:	49 89 c6             	mov    %rax,%r14
   173de:	eb 18                	jmp    173f8 <std::sync::once::Once::call_once::{{closure}}+0x238>
   173e0:	49 89 c6             	mov    %rax,%r14
   173e3:	4c 89 ef             	mov    %r13,%rdi
   173e6:	48 89 de             	mov    %rbx,%rsi
   173e9:	e8 e2 25 ff ff       	callq  99d0 <alloc::alloc::box_free>
   173ee:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   173f3:	e8 d8 fe fe ff       	callq  72d0 <core::ptr::drop_in_place>
   173f8:	4c 89 e7             	mov    %r12,%rdi
   173fb:	e8 f0 25 ff ff       	callq  99f0 <alloc::alloc::box_free>
   17400:	4c 89 f7             	mov    %r14,%rdi
   17403:	e8 48 dc fe ff       	callq  5050 <_Unwind_Resume@plt>
   17408:	0f 0b                	ud2    
   1740a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000017410 <std::sync::once::Once::call_once_force::{{closure}}>:
   17410:	41 57                	push   %r15
   17412:	41 56                	push   %r14
   17414:	41 54                	push   %r12
   17416:	53                   	push   %rbx
   17417:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
   1741e:	48 8b 07             	mov    (%rdi),%rax
   17421:	4c 8b 38             	mov    (%rax),%r15
   17424:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1742b:	4d 85 ff             	test   %r15,%r15
   1742e:	0f 84 21 02 00 00    	je     17655 <std::sync::once::Once::call_once_force::{{closure}}+0x245>
   17434:	48 8d 1d 85 ec 02 00 	lea    0x2ec85(%rip),%rbx        # 460c0 <std::sys_common::at_exit_imp::LOCK>
   1743b:	48 89 df             	mov    %rbx,%rdi
   1743e:	ff 15 7c eb 02 00    	callq  *0x2eb7c(%rip)        # 45fc0 <pthread_mutex_lock@GLIBC_2.2.5>
   17444:	48 89 5c 24 50       	mov    %rbx,0x50(%rsp)
   17449:	48 8b 1d 98 ec 02 00 	mov    0x2ec98(%rip),%rbx        # 460e8 <std::sys_common::at_exit_imp::QUEUE>
   17450:	48 83 fb 01          	cmp    $0x1,%rbx
   17454:	0f 84 b8 00 00 00    	je     17512 <std::sync::once::Once::call_once_force::{{closure}}+0x102>
   1745a:	48 85 db             	test   %rbx,%rbx
   1745d:	75 31                	jne    17490 <std::sync::once::Once::call_once_force::{{closure}}+0x80>
   1745f:	bf 18 00 00 00       	mov    $0x18,%edi
   17464:	be 08 00 00 00       	mov    $0x8,%esi
   17469:	ff 15 11 e7 02 00    	callq  *0x2e711(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   1746f:	48 85 c0             	test   %rax,%rax
   17472:	0f 84 12 02 00 00    	je     1768a <std::sync::once::Once::call_once_force::{{closure}}+0x27a>
   17478:	48 89 c3             	mov    %rax,%rbx
   1747b:	48 c7 00 08 00 00 00 	movq   $0x8,(%rax)
   17482:	0f 57 c0             	xorps  %xmm0,%xmm0
   17485:	0f 11 40 08          	movups %xmm0,0x8(%rax)
   17489:	48 89 05 58 ec 02 00 	mov    %rax,0x2ec58(%rip)        # 460e8 <std::sys_common::at_exit_imp::QUEUE>
   17490:	48 c7 04 24 01 00 00 	movq   $0x1,(%rsp)
   17497:	00 
   17498:	4c 8d 25 b9 cc 02 00 	lea    0x2ccb9(%rip),%r12        # 44158 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xc20>
   1749f:	4c 89 64 24 08       	mov    %r12,0x8(%rsp)
   174a4:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   174a8:	48 3b 73 08          	cmp    0x8(%rbx),%rsi
   174ac:	75 6d                	jne    1751b <std::sync::once::Once::call_once_force::{{closure}}+0x10b>
   174ae:	48 89 f1             	mov    %rsi,%rcx
   174b1:	48 ff c1             	inc    %rcx
   174b4:	0f 84 c8 01 00 00    	je     17682 <std::sync::once::Once::call_once_force::{{closure}}+0x272>
   174ba:	48 8d 04 36          	lea    (%rsi,%rsi,1),%rax
   174be:	48 39 c8             	cmp    %rcx,%rax
   174c1:	48 0f 47 c8          	cmova  %rax,%rcx
   174c5:	48 83 f9 04          	cmp    $0x4,%rcx
   174c9:	b8 04 00 00 00       	mov    $0x4,%eax
   174ce:	48 0f 47 c1          	cmova  %rcx,%rax
   174d2:	ba 10 00 00 00       	mov    $0x10,%edx
   174d7:	31 c9                	xor    %ecx,%ecx
   174d9:	48 f7 e2             	mul    %rdx
   174dc:	49 89 c6             	mov    %rax,%r14
   174df:	0f 90 c0             	seto   %al
   174e2:	0f 91 c1             	setno  %cl
   174e5:	48 c1 e1 03          	shl    $0x3,%rcx
   174e9:	48 85 f6             	test   %rsi,%rsi
   174ec:	74 32                	je     17520 <std::sync::once::Once::call_once_force::{{closure}}+0x110>
   174ee:	84 c0                	test   %al,%al
   174f0:	0f 85 8c 01 00 00    	jne    17682 <std::sync::once::Once::call_once_force::{{closure}}+0x272>
   174f6:	48 8b 3b             	mov    (%rbx),%rdi
   174f9:	48 85 ff             	test   %rdi,%rdi
   174fc:	74 2a                	je     17528 <std::sync::once::Once::call_once_force::{{closure}}+0x118>
   174fe:	48 c1 e6 04          	shl    $0x4,%rsi
   17502:	74 24                	je     17528 <std::sync::once::Once::call_once_force::{{closure}}+0x118>
   17504:	48 89 ca             	mov    %rcx,%rdx
   17507:	4c 89 f1             	mov    %r14,%rcx
   1750a:	ff 15 68 ea 02 00    	callq  *0x2ea68(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
   17510:	eb 27                	jmp    17539 <std::sync::once::Once::call_once_force::{{closure}}+0x129>
   17512:	48 8d 3d a7 eb 02 00 	lea    0x2eba7(%rip),%rdi        # 460c0 <std::sys_common::at_exit_imp::LOCK>
   17519:	eb 54                	jmp    1756f <std::sync::once::Once::call_once_force::{{closure}}+0x15f>
   1751b:	48 8b 0b             	mov    (%rbx),%rcx
   1751e:	eb 34                	jmp    17554 <std::sync::once::Once::call_once_force::{{closure}}+0x144>
   17520:	84 c0                	test   %al,%al
   17522:	0f 85 5a 01 00 00    	jne    17682 <std::sync::once::Once::call_once_force::{{closure}}+0x272>
   17528:	4d 85 f6             	test   %r14,%r14
   1752b:	74 0f                	je     1753c <std::sync::once::Once::call_once_force::{{closure}}+0x12c>
   1752d:	4c 89 f7             	mov    %r14,%rdi
   17530:	48 89 ce             	mov    %rcx,%rsi
   17533:	ff 15 47 e6 02 00    	callq  *0x2e647(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   17539:	48 89 c1             	mov    %rax,%rcx
   1753c:	48 85 c9             	test   %rcx,%rcx
   1753f:	0f 84 57 01 00 00    	je     1769c <std::sync::once::Once::call_once_force::{{closure}}+0x28c>
   17545:	48 89 0b             	mov    %rcx,(%rbx)
   17548:	49 c1 ee 04          	shr    $0x4,%r14
   1754c:	4c 89 73 08          	mov    %r14,0x8(%rbx)
   17550:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   17554:	48 c1 e6 04          	shl    $0x4,%rsi
   17558:	48 c7 04 31 01 00 00 	movq   $0x1,(%rcx,%rsi,1)
   1755f:	00 
   17560:	4c 89 64 31 08       	mov    %r12,0x8(%rcx,%rsi,1)
   17565:	48 83 43 10 01       	addq   $0x1,0x10(%rbx)
   1756a:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   1756f:	ff 15 f3 e7 02 00    	callq  *0x2e7f3(%rip)        # 45d68 <pthread_mutex_unlock@GLIBC_2.2.5>
   17575:	bf 00 04 00 00       	mov    $0x400,%edi
   1757a:	be 01 00 00 00       	mov    $0x1,%esi
   1757f:	ff 15 fb e5 02 00    	callq  *0x2e5fb(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   17585:	48 85 c0             	test   %rax,%rax
   17588:	0f 84 e2 00 00 00    	je     17670 <std::sync::once::Once::call_once_force::{{closure}}+0x260>
   1758e:	0f b7 4c 24 04       	movzwl 0x4(%rsp),%ecx
   17593:	8b 14 24             	mov    (%rsp),%edx
   17596:	0f 57 c0             	xorps  %xmm0,%xmm0
   17599:	0f 29 04 24          	movaps %xmm0,(%rsp)
   1759d:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   175a2:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   175a7:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   175ac:	0f 28 05 2d ec 01 00 	movaps 0x1ec2d(%rip),%xmm0        # 361e0 <_fini+0x8bc>
   175b3:	0f 11 44 24 38       	movups %xmm0,0x38(%rsp)
   175b8:	66 c7 44 24 48 01 00 	movw   $0x1,0x48(%rsp)
   175bf:	89 54 24 4a          	mov    %edx,0x4a(%rsp)
   175c3:	66 89 4c 24 4e       	mov    %cx,0x4e(%rsp)
   175c8:	48 8d 5c 24 50       	lea    0x50(%rsp),%rbx
   175cd:	48 89 df             	mov    %rbx,%rdi
   175d0:	ff 15 d2 e5 02 00    	callq  *0x2e5d2(%rip)        # 45ba8 <pthread_mutexattr_init@GLIBC_2.2.5>
   175d6:	48 89 df             	mov    %rbx,%rdi
   175d9:	be 01 00 00 00       	mov    $0x1,%esi
   175de:	ff 15 9c e7 02 00    	callq  *0x2e79c(%rip)        # 45d80 <pthread_mutexattr_settype@GLIBC_2.2.5>
   175e4:	48 89 e7             	mov    %rsp,%rdi
   175e7:	48 89 de             	mov    %rbx,%rsi
   175ea:	ff 15 b0 e9 02 00    	callq  *0x2e9b0(%rip)        # 45fa0 <pthread_mutex_init@GLIBC_2.2.5>
   175f0:	48 89 df             	mov    %rbx,%rdi
   175f3:	ff 15 5f e5 02 00    	callq  *0x2e55f(%rip)        # 45b58 <pthread_mutexattr_destroy@GLIBC_2.2.5>
   175f9:	0f 28 04 24          	movaps (%rsp),%xmm0
   175fd:	0f 28 4c 24 10       	movaps 0x10(%rsp),%xmm1
   17602:	0f 28 54 24 20       	movaps 0x20(%rsp),%xmm2
   17607:	0f 28 5c 24 30       	movaps 0x30(%rsp),%xmm3
   1760c:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   17611:	0f 28 64 24 40       	movaps 0x40(%rsp),%xmm4
   17616:	0f 29 a4 24 90 00 00 	movaps %xmm4,0x90(%rsp)
   1761d:	00 
   1761e:	0f 29 9c 24 80 00 00 	movaps %xmm3,0x80(%rsp)
   17625:	00 
   17626:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
   1762b:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
   17630:	49 8b 07             	mov    (%r15),%rax
   17633:	0f 11 60 40          	movups %xmm4,0x40(%rax)
   17637:	0f 11 58 30          	movups %xmm3,0x30(%rax)
   1763b:	0f 11 50 20          	movups %xmm2,0x20(%rax)
   1763f:	0f 11 48 10          	movups %xmm1,0x10(%rax)
   17643:	0f 11 00             	movups %xmm0,(%rax)
   17646:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
   1764d:	5b                   	pop    %rbx
   1764e:	41 5c                	pop    %r12
   17650:	41 5e                	pop    %r14
   17652:	41 5f                	pop    %r15
   17654:	c3                   	retq   
   17655:	48 8d 3d 9e ff 01 00 	lea    0x1ff9e(%rip),%rdi        # 375fa <str.6+0x2da>
   1765c:	48 8d 15 f5 c8 02 00 	lea    0x2c8f5(%rip),%rdx        # 43f58 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xa20>
   17663:	be 2b 00 00 00       	mov    $0x2b,%esi
   17668:	ff 15 6a e8 02 00    	callq  *0x2e86a(%rip)        # 45ed8 <_GLOBAL_OFFSET_TABLE_+0x550>
   1766e:	0f 0b                	ud2    
   17670:	bf 00 04 00 00       	mov    $0x400,%edi
   17675:	be 01 00 00 00       	mov    $0x1,%esi
   1767a:	ff 15 a0 e4 02 00    	callq  *0x2e4a0(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   17680:	0f 0b                	ud2    
   17682:	ff 15 58 e4 02 00    	callq  *0x2e458(%rip)        # 45ae0 <_GLOBAL_OFFSET_TABLE_+0x158>
   17688:	0f 0b                	ud2    
   1768a:	bf 18 00 00 00       	mov    $0x18,%edi
   1768f:	be 08 00 00 00       	mov    $0x8,%esi
   17694:	ff 15 86 e4 02 00    	callq  *0x2e486(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   1769a:	0f 0b                	ud2    
   1769c:	be 08 00 00 00       	mov    $0x8,%esi
   176a1:	4c 89 f7             	mov    %r14,%rdi
   176a4:	ff 15 76 e4 02 00    	callq  *0x2e476(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   176aa:	0f 0b                	ud2    
   176ac:	48 89 c3             	mov    %rax,%rbx
   176af:	48 89 e7             	mov    %rsp,%rdi
   176b2:	e8 79 eb fe ff       	callq  6230 <core::ptr::drop_in_place>
   176b7:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
   176bc:	e8 9f f5 fe ff       	callq  6c60 <core::ptr::drop_in_place>
   176c1:	48 89 df             	mov    %rbx,%rdi
   176c4:	e8 87 d9 fe ff       	callq  5050 <_Unwind_Resume@plt>
   176c9:	0f 0b                	ud2    
   176cb:	48 89 c3             	mov    %rax,%rbx
   176ce:	eb e7                	jmp    176b7 <std::sync::once::Once::call_once_force::{{closure}}+0x2a7>

00000000000176d0 <std::sync::once::Once::call_inner>:
   176d0:	55                   	push   %rbp
   176d1:	41 57                	push   %r15
   176d3:	41 56                	push   %r14
   176d5:	41 55                	push   %r13
   176d7:	41 54                	push   %r12
   176d9:	53                   	push   %rbx
   176da:	48 83 ec 38          	sub    $0x38,%rsp
   176de:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   176e3:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
   176e8:	49 89 fc             	mov    %rdi,%r12
   176eb:	4c 8b 37             	mov    (%rdi),%r14
   176ee:	85 f6                	test   %esi,%esi
   176f0:	0f 84 c6 01 00 00    	je     178bc <std::sync::once::Once::call_inner+0x1ec>
   176f6:	45 31 ff             	xor    %r15d,%r15d
   176f9:	48 8b 2d d0 e5 02 00 	mov    0x2e5d0(%rip),%rbp        # 45cd0 <syscall@GLIBC_2.2.5>
   17700:	49 89 e5             	mov    %rsp,%r13
   17703:	e9 0c 00 00 00       	jmpq   17714 <std::sync::once::Once::call_inner+0x44>
   17708:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1770f:	00 
   17710:	4d 8b 34 24          	mov    (%r12),%r14
   17714:	4c 89 f3             	mov    %r14,%rbx
   17717:	49 83 fe 02          	cmp    $0x2,%r14
   1771b:	73 23                	jae    17740 <std::sync::once::Once::call_inner+0x70>
   1771d:	48 89 d8             	mov    %rbx,%rax
   17720:	b9 02 00 00 00       	mov    $0x2,%ecx
   17725:	f0 49 0f b1 0c 24    	lock cmpxchg %rcx,(%r12)
   1772b:	49 89 c6             	mov    %rax,%r14
   1772e:	0f 85 e0 ff ff ff    	jne    17714 <std::sync::once::Once::call_inner+0x44>
   17734:	e9 3a 03 00 00       	jmpq   17a73 <std::sync::once::Once::call_inner+0x3a3>
   17739:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17740:	48 83 fb 03          	cmp    $0x3,%rbx
   17744:	0f 84 6c 03 00 00    	je     17ab6 <std::sync::once::Once::call_inner+0x3e6>
   1774a:	89 d8                	mov    %ebx,%eax
   1774c:	83 e0 03             	and    $0x3,%eax
   1774f:	83 f8 02             	cmp    $0x2,%eax
   17752:	0f 84 12 00 00 00    	je     1776a <std::sync::once::Once::call_inner+0x9a>
   17758:	e9 9e 03 00 00       	jmpq   17afb <std::sync::once::Once::call_inner+0x42b>
   1775d:	0f 1f 00             	nopl   (%rax)
   17760:	89 d8                	mov    %ebx,%eax
   17762:	83 e0 03             	and    $0x3,%eax
   17765:	83 f8 02             	cmp    $0x2,%eax
   17768:	75 a6                	jne    17710 <std::sync::once::Once::call_inner+0x40>
   1776a:	66 66 66 64 48 8b 04 	data16 data16 data16 mov %fs:0x0,%rax
   17771:	25 00 00 00 00 
   17776:	49 89 c6             	mov    %rax,%r14
   17779:	83 b8 a0 ff ff ff 01 	cmpl   $0x1,-0x60(%rax)
   17780:	75 0e                	jne    17790 <std::sync::once::Once::call_inner+0xc0>
   17782:	48 8d 80 a8 ff ff ff 	lea    -0x58(%rax),%rax
   17789:	e9 10 00 00 00       	jmpq   1779e <std::sync::once::Once::call_inner+0xce>
   1778e:	66 90                	xchg   %ax,%ax
   17790:	e8 6b be ff ff       	callq  13600 <std::thread::local::fast::Key<T>::try_initialize>
   17795:	48 85 c0             	test   %rax,%rax
   17798:	0f 84 27 03 00 00    	je     17ac5 <std::sync::once::Once::call_inner+0x3f5>
   1779e:	48 89 c7             	mov    %rax,%rdi
   177a1:	e8 5a 12 00 00       	callq  18a00 <std::sys_common::thread_info::ThreadInfo::with::{{closure}}>
   177a6:	48 89 d9             	mov    %rbx,%rcx
   177a9:	48 83 e1 fc          	and    $0xfffffffffffffffc,%rcx
   177ad:	48 89 04 24          	mov    %rax,(%rsp)
   177b1:	c6 44 24 10 00       	movb   $0x0,0x10(%rsp)
   177b6:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   177bb:	48 89 d8             	mov    %rbx,%rax
   177be:	48 8d 4c 24 02       	lea    0x2(%rsp),%rcx
   177c3:	f0 49 0f b1 0c 24    	lock cmpxchg %rcx,(%r12)
   177c9:	0f 84 bc 00 00 00    	je     1788b <std::sync::once::Once::call_inner+0x1bb>
   177cf:	48 89 c3             	mov    %rax,%rbx
   177d2:	48 8b 04 24          	mov    (%rsp),%rax
   177d6:	48 85 c0             	test   %rax,%rax
   177d9:	74 85                	je     17760 <std::sync::once::Once::call_inner+0x90>
   177db:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   177e0:	0f 85 7a ff ff ff    	jne    17760 <std::sync::once::Once::call_inner+0x90>
   177e6:	4c 89 ef             	mov    %r13,%rdi
   177e9:	e8 92 21 ff ff       	callq  9980 <alloc::sync::Arc<T>::drop_slow>
   177ee:	e9 6d ff ff ff       	jmpq   17760 <std::sync::once::Once::call_inner+0x90>
   177f3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   177fa:	00 00 00 
   177fd:	0f 1f 00             	nopl   (%rax)
   17800:	4c 89 f0             	mov    %r14,%rax
   17803:	41 83 be a0 ff ff ff 	cmpl   $0x1,-0x60(%r14)
   1780a:	01 
   1780b:	75 13                	jne    17820 <std::sync::once::Once::call_inner+0x150>
   1780d:	48 8d 80 a8 ff ff ff 	lea    -0x58(%rax),%rax
   17814:	e9 15 00 00 00       	jmpq   1782e <std::sync::once::Once::call_inner+0x15e>
   17819:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17820:	e8 db bd ff ff       	callq  13600 <std::thread::local::fast::Key<T>::try_initialize>
   17825:	48 85 c0             	test   %rax,%rax
   17828:	0f 84 b2 02 00 00    	je     17ae0 <std::sync::once::Once::call_inner+0x410>
   1782e:	48 89 c7             	mov    %rax,%rdi
   17831:	e8 ca 11 00 00       	callq  18a00 <std::sys_common::thread_info::ThreadInfo::with::{{closure}}>
   17836:	48 89 c3             	mov    %rax,%rbx
   17839:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1783e:	f0 83 68 28 01       	lock subl $0x1,0x28(%rax)
   17843:	74 30                	je     17875 <std::sync::once::Once::call_inner+0x1a5>
   17845:	48 83 c3 28          	add    $0x28,%rbx
   17849:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17850:	bf ca 00 00 00       	mov    $0xca,%edi
   17855:	48 89 de             	mov    %rbx,%rsi
   17858:	ba 80 00 00 00       	mov    $0x80,%edx
   1785d:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   17862:	45 31 c0             	xor    %r8d,%r8d
   17865:	31 c0                	xor    %eax,%eax
   17867:	ff d5                	callq  *%rbp
   17869:	b8 01 00 00 00       	mov    $0x1,%eax
   1786e:	f0 44 0f b1 3b       	lock cmpxchg %r15d,(%rbx)
   17873:	75 db                	jne    17850 <std::sync::once::Once::call_inner+0x180>
   17875:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1787a:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   1787f:	75 0a                	jne    1788b <std::sync::once::Once::call_inner+0x1bb>
   17881:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   17886:	e8 f5 20 ff ff       	callq  9980 <alloc::sync::Arc<T>::drop_slow>
   1788b:	8a 44 24 10          	mov    0x10(%rsp),%al
   1788f:	84 c0                	test   %al,%al
   17891:	0f 84 69 ff ff ff    	je     17800 <std::sync::once::Once::call_inner+0x130>
   17897:	48 8b 04 24          	mov    (%rsp),%rax
   1789b:	48 85 c0             	test   %rax,%rax
   1789e:	0f 84 6c fe ff ff    	je     17710 <std::sync::once::Once::call_inner+0x40>
   178a4:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   178a9:	0f 85 61 fe ff ff    	jne    17710 <std::sync::once::Once::call_inner+0x40>
   178af:	4c 89 ef             	mov    %r13,%rdi
   178b2:	e8 c9 20 ff ff       	callq  9980 <alloc::sync::Arc<T>::drop_slow>
   178b7:	e9 54 fe ff ff       	jmpq   17710 <std::sync::once::Once::call_inner+0x40>
   178bc:	31 db                	xor    %ebx,%ebx
   178be:	b9 02 00 00 00       	mov    $0x2,%ecx
   178c3:	4c 8b 3d 06 e4 02 00 	mov    0x2e406(%rip),%r15        # 45cd0 <syscall@GLIBC_2.2.5>
   178ca:	4d 85 f6             	test   %r14,%r14
   178cd:	0f 84 bd 00 00 00    	je     17990 <std::sync::once::Once::call_inner+0x2c0>
   178d3:	49 83 fe 03          	cmp    $0x3,%r14
   178d7:	0f 84 d9 01 00 00    	je     17ab6 <std::sync::once::Once::call_inner+0x3e6>
   178dd:	49 83 fe 01          	cmp    $0x1,%r14
   178e1:	0f 84 2e 02 00 00    	je     17b15 <std::sync::once::Once::call_inner+0x445>
   178e7:	44 89 f0             	mov    %r14d,%eax
   178ea:	83 e0 03             	and    $0x3,%eax
   178ed:	83 f8 02             	cmp    $0x2,%eax
   178f0:	0f 84 19 00 00 00    	je     1790f <std::sync::once::Once::call_inner+0x23f>
   178f6:	e9 00 02 00 00       	jmpq   17afb <std::sync::once::Once::call_inner+0x42b>
   178fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   17900:	44 89 f0             	mov    %r14d,%eax
   17903:	83 e0 03             	and    $0x3,%eax
   17906:	83 f8 02             	cmp    $0x2,%eax
   17909:	0f 85 c1 00 00 00    	jne    179d0 <std::sync::once::Once::call_inner+0x300>
   1790f:	66 66 66 64 48 8b 04 	data16 data16 data16 mov %fs:0x0,%rax
   17916:	25 00 00 00 00 
   1791b:	49 89 c5             	mov    %rax,%r13
   1791e:	83 b8 a0 ff ff ff 01 	cmpl   $0x1,-0x60(%rax)
   17925:	75 09                	jne    17930 <std::sync::once::Once::call_inner+0x260>
   17927:	48 8d 80 a8 ff ff ff 	lea    -0x58(%rax),%rax
   1792e:	eb 0e                	jmp    1793e <std::sync::once::Once::call_inner+0x26e>
   17930:	e8 cb bc ff ff       	callq  13600 <std::thread::local::fast::Key<T>::try_initialize>
   17935:	48 85 c0             	test   %rax,%rax
   17938:	0f 84 87 01 00 00    	je     17ac5 <std::sync::once::Once::call_inner+0x3f5>
   1793e:	48 89 c7             	mov    %rax,%rdi
   17941:	e8 ba 10 00 00       	callq  18a00 <std::sys_common::thread_info::ThreadInfo::with::{{closure}}>
   17946:	4c 89 f1             	mov    %r14,%rcx
   17949:	48 83 e1 fc          	and    $0xfffffffffffffffc,%rcx
   1794d:	48 89 04 24          	mov    %rax,(%rsp)
   17951:	c6 44 24 10 00       	movb   $0x0,0x10(%rsp)
   17956:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   1795b:	4c 89 f0             	mov    %r14,%rax
   1795e:	48 8d 4c 24 02       	lea    0x2(%rsp),%rcx
   17963:	f0 49 0f b1 0c 24    	lock cmpxchg %rcx,(%r12)
   17969:	74 3b                	je     179a6 <std::sync::once::Once::call_inner+0x2d6>
   1796b:	49 89 c6             	mov    %rax,%r14
   1796e:	48 8b 04 24          	mov    (%rsp),%rax
   17972:	48 85 c0             	test   %rax,%rax
   17975:	74 89                	je     17900 <std::sync::once::Once::call_inner+0x230>
   17977:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   1797c:	75 82                	jne    17900 <std::sync::once::Once::call_inner+0x230>
   1797e:	48 89 e7             	mov    %rsp,%rdi
   17981:	e8 fa 1f ff ff       	callq  9980 <alloc::sync::Arc<T>::drop_slow>
   17986:	e9 75 ff ff ff       	jmpq   17900 <std::sync::once::Once::call_inner+0x230>
   1798b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   17990:	31 c0                	xor    %eax,%eax
   17992:	f0 49 0f b1 0c 24    	lock cmpxchg %rcx,(%r12)
   17998:	49 89 c6             	mov    %rax,%r14
   1799b:	0f 85 29 ff ff ff    	jne    178ca <std::sync::once::Once::call_inner+0x1fa>
   179a1:	e9 cd 00 00 00       	jmpq   17a73 <std::sync::once::Once::call_inner+0x3a3>
   179a6:	8a 44 24 10          	mov    0x10(%rsp),%al
   179aa:	84 c0                	test   %al,%al
   179ac:	4c 8d 74 24 18       	lea    0x18(%rsp),%r14
   179b1:	74 35                	je     179e8 <std::sync::once::Once::call_inner+0x318>
   179b3:	48 8b 04 24          	mov    (%rsp),%rax
   179b7:	48 85 c0             	test   %rax,%rax
   179ba:	74 14                	je     179d0 <std::sync::once::Once::call_inner+0x300>
   179bc:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   179c1:	75 0d                	jne    179d0 <std::sync::once::Once::call_inner+0x300>
   179c3:	48 89 e7             	mov    %rsp,%rdi
   179c6:	e8 b5 1f ff ff       	callq  9980 <alloc::sync::Arc<T>::drop_slow>
   179cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   179d0:	4d 8b 34 24          	mov    (%r12),%r14
   179d4:	b9 02 00 00 00       	mov    $0x2,%ecx
   179d9:	e9 ec fe ff ff       	jmpq   178ca <std::sync::once::Once::call_inner+0x1fa>
   179de:	66 90                	xchg   %ax,%ax
   179e0:	8a 44 24 10          	mov    0x10(%rsp),%al
   179e4:	84 c0                	test   %al,%al
   179e6:	75 cb                	jne    179b3 <std::sync::once::Once::call_inner+0x2e3>
   179e8:	4c 89 e8             	mov    %r13,%rax
   179eb:	41 83 bd a0 ff ff ff 	cmpl   $0x1,-0x60(%r13)
   179f2:	01 
   179f3:	75 0b                	jne    17a00 <std::sync::once::Once::call_inner+0x330>
   179f5:	48 8d 80 a8 ff ff ff 	lea    -0x58(%rax),%rax
   179fc:	eb 10                	jmp    17a0e <std::sync::once::Once::call_inner+0x33e>
   179fe:	66 90                	xchg   %ax,%ax
   17a00:	e8 fb bb ff ff       	callq  13600 <std::thread::local::fast::Key<T>::try_initialize>
   17a05:	48 85 c0             	test   %rax,%rax
   17a08:	0f 84 d2 00 00 00    	je     17ae0 <std::sync::once::Once::call_inner+0x410>
   17a0e:	48 89 c7             	mov    %rax,%rdi
   17a11:	e8 ea 0f 00 00       	callq  18a00 <std::sys_common::thread_info::ThreadInfo::with::{{closure}}>
   17a16:	48 89 c5             	mov    %rax,%rbp
   17a19:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   17a1e:	f0 83 68 28 01       	lock subl $0x1,0x28(%rax)
   17a23:	74 31                	je     17a56 <std::sync::once::Once::call_inner+0x386>
   17a25:	48 83 c5 28          	add    $0x28,%rbp
   17a29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17a30:	bf ca 00 00 00       	mov    $0xca,%edi
   17a35:	48 89 ee             	mov    %rbp,%rsi
   17a38:	ba 80 00 00 00       	mov    $0x80,%edx
   17a3d:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   17a42:	45 31 c0             	xor    %r8d,%r8d
   17a45:	31 c0                	xor    %eax,%eax
   17a47:	41 ff d7             	callq  *%r15
   17a4a:	b8 01 00 00 00       	mov    $0x1,%eax
   17a4f:	f0 0f b1 5d 00       	lock cmpxchg %ebx,0x0(%rbp)
   17a54:	75 da                	jne    17a30 <std::sync::once::Once::call_inner+0x360>
   17a56:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   17a5b:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   17a60:	0f 85 7a ff ff ff    	jne    179e0 <std::sync::once::Once::call_inner+0x310>
   17a66:	4c 89 f7             	mov    %r14,%rdi
   17a69:	e8 12 1f ff ff       	callq  9980 <alloc::sync::Arc<T>::drop_slow>
   17a6e:	e9 6d ff ff ff       	jmpq   179e0 <std::sync::once::Once::call_inner+0x310>
   17a73:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   17a78:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
   17a7f:	00 00 
   17a81:	48 83 fb 01          	cmp    $0x1,%rbx
   17a85:	0f 94 44 24 08       	sete   0x8(%rsp)
   17a8a:	48 c7 04 24 03 00 00 	movq   $0x3,(%rsp)
   17a91:	00 
   17a92:	48 89 e6             	mov    %rsp,%rsi
   17a95:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
   17a9a:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   17a9f:	ff 50 18             	callq  *0x18(%rax)
   17aa2:	48 8b 04 24          	mov    (%rsp),%rax
   17aa6:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   17aab:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   17ab0:	ff 15 c2 df 02 00    	callq  *0x2dfc2(%rip)        # 45a78 <_GLOBAL_OFFSET_TABLE_+0xf0>
   17ab6:	48 83 c4 38          	add    $0x38,%rsp
   17aba:	5b                   	pop    %rbx
   17abb:	41 5c                	pop    %r12
   17abd:	41 5d                	pop    %r13
   17abf:	41 5e                	pop    %r14
   17ac1:	41 5f                	pop    %r15
   17ac3:	5d                   	pop    %rbp
   17ac4:	c3                   	retq   
   17ac5:	48 8d 3d e7 fd 01 00 	lea    0x1fde7(%rip),%rdi        # 378b3 <str.6+0x593>
   17acc:	48 8d 15 15 c0 02 00 	lea    0x2c015(%rip),%rdx        # 43ae8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x5b0>
   17ad3:	be 5e 00 00 00       	mov    $0x5e,%esi
   17ad8:	ff 15 c2 e2 02 00    	callq  *0x2e2c2(%rip)        # 45da0 <_GLOBAL_OFFSET_TABLE_+0x418>
   17ade:	0f 0b                	ud2    
   17ae0:	48 8d 3d cc fd 01 00 	lea    0x1fdcc(%rip),%rdi        # 378b3 <str.6+0x593>
   17ae7:	48 8d 15 fa bf 02 00 	lea    0x2bffa(%rip),%rdx        # 43ae8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x5b0>
   17aee:	be 5e 00 00 00       	mov    $0x5e,%esi
   17af3:	ff 15 a7 e2 02 00    	callq  *0x2e2a7(%rip)        # 45da0 <_GLOBAL_OFFSET_TABLE_+0x418>
   17af9:	0f 0b                	ud2    
   17afb:	48 8d 3d bd 02 02 00 	lea    0x202bd(%rip),%rdi        # 37dbf <str.6+0xa9f>
   17b02:	48 8d 15 67 c4 02 00 	lea    0x2c467(%rip),%rdx        # 43f70 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xa38>
   17b09:	be 39 00 00 00       	mov    $0x39,%esi
   17b0e:	e8 ed 29 00 00       	callq  1a500 <std::panicking::begin_panic>
   17b13:	0f 0b                	ud2    
   17b15:	48 8d 3d dc 02 02 00 	lea    0x202dc(%rip),%rdi        # 37df8 <str.6+0xad8>
   17b1c:	48 8d 15 65 c4 02 00 	lea    0x2c465(%rip),%rdx        # 43f88 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xa50>
   17b23:	be 2a 00 00 00       	mov    $0x2a,%esi
   17b28:	e8 d3 29 00 00       	callq  1a500 <std::panicking::begin_panic>
   17b2d:	0f 0b                	ud2    
   17b2f:	eb 11                	jmp    17b42 <std::sync::once::Once::call_inner+0x472>
   17b31:	48 89 c3             	mov    %rax,%rbx
   17b34:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   17b39:	e8 d2 eb fe ff       	callq  6710 <core::ptr::drop_in_place>
   17b3e:	eb 0d                	jmp    17b4d <std::sync::once::Once::call_inner+0x47d>
   17b40:	eb 00                	jmp    17b42 <std::sync::once::Once::call_inner+0x472>
   17b42:	48 89 c3             	mov    %rax,%rbx
   17b45:	48 89 e7             	mov    %rsp,%rdi
   17b48:	e8 d3 f8 fe ff       	callq  7420 <core::ptr::drop_in_place>
   17b4d:	48 89 df             	mov    %rbx,%rdi
   17b50:	e8 fb d4 fe ff       	callq  5050 <_Unwind_Resume@plt>
   17b55:	0f 0b                	ud2    
   17b57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   17b5e:	00 00 

0000000000017b60 <<std::sync::once::WaiterQueue as core::ops::drop::Drop>::drop>:
   17b60:	41 57                	push   %r15
   17b62:	41 56                	push   %r14
   17b64:	53                   	push   %rbx
   17b65:	48 83 ec 70          	sub    $0x70,%rsp
   17b69:	48 8b 0f             	mov    (%rdi),%rcx
   17b6c:	48 8b 47 08          	mov    0x8(%rdi),%rax
   17b70:	48 87 01             	xchg   %rax,(%rcx)
   17b73:	89 c1                	mov    %eax,%ecx
   17b75:	83 e1 03             	and    $0x3,%ecx
   17b78:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   17b7d:	48 83 f9 02          	cmp    $0x2,%rcx
   17b81:	0f 85 bc 00 00 00    	jne    17c43 <<std::sync::once::WaiterQueue as core::ops::drop::Drop>::drop+0xe3>
   17b87:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
   17b8b:	0f 84 8d 00 00 00    	je     17c1e <<std::sync::once::WaiterQueue as core::ops::drop::Drop>::drop+0xbe>
   17b91:	4c 8b 35 38 e1 02 00 	mov    0x2e138(%rip),%r14        # 45cd0 <syscall@GLIBC_2.2.5>
   17b98:	4c 8d 7c 24 20       	lea    0x20(%rsp),%r15
   17b9d:	eb 09                	jmp    17ba8 <<std::sync::once::WaiterQueue as core::ops::drop::Drop>::drop+0x48>
   17b9f:	90                   	nop
   17ba0:	48 89 d8             	mov    %rbx,%rax
   17ba3:	48 85 db             	test   %rbx,%rbx
   17ba6:	74 76                	je     17c1e <<std::sync::once::WaiterQueue as core::ops::drop::Drop>::drop+0xbe>
   17ba8:	48 8b 58 08          	mov    0x8(%rax),%rbx
   17bac:	48 8b 08             	mov    (%rax),%rcx
   17baf:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   17bb6:	48 85 c9             	test   %rcx,%rcx
   17bb9:	74 6d                	je     17c28 <<std::sync::once::WaiterQueue as core::ops::drop::Drop>::drop+0xc8>
   17bbb:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   17bc0:	c6 40 10 01          	movb   $0x1,0x10(%rax)
   17bc4:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   17bc9:	b8 01 00 00 00       	mov    $0x1,%eax
   17bce:	87 46 28             	xchg   %eax,0x28(%rsi)
   17bd1:	83 f8 ff             	cmp    $0xffffffff,%eax
   17bd4:	74 1a                	je     17bf0 <<std::sync::once::WaiterQueue as core::ops::drop::Drop>::drop+0x90>
   17bd6:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   17bdb:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   17be0:	75 be                	jne    17ba0 <<std::sync::once::WaiterQueue as core::ops::drop::Drop>::drop+0x40>
   17be2:	eb 30                	jmp    17c14 <<std::sync::once::WaiterQueue as core::ops::drop::Drop>::drop+0xb4>
   17be4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   17beb:	00 00 00 
   17bee:	66 90                	xchg   %ax,%ax
   17bf0:	48 83 c6 28          	add    $0x28,%rsi
   17bf4:	bf ca 00 00 00       	mov    $0xca,%edi
   17bf9:	ba 81 00 00 00       	mov    $0x81,%edx
   17bfe:	b9 01 00 00 00       	mov    $0x1,%ecx
   17c03:	31 c0                	xor    %eax,%eax
   17c05:	41 ff d6             	callq  *%r14
   17c08:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   17c0d:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   17c12:	75 8c                	jne    17ba0 <<std::sync::once::WaiterQueue as core::ops::drop::Drop>::drop+0x40>
   17c14:	4c 89 ff             	mov    %r15,%rdi
   17c17:	e8 64 1d ff ff       	callq  9980 <alloc::sync::Arc<T>::drop_slow>
   17c1c:	eb 82                	jmp    17ba0 <<std::sync::once::WaiterQueue as core::ops::drop::Drop>::drop+0x40>
   17c1e:	48 83 c4 70          	add    $0x70,%rsp
   17c22:	5b                   	pop    %rbx
   17c23:	41 5e                	pop    %r14
   17c25:	41 5f                	pop    %r15
   17c27:	c3                   	retq   
   17c28:	48 8d 3d cb f9 01 00 	lea    0x1f9cb(%rip),%rdi        # 375fa <str.6+0x2da>
   17c2f:	48 8d 15 82 c3 02 00 	lea    0x2c382(%rip),%rdx        # 43fb8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xa80>
   17c36:	be 2b 00 00 00       	mov    $0x2b,%esi
   17c3b:	ff 15 97 e2 02 00    	callq  *0x2e297(%rip)        # 45ed8 <_GLOBAL_OFFSET_TABLE_+0x550>
   17c41:	0f 0b                	ud2    
   17c43:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   17c48:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   17c4d:	48 8d 05 ac fd 01 00 	lea    0x1fdac(%rip),%rax        # 37a00 <str.6+0x6e0>
   17c54:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   17c59:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   17c5e:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   17c63:	48 8d 05 f6 da fe ff 	lea    -0x1250a(%rip),%rax        # 5760 <<&T as core::fmt::Debug>::fmt>
   17c6a:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   17c6f:	48 8d 4c 24 18       	lea    0x18(%rsp),%rcx
   17c74:	48 89 4c 24 60       	mov    %rcx,0x60(%rsp)
   17c79:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   17c7e:	48 8d 05 1b ba 02 00 	lea    0x2ba1b(%rip),%rax        # 436a0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x168>
   17c85:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   17c8a:	48 c7 44 24 28 03 00 	movq   $0x3,0x28(%rsp)
   17c91:	00 00 
   17c93:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   17c9a:	00 00 
   17c9c:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
   17ca1:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   17ca6:	48 c7 44 24 48 02 00 	movq   $0x2,0x48(%rsp)
   17cad:	00 00 
   17caf:	48 8d 35 ea c2 02 00 	lea    0x2c2ea(%rip),%rsi        # 43fa0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xa68>
   17cb6:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   17cbb:	ff 15 1f e3 02 00    	callq  *0x2e31f(%rip)        # 45fe0 <_GLOBAL_OFFSET_TABLE_+0x658>
   17cc1:	0f 0b                	ud2    
   17cc3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   17cca:	00 00 00 
   17ccd:	0f 1f 00             	nopl   (%rax)

0000000000017cd0 <std::time::SystemTime::now>:
   17cd0:	53                   	push   %rbx
   17cd1:	48 83 ec 20          	sub    $0x20,%rsp
   17cd5:	0f 57 c0             	xorps  %xmm0,%xmm0
   17cd8:	0f 29 04 24          	movaps %xmm0,(%rsp)
   17cdc:	48 89 e6             	mov    %rsp,%rsi
   17cdf:	31 ff                	xor    %edi,%edi
   17ce1:	ff 15 d9 dd 02 00    	callq  *0x2ddd9(%rip)        # 45ac0 <clock_gettime@GLIBC_2.17>
   17ce7:	83 f8 ff             	cmp    $0xffffffff,%eax
   17cea:	74 0f                	je     17cfb <std::time::SystemTime::now+0x2b>
   17cec:	48 8b 04 24          	mov    (%rsp),%rax
   17cf0:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   17cf5:	48 83 c4 20          	add    $0x20,%rsp
   17cf9:	5b                   	pop    %rbx
   17cfa:	c3                   	retq   
   17cfb:	ff 15 17 dd 02 00    	callq  *0x2dd17(%rip)        # 45a18 <__errno_location@GLIBC_2.2.5>
   17d01:	8b 00                	mov    (%rax),%eax
   17d03:	48 c1 e0 20          	shl    $0x20,%rax
   17d07:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   17d0c:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   17d13:	00 00 
   17d15:	48 8d 3d 09 f9 01 00 	lea    0x1f909(%rip),%rdi        # 37625 <str.6+0x305>
   17d1c:	48 8d 0d fd ba 02 00 	lea    0x2bafd(%rip),%rcx        # 43820 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2e8>
   17d23:	4c 8d 05 3e c9 02 00 	lea    0x2c93e(%rip),%r8        # 44668 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1130>
   17d2a:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   17d2f:	be 2b 00 00 00       	mov    $0x2b,%esi
   17d34:	ff 15 a6 de 02 00    	callq  *0x2dea6(%rip)        # 45be0 <_GLOBAL_OFFSET_TABLE_+0x258>
   17d3a:	0f 0b                	ud2    
   17d3c:	48 89 c3             	mov    %rax,%rbx
   17d3f:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   17d44:	e8 87 f2 fe ff       	callq  6fd0 <core::ptr::drop_in_place>
   17d49:	48 89 df             	mov    %rbx,%rdi
   17d4c:	e8 ff d2 fe ff       	callq  5050 <_Unwind_Resume@plt>
   17d51:	0f 0b                	ud2    
   17d53:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   17d5a:	00 00 00 
   17d5d:	0f 1f 00             	nopl   (%rax)

0000000000017d60 <std::time::SystemTime::duration_since>:
   17d60:	53                   	push   %rbx
   17d61:	48 83 ec 30          	sub    $0x30,%rsp
   17d65:	48 89 fb             	mov    %rdi,%rbx
   17d68:	48 89 14 24          	mov    %rdx,(%rsp)
   17d6c:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   17d71:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   17d76:	48 89 e2             	mov    %rsp,%rdx
   17d79:	e8 d2 44 00 00       	callq  1c250 <std::sys::unix::time::Timespec::sub_timespec>
   17d7e:	0f 28 44 24 10       	movaps 0x10(%rsp),%xmm0
   17d83:	8b 44 24 20          	mov    0x20(%rsp),%eax
   17d87:	89 43 10             	mov    %eax,0x10(%rbx)
   17d8a:	0f 11 03             	movups %xmm0,(%rbx)
   17d8d:	48 89 d8             	mov    %rbx,%rax
   17d90:	48 83 c4 30          	add    $0x30,%rsp
   17d94:	5b                   	pop    %rbx
   17d95:	c3                   	retq   
   17d96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   17d9d:	00 00 00 

0000000000017da0 <std::lazy::SyncOnceCell<T>::initialize>:
   17da0:	48 83 ec 28          	sub    $0x28,%rsp
   17da4:	48 8d 05 c5 e2 02 00 	lea    0x2e2c5(%rip),%rax        # 46070 <std::io::stdio::stdout::INSTANCE+0x8>
   17dab:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   17db0:	48 8b 05 b1 e2 02 00 	mov    0x2e2b1(%rip),%rax        # 46068 <std::io::stdio::stdout::INSTANCE>
   17db7:	48 83 f8 03          	cmp    $0x3,%rax
   17dbb:	75 05                	jne    17dc2 <std::lazy::SyncOnceCell<T>::initialize+0x22>
   17dbd:	48 83 c4 28          	add    $0x28,%rsp
   17dc1:	c3                   	retq   
   17dc2:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   17dc7:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   17dcc:	48 89 e0             	mov    %rsp,%rax
   17dcf:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   17dd4:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
   17dd9:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   17dde:	48 8d 3d 83 e2 02 00 	lea    0x2e283(%rip),%rdi        # 46068 <std::io::stdio::stdout::INSTANCE>
   17de5:	48 8d 0d 44 c1 02 00 	lea    0x2c144(%rip),%rcx        # 43f30 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x9f8>
   17dec:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   17df1:	be 01 00 00 00       	mov    $0x1,%esi
   17df6:	ff 15 e4 e0 02 00    	callq  *0x2e0e4(%rip)        # 45ee0 <_GLOBAL_OFFSET_TABLE_+0x558>
   17dfc:	48 83 c4 28          	add    $0x28,%rsp
   17e00:	c3                   	retq   
   17e01:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   17e08:	00 00 00 
   17e0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000017e10 <<std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt>:
   17e10:	41 57                	push   %r15
   17e12:	41 56                	push   %r14
   17e14:	41 55                	push   %r13
   17e16:	41 54                	push   %r12
   17e18:	53                   	push   %rbx
   17e19:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
   17e20:	49 89 f6             	mov    %rsi,%r14
   17e23:	8a 1f                	mov    (%rdi),%bl
   17e25:	88 5c 24 0d          	mov    %bl,0xd(%rsp)
   17e29:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   17e2e:	ff 15 3c de 02 00    	callq  *0x2de3c(%rip)        # 45c70 <_GLOBAL_OFFSET_TABLE_+0x2e8>
   17e34:	83 7c 24 10 01       	cmpl   $0x1,0x10(%rsp)
   17e39:	75 13                	jne    17e4e <<std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt+0x3e>
   17e3b:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   17e40:	e8 fb e2 fe ff       	callq  6140 <core::ptr::drop_in_place>
   17e45:	45 31 ed             	xor    %r13d,%r13d
   17e48:	8a 5c 24 0d          	mov    0xd(%rsp),%bl
   17e4c:	eb 12                	jmp    17e60 <<std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt+0x50>
   17e4e:	4c 8b 6c 24 18       	mov    0x18(%rsp),%r13
   17e53:	0f 10 44 24 20       	movups 0x20(%rsp),%xmm0
   17e58:	0f 29 84 24 a0 00 00 	movaps %xmm0,0xa0(%rsp)
   17e5f:	00 
   17e60:	88 5c 24 58          	mov    %bl,0x58(%rsp)
   17e64:	4c 89 6c 24 40       	mov    %r13,0x40(%rsp)
   17e69:	0f 28 84 24 a0 00 00 	movaps 0xa0(%rsp),%xmm0
   17e70:	00 
   17e71:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
   17e76:	48 8d 05 6b c1 02 00 	lea    0x2c16b(%rip),%rax        # 43fe8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xab0>
   17e7d:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   17e82:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
   17e89:	00 00 
   17e8b:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   17e92:	00 00 
   17e94:	4c 8d 25 bd f3 01 00 	lea    0x1f3bd(%rip),%r12        # 37258 <_fini+0x1934>
   17e9b:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
   17ea0:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   17ea7:	00 00 
   17ea9:	4c 8d 7c 24 10       	lea    0x10(%rsp),%r15
   17eae:	4c 89 f7             	mov    %r14,%rdi
   17eb1:	4c 89 fe             	mov    %r15,%rsi
   17eb4:	ff 15 ce df 02 00    	callq  *0x2dfce(%rip)        # 45e88 <_GLOBAL_OFFSET_TABLE_+0x500>
   17eba:	84 c0                	test   %al,%al
   17ebc:	0f 85 aa 00 00 00    	jne    17f6c <<std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt+0x15c>
   17ec2:	4c 89 74 24 78       	mov    %r14,0x78(%rsp)
   17ec7:	48 c7 84 24 80 00 00 	movq   $0x0,0x80(%rsp)
   17ece:	00 00 00 00 00 
   17ed3:	88 9c 24 98 00 00 00 	mov    %bl,0x98(%rsp)
   17eda:	48 8d 44 24 40       	lea    0x40(%rsp),%rax
   17edf:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
   17ee6:	00 
   17ee7:	48 8d 05 0a c1 02 00 	lea    0x2c10a(%rip),%rax        # 43ff8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xac0>
   17eee:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
   17ef5:	00 
   17ef6:	48 c7 44 24 60 00 00 	movq   $0x0,0x60(%rsp)
   17efd:	00 00 
   17eff:	c6 44 24 0e 00       	movb   $0x0,0xe(%rsp)
   17f04:	84 db                	test   %bl,%bl
   17f06:	0f 95 44 24 0f       	setne  0xf(%rsp)
   17f0b:	48 8d 44 24 0d       	lea    0xd(%rsp),%rax
   17f10:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   17f15:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
   17f1a:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   17f1f:	48 8d 44 24 0f       	lea    0xf(%rsp),%rax
   17f24:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   17f29:	48 8d 44 24 78       	lea    0x78(%rsp),%rax
   17f2e:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   17f33:	48 8d 44 24 0e       	lea    0xe(%rsp),%rax
   17f38:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   17f3d:	4c 89 7c 24 68       	mov    %r15,0x68(%rsp)
   17f42:	48 8d 05 77 c4 02 00 	lea    0x2c477(%rip),%rax        # 443c0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xe88>
   17f49:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   17f4e:	48 8d 3d ab 46 00 00 	lea    0x46ab(%rip),%rdi        # 1c600 <std::backtrace_rs::backtrace::libunwind::trace::trace_fn>
   17f55:	48 8d 74 24 68       	lea    0x68(%rsp),%rsi
   17f5a:	ff 15 b0 da 02 00    	callq  *0x2dab0(%rip)        # 45a10 <_Unwind_Backtrace@GCC_3.3>
   17f60:	80 7c 24 0e 00       	cmpb   $0x0,0xe(%rsp)
   17f65:	74 37                	je     17f9e <<std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt+0x18e>
   17f67:	4c 8b 6c 24 40       	mov    0x40(%rsp),%r13
   17f6c:	4d 85 ed             	test   %r13,%r13
   17f6f:	74 18                	je     17f89 <<std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt+0x179>
   17f71:	48 8b 74 24 48       	mov    0x48(%rsp),%rsi
   17f76:	48 85 f6             	test   %rsi,%rsi
   17f79:	74 0e                	je     17f89 <<std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt+0x179>
   17f7b:	ba 01 00 00 00       	mov    $0x1,%edx
   17f80:	4c 89 ef             	mov    %r13,%rdi
   17f83:	ff 15 6f dc 02 00    	callq  *0x2dc6f(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   17f89:	b1 01                	mov    $0x1,%cl
   17f8b:	89 c8                	mov    %ecx,%eax
   17f8d:	48 81 c4 b0 00 00 00 	add    $0xb0,%rsp
   17f94:	5b                   	pop    %rbx
   17f95:	41 5c                	pop    %r12
   17f97:	41 5d                	pop    %r13
   17f99:	41 5e                	pop    %r14
   17f9b:	41 5f                	pop    %r15
   17f9d:	c3                   	retq   
   17f9e:	80 7c 24 0d 00       	cmpb   $0x0,0xd(%rsp)
   17fa3:	75 3e                	jne    17fe3 <<std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt+0x1d3>
   17fa5:	48 8d 05 74 c0 02 00 	lea    0x2c074(%rip),%rax        # 44020 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xae8>
   17fac:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   17fb1:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
   17fb8:	00 00 
   17fba:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   17fc1:	00 00 
   17fc3:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
   17fc8:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   17fcf:	00 00 
   17fd1:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   17fd6:	4c 89 f7             	mov    %r14,%rdi
   17fd9:	ff 15 a9 de 02 00    	callq  *0x2dea9(%rip)        # 45e88 <_GLOBAL_OFFSET_TABLE_+0x500>
   17fdf:	84 c0                	test   %al,%al
   17fe1:	75 84                	jne    17f67 <<std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt+0x157>
   17fe3:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   17fe8:	48 85 ff             	test   %rdi,%rdi
   17feb:	74 15                	je     18002 <<std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt+0x1f2>
   17fed:	48 8b 74 24 48       	mov    0x48(%rsp),%rsi
   17ff2:	48 85 f6             	test   %rsi,%rsi
   17ff5:	74 0b                	je     18002 <<std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt+0x1f2>
   17ff7:	ba 01 00 00 00       	mov    $0x1,%edx
   17ffc:	ff 15 f6 db 02 00    	callq  *0x2dbf6(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   18002:	31 c9                	xor    %ecx,%ecx
   18004:	eb 85                	jmp    17f8b <<std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt+0x17b>
   18006:	48 89 c3             	mov    %rax,%rbx
   18009:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   1800e:	e8 cd eb fe ff       	callq  6be0 <core::ptr::drop_in_place>
   18013:	48 89 df             	mov    %rbx,%rdi
   18016:	e8 35 d0 fe ff       	callq  5050 <_Unwind_Resume@plt>
   1801b:	0f 0b                	ud2    
   1801d:	0f 1f 00             	nopl   (%rax)

0000000000018020 <std::sys_common::backtrace::_print_fmt::{{closure}}>:
   18020:	48 83 ec 18          	sub    $0x18,%rsp
   18024:	48 89 f0             	mov    %rsi,%rax
   18027:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
   1802b:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   18030:	0f 10 02             	movups (%rdx),%xmm0
   18033:	0f 29 04 24          	movaps %xmm0,(%rsp)
   18037:	48 8b 0f             	mov    (%rdi),%rcx
   1803a:	48 85 c9             	test   %rcx,%rcx
   1803d:	48 0f 45 cf          	cmovne %rdi,%rcx
   18041:	8b 57 18             	mov    0x18(%rdi),%edx
   18044:	48 89 e6             	mov    %rsp,%rsi
   18047:	48 89 c7             	mov    %rax,%rdi
   1804a:	e8 d1 03 00 00       	callq  18420 <std::sys_common::backtrace::output_filename>
   1804f:	48 83 c4 18          	add    $0x18,%rsp
   18053:	c3                   	retq   
   18054:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1805b:	00 00 00 
   1805e:	66 90                	xchg   %ax,%ax

0000000000018060 <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}>:
   18060:	41 57                	push   %r15
   18062:	41 56                	push   %r14
   18064:	41 54                	push   %r12
   18066:	53                   	push   %rbx
   18067:	48 81 ec c8 00 00 00 	sub    $0xc8,%rsp
   1806e:	49 89 f6             	mov    %rsi,%r14
   18071:	48 89 fb             	mov    %rdi,%rbx
   18074:	48 8b 07             	mov    (%rdi),%rax
   18077:	c6 00 01             	movb   $0x1,(%rax)
   1807a:	48 8b 47 08          	mov    0x8(%rdi),%rax
   1807e:	80 38 00             	cmpb   $0x0,(%rax)
   18081:	0f 85 f9 00 00 00    	jne    18180 <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}+0x120>
   18087:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   1808c:	4c 89 f6             	mov    %r14,%rsi
   1808f:	e8 1c 2d 00 00       	callq  1adb0 <std::backtrace_rs::symbolize::Symbol::name>
   18094:	83 7c 24 30 04       	cmpl   $0x4,0x30(%rsp)
   18099:	0f 84 e1 00 00 00    	je     18180 <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}+0x120>
   1809f:	0f 10 44 24 20       	movups 0x20(%rsp),%xmm0
   180a4:	0f 10 4c 24 30       	movups 0x30(%rsp),%xmm1
   180a9:	0f 10 54 24 40       	movups 0x40(%rsp),%xmm2
   180ae:	0f 10 5c 24 50       	movups 0x50(%rsp),%xmm3
   180b3:	0f 29 8c 24 80 00 00 	movaps %xmm1,0x80(%rsp)
   180ba:	00 
   180bb:	0f 10 4c 24 60       	movups 0x60(%rsp),%xmm1
   180c0:	0f 29 8c 24 b0 00 00 	movaps %xmm1,0xb0(%rsp)
   180c7:	00 
   180c8:	0f 29 9c 24 a0 00 00 	movaps %xmm3,0xa0(%rsp)
   180cf:	00 
   180d0:	0f 29 94 24 90 00 00 	movaps %xmm2,0x90(%rsp)
   180d7:	00 
   180d8:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
   180dd:	83 bc 24 80 00 00 00 	cmpl   $0x3,0x80(%rsp)
   180e4:	03 
   180e5:	74 20                	je     18107 <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}+0xa7>
   180e7:	48 8d bc 24 80 00 00 	lea    0x80(%rsp),%rdi
   180ee:	00 
   180ef:	ff 15 d3 dc 02 00    	callq  *0x2dcd3(%rip)        # 45dc8 <_GLOBAL_OFFSET_TABLE_+0x440>
   180f5:	48 85 c0             	test   %rax,%rax
   180f8:	74 0d                	je     18107 <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}+0xa7>
   180fa:	49 89 c7             	mov    %rax,%r15
   180fd:	49 89 d4             	mov    %rdx,%r12
   18100:	4d 85 ff             	test   %r15,%r15
   18103:	75 2d                	jne    18132 <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}+0xd2>
   18105:	eb 79                	jmp    18180 <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}+0x120>
   18107:	48 8b 74 24 70       	mov    0x70(%rsp),%rsi
   1810c:	48 8b 54 24 78       	mov    0x78(%rsp),%rdx
   18111:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   18116:	ff 15 ac da 02 00    	callq  *0x2daac(%rip)        # 45bc8 <_GLOBAL_OFFSET_TABLE_+0x240>
   1811c:	83 7c 24 08 01       	cmpl   $0x1,0x8(%rsp)
   18121:	74 5d                	je     18180 <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}+0x120>
   18123:	4c 8b 7c 24 10       	mov    0x10(%rsp),%r15
   18128:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
   1812d:	4d 85 ff             	test   %r15,%r15
   18130:	74 4e                	je     18180 <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}+0x120>
   18132:	48 8d 15 9a fd 01 00 	lea    0x1fd9a(%rip),%rdx        # 37ed3 <str.6+0xbb3>
   18139:	b9 1c 00 00 00       	mov    $0x1c,%ecx
   1813e:	4c 89 ff             	mov    %r15,%rdi
   18141:	4c 89 e6             	mov    %r12,%rsi
   18144:	e8 37 f4 fe ff       	callq  7580 <core::str::<impl str>::contains>
   18149:	84 c0                	test   %al,%al
   1814b:	74 0c                	je     18159 <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}+0xf9>
   1814d:	48 8b 43 10          	mov    0x10(%rbx),%rax
   18151:	c6 00 01             	movb   $0x1,(%rax)
   18154:	e9 11 01 00 00       	jmpq   1826a <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}+0x20a>
   18159:	48 8d 15 8f fd 01 00 	lea    0x1fd8f(%rip),%rdx        # 37eef <str.6+0xbcf>
   18160:	b9 1a 00 00 00       	mov    $0x1a,%ecx
   18165:	4c 89 ff             	mov    %r15,%rdi
   18168:	4c 89 e6             	mov    %r12,%rsi
   1816b:	e8 10 f4 fe ff       	callq  7580 <core::str::<impl str>::contains>
   18170:	84 c0                	test   %al,%al
   18172:	74 0c                	je     18180 <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}+0x120>
   18174:	48 8b 43 18          	mov    0x18(%rbx),%rax
   18178:	c6 00 01             	movb   $0x1,(%rax)
   1817b:	e9 ea 00 00 00       	jmpq   1826a <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}+0x20a>
   18180:	48 8b 43 18          	mov    0x18(%rbx),%rax
   18184:	80 38 00             	cmpb   $0x0,(%rax)
   18187:	0f 84 dd 00 00 00    	je     1826a <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}+0x20a>
   1818d:	48 8b 43 20          	mov    0x20(%rbx),%rax
   18191:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   18196:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   1819d:	00 00 
   1819f:	48 8b 43 28          	mov    0x28(%rbx),%rax
   181a3:	48 8b 00             	mov    (%rax),%rax
   181a6:	83 38 01             	cmpl   $0x1,(%rax)
   181a9:	75 06                	jne    181b1 <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}+0x151>
   181ab:	4c 8b 78 08          	mov    0x8(%rax),%r15
   181af:	eb 0d                	jmp    181be <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}+0x15e>
   181b1:	48 8b 78 08          	mov    0x8(%rax),%rdi
   181b5:	ff 15 7d db 02 00    	callq  *0x2db7d(%rip)        # 45d38 <_Unwind_GetIP@GCC_3.0>
   181bb:	49 89 c7             	mov    %rax,%r15
   181be:	48 8d 7c 24 70       	lea    0x70(%rsp),%rdi
   181c3:	4c 89 f6             	mov    %r14,%rsi
   181c6:	e8 e5 2b 00 00       	callq  1adb0 <std::backtrace_rs::symbolize::Symbol::name>
   181cb:	41 83 3e 01          	cmpl   $0x1,(%r14)
   181cf:	75 10                	jne    181e1 <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}+0x181>
   181d1:	48 c7 44 24 20 02 00 	movq   $0x2,0x20(%rsp)
   181d8:	00 00 
   181da:	45 31 c0             	xor    %r8d,%r8d
   181dd:	31 c0                	xor    %eax,%eax
   181df:	eb 5b                	jmp    1823c <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}+0x1dc>
   181e1:	49 8d 56 10          	lea    0x10(%r14),%rdx
   181e5:	45 8b 46 20          	mov    0x20(%r14),%r8d
   181e9:	31 c0                	xor    %eax,%eax
   181eb:	b9 00 00 00 00       	mov    $0x0,%ecx
   181f0:	41 83 f8 02          	cmp    $0x2,%r8d
   181f4:	48 0f 45 ca          	cmovne %rdx,%rcx
   181f8:	75 12                	jne    1820c <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}+0x1ac>
   181fa:	48 c7 44 24 20 02 00 	movq   $0x2,0x20(%rsp)
   18201:	00 00 
   18203:	45 8b 4e 24          	mov    0x24(%r14),%r9d
   18207:	45 31 c0             	xor    %r8d,%r8d
   1820a:	eb 30                	jmp    1823c <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}+0x1dc>
   1820c:	48 8b 01             	mov    (%rcx),%rax
   1820f:	48 85 c0             	test   %rax,%rax
   18212:	74 12                	je     18226 <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}+0x1c6>
   18214:	48 8b 49 08          	mov    0x8(%rcx),%rcx
   18218:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1821d:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   18222:	31 c0                	xor    %eax,%eax
   18224:	eb 05                	jmp    1822b <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}+0x1cb>
   18226:	b8 02 00 00 00       	mov    $0x2,%eax
   1822b:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   18230:	45 8b 4e 24          	mov    0x24(%r14),%r9d
   18234:	41 8b 46 28          	mov    0x28(%r14),%eax
   18238:	45 8b 56 2c          	mov    0x2c(%r14),%r10d
   1823c:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   18241:	48 8d 54 24 70       	lea    0x70(%rsp),%rdx
   18246:	48 8d 4c 24 20       	lea    0x20(%rsp),%rcx
   1824b:	4c 89 fe             	mov    %r15,%rsi
   1824e:	41 52                	push   %r10
   18250:	50                   	push   %rax
   18251:	e8 6a 2c 00 00       	callq  1aec0 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column>
   18256:	48 83 c4 10          	add    $0x10,%rsp
   1825a:	48 8b 4b 30          	mov    0x30(%rbx),%rcx
   1825e:	88 01                	mov    %al,(%rcx)
   18260:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   18265:	48 83 40 08 01       	addq   $0x1,0x8(%rax)
   1826a:	48 81 c4 c8 00 00 00 	add    $0xc8,%rsp
   18271:	5b                   	pop    %rbx
   18272:	41 5c                	pop    %r12
   18274:	41 5e                	pop    %r14
   18276:	41 5f                	pop    %r15
   18278:	c3                   	retq   
   18279:	48 89 c3             	mov    %rax,%rbx
   1827c:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   18281:	e8 ba ef fe ff       	callq  7240 <core::ptr::drop_in_place>
   18286:	48 89 df             	mov    %rbx,%rdi
   18289:	e8 c2 cd fe ff       	callq  5050 <_Unwind_Resume@plt>
   1828e:	0f 0b                	ud2    

0000000000018290 <std::sys_common::backtrace::_print_fmt::{{closure}}>:
   18290:	53                   	push   %rbx
   18291:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   18298:	48 89 fb             	mov    %rdi,%rbx
   1829b:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
   182a0:	48 8b 07             	mov    (%rdi),%rax
   182a3:	80 38 00             	cmpb   $0x0,(%rax)
   182a6:	75 0a                	jne    182b2 <std::sys_common::backtrace::_print_fmt::{{closure}}+0x22>
   182a8:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
   182ac:	48 83 39 64          	cmpq   $0x64,(%rcx)
   182b0:	77 5d                	ja     1830f <std::sys_common::backtrace::_print_fmt::{{closure}}+0x7f>
   182b2:	c6 44 24 1e 00       	movb   $0x0,0x1e(%rsp)
   182b7:	c6 44 24 1f 00       	movb   $0x0,0x1f(%rsp)
   182bc:	0f 10 43 10          	movups 0x10(%rbx),%xmm0
   182c0:	48 8b 4b 20          	mov    0x20(%rbx),%rcx
   182c4:	48 8d 54 24 1e       	lea    0x1e(%rsp),%rdx
   182c9:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   182ce:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   182d3:	48 8d 44 24 1f       	lea    0x1f(%rsp),%rax
   182d8:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   182dd:	0f 11 44 24 50       	movups %xmm0,0x50(%rsp)
   182e2:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   182e7:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   182ec:	48 89 4c 24 68       	mov    %rcx,0x68(%rsp)
   182f1:	48 8d 15 f0 c0 02 00 	lea    0x2c0f0(%rip),%rdx        # 443e8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xeb0>
   182f8:	48 8d 44 24 38       	lea    0x38(%rsp),%rax
   182fd:	48 89 f7             	mov    %rsi,%rdi
   18300:	48 89 c6             	mov    %rax,%rsi
   18303:	e8 08 46 00 00       	callq  1c910 <std::backtrace_rs::symbolize::gimli::resolve>
   18308:	80 7c 24 1f 00       	cmpb   $0x0,0x1f(%rsp)
   1830d:	74 0b                	je     1831a <std::sys_common::backtrace::_print_fmt::{{closure}}+0x8a>
   1830f:	31 c0                	xor    %eax,%eax
   18311:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
   18318:	5b                   	pop    %rbx
   18319:	c3                   	retq   
   1831a:	80 7c 24 1e 00       	cmpb   $0x0,0x1e(%rsp)
   1831f:	75 7e                	jne    1839f <std::sys_common::backtrace::_print_fmt::{{closure}}+0x10f>
   18321:	48 8b 43 10          	mov    0x10(%rbx),%rax
   18325:	80 38 00             	cmpb   $0x0,(%rax)
   18328:	74 75                	je     1839f <std::sys_common::backtrace::_print_fmt::{{closure}}+0x10f>
   1832a:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1832e:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   18333:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   1833a:	00 00 
   1833c:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   18341:	83 38 01             	cmpl   $0x1,(%rax)
   18344:	75 06                	jne    1834c <std::sys_common::backtrace::_print_fmt::{{closure}}+0xbc>
   18346:	48 8b 70 08          	mov    0x8(%rax),%rsi
   1834a:	eb 0d                	jmp    18359 <std::sys_common::backtrace::_print_fmt::{{closure}}+0xc9>
   1834c:	48 8b 78 08          	mov    0x8(%rax),%rdi
   18350:	ff 15 e2 d9 02 00    	callq  *0x2d9e2(%rip)        # 45d38 <_Unwind_GetIP@GCC_3.0>
   18356:	48 89 c6             	mov    %rax,%rsi
   18359:	48 c7 44 24 48 04 00 	movq   $0x4,0x48(%rsp)
   18360:	00 00 
   18362:	48 c7 84 24 88 00 00 	movq   $0x2,0x88(%rsp)
   18369:	00 02 00 00 00 
   1836e:	c7 04 24 00 00 00 00 	movl   $0x0,(%rsp)
   18375:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
   1837a:	48 8d 54 24 38       	lea    0x38(%rsp),%rdx
   1837f:	48 8d 8c 24 88 00 00 	lea    0x88(%rsp),%rcx
   18386:	00 
   18387:	45 31 c0             	xor    %r8d,%r8d
   1838a:	e8 31 2b 00 00       	callq  1aec0 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column>
   1838f:	48 8b 4b 20          	mov    0x20(%rbx),%rcx
   18393:	88 01                	mov    %al,(%rcx)
   18395:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1839a:	48 83 40 08 01       	addq   $0x1,0x8(%rax)
   1839f:	48 8b 43 08          	mov    0x8(%rbx),%rax
   183a3:	48 83 00 01          	addq   $0x1,(%rax)
   183a7:	48 8b 43 20          	mov    0x20(%rbx),%rax
   183ab:	80 38 00             	cmpb   $0x0,(%rax)
   183ae:	0f 94 c0             	sete   %al
   183b1:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
   183b8:	5b                   	pop    %rbx
   183b9:	c3                   	retq   
   183ba:	48 89 c3             	mov    %rax,%rbx
   183bd:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
   183c2:	e8 79 ee fe ff       	callq  7240 <core::ptr::drop_in_place>
   183c7:	48 89 df             	mov    %rbx,%rdi
   183ca:	e8 81 cc fe ff       	callq  5050 <_Unwind_Resume@plt>
   183cf:	0f 0b                	ud2    
   183d1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   183d8:	00 00 00 
   183db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000183e0 <std::sys_common::backtrace::__rust_end_short_backtrace>:
   183e0:	48 83 ec 18          	sub    $0x18,%rsp
   183e4:	48 8b 47 10          	mov    0x10(%rdi),%rax
   183e8:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   183ed:	0f 10 07             	movups (%rdi),%xmm0
   183f0:	0f 29 04 24          	movaps %xmm0,(%rsp)
   183f4:	48 89 e7             	mov    %rsp,%rdi
   183f7:	e8 34 21 00 00       	callq  1a530 <std::panicking::begin_panic::{{closure}}>
   183fc:	0f 0b                	ud2    
   183fe:	66 90                	xchg   %ax,%ax

0000000000018400 <std::sys_common::backtrace::__rust_end_short_backtrace>:
   18400:	48 83 ec 18          	sub    $0x18,%rsp
   18404:	48 8b 47 10          	mov    0x10(%rdi),%rax
   18408:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1840d:	0f 10 07             	movups (%rdi),%xmm0
   18410:	0f 29 04 24          	movaps %xmm0,(%rsp)
   18414:	48 89 e7             	mov    %rsp,%rdi
   18417:	e8 94 1e 00 00       	callq  1a2b0 <std::panicking::begin_panic_handler::{{closure}}>
   1841c:	0f 0b                	ud2    
   1841e:	66 90                	xchg   %ax,%ax

0000000000018420 <std::sys_common::backtrace::output_filename>:
   18420:	41 57                	push   %r15
   18422:	41 56                	push   %r14
   18424:	41 55                	push   %r13
   18426:	41 54                	push   %r12
   18428:	53                   	push   %rbx
   18429:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
   18430:	49 89 fe             	mov    %rdi,%r14
   18433:	83 3e 01             	cmpl   $0x1,(%rsi)
   18436:	75 2a                	jne    18462 <std::sys_common::backtrace::output_filename+0x42>
   18438:	48 8d 1d ca fa 01 00 	lea    0x1faca(%rip),%rbx        # 37f09 <str.6+0xbe9>
   1843f:	48 89 5c 24 48       	mov    %rbx,0x48(%rsp)
   18444:	48 c7 44 24 50 09 00 	movq   $0x9,0x50(%rsp)
   1844b:	00 00 
   1844d:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   18454:	00 00 
   18456:	41 bf 09 00 00 00    	mov    $0x9,%r15d
   1845c:	84 d2                	test   %dl,%dl
   1845e:	75 21                	jne    18481 <std::sys_common::backtrace::output_filename+0x61>
   18460:	eb 54                	jmp    184b6 <std::sys_common::backtrace::output_filename+0x96>
   18462:	48 8b 5e 08          	mov    0x8(%rsi),%rbx
   18466:	4c 8b 7e 10          	mov    0x10(%rsi),%r15
   1846a:	48 89 5c 24 48       	mov    %rbx,0x48(%rsp)
   1846f:	4c 89 7c 24 50       	mov    %r15,0x50(%rsp)
   18474:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   1847b:	00 00 
   1847d:	84 d2                	test   %dl,%dl
   1847f:	74 2c                	je     184ad <std::sys_common::backtrace::output_filename+0x8d>
   18481:	48 89 df             	mov    %rbx,%rdi
   18484:	4c 89 fe             	mov    %r15,%rsi
   18487:	ff 15 0b d9 02 00    	callq  *0x2d90b(%rip)        # 45d98 <_GLOBAL_OFFSET_TABLE_+0x410>
   1848d:	48 89 c7             	mov    %rax,%rdi
   18490:	48 89 d6             	mov    %rdx,%rsi
   18493:	4c 89 f2             	mov    %r14,%rdx
   18496:	ff 15 7c d9 02 00    	callq  *0x2d97c(%rip)        # 45e18 <_GLOBAL_OFFSET_TABLE_+0x490>
   1849c:	48 81 c4 f0 00 00 00 	add    $0xf0,%rsp
   184a3:	5b                   	pop    %rbx
   184a4:	41 5c                	pop    %r12
   184a6:	41 5d                	pop    %r13
   184a8:	41 5e                	pop    %r14
   184aa:	41 5f                	pop    %r15
   184ac:	c3                   	retq   
   184ad:	4d 85 ff             	test   %r15,%r15
   184b0:	0f 84 7f 01 00 00    	je     18635 <std::sys_common::backtrace::output_filename+0x215>
   184b6:	48 85 c9             	test   %rcx,%rcx
   184b9:	74 c6                	je     18481 <std::sys_common::backtrace::output_filename+0x61>
   184bb:	80 3b 2f             	cmpb   $0x2f,(%rbx)
   184be:	75 c1                	jne    18481 <std::sys_common::backtrace::output_filename+0x61>
   184c0:	48 8b 01             	mov    (%rcx),%rax
   184c3:	48 8b 49 10          	mov    0x10(%rcx),%rcx
   184c7:	48 89 5c 24 60       	mov    %rbx,0x60(%rsp)
   184cc:	4c 89 7c 24 68       	mov    %r15,0x68(%rsp)
   184d1:	c6 44 24 70 06       	movb   $0x6,0x70(%rsp)
   184d6:	66 c7 84 24 98 00 00 	movw   $0x1,0x98(%rsp)
   184dd:	00 01 00 
   184e0:	c6 84 24 9a 00 00 00 	movb   $0x2,0x9a(%rsp)
   184e7:	02 
   184e8:	48 85 c9             	test   %rcx,%rcx
   184eb:	74 07                	je     184f4 <std::sys_common::backtrace::output_filename+0xd4>
   184ed:	b2 01                	mov    $0x1,%dl
   184ef:	80 38 2f             	cmpb   $0x2f,(%rax)
   184f2:	74 02                	je     184f6 <std::sys_common::backtrace::output_filename+0xd6>
   184f4:	31 d2                	xor    %edx,%edx
   184f6:	48 89 04 24          	mov    %rax,(%rsp)
   184fa:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   184ff:	c6 44 24 10 06       	movb   $0x6,0x10(%rsp)
   18504:	48 8b 84 24 a1 00 00 	mov    0xa1(%rsp),%rax
   1850b:	00 
   1850c:	48 8b 8c 24 a8 00 00 	mov    0xa8(%rsp),%rcx
   18513:	00 
   18514:	48 89 44 24 11       	mov    %rax,0x11(%rsp)
   18519:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   1851e:	88 54 24 38          	mov    %dl,0x38(%rsp)
   18522:	66 c7 44 24 39 00 02 	movw   $0x200,0x39(%rsp)
   18529:	4c 8d ac 24 b0 00 00 	lea    0xb0(%rsp),%r13
   18530:	00 
   18531:	4c 8d 64 24 60       	lea    0x60(%rsp),%r12
   18536:	48 89 e2             	mov    %rsp,%rdx
   18539:	4c 89 ef             	mov    %r13,%rdi
   1853c:	4c 89 e6             	mov    %r12,%rsi
   1853f:	e8 9c df ff ff       	callq  164e0 <std::path::iter_after>
   18544:	80 bc 24 e8 00 00 00 	cmpb   $0x2,0xe8(%rsp)
   1854b:	02 
   1854c:	0f 84 2f ff ff ff    	je     18481 <std::sys_common::backtrace::output_filename+0x61>
   18552:	0f 10 84 24 b0 00 00 	movups 0xb0(%rsp),%xmm0
   18559:	00 
   1855a:	0f 10 8c 24 c0 00 00 	movups 0xc0(%rsp),%xmm1
   18561:	00 
   18562:	0f 10 94 24 d0 00 00 	movups 0xd0(%rsp),%xmm2
   18569:	00 
   1856a:	0f 10 9c 24 e0 00 00 	movups 0xe0(%rsp),%xmm3
   18571:	00 
   18572:	0f 29 5c 24 30       	movaps %xmm3,0x30(%rsp)
   18577:	0f 29 54 24 20       	movaps %xmm2,0x20(%rsp)
   1857c:	0f 29 4c 24 10       	movaps %xmm1,0x10(%rsp)
   18581:	0f 29 04 24          	movaps %xmm0,(%rsp)
   18585:	48 89 e7             	mov    %rsp,%rdi
   18588:	ff 15 2a d9 02 00    	callq  *0x2d92a(%rip)        # 45eb8 <_GLOBAL_OFFSET_TABLE_+0x530>
   1858e:	48 85 c0             	test   %rax,%rax
   18591:	0f 84 ea fe ff ff    	je     18481 <std::sys_common::backtrace::output_filename+0x61>
   18597:	48 89 e7             	mov    %rsp,%rdi
   1859a:	48 89 c6             	mov    %rax,%rsi
   1859d:	ff 15 25 d6 02 00    	callq  *0x2d625(%rip)        # 45bc8 <_GLOBAL_OFFSET_TABLE_+0x240>
   185a3:	83 3c 24 01          	cmpl   $0x1,(%rsp)
   185a7:	0f 84 d4 fe ff ff    	je     18481 <std::sys_common::backtrace::output_filename+0x61>
   185ad:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   185b2:	48 85 c0             	test   %rax,%rax
   185b5:	0f 84 c6 fe ff ff    	je     18481 <std::sys_common::backtrace::output_filename+0x61>
   185bb:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   185c0:	48 89 84 24 b0 00 00 	mov    %rax,0xb0(%rsp)
   185c7:	00 
   185c8:	48 89 8c 24 b8 00 00 	mov    %rcx,0xb8(%rsp)
   185cf:	00 
   185d0:	48 8d 05 ad f1 01 00 	lea    0x1f1ad(%rip),%rax        # 37784 <str.6+0x464>
   185d7:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   185dc:	48 8d 05 4d 9d 01 00 	lea    0x19d4d(%rip),%rax        # 32330 <<char as core::fmt::Display>::fmt>
   185e3:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   185e8:	4c 89 6c 24 70       	mov    %r13,0x70(%rsp)
   185ed:	48 8d 05 5c d3 fe ff 	lea    -0x12ca4(%rip),%rax        # 5950 <<&T as core::fmt::Display>::fmt>
   185f4:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   185f9:	48 8d 05 30 ba 02 00 	lea    0x2ba30(%rip),%rax        # 44030 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xaf8>
   18600:	48 89 04 24          	mov    %rax,(%rsp)
   18604:	48 c7 44 24 08 02 00 	movq   $0x2,0x8(%rsp)
   1860b:	00 00 
   1860d:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   18614:	00 00 
   18616:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
   1861b:	48 c7 44 24 28 02 00 	movq   $0x2,0x28(%rsp)
   18622:	00 00 
   18624:	48 89 e6             	mov    %rsp,%rsi
   18627:	4c 89 f7             	mov    %r14,%rdi
   1862a:	ff 15 58 d8 02 00    	callq  *0x2d858(%rip)        # 45e88 <_GLOBAL_OFFSET_TABLE_+0x500>
   18630:	e9 67 fe ff ff       	jmpq   1849c <std::sys_common::backtrace::output_filename+0x7c>
   18635:	45 31 ff             	xor    %r15d,%r15d
   18638:	e9 44 fe ff ff       	jmpq   18481 <std::sys_common::backtrace::output_filename+0x61>
   1863d:	48 89 c3             	mov    %rax,%rbx
   18640:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   18645:	e8 36 e3 fe ff       	callq  6980 <core::ptr::drop_in_place>
   1864a:	48 89 df             	mov    %rbx,%rdi
   1864d:	e8 fe c9 fe ff       	callq  5050 <_Unwind_Resume@plt>
   18652:	0f 0b                	ud2    
   18654:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1865b:	00 00 00 
   1865e:	66 90                	xchg   %ax,%ax

0000000000018660 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt>:
   18660:	55                   	push   %rbp
   18661:	41 57                	push   %r15
   18663:	41 56                	push   %r14
   18665:	41 55                	push   %r13
   18667:	41 54                	push   %r12
   18669:	53                   	push   %rbx
   1866a:	48 83 ec 68          	sub    $0x68,%rsp
   1866e:	49 89 d7             	mov    %rdx,%r15
   18671:	48 89 f5             	mov    %rsi,%rbp
   18674:	48 89 fb             	mov    %rdi,%rbx
   18677:	48 8d 35 16 f3 01 00 	lea    0x1f316(%rip),%rsi        # 37994 <str.6+0x674>
   1867e:	ba 01 00 00 00       	mov    $0x1,%edx
   18683:	4c 89 ff             	mov    %r15,%rdi
   18686:	ff 15 b4 d3 02 00    	callq  *0x2d3b4(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   1868c:	b1 01                	mov    $0x1,%cl
   1868e:	84 c0                	test   %al,%al
   18690:	0f 85 54 03 00 00    	jne    189ea <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x38a>
   18696:	48 89 df             	mov    %rbx,%rdi
   18699:	48 89 ee             	mov    %rbp,%rsi
   1869c:	ff 15 f6 d6 02 00    	callq  *0x2d6f6(%rip)        # 45d98 <_GLOBAL_OFFSET_TABLE_+0x410>
   186a2:	48 89 c7             	mov    %rax,%rdi
   186a5:	48 89 d6             	mov    %rdx,%rsi
   186a8:	ff 15 82 d5 02 00    	callq  *0x2d582(%rip)        # 45c30 <_GLOBAL_OFFSET_TABLE_+0x2a8>
   186ae:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   186b3:	48 89 54 24 48       	mov    %rdx,0x48(%rsp)
   186b8:	48 89 e7             	mov    %rsp,%rdi
   186bb:	48 8d 74 24 40       	lea    0x40(%rsp),%rsi
   186c0:	ff 15 f2 d8 02 00    	callq  *0x2d8f2(%rip)        # 45fb8 <_GLOBAL_OFFSET_TABLE_+0x630>
   186c6:	48 8b 04 24          	mov    (%rsp),%rax
   186ca:	48 85 c0             	test   %rax,%rax
   186cd:	0f 84 fc 02 00 00    	je     189cf <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x36f>
   186d3:	4c 8d 35 76 6f 01 00 	lea    0x16f76(%rip),%r14        # 2f650 <<core::char::EscapeDebug as core::iter::traits::iterator::Iterator>::next>
   186da:	48 8d 1d cb e7 01 00 	lea    0x1e7cb(%rip),%rbx        # 36eac <_fini+0x1588>
   186e1:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
   186e6:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
   186eb:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   186f0:	48 01 c1             	add    %rax,%rcx
   186f3:	48 89 04 24          	mov    %rax,(%rsp)
   186f7:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   186fc:	c7 44 24 10 04 00 00 	movl   $0x4,0x10(%rsp)
   18703:	00 
   18704:	c7 44 24 28 04 00 00 	movl   $0x4,0x28(%rsp)
   1870b:	00 
   1870c:	b9 04 00 00 00       	mov    $0x4,%ecx
   18711:	83 f9 04             	cmp    $0x4,%ecx
   18714:	0f 84 50 00 00 00    	je     1876a <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x10a>
   1871a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   18720:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   18725:	41 ff d6             	callq  *%r14
   18728:	3d 00 00 11 00       	cmp    $0x110000,%eax
   1872d:	0f 85 6b 01 00 00    	jne    1889e <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x23e>
   18733:	c7 44 24 10 04 00 00 	movl   $0x4,0x10(%rsp)
   1873a:	00 
   1873b:	48 8b 0c 24          	mov    (%rsp),%rcx
   1873f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   18744:	48 39 c8             	cmp    %rcx,%rax
   18747:	75 33                	jne    1877c <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x11c>
   18749:	e9 32 01 00 00       	jmpq   18880 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x220>
   1874e:	66 90                	xchg   %ax,%ax
   18750:	44 89 ee             	mov    %r13d,%esi
   18753:	89 4c 24 10          	mov    %ecx,0x10(%rsp)
   18757:	89 74 24 14          	mov    %esi,0x14(%rsp)
   1875b:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   18760:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   18765:	83 f9 04             	cmp    $0x4,%ecx
   18768:	75 b6                	jne    18720 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0xc0>
   1876a:	48 8b 0c 24          	mov    (%rsp),%rcx
   1876e:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   18773:	48 39 c8             	cmp    %rcx,%rax
   18776:	0f 84 04 01 00 00    	je     18880 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x220>
   1877c:	48 8d 71 01          	lea    0x1(%rcx),%rsi
   18780:	48 89 34 24          	mov    %rsi,(%rsp)
   18784:	0f b6 11             	movzbl (%rcx),%edx
   18787:	84 d2                	test   %dl,%dl
   18789:	78 35                	js     187c0 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x160>
   1878b:	41 89 d5             	mov    %edx,%r13d
   1878e:	b9 02 00 00 00       	mov    $0x2,%ecx
   18793:	41 8d 45 f7          	lea    -0x9(%r13),%eax
   18797:	83 f8 1e             	cmp    $0x1e,%eax
   1879a:	0f 87 c3 00 00 00    	ja     18863 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x203>
   187a0:	be 74 00 00 00       	mov    $0x74,%esi
   187a5:	48 63 3c 83          	movslq (%rbx,%rax,4),%rdi
   187a9:	48 01 df             	add    %rbx,%rdi
   187ac:	ff e7                	jmpq   *%rdi
   187ae:	be 6e 00 00 00       	mov    $0x6e,%esi
   187b3:	e9 9b ff ff ff       	jmpq   18753 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0xf3>
   187b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   187bf:	00 
   187c0:	48 39 c6             	cmp    %rax,%rsi
   187c3:	74 56                	je     1881b <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x1bb>
   187c5:	48 8d 79 02          	lea    0x2(%rcx),%rdi
   187c9:	48 89 3c 24          	mov    %rdi,(%rsp)
   187cd:	44 0f b6 69 01       	movzbl 0x1(%rcx),%r13d
   187d2:	41 83 e5 3f          	and    $0x3f,%r13d
   187d6:	89 d1                	mov    %edx,%ecx
   187d8:	83 e1 1f             	and    $0x1f,%ecx
   187db:	80 fa df             	cmp    $0xdf,%dl
   187de:	76 4b                	jbe    1882b <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x1cb>
   187e0:	48 39 c7             	cmp    %rax,%rdi
   187e3:	74 55                	je     1883a <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x1da>
   187e5:	48 8d 77 01          	lea    0x1(%rdi),%rsi
   187e9:	48 89 34 24          	mov    %rsi,(%rsp)
   187ed:	0f b6 3f             	movzbl (%rdi),%edi
   187f0:	83 e7 3f             	and    $0x3f,%edi
   187f3:	41 c1 e5 06          	shl    $0x6,%r13d
   187f7:	41 09 fd             	or     %edi,%r13d
   187fa:	80 fa f0             	cmp    $0xf0,%dl
   187fd:	72 4c                	jb     1884b <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x1eb>
   187ff:	48 39 c6             	cmp    %rax,%rsi
   18802:	0f 84 09 01 00 00    	je     18911 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x2b1>
   18808:	48 8d 46 01          	lea    0x1(%rsi),%rax
   1880c:	48 89 04 24          	mov    %rax,(%rsp)
   18810:	0f b6 06             	movzbl (%rsi),%eax
   18813:	83 e0 3f             	and    $0x3f,%eax
   18816:	e9 f8 00 00 00       	jmpq   18913 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x2b3>
   1881b:	45 31 ed             	xor    %r13d,%r13d
   1881e:	48 89 c7             	mov    %rax,%rdi
   18821:	89 d1                	mov    %edx,%ecx
   18823:	83 e1 1f             	and    $0x1f,%ecx
   18826:	80 fa df             	cmp    $0xdf,%dl
   18829:	77 b5                	ja     187e0 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x180>
   1882b:	c1 e1 06             	shl    $0x6,%ecx
   1882e:	eb 1e                	jmp    1884e <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x1ee>
   18830:	be 72 00 00 00       	mov    $0x72,%esi
   18835:	e9 19 ff ff ff       	jmpq   18753 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0xf3>
   1883a:	31 ff                	xor    %edi,%edi
   1883c:	48 89 c6             	mov    %rax,%rsi
   1883f:	41 c1 e5 06          	shl    $0x6,%r13d
   18843:	41 09 fd             	or     %edi,%r13d
   18846:	80 fa f0             	cmp    $0xf0,%dl
   18849:	73 b4                	jae    187ff <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x19f>
   1884b:	c1 e1 0c             	shl    $0xc,%ecx
   1884e:	41 09 cd             	or     %ecx,%r13d
   18851:	b9 02 00 00 00       	mov    $0x2,%ecx
   18856:	41 8d 45 f7          	lea    -0x9(%r13),%eax
   1885a:	83 f8 1e             	cmp    $0x1e,%eax
   1885d:	0f 86 3d ff ff ff    	jbe    187a0 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x140>
   18863:	41 83 fd 5c          	cmp    $0x5c,%r13d
   18867:	0f 84 e3 fe ff ff    	je     18750 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0xf0>
   1886d:	41 81 fd 00 00 11 00 	cmp    $0x110000,%r13d
   18874:	75 4d                	jne    188c3 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x263>
   18876:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1887d:	00 00 00 
   18880:	83 7c 24 28 04       	cmpl   $0x4,0x28(%rsp)
   18885:	0f 84 24 01 00 00    	je     189af <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x34f>
   1888b:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
   18890:	41 ff d6             	callq  *%r14
   18893:	3d 00 00 11 00       	cmp    $0x110000,%eax
   18898:	0f 84 11 01 00 00    	je     189af <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x34f>
   1889e:	4c 89 ff             	mov    %r15,%rdi
   188a1:	89 c6                	mov    %eax,%esi
   188a3:	ff 15 e7 d4 02 00    	callq  *0x2d4e7(%rip)        # 45d90 <_GLOBAL_OFFSET_TABLE_+0x408>
   188a9:	84 c0                	test   %al,%al
   188ab:	0f 85 37 01 00 00    	jne    189e8 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x388>
   188b1:	8b 4c 24 10          	mov    0x10(%rsp),%ecx
   188b5:	83 f9 04             	cmp    $0x4,%ecx
   188b8:	0f 85 62 fe ff ff    	jne    18720 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0xc0>
   188be:	e9 a7 fe ff ff       	jmpq   1876a <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x10a>
   188c3:	44 89 ef             	mov    %r13d,%edi
   188c6:	ff 15 34 d4 02 00    	callq  *0x2d434(%rip)        # 45d00 <_GLOBAL_OFFSET_TABLE_+0x378>
   188cc:	84 c0                	test   %al,%al
   188ce:	75 16                	jne    188e6 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x286>
   188d0:	44 89 ef             	mov    %r13d,%edi
   188d3:	ff 15 07 d1 02 00    	callq  *0x2d107(%rip)        # 459e0 <_GLOBAL_OFFSET_TABLE_+0x58>
   188d9:	b9 01 00 00 00       	mov    $0x1,%ecx
   188de:	84 c0                	test   %al,%al
   188e0:	0f 85 6a fe ff ff    	jne    18750 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0xf0>
   188e6:	44 89 e8             	mov    %r13d,%eax
   188e9:	41 83 cd 01          	or     $0x1,%r13d
   188ed:	41 0f bd d5          	bsr    %r13d,%edx
   188f1:	83 f2 1c             	xor    $0x1c,%edx
   188f4:	c1 ea 02             	shr    $0x2,%edx
   188f7:	83 f2 07             	xor    $0x7,%edx
   188fa:	48 b9 00 00 00 00 05 	movabs $0x500000000,%rcx
   18901:	00 00 00 
   18904:	48 09 c8             	or     %rcx,%rax
   18907:	b9 03 00 00 00       	mov    $0x3,%ecx
   1890c:	e9 42 fe ff ff       	jmpq   18753 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0xf3>
   18911:	31 c0                	xor    %eax,%eax
   18913:	83 e1 07             	and    $0x7,%ecx
   18916:	c1 e1 12             	shl    $0x12,%ecx
   18919:	41 c1 e5 06          	shl    $0x6,%r13d
   1891d:	41 09 cd             	or     %ecx,%r13d
   18920:	41 09 c5             	or     %eax,%r13d
   18923:	b9 02 00 00 00       	mov    $0x2,%ecx
   18928:	41 8d 45 f7          	lea    -0x9(%r13),%eax
   1892c:	83 f8 1e             	cmp    $0x1e,%eax
   1892f:	0f 86 6b fe ff ff    	jbe    187a0 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x140>
   18935:	e9 29 ff ff ff       	jmpq   18863 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x203>
   1893a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   18940:	48 89 6c 24 50       	mov    %rbp,0x50(%rsp)
   18945:	48 83 c5 01          	add    $0x1,%rbp
   18949:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
   1894e:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   18953:	48 8d 05 16 d0 fe ff 	lea    -0x12fea(%rip),%rax        # 5970 <<&T as core::fmt::UpperHex>::fmt>
   1895a:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   1895f:	48 8d 05 ea b6 02 00 	lea    0x2b6ea(%rip),%rax        # 44050 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xb18>
   18966:	48 89 04 24          	mov    %rax,(%rsp)
   1896a:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   18971:	00 00 
   18973:	48 8d 05 9e f5 01 00 	lea    0x1f59e(%rip),%rax        # 37f18 <str.6+0xbf8>
   1897a:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1897f:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
   18986:	00 00 
   18988:	48 8d 44 24 58       	lea    0x58(%rsp),%rax
   1898d:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   18992:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
   18999:	00 00 
   1899b:	4c 89 ff             	mov    %r15,%rdi
   1899e:	48 89 e6             	mov    %rsp,%rsi
   189a1:	ff 15 e1 d4 02 00    	callq  *0x2d4e1(%rip)        # 45e88 <_GLOBAL_OFFSET_TABLE_+0x500>
   189a7:	49 83 c4 ff          	add    $0xffffffffffffffff,%r12
   189ab:	84 c0                	test   %al,%al
   189ad:	75 39                	jne    189e8 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x388>
   189af:	4d 85 e4             	test   %r12,%r12
   189b2:	75 8c                	jne    18940 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x2e0>
   189b4:	48 89 e7             	mov    %rsp,%rdi
   189b7:	48 8d 74 24 40       	lea    0x40(%rsp),%rsi
   189bc:	ff 15 f6 d5 02 00    	callq  *0x2d5f6(%rip)        # 45fb8 <_GLOBAL_OFFSET_TABLE_+0x630>
   189c2:	48 8b 04 24          	mov    (%rsp),%rax
   189c6:	48 85 c0             	test   %rax,%rax
   189c9:	0f 85 12 fd ff ff    	jne    186e1 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x81>
   189cf:	48 8d 35 be ef 01 00 	lea    0x1efbe(%rip),%rsi        # 37994 <str.6+0x674>
   189d6:	ba 01 00 00 00       	mov    $0x1,%edx
   189db:	4c 89 ff             	mov    %r15,%rdi
   189de:	ff 15 5c d0 02 00    	callq  *0x2d05c(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   189e4:	89 c1                	mov    %eax,%ecx
   189e6:	eb 02                	jmp    189ea <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x38a>
   189e8:	b1 01                	mov    $0x1,%cl
   189ea:	89 c8                	mov    %ecx,%eax
   189ec:	48 83 c4 68          	add    $0x68,%rsp
   189f0:	5b                   	pop    %rbx
   189f1:	41 5c                	pop    %r12
   189f3:	41 5d                	pop    %r13
   189f5:	41 5e                	pop    %r14
   189f7:	41 5f                	pop    %r15
   189f9:	5d                   	pop    %rbp
   189fa:	c3                   	retq   
   189fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000018a00 <std::sys_common::thread_info::ThreadInfo::with::{{closure}}>:
   18a00:	41 56                	push   %r14
   18a02:	53                   	push   %rbx
   18a03:	48 83 ec 48          	sub    $0x48,%rsp
   18a07:	48 8b 07             	mov    (%rdi),%rax
   18a0a:	48 8d 48 01          	lea    0x1(%rax),%rcx
   18a0e:	48 85 c9             	test   %rcx,%rcx
   18a11:	0f 8e ae 00 00 00    	jle    18ac5 <std::sys_common::thread_info::ThreadInfo::with::{{closure}}+0xc5>
   18a17:	48 89 fb             	mov    %rdi,%rbx
   18a1a:	48 83 7f 08 02       	cmpq   $0x2,0x8(%rdi)
   18a1f:	48 89 07             	mov    %rax,(%rdi)
   18a22:	75 78                	jne    18a9c <std::sys_common::thread_info::ThreadInfo::with::{{closure}}+0x9c>
   18a24:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   18a2b:	00 00 
   18a2d:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   18a32:	ff 15 48 d5 02 00    	callq  *0x2d548(%rip)        # 45f80 <_GLOBAL_OFFSET_TABLE_+0x5f8>
   18a38:	0f 10 44 24 10       	movups 0x10(%rsp),%xmm0
   18a3d:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   18a44:	00 00 
   18a46:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
   18a4b:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   18a50:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   18a54:	0f 85 d8 00 00 00    	jne    18b32 <std::sys_common::thread_info::ThreadInfo::with::{{closure}}+0x132>
   18a5a:	4c 8d 73 08          	lea    0x8(%rbx),%r14
   18a5e:	48 c7 03 ff ff ff ff 	movq   $0xffffffffffffffff,(%rbx)
   18a65:	83 7b 08 02          	cmpl   $0x2,0x8(%rbx)
   18a69:	74 14                	je     18a7f <std::sys_common::thread_info::ThreadInfo::with::{{closure}}+0x7f>
   18a6b:	48 8b 43 20          	mov    0x20(%rbx),%rax
   18a6f:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   18a74:	75 09                	jne    18a7f <std::sys_common::thread_info::ThreadInfo::with::{{closure}}+0x7f>
   18a76:	48 8d 7b 20          	lea    0x20(%rbx),%rdi
   18a7a:	e8 01 0f ff ff       	callq  9980 <alloc::sync::Arc<T>::drop_slow>
   18a7f:	0f 10 44 24 10       	movups 0x10(%rsp),%xmm0
   18a84:	0f 10 4c 24 20       	movups 0x20(%rsp),%xmm1
   18a89:	41 0f 11 4e 10       	movups %xmm1,0x10(%r14)
   18a8e:	41 0f 11 06          	movups %xmm0,(%r14)
   18a92:	48 8b 03             	mov    (%rbx),%rax
   18a95:	48 83 c0 01          	add    $0x1,%rax
   18a99:	48 89 03             	mov    %rax,(%rbx)
   18a9c:	48 85 c0             	test   %rax,%rax
   18a9f:	75 4b                	jne    18aec <std::sys_common::thread_info::ThreadInfo::with::{{closure}}+0xec>
   18aa1:	48 c7 03 ff ff ff ff 	movq   $0xffffffffffffffff,(%rbx)
   18aa8:	83 7b 08 02          	cmpl   $0x2,0x8(%rbx)
   18aac:	74 65                	je     18b13 <std::sys_common::thread_info::ThreadInfo::with::{{closure}}+0x113>
   18aae:	48 8b 43 20          	mov    0x20(%rbx),%rax
   18ab2:	f0 48 83 00 01       	lock addq $0x1,(%rax)
   18ab7:	7e 75                	jle    18b2e <std::sys_common::thread_info::ThreadInfo::with::{{closure}}+0x12e>
   18ab9:	48 83 03 01          	addq   $0x1,(%rbx)
   18abd:	48 83 c4 48          	add    $0x48,%rsp
   18ac1:	5b                   	pop    %rbx
   18ac2:	41 5e                	pop    %r14
   18ac4:	c3                   	retq   
   18ac5:	48 8d 3d dc e8 01 00 	lea    0x1e8dc(%rip),%rdi        # 373a8 <str.6+0x88>
   18acc:	48 8d 0d 8d ad 02 00 	lea    0x2ad8d(%rip),%rcx        # 43860 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x328>
   18ad3:	4c 8d 05 86 b5 02 00 	lea    0x2b586(%rip),%r8        # 44060 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xb28>
   18ada:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   18adf:	be 18 00 00 00       	mov    $0x18,%esi
   18ae4:	ff 15 f6 d0 02 00    	callq  *0x2d0f6(%rip)        # 45be0 <_GLOBAL_OFFSET_TABLE_+0x258>
   18aea:	eb 6b                	jmp    18b57 <std::sys_common::thread_info::ThreadInfo::with::{{closure}}+0x157>
   18aec:	48 8d 3d dd d7 01 00 	lea    0x1d7dd(%rip),%rdi        # 362d0 <_fini+0x9ac>
   18af3:	48 8d 0d e6 ac 02 00 	lea    0x2ace6(%rip),%rcx        # 437e0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2a8>
   18afa:	4c 8d 05 8f b5 02 00 	lea    0x2b58f(%rip),%r8        # 44090 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xb58>
   18b01:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   18b06:	be 10 00 00 00       	mov    $0x10,%esi
   18b0b:	ff 15 cf d0 02 00    	callq  *0x2d0cf(%rip)        # 45be0 <_GLOBAL_OFFSET_TABLE_+0x258>
   18b11:	eb 44                	jmp    18b57 <std::sys_common::thread_info::ThreadInfo::with::{{closure}}+0x157>
   18b13:	48 8d 3d e0 ea 01 00 	lea    0x1eae0(%rip),%rdi        # 375fa <str.6+0x2da>
   18b1a:	48 8d 15 87 b5 02 00 	lea    0x2b587(%rip),%rdx        # 440a8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xb70>
   18b21:	be 2b 00 00 00       	mov    $0x2b,%esi
   18b26:	ff 15 ac d3 02 00    	callq  *0x2d3ac(%rip)        # 45ed8 <_GLOBAL_OFFSET_TABLE_+0x550>
   18b2c:	eb 29                	jmp    18b57 <std::sys_common::thread_info::ThreadInfo::with::{{closure}}+0x157>
   18b2e:	0f 0b                	ud2    
   18b30:	0f 0b                	ud2    
   18b32:	48 8d 3d 97 d7 01 00 	lea    0x1d797(%rip),%rdi        # 362d0 <_fini+0x9ac>
   18b39:	48 8d 0d a0 ac 02 00 	lea    0x2aca0(%rip),%rcx        # 437e0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2a8>
   18b40:	4c 8d 05 31 b5 02 00 	lea    0x2b531(%rip),%r8        # 44078 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xb40>
   18b47:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   18b4c:	be 10 00 00 00       	mov    $0x10,%esi
   18b51:	ff 15 89 d0 02 00    	callq  *0x2d089(%rip)        # 45be0 <_GLOBAL_OFFSET_TABLE_+0x258>
   18b57:	0f 0b                	ud2    
   18b59:	49 89 c6             	mov    %rax,%r14
   18b5c:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   18b61:	e8 aa d6 fe ff       	callq  6210 <core::ptr::drop_in_place>
   18b66:	eb 12                	jmp    18b7a <std::sys_common::thread_info::ThreadInfo::with::{{closure}}+0x17a>
   18b68:	49 89 c6             	mov    %rax,%r14
   18b6b:	48 89 df             	mov    %rbx,%rdi
   18b6e:	e8 dd d2 fe ff       	callq  5e50 <core::ptr::drop_in_place>
   18b73:	eb 05                	jmp    18b7a <std::sys_common::thread_info::ThreadInfo::with::{{closure}}+0x17a>
   18b75:	eb 00                	jmp    18b77 <std::sys_common::thread_info::ThreadInfo::with::{{closure}}+0x177>
   18b77:	49 89 c6             	mov    %rax,%r14
   18b7a:	4c 89 f7             	mov    %r14,%rdi
   18b7d:	e8 ce c4 fe ff       	callq  5050 <_Unwind_Resume@plt>
   18b82:	0f 0b                	ud2    
   18b84:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   18b8b:	00 00 00 
   18b8e:	66 90                	xchg   %ax,%ax

0000000000018b90 <std::sys_common::thread_info::set>:
   18b90:	41 57                	push   %r15
   18b92:	41 56                	push   %r14
   18b94:	53                   	push   %rbx
   18b95:	48 83 ec 50          	sub    $0x50,%rsp
   18b99:	49 89 f6             	mov    %rsi,%r14
   18b9c:	48 89 fb             	mov    %rdi,%rbx
   18b9f:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   18ba4:	66 66 66 64 48 8b 04 	data16 data16 data16 mov %fs:0x0,%rax
   18bab:	25 00 00 00 00 
   18bb0:	49 89 c7             	mov    %rax,%r15
   18bb3:	83 b8 a0 ff ff ff 01 	cmpl   $0x1,-0x60(%rax)
   18bba:	75 09                	jne    18bc5 <std::sys_common::thread_info::set+0x35>
   18bbc:	48 8d 80 a8 ff ff ff 	lea    -0x58(%rax),%rax
   18bc3:	eb 0e                	jmp    18bd3 <std::sys_common::thread_info::set+0x43>
   18bc5:	e8 36 aa ff ff       	callq  13600 <std::thread::local::fast::Key<T>::try_initialize>
   18bca:	48 85 c0             	test   %rax,%rax
   18bcd:	0f 84 25 01 00 00    	je     18cf8 <std::sys_common::thread_info::set+0x168>
   18bd3:	48 8b 08             	mov    (%rax),%rcx
   18bd6:	48 83 c1 01          	add    $0x1,%rcx
   18bda:	48 85 c9             	test   %rcx,%rcx
   18bdd:	0f 8e b1 00 00 00    	jle    18c94 <std::sys_common::thread_info::set+0x104>
   18be3:	48 83 78 08 02       	cmpq   $0x2,0x8(%rax)
   18be8:	0f 85 cb 00 00 00    	jne    18cb9 <std::sys_common::thread_info::set+0x129>
   18bee:	48 8b 43 10          	mov    0x10(%rbx),%rax
   18bf2:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   18bf7:	0f 10 03             	movups (%rbx),%xmm0
   18bfa:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   18bff:	4c 89 74 24 28       	mov    %r14,0x28(%rsp)
   18c04:	4c 89 f8             	mov    %r15,%rax
   18c07:	41 83 bf a0 ff ff ff 	cmpl   $0x1,-0x60(%r15)
   18c0e:	01 
   18c0f:	75 09                	jne    18c1a <std::sys_common::thread_info::set+0x8a>
   18c11:	48 8d 98 a8 ff ff ff 	lea    -0x58(%rax),%rbx
   18c18:	eb 11                	jmp    18c2b <std::sys_common::thread_info::set+0x9b>
   18c1a:	e8 e1 a9 ff ff       	callq  13600 <std::thread::local::fast::Key<T>::try_initialize>
   18c1f:	48 89 c3             	mov    %rax,%rbx
   18c22:	48 85 c0             	test   %rax,%rax
   18c25:	0f 84 f2 00 00 00    	je     18d1d <std::sys_common::thread_info::set+0x18d>
   18c2b:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   18c30:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   18c35:	0f 28 44 24 10       	movaps 0x10(%rsp),%xmm0
   18c3a:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
   18c3f:	4c 89 74 24 48       	mov    %r14,0x48(%rsp)
   18c44:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   18c48:	0f 85 85 00 00 00    	jne    18cd3 <std::sys_common::thread_info::set+0x143>
   18c4e:	48 c7 03 ff ff ff ff 	movq   $0xffffffffffffffff,(%rbx)
   18c55:	4c 8d 73 08          	lea    0x8(%rbx),%r14
   18c59:	83 7b 08 02          	cmpl   $0x2,0x8(%rbx)
   18c5d:	74 14                	je     18c73 <std::sys_common::thread_info::set+0xe3>
   18c5f:	48 8b 43 20          	mov    0x20(%rbx),%rax
   18c63:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   18c68:	75 09                	jne    18c73 <std::sys_common::thread_info::set+0xe3>
   18c6a:	48 8d 7b 20          	lea    0x20(%rbx),%rdi
   18c6e:	e8 0d 0d ff ff       	callq  9980 <alloc::sync::Arc<T>::drop_slow>
   18c73:	0f 28 44 24 30       	movaps 0x30(%rsp),%xmm0
   18c78:	0f 28 4c 24 40       	movaps 0x40(%rsp),%xmm1
   18c7d:	41 0f 11 4e 10       	movups %xmm1,0x10(%r14)
   18c82:	41 0f 11 06          	movups %xmm0,(%r14)
   18c86:	48 83 03 01          	addq   $0x1,(%rbx)
   18c8a:	48 83 c4 50          	add    $0x50,%rsp
   18c8e:	5b                   	pop    %rbx
   18c8f:	41 5e                	pop    %r14
   18c91:	41 5f                	pop    %r15
   18c93:	c3                   	retq   
   18c94:	48 8d 3d 0d e7 01 00 	lea    0x1e70d(%rip),%rdi        # 373a8 <str.6+0x88>
   18c9b:	48 8d 0d be ab 02 00 	lea    0x2abbe(%rip),%rcx        # 43860 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x328>
   18ca2:	4c 8d 05 17 b4 02 00 	lea    0x2b417(%rip),%r8        # 440c0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xb88>
   18ca9:	48 89 e2             	mov    %rsp,%rdx
   18cac:	be 18 00 00 00       	mov    $0x18,%esi
   18cb1:	ff 15 29 cf 02 00    	callq  *0x2cf29(%rip)        # 45be0 <_GLOBAL_OFFSET_TABLE_+0x258>
   18cb7:	eb 62                	jmp    18d1b <std::sys_common::thread_info::set+0x18b>
   18cb9:	48 8d 3d b9 f2 01 00 	lea    0x1f2b9(%rip),%rdi        # 37f79 <str.6+0xc59>
   18cc0:	48 8d 15 11 b4 02 00 	lea    0x2b411(%rip),%rdx        # 440d8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xba0>
   18cc7:	be 26 00 00 00       	mov    $0x26,%esi
   18ccc:	e8 2f 18 00 00       	callq  1a500 <std::panicking::begin_panic>
   18cd1:	eb 48                	jmp    18d1b <std::sys_common::thread_info::set+0x18b>
   18cd3:	48 8d 3d f6 d5 01 00 	lea    0x1d5f6(%rip),%rdi        # 362d0 <_fini+0x9ac>
   18cda:	48 8d 0d ff aa 02 00 	lea    0x2aaff(%rip),%rcx        # 437e0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2a8>
   18ce1:	4c 8d 05 08 b4 02 00 	lea    0x2b408(%rip),%r8        # 440f0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xbb8>
   18ce8:	48 89 e2             	mov    %rsp,%rdx
   18ceb:	be 10 00 00 00       	mov    $0x10,%esi
   18cf0:	ff 15 ea ce 02 00    	callq  *0x2ceea(%rip)        # 45be0 <_GLOBAL_OFFSET_TABLE_+0x258>
   18cf6:	eb 23                	jmp    18d1b <std::sys_common::thread_info::set+0x18b>
   18cf8:	48 8d 3d 4f eb 01 00 	lea    0x1eb4f(%rip),%rdi        # 3784e <str.6+0x52e>
   18cff:	48 8d 0d fa aa 02 00 	lea    0x2aafa(%rip),%rcx        # 43800 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2c8>
   18d06:	4c 8d 05 c3 ad 02 00 	lea    0x2adc3(%rip),%r8        # 43ad0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x598>
   18d0d:	48 89 e2             	mov    %rsp,%rdx
   18d10:	be 46 00 00 00       	mov    $0x46,%esi
   18d15:	ff 15 c5 ce 02 00    	callq  *0x2cec5(%rip)        # 45be0 <_GLOBAL_OFFSET_TABLE_+0x258>
   18d1b:	0f 0b                	ud2    
   18d1d:	f0 49 83 2e 01       	lock subq $0x1,(%r14)
   18d22:	75 0a                	jne    18d2e <std::sys_common::thread_info::set+0x19e>
   18d24:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
   18d29:	e8 52 0c ff ff       	callq  9980 <alloc::sync::Arc<T>::drop_slow>
   18d2e:	48 8d 3d 19 eb 01 00 	lea    0x1eb19(%rip),%rdi        # 3784e <str.6+0x52e>
   18d35:	48 8d 0d c4 aa 02 00 	lea    0x2aac4(%rip),%rcx        # 43800 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2c8>
   18d3c:	4c 8d 05 8d ad 02 00 	lea    0x2ad8d(%rip),%r8        # 43ad0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x598>
   18d43:	48 89 e2             	mov    %rsp,%rdx
   18d46:	be 46 00 00 00       	mov    $0x46,%esi
   18d4b:	ff 15 8f ce 02 00    	callq  *0x2ce8f(%rip)        # 45be0 <_GLOBAL_OFFSET_TABLE_+0x258>
   18d51:	0f 0b                	ud2    
   18d53:	48 89 c3             	mov    %rax,%rbx
   18d56:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
   18d5b:	e8 b0 d4 fe ff       	callq  6210 <core::ptr::drop_in_place>
   18d60:	eb 1c                	jmp    18d7e <std::sys_common::thread_info::set+0x1ee>
   18d62:	48 89 c3             	mov    %rax,%rbx
   18d65:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   18d6a:	e8 81 db fe ff       	callq  68f0 <core::ptr::drop_in_place>
   18d6f:	eb 0d                	jmp    18d7e <std::sys_common::thread_info::set+0x1ee>
   18d71:	48 89 c3             	mov    %rax,%rbx
   18d74:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   18d79:	e8 f2 d7 fe ff       	callq  6570 <core::ptr::drop_in_place>
   18d7e:	48 89 df             	mov    %rbx,%rdi
   18d81:	e8 ca c2 fe ff       	callq  5050 <_Unwind_Resume@plt>
   18d86:	0f 0b                	ud2    
   18d88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   18d8f:	00 

0000000000018d90 <std::sys_common::thread_local_dtor::register_dtor_fallback>:
   18d90:	55                   	push   %rbp
   18d91:	41 57                	push   %r15
   18d93:	41 56                	push   %r14
   18d95:	41 54                	push   %r12
   18d97:	53                   	push   %rbx
   18d98:	48 83 ec 70          	sub    $0x70,%rsp
   18d9c:	49 89 f6             	mov    %rsi,%r14
   18d9f:	49 89 ff             	mov    %rdi,%r15
   18da2:	48 8b 3d 67 d2 02 00 	mov    0x2d267(%rip),%rdi        # 46010 <std::sys_common::thread_local_dtor::register_dtor_fallback::DTORS>
   18da9:	48 85 ff             	test   %rdi,%rdi
   18dac:	0f 85 83 00 00 00    	jne    18e35 <std::sys_common::thread_local_dtor::register_dtor_fallback+0xa5>
   18db2:	48 8b 35 5f d2 02 00 	mov    0x2d25f(%rip),%rsi        # 46018 <std::sys_common::thread_local_dtor::register_dtor_fallback::DTORS+0x8>
   18db9:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%rsp)
   18dc0:	00 
   18dc1:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   18dc6:	ff 15 5c d0 02 00    	callq  *0x2d05c(%rip)        # 45e28 <pthread_key_create@GLIBC_2.2.5>
   18dcc:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   18dd0:	85 c0                	test   %eax,%eax
   18dd2:	0f 85 a5 02 00 00    	jne    1907d <std::sys_common::thread_local_dtor::register_dtor_fallback+0x2ed>
   18dd8:	8b 5c 24 08          	mov    0x8(%rsp),%ebx
   18ddc:	85 db                	test   %ebx,%ebx
   18dde:	75 3a                	jne    18e1a <std::sys_common::thread_local_dtor::register_dtor_fallback+0x8a>
   18de0:	48 8b 35 31 d2 02 00 	mov    0x2d231(%rip),%rsi        # 46018 <std::sys_common::thread_local_dtor::register_dtor_fallback::DTORS+0x8>
   18de7:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%rsp)
   18dee:	00 
   18def:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   18df4:	ff 15 2e d0 02 00    	callq  *0x2d02e(%rip)        # 45e28 <pthread_key_create@GLIBC_2.2.5>
   18dfa:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   18dfe:	85 c0                	test   %eax,%eax
   18e00:	0f 85 77 02 00 00    	jne    1907d <std::sys_common::thread_local_dtor::register_dtor_fallback+0x2ed>
   18e06:	8b 5c 24 08          	mov    0x8(%rsp),%ebx
   18e0a:	31 ff                	xor    %edi,%edi
   18e0c:	ff 15 1e d1 02 00    	callq  *0x2d11e(%rip)        # 45f30 <pthread_key_delete@GLIBC_2.2.5>
   18e12:	85 db                	test   %ebx,%ebx
   18e14:	0f 84 0d 03 00 00    	je     19127 <std::sys_common::thread_local_dtor::register_dtor_fallback+0x397>
   18e1a:	89 df                	mov    %ebx,%edi
   18e1c:	31 c0                	xor    %eax,%eax
   18e1e:	f0 48 0f b1 3d e9 d1 	lock cmpxchg %rdi,0x2d1e9(%rip)        # 46010 <std::sys_common::thread_local_dtor::register_dtor_fallback::DTORS>
   18e25:	02 00 
   18e27:	74 0c                	je     18e35 <std::sys_common::thread_local_dtor::register_dtor_fallback+0xa5>
   18e29:	48 89 c3             	mov    %rax,%rbx
   18e2c:	ff 15 fe d0 02 00    	callq  *0x2d0fe(%rip)        # 45f30 <pthread_key_delete@GLIBC_2.2.5>
   18e32:	48 89 df             	mov    %rbx,%rdi
   18e35:	ff 15 25 cf 02 00    	callq  *0x2cf25(%rip)        # 45d60 <pthread_getspecific@GLIBC_2.2.5>
   18e3b:	48 85 c0             	test   %rax,%rax
   18e3e:	74 15                	je     18e55 <std::sys_common::thread_local_dtor::register_dtor_fallback+0xc5>
   18e40:	48 8b 3d c9 d1 02 00 	mov    0x2d1c9(%rip),%rdi        # 46010 <std::sys_common::thread_local_dtor::register_dtor_fallback::DTORS>
   18e47:	48 85 ff             	test   %rdi,%rdi
   18e4a:	0f 85 5e 01 00 00    	jne    18fae <std::sys_common::thread_local_dtor::register_dtor_fallback+0x21e>
   18e50:	e9 d6 00 00 00       	jmpq   18f2b <std::sys_common::thread_local_dtor::register_dtor_fallback+0x19b>
   18e55:	bf 18 00 00 00       	mov    $0x18,%edi
   18e5a:	be 08 00 00 00       	mov    $0x8,%esi
   18e5f:	ff 15 1b cd 02 00    	callq  *0x2cd1b(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   18e65:	48 85 c0             	test   %rax,%rax
   18e68:	0f 84 a7 02 00 00    	je     19115 <std::sys_common::thread_local_dtor::register_dtor_fallback+0x385>
   18e6e:	48 89 c3             	mov    %rax,%rbx
   18e71:	48 c7 00 08 00 00 00 	movq   $0x8,(%rax)
   18e78:	0f 57 c0             	xorps  %xmm0,%xmm0
   18e7b:	0f 11 40 08          	movups %xmm0,0x8(%rax)
   18e7f:	48 8b 3d 8a d1 02 00 	mov    0x2d18a(%rip),%rdi        # 46010 <std::sys_common::thread_local_dtor::register_dtor_fallback::DTORS>
   18e86:	48 85 ff             	test   %rdi,%rdi
   18e89:	0f 85 83 00 00 00    	jne    18f12 <std::sys_common::thread_local_dtor::register_dtor_fallback+0x182>
   18e8f:	48 8b 35 82 d1 02 00 	mov    0x2d182(%rip),%rsi        # 46018 <std::sys_common::thread_local_dtor::register_dtor_fallback::DTORS+0x8>
   18e96:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%rsp)
   18e9d:	00 
   18e9e:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   18ea3:	ff 15 7f cf 02 00    	callq  *0x2cf7f(%rip)        # 45e28 <pthread_key_create@GLIBC_2.2.5>
   18ea9:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   18ead:	85 c0                	test   %eax,%eax
   18eaf:	0f 85 c8 01 00 00    	jne    1907d <std::sys_common::thread_local_dtor::register_dtor_fallback+0x2ed>
   18eb5:	8b 6c 24 08          	mov    0x8(%rsp),%ebp
   18eb9:	85 ed                	test   %ebp,%ebp
   18ebb:	75 3a                	jne    18ef7 <std::sys_common::thread_local_dtor::register_dtor_fallback+0x167>
   18ebd:	48 8b 35 54 d1 02 00 	mov    0x2d154(%rip),%rsi        # 46018 <std::sys_common::thread_local_dtor::register_dtor_fallback::DTORS+0x8>
   18ec4:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%rsp)
   18ecb:	00 
   18ecc:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   18ed1:	ff 15 51 cf 02 00    	callq  *0x2cf51(%rip)        # 45e28 <pthread_key_create@GLIBC_2.2.5>
   18ed7:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   18edb:	85 c0                	test   %eax,%eax
   18edd:	0f 85 9a 01 00 00    	jne    1907d <std::sys_common::thread_local_dtor::register_dtor_fallback+0x2ed>
   18ee3:	8b 6c 24 08          	mov    0x8(%rsp),%ebp
   18ee7:	31 ff                	xor    %edi,%edi
   18ee9:	ff 15 41 d0 02 00    	callq  *0x2d041(%rip)        # 45f30 <pthread_key_delete@GLIBC_2.2.5>
   18eef:	85 ed                	test   %ebp,%ebp
   18ef1:	0f 84 30 02 00 00    	je     19127 <std::sys_common::thread_local_dtor::register_dtor_fallback+0x397>
   18ef7:	89 ef                	mov    %ebp,%edi
   18ef9:	31 c0                	xor    %eax,%eax
   18efb:	f0 48 0f b1 3d 0c d1 	lock cmpxchg %rdi,0x2d10c(%rip)        # 46010 <std::sys_common::thread_local_dtor::register_dtor_fallback::DTORS>
   18f02:	02 00 
   18f04:	74 0c                	je     18f12 <std::sys_common::thread_local_dtor::register_dtor_fallback+0x182>
   18f06:	49 89 c4             	mov    %rax,%r12
   18f09:	ff 15 21 d0 02 00    	callq  *0x2d021(%rip)        # 45f30 <pthread_key_delete@GLIBC_2.2.5>
   18f0f:	4c 89 e7             	mov    %r12,%rdi
   18f12:	48 89 de             	mov    %rbx,%rsi
   18f15:	ff 15 85 cc 02 00    	callq  *0x2cc85(%rip)        # 45ba0 <pthread_setspecific@GLIBC_2.2.5>
   18f1b:	48 8b 3d ee d0 02 00 	mov    0x2d0ee(%rip),%rdi        # 46010 <std::sys_common::thread_local_dtor::register_dtor_fallback::DTORS>
   18f22:	48 85 ff             	test   %rdi,%rdi
   18f25:	0f 85 83 00 00 00    	jne    18fae <std::sys_common::thread_local_dtor::register_dtor_fallback+0x21e>
   18f2b:	48 8b 35 e6 d0 02 00 	mov    0x2d0e6(%rip),%rsi        # 46018 <std::sys_common::thread_local_dtor::register_dtor_fallback::DTORS+0x8>
   18f32:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%rsp)
   18f39:	00 
   18f3a:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   18f3f:	ff 15 e3 ce 02 00    	callq  *0x2cee3(%rip)        # 45e28 <pthread_key_create@GLIBC_2.2.5>
   18f45:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   18f49:	85 c0                	test   %eax,%eax
   18f4b:	0f 85 2c 01 00 00    	jne    1907d <std::sys_common::thread_local_dtor::register_dtor_fallback+0x2ed>
   18f51:	8b 5c 24 08          	mov    0x8(%rsp),%ebx
   18f55:	85 db                	test   %ebx,%ebx
   18f57:	75 3a                	jne    18f93 <std::sys_common::thread_local_dtor::register_dtor_fallback+0x203>
   18f59:	48 8b 35 b8 d0 02 00 	mov    0x2d0b8(%rip),%rsi        # 46018 <std::sys_common::thread_local_dtor::register_dtor_fallback::DTORS+0x8>
   18f60:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%rsp)
   18f67:	00 
   18f68:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   18f6d:	ff 15 b5 ce 02 00    	callq  *0x2ceb5(%rip)        # 45e28 <pthread_key_create@GLIBC_2.2.5>
   18f73:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   18f77:	85 c0                	test   %eax,%eax
   18f79:	0f 85 fe 00 00 00    	jne    1907d <std::sys_common::thread_local_dtor::register_dtor_fallback+0x2ed>
   18f7f:	8b 5c 24 08          	mov    0x8(%rsp),%ebx
   18f83:	31 ff                	xor    %edi,%edi
   18f85:	ff 15 a5 cf 02 00    	callq  *0x2cfa5(%rip)        # 45f30 <pthread_key_delete@GLIBC_2.2.5>
   18f8b:	85 db                	test   %ebx,%ebx
   18f8d:	0f 84 94 01 00 00    	je     19127 <std::sys_common::thread_local_dtor::register_dtor_fallback+0x397>
   18f93:	89 df                	mov    %ebx,%edi
   18f95:	31 c0                	xor    %eax,%eax
   18f97:	f0 48 0f b1 3d 70 d0 	lock cmpxchg %rdi,0x2d070(%rip)        # 46010 <std::sys_common::thread_local_dtor::register_dtor_fallback::DTORS>
   18f9e:	02 00 
   18fa0:	74 0c                	je     18fae <std::sys_common::thread_local_dtor::register_dtor_fallback+0x21e>
   18fa2:	48 89 c3             	mov    %rax,%rbx
   18fa5:	ff 15 85 cf 02 00    	callq  *0x2cf85(%rip)        # 45f30 <pthread_key_delete@GLIBC_2.2.5>
   18fab:	48 89 df             	mov    %rbx,%rdi
   18fae:	ff 15 ac cd 02 00    	callq  *0x2cdac(%rip)        # 45d60 <pthread_getspecific@GLIBC_2.2.5>
   18fb4:	48 89 c3             	mov    %rax,%rbx
   18fb7:	48 8b 70 10          	mov    0x10(%rax),%rsi
   18fbb:	48 3b 70 08          	cmp    0x8(%rax),%rsi
   18fbf:	75 64                	jne    19025 <std::sys_common::thread_local_dtor::register_dtor_fallback+0x295>
   18fc1:	48 89 f1             	mov    %rsi,%rcx
   18fc4:	48 ff c1             	inc    %rcx
   18fc7:	0f 84 30 01 00 00    	je     190fd <std::sys_common::thread_local_dtor::register_dtor_fallback+0x36d>
   18fcd:	48 8d 04 36          	lea    (%rsi,%rsi,1),%rax
   18fd1:	48 39 c8             	cmp    %rcx,%rax
   18fd4:	48 0f 47 c8          	cmova  %rax,%rcx
   18fd8:	48 83 f9 04          	cmp    $0x4,%rcx
   18fdc:	b8 04 00 00 00       	mov    $0x4,%eax
   18fe1:	48 0f 47 c1          	cmova  %rcx,%rax
   18fe5:	ba 10 00 00 00       	mov    $0x10,%edx
   18fea:	31 c9                	xor    %ecx,%ecx
   18fec:	48 f7 e2             	mul    %rdx
   18fef:	49 89 c4             	mov    %rax,%r12
   18ff2:	0f 90 c0             	seto   %al
   18ff5:	0f 91 c1             	setno  %cl
   18ff8:	48 c1 e1 03          	shl    $0x3,%rcx
   18ffc:	48 85 f6             	test   %rsi,%rsi
   18fff:	74 29                	je     1902a <std::sys_common::thread_local_dtor::register_dtor_fallback+0x29a>
   19001:	84 c0                	test   %al,%al
   19003:	0f 85 f4 00 00 00    	jne    190fd <std::sys_common::thread_local_dtor::register_dtor_fallback+0x36d>
   19009:	48 8b 3b             	mov    (%rbx),%rdi
   1900c:	48 85 ff             	test   %rdi,%rdi
   1900f:	74 21                	je     19032 <std::sys_common::thread_local_dtor::register_dtor_fallback+0x2a2>
   19011:	48 c1 e6 04          	shl    $0x4,%rsi
   19015:	74 1b                	je     19032 <std::sys_common::thread_local_dtor::register_dtor_fallback+0x2a2>
   19017:	48 89 ca             	mov    %rcx,%rdx
   1901a:	4c 89 e1             	mov    %r12,%rcx
   1901d:	ff 15 55 cf 02 00    	callq  *0x2cf55(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
   19023:	eb 1e                	jmp    19043 <std::sys_common::thread_local_dtor::register_dtor_fallback+0x2b3>
   19025:	48 8b 0b             	mov    (%rbx),%rcx
   19028:	eb 34                	jmp    1905e <std::sys_common::thread_local_dtor::register_dtor_fallback+0x2ce>
   1902a:	84 c0                	test   %al,%al
   1902c:	0f 85 cb 00 00 00    	jne    190fd <std::sys_common::thread_local_dtor::register_dtor_fallback+0x36d>
   19032:	4d 85 e4             	test   %r12,%r12
   19035:	74 0f                	je     19046 <std::sys_common::thread_local_dtor::register_dtor_fallback+0x2b6>
   19037:	4c 89 e7             	mov    %r12,%rdi
   1903a:	48 89 ce             	mov    %rcx,%rsi
   1903d:	ff 15 3d cb 02 00    	callq  *0x2cb3d(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   19043:	48 89 c1             	mov    %rax,%rcx
   19046:	48 85 c9             	test   %rcx,%rcx
   19049:	0f 84 b6 00 00 00    	je     19105 <std::sys_common::thread_local_dtor::register_dtor_fallback+0x375>
   1904f:	48 89 0b             	mov    %rcx,(%rbx)
   19052:	49 c1 ec 04          	shr    $0x4,%r12
   19056:	4c 89 63 08          	mov    %r12,0x8(%rbx)
   1905a:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   1905e:	48 c1 e6 04          	shl    $0x4,%rsi
   19062:	4c 89 3c 31          	mov    %r15,(%rcx,%rsi,1)
   19066:	4c 89 74 31 08       	mov    %r14,0x8(%rcx,%rsi,1)
   1906b:	48 83 43 10 01       	addq   $0x1,0x10(%rbx)
   19070:	48 83 c4 70          	add    $0x70,%rsp
   19074:	5b                   	pop    %rbx
   19075:	41 5c                	pop    %r12
   19077:	41 5e                	pop    %r14
   19079:	41 5f                	pop    %r15
   1907b:	5d                   	pop    %rbp
   1907c:	c3                   	retq   
   1907d:	48 8d 44 24 0c       	lea    0xc(%rsp),%rax
   19082:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   19087:	48 8d 05 26 e7 01 00 	lea    0x1e726(%rip),%rax        # 377b4 <str.6+0x494>
   1908e:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   19093:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   19098:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   1909d:	48 8d 05 1c c7 fe ff 	lea    -0x138e4(%rip),%rax        # 57c0 <<&T as core::fmt::Debug>::fmt>
   190a4:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   190a9:	48 8d 4c 24 18       	lea    0x18(%rsp),%rcx
   190ae:	48 89 4c 24 60       	mov    %rcx,0x60(%rsp)
   190b3:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   190b8:	48 8d 05 e1 a5 02 00 	lea    0x2a5e1(%rip),%rax        # 436a0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x168>
   190bf:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   190c4:	48 c7 44 24 28 03 00 	movq   $0x3,0x28(%rsp)
   190cb:	00 00 
   190cd:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   190d4:	00 00 
   190d6:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
   190db:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   190e0:	48 c7 44 24 48 02 00 	movq   $0x2,0x48(%rsp)
   190e7:	00 00 
   190e9:	48 8d 35 60 b5 02 00 	lea    0x2b560(%rip),%rsi        # 44650 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1118>
   190f0:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   190f5:	ff 15 e5 ce 02 00    	callq  *0x2cee5(%rip)        # 45fe0 <_GLOBAL_OFFSET_TABLE_+0x658>
   190fb:	0f 0b                	ud2    
   190fd:	ff 15 dd c9 02 00    	callq  *0x2c9dd(%rip)        # 45ae0 <_GLOBAL_OFFSET_TABLE_+0x158>
   19103:	0f 0b                	ud2    
   19105:	be 08 00 00 00       	mov    $0x8,%esi
   1910a:	4c 89 e7             	mov    %r12,%rdi
   1910d:	ff 15 0d ca 02 00    	callq  *0x2ca0d(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   19113:	0f 0b                	ud2    
   19115:	bf 18 00 00 00       	mov    $0x18,%edi
   1911a:	be 08 00 00 00       	mov    $0x8,%esi
   1911f:	ff 15 fb c9 02 00    	callq  *0x2c9fb(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   19125:	0f 0b                	ud2    
   19127:	48 8d 05 da af 02 00 	lea    0x2afda(%rip),%rax        # 44108 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xbd0>
   1912e:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   19133:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
   1913a:	00 00 
   1913c:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   19143:	00 00 
   19145:	48 8d 05 0c e1 01 00 	lea    0x1e10c(%rip),%rax        # 37258 <_fini+0x1934>
   1914c:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   19151:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
   19158:	00 00 
   1915a:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   1915f:	e8 fc 04 00 00       	callq  19660 <std::sys_common::util::abort>
   19164:	0f 0b                	ud2    
   19166:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1916d:	00 00 00 

0000000000019170 <std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors>:
   19170:	55                   	push   %rbp
   19171:	41 57                	push   %r15
   19173:	41 56                	push   %r14
   19175:	41 55                	push   %r13
   19177:	41 54                	push   %r12
   19179:	53                   	push   %rbx
   1917a:	48 83 ec 68          	sub    $0x68,%rsp
   1917e:	48 85 ff             	test   %rdi,%rdi
   19181:	0f 84 65 01 00 00    	je     192ec <std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors+0x17c>
   19187:	49 89 fc             	mov    %rdi,%r12
   1918a:	e9 28 00 00 00       	jmpq   191b7 <std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors+0x47>
   1918f:	90                   	nop
   19190:	31 f6                	xor    %esi,%esi
   19192:	ff 15 08 ca 02 00    	callq  *0x2ca08(%rip)        # 45ba0 <pthread_setspecific@GLIBC_2.2.5>
   19198:	be 18 00 00 00       	mov    $0x18,%esi
   1919d:	ba 08 00 00 00       	mov    $0x8,%edx
   191a2:	4c 89 e7             	mov    %r12,%rdi
   191a5:	ff 15 4d ca 02 00    	callq  *0x2ca4d(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   191ab:	49 89 dc             	mov    %rbx,%r12
   191ae:	48 85 db             	test   %rbx,%rbx
   191b1:	0f 84 35 01 00 00    	je     192ec <std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors+0x17c>
   191b7:	4d 8b 3c 24          	mov    (%r12),%r15
   191bb:	4d 8b 6c 24 08       	mov    0x8(%r12),%r13
   191c0:	4d 8b 74 24 10       	mov    0x10(%r12),%r14
   191c5:	49 c1 e6 04          	shl    $0x4,%r14
   191c9:	4b 8d 2c 37          	lea    (%r15,%r14,1),%rbp
   191cd:	4c 89 7c 24 08       	mov    %r15,0x8(%rsp)
   191d2:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
   191d7:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
   191dc:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   191e1:	4c 89 fb             	mov    %r15,%rbx
   191e4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   191eb:	00 00 00 
   191ee:	66 90                	xchg   %ax,%ax
   191f0:	4d 85 f6             	test   %r14,%r14
   191f3:	74 22                	je     19217 <std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors+0xa7>
   191f5:	48 8b 43 08          	mov    0x8(%rbx),%rax
   191f9:	48 85 c0             	test   %rax,%rax
   191fc:	74 12                	je     19210 <std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors+0xa0>
   191fe:	48 8b 3b             	mov    (%rbx),%rdi
   19201:	48 83 c3 10          	add    $0x10,%rbx
   19205:	49 83 c6 f0          	add    $0xfffffffffffffff0,%r14
   19209:	ff d0                	callq  *%rax
   1920b:	e9 e0 ff ff ff       	jmpq   191f0 <std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors+0x80>
   19210:	48 83 c3 10          	add    $0x10,%rbx
   19214:	48 89 dd             	mov    %rbx,%rbp
   19217:	48 89 6c 24 18       	mov    %rbp,0x18(%rsp)
   1921c:	4d 85 ed             	test   %r13,%r13
   1921f:	74 17                	je     19238 <std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors+0xc8>
   19221:	49 c1 e5 04          	shl    $0x4,%r13
   19225:	74 11                	je     19238 <std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors+0xc8>
   19227:	ba 08 00 00 00       	mov    $0x8,%edx
   1922c:	4c 89 ff             	mov    %r15,%rdi
   1922f:	4c 89 ee             	mov    %r13,%rsi
   19232:	ff 15 c0 c9 02 00    	callq  *0x2c9c0(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   19238:	48 8b 05 d1 cd 02 00 	mov    0x2cdd1(%rip),%rax        # 46010 <std::sys_common::thread_local_dtor::register_dtor_fallback::DTORS>
   1923f:	48 85 c0             	test   %rax,%rax
   19242:	75 0d                	jne    19251 <std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors+0xe1>
   19244:	48 8d 3d c5 cd 02 00 	lea    0x2cdc5(%rip),%rdi        # 46010 <std::sys_common::thread_local_dtor::register_dtor_fallback::DTORS>
   1924b:	ff 15 3f c9 02 00    	callq  *0x2c93f(%rip)        # 45b90 <_GLOBAL_OFFSET_TABLE_+0x208>
   19251:	89 c7                	mov    %eax,%edi
   19253:	ff 15 07 cb 02 00    	callq  *0x2cb07(%rip)        # 45d60 <pthread_getspecific@GLIBC_2.2.5>
   19259:	48 89 c3             	mov    %rax,%rbx
   1925c:	48 8b 3d ad cd 02 00 	mov    0x2cdad(%rip),%rdi        # 46010 <std::sys_common::thread_local_dtor::register_dtor_fallback::DTORS>
   19263:	48 85 ff             	test   %rdi,%rdi
   19266:	0f 85 24 ff ff ff    	jne    19190 <std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors+0x20>
   1926c:	48 8b 35 a5 cd 02 00 	mov    0x2cda5(%rip),%rsi        # 46018 <std::sys_common::thread_local_dtor::register_dtor_fallback::DTORS+0x8>
   19273:	c7 04 24 00 00 00 00 	movl   $0x0,(%rsp)
   1927a:	48 89 e7             	mov    %rsp,%rdi
   1927d:	ff 15 a5 cb 02 00    	callq  *0x2cba5(%rip)        # 45e28 <pthread_key_create@GLIBC_2.2.5>
   19283:	89 44 24 04          	mov    %eax,0x4(%rsp)
   19287:	85 c0                	test   %eax,%eax
   19289:	75 70                	jne    192fb <std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors+0x18b>
   1928b:	8b 2c 24             	mov    (%rsp),%ebp
   1928e:	85 ed                	test   %ebp,%ebp
   19290:	75 36                	jne    192c8 <std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors+0x158>
   19292:	48 8b 35 7f cd 02 00 	mov    0x2cd7f(%rip),%rsi        # 46018 <std::sys_common::thread_local_dtor::register_dtor_fallback::DTORS+0x8>
   19299:	c7 04 24 00 00 00 00 	movl   $0x0,(%rsp)
   192a0:	48 89 e7             	mov    %rsp,%rdi
   192a3:	ff 15 7f cb 02 00    	callq  *0x2cb7f(%rip)        # 45e28 <pthread_key_create@GLIBC_2.2.5>
   192a9:	89 44 24 04          	mov    %eax,0x4(%rsp)
   192ad:	85 c0                	test   %eax,%eax
   192af:	0f 85 c9 00 00 00    	jne    1937e <std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors+0x20e>
   192b5:	8b 2c 24             	mov    (%rsp),%ebp
   192b8:	31 ff                	xor    %edi,%edi
   192ba:	ff 15 70 cc 02 00    	callq  *0x2cc70(%rip)        # 45f30 <pthread_key_delete@GLIBC_2.2.5>
   192c0:	85 ed                	test   %ebp,%ebp
   192c2:	0f 84 36 01 00 00    	je     193fe <std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors+0x28e>
   192c8:	89 ef                	mov    %ebp,%edi
   192ca:	31 c0                	xor    %eax,%eax
   192cc:	f0 48 0f b1 3d 3b cd 	lock cmpxchg %rdi,0x2cd3b(%rip)        # 46010 <std::sys_common::thread_local_dtor::register_dtor_fallback::DTORS>
   192d3:	02 00 
   192d5:	0f 84 b5 fe ff ff    	je     19190 <std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors+0x20>
   192db:	49 89 c5             	mov    %rax,%r13
   192de:	ff 15 4c cc 02 00    	callq  *0x2cc4c(%rip)        # 45f30 <pthread_key_delete@GLIBC_2.2.5>
   192e4:	4c 89 ef             	mov    %r13,%rdi
   192e7:	e9 a4 fe ff ff       	jmpq   19190 <std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors+0x20>
   192ec:	48 83 c4 68          	add    $0x68,%rsp
   192f0:	5b                   	pop    %rbx
   192f1:	41 5c                	pop    %r12
   192f3:	41 5d                	pop    %r13
   192f5:	41 5e                	pop    %r14
   192f7:	41 5f                	pop    %r15
   192f9:	5d                   	pop    %rbp
   192fa:	c3                   	retq   
   192fb:	48 8d 44 24 04       	lea    0x4(%rsp),%rax
   19300:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   19305:	48 8d 05 a8 e4 01 00 	lea    0x1e4a8(%rip),%rax        # 377b4 <str.6+0x494>
   1930c:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   19311:	48 8d 44 24 38       	lea    0x38(%rsp),%rax
   19316:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1931b:	48 8d 05 9e c4 fe ff 	lea    -0x13b62(%rip),%rax        # 57c0 <<&T as core::fmt::Debug>::fmt>
   19322:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   19327:	48 8d 4c 24 40       	lea    0x40(%rsp),%rcx
   1932c:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
   19331:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   19336:	48 8d 05 63 a3 02 00 	lea    0x2a363(%rip),%rax        # 436a0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x168>
   1933d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   19342:	48 c7 44 24 10 03 00 	movq   $0x3,0x10(%rsp)
   19349:	00 00 
   1934b:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   19352:	00 00 
   19354:	48 8d 44 24 48       	lea    0x48(%rsp),%rax
   19359:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1935e:	48 c7 44 24 30 02 00 	movq   $0x2,0x30(%rsp)
   19365:	00 00 
   19367:	48 8d 35 e2 b2 02 00 	lea    0x2b2e2(%rip),%rsi        # 44650 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1118>
   1936e:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   19373:	ff 15 67 cc 02 00    	callq  *0x2cc67(%rip)        # 45fe0 <_GLOBAL_OFFSET_TABLE_+0x658>
   19379:	e9 bd 00 00 00       	jmpq   1943b <std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors+0x2cb>
   1937e:	48 8d 44 24 04       	lea    0x4(%rsp),%rax
   19383:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   19388:	48 8d 05 25 e4 01 00 	lea    0x1e425(%rip),%rax        # 377b4 <str.6+0x494>
   1938f:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   19394:	48 8d 44 24 38       	lea    0x38(%rsp),%rax
   19399:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1939e:	48 8d 05 1b c4 fe ff 	lea    -0x13be5(%rip),%rax        # 57c0 <<&T as core::fmt::Debug>::fmt>
   193a5:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   193aa:	48 8d 4c 24 40       	lea    0x40(%rsp),%rcx
   193af:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
   193b4:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   193b9:	48 8d 05 e0 a2 02 00 	lea    0x2a2e0(%rip),%rax        # 436a0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x168>
   193c0:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   193c5:	48 c7 44 24 10 03 00 	movq   $0x3,0x10(%rsp)
   193cc:	00 00 
   193ce:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   193d5:	00 00 
   193d7:	48 8d 44 24 48       	lea    0x48(%rsp),%rax
   193dc:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   193e1:	48 c7 44 24 30 02 00 	movq   $0x2,0x30(%rsp)
   193e8:	00 00 
   193ea:	48 8d 35 5f b2 02 00 	lea    0x2b25f(%rip),%rsi        # 44650 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1118>
   193f1:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   193f6:	ff 15 e4 cb 02 00    	callq  *0x2cbe4(%rip)        # 45fe0 <_GLOBAL_OFFSET_TABLE_+0x658>
   193fc:	eb 3d                	jmp    1943b <std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors+0x2cb>
   193fe:	48 8d 05 03 ad 02 00 	lea    0x2ad03(%rip),%rax        # 44108 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xbd0>
   19405:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1940a:	48 c7 44 24 10 01 00 	movq   $0x1,0x10(%rsp)
   19411:	00 00 
   19413:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   1941a:	00 00 
   1941c:	48 8d 05 35 de 01 00 	lea    0x1de35(%rip),%rax        # 37258 <_fini+0x1934>
   19423:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   19428:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   1942f:	00 00 
   19431:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   19436:	e8 25 02 00 00       	callq  19660 <std::sys_common::util::abort>
   1943b:	0f 0b                	ud2    
   1943d:	48 89 c5             	mov    %rax,%rbp
   19440:	eb 17                	jmp    19459 <std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors+0x2e9>
   19442:	48 89 c5             	mov    %rax,%rbp
   19445:	eb 12                	jmp    19459 <std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors+0x2e9>
   19447:	48 89 c5             	mov    %rax,%rbp
   1944a:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   1944f:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   19454:	e8 07 d6 fe ff       	callq  6a60 <core::ptr::drop_in_place>
   19459:	4c 89 e7             	mov    %r12,%rdi
   1945c:	e8 8f 05 ff ff       	callq  99f0 <alloc::alloc::box_free>
   19461:	48 89 ef             	mov    %rbp,%rdi
   19464:	e8 e7 bb fe ff       	callq  5050 <_Unwind_Resume@plt>
   19469:	0f 0b                	ud2    
   1946b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000019470 <std::sys_common::thread_local_key::StaticKey::lazy_init>:
   19470:	55                   	push   %rbp
   19471:	53                   	push   %rbx
   19472:	48 83 ec 68          	sub    $0x68,%rsp
   19476:	48 89 fb             	mov    %rdi,%rbx
   19479:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   1947d:	c7 04 24 00 00 00 00 	movl   $0x0,(%rsp)
   19484:	48 89 e7             	mov    %rsp,%rdi
   19487:	ff 15 9b c9 02 00    	callq  *0x2c99b(%rip)        # 45e28 <pthread_key_create@GLIBC_2.2.5>
   1948d:	89 44 24 04          	mov    %eax,0x4(%rsp)
   19491:	85 c0                	test   %eax,%eax
   19493:	75 57                	jne    194ec <std::sys_common::thread_local_key::StaticKey::lazy_init+0x7c>
   19495:	8b 2c 24             	mov    (%rsp),%ebp
   19498:	85 ed                	test   %ebp,%ebp
   1949a:	75 2f                	jne    194cb <std::sys_common::thread_local_key::StaticKey::lazy_init+0x5b>
   1949c:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   194a0:	c7 04 24 00 00 00 00 	movl   $0x0,(%rsp)
   194a7:	48 89 e7             	mov    %rsp,%rdi
   194aa:	ff 15 78 c9 02 00    	callq  *0x2c978(%rip)        # 45e28 <pthread_key_create@GLIBC_2.2.5>
   194b0:	89 44 24 04          	mov    %eax,0x4(%rsp)
   194b4:	85 c0                	test   %eax,%eax
   194b6:	75 34                	jne    194ec <std::sys_common::thread_local_key::StaticKey::lazy_init+0x7c>
   194b8:	8b 2c 24             	mov    (%rsp),%ebp
   194bb:	31 ff                	xor    %edi,%edi
   194bd:	ff 15 6d ca 02 00    	callq  *0x2ca6d(%rip)        # 45f30 <pthread_key_delete@GLIBC_2.2.5>
   194c3:	85 ed                	test   %ebp,%ebp
   194c5:	0f 84 a1 00 00 00    	je     1956c <std::sys_common::thread_local_key::StaticKey::lazy_init+0xfc>
   194cb:	89 ef                	mov    %ebp,%edi
   194cd:	31 c0                	xor    %eax,%eax
   194cf:	f0 48 0f b1 3b       	lock cmpxchg %rdi,(%rbx)
   194d4:	74 0c                	je     194e2 <std::sys_common::thread_local_key::StaticKey::lazy_init+0x72>
   194d6:	48 89 c3             	mov    %rax,%rbx
   194d9:	ff 15 51 ca 02 00    	callq  *0x2ca51(%rip)        # 45f30 <pthread_key_delete@GLIBC_2.2.5>
   194df:	48 89 df             	mov    %rbx,%rdi
   194e2:	48 89 f8             	mov    %rdi,%rax
   194e5:	48 83 c4 68          	add    $0x68,%rsp
   194e9:	5b                   	pop    %rbx
   194ea:	5d                   	pop    %rbp
   194eb:	c3                   	retq   
   194ec:	48 8d 44 24 04       	lea    0x4(%rsp),%rax
   194f1:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   194f6:	48 8d 05 b7 e2 01 00 	lea    0x1e2b7(%rip),%rax        # 377b4 <str.6+0x494>
   194fd:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   19502:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   19507:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1950c:	48 8d 05 ad c2 fe ff 	lea    -0x13d53(%rip),%rax        # 57c0 <<&T as core::fmt::Debug>::fmt>
   19513:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   19518:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
   1951d:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
   19522:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   19527:	48 8d 05 72 a1 02 00 	lea    0x2a172(%rip),%rax        # 436a0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x168>
   1952e:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   19533:	48 c7 44 24 20 03 00 	movq   $0x3,0x20(%rsp)
   1953a:	00 00 
   1953c:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   19543:	00 00 
   19545:	48 8d 44 24 48       	lea    0x48(%rsp),%rax
   1954a:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1954f:	48 c7 44 24 40 02 00 	movq   $0x2,0x40(%rsp)
   19556:	00 00 
   19558:	48 8d 35 f1 b0 02 00 	lea    0x2b0f1(%rip),%rsi        # 44650 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1118>
   1955f:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   19564:	ff 15 76 ca 02 00    	callq  *0x2ca76(%rip)        # 45fe0 <_GLOBAL_OFFSET_TABLE_+0x658>
   1956a:	0f 0b                	ud2    
   1956c:	48 8d 05 95 ab 02 00 	lea    0x2ab95(%rip),%rax        # 44108 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xbd0>
   19573:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   19578:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
   1957f:	00 00 
   19581:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   19588:	00 00 
   1958a:	48 8d 05 c7 dc 01 00 	lea    0x1dcc7(%rip),%rax        # 37258 <_fini+0x1934>
   19591:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   19596:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   1959d:	00 00 
   1959f:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   195a4:	e8 b7 00 00 00       	callq  19660 <std::sys_common::util::abort>
   195a9:	0f 0b                	ud2    
   195ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000195b0 <std::sys_common::util::dumb_print>:
   195b0:	41 56                	push   %r14
   195b2:	53                   	push   %rbx
   195b3:	48 83 ec 48          	sub    $0x48,%rsp
   195b7:	0f 10 07             	movups (%rdi),%xmm0
   195ba:	0f 10 4f 10          	movups 0x10(%rdi),%xmm1
   195be:	0f 10 57 20          	movups 0x20(%rdi),%xmm2
   195c2:	0f 29 54 24 30       	movaps %xmm2,0x30(%rsp)
   195c7:	0f 29 4c 24 20       	movaps %xmm1,0x20(%rsp)
   195cc:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   195d1:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   195d6:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   195db:	e8 40 cb ff ff       	callq  16120 <std::io::Write::write_fmt>
   195e0:	48 89 d3             	mov    %rdx,%rbx
   195e3:	3c 03                	cmp    $0x3,%al
   195e5:	77 0c                	ja     195f3 <std::sys_common::util::dumb_print+0x43>
   195e7:	3c 02                	cmp    $0x2,%al
   195e9:	74 08                	je     195f3 <std::sys_common::util::dumb_print+0x43>
   195eb:	48 83 c4 48          	add    $0x48,%rsp
   195ef:	5b                   	pop    %rbx
   195f0:	41 5e                	pop    %r14
   195f2:	c3                   	retq   
   195f3:	48 8b 3b             	mov    (%rbx),%rdi
   195f6:	48 8b 43 08          	mov    0x8(%rbx),%rax
   195fa:	ff 10                	callq  *(%rax)
   195fc:	48 8b 43 08          	mov    0x8(%rbx),%rax
   19600:	48 8b 70 08          	mov    0x8(%rax),%rsi
   19604:	48 85 f6             	test   %rsi,%rsi
   19607:	74 0d                	je     19616 <std::sys_common::util::dumb_print+0x66>
   19609:	48 8b 3b             	mov    (%rbx),%rdi
   1960c:	48 8b 50 10          	mov    0x10(%rax),%rdx
   19610:	ff 15 e2 c5 02 00    	callq  *0x2c5e2(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   19616:	be 18 00 00 00       	mov    $0x18,%esi
   1961b:	ba 08 00 00 00       	mov    $0x8,%edx
   19620:	48 89 df             	mov    %rbx,%rdi
   19623:	ff 15 cf c5 02 00    	callq  *0x2c5cf(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   19629:	48 83 c4 48          	add    $0x48,%rsp
   1962d:	5b                   	pop    %rbx
   1962e:	41 5e                	pop    %r14
   19630:	c3                   	retq   
   19631:	49 89 c6             	mov    %rax,%r14
   19634:	48 8b 3b             	mov    (%rbx),%rdi
   19637:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   1963b:	e8 90 03 ff ff       	callq  99d0 <alloc::alloc::box_free>
   19640:	48 89 df             	mov    %rbx,%rdi
   19643:	e8 a8 03 ff ff       	callq  99f0 <alloc::alloc::box_free>
   19648:	4c 89 f7             	mov    %r14,%rdi
   1964b:	e8 00 ba fe ff       	callq  5050 <_Unwind_Resume@plt>
   19650:	0f 0b                	ud2    
   19652:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   19659:	00 00 00 
   1965c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000019660 <std::sys_common::util::abort>:
   19660:	48 83 ec 48          	sub    $0x48,%rsp
   19664:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   19669:	48 8d 05 a0 75 01 00 	lea    0x175a0(%rip),%rax        # 30c10 <<core::fmt::Arguments as core::fmt::Debug>::fmt>
   19670:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   19675:	48 8d 05 9c aa 02 00 	lea    0x2aa9c(%rip),%rax        # 44118 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xbe0>
   1967c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   19681:	48 c7 44 24 20 02 00 	movq   $0x2,0x20(%rsp)
   19688:	00 00 
   1968a:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   19691:	00 00 
   19693:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   19698:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1969d:	48 c7 44 24 40 01 00 	movq   $0x1,0x40(%rsp)
   196a4:	00 00 
   196a6:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   196ab:	e8 00 ff ff ff       	callq  195b0 <std::sys_common::util::dumb_print>
   196b0:	e8 cb 2c 00 00       	callq  1c380 <std::sys::unix::abort_internal>
   196b5:	0f 0b                	ud2    
   196b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   196be:	00 00 

00000000000196c0 <std::sys_common::util::report_overflow>:
   196c0:	53                   	push   %rbx
   196c1:	48 83 ec 60          	sub    $0x60,%rsp
   196c5:	66 66 66 64 48 8b 04 	data16 data16 data16 mov %fs:0x0,%rax
   196cc:	25 00 00 00 00 
   196d1:	83 b8 a0 ff ff ff 01 	cmpl   $0x1,-0x60(%rax)
   196d8:	75 09                	jne    196e3 <std::sys_common::util::report_overflow+0x23>
   196da:	48 8d b8 a8 ff ff ff 	lea    -0x58(%rax),%rdi
   196e1:	eb 11                	jmp    196f4 <std::sys_common::util::report_overflow+0x34>
   196e3:	e8 18 9f ff ff       	callq  13600 <std::thread::local::fast::Key<T>::try_initialize>
   196e8:	48 89 c7             	mov    %rax,%rdi
   196eb:	48 85 c0             	test   %rax,%rax
   196ee:	0f 84 cd 00 00 00    	je     197c1 <std::sys_common::util::report_overflow+0x101>
   196f4:	e8 07 f3 ff ff       	callq  18a00 <std::sys_common::thread_info::ThreadInfo::with::{{closure}}>
   196f9:	48 89 c3             	mov    %rax,%rbx
   196fc:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   19701:	48 83 c0 10          	add    $0x10,%rax
   19705:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
   19709:	48 85 c9             	test   %rcx,%rcx
   1970c:	48 0f 44 c1          	cmove  %rcx,%rax
   19710:	74 13                	je     19725 <std::sys_common::util::report_overflow+0x65>
   19712:	48 8b 78 08          	mov    0x8(%rax),%rdi
   19716:	48 83 ef 01          	sub    $0x1,%rdi
   1971a:	0f 82 90 00 00 00    	jb     197b0 <std::sys_common::util::report_overflow+0xf0>
   19720:	48 8b 00             	mov    (%rax),%rax
   19723:	eb 02                	jmp    19727 <std::sys_common::util::report_overflow+0x67>
   19725:	31 c0                	xor    %eax,%eax
   19727:	48 85 c0             	test   %rax,%rax
   1972a:	48 8d 0d d8 e7 01 00 	lea    0x1e7d8(%rip),%rcx        # 37f09 <str.6+0xbe9>
   19731:	48 0f 45 c8          	cmovne %rax,%rcx
   19735:	b8 09 00 00 00       	mov    $0x9,%eax
   1973a:	48 0f 45 c7          	cmovne %rdi,%rax
   1973e:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   19743:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   19748:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   1974d:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   19752:	48 8d 05 f7 c1 fe ff 	lea    -0x13e09(%rip),%rax        # 5950 <<&T as core::fmt::Display>::fmt>
   19759:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1975e:	48 8d 05 d3 a9 02 00 	lea    0x2a9d3(%rip),%rax        # 44138 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xc00>
   19765:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1976a:	48 c7 44 24 38 02 00 	movq   $0x2,0x38(%rsp)
   19771:	00 00 
   19773:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   1977a:	00 00 
   1977c:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   19781:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   19786:	48 c7 44 24 58 01 00 	movq   $0x1,0x58(%rsp)
   1978d:	00 00 
   1978f:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
   19794:	e8 17 fe ff ff       	callq  195b0 <std::sys_common::util::dumb_print>
   19799:	f0 48 83 2b 01       	lock subq $0x1,(%rbx)
   1979e:	75 0a                	jne    197aa <std::sys_common::util::report_overflow+0xea>
   197a0:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   197a5:	e8 d6 01 ff ff       	callq  9980 <alloc::sync::Arc<T>::drop_slow>
   197aa:	48 83 c4 60          	add    $0x60,%rsp
   197ae:	5b                   	pop    %rbx
   197af:	c3                   	retq   
   197b0:	48 8d 15 19 a4 02 00 	lea    0x2a419(%rip),%rdx        # 43bd0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x698>
   197b7:	31 f6                	xor    %esi,%esi
   197b9:	ff 15 69 c2 02 00    	callq  *0x2c269(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   197bf:	0f 0b                	ud2    
   197c1:	48 8d 3d eb e0 01 00 	lea    0x1e0eb(%rip),%rdi        # 378b3 <str.6+0x593>
   197c8:	48 8d 15 19 a3 02 00 	lea    0x2a319(%rip),%rdx        # 43ae8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x5b0>
   197cf:	be 5e 00 00 00       	mov    $0x5e,%esi
   197d4:	ff 15 c6 c5 02 00    	callq  *0x2c5c6(%rip)        # 45da0 <_GLOBAL_OFFSET_TABLE_+0x418>
   197da:	0f 0b                	ud2    
   197dc:	48 89 c3             	mov    %rax,%rbx
   197df:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   197e4:	e8 87 cd fe ff       	callq  6570 <core::ptr::drop_in_place>
   197e9:	48 89 df             	mov    %rbx,%rdi
   197ec:	e8 5f b8 fe ff       	callq  5050 <_Unwind_Resume@plt>
   197f1:	0f 0b                	ud2    
   197f3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   197fa:	00 00 00 
   197fd:	0f 1f 00             	nopl   (%rax)

0000000000019800 <std::alloc::default_alloc_error_hook>:
   19800:	48 83 ec 48          	sub    $0x48,%rsp
   19804:	48 89 3c 24          	mov    %rdi,(%rsp)
   19808:	48 89 e0             	mov    %rsp,%rax
   1980b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   19810:	48 8d 05 49 b5 01 00 	lea    0x1b549(%rip),%rax        # 34d60 <core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt>
   19817:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1981c:	48 8d 05 55 a9 02 00 	lea    0x2a955(%rip),%rax        # 44178 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xc40>
   19823:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   19828:	48 c7 44 24 20 02 00 	movq   $0x2,0x20(%rsp)
   1982f:	00 00 
   19831:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   19838:	00 00 
   1983a:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   1983f:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   19844:	48 c7 44 24 40 01 00 	movq   $0x1,0x40(%rsp)
   1984b:	00 00 
   1984d:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   19852:	e8 59 fd ff ff       	callq  195b0 <std::sys_common::util::dumb_print>
   19857:	48 83 c4 48          	add    $0x48,%rsp
   1985b:	c3                   	retq   
   1985c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000019860 <rust_oom>:
   19860:	50                   	push   %rax
   19861:	48 8b 05 c0 c8 02 00 	mov    0x2c8c0(%rip),%rax        # 46128 <std::alloc::HOOK>
   19868:	48 85 c0             	test   %rax,%rax
   1986b:	48 8d 0d 8e ff ff ff 	lea    -0x72(%rip),%rcx        # 19800 <std::alloc::default_alloc_error_hook>
   19872:	48 0f 45 c8          	cmovne %rax,%rcx
   19876:	ff d1                	callq  *%rcx
   19878:	ff 15 42 c3 02 00    	callq  *0x2c342(%rip)        # 45bc0 <_GLOBAL_OFFSET_TABLE_+0x238>
   1987e:	0f 0b                	ud2    

0000000000019880 <__rdl_alloc>:
   19880:	50                   	push   %rax
   19881:	48 89 fa             	mov    %rdi,%rdx
   19884:	48 83 fe 10          	cmp    $0x10,%rsi
   19888:	77 0f                	ja     19899 <__rdl_alloc+0x19>
   1988a:	48 39 d6             	cmp    %rdx,%rsi
   1988d:	77 0a                	ja     19899 <__rdl_alloc+0x19>
   1988f:	48 89 d7             	mov    %rdx,%rdi
   19892:	58                   	pop    %rax
   19893:	ff 25 ef c4 02 00    	jmpq   *0x2c4ef(%rip)        # 45d88 <malloc@GLIBC_2.2.5>
   19899:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   198a0:	00 
   198a1:	48 83 fe 08          	cmp    $0x8,%rsi
   198a5:	b8 08 00 00 00       	mov    $0x8,%eax
   198aa:	48 0f 47 c6          	cmova  %rsi,%rax
   198ae:	48 89 e7             	mov    %rsp,%rdi
   198b1:	48 89 c6             	mov    %rax,%rsi
   198b4:	ff 15 8e c6 02 00    	callq  *0x2c68e(%rip)        # 45f48 <posix_memalign@GLIBC_2.2.5>
   198ba:	85 c0                	test   %eax,%eax
   198bc:	75 06                	jne    198c4 <__rdl_alloc+0x44>
   198be:	48 8b 04 24          	mov    (%rsp),%rax
   198c2:	59                   	pop    %rcx
   198c3:	c3                   	retq   
   198c4:	31 c0                	xor    %eax,%eax
   198c6:	59                   	pop    %rcx
   198c7:	c3                   	retq   
   198c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   198cf:	00 

00000000000198d0 <__rdl_dealloc>:
   198d0:	ff 25 02 c1 02 00    	jmpq   *0x2c102(%rip)        # 459d8 <free@GLIBC_2.2.5>
   198d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   198dd:	00 00 00 

00000000000198e0 <__rdl_realloc>:
   198e0:	41 57                	push   %r15
   198e2:	41 56                	push   %r14
   198e4:	41 54                	push   %r12
   198e6:	53                   	push   %rbx
   198e7:	50                   	push   %rax
   198e8:	48 89 cb             	mov    %rcx,%rbx
   198eb:	49 89 f7             	mov    %rsi,%r15
   198ee:	49 89 fe             	mov    %rdi,%r14
   198f1:	48 83 fa 10          	cmp    $0x10,%rdx
   198f5:	77 1c                	ja     19913 <__rdl_realloc+0x33>
   198f7:	48 39 da             	cmp    %rbx,%rdx
   198fa:	77 17                	ja     19913 <__rdl_realloc+0x33>
   198fc:	4c 89 f7             	mov    %r14,%rdi
   198ff:	48 89 de             	mov    %rbx,%rsi
   19902:	48 83 c4 08          	add    $0x8,%rsp
   19906:	5b                   	pop    %rbx
   19907:	41 5c                	pop    %r12
   19909:	41 5e                	pop    %r14
   1990b:	41 5f                	pop    %r15
   1990d:	ff 25 fd c4 02 00    	jmpq   *0x2c4fd(%rip)        # 45e10 <realloc@GLIBC_2.2.5>
   19913:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   1991a:	00 
   1991b:	48 83 fa 08          	cmp    $0x8,%rdx
   1991f:	be 08 00 00 00       	mov    $0x8,%esi
   19924:	48 0f 47 f2          	cmova  %rdx,%rsi
   19928:	48 89 e7             	mov    %rsp,%rdi
   1992b:	48 89 da             	mov    %rbx,%rdx
   1992e:	ff 15 14 c6 02 00    	callq  *0x2c614(%rip)        # 45f48 <posix_memalign@GLIBC_2.2.5>
   19934:	89 c1                	mov    %eax,%ecx
   19936:	31 c0                	xor    %eax,%eax
   19938:	85 c9                	test   %ecx,%ecx
   1993a:	75 2b                	jne    19967 <__rdl_realloc+0x87>
   1993c:	4c 8b 24 24          	mov    (%rsp),%r12
   19940:	4d 85 e4             	test   %r12,%r12
   19943:	74 22                	je     19967 <__rdl_realloc+0x87>
   19945:	49 39 df             	cmp    %rbx,%r15
   19948:	4c 0f 47 fb          	cmova  %rbx,%r15
   1994c:	4c 89 e7             	mov    %r12,%rdi
   1994f:	4c 89 f6             	mov    %r14,%rsi
   19952:	4c 89 fa             	mov    %r15,%rdx
   19955:	ff 15 9d c3 02 00    	callq  *0x2c39d(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
   1995b:	4c 89 f7             	mov    %r14,%rdi
   1995e:	ff 15 74 c0 02 00    	callq  *0x2c074(%rip)        # 459d8 <free@GLIBC_2.2.5>
   19964:	4c 89 e0             	mov    %r12,%rax
   19967:	48 83 c4 08          	add    $0x8,%rsp
   1996b:	5b                   	pop    %rbx
   1996c:	41 5c                	pop    %r12
   1996e:	41 5e                	pop    %r14
   19970:	41 5f                	pop    %r15
   19972:	c3                   	retq   
   19973:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1997a:	00 00 00 
   1997d:	0f 1f 00             	nopl   (%rax)

0000000000019980 <__rdl_alloc_zeroed>:
   19980:	41 56                	push   %r14
   19982:	53                   	push   %rbx
   19983:	50                   	push   %rax
   19984:	48 89 fb             	mov    %rdi,%rbx
   19987:	48 83 fe 10          	cmp    $0x10,%rsi
   1998b:	77 1a                	ja     199a7 <__rdl_alloc_zeroed+0x27>
   1998d:	48 39 de             	cmp    %rbx,%rsi
   19990:	77 15                	ja     199a7 <__rdl_alloc_zeroed+0x27>
   19992:	be 01 00 00 00       	mov    $0x1,%esi
   19997:	48 89 df             	mov    %rbx,%rdi
   1999a:	48 83 c4 08          	add    $0x8,%rsp
   1999e:	5b                   	pop    %rbx
   1999f:	41 5e                	pop    %r14
   199a1:	ff 25 f9 c2 02 00    	jmpq   *0x2c2f9(%rip)        # 45ca0 <calloc@GLIBC_2.2.5>
   199a7:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   199ae:	00 
   199af:	48 83 fe 08          	cmp    $0x8,%rsi
   199b3:	b8 08 00 00 00       	mov    $0x8,%eax
   199b8:	48 0f 47 c6          	cmova  %rsi,%rax
   199bc:	48 89 e7             	mov    %rsp,%rdi
   199bf:	48 89 c6             	mov    %rax,%rsi
   199c2:	48 89 da             	mov    %rbx,%rdx
   199c5:	ff 15 7d c5 02 00    	callq  *0x2c57d(%rip)        # 45f48 <posix_memalign@GLIBC_2.2.5>
   199cb:	89 c1                	mov    %eax,%ecx
   199cd:	31 c0                	xor    %eax,%eax
   199cf:	85 c9                	test   %ecx,%ecx
   199d1:	75 1a                	jne    199ed <__rdl_alloc_zeroed+0x6d>
   199d3:	4c 8b 34 24          	mov    (%rsp),%r14
   199d7:	4d 85 f6             	test   %r14,%r14
   199da:	74 11                	je     199ed <__rdl_alloc_zeroed+0x6d>
   199dc:	4c 89 f7             	mov    %r14,%rdi
   199df:	31 f6                	xor    %esi,%esi
   199e1:	48 89 da             	mov    %rbx,%rdx
   199e4:	ff 15 1e c2 02 00    	callq  *0x2c21e(%rip)        # 45c08 <memset@GLIBC_2.2.5>
   199ea:	4c 89 f0             	mov    %r14,%rax
   199ed:	48 83 c4 08          	add    $0x8,%rsp
   199f1:	5b                   	pop    %rbx
   199f2:	41 5e                	pop    %r14
   199f4:	c3                   	retq   
   199f5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   199fc:	00 00 00 
   199ff:	90                   	nop

0000000000019a00 <__rust_drop_panic>:
   19a00:	48 83 ec 38          	sub    $0x38,%rsp
   19a04:	48 8d 05 8d a7 02 00 	lea    0x2a78d(%rip),%rax        # 44198 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xc60>
   19a0b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   19a10:	48 c7 44 24 10 01 00 	movq   $0x1,0x10(%rsp)
   19a17:	00 00 
   19a19:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   19a20:	00 00 
   19a22:	48 8d 05 2f d8 01 00 	lea    0x1d82f(%rip),%rax        # 37258 <_fini+0x1934>
   19a29:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   19a2e:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   19a35:	00 00 
   19a37:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   19a3c:	e8 1f fc ff ff       	callq  19660 <std::sys_common::util::abort>
   19a41:	0f 0b                	ud2    
   19a43:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   19a4a:	00 00 00 
   19a4d:	0f 1f 00             	nopl   (%rax)

0000000000019a50 <__rust_foreign_exception>:
   19a50:	48 83 ec 38          	sub    $0x38,%rsp
   19a54:	48 8d 05 4d a7 02 00 	lea    0x2a74d(%rip),%rax        # 441a8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xc70>
   19a5b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   19a60:	48 c7 44 24 10 01 00 	movq   $0x1,0x10(%rsp)
   19a67:	00 00 
   19a69:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   19a70:	00 00 
   19a72:	48 8d 05 df d7 01 00 	lea    0x1d7df(%rip),%rax        # 37258 <_fini+0x1934>
   19a79:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   19a7e:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   19a85:	00 00 
   19a87:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   19a8c:	e8 cf fb ff ff       	callq  19660 <std::sys_common::util::abort>
   19a91:	0f 0b                	ud2    
   19a93:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   19a9a:	00 00 00 
   19a9d:	0f 1f 00             	nopl   (%rax)

0000000000019aa0 <std::panicking::default_hook>:
   19aa0:	55                   	push   %rbp
   19aa1:	41 57                	push   %r15
   19aa3:	41 56                	push   %r14
   19aa5:	53                   	push   %rbx
   19aa6:	48 83 ec 78          	sub    $0x78,%rsp
   19aaa:	49 89 ff             	mov    %rdi,%r15
   19aad:	66 66 66 64 48 8b 04 	data16 data16 data16 mov %fs:0x0,%rax
   19ab4:	25 00 00 00 00 
   19ab9:	49 89 c6             	mov    %rax,%r14
   19abc:	83 b8 e0 ff ff ff 01 	cmpl   $0x1,-0x20(%rax)
   19ac3:	75 09                	jne    19ace <std::panicking::default_hook+0x2e>
   19ac5:	48 8d 80 e8 ff ff ff 	lea    -0x18(%rax),%rax
   19acc:	eb 0e                	jmp    19adc <std::panicking::default_hook+0x3c>
   19ace:	e8 fd 9a ff ff       	callq  135d0 <std::thread::local::fast::Key<T>::try_initialize>
   19ad3:	48 85 c0             	test   %rax,%rax
   19ad6:	0f 84 66 03 00 00    	je     19e42 <std::panicking::default_hook+0x3a2>
   19adc:	b1 01                	mov    $0x1,%cl
   19ade:	48 83 38 01          	cmpq   $0x1,(%rax)
   19ae2:	0f 86 8f 00 00 00    	jbe    19b77 <std::panicking::default_hook+0xd7>
   19ae8:	88 4c 24 07          	mov    %cl,0x7(%rsp)
   19aec:	4c 89 ff             	mov    %r15,%rdi
   19aef:	ff 15 f3 c0 02 00    	callq  *0x2c0f3(%rip)        # 45be8 <_GLOBAL_OFFSET_TABLE_+0x260>
   19af5:	48 85 c0             	test   %rax,%rax
   19af8:	0f 84 29 03 00 00    	je     19e27 <std::panicking::default_hook+0x387>
   19afe:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   19b03:	4c 89 ff             	mov    %r15,%rdi
   19b06:	ff 15 64 c2 02 00    	callq  *0x2c264(%rip)        # 45d70 <_GLOBAL_OFFSET_TABLE_+0x3e8>
   19b0c:	48 89 c3             	mov    %rax,%rbx
   19b0f:	48 89 c7             	mov    %rax,%rdi
   19b12:	ff 52 18             	callq  *0x18(%rdx)
   19b15:	48 85 db             	test   %rbx,%rbx
   19b18:	0f 84 e6 00 00 00    	je     19c04 <std::panicking::default_hook+0x164>
   19b1e:	48 b9 f4 bc c7 ec 1e 	movabs $0x7ef2a91eecc7bcf4,%rcx
   19b25:	a9 f2 7e 
   19b28:	48 39 c8             	cmp    %rcx,%rax
   19b2b:	0f 85 d3 00 00 00    	jne    19c04 <std::panicking::default_hook+0x164>
   19b31:	48 8b 03             	mov    (%rbx),%rax
   19b34:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
   19b38:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   19b3d:	48 89 4c 24 50       	mov    %rcx,0x50(%rsp)
   19b42:	4c 89 f0             	mov    %r14,%rax
   19b45:	41 83 be a0 ff ff ff 	cmpl   $0x1,-0x60(%r14)
   19b4c:	01 
   19b4d:	0f 84 05 01 00 00    	je     19c58 <std::panicking::default_hook+0x1b8>
   19b53:	e8 a8 9a ff ff       	callq  13600 <std::thread::local::fast::Key<T>::try_initialize>
   19b58:	48 89 c7             	mov    %rax,%rdi
   19b5b:	48 85 c0             	test   %rax,%rax
   19b5e:	0f 85 fb 00 00 00    	jne    19c5f <std::panicking::default_hook+0x1bf>
   19b64:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   19b6b:	00 00 
   19b6d:	45 31 f6             	xor    %r14d,%r14d
   19b70:	31 c0                	xor    %eax,%eax
   19b72:	e9 1b 01 00 00       	jmpq   19c92 <std::panicking::default_hook+0x1f2>
   19b77:	48 8b 05 9a c5 02 00 	mov    0x2c59a(%rip),%rax        # 46118 <std::sys_common::backtrace::rust_backtrace_env::ENABLED>
   19b7e:	48 83 f8 02          	cmp    $0x2,%rax
   19b82:	0f 84 3b 02 00 00    	je     19dc3 <std::panicking::default_hook+0x323>
   19b88:	48 83 f8 01          	cmp    $0x1,%rax
   19b8c:	0f 84 2a 02 00 00    	je     19dbc <std::panicking::default_hook+0x31c>
   19b92:	48 85 c0             	test   %rax,%rax
   19b95:	0f 85 4d ff ff ff    	jne    19ae8 <std::panicking::default_hook+0x48>
   19b9b:	48 8d 35 86 df 01 00 	lea    0x1df86(%rip),%rsi        # 37b28 <str.6+0x808>
   19ba2:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   19ba7:	ba 0e 00 00 00       	mov    $0xe,%edx
   19bac:	ff 15 fe c2 02 00    	callq  *0x2c2fe(%rip)        # 45eb0 <_GLOBAL_OFFSET_TABLE_+0x528>
   19bb2:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   19bb7:	48 85 ff             	test   %rdi,%rdi
   19bba:	0f 84 0a 02 00 00    	je     19dca <std::panicking::default_hook+0x32a>
   19bc0:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   19bc5:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   19bca:	48 83 f8 04          	cmp    $0x4,%rax
   19bce:	0f 84 fb 01 00 00    	je     19dcf <std::panicking::default_hook+0x32f>
   19bd4:	48 83 f8 01          	cmp    $0x1,%rax
   19bd8:	0f 85 0d 02 00 00    	jne    19deb <std::panicking::default_hook+0x34b>
   19bde:	40 b5 04             	mov    $0x4,%bpl
   19be1:	bb 01 00 00 00       	mov    $0x1,%ebx
   19be6:	48 8d 05 49 df 01 00 	lea    0x1df49(%rip),%rax        # 37b36 <str.6+0x816>
   19bed:	48 39 c7             	cmp    %rax,%rdi
   19bf0:	0f 84 fc 01 00 00    	je     19df2 <std::panicking::default_hook+0x352>
   19bf6:	80 3f 30             	cmpb   $0x30,(%rdi)
   19bf9:	0f 85 ec 01 00 00    	jne    19deb <std::panicking::default_hook+0x34b>
   19bff:	e9 ee 01 00 00       	jmpq   19df2 <std::panicking::default_hook+0x352>
   19c04:	4c 89 ff             	mov    %r15,%rdi
   19c07:	ff 15 63 c1 02 00    	callq  *0x2c163(%rip)        # 45d70 <_GLOBAL_OFFSET_TABLE_+0x3e8>
   19c0d:	48 89 c3             	mov    %rax,%rbx
   19c10:	48 89 c7             	mov    %rax,%rdi
   19c13:	ff 52 18             	callq  *0x18(%rdx)
   19c16:	48 8d 15 f3 dd 01 00 	lea    0x1ddf3(%rip),%rdx        # 37a10 <str.6+0x6f0>
   19c1d:	b9 08 00 00 00       	mov    $0x8,%ecx
   19c22:	48 85 db             	test   %rbx,%rbx
   19c25:	74 16                	je     19c3d <std::panicking::default_hook+0x19d>
   19c27:	48 be 0b 38 d0 04 32 	movabs $0x7ebaa3204d0380b,%rsi
   19c2e:	aa eb 07 
   19c31:	48 39 f0             	cmp    %rsi,%rax
   19c34:	75 07                	jne    19c3d <std::panicking::default_hook+0x19d>
   19c36:	48 8b 13             	mov    (%rbx),%rdx
   19c39:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
   19c3d:	48 89 54 24 48       	mov    %rdx,0x48(%rsp)
   19c42:	48 89 4c 24 50       	mov    %rcx,0x50(%rsp)
   19c47:	4c 89 f0             	mov    %r14,%rax
   19c4a:	41 83 be a0 ff ff ff 	cmpl   $0x1,-0x60(%r14)
   19c51:	01 
   19c52:	0f 85 fb fe ff ff    	jne    19b53 <std::panicking::default_hook+0xb3>
   19c58:	48 8d b8 a8 ff ff ff 	lea    -0x58(%rax),%rdi
   19c5f:	e8 9c ed ff ff       	callq  18a00 <std::sys_common::thread_info::ThreadInfo::with::{{closure}}>
   19c64:	49 89 c6             	mov    %rax,%r14
   19c67:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   19c6c:	48 83 c0 10          	add    $0x10,%rax
   19c70:	49 8b 4e 10          	mov    0x10(%r14),%rcx
   19c74:	48 85 c9             	test   %rcx,%rcx
   19c77:	48 0f 44 c1          	cmove  %rcx,%rax
   19c7b:	74 13                	je     19c90 <std::panicking::default_hook+0x1f0>
   19c7d:	48 8b 78 08          	mov    0x8(%rax),%rdi
   19c81:	48 83 ef 01          	sub    $0x1,%rdi
   19c85:	0f 82 de 01 00 00    	jb     19e69 <std::panicking::default_hook+0x3c9>
   19c8b:	48 8b 00             	mov    (%rax),%rax
   19c8e:	eb 02                	jmp    19c92 <std::panicking::default_hook+0x1f2>
   19c90:	31 c0                	xor    %eax,%eax
   19c92:	48 85 c0             	test   %rax,%rax
   19c95:	48 8d 0d d8 e3 01 00 	lea    0x1e3d8(%rip),%rcx        # 38074 <str.6+0xd54>
   19c9c:	48 0f 45 c8          	cmovne %rax,%rcx
   19ca0:	b8 09 00 00 00       	mov    $0x9,%eax
   19ca5:	48 0f 45 c7          	cmovne %rdi,%rax
   19ca9:	48 89 4c 24 68       	mov    %rcx,0x68(%rsp)
   19cae:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   19cb3:	48 8d 44 24 68       	lea    0x68(%rsp),%rax
   19cb8:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   19cbd:	48 8d 44 24 48       	lea    0x48(%rsp),%rax
   19cc2:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   19cc7:	48 8d 44 24 40       	lea    0x40(%rsp),%rax
   19ccc:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   19cd1:	48 8d 44 24 07       	lea    0x7(%rsp),%rax
   19cd6:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   19cdb:	31 ff                	xor    %edi,%edi
   19cdd:	ff 15 05 bd 02 00    	callq  *0x2bd05(%rip)        # 459e8 <_GLOBAL_OFFSET_TABLE_+0x60>
   19ce3:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   19ce8:	48 89 54 24 60       	mov    %rdx,0x60(%rsp)
   19ced:	48 85 c0             	test   %rax,%rax
   19cf0:	74 60                	je     19d52 <std::panicking::default_hook+0x2b2>
   19cf2:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   19cf7:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   19cfc:	48 8d 15 25 a5 02 00 	lea    0x2a525(%rip),%rdx        # 44228 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xcf0>
   19d03:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   19d08:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
   19d0d:	e8 be 01 00 00       	callq  19ed0 <std::panicking::default_hook::{{closure}}>
   19d12:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   19d17:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
   19d1c:	ff 15 c6 bc 02 00    	callq  *0x2bcc6(%rip)        # 459e8 <_GLOBAL_OFFSET_TABLE_+0x60>
   19d22:	48 89 c3             	mov    %rax,%rbx
   19d25:	48 85 c0             	test   %rax,%rax
   19d28:	74 1e                	je     19d48 <std::panicking::default_hook+0x2a8>
   19d2a:	49 89 d7             	mov    %rdx,%r15
   19d2d:	48 89 df             	mov    %rbx,%rdi
   19d30:	ff 12                	callq  *(%rdx)
   19d32:	49 8b 77 08          	mov    0x8(%r15),%rsi
   19d36:	48 85 f6             	test   %rsi,%rsi
   19d39:	74 0d                	je     19d48 <std::panicking::default_hook+0x2a8>
   19d3b:	49 8b 57 10          	mov    0x10(%r15),%rdx
   19d3f:	48 89 df             	mov    %rbx,%rdi
   19d42:	ff 15 b0 be 02 00    	callq  *0x2beb0(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   19d48:	40 b5 01             	mov    $0x1,%bpl
   19d4b:	4d 85 f6             	test   %r14,%r14
   19d4e:	75 1f                	jne    19d6f <std::panicking::default_hook+0x2cf>
   19d50:	eb 2e                	jmp    19d80 <std::panicking::default_hook+0x2e0>
   19d52:	48 8d 15 77 a4 02 00 	lea    0x2a477(%rip),%rdx        # 441d0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xc98>
   19d59:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   19d5e:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   19d63:	e8 68 01 00 00       	callq  19ed0 <std::panicking::default_hook::{{closure}}>
   19d68:	31 ed                	xor    %ebp,%ebp
   19d6a:	4d 85 f6             	test   %r14,%r14
   19d6d:	74 11                	je     19d80 <std::panicking::default_hook+0x2e0>
   19d6f:	f0 49 83 2e 01       	lock subq $0x1,(%r14)
   19d74:	75 0a                	jne    19d80 <std::panicking::default_hook+0x2e0>
   19d76:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   19d7b:	e8 00 fc fe ff       	callq  9980 <alloc::sync::Arc<T>::drop_slow>
   19d80:	48 8b 5c 24 58       	mov    0x58(%rsp),%rbx
   19d85:	48 85 db             	test   %rbx,%rbx
   19d88:	0f 94 c0             	sete   %al
   19d8b:	40 08 c5             	or     %al,%bpl
   19d8e:	75 21                	jne    19db1 <std::panicking::default_hook+0x311>
   19d90:	4c 8b 7c 24 60       	mov    0x60(%rsp),%r15
   19d95:	48 89 df             	mov    %rbx,%rdi
   19d98:	41 ff 17             	callq  *(%r15)
   19d9b:	49 8b 77 08          	mov    0x8(%r15),%rsi
   19d9f:	48 85 f6             	test   %rsi,%rsi
   19da2:	74 0d                	je     19db1 <std::panicking::default_hook+0x311>
   19da4:	49 8b 57 10          	mov    0x10(%r15),%rdx
   19da8:	48 89 df             	mov    %rbx,%rdi
   19dab:	ff 15 47 be 02 00    	callq  *0x2be47(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   19db1:	48 83 c4 78          	add    $0x78,%rsp
   19db5:	5b                   	pop    %rbx
   19db6:	41 5e                	pop    %r14
   19db8:	41 5f                	pop    %r15
   19dba:	5d                   	pop    %rbp
   19dbb:	c3                   	retq   
   19dbc:	b1 04                	mov    $0x4,%cl
   19dbe:	e9 25 fd ff ff       	jmpq   19ae8 <std::panicking::default_hook+0x48>
   19dc3:	31 c9                	xor    %ecx,%ecx
   19dc5:	e9 1e fd ff ff       	jmpq   19ae8 <std::panicking::default_hook+0x48>
   19dca:	40 b5 05             	mov    $0x5,%bpl
   19dcd:	eb 33                	jmp    19e02 <std::panicking::default_hook+0x362>
   19dcf:	40 b5 01             	mov    $0x1,%bpl
   19dd2:	bb 03 00 00 00       	mov    $0x3,%ebx
   19dd7:	48 8d 05 a2 d9 01 00 	lea    0x1d9a2(%rip),%rax        # 37780 <str.6+0x460>
   19dde:	48 39 c7             	cmp    %rax,%rdi
   19de1:	74 0f                	je     19df2 <std::panicking::default_hook+0x352>
   19de3:	81 3f 66 75 6c 6c    	cmpl   $0x6c6c7566,(%rdi)
   19de9:	74 07                	je     19df2 <std::panicking::default_hook+0x352>
   19deb:	bb 02 00 00 00       	mov    $0x2,%ebx
   19df0:	31 ed                	xor    %ebp,%ebp
   19df2:	48 85 f6             	test   %rsi,%rsi
   19df5:	74 0b                	je     19e02 <std::panicking::default_hook+0x362>
   19df7:	ba 01 00 00 00       	mov    $0x1,%edx
   19dfc:	ff 15 f6 bd 02 00    	callq  *0x2bdf6(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   19e02:	40 80 fd 05          	cmp    $0x5,%bpl
   19e06:	40 0f b6 c5          	movzbl %bpl,%eax
   19e0a:	b9 04 00 00 00       	mov    $0x4,%ecx
   19e0f:	0f 45 c8             	cmovne %eax,%ecx
   19e12:	b8 01 00 00 00       	mov    $0x1,%eax
   19e17:	48 0f 45 c3          	cmovne %rbx,%rax
   19e1b:	48 87 05 f6 c2 02 00 	xchg   %rax,0x2c2f6(%rip)        # 46118 <std::sys_common::backtrace::rust_backtrace_env::ENABLED>
   19e22:	e9 c1 fc ff ff       	jmpq   19ae8 <std::panicking::default_hook+0x48>
   19e27:	48 8d 3d cc d7 01 00 	lea    0x1d7cc(%rip),%rdi        # 375fa <str.6+0x2da>
   19e2e:	48 8d 15 83 a3 02 00 	lea    0x2a383(%rip),%rdx        # 441b8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xc80>
   19e35:	be 2b 00 00 00       	mov    $0x2b,%esi
   19e3a:	ff 15 98 c0 02 00    	callq  *0x2c098(%rip)        # 45ed8 <_GLOBAL_OFFSET_TABLE_+0x550>
   19e40:	0f 0b                	ud2    
   19e42:	48 8d 3d 05 da 01 00 	lea    0x1da05(%rip),%rdi        # 3784e <str.6+0x52e>
   19e49:	48 8d 0d b0 99 02 00 	lea    0x299b0(%rip),%rcx        # 43800 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2c8>
   19e50:	4c 8d 05 79 9c 02 00 	lea    0x29c79(%rip),%r8        # 43ad0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x598>
   19e57:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   19e5c:	be 46 00 00 00       	mov    $0x46,%esi
   19e61:	ff 15 79 bd 02 00    	callq  *0x2bd79(%rip)        # 45be0 <_GLOBAL_OFFSET_TABLE_+0x258>
   19e67:	0f 0b                	ud2    
   19e69:	48 8d 15 60 9d 02 00 	lea    0x29d60(%rip),%rdx        # 43bd0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x698>
   19e70:	31 f6                	xor    %esi,%esi
   19e72:	ff 15 b0 bb 02 00    	callq  *0x2bbb0(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   19e78:	0f 0b                	ud2    
   19e7a:	eb 31                	jmp    19ead <std::panicking::default_hook+0x40d>
   19e7c:	49 89 c6             	mov    %rax,%r14
   19e7f:	48 89 df             	mov    %rbx,%rdi
   19e82:	4c 89 fe             	mov    %r15,%rsi
   19e85:	e8 46 fb fe ff       	callq  99d0 <alloc::alloc::box_free>
   19e8a:	eb 24                	jmp    19eb0 <std::panicking::default_hook+0x410>
   19e8c:	49 89 c6             	mov    %rax,%r14
   19e8f:	48 89 df             	mov    %rbx,%rdi
   19e92:	4c 89 fe             	mov    %r15,%rsi
   19e95:	e8 36 fb fe ff       	callq  99d0 <alloc::alloc::box_free>
   19e9a:	eb 1e                	jmp    19eba <std::panicking::default_hook+0x41a>
   19e9c:	eb 0f                	jmp    19ead <std::panicking::default_hook+0x40d>
   19e9e:	49 89 c6             	mov    %rax,%r14
   19ea1:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
   19ea6:	e8 55 cd fe ff       	callq  6c00 <core::ptr::drop_in_place>
   19eab:	eb 03                	jmp    19eb0 <std::panicking::default_hook+0x410>
   19ead:	49 89 c6             	mov    %rax,%r14
   19eb0:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   19eb5:	e8 86 ce fe ff       	callq  6d40 <core::ptr::drop_in_place>
   19eba:	4c 89 f7             	mov    %r14,%rdi
   19ebd:	e8 8e b1 fe ff       	callq  5050 <_Unwind_Resume@plt>
   19ec2:	0f 0b                	ud2    
   19ec4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   19ecb:	00 00 00 
   19ece:	66 90                	xchg   %ax,%ax

0000000000019ed0 <std::panicking::default_hook::{{closure}}>:
   19ed0:	41 57                	push   %r15
   19ed2:	41 56                	push   %r14
   19ed4:	41 55                	push   %r13
   19ed6:	41 54                	push   %r12
   19ed8:	53                   	push   %rbx
   19ed9:	48 83 ec 70          	sub    $0x70,%rsp
   19edd:	49 89 f7             	mov    %rsi,%r15
   19ee0:	48 89 fb             	mov    %rdi,%rbx
   19ee3:	48 8b 07             	mov    (%rdi),%rax
   19ee6:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
   19eea:	48 8b 77 10          	mov    0x10(%rdi),%rsi
   19eee:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   19ef3:	48 8d 05 56 ba fe ff 	lea    -0x145aa(%rip),%rax        # 5950 <<&T as core::fmt::Display>::fmt>
   19efa:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   19eff:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   19f04:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   19f09:	48 89 74 24 30       	mov    %rsi,0x30(%rsp)
   19f0e:	48 8d 05 2b ba fe ff 	lea    -0x145d5(%rip),%rax        # 5940 <<&T as core::fmt::Display>::fmt>
   19f15:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   19f1a:	48 8d 05 5f a3 02 00 	lea    0x2a35f(%rip),%rax        # 44280 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xd48>
   19f21:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   19f26:	48 c7 44 24 48 04 00 	movq   $0x4,0x48(%rsp)
   19f2d:	00 00 
   19f2f:	48 c7 44 24 50 00 00 	movq   $0x0,0x50(%rsp)
   19f36:	00 00 
   19f38:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   19f3d:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   19f42:	48 c7 44 24 68 03 00 	movq   $0x3,0x68(%rsp)
   19f49:	00 00 
   19f4b:	4c 8b 6a 48          	mov    0x48(%rdx),%r13
   19f4f:	4c 8d 74 24 40       	lea    0x40(%rsp),%r14
   19f54:	4c 89 ff             	mov    %r15,%rdi
   19f57:	4c 89 f6             	mov    %r14,%rsi
   19f5a:	41 ff d5             	callq  *%r13
   19f5d:	49 89 d4             	mov    %rdx,%r12
   19f60:	3c 03                	cmp    $0x3,%al
   19f62:	77 04                	ja     19f68 <std::panicking::default_hook::{{closure}}+0x98>
   19f64:	3c 02                	cmp    $0x2,%al
   19f66:	75 3a                	jne    19fa2 <std::panicking::default_hook::{{closure}}+0xd2>
   19f68:	49 8b 3c 24          	mov    (%r12),%rdi
   19f6c:	49 8b 44 24 08       	mov    0x8(%r12),%rax
   19f71:	ff 10                	callq  *(%rax)
   19f73:	49 8b 44 24 08       	mov    0x8(%r12),%rax
   19f78:	48 8b 70 08          	mov    0x8(%rax),%rsi
   19f7c:	48 85 f6             	test   %rsi,%rsi
   19f7f:	74 0e                	je     19f8f <std::panicking::default_hook::{{closure}}+0xbf>
   19f81:	49 8b 3c 24          	mov    (%r12),%rdi
   19f85:	48 8b 50 10          	mov    0x10(%rax),%rdx
   19f89:	ff 15 69 bc 02 00    	callq  *0x2bc69(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   19f8f:	be 18 00 00 00       	mov    $0x18,%esi
   19f94:	ba 08 00 00 00       	mov    $0x8,%edx
   19f99:	4c 89 e7             	mov    %r12,%rdi
   19f9c:	ff 15 56 bc 02 00    	callq  *0x2bc56(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   19fa2:	48 8b 43 18          	mov    0x18(%rbx),%rax
   19fa6:	8a 18                	mov    (%rax),%bl
   19fa8:	8d 43 fd             	lea    -0x3(%rbx),%eax
   19fab:	0f b6 c8             	movzbl %al,%ecx
   19fae:	48 8d 51 01          	lea    0x1(%rcx),%rdx
   19fb2:	31 c0                	xor    %eax,%eax
   19fb4:	80 f9 02             	cmp    $0x2,%cl
   19fb7:	48 0f 42 c2          	cmovb  %rdx,%rax
   19fbb:	48 85 c0             	test   %rax,%rax
   19fbe:	0f 84 9b 00 00 00    	je     1a05f <std::panicking::default_hook::{{closure}}+0x18f>
   19fc4:	83 f8 01             	cmp    $0x1,%eax
   19fc7:	0f 84 43 01 00 00    	je     1a110 <std::panicking::default_hook::{{closure}}+0x240>
   19fcd:	31 c0                	xor    %eax,%eax
   19fcf:	86 05 4b c0 02 00    	xchg   %al,0x2c04b(%rip)        # 46020 <std::panicking::default_hook::{{closure}}::FIRST_PANIC>
   19fd5:	84 c0                	test   %al,%al
   19fd7:	0f 84 33 01 00 00    	je     1a110 <std::panicking::default_hook::{{closure}}+0x240>
   19fdd:	48 8d 05 dc a2 02 00 	lea    0x2a2dc(%rip),%rax        # 442c0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xd88>
   19fe4:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   19fe9:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
   19ff0:	00 00 
   19ff2:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   19ff9:	00 00 
   19ffb:	48 8d 05 56 d2 01 00 	lea    0x1d256(%rip),%rax        # 37258 <_fini+0x1934>
   1a002:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1a007:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   1a00e:	00 00 
   1a010:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   1a015:	4c 89 ff             	mov    %r15,%rdi
   1a018:	41 ff d5             	callq  *%r13
   1a01b:	48 89 d3             	mov    %rdx,%rbx
   1a01e:	3c 03                	cmp    $0x3,%al
   1a020:	77 08                	ja     1a02a <std::panicking::default_hook::{{closure}}+0x15a>
   1a022:	3c 02                	cmp    $0x2,%al
   1a024:	0f 85 e6 00 00 00    	jne    1a110 <std::panicking::default_hook::{{closure}}+0x240>
   1a02a:	48 8b 3b             	mov    (%rbx),%rdi
   1a02d:	48 8b 43 08          	mov    0x8(%rbx),%rax
   1a031:	ff 10                	callq  *(%rax)
   1a033:	48 8b 43 08          	mov    0x8(%rbx),%rax
   1a037:	48 8b 70 08          	mov    0x8(%rax),%rsi
   1a03b:	48 85 f6             	test   %rsi,%rsi
   1a03e:	74 0d                	je     1a04d <std::panicking::default_hook::{{closure}}+0x17d>
   1a040:	48 8b 3b             	mov    (%rbx),%rdi
   1a043:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1a047:	ff 15 ab bb 02 00    	callq  *0x2bbab(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   1a04d:	be 18 00 00 00       	mov    $0x18,%esi
   1a052:	ba 08 00 00 00       	mov    $0x8,%edx
   1a057:	48 89 df             	mov    %rbx,%rdi
   1a05a:	e9 ab 00 00 00       	jmpq   1a10a <std::panicking::default_hook::{{closure}}+0x23a>
   1a05f:	48 8d 3d 8a c0 02 00 	lea    0x2c08a(%rip),%rdi        # 460f0 <std::sys_common::backtrace::lock::LOCK>
   1a066:	ff 15 54 bf 02 00    	callq  *0x2bf54(%rip)        # 45fc0 <pthread_mutex_lock@GLIBC_2.2.5>
   1a06c:	88 5c 24 0f          	mov    %bl,0xf(%rsp)
   1a070:	48 8d 44 24 0f       	lea    0xf(%rsp),%rax
   1a075:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1a07a:	48 8d 05 8f dd ff ff 	lea    -0x2271(%rip),%rax        # 17e10 <<std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt>
   1a081:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1a086:	48 8d 05 f3 94 02 00 	lea    0x294f3(%rip),%rax        # 43580 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x48>
   1a08d:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1a092:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
   1a099:	00 00 
   1a09b:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   1a0a2:	00 00 
   1a0a4:	4c 89 74 24 30       	mov    %r14,0x30(%rsp)
   1a0a9:	48 c7 44 24 38 01 00 	movq   $0x1,0x38(%rsp)
   1a0b0:	00 00 
   1a0b2:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   1a0b7:	4c 89 ff             	mov    %r15,%rdi
   1a0ba:	41 ff d5             	callq  *%r13
   1a0bd:	48 89 c3             	mov    %rax,%rbx
   1a0c0:	49 89 d7             	mov    %rdx,%r15
   1a0c3:	48 8d 3d 26 c0 02 00 	lea    0x2c026(%rip),%rdi        # 460f0 <std::sys_common::backtrace::lock::LOCK>
   1a0ca:	ff 15 98 bc 02 00    	callq  *0x2bc98(%rip)        # 45d68 <pthread_mutex_unlock@GLIBC_2.2.5>
   1a0d0:	80 fb 03             	cmp    $0x3,%bl
   1a0d3:	77 05                	ja     1a0da <std::panicking::default_hook::{{closure}}+0x20a>
   1a0d5:	80 fb 02             	cmp    $0x2,%bl
   1a0d8:	75 36                	jne    1a110 <std::panicking::default_hook::{{closure}}+0x240>
   1a0da:	49 8b 3f             	mov    (%r15),%rdi
   1a0dd:	49 8b 47 08          	mov    0x8(%r15),%rax
   1a0e1:	ff 10                	callq  *(%rax)
   1a0e3:	49 8b 47 08          	mov    0x8(%r15),%rax
   1a0e7:	48 8b 70 08          	mov    0x8(%rax),%rsi
   1a0eb:	48 85 f6             	test   %rsi,%rsi
   1a0ee:	74 0d                	je     1a0fd <std::panicking::default_hook::{{closure}}+0x22d>
   1a0f0:	49 8b 3f             	mov    (%r15),%rdi
   1a0f3:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1a0f7:	ff 15 fb ba 02 00    	callq  *0x2bafb(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   1a0fd:	be 18 00 00 00       	mov    $0x18,%esi
   1a102:	ba 08 00 00 00       	mov    $0x8,%edx
   1a107:	4c 89 ff             	mov    %r15,%rdi
   1a10a:	ff 15 e8 ba 02 00    	callq  *0x2bae8(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   1a110:	48 83 c4 70          	add    $0x70,%rsp
   1a114:	5b                   	pop    %rbx
   1a115:	41 5c                	pop    %r12
   1a117:	41 5d                	pop    %r13
   1a119:	41 5e                	pop    %r14
   1a11b:	41 5f                	pop    %r15
   1a11d:	c3                   	retq   
   1a11e:	49 89 c6             	mov    %rax,%r14
   1a121:	48 8b 3b             	mov    (%rbx),%rdi
   1a124:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   1a128:	e8 a3 f8 fe ff       	callq  99d0 <alloc::alloc::box_free>
   1a12d:	48 89 df             	mov    %rbx,%rdi
   1a130:	eb 28                	jmp    1a15a <std::panicking::default_hook::{{closure}}+0x28a>
   1a132:	49 89 c6             	mov    %rax,%r14
   1a135:	49 8b 3f             	mov    (%r15),%rdi
   1a138:	49 8b 77 08          	mov    0x8(%r15),%rsi
   1a13c:	e8 8f f8 fe ff       	callq  99d0 <alloc::alloc::box_free>
   1a141:	4c 89 ff             	mov    %r15,%rdi
   1a144:	eb 14                	jmp    1a15a <std::panicking::default_hook::{{closure}}+0x28a>
   1a146:	49 89 c6             	mov    %rax,%r14
   1a149:	49 8b 3c 24          	mov    (%r12),%rdi
   1a14d:	49 8b 74 24 08       	mov    0x8(%r12),%rsi
   1a152:	e8 79 f8 fe ff       	callq  99d0 <alloc::alloc::box_free>
   1a157:	4c 89 e7             	mov    %r12,%rdi
   1a15a:	e8 91 f8 fe ff       	callq  99f0 <alloc::alloc::box_free>
   1a15f:	eb 08                	jmp    1a169 <std::panicking::default_hook::{{closure}}+0x299>
   1a161:	49 89 c6             	mov    %rax,%r14
   1a164:	e8 07 cb fe ff       	callq  6c70 <core::ptr::drop_in_place>
   1a169:	4c 89 f7             	mov    %r14,%rdi
   1a16c:	e8 df ae fe ff       	callq  5050 <_Unwind_Resume@plt>
   1a171:	0f 0b                	ud2    
   1a173:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1a17a:	00 00 00 
   1a17d:	0f 1f 00             	nopl   (%rax)

000000000001a180 <std::panicking::try::cleanup>:
   1a180:	41 56                	push   %r14
   1a182:	53                   	push   %rbx
   1a183:	48 83 ec 18          	sub    $0x18,%rsp
   1a187:	ff 15 7b bd 02 00    	callq  *0x2bd7b(%rip)        # 45f08 <_GLOBAL_OFFSET_TABLE_+0x580>
   1a18d:	48 89 c3             	mov    %rax,%rbx
   1a190:	49 89 d6             	mov    %rdx,%r14
   1a193:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1a198:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   1a19d:	48 8d 05 e4 bf 02 00 	lea    0x2bfe4(%rip),%rax        # 46188 <std::panicking::panic_count::GLOBAL_PANIC_COUNT>
   1a1a4:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   1a1a9:	66 66 66 64 48 8b 04 	data16 data16 data16 mov %fs:0x0,%rax
   1a1b0:	25 00 00 00 00 
   1a1b5:	83 b8 e0 ff ff ff 01 	cmpl   $0x1,-0x20(%rax)
   1a1bc:	75 09                	jne    1a1c7 <std::panicking::try::cleanup+0x47>
   1a1be:	48 8d 80 e8 ff ff ff 	lea    -0x18(%rax),%rax
   1a1c5:	eb 0a                	jmp    1a1d1 <std::panicking::try::cleanup+0x51>
   1a1c7:	e8 04 94 ff ff       	callq  135d0 <std::thread::local::fast::Key<T>::try_initialize>
   1a1cc:	48 85 c0             	test   %rax,%rax
   1a1cf:	74 12                	je     1a1e3 <std::panicking::try::cleanup+0x63>
   1a1d1:	48 83 00 ff          	addq   $0xffffffffffffffff,(%rax)
   1a1d5:	48 89 d8             	mov    %rbx,%rax
   1a1d8:	4c 89 f2             	mov    %r14,%rdx
   1a1db:	48 83 c4 18          	add    $0x18,%rsp
   1a1df:	5b                   	pop    %rbx
   1a1e0:	41 5e                	pop    %r14
   1a1e2:	c3                   	retq   
   1a1e3:	48 8d 3d 64 d6 01 00 	lea    0x1d664(%rip),%rdi        # 3784e <str.6+0x52e>
   1a1ea:	48 8d 0d 0f 96 02 00 	lea    0x2960f(%rip),%rcx        # 43800 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2c8>
   1a1f1:	4c 8d 05 d8 98 02 00 	lea    0x298d8(%rip),%r8        # 43ad0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x598>
   1a1f8:	48 89 e2             	mov    %rsp,%rdx
   1a1fb:	be 46 00 00 00       	mov    $0x46,%esi
   1a200:	ff 15 da b9 02 00    	callq  *0x2b9da(%rip)        # 45be0 <_GLOBAL_OFFSET_TABLE_+0x258>
   1a206:	0f 0b                	ud2    
   1a208:	48 89 c3             	mov    %rax,%rbx
   1a20b:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   1a210:	e8 1b c0 fe ff       	callq  6230 <core::ptr::drop_in_place>
   1a215:	48 89 df             	mov    %rbx,%rdi
   1a218:	e8 33 ae fe ff       	callq  5050 <_Unwind_Resume@plt>
   1a21d:	0f 0b                	ud2    
   1a21f:	90                   	nop

000000000001a220 <std::panicking::begin_panic_fmt>:
   1a220:	53                   	push   %rbx
   1a221:	48 83 ec 20          	sub    $0x20,%rsp
   1a225:	48 89 fb             	mov    %rdi,%rbx
   1a228:	48 89 f7             	mov    %rsi,%rdi
   1a22b:	ff 15 1f b8 02 00    	callq  *0x2b81f(%rip)        # 45a50 <_GLOBAL_OFFSET_TABLE_+0xc8>
   1a231:	48 8d 0d 20 d0 01 00 	lea    0x1d020(%rip),%rcx        # 37258 <_fini+0x1934>
   1a238:	48 89 0c 24          	mov    %rcx,(%rsp)
   1a23c:	48 8d 0d a5 94 02 00 	lea    0x294a5(%rip),%rcx        # 436e8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1b0>
   1a243:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   1a248:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
   1a24d:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1a252:	48 89 e7             	mov    %rsp,%rdi
   1a255:	ff 15 55 b9 02 00    	callq  *0x2b955(%rip)        # 45bb0 <_GLOBAL_OFFSET_TABLE_+0x228>
   1a25b:	0f 0b                	ud2    
   1a25d:	0f 1f 00             	nopl   (%rax)

000000000001a260 <rust_begin_unwind>:
   1a260:	41 56                	push   %r14
   1a262:	53                   	push   %rbx
   1a263:	48 83 ec 18          	sub    $0x18,%rsp
   1a267:	48 89 fb             	mov    %rdi,%rbx
   1a26a:	ff 15 78 b9 02 00    	callq  *0x2b978(%rip)        # 45be8 <_GLOBAL_OFFSET_TABLE_+0x260>
   1a270:	48 8d 35 59 a0 02 00 	lea    0x2a059(%rip),%rsi        # 442d0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xd98>
   1a277:	48 89 c7             	mov    %rax,%rdi
   1a27a:	e8 11 ec fe ff       	callq  8e90 <core::option::Option<T>::unwrap>
   1a27f:	49 89 c6             	mov    %rax,%r14
   1a282:	48 89 df             	mov    %rbx,%rdi
   1a285:	ff 15 b5 b8 02 00    	callq  *0x2b8b5(%rip)        # 45b40 <_GLOBAL_OFFSET_TABLE_+0x1b8>
   1a28b:	48 89 c7             	mov    %rax,%rdi
   1a28e:	e8 cd eb fe ff       	callq  8e60 <core::option::Option<T>::unwrap>
   1a293:	48 89 04 24          	mov    %rax,(%rsp)
   1a297:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   1a29c:	4c 89 74 24 10       	mov    %r14,0x10(%rsp)
   1a2a1:	48 89 e7             	mov    %rsp,%rdi
   1a2a4:	e8 57 e1 ff ff       	callq  18400 <std::sys_common::backtrace::__rust_end_short_backtrace>
   1a2a9:	0f 0b                	ud2    
   1a2ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001a2b0 <std::panicking::begin_panic_handler::{{closure}}>:
   1a2b0:	53                   	push   %rbx
   1a2b1:	48 83 ec 20          	sub    $0x20,%rsp
   1a2b5:	48 89 fb             	mov    %rdi,%rbx
   1a2b8:	48 8b 07             	mov    (%rdi),%rax
   1a2bb:	48 89 04 24          	mov    %rax,(%rsp)
   1a2bf:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   1a2c6:	00 00 
   1a2c8:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   1a2cc:	ff 15 6e b8 02 00    	callq  *0x2b86e(%rip)        # 45b40 <_GLOBAL_OFFSET_TABLE_+0x1b8>
   1a2d2:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
   1a2d6:	48 8d 35 23 a0 02 00 	lea    0x2a023(%rip),%rsi        # 44300 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xdc8>
   1a2dd:	48 89 e7             	mov    %rsp,%rdi
   1a2e0:	48 89 c2             	mov    %rax,%rdx
   1a2e3:	ff 15 97 b9 02 00    	callq  *0x2b997(%rip)        # 45c80 <_GLOBAL_OFFSET_TABLE_+0x2f8>
   1a2e9:	0f 0b                	ud2    
   1a2eb:	48 89 c3             	mov    %rax,%rbx
   1a2ee:	48 89 e7             	mov    %rsp,%rdi
   1a2f1:	e8 8a c9 fe ff       	callq  6c80 <core::ptr::drop_in_place>
   1a2f6:	48 89 df             	mov    %rbx,%rdi
   1a2f9:	e8 52 ad fe ff       	callq  5050 <_Unwind_Resume@plt>
   1a2fe:	0f 0b                	ud2    

000000000001a300 <<std::panicking::begin_panic_handler::PanicPayload as core::panic::BoxMeUp>::take_box>:
   1a300:	41 56                	push   %r14
   1a302:	53                   	push   %rbx
   1a303:	48 83 ec 58          	sub    $0x58,%rsp
   1a307:	48 89 fb             	mov    %rdi,%rbx
   1a30a:	4c 8b 77 08          	mov    0x8(%rdi),%r14
   1a30e:	4d 85 f6             	test   %r14,%r14
   1a311:	0f 85 94 00 00 00    	jne    1a3ab <<std::panicking::begin_panic_handler::PanicPayload as core::panic::BoxMeUp>::take_box+0xab>
   1a317:	48 8b 03             	mov    (%rbx),%rax
   1a31a:	48 c7 04 24 01 00 00 	movq   $0x1,(%rsp)
   1a321:	00 
   1a322:	0f 57 c0             	xorps  %xmm0,%xmm0
   1a325:	0f 11 44 24 08       	movups %xmm0,0x8(%rsp)
   1a32a:	48 89 e1             	mov    %rsp,%rcx
   1a32d:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   1a332:	0f 10 00             	movups (%rax),%xmm0
   1a335:	0f 10 48 10          	movups 0x10(%rax),%xmm1
   1a339:	0f 10 50 20          	movups 0x20(%rax),%xmm2
   1a33d:	0f 29 54 24 40       	movaps %xmm2,0x40(%rsp)
   1a342:	0f 29 4c 24 30       	movaps %xmm1,0x30(%rsp)
   1a347:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   1a34c:	48 8d 35 6d 92 02 00 	lea    0x2926d(%rip),%rsi        # 435c0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x88>
   1a353:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   1a358:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
   1a35d:	ff 15 95 ba 02 00    	callq  *0x2ba95(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x470>
   1a363:	4c 8d 73 08          	lea    0x8(%rbx),%r14
   1a367:	0f 10 04 24          	movups (%rsp),%xmm0
   1a36b:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   1a370:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1a375:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1a37a:	49 8b 3e             	mov    (%r14),%rdi
   1a37d:	48 85 ff             	test   %rdi,%rdi
   1a380:	74 14                	je     1a396 <<std::panicking::begin_panic_handler::PanicPayload as core::panic::BoxMeUp>::take_box+0x96>
   1a382:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   1a386:	48 85 f6             	test   %rsi,%rsi
   1a389:	74 0b                	je     1a396 <<std::panicking::begin_panic_handler::PanicPayload as core::panic::BoxMeUp>::take_box+0x96>
   1a38b:	ba 01 00 00 00       	mov    $0x1,%edx
   1a390:	ff 15 62 b8 02 00    	callq  *0x2b862(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   1a396:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   1a39b:	49 89 46 10          	mov    %rax,0x10(%r14)
   1a39f:	0f 28 44 24 20       	movaps 0x20(%rsp),%xmm0
   1a3a4:	41 0f 11 06          	movups %xmm0,(%r14)
   1a3a8:	4d 8b 36             	mov    (%r14),%r14
   1a3ab:	0f 10 43 10          	movups 0x10(%rbx),%xmm0
   1a3af:	0f 29 04 24          	movaps %xmm0,(%rsp)
   1a3b3:	48 c7 43 08 01 00 00 	movq   $0x1,0x8(%rbx)
   1a3ba:	00 
   1a3bb:	0f 57 c0             	xorps  %xmm0,%xmm0
   1a3be:	0f 11 43 10          	movups %xmm0,0x10(%rbx)
   1a3c2:	0f 28 04 24          	movaps (%rsp),%xmm0
   1a3c6:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   1a3cb:	bf 18 00 00 00       	mov    $0x18,%edi
   1a3d0:	be 08 00 00 00       	mov    $0x8,%esi
   1a3d5:	ff 15 a5 b7 02 00    	callq  *0x2b7a5(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   1a3db:	48 85 c0             	test   %rax,%rax
   1a3de:	74 1b                	je     1a3fb <<std::panicking::begin_panic_handler::PanicPayload as core::panic::BoxMeUp>::take_box+0xfb>
   1a3e0:	4c 89 30             	mov    %r14,(%rax)
   1a3e3:	0f 28 44 24 20       	movaps 0x20(%rsp),%xmm0
   1a3e8:	0f 11 40 08          	movups %xmm0,0x8(%rax)
   1a3ec:	48 8d 15 35 9f 02 00 	lea    0x29f35(%rip),%rdx        # 44328 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xdf0>
   1a3f3:	48 83 c4 58          	add    $0x58,%rsp
   1a3f7:	5b                   	pop    %rbx
   1a3f8:	41 5e                	pop    %r14
   1a3fa:	c3                   	retq   
   1a3fb:	bf 18 00 00 00       	mov    $0x18,%edi
   1a400:	be 08 00 00 00       	mov    $0x8,%esi
   1a405:	ff 15 15 b7 02 00    	callq  *0x2b715(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   1a40b:	0f 0b                	ud2    
   1a40d:	48 89 c3             	mov    %rax,%rbx
   1a410:	48 89 e7             	mov    %rsp,%rdi
   1a413:	e8 18 c4 fe ff       	callq  6830 <core::ptr::drop_in_place>
   1a418:	48 89 df             	mov    %rbx,%rdi
   1a41b:	e8 30 ac fe ff       	callq  5050 <_Unwind_Resume@plt>
   1a420:	0f 0b                	ud2    
   1a422:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1a429:	00 00 00 
   1a42c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001a430 <<std::panicking::begin_panic_handler::PanicPayload as core::panic::BoxMeUp>::get>:
   1a430:	41 56                	push   %r14
   1a432:	53                   	push   %rbx
   1a433:	48 83 ec 58          	sub    $0x58,%rsp
   1a437:	4c 8d 77 08          	lea    0x8(%rdi),%r14
   1a43b:	48 83 7f 08 00       	cmpq   $0x0,0x8(%rdi)
   1a440:	0f 85 90 00 00 00    	jne    1a4d6 <<std::panicking::begin_panic_handler::PanicPayload as core::panic::BoxMeUp>::get+0xa6>
   1a446:	48 89 fb             	mov    %rdi,%rbx
   1a449:	48 8b 07             	mov    (%rdi),%rax
   1a44c:	48 c7 04 24 01 00 00 	movq   $0x1,(%rsp)
   1a453:	00 
   1a454:	0f 57 c0             	xorps  %xmm0,%xmm0
   1a457:	0f 11 44 24 08       	movups %xmm0,0x8(%rsp)
   1a45c:	48 89 e1             	mov    %rsp,%rcx
   1a45f:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   1a464:	0f 10 00             	movups (%rax),%xmm0
   1a467:	0f 10 48 10          	movups 0x10(%rax),%xmm1
   1a46b:	0f 10 50 20          	movups 0x20(%rax),%xmm2
   1a46f:	0f 29 54 24 40       	movaps %xmm2,0x40(%rsp)
   1a474:	0f 29 4c 24 30       	movaps %xmm1,0x30(%rsp)
   1a479:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   1a47e:	48 8d 35 3b 91 02 00 	lea    0x2913b(%rip),%rsi        # 435c0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x88>
   1a485:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   1a48a:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
   1a48f:	ff 15 63 b9 02 00    	callq  *0x2b963(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x470>
   1a495:	0f 10 04 24          	movups (%rsp),%xmm0
   1a499:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   1a49e:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1a4a3:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1a4a8:	49 8b 3e             	mov    (%r14),%rdi
   1a4ab:	48 85 ff             	test   %rdi,%rdi
   1a4ae:	74 14                	je     1a4c4 <<std::panicking::begin_panic_handler::PanicPayload as core::panic::BoxMeUp>::get+0x94>
   1a4b0:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   1a4b4:	48 85 f6             	test   %rsi,%rsi
   1a4b7:	74 0b                	je     1a4c4 <<std::panicking::begin_panic_handler::PanicPayload as core::panic::BoxMeUp>::get+0x94>
   1a4b9:	ba 01 00 00 00       	mov    $0x1,%edx
   1a4be:	ff 15 34 b7 02 00    	callq  *0x2b734(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   1a4c4:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   1a4c9:	49 89 46 10          	mov    %rax,0x10(%r14)
   1a4cd:	0f 28 44 24 20       	movaps 0x20(%rsp),%xmm0
   1a4d2:	41 0f 11 06          	movups %xmm0,(%r14)
   1a4d6:	48 8d 15 4b 9e 02 00 	lea    0x29e4b(%rip),%rdx        # 44328 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xdf0>
   1a4dd:	4c 89 f0             	mov    %r14,%rax
   1a4e0:	48 83 c4 58          	add    $0x58,%rsp
   1a4e4:	5b                   	pop    %rbx
   1a4e5:	41 5e                	pop    %r14
   1a4e7:	c3                   	retq   
   1a4e8:	48 89 c3             	mov    %rax,%rbx
   1a4eb:	48 89 e7             	mov    %rsp,%rdi
   1a4ee:	e8 3d c3 fe ff       	callq  6830 <core::ptr::drop_in_place>
   1a4f3:	48 89 df             	mov    %rbx,%rdi
   1a4f6:	e8 55 ab fe ff       	callq  5050 <_Unwind_Resume@plt>
   1a4fb:	0f 0b                	ud2    
   1a4fd:	0f 1f 00             	nopl   (%rax)

000000000001a500 <std::panicking::begin_panic>:
   1a500:	41 56                	push   %r14
   1a502:	53                   	push   %rbx
   1a503:	48 83 ec 18          	sub    $0x18,%rsp
   1a507:	49 89 f6             	mov    %rsi,%r14
   1a50a:	48 89 fb             	mov    %rdi,%rbx
   1a50d:	48 89 d7             	mov    %rdx,%rdi
   1a510:	ff 15 3a b5 02 00    	callq  *0x2b53a(%rip)        # 45a50 <_GLOBAL_OFFSET_TABLE_+0xc8>
   1a516:	48 89 1c 24          	mov    %rbx,(%rsp)
   1a51a:	4c 89 74 24 08       	mov    %r14,0x8(%rsp)
   1a51f:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1a524:	48 89 e7             	mov    %rsp,%rdi
   1a527:	e8 b4 de ff ff       	callq  183e0 <std::sys_common::backtrace::__rust_end_short_backtrace>
   1a52c:	0f 0b                	ud2    
   1a52e:	66 90                	xchg   %ax,%ax

000000000001a530 <std::panicking::begin_panic::{{closure}}>:
   1a530:	48 83 ec 18          	sub    $0x18,%rsp
   1a534:	0f 10 07             	movups (%rdi),%xmm0
   1a537:	0f 11 44 24 08       	movups %xmm0,0x8(%rsp)
   1a53c:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
   1a540:	48 8d 35 01 9e 02 00 	lea    0x29e01(%rip),%rsi        # 44348 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xe10>
   1a547:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   1a54c:	31 d2                	xor    %edx,%edx
   1a54e:	ff 15 2c b7 02 00    	callq  *0x2b72c(%rip)        # 45c80 <_GLOBAL_OFFSET_TABLE_+0x2f8>
   1a554:	0f 0b                	ud2    
   1a556:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1a55d:	00 00 00 

000000000001a560 <<std::panicking::begin_panic::PanicPayload<A> as core::panic::BoxMeUp>::take_box>:
   1a560:	41 56                	push   %r14
   1a562:	53                   	push   %rbx
   1a563:	50                   	push   %rax
   1a564:	48 8b 1f             	mov    (%rdi),%rbx
   1a567:	4c 8b 77 08          	mov    0x8(%rdi),%r14
   1a56b:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   1a572:	48 85 db             	test   %rbx,%rbx
   1a575:	74 2b                	je     1a5a2 <<std::panicking::begin_panic::PanicPayload<A> as core::panic::BoxMeUp>::take_box+0x42>
   1a577:	bf 10 00 00 00       	mov    $0x10,%edi
   1a57c:	be 08 00 00 00       	mov    $0x8,%esi
   1a581:	ff 15 f9 b5 02 00    	callq  *0x2b5f9(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   1a587:	48 85 c0             	test   %rax,%rax
   1a58a:	74 1e                	je     1a5aa <<std::panicking::begin_panic::PanicPayload<A> as core::panic::BoxMeUp>::take_box+0x4a>
   1a58c:	48 89 18             	mov    %rbx,(%rax)
   1a58f:	4c 89 70 08          	mov    %r14,0x8(%rax)
   1a593:	48 8d 15 d6 9d 02 00 	lea    0x29dd6(%rip),%rdx        # 44370 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xe38>
   1a59a:	48 83 c4 08          	add    $0x8,%rsp
   1a59e:	5b                   	pop    %rbx
   1a59f:	41 5e                	pop    %r14
   1a5a1:	c3                   	retq   
   1a5a2:	ff 15 18 b6 02 00    	callq  *0x2b618(%rip)        # 45bc0 <_GLOBAL_OFFSET_TABLE_+0x238>
   1a5a8:	0f 0b                	ud2    
   1a5aa:	bf 10 00 00 00       	mov    $0x10,%edi
   1a5af:	be 08 00 00 00       	mov    $0x8,%esi
   1a5b4:	ff 15 66 b5 02 00    	callq  *0x2b566(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   1a5ba:	0f 0b                	ud2    
   1a5bc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001a5c0 <<std::panicking::begin_panic::PanicPayload<A> as core::panic::BoxMeUp>::get>:
   1a5c0:	50                   	push   %rax
   1a5c1:	48 83 3f 00          	cmpq   $0x0,(%rdi)
   1a5c5:	74 0c                	je     1a5d3 <<std::panicking::begin_panic::PanicPayload<A> as core::panic::BoxMeUp>::get+0x13>
   1a5c7:	48 89 f8             	mov    %rdi,%rax
   1a5ca:	48 8d 15 9f 9d 02 00 	lea    0x29d9f(%rip),%rdx        # 44370 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xe38>
   1a5d1:	59                   	pop    %rcx
   1a5d2:	c3                   	retq   
   1a5d3:	ff 15 e7 b5 02 00    	callq  *0x2b5e7(%rip)        # 45bc0 <_GLOBAL_OFFSET_TABLE_+0x238>
   1a5d9:	0f 0b                	ud2    
   1a5db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001a5e0 <std::panicking::rust_panic_with_hook>:
   1a5e0:	55                   	push   %rbp
   1a5e1:	41 57                	push   %r15
   1a5e3:	41 56                	push   %r14
   1a5e5:	41 55                	push   %r13
   1a5e7:	41 54                	push   %r12
   1a5e9:	53                   	push   %rbx
   1a5ea:	48 83 ec 38          	sub    $0x38,%rsp
   1a5ee:	49 89 cc             	mov    %rcx,%r12
   1a5f1:	49 89 d5             	mov    %rdx,%r13
   1a5f4:	49 89 f6             	mov    %rsi,%r14
   1a5f7:	49 89 ff             	mov    %rdi,%r15
   1a5fa:	48 8d 05 87 bb 02 00 	lea    0x2bb87(%rip),%rax        # 46188 <std::panicking::panic_count::GLOBAL_PANIC_COUNT>
   1a601:	f0 48 83 00 01       	lock addq $0x1,(%rax)
   1a606:	66 66 66 64 48 8b 04 	data16 data16 data16 mov %fs:0x0,%rax
   1a60d:	25 00 00 00 00 
   1a612:	83 b8 e0 ff ff ff 01 	cmpl   $0x1,-0x20(%rax)
   1a619:	75 09                	jne    1a624 <std::panicking::rust_panic_with_hook+0x44>
   1a61b:	48 8d 80 e8 ff ff ff 	lea    -0x18(%rax),%rax
   1a622:	eb 31                	jmp    1a655 <std::panicking::rust_panic_with_hook+0x75>
   1a624:	e8 a7 8f ff ff       	callq  135d0 <std::thread::local::fast::Key<T>::try_initialize>
   1a629:	48 85 c0             	test   %rax,%rax
   1a62c:	75 27                	jne    1a655 <std::panicking::rust_panic_with_hook+0x75>
   1a62e:	48 8d 3d 19 d2 01 00 	lea    0x1d219(%rip),%rdi        # 3784e <str.6+0x52e>
   1a635:	48 8d 0d c4 91 02 00 	lea    0x291c4(%rip),%rcx        # 43800 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2c8>
   1a63c:	4c 8d 05 8d 94 02 00 	lea    0x2948d(%rip),%r8        # 43ad0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x598>
   1a643:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   1a648:	be 46 00 00 00       	mov    $0x46,%esi
   1a64d:	ff 15 8d b5 02 00    	callq  *0x2b58d(%rip)        # 45be0 <_GLOBAL_OFFSET_TABLE_+0x258>
   1a653:	0f 0b                	ud2    
   1a655:	48 8b 18             	mov    (%rax),%rbx
   1a658:	48 83 c3 01          	add    $0x1,%rbx
   1a65c:	48 89 18             	mov    %rbx,(%rax)
   1a65f:	48 83 fb 02          	cmp    $0x2,%rbx
   1a663:	76 41                	jbe    1a6a6 <std::panicking::rust_panic_with_hook+0xc6>
   1a665:	48 8d 05 24 9d 02 00 	lea    0x29d24(%rip),%rax        # 44390 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xe58>
   1a66c:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1a671:	48 c7 44 24 10 01 00 	movq   $0x1,0x10(%rsp)
   1a678:	00 00 
   1a67a:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   1a681:	00 00 
   1a683:	48 8d 05 ce cb 01 00 	lea    0x1cbce(%rip),%rax        # 37258 <_fini+0x1934>
   1a68a:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1a68f:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   1a696:	00 00 
   1a698:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   1a69d:	e8 0e ef ff ff       	callq  195b0 <std::sys_common::util::dumb_print>
   1a6a2:	0f 0b                	ud2    
   1a6a4:	0f 0b                	ud2    
   1a6a6:	48 8d 2d ab cb 01 00 	lea    0x1cbab(%rip),%rbp        # 37258 <_fini+0x1934>
   1a6ad:	48 89 6c 24 08       	mov    %rbp,0x8(%rsp)
   1a6b2:	48 8d 05 2f 90 02 00 	lea    0x2902f(%rip),%rax        # 436e8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1b0>
   1a6b9:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1a6be:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   1a6c3:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
   1a6c8:	48 8d 3d 61 ba 02 00 	lea    0x2ba61(%rip),%rdi        # 46130 <std::panicking::HOOK_LOCK>
   1a6cf:	ff 15 c3 b5 02 00    	callq  *0x2b5c3(%rip)        # 45c98 <pthread_rwlock_rdlock@GLIBC_2.2.5>
   1a6d5:	85 c0                	test   %eax,%eax
   1a6d7:	74 28                	je     1a701 <std::panicking::rust_panic_with_hook+0x121>
   1a6d9:	83 f8 23             	cmp    $0x23,%eax
   1a6dc:	0f 84 e3 00 00 00    	je     1a7c5 <std::panicking::rust_panic_with_hook+0x1e5>
   1a6e2:	83 f8 0b             	cmp    $0xb,%eax
   1a6e5:	75 27                	jne    1a70e <std::panicking::rust_panic_with_hook+0x12e>
   1a6e7:	48 8d 3d c6 dc 01 00 	lea    0x1dcc6(%rip),%rdi        # 383b4 <str.6+0x1094>
   1a6ee:	48 8d 15 a3 9e 02 00 	lea    0x29ea3(%rip),%rdx        # 44598 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1060>
   1a6f5:	be 24 00 00 00       	mov    $0x24,%esi
   1a6fa:	e8 01 fe ff ff       	callq  1a500 <std::panicking::begin_panic>
   1a6ff:	0f 0b                	ud2    
   1a701:	80 3d 68 ba 02 00 00 	cmpb   $0x0,0x2ba68(%rip)        # 46170 <std::panicking::HOOK_LOCK+0x40>
   1a708:	0f 85 aa 00 00 00    	jne    1a7b8 <std::panicking::rust_panic_with_hook+0x1d8>
   1a70e:	49 89 ed             	mov    %rbp,%r13
   1a711:	f0 48 83 05 4e ba 02 	lock addq $0x1,0x2ba4e(%rip)        # 46168 <std::panicking::HOOK_LOCK+0x38>
   1a718:	00 01 
   1a71a:	48 8b 2d 5f ba 02 00 	mov    0x2ba5f(%rip),%rbp        # 46180 <std::panicking::HOOK+0x8>
   1a721:	48 85 ed             	test   %rbp,%rbp
   1a724:	75 1d                	jne    1a743 <std::panicking::rust_panic_with_hook+0x163>
   1a726:	4c 89 ff             	mov    %r15,%rdi
   1a729:	41 ff 56 20          	callq  *0x20(%r14)
   1a72d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1a732:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   1a737:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   1a73c:	e8 5f f3 ff ff       	callq  19aa0 <std::panicking::default_hook>
   1a741:	eb 23                	jmp    1a766 <std::panicking::rust_panic_with_hook+0x186>
   1a743:	4c 8b 25 2e ba 02 00 	mov    0x2ba2e(%rip),%r12        # 46178 <std::panicking::HOOK>
   1a74a:	4c 89 ff             	mov    %r15,%rdi
   1a74d:	41 ff 56 20          	callq  *0x20(%r14)
   1a751:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1a756:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   1a75b:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   1a760:	4c 89 e7             	mov    %r12,%rdi
   1a763:	ff 55 18             	callq  *0x18(%rbp)
   1a766:	f0 48 83 2d f9 b9 02 	lock subq $0x1,0x2b9f9(%rip)        # 46168 <std::panicking::HOOK_LOCK+0x38>
   1a76d:	00 01 
   1a76f:	48 8d 3d ba b9 02 00 	lea    0x2b9ba(%rip),%rdi        # 46130 <std::panicking::HOOK_LOCK>
   1a776:	ff 15 44 b6 02 00    	callq  *0x2b644(%rip)        # 45dc0 <pthread_rwlock_unlock@GLIBC_2.2.5>
   1a77c:	48 83 fb 01          	cmp    $0x1,%rbx
   1a780:	76 28                	jbe    1a7aa <std::panicking::rust_panic_with_hook+0x1ca>
   1a782:	48 8d 05 17 9c 02 00 	lea    0x29c17(%rip),%rax        # 443a0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xe68>
   1a789:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1a78e:	48 c7 44 24 10 01 00 	movq   $0x1,0x10(%rsp)
   1a795:	00 00 
   1a797:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   1a79e:	00 00 
   1a7a0:	4c 89 6c 24 28       	mov    %r13,0x28(%rsp)
   1a7a5:	e9 e5 fe ff ff       	jmpq   1a68f <std::panicking::rust_panic_with_hook+0xaf>
   1a7aa:	4c 89 ff             	mov    %r15,%rdi
   1a7ad:	4c 89 f6             	mov    %r14,%rsi
   1a7b0:	ff 15 3a b2 02 00    	callq  *0x2b23a(%rip)        # 459f0 <_GLOBAL_OFFSET_TABLE_+0x68>
   1a7b6:	0f 0b                	ud2    
   1a7b8:	48 8d 3d 71 b9 02 00 	lea    0x2b971(%rip),%rdi        # 46130 <std::panicking::HOOK_LOCK>
   1a7bf:	ff 15 fb b5 02 00    	callq  *0x2b5fb(%rip)        # 45dc0 <pthread_rwlock_unlock@GLIBC_2.2.5>
   1a7c5:	48 8d 3d 2e dc 01 00 	lea    0x1dc2e(%rip),%rdi        # 383fa <str.6+0x10da>
   1a7cc:	48 8d 15 dd 9d 02 00 	lea    0x29ddd(%rip),%rdx        # 445b0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1078>
   1a7d3:	be 29 00 00 00       	mov    $0x29,%esi
   1a7d8:	e8 23 fd ff ff       	callq  1a500 <std::panicking::begin_panic>
   1a7dd:	0f 0b                	ud2    
   1a7df:	90                   	nop

000000000001a7e0 <rust_panic>:
   1a7e0:	48 83 ec 58          	sub    $0x58,%rsp
   1a7e4:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   1a7e9:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   1a7ee:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   1a7f3:	ff 15 f7 b3 02 00    	callq  *0x2b3f7(%rip)        # 45bf0 <_GLOBAL_OFFSET_TABLE_+0x268>
   1a7f9:	89 44 24 04          	mov    %eax,0x4(%rsp)
   1a7fd:	48 8d 44 24 04       	lea    0x4(%rsp),%rax
   1a802:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1a807:	48 8d 05 22 a4 01 00 	lea    0x1a422(%rip),%rax        # 34c30 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt>
   1a80e:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1a813:	48 8d 05 96 9b 02 00 	lea    0x29b96(%rip),%rax        # 443b0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xe78>
   1a81a:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1a81f:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
   1a826:	00 00 
   1a828:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   1a82f:	00 00 
   1a831:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
   1a836:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1a83b:	48 c7 44 24 50 01 00 	movq   $0x1,0x50(%rsp)
   1a842:	00 00 
   1a844:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
   1a849:	e8 12 ee ff ff       	callq  19660 <std::sys_common::util::abort>
   1a84e:	0f 0b                	ud2    

000000000001a850 <std::rt::lang_start_internal>:
   1a850:	55                   	push   %rbp
   1a851:	41 57                	push   %r15
   1a853:	41 56                	push   %r14
   1a855:	41 55                	push   %r13
   1a857:	41 54                	push   %r12
   1a859:	53                   	push   %rbx
   1a85a:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
   1a861:	49 89 f6             	mov    %rsi,%r14
   1a864:	49 89 ff             	mov    %rdi,%r15
   1a867:	48 c7 44 24 50 00 00 	movq   $0x0,0x50(%rsp)
   1a86e:	00 00 
   1a870:	0f 28 05 79 b9 01 00 	movaps 0x1b979(%rip),%xmm0        # 361f0 <_fini+0x8cc>
   1a877:	0f 11 44 24 58       	movups %xmm0,0x58(%rsp)
   1a87c:	4c 8d 64 24 50       	lea    0x50(%rsp),%r12
   1a881:	48 8b 2d b8 b5 02 00 	mov    0x2b5b8(%rip),%rbp        # 45e40 <poll@GLIBC_2.2.5>
   1a888:	48 8b 1d 89 b1 02 00 	mov    0x2b189(%rip),%rbx        # 45a18 <__errno_location@GLIBC_2.2.5>
   1a88f:	90                   	nop
   1a890:	be 03 00 00 00       	mov    $0x3,%esi
   1a895:	4c 89 e7             	mov    %r12,%rdi
   1a898:	31 d2                	xor    %edx,%edx
   1a89a:	ff d5                	callq  *%rbp
   1a89c:	83 f8 ff             	cmp    $0xffffffff,%eax
   1a89f:	75 0f                	jne    1a8b0 <std::rt::lang_start_internal+0x60>
   1a8a1:	ff d3                	callq  *%rbx
   1a8a3:	83 38 04             	cmpl   $0x4,(%rax)
   1a8a6:	74 e8                	je     1a890 <std::rt::lang_start_internal+0x40>
   1a8a8:	ff 15 5a b1 02 00    	callq  *0x2b15a(%rip)        # 45a08 <abort@GLIBC_2.2.5>
   1a8ae:	0f 0b                	ud2    
   1a8b0:	f6 44 24 56 20       	testb  $0x20,0x56(%rsp)
   1a8b5:	74 1b                	je     1a8d2 <std::rt::lang_start_internal+0x82>
   1a8b7:	48 8d 3d ec da 01 00 	lea    0x1daec(%rip),%rdi        # 383aa <str.6+0x108a>
   1a8be:	be 02 00 00 00       	mov    $0x2,%esi
   1a8c3:	31 d2                	xor    %edx,%edx
   1a8c5:	31 c0                	xor    %eax,%eax
   1a8c7:	ff 15 fb b5 02 00    	callq  *0x2b5fb(%rip)        # 45ec8 <open@GLIBC_2.2.5>
   1a8cd:	83 f8 ff             	cmp    $0xffffffff,%eax
   1a8d0:	74 d6                	je     1a8a8 <std::rt::lang_start_internal+0x58>
   1a8d2:	f6 44 24 5e 20       	testb  $0x20,0x5e(%rsp)
   1a8d7:	74 1b                	je     1a8f4 <std::rt::lang_start_internal+0xa4>
   1a8d9:	48 8d 3d ca da 01 00 	lea    0x1daca(%rip),%rdi        # 383aa <str.6+0x108a>
   1a8e0:	be 02 00 00 00       	mov    $0x2,%esi
   1a8e5:	31 d2                	xor    %edx,%edx
   1a8e7:	31 c0                	xor    %eax,%eax
   1a8e9:	ff 15 d9 b5 02 00    	callq  *0x2b5d9(%rip)        # 45ec8 <open@GLIBC_2.2.5>
   1a8ef:	83 f8 ff             	cmp    $0xffffffff,%eax
   1a8f2:	74 b4                	je     1a8a8 <std::rt::lang_start_internal+0x58>
   1a8f4:	f6 44 24 66 20       	testb  $0x20,0x66(%rsp)
   1a8f9:	74 1b                	je     1a916 <std::rt::lang_start_internal+0xc6>
   1a8fb:	48 8d 3d a8 da 01 00 	lea    0x1daa8(%rip),%rdi        # 383aa <str.6+0x108a>
   1a902:	be 02 00 00 00       	mov    $0x2,%esi
   1a907:	31 d2                	xor    %edx,%edx
   1a909:	31 c0                	xor    %eax,%eax
   1a90b:	ff 15 b7 b5 02 00    	callq  *0x2b5b7(%rip)        # 45ec8 <open@GLIBC_2.2.5>
   1a911:	83 f8 ff             	cmp    $0xffffffff,%eax
   1a914:	74 92                	je     1a8a8 <std::rt::lang_start_internal+0x58>
   1a916:	be 01 00 00 00       	mov    $0x1,%esi
   1a91b:	bf 0d 00 00 00       	mov    $0xd,%edi
   1a920:	ff 15 8a b3 02 00    	callq  *0x2b38a(%rip)        # 45cb0 <signal@GLIBC_2.2.5>
   1a926:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1a92a:	0f 84 cc 02 00 00    	je     1abfc <std::rt::lang_start_internal+0x3ac>
   1a930:	bf 1e 00 00 00       	mov    $0x1e,%edi
   1a935:	ff 15 ad b5 02 00    	callq  *0x2b5ad(%rip)        # 45ee8 <sysconf@GLIBC_2.2.5>
   1a93b:	48 89 05 b6 b8 02 00 	mov    %rax,0x2b8b6(%rip)        # 461f8 <std::sys::unix::thread::guard::PAGE_SIZE>
   1a942:	48 8b 2d af b8 02 00 	mov    0x2b8af(%rip),%rbp        # 461f8 <std::sys::unix::thread::guard::PAGE_SIZE>
   1a949:	48 85 ed             	test   %rbp,%rbp
   1a94c:	0f 84 c4 02 00 00    	je     1ac16 <std::rt::lang_start_internal+0x3c6>
   1a952:	49 89 c4             	mov    %rax,%r12
   1a955:	0f 57 c0             	xorps  %xmm0,%xmm0
   1a958:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
   1a95d:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
   1a962:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   1a967:	48 c7 84 24 80 00 00 	movq   $0x0,0x80(%rsp)
   1a96e:	00 00 00 00 00 
   1a973:	ff 15 17 b5 02 00    	callq  *0x2b517(%rip)        # 45e90 <pthread_self@GLIBC_2.2.5>
   1a979:	48 8d 74 24 50       	lea    0x50(%rsp),%rsi
   1a97e:	48 89 c7             	mov    %rax,%rdi
   1a981:	ff 15 99 b0 02 00    	callq  *0x2b099(%rip)        # 45a20 <pthread_getattr_np@GLIBC_2.2.5>
   1a987:	85 c0                	test   %eax,%eax
   1a989:	74 08                	je     1a993 <std::rt::lang_start_internal+0x143>
   1a98b:	45 31 e4             	xor    %r12d,%r12d
   1a98e:	e9 87 00 00 00       	jmpq   1aa1a <std::rt::lang_start_internal+0x1ca>
   1a993:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   1a99a:	00 00 
   1a99c:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   1a9a3:	00 00 
   1a9a5:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
   1a9aa:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
   1a9af:	4c 8d 6c 24 28       	lea    0x28(%rsp),%r13
   1a9b4:	4c 89 ea             	mov    %r13,%rdx
   1a9b7:	ff 15 93 b2 02 00    	callq  *0x2b293(%rip)        # 45c50 <pthread_attr_getstack@GLIBC_2.2.5>
   1a9bd:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
   1a9c1:	85 c0                	test   %eax,%eax
   1a9c3:	0f 85 79 02 00 00    	jne    1ac42 <std::rt::lang_start_internal+0x3f2>
   1a9c9:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
   1a9ce:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
   1a9d3:	ff 15 37 b5 02 00    	callq  *0x2b537(%rip)        # 45f10 <pthread_attr_destroy@GLIBC_2.2.5>
   1a9d9:	89 44 24 28          	mov    %eax,0x28(%rsp)
   1a9dd:	85 c0                	test   %eax,%eax
   1a9df:	0f 85 e1 02 00 00    	jne    1acc6 <std::rt::lang_start_internal+0x476>
   1a9e5:	48 89 d8             	mov    %rbx,%rax
   1a9e8:	48 09 e8             	or     %rbp,%rax
   1a9eb:	48 c1 e8 20          	shr    $0x20,%rax
   1a9ef:	74 0a                	je     1a9fb <std::rt::lang_start_internal+0x1ab>
   1a9f1:	48 89 d8             	mov    %rbx,%rax
   1a9f4:	31 d2                	xor    %edx,%edx
   1a9f6:	48 f7 f5             	div    %rbp
   1a9f9:	eb 06                	jmp    1aa01 <std::rt::lang_start_internal+0x1b1>
   1a9fb:	89 d8                	mov    %ebx,%eax
   1a9fd:	31 d2                	xor    %edx,%edx
   1a9ff:	f7 f5                	div    %ebp
   1aa01:	48 01 dd             	add    %rbx,%rbp
   1aa04:	48 29 d5             	sub    %rdx,%rbp
   1aa07:	48 85 d2             	test   %rdx,%rdx
   1aa0a:	48 0f 44 eb          	cmove  %rbx,%rbp
   1aa0e:	48 89 eb             	mov    %rbp,%rbx
   1aa11:	4c 29 e3             	sub    %r12,%rbx
   1aa14:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   1aa1a:	0f 57 c0             	xorps  %xmm0,%xmm0
   1aa1d:	0f 29 84 24 d0 00 00 	movaps %xmm0,0xd0(%rsp)
   1aa24:	00 
   1aa25:	0f 29 84 24 c0 00 00 	movaps %xmm0,0xc0(%rsp)
   1aa2c:	00 
   1aa2d:	0f 29 84 24 b0 00 00 	movaps %xmm0,0xb0(%rsp)
   1aa34:	00 
   1aa35:	0f 29 84 24 a0 00 00 	movaps %xmm0,0xa0(%rsp)
   1aa3c:	00 
   1aa3d:	0f 29 84 24 90 00 00 	movaps %xmm0,0x90(%rsp)
   1aa44:	00 
   1aa45:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
   1aa4c:	00 
   1aa4d:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
   1aa52:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
   1aa57:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   1aa5c:	48 c7 84 24 e0 00 00 	movq   $0x0,0xe0(%rsp)
   1aa63:	00 00 00 00 00 
   1aa68:	48 8d 54 24 50       	lea    0x50(%rsp),%rdx
   1aa6d:	bf 0b 00 00 00       	mov    $0xb,%edi
   1aa72:	31 f6                	xor    %esi,%esi
   1aa74:	ff 15 ee af 02 00    	callq  *0x2afee(%rip)        # 45a68 <sigaction@GLIBC_2.2.5>
   1aa7a:	48 83 7c 24 50 00    	cmpq   $0x0,0x50(%rsp)
   1aa80:	75 30                	jne    1aab2 <std::rt::lang_start_internal+0x262>
   1aa82:	c7 84 24 d8 00 00 00 	movl   $0x8000004,0xd8(%rsp)
   1aa89:	04 00 00 08 
   1aa8d:	48 8d 05 3c 13 00 00 	lea    0x133c(%rip),%rax        # 1bdd0 <std::sys::unix::stack_overflow::imp::signal_handler>
   1aa94:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   1aa99:	48 8d 74 24 50       	lea    0x50(%rsp),%rsi
   1aa9e:	bf 0b 00 00 00       	mov    $0xb,%edi
   1aaa3:	31 d2                	xor    %edx,%edx
   1aaa5:	ff 15 bd af 02 00    	callq  *0x2afbd(%rip)        # 45a68 <sigaction@GLIBC_2.2.5>
   1aaab:	c6 05 7f b7 02 00 01 	movb   $0x1,0x2b77f(%rip)        # 46231 <_ZN3std3sys4unix14stack_overflow3imp13NEED_ALTSTACK17hb61d576fcc5bc78fE.0.0>
   1aab2:	48 8d 54 24 50       	lea    0x50(%rsp),%rdx
   1aab7:	bf 07 00 00 00       	mov    $0x7,%edi
   1aabc:	31 f6                	xor    %esi,%esi
   1aabe:	ff 15 a4 af 02 00    	callq  *0x2afa4(%rip)        # 45a68 <sigaction@GLIBC_2.2.5>
   1aac4:	48 83 7c 24 50 00    	cmpq   $0x0,0x50(%rsp)
   1aaca:	75 30                	jne    1aafc <std::rt::lang_start_internal+0x2ac>
   1aacc:	c7 84 24 d8 00 00 00 	movl   $0x8000004,0xd8(%rsp)
   1aad3:	04 00 00 08 
   1aad7:	48 8d 05 f2 12 00 00 	lea    0x12f2(%rip),%rax        # 1bdd0 <std::sys::unix::stack_overflow::imp::signal_handler>
   1aade:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   1aae3:	48 8d 74 24 50       	lea    0x50(%rsp),%rsi
   1aae8:	bf 07 00 00 00       	mov    $0x7,%edi
   1aaed:	31 d2                	xor    %edx,%edx
   1aaef:	ff 15 73 af 02 00    	callq  *0x2af73(%rip)        # 45a68 <sigaction@GLIBC_2.2.5>
   1aaf5:	c6 05 35 b7 02 00 01 	movb   $0x1,0x2b735(%rip)        # 46231 <_ZN3std3sys4unix14stack_overflow3imp13NEED_ALTSTACK17hb61d576fcc5bc78fE.0.0>
   1aafc:	e8 5f 15 00 00       	callq  1c060 <std::sys::unix::stack_overflow::imp::make_handler>
   1ab01:	48 89 05 e8 b6 02 00 	mov    %rax,0x2b6e8(%rip)        # 461f0 <std::sys::unix::stack_overflow::imp::MAIN_ALTSTACK>
   1ab08:	bf 04 00 00 00       	mov    $0x4,%edi
   1ab0d:	be 01 00 00 00       	mov    $0x1,%esi
   1ab12:	ff 15 68 b0 02 00    	callq  *0x2b068(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   1ab18:	48 85 c0             	test   %rax,%rax
   1ab1b:	0f 84 0f 01 00 00    	je     1ac30 <std::rt::lang_start_internal+0x3e0>
   1ab21:	c7 00 6d 61 69 6e    	movl   $0x6e69616d,(%rax)
   1ab27:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   1ab2c:	0f 28 05 7d b5 01 00 	movaps 0x1b57d(%rip),%xmm0        # 360b0 <_fini+0x78c>
   1ab33:	0f 11 44 24 58       	movups %xmm0,0x58(%rsp)
   1ab38:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
   1ab3d:	ff 15 3d b4 02 00    	callq  *0x2b43d(%rip)        # 45f80 <_GLOBAL_OFFSET_TABLE_+0x5f8>
   1ab43:	4c 89 64 24 50       	mov    %r12,0x50(%rsp)
   1ab48:	48 89 5c 24 58       	mov    %rbx,0x58(%rsp)
   1ab4d:	48 89 6c 24 60       	mov    %rbp,0x60(%rsp)
   1ab52:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
   1ab57:	48 89 c6             	mov    %rax,%rsi
   1ab5a:	ff 15 b8 b0 02 00    	callq  *0x2b0b8(%rip)        # 45c18 <_GLOBAL_OFFSET_TABLE_+0x290>
   1ab60:	4c 89 ff             	mov    %r15,%rdi
   1ab63:	41 ff 56 18          	callq  *0x18(%r14)
   1ab67:	89 44 24 54          	mov    %eax,0x54(%rsp)
   1ab6b:	c7 44 24 50 00 00 00 	movl   $0x0,0x50(%rsp)
   1ab72:	00 
   1ab73:	48 8b 05 a6 b5 02 00 	mov    0x2b5a6(%rip),%rax        # 46120 <std::sys_common::cleanup::CLEANUP>
   1ab7a:	48 83 f8 03          	cmp    $0x3,%rax
   1ab7e:	74 30                	je     1abb0 <std::rt::lang_start_internal+0x360>
   1ab80:	c6 44 24 30 01       	movb   $0x1,0x30(%rsp)
   1ab85:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
   1ab8a:	48 89 84 24 e8 00 00 	mov    %rax,0xe8(%rsp)
   1ab91:	00 
   1ab92:	48 8d 3d 87 b5 02 00 	lea    0x2b587(%rip),%rdi        # 46120 <std::sys_common::cleanup::CLEANUP>
   1ab99:	48 8d 0d 50 93 02 00 	lea    0x29350(%rip),%rcx        # 43ef0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x9b8>
   1aba0:	48 8d 94 24 e8 00 00 	lea    0xe8(%rsp),%rdx
   1aba7:	00 
   1aba8:	31 f6                	xor    %esi,%esi
   1abaa:	ff 15 30 b3 02 00    	callq  *0x2b330(%rip)        # 45ee0 <_GLOBAL_OFFSET_TABLE_+0x558>
   1abb0:	83 7c 24 50 01       	cmpl   $0x1,0x50(%rsp)
   1abb5:	75 2c                	jne    1abe3 <std::rt::lang_start_internal+0x393>
   1abb7:	4c 8b 7c 24 58       	mov    0x58(%rsp),%r15
   1abbc:	48 8b 5c 24 60       	mov    0x60(%rsp),%rbx
   1abc1:	4c 89 ff             	mov    %r15,%rdi
   1abc4:	ff 13                	callq  *(%rbx)
   1abc6:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   1abca:	bd 65 00 00 00       	mov    $0x65,%ebp
   1abcf:	48 85 f6             	test   %rsi,%rsi
   1abd2:	74 13                	je     1abe7 <std::rt::lang_start_internal+0x397>
   1abd4:	48 8b 53 10          	mov    0x10(%rbx),%rdx
   1abd8:	4c 89 ff             	mov    %r15,%rdi
   1abdb:	ff 15 17 b0 02 00    	callq  *0x2b017(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   1abe1:	eb 04                	jmp    1abe7 <std::rt::lang_start_internal+0x397>
   1abe3:	8b 6c 24 54          	mov    0x54(%rsp),%ebp
   1abe7:	48 63 c5             	movslq %ebp,%rax
   1abea:	48 81 c4 18 01 00 00 	add    $0x118,%rsp
   1abf1:	5b                   	pop    %rbx
   1abf2:	41 5c                	pop    %r12
   1abf4:	41 5d                	pop    %r13
   1abf6:	41 5e                	pop    %r14
   1abf8:	41 5f                	pop    %r15
   1abfa:	5d                   	pop    %rbp
   1abfb:	c3                   	retq   
   1abfc:	48 8d 3d fa d8 01 00 	lea    0x1d8fa(%rip),%rdi        # 384fd <str.6+0x11dd>
   1ac03:	48 8d 15 76 9a 02 00 	lea    0x29a76(%rip),%rdx        # 44680 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1148>
   1ac0a:	be 47 00 00 00       	mov    $0x47,%esi
   1ac0f:	e8 ec f8 ff ff       	callq  1a500 <std::panicking::begin_panic>
   1ac14:	0f 0b                	ud2    
   1ac16:	48 8d 3d de c8 01 00 	lea    0x1c8de(%rip),%rdi        # 374fb <str.6+0x1db>
   1ac1d:	48 8d 15 14 9a 02 00 	lea    0x29a14(%rip),%rdx        # 44638 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1100>
   1ac24:	be 20 00 00 00       	mov    $0x20,%esi
   1ac29:	e8 d2 f8 ff ff       	callq  1a500 <std::panicking::begin_panic>
   1ac2e:	0f 0b                	ud2    
   1ac30:	bf 04 00 00 00       	mov    $0x4,%edi
   1ac35:	be 01 00 00 00       	mov    $0x1,%esi
   1ac3a:	ff 15 e0 ae 02 00    	callq  *0x2aee0(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   1ac40:	0f 0b                	ud2    
   1ac42:	48 8d 44 24 1c       	lea    0x1c(%rsp),%rax
   1ac47:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1ac4c:	48 8d 05 61 cb 01 00 	lea    0x1cb61(%rip),%rax        # 377b4 <str.6+0x494>
   1ac53:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1ac58:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   1ac5d:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1ac62:	48 8d 05 57 ab fe ff 	lea    -0x154a9(%rip),%rax        # 57c0 <<&T as core::fmt::Debug>::fmt>
   1ac69:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1ac6e:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
   1ac73:	48 89 4c 24 40       	mov    %rcx,0x40(%rsp)
   1ac78:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1ac7d:	48 8d 05 1c 8a 02 00 	lea    0x28a1c(%rip),%rax        # 436a0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x168>
   1ac84:	48 89 84 24 e8 00 00 	mov    %rax,0xe8(%rsp)
   1ac8b:	00 
   1ac8c:	48 c7 84 24 f0 00 00 	movq   $0x3,0xf0(%rsp)
   1ac93:	00 03 00 00 00 
   1ac98:	48 c7 84 24 f8 00 00 	movq   $0x0,0xf8(%rsp)
   1ac9f:	00 00 00 00 00 
   1aca4:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
   1aca9:	48 89 84 24 08 01 00 	mov    %rax,0x108(%rsp)
   1acb0:	00 
   1acb1:	48 c7 84 24 10 01 00 	movq   $0x2,0x110(%rsp)
   1acb8:	00 02 00 00 00 
   1acbd:	48 8d 35 44 99 02 00 	lea    0x29944(%rip),%rsi        # 44608 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x10d0>
   1acc4:	eb 7d                	jmp    1ad43 <std::rt::lang_start_internal+0x4f3>
   1acc6:	4c 89 6c 24 08       	mov    %r13,0x8(%rsp)
   1accb:	48 8d 05 e2 ca 01 00 	lea    0x1cae2(%rip),%rax        # 377b4 <str.6+0x494>
   1acd2:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1acd7:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   1acdc:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1ace1:	48 8d 05 d8 aa fe ff 	lea    -0x15528(%rip),%rax        # 57c0 <<&T as core::fmt::Debug>::fmt>
   1ace8:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1aced:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
   1acf2:	48 89 4c 24 40       	mov    %rcx,0x40(%rsp)
   1acf7:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1acfc:	48 8d 05 9d 89 02 00 	lea    0x2899d(%rip),%rax        # 436a0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x168>
   1ad03:	48 89 84 24 e8 00 00 	mov    %rax,0xe8(%rsp)
   1ad0a:	00 
   1ad0b:	48 c7 84 24 f0 00 00 	movq   $0x3,0xf0(%rsp)
   1ad12:	00 03 00 00 00 
   1ad17:	48 c7 84 24 f8 00 00 	movq   $0x0,0xf8(%rsp)
   1ad1e:	00 00 00 00 00 
   1ad23:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
   1ad28:	48 89 84 24 08 01 00 	mov    %rax,0x108(%rsp)
   1ad2f:	00 
   1ad30:	48 c7 84 24 10 01 00 	movq   $0x2,0x110(%rsp)
   1ad37:	00 02 00 00 00 
   1ad3c:	48 8d 35 dd 98 02 00 	lea    0x298dd(%rip),%rsi        # 44620 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x10e8>
   1ad43:	48 8d bc 24 e8 00 00 	lea    0xe8(%rsp),%rdi
   1ad4a:	00 
   1ad4b:	ff 15 8f b2 02 00    	callq  *0x2b28f(%rip)        # 45fe0 <_GLOBAL_OFFSET_TABLE_+0x658>
   1ad51:	0f 0b                	ud2    
   1ad53:	49 89 c6             	mov    %rax,%r14
   1ad56:	4c 89 ff             	mov    %r15,%rdi
   1ad59:	48 89 de             	mov    %rbx,%rsi
   1ad5c:	e8 6f ec fe ff       	callq  99d0 <alloc::alloc::box_free>
   1ad61:	eb 0d                	jmp    1ad70 <std::rt::lang_start_internal+0x520>
   1ad63:	49 89 c6             	mov    %rax,%r14
   1ad66:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
   1ad6b:	e8 40 bf fe ff       	callq  6cb0 <core::ptr::drop_in_place>
   1ad70:	4c 89 f7             	mov    %r14,%rdi
   1ad73:	e8 d8 a2 fe ff       	callq  5050 <_Unwind_Resume@plt>
   1ad78:	0f 0b                	ud2    
   1ad7a:	48 89 c7             	mov    %rax,%rdi
   1ad7d:	ff 15 2d ad 02 00    	callq  *0x2ad2d(%rip)        # 45ab0 <_GLOBAL_OFFSET_TABLE_+0x128>
   1ad83:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   1ad88:	48 89 54 24 60       	mov    %rdx,0x60(%rsp)
   1ad8d:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
   1ad94:	00 
   1ad95:	48 8b 05 84 b3 02 00 	mov    0x2b384(%rip),%rax        # 46120 <std::sys_common::cleanup::CLEANUP>
   1ad9c:	48 83 f8 03          	cmp    $0x3,%rax
   1ada0:	0f 85 da fd ff ff    	jne    1ab80 <std::rt::lang_start_internal+0x330>
   1ada6:	e9 05 fe ff ff       	jmpq   1abb0 <std::rt::lang_start_internal+0x360>
   1adab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001adb0 <std::backtrace_rs::symbolize::Symbol::name>:
   1adb0:	41 57                	push   %r15
   1adb2:	41 56                	push   %r14
   1adb4:	41 54                	push   %r12
   1adb6:	53                   	push   %rbx
   1adb7:	48 83 ec 78          	sub    $0x78,%rsp
   1adbb:	48 89 fb             	mov    %rdi,%rbx
   1adbe:	83 3e 01             	cmpl   $0x1,(%rsi)
   1adc1:	75 0a                	jne    1adcd <std::backtrace_rs::symbolize::Symbol::name+0x1d>
   1adc3:	4c 8b 76 10          	mov    0x10(%rsi),%r14
   1adc7:	4c 8b 7e 18          	mov    0x18(%rsi),%r15
   1adcb:	eb 1c                	jmp    1ade9 <std::backtrace_rs::symbolize::Symbol::name+0x39>
   1adcd:	48 8b 46 30          	mov    0x30(%rsi),%rax
   1add1:	48 83 c6 30          	add    $0x30,%rsi
   1add5:	48 85 c0             	test   %rax,%rax
   1add8:	48 0f 44 f0          	cmove  %rax,%rsi
   1addc:	0f 84 c6 00 00 00    	je     1aea8 <std::backtrace_rs::symbolize::Symbol::name+0xf8>
   1ade2:	4c 8b 36             	mov    (%rsi),%r14
   1ade5:	4c 8b 7e 08          	mov    0x8(%rsi),%r15
   1ade9:	48 89 e7             	mov    %rsp,%rdi
   1adec:	4c 89 f6             	mov    %r14,%rsi
   1adef:	4c 89 fa             	mov    %r15,%rdx
   1adf2:	ff 15 d0 ad 02 00    	callq  *0x2add0(%rip)        # 45bc8 <_GLOBAL_OFFSET_TABLE_+0x240>
   1adf8:	83 3c 24 01          	cmpl   $0x1,(%rsp)
   1adfc:	41 bc 03 00 00 00    	mov    $0x3,%r12d
   1ae02:	74 4d                	je     1ae51 <std::backtrace_rs::symbolize::Symbol::name+0xa1>
   1ae04:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1ae09:	48 85 f6             	test   %rsi,%rsi
   1ae0c:	74 43                	je     1ae51 <std::backtrace_rs::symbolize::Symbol::name+0xa1>
   1ae0e:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   1ae13:	48 89 e7             	mov    %rsp,%rdi
   1ae16:	ff 15 3c ae 02 00    	callq  *0x2ae3c(%rip)        # 45c58 <_GLOBAL_OFFSET_TABLE_+0x2d0>
   1ae1c:	48 8b 04 24          	mov    (%rsp),%rax
   1ae20:	48 83 f8 03          	cmp    $0x3,%rax
   1ae24:	74 2b                	je     1ae51 <std::backtrace_rs::symbolize::Symbol::name+0xa1>
   1ae26:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
   1ae2b:	48 89 4c 24 70       	mov    %rcx,0x70(%rsp)
   1ae30:	0f 10 44 24 08       	movups 0x8(%rsp),%xmm0
   1ae35:	0f 10 4c 24 18       	movups 0x18(%rsp),%xmm1
   1ae3a:	0f 10 54 24 28       	movups 0x28(%rsp),%xmm2
   1ae3f:	0f 29 54 24 60       	movaps %xmm2,0x60(%rsp)
   1ae44:	0f 29 4c 24 50       	movaps %xmm1,0x50(%rsp)
   1ae49:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
   1ae4e:	49 89 c4             	mov    %rax,%r12
   1ae51:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   1ae56:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1ae5b:	0f 28 44 24 40       	movaps 0x40(%rsp),%xmm0
   1ae60:	0f 28 4c 24 50       	movaps 0x50(%rsp),%xmm1
   1ae65:	0f 28 54 24 60       	movaps 0x60(%rsp),%xmm2
   1ae6a:	0f 29 54 24 20       	movaps %xmm2,0x20(%rsp)
   1ae6f:	0f 29 4c 24 10       	movaps %xmm1,0x10(%rsp)
   1ae74:	0f 29 04 24          	movaps %xmm0,(%rsp)
   1ae78:	4c 89 33             	mov    %r14,(%rbx)
   1ae7b:	4c 89 7b 08          	mov    %r15,0x8(%rbx)
   1ae7f:	4c 89 63 10          	mov    %r12,0x10(%rbx)
   1ae83:	0f 28 04 24          	movaps (%rsp),%xmm0
   1ae87:	0f 28 4c 24 10       	movaps 0x10(%rsp),%xmm1
   1ae8c:	0f 28 54 24 20       	movaps 0x20(%rsp),%xmm2
   1ae91:	0f 11 43 18          	movups %xmm0,0x18(%rbx)
   1ae95:	0f 11 4b 28          	movups %xmm1,0x28(%rbx)
   1ae99:	0f 11 53 38          	movups %xmm2,0x38(%rbx)
   1ae9d:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   1aea2:	48 89 43 48          	mov    %rax,0x48(%rbx)
   1aea6:	eb 08                	jmp    1aeb0 <std::backtrace_rs::symbolize::Symbol::name+0x100>
   1aea8:	48 c7 43 10 04 00 00 	movq   $0x4,0x10(%rbx)
   1aeaf:	00 
   1aeb0:	48 83 c4 78          	add    $0x78,%rsp
   1aeb4:	5b                   	pop    %rbx
   1aeb5:	41 5c                	pop    %r12
   1aeb7:	41 5e                	pop    %r14
   1aeb9:	41 5f                	pop    %r15
   1aebb:	c3                   	retq   
   1aebc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001aec0 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column>:
   1aec0:	55                   	push   %rbp
   1aec1:	41 57                	push   %r15
   1aec3:	41 56                	push   %r14
   1aec5:	41 55                	push   %r13
   1aec7:	41 54                	push   %r12
   1aec9:	53                   	push   %rbx
   1aeca:	48 81 ec 68 01 00 00 	sub    $0x168,%rsp
   1aed1:	45 89 ce             	mov    %r9d,%r14d
   1aed4:	45 89 c5             	mov    %r8d,%r13d
   1aed7:	48 89 fb             	mov    %rdi,%rbx
   1aeda:	0f 10 02             	movups (%rdx),%xmm0
   1aedd:	0f 29 84 24 40 01 00 	movaps %xmm0,0x140(%rsp)
   1aee4:	00 
   1aee5:	48 8b 6a 10          	mov    0x10(%rdx),%rbp
   1aee9:	0f 10 42 28          	movups 0x28(%rdx),%xmm0
   1aeed:	0f 29 84 24 10 01 00 	movaps %xmm0,0x110(%rsp)
   1aef4:	00 
   1aef5:	0f 10 42 38          	movups 0x38(%rdx),%xmm0
   1aef9:	0f 29 84 24 20 01 00 	movaps %xmm0,0x120(%rsp)
   1af00:	00 
   1af01:	48 8b 42 48          	mov    0x48(%rdx),%rax
   1af05:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
   1af0c:	00 
   1af0d:	0f 10 42 18          	movups 0x18(%rdx),%xmm0
   1af11:	0f 29 84 24 00 01 00 	movaps %xmm0,0x100(%rsp)
   1af18:	00 
   1af19:	4c 8b 21             	mov    (%rcx),%r12
   1af1c:	0f 10 41 08          	movups 0x8(%rcx),%xmm0
   1af20:	0f 29 84 24 50 01 00 	movaps %xmm0,0x150(%rsp)
   1af27:	00 
   1af28:	48 89 b4 24 f8 00 00 	mov    %rsi,0xf8(%rsp)
   1af2f:	00 
   1af30:	48 8b 07             	mov    (%rdi),%rax
   1af33:	48 85 f6             	test   %rsi,%rsi
   1af36:	75 12                	jne    1af4a <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x8a>
   1af38:	80 78 20 00          	cmpb   $0x0,0x20(%rax)
   1af3c:	75 0c                	jne    1af4a <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x8a>
   1af3e:	48 83 43 08 01       	addq   $0x1,0x8(%rbx)
   1af43:	31 c0                	xor    %eax,%eax
   1af45:	e9 ee 03 00 00       	jmpq   1b338 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x478>
   1af4a:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
   1af4f:	48 8b 38             	mov    (%rax),%rdi
   1af52:	0f 84 d0 00 00 00    	je     1b028 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x168>
   1af58:	48 8d 05 c9 94 02 00 	lea    0x294c9(%rip),%rax        # 44428 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xef0>
   1af5f:	48 89 04 24          	mov    %rax,(%rsp)
   1af63:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   1af6a:	00 00 
   1af6c:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   1af73:	00 00 
   1af75:	48 8d 05 dc c2 01 00 	lea    0x1c2dc(%rip),%rax        # 37258 <_fini+0x1934>
   1af7c:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1af81:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   1af88:	00 00 
   1af8a:	48 89 e6             	mov    %rsp,%rsi
   1af8d:	ff 15 f5 ae 02 00    	callq  *0x2aef5(%rip)        # 45e88 <_GLOBAL_OFFSET_TABLE_+0x500>
   1af93:	84 c0                	test   %al,%al
   1af95:	0f 85 9b 03 00 00    	jne    1b336 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x476>
   1af9b:	48 8b 03             	mov    (%rbx),%rax
   1af9e:	80 78 20 01          	cmpb   $0x1,0x20(%rax)
   1afa2:	0f 85 7a 01 00 00    	jne    1b122 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x262>
   1afa8:	4c 8b 38             	mov    (%rax),%r15
   1afab:	48 8d 3d 6e ca 01 00 	lea    0x1ca6e(%rip),%rdi        # 37a20 <str.6+0x700>
   1afb2:	ff 15 f0 ac 02 00    	callq  *0x2acf0(%rip)        # 45ca8 <_GLOBAL_OFFSET_TABLE_+0x320>
   1afb8:	48 8d 0d c1 85 02 00 	lea    0x285c1(%rip),%rcx        # 43580 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x48>
   1afbf:	48 89 4c 24 50       	mov    %rcx,0x50(%rsp)
   1afc4:	48 8d 35 85 a9 fe ff 	lea    -0x1567b(%rip),%rsi        # 5950 <<&T as core::fmt::Display>::fmt>
   1afcb:	48 89 74 24 58       	mov    %rsi,0x58(%rsp)
   1afd0:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   1afd5:	48 89 54 24 68       	mov    %rdx,0x68(%rsp)
   1afda:	48 89 0c 24          	mov    %rcx,(%rsp)
   1afde:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   1afe5:	00 00 
   1afe7:	48 8d 05 8a d1 01 00 	lea    0x1d18a(%rip),%rax        # 38178 <str.6+0xe58>
   1afee:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1aff3:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
   1affa:	00 00 
   1affc:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
   1b001:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1b006:	48 c7 44 24 28 02 00 	movq   $0x2,0x28(%rsp)
   1b00d:	00 00 
   1b00f:	48 89 e6             	mov    %rsp,%rsi
   1b012:	4c 89 ff             	mov    %r15,%rdi
   1b015:	ff 15 6d ae 02 00    	callq  *0x2ae6d(%rip)        # 45e88 <_GLOBAL_OFFSET_TABLE_+0x500>
   1b01b:	84 c0                	test   %al,%al
   1b01d:	0f 84 ff 00 00 00    	je     1b122 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x262>
   1b023:	e9 0e 03 00 00       	jmpq   1b336 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x476>
   1b028:	48 83 c0 08          	add    $0x8,%rax
   1b02c:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   1b031:	48 8d 05 28 9d 01 00 	lea    0x19d28(%rip),%rax        # 34d60 <core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt>
   1b038:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   1b03d:	48 8d 05 f4 93 02 00 	lea    0x293f4(%rip),%rax        # 44438 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xf00>
   1b044:	48 89 04 24          	mov    %rax,(%rsp)
   1b048:	48 c7 44 24 08 02 00 	movq   $0x2,0x8(%rsp)
   1b04f:	00 00 
   1b051:	48 8d 05 58 d1 01 00 	lea    0x1d158(%rip),%rax        # 381b0 <str.6+0xe90>
   1b058:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1b05d:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
   1b064:	00 00 
   1b066:	4c 8d 7c 24 50       	lea    0x50(%rsp),%r15
   1b06b:	4c 89 7c 24 20       	mov    %r15,0x20(%rsp)
   1b070:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
   1b077:	00 00 
   1b079:	48 89 e6             	mov    %rsp,%rsi
   1b07c:	ff 15 06 ae 02 00    	callq  *0x2ae06(%rip)        # 45e88 <_GLOBAL_OFFSET_TABLE_+0x500>
   1b082:	84 c0                	test   %al,%al
   1b084:	0f 85 ac 02 00 00    	jne    1b336 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x476>
   1b08a:	48 8b 03             	mov    (%rbx),%rax
   1b08d:	80 78 20 01          	cmpb   $0x1,0x20(%rax)
   1b091:	0f 85 8b 00 00 00    	jne    1b122 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x262>
   1b097:	48 8b 00             	mov    (%rax),%rax
   1b09a:	48 89 84 24 f0 00 00 	mov    %rax,0xf0(%rsp)
   1b0a1:	00 
   1b0a2:	48 8d 3d 7f c9 01 00 	lea    0x1c97f(%rip),%rdi        # 37a28 <str.6+0x708>
   1b0a9:	ff 15 f9 ab 02 00    	callq  *0x2abf9(%rip)        # 45ca8 <_GLOBAL_OFFSET_TABLE_+0x320>
   1b0af:	48 8d 8c 24 f8 00 00 	lea    0xf8(%rsp),%rcx
   1b0b6:	00 
   1b0b7:	48 89 4c 24 50       	mov    %rcx,0x50(%rsp)
   1b0bc:	48 8d 0d fd dd fe ff 	lea    -0x12203(%rip),%rcx        # 8ec0 <<*mut T as core::fmt::Debug>::fmt>
   1b0c3:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
   1b0c8:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   1b0cd:	48 89 54 24 68       	mov    %rdx,0x68(%rsp)
   1b0d2:	48 8d 05 7f 93 02 00 	lea    0x2937f(%rip),%rax        # 44458 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xf20>
   1b0d9:	48 89 04 24          	mov    %rax,(%rsp)
   1b0dd:	48 c7 44 24 08 02 00 	movq   $0x2,0x8(%rsp)
   1b0e4:	00 00 
   1b0e6:	48 8d 05 8b d0 01 00 	lea    0x1d08b(%rip),%rax        # 38178 <str.6+0xe58>
   1b0ed:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1b0f2:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
   1b0f9:	00 00 
   1b0fb:	4c 89 7c 24 20       	mov    %r15,0x20(%rsp)
   1b100:	48 c7 44 24 28 02 00 	movq   $0x2,0x28(%rsp)
   1b107:	00 00 
   1b109:	48 89 e6             	mov    %rsp,%rsi
   1b10c:	48 8b bc 24 f0 00 00 	mov    0xf0(%rsp),%rdi
   1b113:	00 
   1b114:	ff 15 6e ad 02 00    	callq  *0x2ad6e(%rip)        # 45e88 <_GLOBAL_OFFSET_TABLE_+0x500>
   1b11a:	84 c0                	test   %al,%al
   1b11c:	0f 85 14 02 00 00    	jne    1b336 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x476>
   1b122:	0f 28 84 24 40 01 00 	movaps 0x140(%rsp),%xmm0
   1b129:	00 
   1b12a:	0f 29 84 24 b0 00 00 	movaps %xmm0,0xb0(%rsp)
   1b131:	00 
   1b132:	48 8b 84 24 30 01 00 	mov    0x130(%rsp),%rax
   1b139:	00 
   1b13a:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   1b141:	00 
   1b142:	0f 28 84 24 00 01 00 	movaps 0x100(%rsp),%xmm0
   1b149:	00 
   1b14a:	0f 28 8c 24 10 01 00 	movaps 0x110(%rsp),%xmm1
   1b151:	00 
   1b152:	0f 28 94 24 20 01 00 	movaps 0x120(%rsp),%xmm2
   1b159:	00 
   1b15a:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
   1b15f:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
   1b164:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   1b169:	48 8b 03             	mov    (%rbx),%rax
   1b16c:	48 83 fd 04          	cmp    $0x4,%rbp
   1b170:	0f 84 ab 00 00 00    	je     1b221 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x361>
   1b176:	0f b6 48 20          	movzbl 0x20(%rax),%ecx
   1b17a:	48 83 f9 01          	cmp    $0x1,%rcx
   1b17e:	0f 84 e8 00 00 00    	je     1b26c <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x3ac>
   1b184:	48 85 c9             	test   %rcx,%rcx
   1b187:	0f 85 94 00 00 00    	jne    1b221 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x361>
   1b18d:	0f 28 84 24 b0 00 00 	movaps 0xb0(%rsp),%xmm0
   1b194:	00 
   1b195:	0f 29 04 24          	movaps %xmm0,(%rsp)
   1b199:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
   1b19e:	0f 28 44 24 50       	movaps 0x50(%rsp),%xmm0
   1b1a3:	0f 28 4c 24 60       	movaps 0x60(%rsp),%xmm1
   1b1a8:	0f 28 54 24 70       	movaps 0x70(%rsp),%xmm2
   1b1ad:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
   1b1b2:	0f 11 4c 24 28       	movups %xmm1,0x28(%rsp)
   1b1b7:	0f 11 54 24 38       	movups %xmm2,0x38(%rsp)
   1b1bc:	48 8b 8c 24 80 00 00 	mov    0x80(%rsp),%rcx
   1b1c3:	00 
   1b1c4:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
   1b1c9:	48 8b 38             	mov    (%rax),%rdi
   1b1cc:	48 89 e0             	mov    %rsp,%rax
   1b1cf:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
   1b1d6:	00 
   1b1d7:	48 8d 05 72 14 00 00 	lea    0x1472(%rip),%rax        # 1c650 <<std::backtrace_rs::symbolize::SymbolName as core::fmt::Display>::fmt>
   1b1de:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   1b1e5:	00 
   1b1e6:	48 8d 05 93 83 02 00 	lea    0x28393(%rip),%rax        # 43580 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x48>
   1b1ed:	48 89 84 24 c0 00 00 	mov    %rax,0xc0(%rsp)
   1b1f4:	00 
   1b1f5:	48 c7 84 24 c8 00 00 	movq   $0x1,0xc8(%rsp)
   1b1fc:	00 01 00 00 00 
   1b201:	48 8d 05 90 c7 01 00 	lea    0x1c790(%rip),%rax        # 37998 <str.6+0x678>
   1b208:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
   1b20f:	00 
   1b210:	48 c7 84 24 d8 00 00 	movq   $0x1,0xd8(%rsp)
   1b217:	00 01 00 00 00 
   1b21c:	e9 cb 00 00 00       	jmpq   1b2ec <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x42c>
   1b221:	48 8b 38             	mov    (%rax),%rdi
   1b224:	48 8d 05 4d 92 02 00 	lea    0x2924d(%rip),%rax        # 44478 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xf40>
   1b22b:	48 89 04 24          	mov    %rax,(%rsp)
   1b22f:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   1b236:	00 00 
   1b238:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   1b23f:	00 00 
   1b241:	48 8d 05 10 c0 01 00 	lea    0x1c010(%rip),%rax        # 37258 <_fini+0x1934>
   1b248:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1b24d:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   1b254:	00 00 
   1b256:	48 89 e6             	mov    %rsp,%rsi
   1b259:	ff 15 29 ac 02 00    	callq  *0x2ac29(%rip)        # 45e88 <_GLOBAL_OFFSET_TABLE_+0x500>
   1b25f:	84 c0                	test   %al,%al
   1b261:	0f 84 b3 00 00 00    	je     1b31a <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x45a>
   1b267:	e9 ca 00 00 00       	jmpq   1b336 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x476>
   1b26c:	0f 28 84 24 b0 00 00 	movaps 0xb0(%rsp),%xmm0
   1b273:	00 
   1b274:	0f 29 04 24          	movaps %xmm0,(%rsp)
   1b278:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
   1b27d:	0f 28 44 24 50       	movaps 0x50(%rsp),%xmm0
   1b282:	0f 28 4c 24 60       	movaps 0x60(%rsp),%xmm1
   1b287:	0f 28 54 24 70       	movaps 0x70(%rsp),%xmm2
   1b28c:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
   1b291:	0f 11 4c 24 28       	movups %xmm1,0x28(%rsp)
   1b296:	0f 11 54 24 38       	movups %xmm2,0x38(%rsp)
   1b29b:	48 8b 8c 24 80 00 00 	mov    0x80(%rsp),%rcx
   1b2a2:	00 
   1b2a3:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
   1b2a8:	48 8b 38             	mov    (%rax),%rdi
   1b2ab:	48 89 e0             	mov    %rsp,%rax
   1b2ae:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
   1b2b5:	00 
   1b2b6:	48 8d 05 93 13 00 00 	lea    0x1393(%rip),%rax        # 1c650 <<std::backtrace_rs::symbolize::SymbolName as core::fmt::Display>::fmt>
   1b2bd:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   1b2c4:	00 
   1b2c5:	48 8d 05 b4 82 02 00 	lea    0x282b4(%rip),%rax        # 43580 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x48>
   1b2cc:	48 89 84 24 c0 00 00 	mov    %rax,0xc0(%rsp)
   1b2d3:	00 
   1b2d4:	48 c7 84 24 c8 00 00 	movq   $0x1,0xc8(%rsp)
   1b2db:	00 01 00 00 00 
   1b2e0:	48 c7 84 24 d0 00 00 	movq   $0x0,0xd0(%rsp)
   1b2e7:	00 00 00 00 00 
   1b2ec:	48 8d 84 24 90 00 00 	lea    0x90(%rsp),%rax
   1b2f3:	00 
   1b2f4:	48 89 84 24 e0 00 00 	mov    %rax,0xe0(%rsp)
   1b2fb:	00 
   1b2fc:	48 c7 84 24 e8 00 00 	movq   $0x1,0xe8(%rsp)
   1b303:	00 01 00 00 00 
   1b308:	48 8d b4 24 c0 00 00 	lea    0xc0(%rsp),%rsi
   1b30f:	00 
   1b310:	ff 15 72 ab 02 00    	callq  *0x2ab72(%rip)        # 45e88 <_GLOBAL_OFFSET_TABLE_+0x500>
   1b316:	84 c0                	test   %al,%al
   1b318:	75 1c                	jne    1b336 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x476>
   1b31a:	48 8b 03             	mov    (%rbx),%rax
   1b31d:	48 8b 38             	mov    (%rax),%rdi
   1b320:	48 8d 35 a7 cc 01 00 	lea    0x1cca7(%rip),%rsi        # 37fce <str.6+0xcae>
   1b327:	ba 01 00 00 00       	mov    $0x1,%edx
   1b32c:	ff 15 0e a7 02 00    	callq  *0x2a70e(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   1b332:	84 c0                	test   %al,%al
   1b334:	74 14                	je     1b34a <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x48a>
   1b336:	b0 01                	mov    $0x1,%al
   1b338:	48 81 c4 68 01 00 00 	add    $0x168,%rsp
   1b33f:	5b                   	pop    %rbx
   1b340:	41 5c                	pop    %r12
   1b342:	41 5d                	pop    %r13
   1b344:	41 5e                	pop    %r14
   1b346:	41 5f                	pop    %r15
   1b348:	5d                   	pop    %rbp
   1b349:	c3                   	retq   
   1b34a:	0f 28 84 24 50 01 00 	movaps 0x150(%rsp),%xmm0
   1b351:	00 
   1b352:	0f 29 84 24 90 00 00 	movaps %xmm0,0x90(%rsp)
   1b359:	00 
   1b35a:	41 83 fd 01          	cmp    $0x1,%r13d
   1b35e:	0f 85 da fb ff ff    	jne    1af3e <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x7e>
   1b364:	49 83 fc 02          	cmp    $0x2,%r12
   1b368:	0f 84 d0 fb ff ff    	je     1af3e <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x7e>
   1b36e:	0f 28 84 24 90 00 00 	movaps 0x90(%rsp),%xmm0
   1b375:	00 
   1b376:	0f 29 84 24 c0 00 00 	movaps %xmm0,0xc0(%rsp)
   1b37d:	00 
   1b37e:	44 89 b4 24 ac 00 00 	mov    %r14d,0xac(%rsp)
   1b385:	00 
   1b386:	48 8b 03             	mov    (%rbx),%rax
   1b389:	80 78 20 01          	cmpb   $0x1,0x20(%rax)
   1b38d:	75 7e                	jne    1b40d <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x54d>
   1b38f:	48 8b 28             	mov    (%rax),%rbp
   1b392:	48 8d 3d 8f c6 01 00 	lea    0x1c68f(%rip),%rdi        # 37a28 <str.6+0x708>
   1b399:	ff 15 09 a9 02 00    	callq  *0x2a909(%rip)        # 45ca8 <_GLOBAL_OFFSET_TABLE_+0x320>
   1b39f:	48 8d 0d da 81 02 00 	lea    0x281da(%rip),%rcx        # 43580 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x48>
   1b3a6:	48 89 4c 24 50       	mov    %rcx,0x50(%rsp)
   1b3ab:	48 8d 35 9e a5 fe ff 	lea    -0x15a62(%rip),%rsi        # 5950 <<&T as core::fmt::Display>::fmt>
   1b3b2:	48 89 74 24 58       	mov    %rsi,0x58(%rsp)
   1b3b7:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   1b3bc:	48 89 54 24 68       	mov    %rdx,0x68(%rsp)
   1b3c1:	48 89 0c 24          	mov    %rcx,(%rsp)
   1b3c5:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   1b3cc:	00 00 
   1b3ce:	48 8d 05 a3 cd 01 00 	lea    0x1cda3(%rip),%rax        # 38178 <str.6+0xe58>
   1b3d5:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1b3da:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
   1b3e1:	00 00 
   1b3e3:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
   1b3e8:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1b3ed:	48 c7 44 24 28 02 00 	movq   $0x2,0x28(%rsp)
   1b3f4:	00 00 
   1b3f6:	48 89 e6             	mov    %rsp,%rsi
   1b3f9:	48 89 ef             	mov    %rbp,%rdi
   1b3fc:	ff 15 86 aa 02 00    	callq  *0x2aa86(%rip)        # 45e88 <_GLOBAL_OFFSET_TABLE_+0x500>
   1b402:	84 c0                	test   %al,%al
   1b404:	0f 85 2c ff ff ff    	jne    1b336 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x476>
   1b40a:	48 8b 03             	mov    (%rbx),%rax
   1b40d:	48 8b 38             	mov    (%rax),%rdi
   1b410:	48 8d 05 71 90 02 00 	lea    0x29071(%rip),%rax        # 44488 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xf50>
   1b417:	48 89 04 24          	mov    %rax,(%rsp)
   1b41b:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   1b422:	00 00 
   1b424:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   1b42b:	00 00 
   1b42d:	48 8d 2d 24 be 01 00 	lea    0x1be24(%rip),%rbp        # 37258 <_fini+0x1934>
   1b434:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   1b439:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   1b440:	00 00 
   1b442:	48 89 e6             	mov    %rsp,%rsi
   1b445:	ff 15 3d aa 02 00    	callq  *0x2aa3d(%rip)        # 45e88 <_GLOBAL_OFFSET_TABLE_+0x500>
   1b44b:	84 c0                	test   %al,%al
   1b44d:	0f 85 e3 fe ff ff    	jne    1b336 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x476>
   1b453:	48 8b 03             	mov    (%rbx),%rax
   1b456:	48 8b 78 10          	mov    0x10(%rax),%rdi
   1b45a:	48 8b 48 18          	mov    0x18(%rax),%rcx
   1b45e:	48 8b 30             	mov    (%rax),%rsi
   1b461:	48 89 34 24          	mov    %rsi,(%rsp)
   1b465:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   1b46a:	4c 89 64 24 08       	mov    %r12,0x8(%rsp)
   1b46f:	0f 28 84 24 c0 00 00 	movaps 0xc0(%rsp),%xmm0
   1b476:	00 
   1b477:	0f 11 44 24 10       	movups %xmm0,0x10(%rsp)
   1b47c:	ff 51 18             	callq  *0x18(%rcx)
   1b47f:	84 c0                	test   %al,%al
   1b481:	0f 85 af fe ff ff    	jne    1b336 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x476>
   1b487:	48 8b 03             	mov    (%rbx),%rax
   1b48a:	48 8b 38             	mov    (%rax),%rdi
   1b48d:	48 8d 84 24 ac 00 00 	lea    0xac(%rsp),%rax
   1b494:	00 
   1b495:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   1b49a:	4c 8d 35 8f 97 01 00 	lea    0x1978f(%rip),%r14        # 34c30 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt>
   1b4a1:	4c 89 74 24 58       	mov    %r14,0x58(%rsp)
   1b4a6:	4c 8d 3d eb 8f 02 00 	lea    0x28feb(%rip),%r15        # 44498 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xf60>
   1b4ad:	4c 89 3c 24          	mov    %r15,(%rsp)
   1b4b1:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   1b4b8:	00 00 
   1b4ba:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   1b4c1:	00 00 
   1b4c3:	4c 8d 64 24 50       	lea    0x50(%rsp),%r12
   1b4c8:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
   1b4cd:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
   1b4d4:	00 00 
   1b4d6:	48 89 e6             	mov    %rsp,%rsi
   1b4d9:	ff 15 a9 a9 02 00    	callq  *0x2a9a9(%rip)        # 45e88 <_GLOBAL_OFFSET_TABLE_+0x500>
   1b4df:	84 c0                	test   %al,%al
   1b4e1:	0f 85 4f fe ff ff    	jne    1b336 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x476>
   1b4e7:	83 bc 24 a0 01 00 00 	cmpl   $0x1,0x1a0(%rsp)
   1b4ee:	01 
   1b4ef:	75 5b                	jne    1b54c <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x68c>
   1b4f1:	8b 84 24 a8 01 00 00 	mov    0x1a8(%rsp),%eax
   1b4f8:	89 84 24 b0 00 00 00 	mov    %eax,0xb0(%rsp)
   1b4ff:	48 8b 03             	mov    (%rbx),%rax
   1b502:	48 8b 38             	mov    (%rax),%rdi
   1b505:	48 8d 84 24 b0 00 00 	lea    0xb0(%rsp),%rax
   1b50c:	00 
   1b50d:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   1b512:	4c 89 74 24 58       	mov    %r14,0x58(%rsp)
   1b517:	4c 89 3c 24          	mov    %r15,(%rsp)
   1b51b:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   1b522:	00 00 
   1b524:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   1b52b:	00 00 
   1b52d:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
   1b532:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
   1b539:	00 00 
   1b53b:	48 89 e6             	mov    %rsp,%rsi
   1b53e:	ff 15 44 a9 02 00    	callq  *0x2a944(%rip)        # 45e88 <_GLOBAL_OFFSET_TABLE_+0x500>
   1b544:	84 c0                	test   %al,%al
   1b546:	0f 85 ea fd ff ff    	jne    1b336 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x476>
   1b54c:	48 8b 03             	mov    (%rbx),%rax
   1b54f:	48 8b 38             	mov    (%rax),%rdi
   1b552:	48 8d 05 4f 8f 02 00 	lea    0x28f4f(%rip),%rax        # 444a8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xf70>
   1b559:	48 89 04 24          	mov    %rax,(%rsp)
   1b55d:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   1b564:	00 00 
   1b566:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   1b56d:	00 00 
   1b56f:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   1b574:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   1b57b:	00 00 
   1b57d:	48 89 e6             	mov    %rsp,%rsi
   1b580:	ff 15 02 a9 02 00    	callq  *0x2a902(%rip)        # 45e88 <_GLOBAL_OFFSET_TABLE_+0x500>
   1b586:	84 c0                	test   %al,%al
   1b588:	0f 84 b0 f9 ff ff    	je     1af3e <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x7e>
   1b58e:	e9 a3 fd ff ff       	jmpq   1b336 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x476>
   1b593:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1b59a:	00 00 00 
   1b59d:	0f 1f 00             	nopl   (%rax)

000000000001b5a0 <<std::ffi::c_str::NulError as core::fmt::Debug>::fmt>:
   1b5a0:	41 57                	push   %r15
   1b5a2:	41 56                	push   %r14
   1b5a4:	53                   	push   %rbx
   1b5a5:	48 83 ec 20          	sub    $0x20,%rsp
   1b5a9:	48 89 fb             	mov    %rdi,%rbx
   1b5ac:	4c 8d 7f 08          	lea    0x8(%rdi),%r15
   1b5b0:	48 8d 15 99 c4 01 00 	lea    0x1c499(%rip),%rdx        # 37a50 <str.6+0x730>
   1b5b7:	4c 8d 74 24 08       	lea    0x8(%rsp),%r14
   1b5bc:	b9 08 00 00 00       	mov    $0x8,%ecx
   1b5c1:	4c 89 f7             	mov    %r14,%rdi
   1b5c4:	ff 15 b6 a8 02 00    	callq  *0x2a8b6(%rip)        # 45e80 <_GLOBAL_OFFSET_TABLE_+0x4f8>
   1b5ca:	48 89 1c 24          	mov    %rbx,(%rsp)
   1b5ce:	48 8d 15 d3 83 02 00 	lea    0x283d3(%rip),%rdx        # 439a8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x470>
   1b5d5:	48 8d 1d 14 49 01 00 	lea    0x14914(%rip),%rbx        # 2fef0 <core::fmt::builders::DebugTuple::field>
   1b5dc:	48 89 e6             	mov    %rsp,%rsi
   1b5df:	4c 89 f7             	mov    %r14,%rdi
   1b5e2:	ff d3                	callq  *%rbx
   1b5e4:	4c 89 3c 24          	mov    %r15,(%rsp)
   1b5e8:	48 8d 15 e1 8e 02 00 	lea    0x28ee1(%rip),%rdx        # 444d0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xf98>
   1b5ef:	48 89 e6             	mov    %rsp,%rsi
   1b5f2:	4c 89 f7             	mov    %r14,%rdi
   1b5f5:	ff d3                	callq  *%rbx
   1b5f7:	4c 89 f7             	mov    %r14,%rdi
   1b5fa:	ff 15 00 a4 02 00    	callq  *0x2a400(%rip)        # 45a00 <_GLOBAL_OFFSET_TABLE_+0x78>
   1b600:	48 83 c4 20          	add    $0x20,%rsp
   1b604:	5b                   	pop    %rbx
   1b605:	41 5e                	pop    %r14
   1b607:	41 5f                	pop    %r15
   1b609:	c3                   	retq   
   1b60a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001b610 <<std::io::error::ErrorKind as core::fmt::Debug>::fmt>:
   1b610:	53                   	push   %rbx
   1b611:	48 83 ec 20          	sub    $0x20,%rsp
   1b615:	0f b6 07             	movzbl (%rdi),%eax
   1b618:	48 8d 0d 09 b9 01 00 	lea    0x1b909(%rip),%rcx        # 36f28 <_fini+0x1604>
   1b61f:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   1b623:	48 01 c8             	add    %rcx,%rax
   1b626:	ff e0                	jmpq   *%rax
   1b628:	48 8d 15 39 c4 01 00 	lea    0x1c439(%rip),%rdx        # 37a68 <str.6+0x748>
   1b62f:	e9 b1 00 00 00       	jmpq   1b6e5 <<std::io::error::ErrorKind as core::fmt::Debug>::fmt+0xd5>
   1b634:	48 8d 15 15 ad 01 00 	lea    0x1ad15(%rip),%rdx        # 36350 <_fini+0xa2c>
   1b63b:	eb 4e                	jmp    1b68b <<std::io::error::ErrorKind as core::fmt::Debug>::fmt+0x7b>
   1b63d:	48 8d 15 99 cc 01 00 	lea    0x1cc99(%rip),%rdx        # 382dd <str.6+0xfbd>
   1b644:	eb 1d                	jmp    1b663 <<std::io::error::ErrorKind as core::fmt::Debug>::fmt+0x53>
   1b646:	48 8d 15 81 cc 01 00 	lea    0x1cc81(%rip),%rdx        # 382ce <str.6+0xfae>
   1b64d:	48 8d 5c 24 08       	lea    0x8(%rsp),%rbx
   1b652:	b9 0f 00 00 00       	mov    $0xf,%ecx
   1b657:	e9 df 00 00 00       	jmpq   1b73b <<std::io::error::ErrorKind as core::fmt::Debug>::fmt+0x12b>
   1b65c:	48 8d 15 5a cc 01 00 	lea    0x1cc5a(%rip),%rdx        # 382bd <str.6+0xf9d>
   1b663:	48 8d 5c 24 08       	lea    0x8(%rsp),%rbx
   1b668:	b9 11 00 00 00       	mov    $0x11,%ecx
   1b66d:	e9 c9 00 00 00       	jmpq   1b73b <<std::io::error::ErrorKind as core::fmt::Debug>::fmt+0x12b>
   1b672:	48 8d 15 38 cc 01 00 	lea    0x1cc38(%rip),%rdx        # 382b1 <str.6+0xf91>
   1b679:	eb 4e                	jmp    1b6c9 <<std::io::error::ErrorKind as core::fmt::Debug>::fmt+0xb9>
   1b67b:	48 8d 15 26 cc 01 00 	lea    0x1cc26(%rip),%rdx        # 382a8 <str.6+0xf88>
   1b682:	eb 74                	jmp    1b6f8 <<std::io::error::ErrorKind as core::fmt::Debug>::fmt+0xe8>
   1b684:	48 8d 15 b5 ac 01 00 	lea    0x1acb5(%rip),%rdx        # 36340 <_fini+0xa1c>
   1b68b:	48 8d 5c 24 08       	lea    0x8(%rsp),%rbx
   1b690:	b9 10 00 00 00       	mov    $0x10,%ecx
   1b695:	e9 a1 00 00 00       	jmpq   1b73b <<std::io::error::ErrorKind as core::fmt::Debug>::fmt+0x12b>
   1b69a:	48 8d 15 fd cb 01 00 	lea    0x1cbfd(%rip),%rdx        # 3829e <str.6+0xf7e>
   1b6a1:	eb 13                	jmp    1b6b6 <<std::io::error::ErrorKind as core::fmt::Debug>::fmt+0xa6>
   1b6a3:	48 8d 15 e7 cb 01 00 	lea    0x1cbe7(%rip),%rdx        # 38291 <str.6+0xf71>
   1b6aa:	e9 82 00 00 00       	jmpq   1b731 <<std::io::error::ErrorKind as core::fmt::Debug>::fmt+0x121>
   1b6af:	48 8d 15 d1 cb 01 00 	lea    0x1cbd1(%rip),%rdx        # 38287 <str.6+0xf67>
   1b6b6:	48 8d 5c 24 08       	lea    0x8(%rsp),%rbx
   1b6bb:	b9 0a 00 00 00       	mov    $0xa,%ecx
   1b6c0:	eb 79                	jmp    1b73b <<std::io::error::ErrorKind as core::fmt::Debug>::fmt+0x12b>
   1b6c2:	48 8d 15 b2 cb 01 00 	lea    0x1cbb2(%rip),%rdx        # 3827b <str.6+0xf5b>
   1b6c9:	48 8d 5c 24 08       	lea    0x8(%rsp),%rbx
   1b6ce:	b9 0c 00 00 00       	mov    $0xc,%ecx
   1b6d3:	eb 66                	jmp    1b73b <<std::io::error::ErrorKind as core::fmt::Debug>::fmt+0x12b>
   1b6d5:	48 8d 15 94 cb 01 00 	lea    0x1cb94(%rip),%rdx        # 38270 <str.6+0xf50>
   1b6dc:	eb 2d                	jmp    1b70b <<std::io::error::ErrorKind as core::fmt::Debug>::fmt+0xfb>
   1b6de:	48 8d 15 7b c3 01 00 	lea    0x1c37b(%rip),%rdx        # 37a60 <str.6+0x740>
   1b6e5:	48 8d 5c 24 08       	lea    0x8(%rsp),%rbx
   1b6ea:	b9 08 00 00 00       	mov    $0x8,%ecx
   1b6ef:	eb 4a                	jmp    1b73b <<std::io::error::ErrorKind as core::fmt::Debug>::fmt+0x12b>
   1b6f1:	48 8d 15 6f cb 01 00 	lea    0x1cb6f(%rip),%rdx        # 38267 <str.6+0xf47>
   1b6f8:	48 8d 5c 24 08       	lea    0x8(%rsp),%rbx
   1b6fd:	b9 09 00 00 00       	mov    $0x9,%ecx
   1b702:	eb 37                	jmp    1b73b <<std::io::error::ErrorKind as core::fmt::Debug>::fmt+0x12b>
   1b704:	48 8d 15 51 cb 01 00 	lea    0x1cb51(%rip),%rdx        # 3825c <str.6+0xf3c>
   1b70b:	48 8d 5c 24 08       	lea    0x8(%rsp),%rbx
   1b710:	b9 0b 00 00 00       	mov    $0xb,%ecx
   1b715:	eb 24                	jmp    1b73b <<std::io::error::ErrorKind as core::fmt::Debug>::fmt+0x12b>
   1b717:	48 8d 15 39 cb 01 00 	lea    0x1cb39(%rip),%rdx        # 38257 <str.6+0xf37>
   1b71e:	48 8d 5c 24 08       	lea    0x8(%rsp),%rbx
   1b723:	b9 05 00 00 00       	mov    $0x5,%ecx
   1b728:	eb 11                	jmp    1b73b <<std::io::error::ErrorKind as core::fmt::Debug>::fmt+0x12b>
   1b72a:	48 8d 15 19 cb 01 00 	lea    0x1cb19(%rip),%rdx        # 3824a <str.6+0xf2a>
   1b731:	48 8d 5c 24 08       	lea    0x8(%rsp),%rbx
   1b736:	b9 0d 00 00 00       	mov    $0xd,%ecx
   1b73b:	48 89 df             	mov    %rbx,%rdi
   1b73e:	ff 15 3c a7 02 00    	callq  *0x2a73c(%rip)        # 45e80 <_GLOBAL_OFFSET_TABLE_+0x4f8>
   1b744:	48 89 df             	mov    %rbx,%rdi
   1b747:	ff 15 b3 a2 02 00    	callq  *0x2a2b3(%rip)        # 45a00 <_GLOBAL_OFFSET_TABLE_+0x78>
   1b74d:	48 83 c4 20          	add    $0x20,%rsp
   1b751:	5b                   	pop    %rbx
   1b752:	c3                   	retq   
   1b753:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1b75a:	00 00 00 
   1b75d:	0f 1f 00             	nopl   (%rax)

000000000001b760 <<std::time::SystemTimeError as core::fmt::Debug>::fmt>:
   1b760:	41 56                	push   %r14
   1b762:	53                   	push   %rbx
   1b763:	48 83 ec 28          	sub    $0x28,%rsp
   1b767:	48 89 fb             	mov    %rdi,%rbx
   1b76a:	48 8d 15 7d cb 01 00 	lea    0x1cb7d(%rip),%rdx        # 382ee <str.6+0xfce>
   1b771:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
   1b776:	b9 0f 00 00 00       	mov    $0xf,%ecx
   1b77b:	4c 89 f7             	mov    %r14,%rdi
   1b77e:	ff 15 fc a6 02 00    	callq  *0x2a6fc(%rip)        # 45e80 <_GLOBAL_OFFSET_TABLE_+0x4f8>
   1b784:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   1b789:	48 8d 15 a0 8d 02 00 	lea    0x28da0(%rip),%rdx        # 44530 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xff8>
   1b790:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   1b795:	4c 89 f7             	mov    %r14,%rdi
   1b798:	ff 15 92 a5 02 00    	callq  *0x2a592(%rip)        # 45d30 <_GLOBAL_OFFSET_TABLE_+0x3a8>
   1b79e:	4c 89 f7             	mov    %r14,%rdi
   1b7a1:	ff 15 59 a2 02 00    	callq  *0x2a259(%rip)        # 45a00 <_GLOBAL_OFFSET_TABLE_+0x78>
   1b7a7:	48 83 c4 28          	add    $0x28,%rsp
   1b7ab:	5b                   	pop    %rbx
   1b7ac:	41 5e                	pop    %r14
   1b7ae:	c3                   	retq   
   1b7af:	90                   	nop

000000000001b7b0 <std::sys::unix::args::imp::ARGV_INIT_ARRAY::init_wrapper>:
   1b7b0:	41 57                	push   %r15
   1b7b2:	41 56                	push   %r14
   1b7b4:	53                   	push   %rbx
   1b7b5:	49 89 f7             	mov    %rsi,%r15
   1b7b8:	48 63 df             	movslq %edi,%rbx
   1b7bb:	4c 8d 35 de a9 02 00 	lea    0x2a9de(%rip),%r14        # 461a0 <std::sys::unix::args::imp::LOCK>
   1b7c2:	4c 89 f7             	mov    %r14,%rdi
   1b7c5:	ff 15 f5 a7 02 00    	callq  *0x2a7f5(%rip)        # 45fc0 <pthread_mutex_lock@GLIBC_2.2.5>
   1b7cb:	48 89 1d be a9 02 00 	mov    %rbx,0x2a9be(%rip)        # 46190 <std::sys::unix::args::imp::ARGC>
   1b7d2:	4c 89 3d bf a9 02 00 	mov    %r15,0x2a9bf(%rip)        # 46198 <std::sys::unix::args::imp::ARGV>
   1b7d9:	4c 89 f7             	mov    %r14,%rdi
   1b7dc:	5b                   	pop    %rbx
   1b7dd:	41 5e                	pop    %r14
   1b7df:	41 5f                	pop    %r15
   1b7e1:	ff 25 81 a5 02 00    	jmpq   *0x2a581(%rip)        # 45d68 <pthread_mutex_unlock@GLIBC_2.2.5>
   1b7e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1b7ee:	00 00 

000000000001b7f0 <std::sys::unix::fs::File::open_c>:
   1b7f0:	55                   	push   %rbp
   1b7f1:	41 57                	push   %r15
   1b7f3:	41 56                	push   %r14
   1b7f5:	41 55                	push   %r13
   1b7f7:	41 54                	push   %r12
   1b7f9:	53                   	push   %rbx
   1b7fa:	50                   	push   %rax
   1b7fb:	49 89 f7             	mov    %rsi,%r15
   1b7fe:	49 89 fe             	mov    %rdi,%r14
   1b801:	8a 59 09             	mov    0x9(%rcx),%bl
   1b804:	8a 41 0a             	mov    0xa(%rcx),%al
   1b807:	80 79 08 00          	cmpb   $0x0,0x8(%rcx)
   1b80b:	74 0f                	je     1b81c <std::sys::unix::fs::File::open_c+0x2c>
   1b80d:	84 db                	test   %bl,%bl
   1b80f:	74 39                	je     1b84a <std::sys::unix::fs::File::open_c+0x5a>
   1b811:	84 c0                	test   %al,%al
   1b813:	75 39                	jne    1b84e <std::sys::unix::fs::File::open_c+0x5e>
   1b815:	bf 02 00 00 00       	mov    $0x2,%edi
   1b81a:	eb 26                	jmp    1b842 <std::sys::unix::fs::File::open_c+0x52>
   1b81c:	31 f6                	xor    %esi,%esi
   1b81e:	84 c0                	test   %al,%al
   1b820:	40 0f 95 c6          	setne  %sil
   1b824:	c1 e6 0a             	shl    $0xa,%esi
   1b827:	83 ce 01             	or     $0x1,%esi
   1b82a:	84 db                	test   %bl,%bl
   1b82c:	bf 01 04 00 00       	mov    $0x401,%edi
   1b831:	0f 45 fe             	cmovne %esi,%edi
   1b834:	89 c2                	mov    %eax,%edx
   1b836:	08 da                	or     %bl,%dl
   1b838:	74 27                	je     1b861 <std::sys::unix::fs::File::open_c+0x71>
   1b83a:	84 db                	test   %bl,%bl
   1b83c:	74 47                	je     1b885 <std::sys::unix::fs::File::open_c+0x95>
   1b83e:	84 c0                	test   %al,%al
   1b840:	75 11                	jne    1b853 <std::sys::unix::fs::File::open_c+0x63>
   1b842:	8a 51 0b             	mov    0xb(%rcx),%dl
   1b845:	8a 59 0d             	mov    0xd(%rcx),%bl
   1b848:	eb 53                	jmp    1b89d <std::sys::unix::fs::File::open_c+0xad>
   1b84a:	84 c0                	test   %al,%al
   1b84c:	74 33                	je     1b881 <std::sys::unix::fs::File::open_c+0x91>
   1b84e:	bf 02 04 00 00       	mov    $0x402,%edi
   1b853:	8a 51 0b             	mov    0xb(%rcx),%dl
   1b856:	8a 59 0d             	mov    0xd(%rcx),%bl
   1b859:	84 d2                	test   %dl,%dl
   1b85b:	74 40                	je     1b89d <std::sys::unix::fs::File::open_c+0xad>
   1b85d:	84 db                	test   %bl,%bl
   1b85f:	75 3c                	jne    1b89d <std::sys::unix::fs::File::open_c+0xad>
   1b861:	48 b8 00 00 00 00 16 	movabs $0x1600000000,%rax
   1b868:	00 00 00 
   1b86b:	49 89 46 08          	mov    %rax,0x8(%r14)
   1b86f:	49 c7 46 10 00 00 00 	movq   $0x0,0x10(%r14)
   1b876:	00 
   1b877:	bb 01 00 00 00       	mov    $0x1,%ebx
   1b87c:	e9 ab 00 00 00       	jmpq   1b92c <std::sys::unix::fs::File::open_c+0x13c>
   1b881:	31 ff                	xor    %edi,%edi
   1b883:	eb 09                	jmp    1b88e <std::sys::unix::fs::File::open_c+0x9e>
   1b885:	bf 01 04 00 00       	mov    $0x401,%edi
   1b88a:	84 c0                	test   %al,%al
   1b88c:	75 c5                	jne    1b853 <std::sys::unix::fs::File::open_c+0x63>
   1b88e:	8a 51 0b             	mov    0xb(%rcx),%dl
   1b891:	8a 59 0d             	mov    0xd(%rcx),%bl
   1b894:	8a 41 0c             	mov    0xc(%rcx),%al
   1b897:	08 d0                	or     %dl,%al
   1b899:	08 d8                	or     %bl,%al
   1b89b:	75 c4                	jne    1b861 <std::sys::unix::fs::File::open_c+0x71>
   1b89d:	80 79 0c 00          	cmpb   $0x0,0xc(%rcx)
   1b8a1:	74 0f                	je     1b8b2 <std::sys::unix::fs::File::open_c+0xc2>
   1b8a3:	84 db                	test   %bl,%bl
   1b8a5:	75 13                	jne    1b8ba <std::sys::unix::fs::File::open_c+0xca>
   1b8a7:	0f b6 d2             	movzbl %dl,%edx
   1b8aa:	c1 e2 09             	shl    $0x9,%edx
   1b8ad:	83 ca 40             	or     $0x40,%edx
   1b8b0:	eb 0d                	jmp    1b8bf <std::sys::unix::fs::File::open_c+0xcf>
   1b8b2:	84 db                	test   %bl,%bl
   1b8b4:	0f 84 95 00 00 00    	je     1b94f <std::sys::unix::fs::File::open_c+0x15f>
   1b8ba:	ba c0 00 00 00       	mov    $0xc0,%edx
   1b8bf:	bd fc ff f7 ff       	mov    $0xfff7fffc,%ebp
   1b8c4:	23 29                	and    (%rcx),%ebp
   1b8c6:	09 d7                	or     %edx,%edi
   1b8c8:	09 fd                	or     %edi,%ebp
   1b8ca:	81 cd 00 00 08 00    	or     $0x80000,%ebp
   1b8d0:	44 8b 61 04          	mov    0x4(%rcx),%r12d
   1b8d4:	31 db                	xor    %ebx,%ebx
   1b8d6:	4c 89 ff             	mov    %r15,%rdi
   1b8d9:	89 ee                	mov    %ebp,%esi
   1b8db:	44 89 e2             	mov    %r12d,%edx
   1b8de:	31 c0                	xor    %eax,%eax
   1b8e0:	ff 15 72 a5 02 00    	callq  *0x2a572(%rip)        # 45e58 <open64@GLIBC_2.2.5>
   1b8e6:	83 f8 ff             	cmp    $0xffffffff,%eax
   1b8e9:	75 3d                	jne    1b928 <std::sys::unix::fs::File::open_c+0x138>
   1b8eb:	4c 89 34 24          	mov    %r14,(%rsp)
   1b8ef:	4c 8b 35 22 a1 02 00 	mov    0x2a122(%rip),%r14        # 45a18 <__errno_location@GLIBC_2.2.5>
   1b8f6:	4c 8b 2d 5b a5 02 00 	mov    0x2a55b(%rip),%r13        # 45e58 <open64@GLIBC_2.2.5>
   1b8fd:	0f 1f 00             	nopl   (%rax)
   1b900:	41 ff d6             	callq  *%r14
   1b903:	8b 18                	mov    (%rax),%ebx
   1b905:	89 df                	mov    %ebx,%edi
   1b907:	e8 24 0a 00 00       	callq  1c330 <std::sys::unix::decode_error_kind>
   1b90c:	3c 0f                	cmp    $0xf,%al
   1b90e:	75 2e                	jne    1b93e <std::sys::unix::fs::File::open_c+0x14e>
   1b910:	4c 89 ff             	mov    %r15,%rdi
   1b913:	89 ee                	mov    %ebp,%esi
   1b915:	44 89 e2             	mov    %r12d,%edx
   1b918:	31 c0                	xor    %eax,%eax
   1b91a:	41 ff d5             	callq  *%r13
   1b91d:	83 f8 ff             	cmp    $0xffffffff,%eax
   1b920:	74 de                	je     1b900 <std::sys::unix::fs::File::open_c+0x110>
   1b922:	4c 8b 34 24          	mov    (%rsp),%r14
   1b926:	31 db                	xor    %ebx,%ebx
   1b928:	41 89 46 04          	mov    %eax,0x4(%r14)
   1b92c:	41 89 1e             	mov    %ebx,(%r14)
   1b92f:	48 83 c4 08          	add    $0x8,%rsp
   1b933:	5b                   	pop    %rbx
   1b934:	41 5c                	pop    %r12
   1b936:	41 5d                	pop    %r13
   1b938:	41 5e                	pop    %r14
   1b93a:	41 5f                	pop    %r15
   1b93c:	5d                   	pop    %rbp
   1b93d:	c3                   	retq   
   1b93e:	48 c1 e3 20          	shl    $0x20,%rbx
   1b942:	4c 8b 34 24          	mov    (%rsp),%r14
   1b946:	49 89 5e 08          	mov    %rbx,0x8(%r14)
   1b94a:	e9 20 ff ff ff       	jmpq   1b86f <std::sys::unix::fs::File::open_c+0x7f>
   1b94f:	0f b6 d2             	movzbl %dl,%edx
   1b952:	c1 e2 09             	shl    $0x9,%edx
   1b955:	e9 65 ff ff ff       	jmpq   1b8bf <std::sys::unix::fs::File::open_c+0xcf>
   1b95a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001b960 <std::sys::unix::fs::readlink>:
   1b960:	55                   	push   %rbp
   1b961:	41 57                	push   %r15
   1b963:	41 56                	push   %r14
   1b965:	41 55                	push   %r13
   1b967:	41 54                	push   %r12
   1b969:	53                   	push   %rbx
   1b96a:	48 83 ec 48          	sub    $0x48,%rsp
   1b96e:	49 89 d4             	mov    %rdx,%r12
   1b971:	49 89 f6             	mov    %rsi,%r14
   1b974:	49 89 ff             	mov    %rdi,%r15
   1b977:	48 89 d3             	mov    %rdx,%rbx
   1b97a:	48 ff c3             	inc    %rbx
   1b97d:	75 35                	jne    1b9b4 <std::sys::unix::fs::readlink+0x54>
   1b97f:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
   1b986:	be 01 00 00 00       	mov    $0x1,%esi
   1b98b:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   1b992:	ff 15 e8 a1 02 00    	callq  *0x2a1e8(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   1b998:	48 89 c5             	mov    %rax,%rbp
   1b99b:	48 85 c0             	test   %rax,%rax
   1b99e:	75 2e                	jne    1b9ce <std::sys::unix::fs::readlink+0x6e>
   1b9a0:	be 01 00 00 00       	mov    $0x1,%esi
   1b9a5:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   1b9ac:	ff 15 6e a1 02 00    	callq  *0x2a16e(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   1b9b2:	0f 0b                	ud2    
   1b9b4:	be 01 00 00 00       	mov    $0x1,%esi
   1b9b9:	48 89 df             	mov    %rbx,%rdi
   1b9bc:	ff 15 be a1 02 00    	callq  *0x2a1be(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   1b9c2:	48 85 c0             	test   %rax,%rax
   1b9c5:	0f 84 76 02 00 00    	je     1bc41 <std::sys::unix::fs::readlink+0x2e1>
   1b9cb:	48 89 c5             	mov    %rax,%rbp
   1b9ce:	48 89 ef             	mov    %rbp,%rdi
   1b9d1:	4c 89 f6             	mov    %r14,%rsi
   1b9d4:	4c 89 e2             	mov    %r12,%rdx
   1b9d7:	ff 15 1b a3 02 00    	callq  *0x2a31b(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
   1b9dd:	48 89 ef             	mov    %rbp,%rdi
   1b9e0:	31 f6                	xor    %esi,%esi
   1b9e2:	4c 89 e2             	mov    %r12,%rdx
   1b9e5:	ff 15 7d a2 02 00    	callq  *0x2a27d(%rip)        # 45c68 <memchr@GLIBC_2.2.5>
   1b9eb:	48 85 c0             	test   %rax,%rax
   1b9ee:	74 36                	je     1ba26 <std::sys::unix::fs::readlink+0xc6>
   1b9f0:	48 29 e8             	sub    %rbp,%rax
   1b9f3:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1b9f8:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
   1b9fd:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   1ba02:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
   1ba07:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   1ba0c:	ff 15 06 a1 02 00    	callq  *0x2a106(%rip)        # 45b18 <_GLOBAL_OFFSET_TABLE_+0x190>
   1ba12:	49 89 57 10          	mov    %rdx,0x10(%r15)
   1ba16:	49 89 47 08          	mov    %rax,0x8(%r15)
   1ba1a:	49 c7 07 01 00 00 00 	movq   $0x1,(%r15)
   1ba21:	e9 5f 01 00 00       	jmpq   1bb85 <std::sys::unix::fs::readlink+0x225>
   1ba26:	48 89 6c 24 08       	mov    %rbp,0x8(%rsp)
   1ba2b:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
   1ba30:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   1ba35:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   1ba3a:	ff 15 08 a3 02 00    	callq  *0x2a308(%rip)        # 45d48 <_GLOBAL_OFFSET_TABLE_+0x3c0>
   1ba40:	49 89 c4             	mov    %rax,%r12
   1ba43:	48 89 d5             	mov    %rdx,%rbp
   1ba46:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1ba4b:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
   1ba50:	bb 00 01 00 00       	mov    $0x100,%ebx
   1ba55:	bf 00 01 00 00       	mov    $0x100,%edi
   1ba5a:	be 01 00 00 00       	mov    $0x1,%esi
   1ba5f:	ff 15 1b a1 02 00    	callq  *0x2a11b(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   1ba65:	48 85 c0             	test   %rax,%rax
   1ba68:	0f 84 e3 01 00 00    	je     1bc51 <std::sys::unix::fs::readlink+0x2f1>
   1ba6e:	49 89 c5             	mov    %rax,%r13
   1ba71:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1ba76:	0f 28 05 f3 a7 01 00 	movaps 0x1a7f3(%rip),%xmm0        # 36270 <_fini+0x94c>
   1ba7d:	0f 11 44 24 10       	movups %xmm0,0x10(%rsp)
   1ba82:	ba 00 01 00 00       	mov    $0x100,%edx
   1ba87:	4c 89 e7             	mov    %r12,%rdi
   1ba8a:	48 89 c6             	mov    %rax,%rsi
   1ba8d:	ff 15 25 a0 02 00    	callq  *0x2a025(%rip)        # 45ab8 <readlink@GLIBC_2.2.5>
   1ba93:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1ba97:	0f 84 9b 00 00 00    	je     1bb38 <std::sys::unix::fs::readlink+0x1d8>
   1ba9d:	48 89 6c 24 28       	mov    %rbp,0x28(%rsp)
   1baa2:	4c 89 7c 24 30       	mov    %r15,0x30(%rsp)
   1baa7:	bb 00 01 00 00       	mov    $0x100,%ebx
   1baac:	4c 8b 7c 24 08       	mov    0x8(%rsp),%r15
   1bab1:	4c 8b 35 00 a0 02 00 	mov    0x2a000(%rip),%r14        # 45ab8 <readlink@GLIBC_2.2.5>
   1bab8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1babf:	00 
   1bac0:	48 89 c5             	mov    %rax,%rbp
   1bac3:	48 39 c3             	cmp    %rax,%rbx
   1bac6:	0f 85 cb 00 00 00    	jne    1bb97 <std::sys::unix::fs::readlink+0x237>
   1bacc:	48 8d 5d 01          	lea    0x1(%rbp),%rbx
   1bad0:	48 89 e8             	mov    %rbp,%rax
   1bad3:	48 01 e8             	add    %rbp,%rax
   1bad6:	48 39 d8             	cmp    %rbx,%rax
   1bad9:	48 0f 47 d8          	cmova  %rax,%rbx
   1badd:	48 83 fb 08          	cmp    $0x8,%rbx
   1bae1:	b8 08 00 00 00       	mov    $0x8,%eax
   1bae6:	48 0f 46 d8          	cmovbe %rax,%rbx
   1baea:	ba 01 00 00 00       	mov    $0x1,%edx
   1baef:	4c 89 ef             	mov    %r13,%rdi
   1baf2:	48 89 ee             	mov    %rbp,%rsi
   1baf5:	48 89 d9             	mov    %rbx,%rcx
   1baf8:	ff 15 7a a4 02 00    	callq  *0x2a47a(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
   1bafe:	48 85 c0             	test   %rax,%rax
   1bb01:	0f 84 35 01 00 00    	je     1bc3c <std::sys::unix::fs::readlink+0x2dc>
   1bb07:	49 89 c5             	mov    %rax,%r13
   1bb0a:	4c 89 e7             	mov    %r12,%rdi
   1bb0d:	48 89 c6             	mov    %rax,%rsi
   1bb10:	48 89 da             	mov    %rbx,%rdx
   1bb13:	41 ff d6             	callq  *%r14
   1bb16:	4d 89 ef             	mov    %r13,%r15
   1bb19:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1bb1d:	75 a1                	jne    1bac0 <std::sys::unix::fs::readlink+0x160>
   1bb1f:	4c 89 6c 24 08       	mov    %r13,0x8(%rsp)
   1bb24:	48 89 6c 24 18       	mov    %rbp,0x18(%rsp)
   1bb29:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
   1bb2e:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
   1bb33:	48 8b 6c 24 28       	mov    0x28(%rsp),%rbp
   1bb38:	ff 15 da 9e 02 00    	callq  *0x29eda(%rip)        # 45a18 <__errno_location@GLIBC_2.2.5>
   1bb3e:	8b 00                	mov    (%rax),%eax
   1bb40:	48 c1 e0 20          	shl    $0x20,%rax
   1bb44:	49 89 47 08          	mov    %rax,0x8(%r15)
   1bb48:	49 c7 47 10 00 00 00 	movq   $0x0,0x10(%r15)
   1bb4f:	00 
   1bb50:	49 c7 07 01 00 00 00 	movq   $0x1,(%r15)
   1bb57:	ba 01 00 00 00       	mov    $0x1,%edx
   1bb5c:	4c 89 ef             	mov    %r13,%rdi
   1bb5f:	48 89 de             	mov    %rbx,%rsi
   1bb62:	ff 15 90 a0 02 00    	callq  *0x2a090(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   1bb68:	41 c6 04 24 00       	movb   $0x0,(%r12)
   1bb6d:	48 85 ed             	test   %rbp,%rbp
   1bb70:	74 13                	je     1bb85 <std::sys::unix::fs::readlink+0x225>
   1bb72:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
   1bb77:	ba 01 00 00 00       	mov    $0x1,%edx
   1bb7c:	48 89 ee             	mov    %rbp,%rsi
   1bb7f:	ff 15 73 a0 02 00    	callq  *0x2a073(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   1bb85:	4c 89 f8             	mov    %r15,%rax
   1bb88:	48 83 c4 48          	add    $0x48,%rsp
   1bb8c:	5b                   	pop    %rbx
   1bb8d:	41 5c                	pop    %r12
   1bb8f:	41 5d                	pop    %r13
   1bb91:	41 5e                	pop    %r14
   1bb93:	41 5f                	pop    %r15
   1bb95:	5d                   	pop    %rbp
   1bb96:	c3                   	retq   
   1bb97:	4c 89 7c 24 08       	mov    %r15,0x8(%rsp)
   1bb9c:	48 89 6c 24 18       	mov    %rbp,0x18(%rsp)
   1bba1:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
   1bba6:	48 39 eb             	cmp    %rbp,%rbx
   1bba9:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
   1bbae:	76 52                	jbe    1bc02 <std::sys::unix::fs::readlink+0x2a2>
   1bbb0:	48 85 ed             	test   %rbp,%rbp
   1bbb3:	74 2c                	je     1bbe1 <std::sys::unix::fs::readlink+0x281>
   1bbb5:	ba 01 00 00 00       	mov    $0x1,%edx
   1bbba:	4c 89 ef             	mov    %r13,%rdi
   1bbbd:	48 89 de             	mov    %rbx,%rsi
   1bbc0:	48 89 e9             	mov    %rbp,%rcx
   1bbc3:	ff 15 af a3 02 00    	callq  *0x2a3af(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
   1bbc9:	49 89 c6             	mov    %rax,%r14
   1bbcc:	48 85 c0             	test   %rax,%rax
   1bbcf:	75 27                	jne    1bbf8 <std::sys::unix::fs::readlink+0x298>
   1bbd1:	be 01 00 00 00       	mov    $0x1,%esi
   1bbd6:	48 89 ef             	mov    %rbp,%rdi
   1bbd9:	ff 15 41 9f 02 00    	callq  *0x29f41(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   1bbdf:	0f 0b                	ud2    
   1bbe1:	41 be 01 00 00 00    	mov    $0x1,%r14d
   1bbe7:	ba 01 00 00 00       	mov    $0x1,%edx
   1bbec:	4c 89 ef             	mov    %r13,%rdi
   1bbef:	48 89 de             	mov    %rbx,%rsi
   1bbf2:	ff 15 00 a0 02 00    	callq  *0x2a000(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   1bbf8:	4c 89 74 24 08       	mov    %r14,0x8(%rsp)
   1bbfd:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
   1bc02:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1bc07:	49 89 47 18          	mov    %rax,0x18(%r15)
   1bc0b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1bc10:	49 89 47 08          	mov    %rax,0x8(%r15)
   1bc14:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1bc19:	49 89 47 10          	mov    %rax,0x10(%r15)
   1bc1d:	49 c7 07 00 00 00 00 	movq   $0x0,(%r15)
   1bc24:	48 8b 6c 24 28       	mov    0x28(%rsp),%rbp
   1bc29:	41 c6 04 24 00       	movb   $0x0,(%r12)
   1bc2e:	48 85 ed             	test   %rbp,%rbp
   1bc31:	0f 85 3b ff ff ff    	jne    1bb72 <std::sys::unix::fs::readlink+0x212>
   1bc37:	e9 49 ff ff ff       	jmpq   1bb85 <std::sys::unix::fs::readlink+0x225>
   1bc3c:	4c 89 7c 24 08       	mov    %r15,0x8(%rsp)
   1bc41:	be 01 00 00 00       	mov    $0x1,%esi
   1bc46:	48 89 df             	mov    %rbx,%rdi
   1bc49:	ff 15 d1 9e 02 00    	callq  *0x29ed1(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   1bc4f:	0f 0b                	ud2    
   1bc51:	bf 00 01 00 00       	mov    $0x100,%edi
   1bc56:	be 01 00 00 00       	mov    $0x1,%esi
   1bc5b:	ff 15 bf 9e 02 00    	callq  *0x29ebf(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   1bc61:	0f 0b                	ud2    
   1bc63:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1bc6a:	00 00 00 
   1bc6d:	0f 1f 00             	nopl   (%rax)

000000000001bc70 <std::sys::unix::os::error_string>:
   1bc70:	41 57                	push   %r15
   1bc72:	41 56                	push   %r14
   1bc74:	41 54                	push   %r12
   1bc76:	53                   	push   %rbx
   1bc77:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
   1bc7e:	89 f0                	mov    %esi,%eax
   1bc80:	49 89 fe             	mov    %rdi,%r14
   1bc83:	0f 57 c0             	xorps  %xmm0,%xmm0
   1bc86:	0f 29 84 24 a0 00 00 	movaps %xmm0,0xa0(%rsp)
   1bc8d:	00 
   1bc8e:	0f 29 84 24 90 00 00 	movaps %xmm0,0x90(%rsp)
   1bc95:	00 
   1bc96:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
   1bc9d:	00 
   1bc9e:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
   1bca3:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
   1bca8:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   1bcad:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
   1bcb2:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
   1bcb7:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
   1bcbc:	ba 80 00 00 00       	mov    $0x80,%edx
   1bcc1:	89 c7                	mov    %eax,%edi
   1bcc3:	ff 15 df 9d 02 00    	callq  *0x29ddf(%rip)        # 45aa8 <__xpg_strerror_r@GLIBC_2.3.4>
   1bcc9:	85 c0                	test   %eax,%eax
   1bccb:	0f 88 97 00 00 00    	js     1bd68 <std::sys::unix::os::error_string+0xf8>
   1bcd1:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
   1bcd6:	ff 15 6c 9e 02 00    	callq  *0x29e6c(%rip)        # 45b48 <strlen@GLIBC_2.2.5>
   1bcdc:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1bce0:	0f 84 9c 00 00 00    	je     1bd82 <std::sys::unix::os::error_string+0x112>
   1bce6:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   1bceb:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
   1bcf0:	48 89 c2             	mov    %rax,%rdx
   1bcf3:	ff 15 cf 9e 02 00    	callq  *0x29ecf(%rip)        # 45bc8 <_GLOBAL_OFFSET_TABLE_+0x240>
   1bcf9:	83 7c 24 08 01       	cmpl   $0x1,0x8(%rsp)
   1bcfe:	0f 84 96 00 00 00    	je     1bd9a <std::sys::unix::os::error_string+0x12a>
   1bd04:	4c 8b 7c 24 10       	mov    0x10(%rsp),%r15
   1bd09:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   1bd0e:	48 85 db             	test   %rbx,%rbx
   1bd11:	74 26                	je     1bd39 <std::sys::unix::os::error_string+0xc9>
   1bd13:	be 01 00 00 00       	mov    $0x1,%esi
   1bd18:	48 89 df             	mov    %rbx,%rdi
   1bd1b:	ff 15 5f 9e 02 00    	callq  *0x29e5f(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   1bd21:	49 89 c4             	mov    %rax,%r12
   1bd24:	48 85 c0             	test   %rax,%rax
   1bd27:	75 16                	jne    1bd3f <std::sys::unix::os::error_string+0xcf>
   1bd29:	be 01 00 00 00       	mov    $0x1,%esi
   1bd2e:	48 89 df             	mov    %rbx,%rdi
   1bd31:	ff 15 e9 9d 02 00    	callq  *0x29de9(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   1bd37:	0f 0b                	ud2    
   1bd39:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   1bd3f:	4c 89 e7             	mov    %r12,%rdi
   1bd42:	4c 89 fe             	mov    %r15,%rsi
   1bd45:	48 89 da             	mov    %rbx,%rdx
   1bd48:	ff 15 aa 9f 02 00    	callq  *0x29faa(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
   1bd4e:	4d 89 26             	mov    %r12,(%r14)
   1bd51:	49 89 5e 08          	mov    %rbx,0x8(%r14)
   1bd55:	49 89 5e 10          	mov    %rbx,0x10(%r14)
   1bd59:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
   1bd60:	5b                   	pop    %rbx
   1bd61:	41 5c                	pop    %r12
   1bd63:	41 5e                	pop    %r14
   1bd65:	41 5f                	pop    %r15
   1bd67:	c3                   	retq   
   1bd68:	48 8d 3d cf c5 01 00 	lea    0x1c5cf(%rip),%rdi        # 3833e <str.6+0x101e>
   1bd6f:	48 8d 15 f2 87 02 00 	lea    0x287f2(%rip),%rdx        # 44568 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1030>
   1bd76:	be 12 00 00 00       	mov    $0x12,%esi
   1bd7b:	e8 80 e7 ff ff       	callq  1a500 <std::panicking::begin_panic>
   1bd80:	0f 0b                	ud2    
   1bd82:	48 8d 15 47 7e 02 00 	lea    0x27e47(%rip),%rdx        # 43bd0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x698>
   1bd89:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   1bd90:	31 f6                	xor    %esi,%esi
   1bd92:	ff 15 90 9c 02 00    	callq  *0x29c90(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   1bd98:	0f 0b                	ud2    
   1bd9a:	0f 10 44 24 10       	movups 0x10(%rsp),%xmm0
   1bd9f:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   1bda4:	48 8d 3d 7a b8 01 00 	lea    0x1b87a(%rip),%rdi        # 37625 <str.6+0x305>
   1bdab:	48 8d 0d ce 7a 02 00 	lea    0x27ace(%rip),%rcx        # 43880 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x348>
   1bdb2:	4c 8d 05 c7 87 02 00 	lea    0x287c7(%rip),%r8        # 44580 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1048>
   1bdb9:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
   1bdbe:	be 2b 00 00 00       	mov    $0x2b,%esi
   1bdc3:	ff 15 17 9e 02 00    	callq  *0x29e17(%rip)        # 45be0 <_GLOBAL_OFFSET_TABLE_+0x258>
   1bdc9:	0f 0b                	ud2    
   1bdcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001bdd0 <std::sys::unix::stack_overflow::imp::signal_handler>:
   1bdd0:	55                   	push   %rbp
   1bdd1:	41 57                	push   %r15
   1bdd3:	41 56                	push   %r14
   1bdd5:	53                   	push   %rbx
   1bdd6:	48 81 ec c8 00 00 00 	sub    $0xc8,%rsp
   1bddd:	49 89 f7             	mov    %rsi,%r15
   1bde0:	41 89 fe             	mov    %edi,%r14d
   1bde3:	66 66 66 64 48 8b 04 	data16 data16 data16 mov %fs:0x0,%rax
   1bdea:	25 00 00 00 00 
   1bdef:	83 b8 a0 ff ff ff 01 	cmpl   $0x1,-0x60(%rax)
   1bdf6:	75 09                	jne    1be01 <std::sys::unix::stack_overflow::imp::signal_handler+0x31>
   1bdf8:	48 8d a8 a8 ff ff ff 	lea    -0x58(%rax),%rbp
   1bdff:	eb 11                	jmp    1be12 <std::sys::unix::stack_overflow::imp::signal_handler+0x42>
   1be01:	e8 fa 77 ff ff       	callq  13600 <std::thread::local::fast::Key<T>::try_initialize>
   1be06:	48 89 c5             	mov    %rax,%rbp
   1be09:	48 85 c0             	test   %rax,%rax
   1be0c:	0f 84 48 01 00 00    	je     1bf5a <std::sys::unix::stack_overflow::imp::signal_handler+0x18a>
   1be12:	48 8b 45 00          	mov    0x0(%rbp),%rax
   1be16:	48 8d 48 01          	lea    0x1(%rax),%rcx
   1be1a:	48 85 c9             	test   %rcx,%rcx
   1be1d:	0f 8e 7f 01 00 00    	jle    1bfa2 <std::sys::unix::stack_overflow::imp::signal_handler+0x1d2>
   1be23:	48 83 7d 08 02       	cmpq   $0x2,0x8(%rbp)
   1be28:	75 7a                	jne    1bea4 <std::sys::unix::stack_overflow::imp::signal_handler+0xd4>
   1be2a:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   1be31:	00 00 
   1be33:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1be38:	ff 15 42 a1 02 00    	callq  *0x2a142(%rip)        # 45f80 <_GLOBAL_OFFSET_TABLE_+0x5f8>
   1be3e:	0f 10 44 24 10       	movups 0x10(%rsp),%xmm0
   1be43:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   1be4a:	00 00 
   1be4c:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
   1be51:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1be56:	48 83 7d 00 00       	cmpq   $0x0,0x0(%rbp)
   1be5b:	0f 85 aa 01 00 00    	jne    1c00b <std::sys::unix::stack_overflow::imp::signal_handler+0x23b>
   1be61:	48 8d 5d 08          	lea    0x8(%rbp),%rbx
   1be65:	48 c7 45 00 ff ff ff 	movq   $0xffffffffffffffff,0x0(%rbp)
   1be6c:	ff 
   1be6d:	83 7d 08 02          	cmpl   $0x2,0x8(%rbp)
   1be71:	74 14                	je     1be87 <std::sys::unix::stack_overflow::imp::signal_handler+0xb7>
   1be73:	48 8b 45 20          	mov    0x20(%rbp),%rax
   1be77:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   1be7c:	75 09                	jne    1be87 <std::sys::unix::stack_overflow::imp::signal_handler+0xb7>
   1be7e:	48 8d 7d 20          	lea    0x20(%rbp),%rdi
   1be82:	e8 f9 da fe ff       	callq  9980 <alloc::sync::Arc<T>::drop_slow>
   1be87:	0f 10 44 24 10       	movups 0x10(%rsp),%xmm0
   1be8c:	0f 10 4c 24 20       	movups 0x20(%rsp),%xmm1
   1be91:	0f 11 4b 10          	movups %xmm1,0x10(%rbx)
   1be95:	0f 11 03             	movups %xmm0,(%rbx)
   1be98:	48 8b 45 00          	mov    0x0(%rbp),%rax
   1be9c:	48 83 c0 01          	add    $0x1,%rax
   1bea0:	48 89 45 00          	mov    %rax,0x0(%rbp)
   1bea4:	48 85 c0             	test   %rax,%rax
   1bea7:	0f 85 37 01 00 00    	jne    1bfe4 <std::sys::unix::stack_overflow::imp::signal_handler+0x214>
   1bead:	48 c7 45 00 ff ff ff 	movq   $0xffffffffffffffff,0x0(%rbp)
   1beb4:	ff 
   1beb5:	48 8b 45 08          	mov    0x8(%rbp),%rax
   1beb9:	48 83 f8 01          	cmp    $0x1,%rax
   1bebd:	74 0d                	je     1becc <std::sys::unix::stack_overflow::imp::signal_handler+0xfc>
   1bebf:	83 f8 02             	cmp    $0x2,%eax
   1bec2:	0f 84 01 01 00 00    	je     1bfc9 <std::sys::unix::stack_overflow::imp::signal_handler+0x1f9>
   1bec8:	31 c9                	xor    %ecx,%ecx
   1beca:	eb 0d                	jmp    1bed9 <std::sys::unix::stack_overflow::imp::signal_handler+0x109>
   1becc:	48 8b 55 10          	mov    0x10(%rbp),%rdx
   1bed0:	48 8b 45 18          	mov    0x18(%rbp),%rax
   1bed4:	b9 01 00 00 00       	mov    $0x1,%ecx
   1bed9:	48 c7 45 00 00 00 00 	movq   $0x0,0x0(%rbp)
   1bee0:	00 
   1bee1:	48 85 c9             	test   %rcx,%rcx
   1bee4:	48 0f 44 c1          	cmove  %rcx,%rax
   1bee8:	48 0f 44 d1          	cmove  %rcx,%rdx
   1beec:	49 8b 4f 10          	mov    0x10(%r15),%rcx
   1bef0:	48 39 ca             	cmp    %rcx,%rdx
   1bef3:	77 05                	ja     1befa <std::sys::unix::stack_overflow::imp::signal_handler+0x12a>
   1bef5:	48 39 c1             	cmp    %rax,%rcx
   1bef8:	72 64                	jb     1bf5e <std::sys::unix::stack_overflow::imp::signal_handler+0x18e>
   1befa:	0f 57 c0             	xorps  %xmm0,%xmm0
   1befd:	0f 29 84 24 90 00 00 	movaps %xmm0,0x90(%rsp)
   1bf04:	00 
   1bf05:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
   1bf0c:	00 
   1bf0d:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
   1bf12:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
   1bf17:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   1bf1c:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
   1bf21:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
   1bf26:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   1bf2b:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   1bf30:	48 c7 84 24 a0 00 00 	movq   $0x0,0xa0(%rsp)
   1bf37:	00 00 00 00 00 
   1bf3c:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   1bf41:	44 89 f7             	mov    %r14d,%edi
   1bf44:	31 d2                	xor    %edx,%edx
   1bf46:	ff 15 1c 9b 02 00    	callq  *0x29b1c(%rip)        # 45a68 <sigaction@GLIBC_2.2.5>
   1bf4c:	48 81 c4 c8 00 00 00 	add    $0xc8,%rsp
   1bf53:	5b                   	pop    %rbx
   1bf54:	41 5e                	pop    %r14
   1bf56:	41 5f                	pop    %r15
   1bf58:	5d                   	pop    %rbp
   1bf59:	c3                   	retq   
   1bf5a:	31 c9                	xor    %ecx,%ecx
   1bf5c:	eb 83                	jmp    1bee1 <std::sys::unix::stack_overflow::imp::signal_handler+0x111>
   1bf5e:	e8 5d d7 ff ff       	callq  196c0 <std::sys_common::util::report_overflow>
   1bf63:	48 8d 05 5e 86 02 00 	lea    0x2865e(%rip),%rax        # 445c8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1090>
   1bf6a:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1bf6f:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
   1bf76:	00 00 
   1bf78:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   1bf7f:	00 00 
   1bf81:	48 8d 05 d0 b2 01 00 	lea    0x1b2d0(%rip),%rax        # 37258 <_fini+0x1934>
   1bf88:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1bf8d:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   1bf94:	00 00 
   1bf96:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1bf9b:	e8 c0 d6 ff ff       	callq  19660 <std::sys_common::util::abort>
   1bfa0:	0f 0b                	ud2    
   1bfa2:	48 8d 3d ff b3 01 00 	lea    0x1b3ff(%rip),%rdi        # 373a8 <str.6+0x88>
   1bfa9:	48 8d 0d b0 78 02 00 	lea    0x278b0(%rip),%rcx        # 43860 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x328>
   1bfb0:	4c 8d 05 a9 80 02 00 	lea    0x280a9(%rip),%r8        # 44060 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xb28>
   1bfb7:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   1bfbc:	be 18 00 00 00       	mov    $0x18,%esi
   1bfc1:	ff 15 19 9c 02 00    	callq  *0x29c19(%rip)        # 45be0 <_GLOBAL_OFFSET_TABLE_+0x258>
   1bfc7:	eb 67                	jmp    1c030 <std::sys::unix::stack_overflow::imp::signal_handler+0x260>
   1bfc9:	48 8d 3d 2a b6 01 00 	lea    0x1b62a(%rip),%rdi        # 375fa <str.6+0x2da>
   1bfd0:	48 8d 15 d1 80 02 00 	lea    0x280d1(%rip),%rdx        # 440a8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xb70>
   1bfd7:	be 2b 00 00 00       	mov    $0x2b,%esi
   1bfdc:	ff 15 f6 9e 02 00    	callq  *0x29ef6(%rip)        # 45ed8 <_GLOBAL_OFFSET_TABLE_+0x550>
   1bfe2:	eb 4c                	jmp    1c030 <std::sys::unix::stack_overflow::imp::signal_handler+0x260>
   1bfe4:	48 8d 3d e5 a2 01 00 	lea    0x1a2e5(%rip),%rdi        # 362d0 <_fini+0x9ac>
   1bfeb:	48 8d 0d ee 77 02 00 	lea    0x277ee(%rip),%rcx        # 437e0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2a8>
   1bff2:	4c 8d 05 97 80 02 00 	lea    0x28097(%rip),%r8        # 44090 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xb58>
   1bff9:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   1bffe:	be 10 00 00 00       	mov    $0x10,%esi
   1c003:	ff 15 d7 9b 02 00    	callq  *0x29bd7(%rip)        # 45be0 <_GLOBAL_OFFSET_TABLE_+0x258>
   1c009:	eb 25                	jmp    1c030 <std::sys::unix::stack_overflow::imp::signal_handler+0x260>
   1c00b:	48 8d 3d be a2 01 00 	lea    0x1a2be(%rip),%rdi        # 362d0 <_fini+0x9ac>
   1c012:	48 8d 0d c7 77 02 00 	lea    0x277c7(%rip),%rcx        # 437e0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2a8>
   1c019:	4c 8d 05 58 80 02 00 	lea    0x28058(%rip),%r8        # 44078 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xb40>
   1c020:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   1c025:	be 10 00 00 00       	mov    $0x10,%esi
   1c02a:	ff 15 b0 9b 02 00    	callq  *0x29bb0(%rip)        # 45be0 <_GLOBAL_OFFSET_TABLE_+0x258>
   1c030:	0f 0b                	ud2    
   1c032:	48 89 c3             	mov    %rax,%rbx
   1c035:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1c03a:	e8 d1 a1 fe ff       	callq  6210 <core::ptr::drop_in_place>
   1c03f:	eb 12                	jmp    1c053 <std::sys::unix::stack_overflow::imp::signal_handler+0x283>
   1c041:	eb 0d                	jmp    1c050 <std::sys::unix::stack_overflow::imp::signal_handler+0x280>
   1c043:	48 89 c3             	mov    %rax,%rbx
   1c046:	48 89 ef             	mov    %rbp,%rdi
   1c049:	e8 02 9e fe ff       	callq  5e50 <core::ptr::drop_in_place>
   1c04e:	eb 03                	jmp    1c053 <std::sys::unix::stack_overflow::imp::signal_handler+0x283>
   1c050:	48 89 c3             	mov    %rax,%rbx
   1c053:	48 89 df             	mov    %rbx,%rdi
   1c056:	e8 f5 8f fe ff       	callq  5050 <_Unwind_Resume@plt>
   1c05b:	0f 0b                	ud2    
   1c05d:	0f 1f 00             	nopl   (%rax)

000000000001c060 <std::sys::unix::stack_overflow::imp::make_handler>:
   1c060:	53                   	push   %rbx
   1c061:	48 83 ec 20          	sub    $0x20,%rsp
   1c065:	8a 05 c6 a1 02 00    	mov    0x2a1c6(%rip),%al        # 46231 <_ZN3std3sys4unix14stack_overflow3imp13NEED_ALTSTACK17hb61d576fcc5bc78fE.0.0>
   1c06b:	84 c0                	test   %al,%al
   1c06d:	0f 84 b9 00 00 00    	je     1c12c <std::sys::unix::stack_overflow::imp::make_handler+0xcc>
   1c073:	0f 57 c0             	xorps  %xmm0,%xmm0
   1c076:	0f 29 04 24          	movaps %xmm0,(%rsp)
   1c07a:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   1c081:	00 00 
   1c083:	31 db                	xor    %ebx,%ebx
   1c085:	48 89 e6             	mov    %rsp,%rsi
   1c088:	31 ff                	xor    %edi,%edi
   1c08a:	ff 15 e0 9e 02 00    	callq  *0x29ee0(%rip)        # 45f70 <sigaltstack@GLIBC_2.2.5>
   1c090:	f6 44 24 08 02       	testb  $0x2,0x8(%rsp)
   1c095:	0f 84 88 00 00 00    	je     1c123 <std::sys::unix::stack_overflow::imp::make_handler+0xc3>
   1c09b:	bf 1e 00 00 00       	mov    $0x1e,%edi
   1c0a0:	ff 15 42 9e 02 00    	callq  *0x29e42(%rip)        # 45ee8 <sysconf@GLIBC_2.2.5>
   1c0a6:	48 8d b0 00 20 00 00 	lea    0x2000(%rax),%rsi
   1c0ad:	bf 00 00 00 00       	mov    $0x0,%edi
   1c0b2:	ba 03 00 00 00       	mov    $0x3,%edx
   1c0b7:	b9 22 00 00 00       	mov    $0x22,%ecx
   1c0bc:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
   1c0c2:	45 31 c9             	xor    %r9d,%r9d
   1c0c5:	ff 15 95 9a 02 00    	callq  *0x29a95(%rip)        # 45b60 <mmap@GLIBC_2.2.5>
   1c0cb:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1c0cf:	74 66                	je     1c137 <std::sys::unix::stack_overflow::imp::make_handler+0xd7>
   1c0d1:	48 89 c3             	mov    %rax,%rbx
   1c0d4:	bf 1e 00 00 00       	mov    $0x1e,%edi
   1c0d9:	ff 15 09 9e 02 00    	callq  *0x29e09(%rip)        # 45ee8 <sysconf@GLIBC_2.2.5>
   1c0df:	48 89 df             	mov    %rbx,%rdi
   1c0e2:	48 89 c6             	mov    %rax,%rsi
   1c0e5:	31 d2                	xor    %edx,%edx
   1c0e7:	ff 15 d3 9d 02 00    	callq  *0x29dd3(%rip)        # 45ec0 <mprotect@GLIBC_2.2.5>
   1c0ed:	85 c0                	test   %eax,%eax
   1c0ef:	75 60                	jne    1c151 <std::sys::unix::stack_overflow::imp::make_handler+0xf1>
   1c0f1:	bf 1e 00 00 00       	mov    $0x1e,%edi
   1c0f6:	ff 15 ec 9d 02 00    	callq  *0x29dec(%rip)        # 45ee8 <sysconf@GLIBC_2.2.5>
   1c0fc:	48 01 c3             	add    %rax,%rbx
   1c0ff:	48 89 1c 24          	mov    %rbx,(%rsp)
   1c103:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%rsp)
   1c10a:	00 
   1c10b:	48 c7 44 24 10 00 20 	movq   $0x2000,0x10(%rsp)
   1c112:	00 00 
   1c114:	48 89 e7             	mov    %rsp,%rdi
   1c117:	31 f6                	xor    %esi,%esi
   1c119:	ff 15 51 9e 02 00    	callq  *0x29e51(%rip)        # 45f70 <sigaltstack@GLIBC_2.2.5>
   1c11f:	48 8b 1c 24          	mov    (%rsp),%rbx
   1c123:	48 89 d8             	mov    %rbx,%rax
   1c126:	48 83 c4 20          	add    $0x20,%rsp
   1c12a:	5b                   	pop    %rbx
   1c12b:	c3                   	retq   
   1c12c:	31 db                	xor    %ebx,%ebx
   1c12e:	48 89 d8             	mov    %rbx,%rax
   1c131:	48 83 c4 20          	add    $0x20,%rsp
   1c135:	5b                   	pop    %rbx
   1c136:	c3                   	retq   
   1c137:	48 8d 3d f3 c2 01 00 	lea    0x1c2f3(%rip),%rdi        # 38431 <str.6+0x1111>
   1c13e:	48 8d 15 93 84 02 00 	lea    0x28493(%rip),%rdx        # 445d8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x10a0>
   1c145:	be 27 00 00 00       	mov    $0x27,%esi
   1c14a:	e8 b1 e3 ff ff       	callq  1a500 <std::panicking::begin_panic>
   1c14f:	0f 0b                	ud2    
   1c151:	48 8d 3d 2a c3 01 00 	lea    0x1c32a(%rip),%rdi        # 38482 <str.6+0x1162>
   1c158:	48 8d 15 91 84 02 00 	lea    0x28491(%rip),%rdx        # 445f0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x10b8>
   1c15f:	be 2d 00 00 00       	mov    $0x2d,%esi
   1c164:	e8 97 e3 ff ff       	callq  1a500 <std::panicking::begin_panic>
   1c169:	0f 0b                	ud2    
   1c16b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001c170 <<std::sys::unix::stdio::Stderr as std::io::Write>::write>:
   1c170:	53                   	push   %rbx
   1c171:	48 89 fb             	mov    %rdi,%rbx
   1c174:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
   1c17b:	ff ff 7f 
   1c17e:	48 39 c1             	cmp    %rax,%rcx
   1c181:	48 0f 42 c1          	cmovb  %rcx,%rax
   1c185:	bf 02 00 00 00       	mov    $0x2,%edi
   1c18a:	48 89 d6             	mov    %rdx,%rsi
   1c18d:	48 89 c2             	mov    %rax,%rdx
   1c190:	ff 15 3a 99 02 00    	callq  *0x2993a(%rip)        # 45ad0 <write@GLIBC_2.2.5>
   1c196:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1c19a:	74 0e                	je     1c1aa <<std::sys::unix::stdio::Stderr as std::io::Write>::write+0x3a>
   1c19c:	48 89 43 08          	mov    %rax,0x8(%rbx)
   1c1a0:	31 c0                	xor    %eax,%eax
   1c1a2:	48 89 03             	mov    %rax,(%rbx)
   1c1a5:	48 89 d8             	mov    %rbx,%rax
   1c1a8:	5b                   	pop    %rbx
   1c1a9:	c3                   	retq   
   1c1aa:	ff 15 68 98 02 00    	callq  *0x29868(%rip)        # 45a18 <__errno_location@GLIBC_2.2.5>
   1c1b0:	8b 00                	mov    (%rax),%eax
   1c1b2:	48 c1 e0 20          	shl    $0x20,%rax
   1c1b6:	48 89 43 08          	mov    %rax,0x8(%rbx)
   1c1ba:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   1c1c1:	00 
   1c1c2:	b8 01 00 00 00       	mov    $0x1,%eax
   1c1c7:	48 89 03             	mov    %rax,(%rbx)
   1c1ca:	48 89 d8             	mov    %rbx,%rax
   1c1cd:	5b                   	pop    %rbx
   1c1ce:	c3                   	retq   
   1c1cf:	90                   	nop

000000000001c1d0 <<std::sys::unix::stdio::Stderr as std::io::Write>::write_vectored>:
   1c1d0:	53                   	push   %rbx
   1c1d1:	48 89 fb             	mov    %rdi,%rbx
   1c1d4:	48 81 f9 00 04 00 00 	cmp    $0x400,%rcx
   1c1db:	b8 00 04 00 00       	mov    $0x400,%eax
   1c1e0:	0f 42 c1             	cmovb  %ecx,%eax
   1c1e3:	bf 02 00 00 00       	mov    $0x2,%edi
   1c1e8:	48 89 d6             	mov    %rdx,%rsi
   1c1eb:	89 c2                	mov    %eax,%edx
   1c1ed:	ff 15 6d 98 02 00    	callq  *0x2986d(%rip)        # 45a60 <writev@GLIBC_2.2.5>
   1c1f3:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1c1f7:	74 0e                	je     1c207 <<std::sys::unix::stdio::Stderr as std::io::Write>::write_vectored+0x37>
   1c1f9:	48 89 43 08          	mov    %rax,0x8(%rbx)
   1c1fd:	31 c0                	xor    %eax,%eax
   1c1ff:	48 89 03             	mov    %rax,(%rbx)
   1c202:	48 89 d8             	mov    %rbx,%rax
   1c205:	5b                   	pop    %rbx
   1c206:	c3                   	retq   
   1c207:	ff 15 0b 98 02 00    	callq  *0x2980b(%rip)        # 45a18 <__errno_location@GLIBC_2.2.5>
   1c20d:	8b 00                	mov    (%rax),%eax
   1c20f:	48 c1 e0 20          	shl    $0x20,%rax
   1c213:	48 89 43 08          	mov    %rax,0x8(%rbx)
   1c217:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   1c21e:	00 
   1c21f:	b8 01 00 00 00       	mov    $0x1,%eax
   1c224:	48 89 03             	mov    %rax,(%rbx)
   1c227:	48 89 d8             	mov    %rbx,%rax
   1c22a:	5b                   	pop    %rbx
   1c22b:	c3                   	retq   
   1c22c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001c230 <<std::sys::unix::stdio::Stderr as std::io::Write>::is_write_vectored>:
   1c230:	b0 01                	mov    $0x1,%al
   1c232:	c3                   	retq   
   1c233:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1c23a:	00 00 00 
   1c23d:	0f 1f 00             	nopl   (%rax)

000000000001c240 <<std::sys::unix::stdio::Stderr as std::io::Write>::flush>:
   1c240:	b8 03 00 00 00       	mov    $0x3,%eax
   1c245:	31 d2                	xor    %edx,%edx
   1c247:	c3                   	retq   
   1c248:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1c24f:	00 

000000000001c250 <std::sys::unix::time::Timespec::sub_timespec>:
   1c250:	41 56                	push   %r14
   1c252:	53                   	push   %rbx
   1c253:	48 83 ec 18          	sub    $0x18,%rsp
   1c257:	48 89 f0             	mov    %rsi,%rax
   1c25a:	49 89 fe             	mov    %rdi,%r14
   1c25d:	48 8b 0e             	mov    (%rsi),%rcx
   1c260:	4c 8b 46 08          	mov    0x8(%rsi),%r8
   1c264:	48 8b 7a 08          	mov    0x8(%rdx),%rdi
   1c268:	31 db                	xor    %ebx,%ebx
   1c26a:	48 2b 0a             	sub    (%rdx),%rcx
   1c26d:	0f 95 c3             	setne  %bl
   1c270:	be ff 00 00 00       	mov    $0xff,%esi
   1c275:	0f 4d f3             	cmovge %ebx,%esi
   1c278:	49 39 f8             	cmp    %rdi,%r8
   1c27b:	0f 9c c3             	setl   %bl
   1c27e:	f6 db                	neg    %bl
   1c280:	40 84 f6             	test   %sil,%sil
   1c283:	0f b6 db             	movzbl %bl,%ebx
   1c286:	0f 45 de             	cmovne %esi,%ebx
   1c289:	80 fb 02             	cmp    $0x2,%bl
   1c28c:	73 4e                	jae    1c2dc <std::sys::unix::time::Timespec::sub_timespec+0x8c>
   1c28e:	44 89 c2             	mov    %r8d,%edx
   1c291:	29 fa                	sub    %edi,%edx
   1c293:	8d 82 00 ca 9a 3b    	lea    0x3b9aca00(%rdx),%eax
   1c299:	31 f6                	xor    %esi,%esi
   1c29b:	49 39 f8             	cmp    %rdi,%r8
   1c29e:	40 0f 9c c6          	setl   %sil
   1c2a2:	0f 4d c2             	cmovge %edx,%eax
   1c2a5:	48 29 f1             	sub    %rsi,%rcx
   1c2a8:	89 c2                	mov    %eax,%edx
   1c2aa:	c1 ea 09             	shr    $0x9,%edx
   1c2ad:	48 69 d2 83 4b 04 00 	imul   $0x44b83,%rdx,%rdx
   1c2b4:	48 c1 ea 27          	shr    $0x27,%rdx
   1c2b8:	48 01 d1             	add    %rdx,%rcx
   1c2bb:	72 51                	jb     1c30e <std::sys::unix::time::Timespec::sub_timespec+0xbe>
   1c2bd:	69 d2 00 ca 9a 3b    	imul   $0x3b9aca00,%edx,%edx
   1c2c3:	29 d0                	sub    %edx,%eax
   1c2c5:	49 89 4e 08          	mov    %rcx,0x8(%r14)
   1c2c9:	41 89 46 10          	mov    %eax,0x10(%r14)
   1c2cd:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
   1c2d4:	48 83 c4 18          	add    $0x18,%rsp
   1c2d8:	5b                   	pop    %rbx
   1c2d9:	41 5e                	pop    %r14
   1c2db:	c3                   	retq   
   1c2dc:	48 89 e7             	mov    %rsp,%rdi
   1c2df:	48 89 d6             	mov    %rdx,%rsi
   1c2e2:	48 89 c2             	mov    %rax,%rdx
   1c2e5:	e8 66 ff ff ff       	callq  1c250 <std::sys::unix::time::Timespec::sub_timespec>
   1c2ea:	48 8b 04 24          	mov    (%rsp),%rax
   1c2ee:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1c2f3:	8b 54 24 10          	mov    0x10(%rsp),%edx
   1c2f7:	49 89 4e 08          	mov    %rcx,0x8(%r14)
   1c2fb:	41 89 56 10          	mov    %edx,0x10(%r14)
   1c2ff:	48 83 f0 01          	xor    $0x1,%rax
   1c303:	49 89 06             	mov    %rax,(%r14)
   1c306:	48 83 c4 18          	add    $0x18,%rsp
   1c30a:	5b                   	pop    %rbx
   1c30b:	41 5e                	pop    %r14
   1c30d:	c3                   	retq   
   1c30e:	48 8d 3d e5 b0 01 00 	lea    0x1b0e5(%rip),%rdi        # 373fa <str.6+0xda>
   1c315:	48 8d 15 b4 73 02 00 	lea    0x273b4(%rip),%rdx        # 436d0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x198>
   1c31c:	be 19 00 00 00       	mov    $0x19,%esi
   1c321:	ff 15 b1 9b 02 00    	callq  *0x29bb1(%rip)        # 45ed8 <_GLOBAL_OFFSET_TABLE_+0x550>
   1c327:	0f 0b                	ud2    
   1c329:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001c330 <std::sys::unix::decode_error_kind>:
   1c330:	b1 10                	mov    $0x10,%cl
   1c332:	83 c7 ff             	add    $0xffffffff,%edi
   1c335:	83 ff 6e             	cmp    $0x6e,%edi
   1c338:	77 1d                	ja     1c357 <std::sys::unix::decode_error_kind+0x27>
   1c33a:	b0 02                	mov    $0x2,%al
   1c33c:	48 8d 15 2d ac 01 00 	lea    0x1ac2d(%rip),%rdx        # 36f70 <_fini+0x164c>
   1c343:	48 63 34 ba          	movslq (%rdx,%rdi,4),%rsi
   1c347:	48 01 d6             	add    %rdx,%rsi
   1c34a:	ff e6                	jmpq   *%rsi
   1c34c:	b0 01                	mov    $0x1,%al
   1c34e:	c3                   	retq   
   1c34f:	31 c0                	xor    %eax,%eax
   1c351:	c3                   	retq   
   1c352:	b0 0f                	mov    $0xf,%al
   1c354:	c3                   	retq   
   1c355:	b1 0a                	mov    $0xa,%cl
   1c357:	89 c8                	mov    %ecx,%eax
   1c359:	c3                   	retq   
   1c35a:	b0 09                	mov    $0x9,%al
   1c35c:	c3                   	retq   
   1c35d:	b0 0b                	mov    $0xb,%al
   1c35f:	c3                   	retq   
   1c360:	b0 06                	mov    $0x6,%al
   1c362:	c3                   	retq   
   1c363:	b0 07                	mov    $0x7,%al
   1c365:	c3                   	retq   
   1c366:	b0 04                	mov    $0x4,%al
   1c368:	c3                   	retq   
   1c369:	b0 03                	mov    $0x3,%al
   1c36b:	c3                   	retq   
   1c36c:	b0 05                	mov    $0x5,%al
   1c36e:	c3                   	retq   
   1c36f:	b0 0d                	mov    $0xd,%al
   1c371:	c3                   	retq   
   1c372:	b0 08                	mov    $0x8,%al
   1c374:	c3                   	retq   
   1c375:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1c37c:	00 00 00 
   1c37f:	90                   	nop

000000000001c380 <std::sys::unix::abort_internal>:
   1c380:	50                   	push   %rax
   1c381:	ff 15 81 96 02 00    	callq  *0x29681(%rip)        # 45a08 <abort@GLIBC_2.2.5>
   1c387:	0f 0b                	ud2    
   1c389:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001c390 <std::sys::unix::fs::try_statx>:
   1c390:	55                   	push   %rbp
   1c391:	41 57                	push   %r15
   1c393:	41 56                	push   %r14
   1c395:	53                   	push   %rbx
   1c396:	48 81 ec 08 01 00 00 	sub    $0x108,%rsp
   1c39d:	48 89 fb             	mov    %rdi,%rbx
   1c3a0:	8a 05 8c 9e 02 00    	mov    0x29e8c(%rip),%al        # 46232 <_ZN3std3sys4unix2fs9try_statx11STATX_STATE17h9ee81358210a5460E.0.0>
   1c3a6:	3c 01                	cmp    $0x1,%al
   1c3a8:	0f 84 15 02 00 00    	je     1c5c3 <std::sys::unix::fs::try_statx+0x233>
   1c3ae:	41 89 cf             	mov    %ecx,%r15d
   1c3b1:	49 89 d6             	mov    %rdx,%r14
   1c3b4:	89 f5                	mov    %esi,%ebp
   1c3b6:	84 c0                	test   %al,%al
   1c3b8:	75 41                	jne    1c3fb <std::sys::unix::fs::try_statx+0x6b>
   1c3ba:	bf 4c 01 00 00       	mov    $0x14c,%edi
   1c3bf:	41 b8 ff 0f 00 00    	mov    $0xfff,%r8d
   1c3c5:	be 00 00 00 00       	mov    $0x0,%esi
   1c3ca:	ba 00 00 00 00       	mov    $0x0,%edx
   1c3cf:	31 c9                	xor    %ecx,%ecx
   1c3d1:	45 31 c9             	xor    %r9d,%r9d
   1c3d4:	31 c0                	xor    %eax,%eax
   1c3d6:	ff 15 f4 98 02 00    	callq  *0x298f4(%rip)        # 45cd0 <syscall@GLIBC_2.2.5>
   1c3dc:	83 f8 ff             	cmp    $0xffffffff,%eax
   1c3df:	0f 85 d7 01 00 00    	jne    1c5bc <std::sys::unix::fs::try_statx+0x22c>
   1c3e5:	ff 15 2d 96 02 00    	callq  *0x2962d(%rip)        # 45a18 <__errno_location@GLIBC_2.2.5>
   1c3eb:	83 38 0e             	cmpl   $0xe,(%rax)
   1c3ee:	0f 85 c8 01 00 00    	jne    1c5bc <std::sys::unix::fs::try_statx+0x22c>
   1c3f4:	c6 05 37 9e 02 00 02 	movb   $0x2,0x29e37(%rip)        # 46232 <_ZN3std3sys4unix2fs9try_statx11STATX_STATE17h9ee81358210a5460E.0.0>
   1c3fb:	0f 57 c0             	xorps  %xmm0,%xmm0
   1c3fe:	0f 29 84 24 f0 00 00 	movaps %xmm0,0xf0(%rsp)
   1c405:	00 
   1c406:	0f 29 84 24 e0 00 00 	movaps %xmm0,0xe0(%rsp)
   1c40d:	00 
   1c40e:	0f 29 84 24 d0 00 00 	movaps %xmm0,0xd0(%rsp)
   1c415:	00 
   1c416:	0f 29 84 24 c0 00 00 	movaps %xmm0,0xc0(%rsp)
   1c41d:	00 
   1c41e:	0f 29 84 24 b0 00 00 	movaps %xmm0,0xb0(%rsp)
   1c425:	00 
   1c426:	0f 29 84 24 a0 00 00 	movaps %xmm0,0xa0(%rsp)
   1c42d:	00 
   1c42e:	0f 29 84 24 90 00 00 	movaps %xmm0,0x90(%rsp)
   1c435:	00 
   1c436:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
   1c43d:	00 
   1c43e:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
   1c443:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
   1c448:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   1c44d:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
   1c452:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
   1c457:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   1c45c:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   1c461:	0f 29 04 24          	movaps %xmm0,(%rsp)
   1c465:	48 63 f5             	movslq %ebp,%rsi
   1c468:	44 89 f9             	mov    %r15d,%ecx
   1c46b:	49 89 e1             	mov    %rsp,%r9
   1c46e:	bf 4c 01 00 00       	mov    $0x14c,%edi
   1c473:	41 b8 ff 0f 00 00    	mov    $0xfff,%r8d
   1c479:	4c 89 f2             	mov    %r14,%rdx
   1c47c:	31 c0                	xor    %eax,%eax
   1c47e:	ff 15 4c 98 02 00    	callq  *0x2984c(%rip)        # 45cd0 <syscall@GLIBC_2.2.5>
   1c484:	83 f8 ff             	cmp    $0xffffffff,%eax
   1c487:	0f 84 4b 01 00 00    	je     1c5d8 <std::sys::unix::fs::try_statx+0x248>
   1c48d:	8b 8c 24 88 00 00 00 	mov    0x88(%rsp),%ecx
   1c494:	8b 84 24 8c 00 00 00 	mov    0x8c(%rsp),%eax
   1c49b:	89 ca                	mov    %ecx,%edx
   1c49d:	c1 e2 08             	shl    $0x8,%edx
   1c4a0:	81 e2 00 ff 0f 00    	and    $0xfff00,%edx
   1c4a6:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx
   1c4ac:	48 c1 e1 20          	shl    $0x20,%rcx
   1c4b0:	48 09 d1             	or     %rdx,%rcx
   1c4b3:	0f b6 d0             	movzbl %al,%edx
   1c4b6:	48 09 ca             	or     %rcx,%rdx
   1c4b9:	48 c1 e0 0c          	shl    $0xc,%rax
   1c4bd:	48 25 00 00 f0 ff    	and    $0xfffffffffff00000,%rax
   1c4c3:	48 09 d0             	or     %rdx,%rax
   1c4c6:	8b 94 24 80 00 00 00 	mov    0x80(%rsp),%edx
   1c4cd:	8b 8c 24 84 00 00 00 	mov    0x84(%rsp),%ecx
   1c4d4:	89 d6                	mov    %edx,%esi
   1c4d6:	c1 e6 08             	shl    $0x8,%esi
   1c4d9:	81 e6 00 ff 0f 00    	and    $0xfff00,%esi
   1c4df:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx
   1c4e5:	48 c1 e2 20          	shl    $0x20,%rdx
   1c4e9:	48 09 f2             	or     %rsi,%rdx
   1c4ec:	0f b6 f1             	movzbl %cl,%esi
   1c4ef:	48 09 d6             	or     %rdx,%rsi
   1c4f2:	48 c1 e1 0c          	shl    $0xc,%rcx
   1c4f6:	48 81 e1 00 00 f0 ff 	and    $0xfffffffffff00000,%rcx
   1c4fd:	48 09 f1             	or     %rsi,%rcx
   1c500:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   1c507:	48 89 43 08          	mov    %rax,0x8(%rbx)
   1c50b:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   1c510:	48 89 43 10          	mov    %rax,0x10(%rbx)
   1c514:	8b 44 24 10          	mov    0x10(%rsp),%eax
   1c518:	48 89 43 18          	mov    %rax,0x18(%rbx)
   1c51c:	0f b7 44 24 1c       	movzwl 0x1c(%rsp),%eax
   1c521:	89 43 20             	mov    %eax,0x20(%rbx)
   1c524:	48 8b 44 24 14       	mov    0x14(%rsp),%rax
   1c529:	48 89 43 24          	mov    %rax,0x24(%rbx)
   1c52d:	c7 43 2c 00 00 00 00 	movl   $0x0,0x2c(%rbx)
   1c534:	48 89 4b 30          	mov    %rcx,0x30(%rbx)
   1c538:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1c53d:	48 89 43 38          	mov    %rax,0x38(%rbx)
   1c541:	8b 44 24 04          	mov    0x4(%rsp),%eax
   1c545:	48 89 43 40          	mov    %rax,0x40(%rbx)
   1c549:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   1c54e:	48 89 43 48          	mov    %rax,0x48(%rbx)
   1c552:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   1c557:	48 89 43 50          	mov    %rax,0x50(%rbx)
   1c55b:	8b 44 24 48          	mov    0x48(%rsp),%eax
   1c55f:	48 89 43 58          	mov    %rax,0x58(%rbx)
   1c563:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   1c568:	48 89 43 60          	mov    %rax,0x60(%rbx)
   1c56c:	8b 44 24 78          	mov    0x78(%rsp),%eax
   1c570:	48 89 43 68          	mov    %rax,0x68(%rbx)
   1c574:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   1c579:	48 89 43 70          	mov    %rax,0x70(%rbx)
   1c57d:	8b 44 24 68          	mov    0x68(%rsp),%eax
   1c581:	48 89 43 78          	mov    %rax,0x78(%rbx)
   1c585:	8b 04 24             	mov    (%rsp),%eax
   1c588:	0f 57 c0             	xorps  %xmm0,%xmm0
   1c58b:	0f 11 83 80 00 00 00 	movups %xmm0,0x80(%rbx)
   1c592:	48 c7 83 90 00 00 00 	movq   $0x0,0x90(%rbx)
   1c599:	00 00 00 00 
   1c59d:	48 c7 83 98 00 00 00 	movq   $0x1,0x98(%rbx)
   1c5a4:	01 00 00 00 
   1c5a8:	0f 28 44 24 50       	movaps 0x50(%rsp),%xmm0
   1c5ad:	0f 11 83 a0 00 00 00 	movups %xmm0,0xa0(%rbx)
   1c5b4:	89 83 b0 00 00 00    	mov    %eax,0xb0(%rbx)
   1c5ba:	eb 0e                	jmp    1c5ca <std::sys::unix::fs::try_statx+0x23a>
   1c5bc:	c6 05 6f 9c 02 00 01 	movb   $0x1,0x29c6f(%rip)        # 46232 <_ZN3std3sys4unix2fs9try_statx11STATX_STATE17h9ee81358210a5460E.0.0>
   1c5c3:	48 c7 03 02 00 00 00 	movq   $0x2,(%rbx)
   1c5ca:	48 81 c4 08 01 00 00 	add    $0x108,%rsp
   1c5d1:	5b                   	pop    %rbx
   1c5d2:	41 5e                	pop    %r14
   1c5d4:	41 5f                	pop    %r15
   1c5d6:	5d                   	pop    %rbp
   1c5d7:	c3                   	retq   
   1c5d8:	ff 15 3a 94 02 00    	callq  *0x2943a(%rip)        # 45a18 <__errno_location@GLIBC_2.2.5>
   1c5de:	8b 00                	mov    (%rax),%eax
   1c5e0:	48 c1 e0 20          	shl    $0x20,%rax
   1c5e4:	48 c7 03 01 00 00 00 	movq   $0x1,(%rbx)
   1c5eb:	48 89 43 08          	mov    %rax,0x8(%rbx)
   1c5ef:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   1c5f6:	00 
   1c5f7:	eb d1                	jmp    1c5ca <std::sys::unix::fs::try_statx+0x23a>
   1c5f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001c600 <std::backtrace_rs::backtrace::libunwind::trace::trace_fn>:
   1c600:	53                   	push   %rbx
   1c601:	48 83 ec 20          	sub    $0x20,%rsp
   1c605:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   1c60c:	00 
   1c60d:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   1c612:	48 8b 3e             	mov    (%rsi),%rdi
   1c615:	48 8b 46 08          	mov    0x8(%rsi),%rax
   1c619:	48 89 e6             	mov    %rsp,%rsi
   1c61c:	ff 50 18             	callq  *0x18(%rax)
   1c61f:	34 01                	xor    $0x1,%al
   1c621:	0f b6 c0             	movzbl %al,%eax
   1c624:	8d 04 c0             	lea    (%rax,%rax,8),%eax
   1c627:	48 83 c4 20          	add    $0x20,%rsp
   1c62b:	5b                   	pop    %rbx
   1c62c:	c3                   	retq   
   1c62d:	48 89 c3             	mov    %rax,%rbx
   1c630:	bf 01 00 00 00       	mov    $0x1,%edi
   1c635:	e8 f6 aa fe ff       	callq  7130 <core::ptr::drop_in_place>
   1c63a:	48 89 df             	mov    %rbx,%rdi
   1c63d:	e8 0e 8a fe ff       	callq  5050 <_Unwind_Resume@plt>
   1c642:	0f 0b                	ud2    
   1c644:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1c64b:	00 00 00 
   1c64e:	66 90                	xchg   %ax,%ax

000000000001c650 <<std::backtrace_rs::symbolize::SymbolName as core::fmt::Display>::fmt>:
   1c650:	55                   	push   %rbp
   1c651:	41 57                	push   %r15
   1c653:	41 56                	push   %r14
   1c655:	41 55                	push   %r13
   1c657:	41 54                	push   %r12
   1c659:	53                   	push   %rbx
   1c65a:	48 83 ec 38          	sub    $0x38,%rsp
   1c65e:	49 89 f6             	mov    %rsi,%r14
   1c661:	83 7f 10 03          	cmpl   $0x3,0x10(%rdi)
   1c665:	0f 85 8c 00 00 00    	jne    1c6f7 <<std::backtrace_rs::symbolize::SymbolName as core::fmt::Display>::fmt+0xa7>
   1c66b:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
   1c66f:	48 85 db             	test   %rbx,%rbx
   1c672:	0f 84 b5 00 00 00    	je     1c72d <<std::backtrace_rs::symbolize::SymbolName as core::fmt::Display>::fmt+0xdd>
   1c678:	4c 8b 3f             	mov    (%rdi),%r15
   1c67b:	4c 8d 25 5e 5a 01 00 	lea    0x15a5e(%rip),%r12        # 320e0 <<str as core::fmt::Display>::fmt>
   1c682:	48 8d 6c 24 20       	lea    0x20(%rsp),%rbp
   1c687:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1c68e:	00 00 
   1c690:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   1c695:	4c 89 fe             	mov    %r15,%rsi
   1c698:	48 89 da             	mov    %rbx,%rdx
   1c69b:	ff 15 27 95 02 00    	callq  *0x29527(%rip)        # 45bc8 <_GLOBAL_OFFSET_TABLE_+0x240>
   1c6a1:	83 7c 24 08 01       	cmpl   $0x1,0x8(%rsp)
   1c6a6:	75 6a                	jne    1c712 <<std::backtrace_rs::symbolize::SymbolName as core::fmt::Display>::fmt+0xc2>
   1c6a8:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   1c6ad:	0f 10 00             	movups (%rax),%xmm0
   1c6b0:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   1c6b5:	be 03 00 00 00       	mov    $0x3,%esi
   1c6ba:	48 8d 3d 32 b9 01 00 	lea    0x1b932(%rip),%rdi        # 37ff3 <str.6+0xcd3>
   1c6c1:	4c 89 f2             	mov    %r14,%rdx
   1c6c4:	41 ff d4             	callq  *%r12
   1c6c7:	84 c0                	test   %al,%al
   1c6c9:	75 5e                	jne    1c729 <<std::backtrace_rs::symbolize::SymbolName as core::fmt::Display>::fmt+0xd9>
   1c6cb:	48 89 ef             	mov    %rbp,%rdi
   1c6ce:	ff 15 64 98 02 00    	callq  *0x29864(%rip)        # 45f38 <_GLOBAL_OFFSET_TABLE_+0x5b0>
   1c6d4:	48 85 c0             	test   %rax,%rax
   1c6d7:	74 54                	je     1c72d <<std::backtrace_rs::symbolize::SymbolName as core::fmt::Display>::fmt+0xdd>
   1c6d9:	49 89 d5             	mov    %rdx,%r13
   1c6dc:	48 89 ef             	mov    %rbp,%rdi
   1c6df:	ff 15 23 97 02 00    	callq  *0x29723(%rip)        # 45e08 <_GLOBAL_OFFSET_TABLE_+0x480>
   1c6e5:	4c 01 e8             	add    %r13,%rax
   1c6e8:	48 39 c3             	cmp    %rax,%rbx
   1c6eb:	72 51                	jb     1c73e <<std::backtrace_rs::symbolize::SymbolName as core::fmt::Display>::fmt+0xee>
   1c6ed:	49 01 c7             	add    %rax,%r15
   1c6f0:	48 29 c3             	sub    %rax,%rbx
   1c6f3:	75 9b                	jne    1c690 <<std::backtrace_rs::symbolize::SymbolName as core::fmt::Display>::fmt+0x40>
   1c6f5:	eb 36                	jmp    1c72d <<std::backtrace_rs::symbolize::SymbolName as core::fmt::Display>::fmt+0xdd>
   1c6f7:	48 83 c7 10          	add    $0x10,%rdi
   1c6fb:	4c 89 f6             	mov    %r14,%rsi
   1c6fe:	48 83 c4 38          	add    $0x38,%rsp
   1c702:	5b                   	pop    %rbx
   1c703:	41 5c                	pop    %r12
   1c705:	41 5d                	pop    %r13
   1c707:	41 5e                	pop    %r14
   1c709:	41 5f                	pop    %r15
   1c70b:	5d                   	pop    %rbp
   1c70c:	ff 25 a6 95 02 00    	jmpq   *0x295a6(%rip)        # 45cb8 <_GLOBAL_OFFSET_TABLE_+0x330>
   1c712:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   1c717:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   1c71c:	4c 89 f2             	mov    %r14,%rdx
   1c71f:	ff 15 c3 95 02 00    	callq  *0x295c3(%rip)        # 45ce8 <_GLOBAL_OFFSET_TABLE_+0x360>
   1c725:	84 c0                	test   %al,%al
   1c727:	74 04                	je     1c72d <<std::backtrace_rs::symbolize::SymbolName as core::fmt::Display>::fmt+0xdd>
   1c729:	b0 01                	mov    $0x1,%al
   1c72b:	eb 02                	jmp    1c72f <<std::backtrace_rs::symbolize::SymbolName as core::fmt::Display>::fmt+0xdf>
   1c72d:	31 c0                	xor    %eax,%eax
   1c72f:	48 83 c4 38          	add    $0x38,%rsp
   1c733:	5b                   	pop    %rbx
   1c734:	41 5c                	pop    %r12
   1c736:	41 5d                	pop    %r13
   1c738:	41 5e                	pop    %r14
   1c73a:	41 5f                	pop    %r15
   1c73c:	5d                   	pop    %rbp
   1c73d:	c3                   	retq   
   1c73e:	48 8d 15 cb 7c 02 00 	lea    0x27ccb(%rip),%rdx        # 44410 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xed8>
   1c745:	48 89 c7             	mov    %rax,%rdi
   1c748:	48 89 de             	mov    %rbx,%rsi
   1c74b:	ff 15 9f 96 02 00    	callq  *0x2969f(%rip)        # 45df0 <_GLOBAL_OFFSET_TABLE_+0x468>
   1c751:	0f 0b                	ud2    
   1c753:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1c75a:	00 00 00 
   1c75d:	0f 1f 00             	nopl   (%rax)

000000000001c760 <std::backtrace_rs::symbolize::gimli::stash::Stash::allocate>:
   1c760:	41 57                	push   %r15
   1c762:	41 56                	push   %r14
   1c764:	41 54                	push   %r12
   1c766:	53                   	push   %rbx
   1c767:	48 83 ec 18          	sub    $0x18,%rsp
   1c76b:	48 89 f3             	mov    %rsi,%rbx
   1c76e:	49 89 fc             	mov    %rdi,%r12
   1c771:	4c 8b 77 10          	mov    0x10(%rdi),%r14
   1c775:	48 85 f6             	test   %rsi,%rsi
   1c778:	74 1e                	je     1c798 <std::backtrace_rs::symbolize::gimli::stash::Stash::allocate+0x38>
   1c77a:	be 01 00 00 00       	mov    $0x1,%esi
   1c77f:	48 89 df             	mov    %rbx,%rdi
   1c782:	ff 15 78 94 02 00    	callq  *0x29478(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x278>
   1c788:	48 85 c0             	test   %rax,%rax
   1c78b:	0f 84 3d 01 00 00    	je     1c8ce <std::backtrace_rs::symbolize::gimli::stash::Stash::allocate+0x16e>
   1c791:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
   1c796:	eb 08                	jmp    1c7a0 <std::backtrace_rs::symbolize::gimli::stash::Stash::allocate+0x40>
   1c798:	b8 01 00 00 00       	mov    $0x1,%eax
   1c79d:	4c 89 f6             	mov    %r14,%rsi
   1c7a0:	48 89 04 24          	mov    %rax,(%rsp)
   1c7a4:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   1c7a9:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
   1c7ae:	49 3b 74 24 08       	cmp    0x8(%r12),%rsi
   1c7b3:	75 6c                	jne    1c821 <std::backtrace_rs::symbolize::gimli::stash::Stash::allocate+0xc1>
   1c7b5:	48 89 f1             	mov    %rsi,%rcx
   1c7b8:	48 ff c1             	inc    %rcx
   1c7bb:	0f 84 f3 00 00 00    	je     1c8b4 <std::backtrace_rs::symbolize::gimli::stash::Stash::allocate+0x154>
   1c7c1:	48 8d 04 36          	lea    (%rsi,%rsi,1),%rax
   1c7c5:	48 39 c8             	cmp    %rcx,%rax
   1c7c8:	48 0f 47 c8          	cmova  %rax,%rcx
   1c7cc:	48 83 f9 04          	cmp    $0x4,%rcx
   1c7d0:	b8 04 00 00 00       	mov    $0x4,%eax
   1c7d5:	48 0f 47 c1          	cmova  %rcx,%rax
   1c7d9:	ba 18 00 00 00       	mov    $0x18,%edx
   1c7de:	31 c9                	xor    %ecx,%ecx
   1c7e0:	48 f7 e2             	mul    %rdx
   1c7e3:	49 89 c7             	mov    %rax,%r15
   1c7e6:	0f 90 c0             	seto   %al
   1c7e9:	0f 91 c1             	setno  %cl
   1c7ec:	48 c1 e1 03          	shl    $0x3,%rcx
   1c7f0:	48 85 f6             	test   %rsi,%rsi
   1c7f3:	74 32                	je     1c827 <std::backtrace_rs::symbolize::gimli::stash::Stash::allocate+0xc7>
   1c7f5:	84 c0                	test   %al,%al
   1c7f7:	0f 85 b7 00 00 00    	jne    1c8b4 <std::backtrace_rs::symbolize::gimli::stash::Stash::allocate+0x154>
   1c7fd:	49 8b 3c 24          	mov    (%r12),%rdi
   1c801:	48 85 ff             	test   %rdi,%rdi
   1c804:	74 29                	je     1c82f <std::backtrace_rs::symbolize::gimli::stash::Stash::allocate+0xcf>
   1c806:	48 c1 e6 03          	shl    $0x3,%rsi
   1c80a:	48 8d 34 76          	lea    (%rsi,%rsi,2),%rsi
   1c80e:	48 85 f6             	test   %rsi,%rsi
   1c811:	74 1c                	je     1c82f <std::backtrace_rs::symbolize::gimli::stash::Stash::allocate+0xcf>
   1c813:	48 89 ca             	mov    %rcx,%rdx
   1c816:	4c 89 f9             	mov    %r15,%rcx
   1c819:	ff 15 59 97 02 00    	callq  *0x29759(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
   1c81f:	eb 1f                	jmp    1c840 <std::backtrace_rs::symbolize::gimli::stash::Stash::allocate+0xe0>
   1c821:	49 8b 0c 24          	mov    (%r12),%rcx
   1c825:	eb 47                	jmp    1c86e <std::backtrace_rs::symbolize::gimli::stash::Stash::allocate+0x10e>
   1c827:	84 c0                	test   %al,%al
   1c829:	0f 85 85 00 00 00    	jne    1c8b4 <std::backtrace_rs::symbolize::gimli::stash::Stash::allocate+0x154>
   1c82f:	4d 85 ff             	test   %r15,%r15
   1c832:	74 0f                	je     1c843 <std::backtrace_rs::symbolize::gimli::stash::Stash::allocate+0xe3>
   1c834:	4c 89 ff             	mov    %r15,%rdi
   1c837:	48 89 ce             	mov    %rcx,%rsi
   1c83a:	ff 15 40 93 02 00    	callq  *0x29340(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   1c840:	48 89 c1             	mov    %rax,%rcx
   1c843:	48 85 c9             	test   %rcx,%rcx
   1c846:	0f 84 92 00 00 00    	je     1c8de <std::backtrace_rs::symbolize::gimli::stash::Stash::allocate+0x17e>
   1c84c:	48 ba ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rdx
   1c853:	aa aa aa 
   1c856:	4c 89 f8             	mov    %r15,%rax
   1c859:	48 f7 e2             	mul    %rdx
   1c85c:	49 89 0c 24          	mov    %rcx,(%r12)
   1c860:	48 c1 ea 04          	shr    $0x4,%rdx
   1c864:	49 89 54 24 08       	mov    %rdx,0x8(%r12)
   1c869:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
   1c86e:	48 8d 04 76          	lea    (%rsi,%rsi,2),%rax
   1c872:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   1c877:	48 89 54 c1 10       	mov    %rdx,0x10(%rcx,%rax,8)
   1c87c:	0f 10 04 24          	movups (%rsp),%xmm0
   1c880:	0f 11 04 c1          	movups %xmm0,(%rcx,%rax,8)
   1c884:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
   1c889:	48 83 c6 01          	add    $0x1,%rsi
   1c88d:	49 89 74 24 10       	mov    %rsi,0x10(%r12)
   1c892:	4c 39 f6             	cmp    %r14,%rsi
   1c895:	76 25                	jbe    1c8bc <std::backtrace_rs::symbolize::gimli::stash::Stash::allocate+0x15c>
   1c897:	49 8b 0c 24          	mov    (%r12),%rcx
   1c89b:	4b 8d 14 76          	lea    (%r14,%r14,2),%rdx
   1c89f:	48 8b 04 d1          	mov    (%rcx,%rdx,8),%rax
   1c8a3:	48 8b 54 d1 10       	mov    0x10(%rcx,%rdx,8),%rdx
   1c8a8:	48 83 c4 18          	add    $0x18,%rsp
   1c8ac:	5b                   	pop    %rbx
   1c8ad:	41 5c                	pop    %r12
   1c8af:	41 5e                	pop    %r14
   1c8b1:	41 5f                	pop    %r15
   1c8b3:	c3                   	retq   
   1c8b4:	ff 15 26 92 02 00    	callq  *0x29226(%rip)        # 45ae0 <_GLOBAL_OFFSET_TABLE_+0x158>
   1c8ba:	0f 0b                	ud2    
   1c8bc:	48 8d 15 d5 7d 02 00 	lea    0x27dd5(%rip),%rdx        # 44698 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1160>
   1c8c3:	4c 89 f7             	mov    %r14,%rdi
   1c8c6:	ff 15 c4 93 02 00    	callq  *0x293c4(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   1c8cc:	0f 0b                	ud2    
   1c8ce:	be 01 00 00 00       	mov    $0x1,%esi
   1c8d3:	48 89 df             	mov    %rbx,%rdi
   1c8d6:	ff 15 44 92 02 00    	callq  *0x29244(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   1c8dc:	0f 0b                	ud2    
   1c8de:	be 08 00 00 00       	mov    $0x8,%esi
   1c8e3:	4c 89 ff             	mov    %r15,%rdi
   1c8e6:	ff 15 34 92 02 00    	callq  *0x29234(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   1c8ec:	0f 0b                	ud2    
   1c8ee:	48 89 c3             	mov    %rax,%rbx
   1c8f1:	48 89 e7             	mov    %rsp,%rdi
   1c8f4:	e8 37 9f fe ff       	callq  6830 <core::ptr::drop_in_place>
   1c8f9:	48 89 df             	mov    %rbx,%rdi
   1c8fc:	e8 4f 87 fe ff       	callq  5050 <_Unwind_Resume@plt>
   1c901:	0f 0b                	ud2    
   1c903:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1c90a:	00 00 00 
   1c90d:	0f 1f 00             	nopl   (%rax)

000000000001c910 <std::backtrace_rs::symbolize::gimli::resolve>:
   1c910:	55                   	push   %rbp
   1c911:	48 89 e5             	mov    %rsp,%rbp
   1c914:	41 57                	push   %r15
   1c916:	41 56                	push   %r14
   1c918:	41 55                	push   %r13
   1c91a:	41 54                	push   %r12
   1c91c:	53                   	push   %rbx
   1c91d:	48 83 e4 e0          	and    $0xffffffffffffffe0,%rsp
   1c921:	48 81 ec a0 07 00 00 	sub    $0x7a0,%rsp
   1c928:	48 89 94 24 10 01 00 	mov    %rdx,0x110(%rsp)
   1c92f:	00 
   1c930:	48 89 b4 24 08 01 00 	mov    %rsi,0x108(%rsp)
   1c937:	00 
   1c938:	83 3f 01             	cmpl   $0x1,(%rdi)
   1c93b:	75 06                	jne    1c943 <std::backtrace_rs::symbolize::gimli::resolve+0x33>
   1c93d:	48 8b 47 08          	mov    0x8(%rdi),%rax
   1c941:	eb 0a                	jmp    1c94d <std::backtrace_rs::symbolize::gimli::resolve+0x3d>
   1c943:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   1c947:	ff 15 eb 93 02 00    	callq  *0x293eb(%rip)        # 45d38 <_Unwind_GetIP@GCC_3.0>
   1c94d:	4c 8d 70 ff          	lea    -0x1(%rax),%r14
   1c951:	48 85 c0             	test   %rax,%rax
   1c954:	4c 0f 44 f0          	cmove  %rax,%r14
   1c958:	4c 8b 05 a1 98 02 00 	mov    0x298a1(%rip),%r8        # 46200 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE>
   1c95f:	4d 85 c0             	test   %r8,%r8
   1c962:	74 15                	je     1c979 <std::backtrace_rs::symbolize::gimli::resolve+0x69>
   1c964:	48 8b 35 a5 98 02 00 	mov    0x298a5(%rip),%rsi        # 46210 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x10>
   1c96b:	48 85 f6             	test   %rsi,%rsi
   1c96e:	0f 85 c8 01 00 00    	jne    1cb3c <std::backtrace_rs::symbolize::gimli::resolve+0x22c>
   1c974:	e9 af 0a 00 00       	jmpq   1d428 <std::backtrace_rs::symbolize::gimli::resolve+0xb18>
   1c979:	bf 20 06 00 00       	mov    $0x620,%edi
   1c97e:	be 08 00 00 00       	mov    $0x8,%esi
   1c983:	ff 15 f7 91 02 00    	callq  *0x291f7(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   1c989:	48 85 c0             	test   %rax,%rax
   1c98c:	0f 84 2e 1f 00 00    	je     1e8c0 <std::backtrace_rs::symbolize::gimli::resolve+0x1fb0>
   1c992:	49 89 c7             	mov    %rax,%r15
   1c995:	48 c7 84 24 70 01 00 	movq   $0x8,0x170(%rsp)
   1c99c:	00 08 00 00 00 
   1c9a1:	0f 57 c0             	xorps  %xmm0,%xmm0
   1c9a4:	0f 11 84 24 78 01 00 	movups %xmm0,0x178(%rsp)
   1c9ab:	00 
   1c9ac:	48 8d 3d bd 78 00 00 	lea    0x78bd(%rip),%rdi        # 24270 <std::backtrace_rs::symbolize::gimli::callback>
   1c9b3:	48 8d b4 24 70 01 00 	lea    0x170(%rsp),%rsi
   1c9ba:	00 
   1c9bb:	ff 15 ff 8f 02 00    	callq  *0x28fff(%rip)        # 459c0 <dl_iterate_phdr@GLIBC_2.2.5>
   1c9c1:	0f 10 84 24 70 01 00 	movups 0x170(%rsp),%xmm0
   1c9c8:	00 
   1c9c9:	0f 29 84 24 00 03 00 	movaps %xmm0,0x300(%rsp)
   1c9d0:	00 
   1c9d1:	48 8b 84 24 80 01 00 	mov    0x180(%rsp),%rax
   1c9d8:	00 
   1c9d9:	48 89 84 24 10 03 00 	mov    %rax,0x310(%rsp)
   1c9e0:	00 
   1c9e1:	48 8b 1d 18 98 02 00 	mov    0x29818(%rip),%rbx        # 46200 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE>
   1c9e8:	48 85 db             	test   %rbx,%rbx
   1c9eb:	0f 84 ff 00 00 00    	je     1caf0 <std::backtrace_rs::symbolize::gimli::resolve+0x1e0>
   1c9f1:	4d 89 f5             	mov    %r14,%r13
   1c9f4:	48 8b 05 15 98 02 00 	mov    0x29815(%rip),%rax        # 46210 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x10>
   1c9fb:	48 85 c0             	test   %rax,%rax
   1c9fe:	74 54                	je     1ca54 <std::backtrace_rs::symbolize::gimli::resolve+0x144>
   1ca00:	4c 6b f0 38          	imul   $0x38,%rax,%r14
   1ca04:	49 01 de             	add    %rbx,%r14
   1ca07:	4c 8d 25 32 8a fe ff 	lea    -0x175ce(%rip),%r12        # 5440 <__rust_dealloc>
   1ca0e:	eb 09                	jmp    1ca19 <std::backtrace_rs::symbolize::gimli::resolve+0x109>
   1ca10:	48 83 c3 38          	add    $0x38,%rbx
   1ca14:	4c 39 f3             	cmp    %r14,%rbx
   1ca17:	74 3b                	je     1ca54 <std::backtrace_rs::symbolize::gimli::resolve+0x144>
   1ca19:	48 8b 3b             	mov    (%rbx),%rdi
   1ca1c:	48 85 ff             	test   %rdi,%rdi
   1ca1f:	74 11                	je     1ca32 <std::backtrace_rs::symbolize::gimli::resolve+0x122>
   1ca21:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   1ca25:	48 85 f6             	test   %rsi,%rsi
   1ca28:	74 08                	je     1ca32 <std::backtrace_rs::symbolize::gimli::resolve+0x122>
   1ca2a:	ba 01 00 00 00       	mov    $0x1,%edx
   1ca2f:	41 ff d4             	callq  *%r12
   1ca32:	48 8b 73 20          	mov    0x20(%rbx),%rsi
   1ca36:	48 85 f6             	test   %rsi,%rsi
   1ca39:	74 d5                	je     1ca10 <std::backtrace_rs::symbolize::gimli::resolve+0x100>
   1ca3b:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   1ca3f:	48 85 ff             	test   %rdi,%rdi
   1ca42:	74 cc                	je     1ca10 <std::backtrace_rs::symbolize::gimli::resolve+0x100>
   1ca44:	48 c1 e6 04          	shl    $0x4,%rsi
   1ca48:	74 c6                	je     1ca10 <std::backtrace_rs::symbolize::gimli::resolve+0x100>
   1ca4a:	ba 08 00 00 00       	mov    $0x8,%edx
   1ca4f:	41 ff d4             	callq  *%r12
   1ca52:	eb bc                	jmp    1ca10 <std::backtrace_rs::symbolize::gimli::resolve+0x100>
   1ca54:	48 8b 05 ad 97 02 00 	mov    0x297ad(%rip),%rax        # 46208 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x8>
   1ca5b:	48 85 c0             	test   %rax,%rax
   1ca5e:	74 20                	je     1ca80 <std::backtrace_rs::symbolize::gimli::resolve+0x170>
   1ca60:	48 6b f0 38          	imul   $0x38,%rax,%rsi
   1ca64:	48 85 f6             	test   %rsi,%rsi
   1ca67:	74 17                	je     1ca80 <std::backtrace_rs::symbolize::gimli::resolve+0x170>
   1ca69:	48 8b 3d 90 97 02 00 	mov    0x29790(%rip),%rdi        # 46200 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE>
   1ca70:	48 85 ff             	test   %rdi,%rdi
   1ca73:	74 0b                	je     1ca80 <std::backtrace_rs::symbolize::gimli::resolve+0x170>
   1ca75:	ba 08 00 00 00       	mov    $0x8,%edx
   1ca7a:	ff 15 78 91 02 00    	callq  *0x29178(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   1ca80:	48 8b 3d 91 97 02 00 	mov    0x29791(%rip),%rdi        # 46218 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x18>
   1ca87:	48 69 1d 96 97 02 00 	imul   $0x188,0x29796(%rip),%rbx        # 46228 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x28>
   1ca8e:	88 01 00 00 
   1ca92:	4d 89 ee             	mov    %r13,%r14
   1ca95:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1ca9c:	00 00 00 
   1ca9f:	90                   	nop
   1caa0:	48 85 db             	test   %rbx,%rbx
   1caa3:	74 1c                	je     1cac1 <std::backtrace_rs::symbolize::gimli::resolve+0x1b1>
   1caa5:	4c 8d a7 88 01 00 00 	lea    0x188(%rdi),%r12
   1caac:	48 83 c7 08          	add    $0x8,%rdi
   1cab0:	48 81 c3 78 fe ff ff 	add    $0xfffffffffffffe78,%rbx
   1cab7:	e8 c4 a3 fe ff       	callq  6e80 <core::ptr::drop_in_place>
   1cabc:	4c 89 e7             	mov    %r12,%rdi
   1cabf:	eb df                	jmp    1caa0 <std::backtrace_rs::symbolize::gimli::resolve+0x190>
   1cac1:	48 8b 05 58 97 02 00 	mov    0x29758(%rip),%rax        # 46220 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x20>
   1cac8:	48 85 c0             	test   %rax,%rax
   1cacb:	74 23                	je     1caf0 <std::backtrace_rs::symbolize::gimli::resolve+0x1e0>
   1cacd:	48 8b 3d 44 97 02 00 	mov    0x29744(%rip),%rdi        # 46218 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x18>
   1cad4:	48 85 ff             	test   %rdi,%rdi
   1cad7:	74 17                	je     1caf0 <std::backtrace_rs::symbolize::gimli::resolve+0x1e0>
   1cad9:	48 69 f0 88 01 00 00 	imul   $0x188,%rax,%rsi
   1cae0:	48 85 f6             	test   %rsi,%rsi
   1cae3:	74 0b                	je     1caf0 <std::backtrace_rs::symbolize::gimli::resolve+0x1e0>
   1cae5:	ba 08 00 00 00       	mov    $0x8,%edx
   1caea:	ff 15 08 91 02 00    	callq  *0x29108(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   1caf0:	48 8b 84 24 10 03 00 	mov    0x310(%rsp),%rax
   1caf7:	00 
   1caf8:	48 89 05 11 97 02 00 	mov    %rax,0x29711(%rip)        # 46210 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x10>
   1caff:	0f 28 84 24 00 03 00 	movaps 0x300(%rsp),%xmm0
   1cb06:	00 
   1cb07:	0f 11 05 f2 96 02 00 	movups %xmm0,0x296f2(%rip)        # 46200 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE>
   1cb0e:	4c 89 3d 03 97 02 00 	mov    %r15,0x29703(%rip)        # 46218 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x18>
   1cb15:	66 0f 6f 05 a3 97 01 	movdqa 0x197a3(%rip),%xmm0        # 362c0 <_fini+0x99c>
   1cb1c:	00 
   1cb1d:	f3 0f 7f 05 fb 96 02 	movdqu %xmm0,0x296fb(%rip)        # 46220 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x20>
   1cb24:	00 
   1cb25:	4c 8b 05 d4 96 02 00 	mov    0x296d4(%rip),%r8        # 46200 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE>
   1cb2c:	48 8b 35 dd 96 02 00 	mov    0x296dd(%rip),%rsi        # 46210 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x10>
   1cb33:	48 85 f6             	test   %rsi,%rsi
   1cb36:	0f 84 ec 08 00 00    	je     1d428 <std::backtrace_rs::symbolize::gimli::resolve+0xb18>
   1cb3c:	4c 8d 0c f5 f8 ff ff 	lea    -0x8(,%rsi,8),%r9
   1cb43:	ff 
   1cb44:	49 c1 e9 03          	shr    $0x3,%r9
   1cb48:	45 31 e4             	xor    %r12d,%r12d
   1cb4b:	4c 89 c2             	mov    %r8,%rdx
   1cb4e:	48 8b 42 18          	mov    0x18(%rdx),%rax
   1cb52:	48 8b 7a 28          	mov    0x28(%rdx),%rdi
   1cb56:	4c 8b 6a 30          	mov    0x30(%rdx),%r13
   1cb5a:	48 83 c2 38          	add    $0x38,%rdx
   1cb5e:	48 c1 e7 04          	shl    $0x4,%rdi
   1cb62:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1cb69:	00 00 00 
   1cb6c:	0f 1f 40 00          	nopl   0x0(%rax)
   1cb70:	48 85 ff             	test   %rdi,%rdi
   1cb73:	74 2b                	je     1cba0 <std::backtrace_rs::symbolize::gimli::resolve+0x290>
   1cb75:	48 89 c3             	mov    %rax,%rbx
   1cb78:	48 83 c0 10          	add    $0x10,%rax
   1cb7c:	48 8b 0b             	mov    (%rbx),%rcx
   1cb7f:	4c 01 e9             	add    %r13,%rcx
   1cb82:	48 83 c7 f0          	add    $0xfffffffffffffff0,%rdi
   1cb86:	4c 39 f1             	cmp    %r14,%rcx
   1cb89:	77 e5                	ja     1cb70 <std::backtrace_rs::symbolize::gimli::resolve+0x260>
   1cb8b:	48 03 4b 08          	add    0x8(%rbx),%rcx
   1cb8f:	4c 39 f1             	cmp    %r14,%rcx
   1cb92:	76 dc                	jbe    1cb70 <std::backtrace_rs::symbolize::gimli::resolve+0x260>
   1cb94:	eb 1c                	jmp    1cbb2 <std::backtrace_rs::symbolize::gimli::resolve+0x2a2>
   1cb96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1cb9d:	00 00 00 
   1cba0:	49 8d 44 24 01       	lea    0x1(%r12),%rax
   1cba5:	4d 39 cc             	cmp    %r9,%r12
   1cba8:	49 89 c4             	mov    %rax,%r12
   1cbab:	75 a1                	jne    1cb4e <std::backtrace_rs::symbolize::gimli::resolve+0x23e>
   1cbad:	e9 76 08 00 00       	jmpq   1d428 <std::backtrace_rs::symbolize::gimli::resolve+0xb18>
   1cbb2:	4c 89 74 24 30       	mov    %r14,0x30(%rsp)
   1cbb7:	4c 8b 35 6a 96 02 00 	mov    0x2966a(%rip),%r14        # 46228 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x28>
   1cbbe:	4d 85 f6             	test   %r14,%r14
   1cbc1:	74 37                	je     1cbfa <std::backtrace_rs::symbolize::gimli::resolve+0x2ea>
   1cbc3:	48 8b 1d 4e 96 02 00 	mov    0x2964e(%rip),%rbx        # 46218 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x18>
   1cbca:	4a 8d 0c f5 f8 ff ff 	lea    -0x8(,%r14,8),%rcx
   1cbd1:	ff 
   1cbd2:	48 c1 e9 03          	shr    $0x3,%rcx
   1cbd6:	48 83 c1 01          	add    $0x1,%rcx
   1cbda:	45 31 ff             	xor    %r15d,%r15d
   1cbdd:	31 c0                	xor    %eax,%eax
   1cbdf:	90                   	nop
   1cbe0:	4e 39 24 3b          	cmp    %r12,(%rbx,%r15,1)
   1cbe4:	0f 84 15 01 00 00    	je     1ccff <std::backtrace_rs::symbolize::gimli::resolve+0x3ef>
   1cbea:	48 83 c0 01          	add    $0x1,%rax
   1cbee:	49 81 c7 88 01 00 00 	add    $0x188,%r15
   1cbf5:	48 39 c1             	cmp    %rax,%rcx
   1cbf8:	75 e6                	jne    1cbe0 <std::backtrace_rs::symbolize::gimli::resolve+0x2d0>
   1cbfa:	4c 39 e6             	cmp    %r12,%rsi
   1cbfd:	0f 86 ab 1c 00 00    	jbe    1e8ae <std::backtrace_rs::symbolize::gimli::resolve+0x1f9e>
   1cc03:	49 6b c4 38          	imul   $0x38,%r12,%rax
   1cc07:	49 8b 34 00          	mov    (%r8,%rax,1),%rsi
   1cc0b:	49 8b 54 00 10       	mov    0x10(%r8,%rax,1),%rdx
   1cc10:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
   1cc17:	00 
   1cc18:	e8 73 1f 00 00       	callq  1eb90 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new>
   1cc1d:	48 8b 9c 24 70 01 00 	mov    0x170(%rsp),%rbx
   1cc24:	00 
   1cc25:	48 8d b4 24 78 01 00 	lea    0x178(%rsp),%rsi
   1cc2c:	00 
   1cc2d:	48 8d bc 24 98 04 00 	lea    0x498(%rsp),%rdi
   1cc34:	00 
   1cc35:	ba 78 01 00 00       	mov    $0x178,%edx
   1cc3a:	ff 15 b8 90 02 00    	callq  *0x290b8(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
   1cc40:	48 85 db             	test   %rbx,%rbx
   1cc43:	0f 84 df 07 00 00    	je     1d428 <std::backtrace_rs::symbolize::gimli::resolve+0xb18>
   1cc49:	4c 8d bc 24 10 06 00 	lea    0x610(%rsp),%r15
   1cc50:	00 
   1cc51:	48 8d b4 24 98 04 00 	lea    0x498(%rsp),%rsi
   1cc58:	00 
   1cc59:	4c 8b 35 98 90 02 00 	mov    0x29098(%rip),%r14        # 45cf8 <memcpy@GLIBC_2.14>
   1cc60:	ba 78 01 00 00       	mov    $0x178,%edx
   1cc65:	4c 89 ff             	mov    %r15,%rdi
   1cc68:	41 ff d6             	callq  *%r14
   1cc6b:	48 89 9c 24 00 03 00 	mov    %rbx,0x300(%rsp)
   1cc72:	00 
   1cc73:	48 8d bc 24 08 03 00 	lea    0x308(%rsp),%rdi
   1cc7a:	00 
   1cc7b:	ba 78 01 00 00       	mov    $0x178,%edx
   1cc80:	4c 89 fe             	mov    %r15,%rsi
   1cc83:	41 ff d6             	callq  *%r14
   1cc86:	48 83 3d 9a 95 02 00 	cmpq   $0x4,0x2959a(%rip)        # 46228 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x28>
   1cc8d:	04 
   1cc8e:	75 42                	jne    1ccd2 <std::backtrace_rs::symbolize::gimli::resolve+0x3c2>
   1cc90:	48 c7 05 8d 95 02 00 	movq   $0x3,0x2958d(%rip)        # 46228 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x28>
   1cc97:	03 00 00 00 
   1cc9b:	be 98 04 00 00       	mov    $0x498,%esi
   1cca0:	48 03 35 71 95 02 00 	add    0x29571(%rip),%rsi        # 46218 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x18>
   1cca7:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
   1ccae:	00 
   1ccaf:	ba 88 01 00 00       	mov    $0x188,%edx
   1ccb4:	ff 15 3e 90 02 00    	callq  *0x2903e(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
   1ccba:	48 83 bc 24 78 01 00 	cmpq   $0x0,0x178(%rsp)
   1ccc1:	00 00 
   1ccc3:	74 0d                	je     1ccd2 <std::backtrace_rs::symbolize::gimli::resolve+0x3c2>
   1ccc5:	48 8d bc 24 78 01 00 	lea    0x178(%rsp),%rdi
   1cccc:	00 
   1cccd:	e8 ae a1 fe ff       	callq  6e80 <core::ptr::drop_in_place>
   1ccd2:	4c 89 a4 24 70 01 00 	mov    %r12,0x170(%rsp)
   1ccd9:	00 
   1ccda:	48 8d bc 24 78 01 00 	lea    0x178(%rsp),%rdi
   1cce1:	00 
   1cce2:	48 8d b4 24 00 03 00 	lea    0x300(%rsp),%rsi
   1cce9:	00 
   1ccea:	ba 80 01 00 00       	mov    $0x180,%edx
   1ccef:	ff 15 03 90 02 00    	callq  *0x29003(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
   1ccf5:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
   1ccfc:	00 
   1ccfd:	eb 70                	jmp    1cd6f <std::backtrace_rs::symbolize::gimli::resolve+0x45f>
   1ccff:	4d 85 ff             	test   %r15,%r15
   1cd02:	74 70                	je     1cd74 <std::backtrace_rs::symbolize::gimli::resolve+0x464>
   1cd04:	4e 8d 24 3b          	lea    (%rbx,%r15,1),%r12
   1cd08:	48 8d bc 24 00 03 00 	lea    0x300(%rsp),%rdi
   1cd0f:	00 
   1cd10:	ba 88 01 00 00       	mov    $0x188,%edx
   1cd15:	4c 89 e6             	mov    %r12,%rsi
   1cd18:	ff 15 da 8f 02 00    	callq  *0x28fda(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
   1cd1e:	49 69 d6 88 01 00 00 	imul   $0x188,%r14,%rdx
   1cd25:	4c 29 fa             	sub    %r15,%rdx
   1cd28:	48 81 c2 78 fe ff ff 	add    $0xfffffffffffffe78,%rdx
   1cd2f:	4a 8d 34 3b          	lea    (%rbx,%r15,1),%rsi
   1cd33:	48 81 c6 88 01 00 00 	add    $0x188,%rsi
   1cd3a:	4c 89 e7             	mov    %r12,%rdi
   1cd3d:	ff 15 25 91 02 00    	callq  *0x29125(%rip)        # 45e68 <memmove@GLIBC_2.2.5>
   1cd43:	49 83 c6 ff          	add    $0xffffffffffffffff,%r14
   1cd47:	4c 89 35 da 94 02 00 	mov    %r14,0x294da(%rip)        # 46228 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x28>
   1cd4e:	4c 8d a4 24 70 01 00 	lea    0x170(%rsp),%r12
   1cd55:	00 
   1cd56:	ba 88 01 00 00       	mov    $0x188,%edx
   1cd5b:	4c 89 e7             	mov    %r12,%rdi
   1cd5e:	48 8d b4 24 00 03 00 	lea    0x300(%rsp),%rsi
   1cd65:	00 
   1cd66:	ff 15 8c 8f 02 00    	callq  *0x28f8c(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
   1cd6c:	4c 89 e7             	mov    %r12,%rdi
   1cd6f:	e8 3c c8 fe ff       	callq  95b0 <alloc::vec::Vec<T>::insert>
   1cd74:	48 83 3d ac 94 02 00 	cmpq   $0x0,0x294ac(%rip)        # 46228 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x28>
   1cd7b:	00 
   1cd7c:	0f 84 19 1b 00 00    	je     1e89b <std::backtrace_rs::symbolize::gimli::resolve+0x1f8b>
   1cd82:	4c 8b 74 24 30       	mov    0x30(%rsp),%r14
   1cd87:	4d 29 ee             	sub    %r13,%r14
   1cd8a:	4c 8b 05 87 94 02 00 	mov    0x29487(%rip),%r8        # 46218 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x18>
   1cd91:	49 8b 70 18          	mov    0x18(%r8),%rsi
   1cd95:	41 b9 03 00 00 00    	mov    $0x3,%r9d
   1cd9b:	48 85 f6             	test   %rsi,%rsi
   1cd9e:	4c 89 84 24 a0 00 00 	mov    %r8,0xa0(%rsp)
   1cda5:	00 
   1cda6:	4c 89 74 24 30       	mov    %r14,0x30(%rsp)
   1cdab:	0f 84 41 01 00 00    	je     1cef2 <std::backtrace_rs::symbolize::gimli::resolve+0x5e2>
   1cdb1:	4d 8b 68 08          	mov    0x8(%r8),%r13
   1cdb5:	45 31 ff             	xor    %r15d,%r15d
   1cdb8:	48 83 fe 01          	cmp    $0x1,%rsi
   1cdbc:	0f 85 ba 05 00 00    	jne    1d37c <std::backtrace_rs::symbolize::gimli::resolve+0xa6c>
   1cdc2:	4c 89 f8             	mov    %r15,%rax
   1cdc5:	48 c1 e0 05          	shl    $0x5,%rax
   1cdc9:	4d 3b 74 05 10       	cmp    0x10(%r13,%rax,1),%r14
   1cdce:	49 83 df ff          	sbb    $0xffffffffffffffff,%r15
   1cdd2:	4c 39 fe             	cmp    %r15,%rsi
   1cdd5:	0f 82 f7 1a 00 00    	jb     1e8d2 <std::backtrace_rs::symbolize::gimli::resolve+0x1fc2>
   1cddb:	4d 85 ff             	test   %r15,%r15
   1cdde:	0f 84 0e 01 00 00    	je     1cef2 <std::backtrace_rs::symbolize::gimli::resolve+0x5e2>
   1cde4:	49 c1 e7 05          	shl    $0x5,%r15
   1cde8:	4d 01 ef             	add    %r13,%r15
   1cdeb:	49 8d 50 38          	lea    0x38(%r8),%rdx
   1cdef:	48 89 54 24 50       	mov    %rdx,0x50(%rsp)
   1cdf4:	e9 1d 00 00 00       	jmpq   1ce16 <std::backtrace_rs::symbolize::gimli::resolve+0x506>
   1cdf9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1ce00:	4c 8b 84 24 a0 00 00 	mov    0xa0(%rsp),%r8
   1ce07:	00 
   1ce08:	48 8b 54 24 50       	mov    0x50(%rsp),%rdx
   1ce0d:	4d 39 fd             	cmp    %r15,%r13
   1ce10:	0f 84 de 00 00 00    	je     1cef4 <std::backtrace_rs::symbolize::gimli::resolve+0x5e4>
   1ce16:	4d 39 77 e8          	cmp    %r14,-0x18(%r15)
   1ce1a:	0f 82 d4 00 00 00    	jb     1cef4 <std::backtrace_rs::symbolize::gimli::resolve+0x5e4>
   1ce20:	4c 89 f8             	mov    %r15,%rax
   1ce23:	49 83 c7 e0          	add    $0xffffffffffffffe0,%r15
   1ce27:	4c 39 70 f8          	cmp    %r14,-0x8(%rax)
   1ce2b:	72 e0                	jb     1ce0d <std::backtrace_rs::symbolize::gimli::resolve+0x4fd>
   1ce2d:	49 8b 3f             	mov    (%r15),%rdi
   1ce30:	49 8b 70 30          	mov    0x30(%r8),%rsi
   1ce34:	48 39 fe             	cmp    %rdi,%rsi
   1ce37:	0f 86 4f 1a 00 00    	jbe    1e88c <std::backtrace_rs::symbolize::gimli::resolve+0x1f7c>
   1ce3d:	4d 8b 60 20          	mov    0x20(%r8),%r12
   1ce41:	48 89 f8             	mov    %rdi,%rax
   1ce44:	48 c1 e0 09          	shl    $0x9,%rax
   1ce48:	48 8d 04 f8          	lea    (%rax,%rdi,8),%rax
   1ce4c:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1ce51:	49 8d 1c 04          	lea    (%r12,%rax,1),%rbx
   1ce55:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
   1ce5c:	00 
   1ce5d:	48 89 de             	mov    %rbx,%rsi
   1ce60:	e8 fb 38 ff ff       	callq  10760 <addr2line::ResUnit<R>::parse_functions>
   1ce65:	83 bc 24 70 01 00 00 	cmpl   $0x1,0x170(%rsp)
   1ce6c:	01 
   1ce6d:	74 91                	je     1ce00 <std::backtrace_rs::symbolize::gimli::resolve+0x4f0>
   1ce6f:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   1ce74:	48 89 9c 24 88 00 00 	mov    %rbx,0x88(%rsp)
   1ce7b:	00 
   1ce7c:	48 8b 84 24 78 01 00 	mov    0x178(%rsp),%rax
   1ce83:	00 
   1ce84:	48 8b 48 18          	mov    0x18(%rax),%rcx
   1ce88:	48 85 c9             	test   %rcx,%rcx
   1ce8b:	4c 8b 84 24 a0 00 00 	mov    0xa0(%rsp),%r8
   1ce92:	00 
   1ce93:	48 8b 54 24 50       	mov    0x50(%rsp),%rdx
   1ce98:	0f 84 6f ff ff ff    	je     1ce0d <std::backtrace_rs::symbolize::gimli::resolve+0x4fd>
   1ce9e:	48 8b 40 10          	mov    0x10(%rax),%rax
   1cea2:	45 31 e4             	xor    %r12d,%r12d
   1cea5:	48 83 f9 01          	cmp    $0x1,%rcx
   1cea9:	75 2e                	jne    1ced9 <std::backtrace_rs::symbolize::gimli::resolve+0x5c9>
   1ceab:	4b 8d 1c 64          	lea    (%r12,%r12,2),%rbx
   1ceaf:	4c 39 34 d8          	cmp    %r14,(%rax,%rbx,8)
   1ceb3:	0f 87 54 ff ff ff    	ja     1ce0d <std::backtrace_rs::symbolize::gimli::resolve+0x4fd>
   1ceb9:	4c 39 74 d8 08       	cmp    %r14,0x8(%rax,%rbx,8)
   1cebe:	0f 86 49 ff ff ff    	jbe    1ce0d <std::backtrace_rs::symbolize::gimli::resolve+0x4fd>
   1cec4:	e9 6e 05 00 00       	jmpq   1d437 <std::backtrace_rs::symbolize::gimli::resolve+0xb27>
   1cec9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1ced0:	48 29 d9             	sub    %rbx,%rcx
   1ced3:	48 83 f9 01          	cmp    $0x1,%rcx
   1ced7:	76 d2                	jbe    1ceab <std::backtrace_rs::symbolize::gimli::resolve+0x59b>
   1ced9:	48 89 cb             	mov    %rcx,%rbx
   1cedc:	48 d1 eb             	shr    %rbx
   1cedf:	4a 8d 34 23          	lea    (%rbx,%r12,1),%rsi
   1cee3:	48 8d 3c 76          	lea    (%rsi,%rsi,2),%rdi
   1cee7:	4c 39 34 f8          	cmp    %r14,(%rax,%rdi,8)
   1ceeb:	77 e3                	ja     1ced0 <std::backtrace_rs::symbolize::gimli::resolve+0x5c0>
   1ceed:	49 89 f4             	mov    %rsi,%r12
   1cef0:	eb de                	jmp    1ced0 <std::backtrace_rs::symbolize::gimli::resolve+0x5c0>
   1cef2:	eb 06                	jmp    1cefa <std::backtrace_rs::symbolize::gimli::resolve+0x5ea>
   1cef4:	41 b9 03 00 00 00    	mov    $0x3,%r9d
   1cefa:	4c 89 bc 24 70 01 00 	mov    %r15,0x170(%rsp)
   1cf01:	00 
   1cf02:	4c 89 94 24 78 01 00 	mov    %r10,0x178(%rsp)
   1cf09:	00 
   1cf0a:	4c 89 b4 24 80 01 00 	mov    %r14,0x180(%rsp)
   1cf11:	00 
   1cf12:	48 89 bc 24 88 01 00 	mov    %rdi,0x188(%rsp)
   1cf19:	00 
   1cf1a:	48 89 b4 24 90 01 00 	mov    %rsi,0x190(%rsp)
   1cf21:	00 
   1cf22:	48 89 bc 24 98 01 00 	mov    %rdi,0x198(%rsp)
   1cf29:	00 
   1cf2a:	48 89 84 24 a0 01 00 	mov    %rax,0x1a0(%rsp)
   1cf31:	00 
   1cf32:	48 89 9c 24 a8 01 00 	mov    %rbx,0x1a8(%rsp)
   1cf39:	00 
   1cf3a:	48 89 94 24 b0 01 00 	mov    %rdx,0x1b0(%rsp)
   1cf41:	00 
   1cf42:	44 89 8c 24 b8 01 00 	mov    %r9d,0x1b8(%rsp)
   1cf49:	00 
   1cf4a:	89 8c 24 bc 01 00 00 	mov    %ecx,0x1bc(%rsp)
   1cf51:	44 89 9c 24 c0 01 00 	mov    %r11d,0x1c0(%rsp)
   1cf58:	00 
   1cf59:	44 89 84 24 c4 01 00 	mov    %r8d,0x1c4(%rsp)
   1cf60:	00 
   1cf61:	41 83 f9 03          	cmp    $0x3,%r9d
   1cf65:	0f 85 d5 00 00 00    	jne    1d040 <std::backtrace_rs::symbolize::gimli::resolve+0x730>
   1cf6b:	4c 8b 74 24 30       	mov    0x30(%rsp),%r14
   1cf70:	48 8b 8c 24 a0 00 00 	mov    0xa0(%rsp),%rcx
   1cf77:	00 
   1cf78:	48 8b 81 48 01 00 00 	mov    0x148(%rcx),%rax
   1cf7f:	4c 8b 81 58 01 00 00 	mov    0x158(%rcx),%r8
   1cf86:	4c 89 c1             	mov    %r8,%rcx
   1cf89:	4d 85 c0             	test   %r8,%r8
   1cf8c:	74 1a                	je     1cfa8 <std::backtrace_rs::symbolize::gimli::resolve+0x698>
   1cf8e:	31 c9                	xor    %ecx,%ecx
   1cf90:	49 83 f8 01          	cmp    $0x1,%r8
   1cf94:	0f 85 20 04 00 00    	jne    1d3ba <std::backtrace_rs::symbolize::gimli::resolve+0xaaa>
   1cf9a:	48 8d 14 49          	lea    (%rcx,%rcx,2),%rdx
   1cf9e:	4c 39 34 d0          	cmp    %r14,(%rax,%rdx,8)
   1cfa2:	74 0e                	je     1cfb2 <std::backtrace_rs::symbolize::gimli::resolve+0x6a2>
   1cfa4:	48 83 d1 00          	adc    $0x0,%rcx
   1cfa8:	48 83 e9 01          	sub    $0x1,%rcx
   1cfac:	0f 82 76 04 00 00    	jb     1d428 <std::backtrace_rs::symbolize::gimli::resolve+0xb18>
   1cfb2:	49 39 c8             	cmp    %rcx,%r8
   1cfb5:	0f 86 6d 04 00 00    	jbe    1d428 <std::backtrace_rs::symbolize::gimli::resolve+0xb18>
   1cfbb:	48 8d 0c 49          	lea    (%rcx,%rcx,2),%rcx
   1cfbf:	48 8b 14 c8          	mov    (%rax,%rcx,8),%rdx
   1cfc3:	4c 39 f2             	cmp    %r14,%rdx
   1cfc6:	0f 87 5c 04 00 00    	ja     1d428 <std::backtrace_rs::symbolize::gimli::resolve+0xb18>
   1cfcc:	48 03 54 c8 08       	add    0x8(%rax,%rcx,8),%rdx
   1cfd1:	4c 39 f2             	cmp    %r14,%rdx
   1cfd4:	0f 82 4e 04 00 00    	jb     1d428 <std::backtrace_rs::symbolize::gimli::resolve+0xb18>
   1cfda:	48 8b bc 24 a0 00 00 	mov    0xa0(%rsp),%rdi
   1cfe1:	00 
   1cfe2:	48 81 c7 38 01 00 00 	add    $0x138,%rdi
   1cfe9:	8b 74 c8 10          	mov    0x10(%rax,%rcx,8),%esi
   1cfed:	ff 15 b5 8f 02 00    	callq  *0x28fb5(%rip)        # 45fa8 <_GLOBAL_OFFSET_TABLE_+0x620>
   1cff3:	48 85 c0             	test   %rax,%rax
   1cff6:	0f 84 2c 04 00 00    	je     1d428 <std::backtrace_rs::symbolize::gimli::resolve+0xb18>
   1cffc:	48 c7 84 24 70 01 00 	movq   $0x1,0x170(%rsp)
   1d003:	00 01 00 00 00 
   1d008:	4c 89 b4 24 78 01 00 	mov    %r14,0x178(%rsp)
   1d00f:	00 
   1d010:	48 89 84 24 80 01 00 	mov    %rax,0x180(%rsp)
   1d017:	00 
   1d018:	48 89 94 24 88 01 00 	mov    %rdx,0x188(%rsp)
   1d01f:	00 
   1d020:	48 8d b4 24 70 01 00 	lea    0x170(%rsp),%rsi
   1d027:	00 
   1d028:	48 8b bc 24 08 01 00 	mov    0x108(%rsp),%rdi
   1d02f:	00 
   1d030:	48 8b 84 24 10 01 00 	mov    0x110(%rsp),%rax
   1d037:	00 
   1d038:	ff 50 18             	callq  *0x18(%rax)
   1d03b:	e9 e8 03 00 00       	jmpq   1d428 <std::backtrace_rs::symbolize::gimli::resolve+0xb18>
   1d040:	31 f6                	xor    %esi,%esi
   1d042:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1d049:	00 00 00 
   1d04c:	0f 1f 40 00          	nopl   0x0(%rax)
   1d050:	c7 84 24 10 03 00 00 	movl   $0x2,0x310(%rsp)
   1d057:	02 00 00 00 
   1d05b:	0f 10 a4 24 a8 01 00 	movups 0x1a8(%rsp),%xmm4
   1d062:	00 
   1d063:	0f 10 ac 24 b8 01 00 	movups 0x1b8(%rsp),%xmm5
   1d06a:	00 
   1d06b:	66 0f 6f 84 24 10 03 	movdqa 0x310(%rsp),%xmm0
   1d072:	00 00 
   1d074:	0f 28 8c 24 00 03 00 	movaps 0x300(%rsp),%xmm1
   1d07b:	00 
   1d07c:	0f 11 8c 24 a8 01 00 	movups %xmm1,0x1a8(%rsp)
   1d083:	00 
   1d084:	f3 0f 7f 84 24 b8 01 	movdqu %xmm0,0x1b8(%rsp)
   1d08b:	00 00 
   1d08d:	66 41 0f 7e c6       	movd   %xmm0,%r14d
   1d092:	48 39 f8             	cmp    %rdi,%rax
   1d095:	0f 84 e5 00 00 00    	je     1d180 <std::backtrace_rs::symbolize::gimli::resolve+0x870>
   1d09b:	48 8d 48 f8          	lea    -0x8(%rax),%rcx
   1d09f:	48 89 8c 24 a0 01 00 	mov    %rcx,0x1a0(%rsp)
   1d0a6:	00 
   1d0a7:	48 8b 58 f8          	mov    -0x8(%rax),%rbx
   1d0ab:	48 85 db             	test   %rbx,%rbx
   1d0ae:	0f 84 cc 00 00 00    	je     1d180 <std::backtrace_rs::symbolize::gimli::resolve+0x870>
   1d0b4:	44 8b 7b 20          	mov    0x20(%rbx),%r15d
   1d0b8:	44 8b 63 24          	mov    0x24(%rbx),%r12d
   1d0bc:	45 31 ed             	xor    %r13d,%r13d
   1d0bf:	45 85 ff             	test   %r15d,%r15d
   1d0c2:	41 0f 95 c2          	setne  %r10b
   1d0c6:	31 c0                	xor    %eax,%eax
   1d0c8:	45 85 e4             	test   %r12d,%r12d
   1d0cb:	0f 95 c2             	setne  %dl
   1d0ce:	48 83 7b 18 00       	cmpq   $0x0,0x18(%rbx)
   1d0d3:	0f 84 26 02 00 00    	je     1d2ff <std::backtrace_rs::symbolize::gimli::resolve+0x9ef>
   1d0d9:	88 54 24 10          	mov    %dl,0x10(%rsp)
   1d0dd:	44 88 94 24 88 00 00 	mov    %r10b,0x88(%rsp)
   1d0e4:	00 
   1d0e5:	48 89 b4 24 98 00 00 	mov    %rsi,0x98(%rsp)
   1d0ec:	00 
   1d0ed:	0f 29 6c 24 20       	movaps %xmm5,0x20(%rsp)
   1d0f2:	0f 29 64 24 50       	movaps %xmm4,0x50(%rsp)
   1d0f7:	48 8b b4 24 70 01 00 	mov    0x170(%rsp),%rsi
   1d0fe:	00 
   1d0ff:	48 8b 94 24 78 01 00 	mov    0x178(%rsp),%rdx
   1d106:	00 
   1d107:	48 8d bc 24 00 03 00 	lea    0x300(%rsp),%rdi
   1d10e:	00 
   1d10f:	e8 1c 00 ff ff       	callq  d130 <addr2line::ResUnit<R>::parse_lines>
   1d114:	48 83 bc 24 00 03 00 	cmpq   $0x1,0x300(%rsp)
   1d11b:	00 01 
   1d11d:	0f 84 c3 02 00 00    	je     1d3e6 <std::backtrace_rs::symbolize::gimli::resolve+0xad6>
   1d123:	48 8b 84 24 08 03 00 	mov    0x308(%rsp),%rax
   1d12a:	00 
   1d12b:	48 85 c0             	test   %rax,%rax
   1d12e:	0f 84 d5 01 00 00    	je     1d309 <std::backtrace_rs::symbolize::gimli::resolve+0x9f9>
   1d134:	4c 8b 4b 18          	mov    0x18(%rbx),%r9
   1d138:	4c 39 48 08          	cmp    %r9,0x8(%rax)
   1d13c:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   1d141:	0f 28 64 24 50       	movaps 0x50(%rsp),%xmm4
   1d146:	0f 28 6c 24 20       	movaps 0x20(%rsp),%xmm5
   1d14b:	44 0f b6 94 24 88 00 	movzbl 0x88(%rsp),%r10d
   1d152:	00 00 
   1d154:	0f b6 54 24 10       	movzbl 0x10(%rsp),%edx
   1d159:	0f 86 ce 01 00 00    	jbe    1d32d <std::backtrace_rs::symbolize::gimli::resolve+0xa1d>
   1d15f:	4c 8b 00             	mov    (%rax),%r8
   1d162:	4b 8d 04 49          	lea    (%r9,%r9,2),%rax
   1d166:	4d 8b 0c c0          	mov    (%r8,%rax,8),%r9
   1d16a:	4d 8b 44 c0 10       	mov    0x10(%r8,%rax,8),%r8
   1d16f:	e9 bc 01 00 00       	jmpq   1d330 <std::backtrace_rs::symbolize::gimli::resolve+0xa20>
   1d174:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1d17b:	00 00 00 
   1d17e:	66 90                	xchg   %ax,%ax
   1d180:	48 8b 84 24 80 01 00 	mov    0x180(%rsp),%rax
   1d187:	00 
   1d188:	4c 8b 78 08          	mov    0x8(%rax),%r15
   1d18c:	4c 8b 60 10          	mov    0x10(%rax),%r12
   1d190:	4d 85 ff             	test   %r15,%r15
   1d193:	74 1b                	je     1d1b0 <std::backtrace_rs::symbolize::gimli::resolve+0x8a0>
   1d195:	48 8b 84 24 70 01 00 	mov    0x170(%rsp),%rax
   1d19c:	00 
   1d19d:	0f b7 98 00 02 00 00 	movzwl 0x200(%rax),%ebx
   1d1a4:	41 83 fe 03          	cmp    $0x3,%r14d
   1d1a8:	75 10                	jne    1d1ba <std::backtrace_rs::symbolize::gimli::resolve+0x8aa>
   1d1aa:	e9 51 00 00 00       	jmpq   1d200 <std::backtrace_rs::symbolize::gimli::resolve+0x8f0>
   1d1af:	90                   	nop
   1d1b0:	66 bb 02 00          	mov    $0x2,%bx
   1d1b4:	41 83 fe 03          	cmp    $0x3,%r14d
   1d1b8:	74 46                	je     1d200 <std::backtrace_rs::symbolize::gimli::resolve+0x8f0>
   1d1ba:	48 8b b4 24 90 01 00 	mov    0x190(%rsp),%rsi
   1d1c1:	00 
   1d1c2:	48 85 f6             	test   %rsi,%rsi
   1d1c5:	74 39                	je     1d200 <std::backtrace_rs::symbolize::gimli::resolve+0x8f0>
   1d1c7:	48 c1 e6 03          	shl    $0x3,%rsi
   1d1cb:	48 85 f6             	test   %rsi,%rsi
   1d1ce:	74 30                	je     1d200 <std::backtrace_rs::symbolize::gimli::resolve+0x8f0>
   1d1d0:	48 8b bc 24 88 01 00 	mov    0x188(%rsp),%rdi
   1d1d7:	00 
   1d1d8:	ba 08 00 00 00       	mov    $0x8,%edx
   1d1dd:	0f 29 64 24 50       	movaps %xmm4,0x50(%rsp)
   1d1e2:	0f 29 6c 24 20       	movaps %xmm5,0x20(%rsp)
   1d1e7:	ff 15 0b 8a 02 00    	callq  *0x28a0b(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   1d1ed:	0f 28 6c 24 20       	movaps 0x20(%rsp),%xmm5
   1d1f2:	0f 28 64 24 50       	movaps 0x50(%rsp),%xmm4
   1d1f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1d1fe:	00 00 
   1d200:	48 8b 84 24 40 03 00 	mov    0x340(%rsp),%rax
   1d207:	00 
   1d208:	48 89 84 24 b0 01 00 	mov    %rax,0x1b0(%rsp)
   1d20f:	00 
   1d210:	f3 0f 6f 84 24 00 03 	movdqu 0x300(%rsp),%xmm0
   1d217:	00 00 
   1d219:	0f 10 8c 24 10 03 00 	movups 0x310(%rsp),%xmm1
   1d220:	00 
   1d221:	0f 10 94 24 20 03 00 	movups 0x320(%rsp),%xmm2
   1d228:	00 
   1d229:	0f 10 9c 24 30 03 00 	movups 0x330(%rsp),%xmm3
   1d230:	00 
   1d231:	0f 29 9c 24 a0 01 00 	movaps %xmm3,0x1a0(%rsp)
   1d238:	00 
   1d239:	0f 29 94 24 90 01 00 	movaps %xmm2,0x190(%rsp)
   1d240:	00 
   1d241:	0f 29 8c 24 80 01 00 	movaps %xmm1,0x180(%rsp)
   1d248:	00 
   1d249:	66 0f 7f 84 24 70 01 	movdqa %xmm0,0x170(%rsp)
   1d250:	00 00 
   1d252:	c7 84 24 b8 01 00 00 	movl   $0x3,0x1b8(%rsp)
   1d259:	03 00 00 00 
   1d25d:	8b 84 24 a0 04 00 00 	mov    0x4a0(%rsp),%eax
   1d264:	48 8d 8c 24 bc 01 00 	lea    0x1bc(%rsp),%rcx
   1d26b:	00 
   1d26c:	89 41 08             	mov    %eax,0x8(%rcx)
   1d26f:	48 8b 84 24 98 04 00 	mov    0x498(%rsp),%rax
   1d276:	00 
   1d277:	48 89 01             	mov    %rax,(%rcx)
   1d27a:	41 bd 03 00 00 00    	mov    $0x3,%r13d
   1d280:	66 83 fb 02          	cmp    $0x2,%bx
   1d284:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   1d289:	75 03                	jne    1d28e <std::backtrace_rs::symbolize::gimli::resolve+0x97e>
   1d28b:	45 31 ff             	xor    %r15d,%r15d
   1d28e:	48 c7 84 24 00 03 00 	movq   $0x0,0x300(%rsp)
   1d295:	00 00 00 00 00 
   1d29a:	48 89 b4 24 08 03 00 	mov    %rsi,0x308(%rsp)
   1d2a1:	00 
   1d2a2:	0f 11 a4 24 10 03 00 	movups %xmm4,0x310(%rsp)
   1d2a9:	00 
   1d2aa:	0f 11 ac 24 20 03 00 	movups %xmm5,0x320(%rsp)
   1d2b1:	00 
   1d2b2:	4c 89 bc 24 30 03 00 	mov    %r15,0x330(%rsp)
   1d2b9:	00 
   1d2ba:	4c 89 a4 24 38 03 00 	mov    %r12,0x338(%rsp)
   1d2c1:	00 
   1d2c2:	48 8b bc 24 08 01 00 	mov    0x108(%rsp),%rdi
   1d2c9:	00 
   1d2ca:	48 8d b4 24 00 03 00 	lea    0x300(%rsp),%rsi
   1d2d1:	00 
   1d2d2:	48 8b 84 24 10 01 00 	mov    0x110(%rsp),%rax
   1d2d9:	00 
   1d2da:	ff 50 18             	callq  *0x18(%rax)
   1d2dd:	41 83 fd 03          	cmp    $0x3,%r13d
   1d2e1:	0f 84 41 01 00 00    	je     1d428 <std::backtrace_rs::symbolize::gimli::resolve+0xb18>
   1d2e7:	48 8b bc 24 98 01 00 	mov    0x198(%rsp),%rdi
   1d2ee:	00 
   1d2ef:	48 8b 84 24 a0 01 00 	mov    0x1a0(%rsp),%rax
   1d2f6:	00 
   1d2f7:	40 b6 01             	mov    $0x1,%sil
   1d2fa:	e9 51 fd ff ff       	jmpq   1d050 <std::backtrace_rs::symbolize::gimli::resolve+0x740>
   1d2ff:	45 31 c9             	xor    %r9d,%r9d
   1d302:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   1d307:	eb 29                	jmp    1d332 <std::backtrace_rs::symbolize::gimli::resolve+0xa22>
   1d309:	45 31 c9             	xor    %r9d,%r9d
   1d30c:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   1d311:	0f 28 64 24 50       	movaps 0x50(%rsp),%xmm4
   1d316:	0f 28 6c 24 20       	movaps 0x20(%rsp),%xmm5
   1d31b:	31 c0                	xor    %eax,%eax
   1d31d:	44 0f b6 94 24 88 00 	movzbl 0x88(%rsp),%r10d
   1d324:	00 00 
   1d326:	0f b6 54 24 10       	movzbl 0x10(%rsp),%edx
   1d32b:	eb 05                	jmp    1d332 <std::backtrace_rs::symbolize::gimli::resolve+0xa22>
   1d32d:	45 31 c9             	xor    %r9d,%r9d
   1d330:	31 c0                	xor    %eax,%eax
   1d332:	45 88 d5             	mov    %r10b,%r13b
   1d335:	88 d0                	mov    %dl,%al
   1d337:	4c 89 8c 24 a8 01 00 	mov    %r9,0x1a8(%rsp)
   1d33e:	00 
   1d33f:	4c 89 84 24 b0 01 00 	mov    %r8,0x1b0(%rsp)
   1d346:	00 
   1d347:	44 89 ac 24 b8 01 00 	mov    %r13d,0x1b8(%rsp)
   1d34e:	00 
   1d34f:	44 89 bc 24 bc 01 00 	mov    %r15d,0x1bc(%rsp)
   1d356:	00 
   1d357:	89 84 24 c0 01 00 00 	mov    %eax,0x1c0(%rsp)
   1d35e:	44 89 a4 24 c4 01 00 	mov    %r12d,0x1c4(%rsp)
   1d365:	00 
   1d366:	4c 8b 7b 08          	mov    0x8(%rbx),%r15
   1d36a:	4c 8b 63 10          	mov    0x10(%rbx),%r12
   1d36e:	4d 85 ff             	test   %r15,%r15
   1d371:	0f 85 17 ff ff ff    	jne    1d28e <std::backtrace_rs::symbolize::gimli::resolve+0x97e>
   1d377:	e9 0f ff ff ff       	jmpq   1d28b <std::backtrace_rs::symbolize::gimli::resolve+0x97b>
   1d37c:	48 89 f0             	mov    %rsi,%rax
   1d37f:	e9 19 00 00 00       	jmpq   1d39d <std::backtrace_rs::symbolize::gimli::resolve+0xa8d>
   1d384:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1d38b:	00 00 00 
   1d38e:	66 90                	xchg   %ax,%ax
   1d390:	48 29 c8             	sub    %rcx,%rax
   1d393:	48 83 f8 01          	cmp    $0x1,%rax
   1d397:	0f 86 25 fa ff ff    	jbe    1cdc2 <std::backtrace_rs::symbolize::gimli::resolve+0x4b2>
   1d39d:	48 89 c1             	mov    %rax,%rcx
   1d3a0:	48 d1 e9             	shr    %rcx
   1d3a3:	4a 8d 14 39          	lea    (%rcx,%r15,1),%rdx
   1d3a7:	48 89 d7             	mov    %rdx,%rdi
   1d3aa:	48 c1 e7 05          	shl    $0x5,%rdi
   1d3ae:	4d 39 74 3d 10       	cmp    %r14,0x10(%r13,%rdi,1)
   1d3b3:	77 db                	ja     1d390 <std::backtrace_rs::symbolize::gimli::resolve+0xa80>
   1d3b5:	49 89 d7             	mov    %rdx,%r15
   1d3b8:	eb d6                	jmp    1d390 <std::backtrace_rs::symbolize::gimli::resolve+0xa80>
   1d3ba:	4c 89 c6             	mov    %r8,%rsi
   1d3bd:	eb 0e                	jmp    1d3cd <std::backtrace_rs::symbolize::gimli::resolve+0xabd>
   1d3bf:	90                   	nop
   1d3c0:	48 29 fe             	sub    %rdi,%rsi
   1d3c3:	48 83 fe 01          	cmp    $0x1,%rsi
   1d3c7:	0f 86 cd fb ff ff    	jbe    1cf9a <std::backtrace_rs::symbolize::gimli::resolve+0x68a>
   1d3cd:	48 89 f7             	mov    %rsi,%rdi
   1d3d0:	48 d1 ef             	shr    %rdi
   1d3d3:	48 8d 14 0f          	lea    (%rdi,%rcx,1),%rdx
   1d3d7:	48 8d 1c 52          	lea    (%rdx,%rdx,2),%rbx
   1d3db:	4c 39 34 d8          	cmp    %r14,(%rax,%rbx,8)
   1d3df:	77 df                	ja     1d3c0 <std::backtrace_rs::symbolize::gimli::resolve+0xab0>
   1d3e1:	48 89 d1             	mov    %rdx,%rcx
   1d3e4:	eb da                	jmp    1d3c0 <std::backtrace_rs::symbolize::gimli::resolve+0xab0>
   1d3e6:	41 83 fe 03          	cmp    $0x3,%r14d
   1d3ea:	74 29                	je     1d415 <std::backtrace_rs::symbolize::gimli::resolve+0xb05>
   1d3ec:	48 8b b4 24 90 01 00 	mov    0x190(%rsp),%rsi
   1d3f3:	00 
   1d3f4:	48 85 f6             	test   %rsi,%rsi
   1d3f7:	74 1c                	je     1d415 <std::backtrace_rs::symbolize::gimli::resolve+0xb05>
   1d3f9:	48 c1 e6 03          	shl    $0x3,%rsi
   1d3fd:	48 85 f6             	test   %rsi,%rsi
   1d400:	74 13                	je     1d415 <std::backtrace_rs::symbolize::gimli::resolve+0xb05>
   1d402:	48 8b bc 24 88 01 00 	mov    0x188(%rsp),%rdi
   1d409:	00 
   1d40a:	ba 08 00 00 00       	mov    $0x8,%edx
   1d40f:	ff 15 e3 87 02 00    	callq  *0x287e3(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   1d415:	f6 84 24 98 00 00 00 	testb  $0x1,0x98(%rsp)
   1d41c:	01 
   1d41d:	4c 8b 74 24 30       	mov    0x30(%rsp),%r14
   1d422:	0f 84 48 fb ff ff    	je     1cf70 <std::backtrace_rs::symbolize::gimli::resolve+0x660>
   1d428:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   1d42c:	5b                   	pop    %rbx
   1d42d:	41 5c                	pop    %r12
   1d42f:	41 5d                	pop    %r13
   1d431:	41 5e                	pop    %r14
   1d433:	41 5f                	pop    %r15
   1d435:	5d                   	pop    %rbp
   1d436:	c3                   	retq   
   1d437:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
   1d43e:	00 
   1d43f:	48 8b b4 24 88 00 00 	mov    0x88(%rsp),%rsi
   1d446:	00 
   1d447:	e8 e4 fc fe ff       	callq  d130 <addr2line::ResUnit<R>::parse_lines>
   1d44c:	48 83 bc 24 70 01 00 	cmpq   $0x1,0x170(%rsp)
   1d453:	00 01 
   1d455:	0f 84 15 fb ff ff    	je     1cf70 <std::backtrace_rs::symbolize::gimli::resolve+0x660>
   1d45b:	4c 8b 84 24 78 01 00 	mov    0x178(%rsp),%r8
   1d462:	00 
   1d463:	41 bf 02 00 00 00    	mov    $0x2,%r15d
   1d469:	4d 85 c0             	test   %r8,%r8
   1d46c:	0f 84 c3 00 00 00    	je     1d535 <std::backtrace_rs::symbolize::gimli::resolve+0xc25>
   1d472:	49 8b 70 18          	mov    0x18(%r8),%rsi
   1d476:	48 85 f6             	test   %rsi,%rsi
   1d479:	48 8b 54 24 50       	mov    0x50(%rsp),%rdx
   1d47e:	0f 84 ac 00 00 00    	je     1d530 <std::backtrace_rs::symbolize::gimli::resolve+0xc20>
   1d484:	49 89 db             	mov    %rbx,%r11
   1d487:	4d 8b 48 10          	mov    0x10(%r8),%r9
   1d48b:	31 ff                	xor    %edi,%edi
   1d48d:	48 83 fe 01          	cmp    $0x1,%rsi
   1d491:	0f 85 a8 00 00 00    	jne    1d53f <std::backtrace_rs::symbolize::gimli::resolve+0xc2f>
   1d497:	48 89 f8             	mov    %rdi,%rax
   1d49a:	48 c1 e0 05          	shl    $0x5,%rax
   1d49e:	4d 39 34 01          	cmp    %r14,(%r9,%rax,1)
   1d4a2:	0f 87 c5 00 00 00    	ja     1d56d <std::backtrace_rs::symbolize::gimli::resolve+0xc5d>
   1d4a8:	4d 39 74 01 08       	cmp    %r14,0x8(%r9,%rax,1)
   1d4ad:	4c 89 db             	mov    %r11,%rbx
   1d4b0:	76 7e                	jbe    1d530 <std::backtrace_rs::symbolize::gimli::resolve+0xc20>
   1d4b2:	48 39 f7             	cmp    %rsi,%rdi
   1d4b5:	0f 83 db 14 00 00    	jae    1e996 <std::backtrace_rs::symbolize::gimli::resolve+0x2086>
   1d4bb:	49 8b 74 01 18       	mov    0x18(%r9,%rax,1),%rsi
   1d4c0:	48 85 f6             	test   %rsi,%rsi
   1d4c3:	74 6b                	je     1d530 <std::backtrace_rs::symbolize::gimli::resolve+0xc20>
   1d4c5:	4d 8b 4c 01 10       	mov    0x10(%r9,%rax,1),%r9
   1d4ca:	31 ff                	xor    %edi,%edi
   1d4cc:	48 83 fe 01          	cmp    $0x1,%rsi
   1d4d0:	0f 85 9c 00 00 00    	jne    1d572 <std::backtrace_rs::symbolize::gimli::resolve+0xc62>
   1d4d6:	48 8d 04 7f          	lea    (%rdi,%rdi,2),%rax
   1d4da:	4d 39 34 c1          	cmp    %r14,(%r9,%rax,8)
   1d4de:	4c 89 db             	mov    %r11,%rbx
   1d4e1:	74 0f                	je     1d4f2 <std::backtrace_rs::symbolize::gimli::resolve+0xbe2>
   1d4e3:	0f 92 c0             	setb   %al
   1d4e6:	0f b6 c0             	movzbl %al,%eax
   1d4e9:	48 01 c7             	add    %rax,%rdi
   1d4ec:	74 42                	je     1d530 <std::backtrace_rs::symbolize::gimli::resolve+0xc20>
   1d4ee:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   1d4f2:	48 39 f7             	cmp    %rsi,%rdi
   1d4f5:	0f 83 aa 14 00 00    	jae    1e9a5 <std::backtrace_rs::symbolize::gimli::resolve+0x2095>
   1d4fb:	48 8d 34 7f          	lea    (%rdi,%rdi,2),%rsi
   1d4ff:	49 8b 44 f1 08       	mov    0x8(%r9,%rsi,8),%rax
   1d504:	49 39 40 08          	cmp    %rax,0x8(%r8)
   1d508:	0f 86 8f 00 00 00    	jbe    1d59d <std::backtrace_rs::symbolize::gimli::resolve+0xc8d>
   1d50e:	49 8b 08             	mov    (%r8),%rcx
   1d511:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
   1d515:	48 8b 3c c1          	mov    (%rcx,%rax,8),%rdi
   1d519:	48 89 bc 24 00 01 00 	mov    %rdi,0x100(%rsp)
   1d520:	00 
   1d521:	48 8b 44 c1 10       	mov    0x10(%rcx,%rax,8),%rax
   1d526:	48 89 84 24 50 01 00 	mov    %rax,0x150(%rsp)
   1d52d:	00 
   1d52e:	eb 77                	jmp    1d5a7 <std::backtrace_rs::symbolize::gimli::resolve+0xc97>
   1d530:	e9 a1 00 00 00       	jmpq   1d5d6 <std::backtrace_rs::symbolize::gimli::resolve+0xcc6>
   1d535:	48 8b 54 24 50       	mov    0x50(%rsp),%rdx
   1d53a:	e9 97 00 00 00       	jmpq   1d5d6 <std::backtrace_rs::symbolize::gimli::resolve+0xcc6>
   1d53f:	48 89 f3             	mov    %rsi,%rbx
   1d542:	eb 0d                	jmp    1d551 <std::backtrace_rs::symbolize::gimli::resolve+0xc41>
   1d544:	48 29 cb             	sub    %rcx,%rbx
   1d547:	48 83 fb 01          	cmp    $0x1,%rbx
   1d54b:	0f 86 46 ff ff ff    	jbe    1d497 <std::backtrace_rs::symbolize::gimli::resolve+0xb87>
   1d551:	48 89 d9             	mov    %rbx,%rcx
   1d554:	48 d1 e9             	shr    %rcx
   1d557:	4c 8d 14 39          	lea    (%rcx,%rdi,1),%r10
   1d55b:	4c 89 d0             	mov    %r10,%rax
   1d55e:	48 c1 e0 05          	shl    $0x5,%rax
   1d562:	4d 39 34 01          	cmp    %r14,(%r9,%rax,1)
   1d566:	77 dc                	ja     1d544 <std::backtrace_rs::symbolize::gimli::resolve+0xc34>
   1d568:	4c 89 d7             	mov    %r10,%rdi
   1d56b:	eb d7                	jmp    1d544 <std::backtrace_rs::symbolize::gimli::resolve+0xc34>
   1d56d:	4c 89 db             	mov    %r11,%rbx
   1d570:	eb 64                	jmp    1d5d6 <std::backtrace_rs::symbolize::gimli::resolve+0xcc6>
   1d572:	48 89 f3             	mov    %rsi,%rbx
   1d575:	eb 0d                	jmp    1d584 <std::backtrace_rs::symbolize::gimli::resolve+0xc74>
   1d577:	48 29 c3             	sub    %rax,%rbx
   1d57a:	48 83 fb 01          	cmp    $0x1,%rbx
   1d57e:	0f 86 52 ff ff ff    	jbe    1d4d6 <std::backtrace_rs::symbolize::gimli::resolve+0xbc6>
   1d584:	48 89 d8             	mov    %rbx,%rax
   1d587:	48 d1 e8             	shr    %rax
   1d58a:	4c 8d 14 38          	lea    (%rax,%rdi,1),%r10
   1d58e:	4b 8d 0c 52          	lea    (%r10,%r10,2),%rcx
   1d592:	4d 39 34 c9          	cmp    %r14,(%r9,%rcx,8)
   1d596:	77 df                	ja     1d577 <std::backtrace_rs::symbolize::gimli::resolve+0xc67>
   1d598:	4c 89 d7             	mov    %r10,%rdi
   1d59b:	eb da                	jmp    1d577 <std::backtrace_rs::symbolize::gimli::resolve+0xc67>
   1d59d:	31 c0                	xor    %eax,%eax
   1d59f:	48 89 84 24 00 01 00 	mov    %rax,0x100(%rsp)
   1d5a6:	00 
   1d5a7:	41 8b 4c f1 10       	mov    0x10(%r9,%rsi,8),%ecx
   1d5ac:	41 8b 44 f1 14       	mov    0x14(%r9,%rsi,8),%eax
   1d5b1:	45 31 ff             	xor    %r15d,%r15d
   1d5b4:	89 8c 24 d4 00 00 00 	mov    %ecx,0xd4(%rsp)
   1d5bb:	85 c9                	test   %ecx,%ecx
   1d5bd:	41 0f 95 c7          	setne  %r15b
   1d5c1:	31 c9                	xor    %ecx,%ecx
   1d5c3:	89 84 24 dc 00 00 00 	mov    %eax,0xdc(%rsp)
   1d5ca:	85 c0                	test   %eax,%eax
   1d5cc:	0f 95 c1             	setne  %cl
   1d5cf:	89 8c 24 d8 00 00 00 	mov    %ecx,0xd8(%rsp)
   1d5d6:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
   1d5dd:	00 
   1d5de:	48 8b b4 24 88 00 00 	mov    0x88(%rsp),%rsi
   1d5e5:	00 
   1d5e6:	e8 75 31 ff ff       	callq  10760 <addr2line::ResUnit<R>::parse_functions>
   1d5eb:	48 83 bc 24 70 01 00 	cmpq   $0x1,0x170(%rsp)
   1d5f2:	00 01 
   1d5f4:	0f 84 76 f9 ff ff    	je     1cf70 <std::backtrace_rs::symbolize::gimli::resolve+0x660>
   1d5fa:	48 8b 84 24 78 01 00 	mov    0x178(%rsp),%rax
   1d601:	00 
   1d602:	48 8b 70 18          	mov    0x18(%rax),%rsi
   1d606:	49 39 f4             	cmp    %rsi,%r12
   1d609:	0f 83 66 13 00 00    	jae    1e975 <std::backtrace_rs::symbolize::gimli::resolve+0x2065>
   1d60f:	48 8b 70 08          	mov    0x8(%rax),%rsi
   1d613:	48 8b 48 10          	mov    0x10(%rax),%rcx
   1d617:	48 8b 7c d9 10       	mov    0x10(%rcx,%rbx,8),%rdi
   1d61c:	48 39 f7             	cmp    %rsi,%rdi
   1d61f:	0f 83 62 13 00 00    	jae    1e987 <std::backtrace_rs::symbolize::gimli::resolve+0x2077>
   1d625:	4c 8b 28             	mov    (%rax),%r13
   1d628:	4c 8d 14 ff          	lea    (%rdi,%rdi,8),%r10
   1d62c:	4b 8b 44 d5 08       	mov    0x8(%r13,%r10,8),%rax
   1d631:	48 83 f8 02          	cmp    $0x2,%rax
   1d635:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   1d63a:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   1d63f:	0f 85 10 07 00 00    	jne    1dd55 <std::backtrace_rs::symbolize::gimli::resolve+0x1445>
   1d645:	4e 8d 0c d5 08 00 00 	lea    0x8(,%r10,8),%r9
   1d64c:	00 
   1d64d:	4d 01 e9             	add    %r13,%r9
   1d650:	4b 8b 5c d5 00       	mov    0x0(%r13,%r10,8),%rbx
   1d655:	48 8b 44 0f 18       	mov    0x18(%rdi,%rcx,1),%rax
   1d65a:	4c 8b 5c 0f 30       	mov    0x30(%rdi,%rcx,1),%r11
   1d65f:	45 31 c0             	xor    %r8d,%r8d
   1d662:	80 7c 0f 39 08       	cmpb   $0x8,0x39(%rdi,%rcx,1)
   1d667:	41 0f 94 c0          	sete   %r8b
   1d66b:	48 89 c2             	mov    %rax,%rdx
   1d66e:	4c 29 da             	sub    %r11,%rdx
   1d671:	4a 8d 14 c2          	lea    (%rdx,%r8,8),%rdx
   1d675:	48 83 c2 04          	add    $0x4,%rdx
   1d679:	31 f6                	xor    %esi,%esi
   1d67b:	48 89 74 24 40       	mov    %rsi,0x40(%rsp)
   1d680:	48 89 9c 24 98 00 00 	mov    %rbx,0x98(%rsp)
   1d687:	00 
   1d688:	41 bc 37 00 00 00    	mov    $0x37,%r12d
   1d68e:	48 29 d3             	sub    %rdx,%rbx
   1d691:	44 89 7c 24 1c       	mov    %r15d,0x1c(%rsp)
   1d696:	0f 82 78 06 00 00    	jb     1dd14 <std::backtrace_rs::symbolize::gimli::resolve+0x1404>
   1d69c:	49 39 db             	cmp    %rbx,%r11
   1d69f:	0f 86 6f 06 00 00    	jbe    1dd14 <std::backtrace_rs::symbolize::gimli::resolve+0x1404>
   1d6a5:	4c 89 4c 24 78       	mov    %r9,0x78(%rsp)
   1d6aa:	48 8b 94 24 a0 00 00 	mov    0xa0(%rsp),%rdx
   1d6b1:	00 
   1d6b2:	48 8b 72 20          	mov    0x20(%rdx),%rsi
   1d6b6:	48 89 b4 24 c0 00 00 	mov    %rsi,0xc0(%rsp)
   1d6bd:	00 
   1d6be:	48 8b 52 30          	mov    0x30(%rdx),%rdx
   1d6c2:	48 89 94 24 b8 00 00 	mov    %rdx,0xb8(%rsp)
   1d6c9:	00 
   1d6ca:	4c 8d 4c 0f 18       	lea    0x18(%rdi,%rcx,1),%r9
   1d6cf:	4c 8d 7c 0f 40       	lea    0x40(%rdi,%rcx,1),%r15
   1d6d4:	48 8b 74 0f 28       	mov    0x28(%rdi,%rcx,1),%rsi
   1d6d9:	4c 8d 24 1e          	lea    (%rsi,%rbx,1),%r12
   1d6dd:	4c 89 a4 24 00 03 00 	mov    %r12,0x300(%rsp)
   1d6e4:	00 
   1d6e5:	4c 89 da             	mov    %r11,%rdx
   1d6e8:	48 29 da             	sub    %rbx,%rdx
   1d6eb:	48 89 94 24 08 03 00 	mov    %rdx,0x308(%rsp)
   1d6f2:	00 
   1d6f3:	4c 89 8c 24 10 03 00 	mov    %r9,0x310(%rsp)
   1d6fa:	00 
   1d6fb:	4c 89 bc 24 c8 00 00 	mov    %r15,0xc8(%rsp)
   1d702:	00 
   1d703:	4c 89 bc 24 18 03 00 	mov    %r15,0x318(%rsp)
   1d70a:	00 
   1d70b:	48 c7 84 24 20 03 00 	movq   $0x0,0x320(%rsp)
   1d712:	00 00 00 00 00 
   1d717:	0f 84 a8 00 00 00    	je     1d7c5 <std::backtrace_rs::symbolize::gimli::resolve+0xeb5>
   1d71d:	48 01 f9             	add    %rdi,%rcx
   1d720:	48 83 c1 08          	add    $0x8,%rcx
   1d724:	48 89 8c 24 b0 00 00 	mov    %rcx,0xb0(%rsp)
   1d72b:	00 
   1d72c:	4a 8d 3c c5 04 00 00 	lea    0x4(,%r8,8),%rdi
   1d733:	00 
   1d734:	49 29 fb             	sub    %rdi,%r11
   1d737:	49 29 c3             	sub    %rax,%r11
   1d73a:	4c 01 de             	add    %r11,%rsi
   1d73d:	48 01 c7             	add    %rax,%rdi
   1d740:	48 8b 94 24 98 00 00 	mov    0x98(%rsp),%rdx
   1d747:	00 
   1d748:	49 89 d1             	mov    %rdx,%r9
   1d74b:	49 f7 d1             	not    %r9
   1d74e:	31 c0                	xor    %eax,%eax
   1d750:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1d755:	31 c0                	xor    %eax,%eax
   1d757:	31 c9                	xor    %ecx,%ecx
   1d759:	44 8b 7c 24 1c       	mov    0x1c(%rsp),%r15d
   1d75e:	4c 8d 24 16          	lea    (%rsi,%rdx,1),%r12
   1d762:	49 83 c4 01          	add    $0x1,%r12
   1d766:	49 8d 1c 39          	lea    (%r9,%rdi,1),%rbx
   1d76a:	4c 89 a4 24 00 03 00 	mov    %r12,0x300(%rsp)
   1d771:	00 
   1d772:	48 89 9c 24 08 03 00 	mov    %rbx,0x308(%rsp)
   1d779:	00 
   1d77a:	0f b6 14 16          	movzbl (%rsi,%rdx,1),%edx
   1d77e:	83 f9 3f             	cmp    $0x3f,%ecx
   1d781:	75 05                	jne    1d788 <std::backtrace_rs::symbolize::gimli::resolve+0xe78>
   1d783:	80 fa 01             	cmp    $0x1,%dl
   1d786:	77 52                	ja     1d7da <std::backtrace_rs::symbolize::gimli::resolve+0xeca>
   1d788:	0f b6 da             	movzbl %dl,%ebx
   1d78b:	89 da                	mov    %ebx,%edx
   1d78d:	83 e2 7f             	and    $0x7f,%edx
   1d790:	48 d3 e2             	shl    %cl,%rdx
   1d793:	48 09 d0             	or     %rdx,%rax
   1d796:	84 db                	test   %bl,%bl
   1d798:	79 4b                	jns    1d7e5 <std::backtrace_rs::symbolize::gimli::resolve+0xed5>
   1d79a:	83 c1 07             	add    $0x7,%ecx
   1d79d:	48 83 c6 01          	add    $0x1,%rsi
   1d7a1:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   1d7a5:	48 8b 94 24 98 00 00 	mov    0x98(%rsp),%rdx
   1d7ac:	00 
   1d7ad:	48 39 fa             	cmp    %rdi,%rdx
   1d7b0:	75 ac                	jne    1d75e <std::backtrace_rs::symbolize::gimli::resolve+0xe4e>
   1d7b2:	48 01 d6             	add    %rdx,%rsi
   1d7b5:	48 89 74 24 40       	mov    %rsi,0x40(%rsp)
   1d7ba:	41 bc 13 00 00 00    	mov    $0x13,%r12d
   1d7c0:	e9 4a 05 00 00       	jmpq   1dd0f <std::backtrace_rs::symbolize::gimli::resolve+0x13ff>
   1d7c5:	4c 89 64 24 40       	mov    %r12,0x40(%rsp)
   1d7ca:	41 bc 13 00 00 00    	mov    $0x13,%r12d
   1d7d0:	44 8b 7c 24 1c       	mov    0x1c(%rsp),%r15d
   1d7d5:	e9 35 05 00 00       	jmpq   1dd0f <std::backtrace_rs::symbolize::gimli::resolve+0x13ff>
   1d7da:	41 bc 06 00 00 00    	mov    $0x6,%r12d
   1d7e0:	e9 2a 05 00 00       	jmpq   1dd0f <std::backtrace_rs::symbolize::gimli::resolve+0x13ff>
   1d7e5:	48 85 c0             	test   %rax,%rax
   1d7e8:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   1d7ed:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   1d7f2:	0f 84 e5 11 00 00    	je     1e9dd <std::backtrace_rs::symbolize::gimli::resolve+0x20cd>
   1d7f8:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   1d7fc:	48 3b 4c 32 50       	cmp    0x50(%rdx,%rsi,1),%rcx
   1d801:	0f 83 2e 02 00 00    	jae    1da35 <std::backtrace_rs::symbolize::gimli::resolve+0x1125>
   1d807:	4c 89 54 24 68       	mov    %r10,0x68(%rsp)
   1d80c:	4c 89 6c 24 70       	mov    %r13,0x70(%rsp)
   1d811:	48 6b f9 70          	imul   $0x70,%rcx,%rdi
   1d815:	48 8b 84 24 c8 00 00 	mov    0xc8(%rsp),%rax
   1d81c:	00 
   1d81d:	48 03 38             	add    (%rax),%rdi
   1d820:	80 7f 6a 01          	cmpb   $0x1,0x6a(%rdi)
   1d824:	4c 8b bc 24 b0 00 00 	mov    0xb0(%rsp),%r15
   1d82b:	00 
   1d82c:	75 0c                	jne    1d83a <std::backtrace_rs::symbolize::gimli::resolve+0xf2a>
   1d82e:	48 c7 84 24 20 03 00 	movq   $0x1,0x320(%rsp)
   1d835:	00 01 00 00 00 
   1d83a:	48 83 c7 08          	add    $0x8,%rdi
   1d83e:	ff 15 44 82 02 00    	callq  *0x28244(%rip)        # 45a88 <_GLOBAL_OFFSET_TABLE_+0x100>
   1d844:	49 89 d5             	mov    %rdx,%r13
   1d847:	48 85 d2             	test   %rdx,%rdx
   1d84a:	0f 84 79 02 00 00    	je     1dac9 <std::backtrace_rs::symbolize::gimli::resolve+0x11b9>
   1d850:	49 89 c4             	mov    %rax,%r12
   1d853:	49 c1 e5 04          	shl    $0x4,%r13
   1d857:	49 01 c5             	add    %rax,%r13
   1d85a:	31 db                	xor    %ebx,%ebx
   1d85c:	eb 26                	jmp    1d884 <std::backtrace_rs::symbolize::gimli::resolve+0xf74>
   1d85e:	66 83 f8 03          	cmp    $0x3,%ax
   1d862:	0f 84 e4 00 00 00    	je     1d94c <std::backtrace_rs::symbolize::gimli::resolve+0x103c>
   1d868:	66 83 f8 31          	cmp    $0x31,%ax
   1d86c:	75 09                	jne    1d877 <std::backtrace_rs::symbolize::gimli::resolve+0xf67>
   1d86e:	48 85 db             	test   %rbx,%rbx
   1d871:	0f 84 3c 01 00 00    	je     1d9b3 <std::backtrace_rs::symbolize::gimli::resolve+0x10a3>
   1d877:	49 83 c4 10          	add    $0x10,%r12
   1d87b:	4d 39 ec             	cmp    %r13,%r12
   1d87e:	0f 84 47 02 00 00    	je     1dacb <std::backtrace_rs::symbolize::gimli::resolve+0x11bb>
   1d884:	49 8b 0c 24          	mov    (%r12),%rcx
   1d888:	48 8b 84 24 10 03 00 	mov    0x310(%rsp),%rax
   1d88f:	00 
   1d890:	8b 50 20             	mov    0x20(%rax),%edx
   1d893:	45 0f b7 4c 24 0a    	movzwl 0xa(%r12),%r9d
   1d899:	45 8b 44 24 08       	mov    0x8(%r12),%r8d
   1d89e:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
   1d8a5:	00 
   1d8a6:	48 8d b4 24 00 03 00 	lea    0x300(%rsp),%rsi
   1d8ad:	00 
   1d8ae:	e8 0d d0 fe ff       	callq  a8c0 <gimli::read::unit::parse_attribute>
   1d8b3:	83 bc 24 70 01 00 00 	cmpl   $0x1,0x170(%rsp)
   1d8ba:	01 
   1d8bb:	0f 84 16 04 00 00    	je     1dcd7 <std::backtrace_rs::symbolize::gimli::resolve+0x13c7>
   1d8c1:	0f b7 84 24 90 01 00 	movzwl 0x190(%rsp),%eax
   1d8c8:	00 
   1d8c9:	66 83 f8 46          	cmp    $0x46,%ax
   1d8cd:	7e 8f                	jle    1d85e <std::backtrace_rs::symbolize::gimli::resolve+0xf4e>
   1d8cf:	66 83 f8 47          	cmp    $0x47,%ax
   1d8d3:	74 99                	je     1d86e <std::backtrace_rs::symbolize::gimli::resolve+0xf5e>
   1d8d5:	0f b7 c8             	movzwl %ax,%ecx
   1d8d8:	81 f9 07 20 00 00    	cmp    $0x2007,%ecx
   1d8de:	74 06                	je     1d8e6 <std::backtrace_rs::symbolize::gimli::resolve+0xfd6>
   1d8e0:	66 83 f8 6e          	cmp    $0x6e,%ax
   1d8e4:	75 91                	jne    1d877 <std::backtrace_rs::symbolize::gimli::resolve+0xf67>
   1d8e6:	48 8d bc 24 98 04 00 	lea    0x498(%rsp),%rdi
   1d8ed:	00 
   1d8ee:	48 8d b4 24 78 01 00 	lea    0x178(%rsp),%rsi
   1d8f5:	00 
   1d8f6:	e8 05 e2 fe ff       	callq  bb00 <gimli::read::unit::Attribute<R>::value>
   1d8fb:	48 8b 8c 24 98 04 00 	mov    0x498(%rsp),%rcx
   1d902:	00 
   1d903:	4c 8b 84 24 a0 04 00 	mov    0x4a0(%rsp),%r8
   1d90a:	00 
   1d90b:	4c 8b 8c 24 a8 04 00 	mov    0x4a8(%rsp),%r9
   1d912:	00 
   1d913:	48 8d bc 24 10 06 00 	lea    0x610(%rsp),%rdi
   1d91a:	00 
   1d91b:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   1d920:	4c 89 fa             	mov    %r15,%rdx
   1d923:	e8 78 e9 fe ff       	callq  c2a0 <gimli::read::dwarf::Dwarf<R>::attr_string>
   1d928:	48 83 bc 24 10 06 00 	cmpq   $0x0,0x610(%rsp)
   1d92f:	00 00 
   1d931:	0f 85 40 ff ff ff    	jne    1d877 <std::backtrace_rs::symbolize::gimli::resolve+0xf67>
   1d937:	48 8b 9c 24 18 06 00 	mov    0x618(%rsp),%rbx
   1d93e:	00 
   1d93f:	4c 8b b4 24 20 06 00 	mov    0x620(%rsp),%r14
   1d946:	00 
   1d947:	e9 2b ff ff ff       	jmpq   1d877 <std::backtrace_rs::symbolize::gimli::resolve+0xf67>
   1d94c:	48 85 db             	test   %rbx,%rbx
   1d94f:	0f 85 22 ff ff ff    	jne    1d877 <std::backtrace_rs::symbolize::gimli::resolve+0xf67>
   1d955:	48 8d bc 24 98 04 00 	lea    0x498(%rsp),%rdi
   1d95c:	00 
   1d95d:	48 8d b4 24 78 01 00 	lea    0x178(%rsp),%rsi
   1d964:	00 
   1d965:	e8 96 e1 fe ff       	callq  bb00 <gimli::read::unit::Attribute<R>::value>
   1d96a:	48 8b 8c 24 98 04 00 	mov    0x498(%rsp),%rcx
   1d971:	00 
   1d972:	4c 8b 84 24 a0 04 00 	mov    0x4a0(%rsp),%r8
   1d979:	00 
   1d97a:	4c 8b 8c 24 a8 04 00 	mov    0x4a8(%rsp),%r9
   1d981:	00 
   1d982:	48 8d bc 24 10 06 00 	lea    0x610(%rsp),%rdi
   1d989:	00 
   1d98a:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   1d98f:	4c 89 fa             	mov    %r15,%rdx
   1d992:	e8 09 e9 fe ff       	callq  c2a0 <gimli::read::dwarf::Dwarf<R>::attr_string>
   1d997:	83 bc 24 10 06 00 00 	cmpl   $0x1,0x610(%rsp)
   1d99e:	01 
   1d99f:	4c 8b b4 24 20 06 00 	mov    0x620(%rsp),%r14
   1d9a6:	00 
   1d9a7:	74 7d                	je     1da26 <std::backtrace_rs::symbolize::gimli::resolve+0x1116>
   1d9a9:	48 8b 9c 24 18 06 00 	mov    0x618(%rsp),%rbx
   1d9b0:	00 
   1d9b1:	eb 75                	jmp    1da28 <std::backtrace_rs::symbolize::gimli::resolve+0x1118>
   1d9b3:	48 8d bc 24 98 04 00 	lea    0x498(%rsp),%rdi
   1d9ba:	00 
   1d9bb:	48 8d b4 24 78 01 00 	lea    0x178(%rsp),%rsi
   1d9c2:	00 
   1d9c3:	e8 38 e1 fe ff       	callq  bb00 <gimli::read::unit::Attribute<R>::value>
   1d9c8:	48 8b b4 24 98 04 00 	mov    0x498(%rsp),%rsi
   1d9cf:	00 
   1d9d0:	48 8b 94 24 a0 04 00 	mov    0x4a0(%rsp),%rdx
   1d9d7:	00 
   1d9d8:	48 8d bc 24 10 06 00 	lea    0x610(%rsp),%rdi
   1d9df:	00 
   1d9e0:	4c 89 f9             	mov    %r15,%rcx
   1d9e3:	4c 8b 44 24 50       	mov    0x50(%rsp),%r8
   1d9e8:	4c 8b 8c 24 c0 00 00 	mov    0xc0(%rsp),%r9
   1d9ef:	00 
   1d9f0:	6a 10                	pushq  $0x10
   1d9f2:	ff b4 24 c0 00 00 00 	pushq  0xc0(%rsp)
   1d9f9:	e8 72 53 ff ff       	callq  12d70 <addr2line::name_attr>
   1d9fe:	48 83 c4 10          	add    $0x10,%rsp
   1da02:	48 8b 9c 24 18 06 00 	mov    0x618(%rsp),%rbx
   1da09:	00 
   1da0a:	4c 8b b4 24 20 06 00 	mov    0x620(%rsp),%r14
   1da11:	00 
   1da12:	48 83 bc 24 10 06 00 	cmpq   $0x1,0x610(%rsp)
   1da19:	00 01 
   1da1b:	0f 85 56 fe ff ff    	jne    1d877 <std::backtrace_rs::symbolize::gimli::resolve+0xf67>
   1da21:	e9 c1 02 00 00       	jmpq   1dce7 <std::backtrace_rs::symbolize::gimli::resolve+0x13d7>
   1da26:	31 db                	xor    %ebx,%ebx
   1da28:	4c 8b bc 24 b0 00 00 	mov    0xb0(%rsp),%r15
   1da2f:	00 
   1da30:	e9 42 fe ff ff       	jmpq   1d877 <std::backtrace_rs::symbolize::gimli::resolve+0xf67>
   1da35:	48 8b 4c 32 58       	mov    0x58(%rdx,%rsi,1),%rcx
   1da3a:	41 bc 12 00 00 00    	mov    $0x12,%r12d
   1da40:	48 85 c9             	test   %rcx,%rcx
   1da43:	0f 84 bf 02 00 00    	je     1dd08 <std::backtrace_rs::symbolize::gimli::resolve+0x13f8>
   1da49:	4c 89 54 24 68       	mov    %r10,0x68(%rsp)
   1da4e:	4c 89 6c 24 70       	mov    %r13,0x70(%rsp)
   1da53:	4c 8b 4c 32 60       	mov    0x60(%rdx,%rsi,1),%r9
   1da58:	31 d2                	xor    %edx,%edx
   1da5a:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
   1da5f:	49 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%r8
   1da66:	44 0f b7 91 32 05 00 	movzwl 0x532(%rcx),%r10d
   1da6d:	00 
   1da6e:	48 8d 79 f0          	lea    -0x10(%rcx),%rdi
   1da72:	4c 89 d6             	mov    %r10,%rsi
   1da75:	48 f7 de             	neg    %rsi
   1da78:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
   1da7f:	48 8d 14 1e          	lea    (%rsi,%rbx,1),%rdx
   1da83:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   1da87:	74 26                	je     1daaf <std::backtrace_rs::symbolize::gimli::resolve+0x119f>
   1da89:	31 d2                	xor    %edx,%edx
   1da8b:	48 39 44 d9 10       	cmp    %rax,0x10(%rcx,%rbx,8)
   1da90:	0f 95 c2             	setne  %dl
   1da93:	49 0f 47 d0          	cmova  %r8,%rdx
   1da97:	48 83 c3 01          	add    $0x1,%rbx
   1da9b:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   1da9f:	74 11                	je     1dab2 <std::backtrace_rs::symbolize::gimli::resolve+0x11a2>
   1daa1:	48 83 c7 70          	add    $0x70,%rdi
   1daa5:	48 85 d2             	test   %rdx,%rdx
   1daa8:	75 d5                	jne    1da7f <std::backtrace_rs::symbolize::gimli::resolve+0x116f>
   1daaa:	e9 71 fd ff ff       	jmpq   1d820 <std::backtrace_rs::symbolize::gimli::resolve+0xf10>
   1daaf:	4c 89 d3             	mov    %r10,%rbx
   1dab2:	4d 85 c9             	test   %r9,%r9
   1dab5:	0f 84 b2 0d 00 00    	je     1e86d <std::backtrace_rs::symbolize::gimli::resolve+0x1f5d>
   1dabb:	49 83 c1 ff          	add    $0xffffffffffffffff,%r9
   1dabf:	48 8b 8c d9 38 05 00 	mov    0x538(%rcx,%rbx,8),%rcx
   1dac6:	00 
   1dac7:	eb 9d                	jmp    1da66 <std::backtrace_rs::symbolize::gimli::resolve+0x1156>
   1dac9:	31 db                	xor    %ebx,%ebx
   1dacb:	4c 89 b4 24 38 01 00 	mov    %r14,0x138(%rsp)
   1dad2:	00 
   1dad3:	48 89 5c 24 40       	mov    %rbx,0x40(%rsp)
   1dad8:	48 c7 84 24 18 01 00 	movq   $0x8,0x118(%rsp)
   1dadf:	00 08 00 00 00 
   1dae4:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1dae8:	f3 0f 7f 84 24 20 01 	movdqu %xmm0,0x120(%rsp)
   1daef:	00 00 
   1daf1:	48 c7 84 24 e0 00 00 	movq   $0x8,0xe0(%rsp)
   1daf8:	00 08 00 00 00 
   1dafd:	f3 0f 7f 84 24 e8 00 	movdqu %xmm0,0xe8(%rsp)
   1db04:	00 00 
   1db06:	48 83 ec 08          	sub    $0x8,%rsp
   1db0a:	48 8d 84 24 e8 00 00 	lea    0xe8(%rsp),%rax
   1db11:	00 
   1db12:	48 8d 9c 24 20 01 00 	lea    0x120(%rsp),%rbx
   1db19:	00 
   1db1a:	48 8d bc 24 08 03 00 	lea    0x308(%rsp),%rdi
   1db21:	00 
   1db22:	31 f6                	xor    %esi,%esi
   1db24:	4c 89 fa             	mov    %r15,%rdx
   1db27:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
   1db2c:	4c 8b 84 24 c8 00 00 	mov    0xc8(%rsp),%r8
   1db33:	00 
   1db34:	4c 8b 8c 24 c0 00 00 	mov    0xc0(%rsp),%r9
   1db3b:	00 
   1db3c:	6a 00                	pushq  $0x0
   1db3e:	50                   	push   %rax
   1db3f:	53                   	push   %rbx
   1db40:	e8 eb 3f ff ff       	callq  11b30 <addr2line::Function<R>::parse_children>
   1db45:	48 83 c4 20          	add    $0x20,%rsp
   1db49:	3c 46                	cmp    $0x46,%al
   1db4b:	0f 85 1c 01 00 00    	jne    1dc6d <std::backtrace_rs::symbolize::gimli::resolve+0x135d>
   1db51:	48 8b 84 24 e0 00 00 	mov    0xe0(%rsp),%rax
   1db58:	00 
   1db59:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1db5e:	48 8b 84 24 f0 00 00 	mov    0xf0(%rsp),%rax
   1db65:	00 
   1db66:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1db6b:	48 83 f8 15          	cmp    $0x15,%rax
   1db6f:	0f 83 f8 03 00 00    	jae    1df6d <std::backtrace_rs::symbolize::gimli::resolve+0x165d>
   1db75:	48 83 7c 24 38 02    	cmpq   $0x2,0x38(%rsp)
   1db7b:	0f 82 3c 0b 00 00    	jb     1e6bd <std::backtrace_rs::symbolize::gimli::resolve+0x1dad>
   1db81:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   1db86:	48 8d 78 ff          	lea    -0x1(%rax),%rdi
   1db8a:	49 89 fe             	mov    %rdi,%r14
   1db8d:	49 c1 e6 05          	shl    $0x5,%r14
   1db91:	4c 03 74 24 20       	add    0x20(%rsp),%r14
   1db96:	45 31 ff             	xor    %r15d,%r15d
   1db99:	eb 20                	jmp    1dbbb <std::backtrace_rs::symbolize::gimli::resolve+0x12ab>
   1db9b:	4c 89 10             	mov    %r10,(%rax)
   1db9e:	4c 89 48 08          	mov    %r9,0x8(%rax)
   1dba2:	4c 89 60 10          	mov    %r12,0x10(%rax)
   1dba6:	4c 89 40 18          	mov    %r8,0x18(%rax)
   1dbaa:	49 83 c6 e0          	add    $0xffffffffffffffe0,%r14
   1dbae:	49 83 c7 01          	add    $0x1,%r15
   1dbb2:	48 85 ff             	test   %rdi,%rdi
   1dbb5:	0f 84 02 0b 00 00    	je     1e6bd <std::backtrace_rs::symbolize::gimli::resolve+0x1dad>
   1dbbb:	48 89 fb             	mov    %rdi,%rbx
   1dbbe:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   1dbc2:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
   1dbc7:	48 29 fe             	sub    %rdi,%rsi
   1dbca:	0f 82 e4 0d 00 00    	jb     1e9b4 <std::backtrace_rs::symbolize::gimli::resolve+0x20a4>
   1dbd0:	48 83 fe 02          	cmp    $0x2,%rsi
   1dbd4:	72 d4                	jb     1dbaa <std::backtrace_rs::symbolize::gimli::resolve+0x129a>
   1dbd6:	48 89 f9             	mov    %rdi,%rcx
   1dbd9:	48 c1 e1 05          	shl    $0x5,%rcx
   1dbdd:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   1dbe2:	4c 8d 1c 0a          	lea    (%rdx,%rcx,1),%r11
   1dbe6:	48 c1 e3 05          	shl    $0x5,%rbx
   1dbea:	48 8d 04 1a          	lea    (%rdx,%rbx,1),%rax
   1dbee:	4c 8b 64 0a 10       	mov    0x10(%rdx,%rcx,1),%r12
   1dbf3:	4d 8b 13             	mov    (%r11),%r10
   1dbf6:	4c 39 64 1a 10       	cmp    %r12,0x10(%rdx,%rbx,1)
   1dbfb:	72 07                	jb     1dc04 <std::backtrace_rs::symbolize::gimli::resolve+0x12f4>
   1dbfd:	77 ab                	ja     1dbaa <std::backtrace_rs::symbolize::gimli::resolve+0x129a>
   1dbff:	4c 39 10             	cmp    %r10,(%rax)
   1dc02:	73 a6                	jae    1dbaa <std::backtrace_rs::symbolize::gimli::resolve+0x129a>
   1dc04:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   1dc09:	4c 8b 4c 0a 08       	mov    0x8(%rdx,%rcx,1),%r9
   1dc0e:	4c 8b 44 0a 18       	mov    0x18(%rdx,%rcx,1),%r8
   1dc13:	f3 0f 6f 00          	movdqu (%rax),%xmm0
   1dc17:	0f 10 48 10          	movups 0x10(%rax),%xmm1
   1dc1b:	41 0f 11 4b 10       	movups %xmm1,0x10(%r11)
   1dc20:	f3 41 0f 7f 03       	movdqu %xmm0,(%r11)
   1dc25:	48 83 fe 03          	cmp    $0x3,%rsi
   1dc29:	0f 82 6c ff ff ff    	jb     1db9b <std::backtrace_rs::symbolize::gimli::resolve+0x128b>
   1dc2f:	4c 89 fe             	mov    %r15,%rsi
   1dc32:	4c 89 f0             	mov    %r14,%rax
   1dc35:	eb 1f                	jmp    1dc56 <std::backtrace_rs::symbolize::gimli::resolve+0x1346>
   1dc37:	f3 0f 6f 40 20       	movdqu 0x20(%rax),%xmm0
   1dc3c:	0f 10 48 30          	movups 0x30(%rax),%xmm1
   1dc40:	0f 11 48 10          	movups %xmm1,0x10(%rax)
   1dc44:	f3 0f 7f 00          	movdqu %xmm0,(%rax)
   1dc48:	48 83 c0 20          	add    $0x20,%rax
   1dc4c:	48 83 c6 ff          	add    $0xffffffffffffffff,%rsi
   1dc50:	0f 84 45 ff ff ff    	je     1db9b <std::backtrace_rs::symbolize::gimli::resolve+0x128b>
   1dc56:	4c 39 60 30          	cmp    %r12,0x30(%rax)
   1dc5a:	72 db                	jb     1dc37 <std::backtrace_rs::symbolize::gimli::resolve+0x1327>
   1dc5c:	0f 87 39 ff ff ff    	ja     1db9b <std::backtrace_rs::symbolize::gimli::resolve+0x128b>
   1dc62:	4c 39 50 20          	cmp    %r10,0x20(%rax)
   1dc66:	72 cf                	jb     1dc37 <std::backtrace_rs::symbolize::gimli::resolve+0x1327>
   1dc68:	e9 2e ff ff ff       	jmpq   1db9b <std::backtrace_rs::symbolize::gimli::resolve+0x128b>
   1dc6d:	48 89 d3             	mov    %rdx,%rbx
   1dc70:	49 89 c4             	mov    %rax,%r12
   1dc73:	48 8b b4 24 e8 00 00 	mov    0xe8(%rsp),%rsi
   1dc7a:	00 
   1dc7b:	48 85 f6             	test   %rsi,%rsi
   1dc7e:	74 1e                	je     1dc9e <std::backtrace_rs::symbolize::gimli::resolve+0x138e>
   1dc80:	48 8b bc 24 e0 00 00 	mov    0xe0(%rsp),%rdi
   1dc87:	00 
   1dc88:	48 85 ff             	test   %rdi,%rdi
   1dc8b:	74 11                	je     1dc9e <std::backtrace_rs::symbolize::gimli::resolve+0x138e>
   1dc8d:	48 c1 e6 05          	shl    $0x5,%rsi
   1dc91:	74 0b                	je     1dc9e <std::backtrace_rs::symbolize::gimli::resolve+0x138e>
   1dc93:	ba 08 00 00 00       	mov    $0x8,%edx
   1dc98:	ff 15 5a 7f 02 00    	callq  *0x27f5a(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   1dc9e:	48 8b 84 24 20 01 00 	mov    0x120(%rsp),%rax
   1dca5:	00 
   1dca6:	48 85 c0             	test   %rax,%rax
   1dca9:	74 25                	je     1dcd0 <std::backtrace_rs::symbolize::gimli::resolve+0x13c0>
   1dcab:	48 8b bc 24 18 01 00 	mov    0x118(%rsp),%rdi
   1dcb2:	00 
   1dcb3:	48 85 ff             	test   %rdi,%rdi
   1dcb6:	74 18                	je     1dcd0 <std::backtrace_rs::symbolize::gimli::resolve+0x13c0>
   1dcb8:	48 c1 e0 03          	shl    $0x3,%rax
   1dcbc:	48 8d 34 80          	lea    (%rax,%rax,4),%rsi
   1dcc0:	48 85 f6             	test   %rsi,%rsi
   1dcc3:	74 0b                	je     1dcd0 <std::backtrace_rs::symbolize::gimli::resolve+0x13c0>
   1dcc5:	ba 08 00 00 00       	mov    $0x8,%edx
   1dcca:	ff 15 28 7f 02 00    	callq  *0x27f28(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   1dcd0:	48 89 5c 24 40       	mov    %rbx,0x40(%rsp)
   1dcd5:	eb 1b                	jmp    1dcf2 <std::backtrace_rs::symbolize::gimli::resolve+0x13e2>
   1dcd7:	48 8b 9c 24 78 01 00 	mov    0x178(%rsp),%rbx
   1dcde:	00 
   1dcdf:	4c 8b b4 24 80 01 00 	mov    0x180(%rsp),%r14
   1dce6:	00 
   1dce7:	49 89 dc             	mov    %rbx,%r12
   1dcea:	4c 89 f0             	mov    %r14,%rax
   1dced:	4c 89 74 24 40       	mov    %r14,0x40(%rsp)
   1dcf2:	4c 8b 74 24 30       	mov    0x30(%rsp),%r14
   1dcf7:	44 8b 7c 24 1c       	mov    0x1c(%rsp),%r15d
   1dcfc:	4c 8b 6c 24 70       	mov    0x70(%rsp),%r13
   1dd01:	4c 8b 54 24 68       	mov    0x68(%rsp),%r10
   1dd06:	eb 07                	jmp    1dd0f <std::backtrace_rs::symbolize::gimli::resolve+0x13ff>
   1dd08:	31 c0                	xor    %eax,%eax
   1dd0a:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1dd0f:	4c 8b 4c 24 78       	mov    0x78(%rsp),%r9
   1dd14:	49 8b 01             	mov    (%r9),%rax
   1dd17:	48 83 f8 02          	cmp    $0x2,%rax
   1dd1b:	75 38                	jne    1dd55 <std::backtrace_rs::symbolize::gimli::resolve+0x1445>
   1dd1d:	b8 01 00 00 00       	mov    $0x1,%eax
   1dd22:	49 89 01             	mov    %rax,(%r9)
   1dd25:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   1dd2a:	4b 89 44 d5 18       	mov    %rax,0x18(%r13,%r10,8)
   1dd2f:	4f 89 64 d5 10       	mov    %r12,0x10(%r13,%r10,8)
   1dd34:	4b 89 4c d5 20       	mov    %rcx,0x20(%r13,%r10,8)
   1dd39:	4b 89 54 d5 28       	mov    %rdx,0x28(%r13,%r10,8)
   1dd3e:	4f 89 7c d5 30       	mov    %r15,0x30(%r13,%r10,8)
   1dd43:	4b 89 74 d5 38       	mov    %rsi,0x38(%r13,%r10,8)
   1dd48:	4b 89 5c d5 40       	mov    %rbx,0x40(%r13,%r10,8)
   1dd4d:	49 8b 01             	mov    (%r9),%rax
   1dd50:	44 8b 7c 24 1c       	mov    0x1c(%rsp),%r15d
   1dd55:	48 85 c0             	test   %rax,%rax
   1dd58:	0f 85 12 f2 ff ff    	jne    1cf70 <std::backtrace_rs::symbolize::gimli::resolve+0x660>
   1dd5e:	44 89 7c 24 1c       	mov    %r15d,0x1c(%rsp)
   1dd63:	4e 8d 34 d5 10 00 00 	lea    0x10(,%r10,8),%r14
   1dd6a:	00 
   1dd6b:	4d 01 ee             	add    %r13,%r14
   1dd6e:	48 c7 84 24 70 01 00 	movq   $0x8,0x170(%rsp)
   1dd75:	00 08 00 00 00 
   1dd7a:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1dd7e:	f3 0f 7f 84 24 78 01 	movdqu %xmm0,0x178(%rsp)
   1dd85:	00 00 
   1dd87:	4f 8b 7c d5 38       	mov    0x38(%r13,%r10,8),%r15
   1dd8c:	4f 8b 4c d5 40       	mov    0x40(%r13,%r10,8),%r9
   1dd91:	31 f6                	xor    %esi,%esi
   1dd93:	bf 08 00 00 00       	mov    $0x8,%edi
   1dd98:	45 31 ed             	xor    %r13d,%r13d
   1dd9b:	4c 8b 54 24 50       	mov    0x50(%rsp),%r10
   1dda0:	eb 1e                	jmp    1ddc0 <std::backtrace_rs::symbolize::gimli::resolve+0x14b0>
   1dda2:	4a 89 1c ef          	mov    %rbx,(%rdi,%r13,8)
   1dda6:	49 83 c5 01          	add    $0x1,%r13
   1ddaa:	4c 89 ac 24 80 01 00 	mov    %r13,0x180(%rsp)
   1ddb1:	00 
   1ddb2:	49 83 c4 01          	add    $0x1,%r12
   1ddb6:	4d 29 e1             	sub    %r12,%r9
   1ddb9:	49 c1 e4 05          	shl    $0x5,%r12
   1ddbd:	4d 01 e7             	add    %r12,%r15
   1ddc0:	49 83 f9 01          	cmp    $0x1,%r9
   1ddc4:	74 44                	je     1de0a <std::backtrace_rs::symbolize::gimli::resolve+0x14fa>
   1ddc6:	4d 85 c9             	test   %r9,%r9
   1ddc9:	0f 84 61 01 00 00    	je     1df30 <std::backtrace_rs::symbolize::gimli::resolve+0x1620>
   1ddcf:	4c 89 c8             	mov    %r9,%rax
   1ddd2:	45 31 e4             	xor    %r12d,%r12d
   1ddd5:	eb 0c                	jmp    1dde3 <std::backtrace_rs::symbolize::gimli::resolve+0x14d3>
   1ddd7:	4d 89 c4             	mov    %r8,%r12
   1ddda:	48 29 c8             	sub    %rcx,%rax
   1dddd:	48 83 f8 01          	cmp    $0x1,%rax
   1dde1:	76 2a                	jbe    1de0d <std::backtrace_rs::symbolize::gimli::resolve+0x14fd>
   1dde3:	48 89 c1             	mov    %rax,%rcx
   1dde6:	48 d1 e9             	shr    %rcx
   1dde9:	4e 8d 04 21          	lea    (%rcx,%r12,1),%r8
   1dded:	4c 89 c2             	mov    %r8,%rdx
   1ddf0:	48 c1 e2 05          	shl    $0x5,%rdx
   1ddf4:	4d 39 6c 17 10       	cmp    %r13,0x10(%r15,%rdx,1)
   1ddf9:	77 df                	ja     1ddda <std::backtrace_rs::symbolize::gimli::resolve+0x14ca>
   1ddfb:	72 da                	jb     1ddd7 <std::backtrace_rs::symbolize::gimli::resolve+0x14c7>
   1ddfd:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
   1de02:	49 39 1c 17          	cmp    %rbx,(%r15,%rdx,1)
   1de06:	76 cf                	jbe    1ddd7 <std::backtrace_rs::symbolize::gimli::resolve+0x14c7>
   1de08:	eb d0                	jmp    1ddda <std::backtrace_rs::symbolize::gimli::resolve+0x14ca>
   1de0a:	45 31 e4             	xor    %r12d,%r12d
   1de0d:	4c 89 e0             	mov    %r12,%rax
   1de10:	48 c1 e0 05          	shl    $0x5,%rax
   1de14:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   1de19:	49 39 4c 07 08       	cmp    %rcx,0x8(%r15,%rax,1)
   1de1e:	0f 86 0c 01 00 00    	jbe    1df30 <std::backtrace_rs::symbolize::gimli::resolve+0x1620>
   1de24:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   1de29:	49 39 0c 07          	cmp    %rcx,(%r15,%rax,1)
   1de2d:	0f 87 fd 00 00 00    	ja     1df30 <std::backtrace_rs::symbolize::gimli::resolve+0x1620>
   1de33:	4d 39 6c 07 10       	cmp    %r13,0x10(%r15,%rax,1)
   1de38:	0f 85 f2 00 00 00    	jne    1df30 <std::backtrace_rs::symbolize::gimli::resolve+0x1620>
   1de3e:	4d 39 cc             	cmp    %r9,%r12
   1de41:	0f 83 9d 0a 00 00    	jae    1e8e4 <std::backtrace_rs::symbolize::gimli::resolve+0x1fd4>
   1de47:	49 8b 44 07 18       	mov    0x18(%r15,%rax,1),%rax
   1de4c:	49 8b 4e 20          	mov    0x20(%r14),%rcx
   1de50:	48 39 c8             	cmp    %rcx,%rax
   1de53:	0f 83 a0 0a 00 00    	jae    1e8f9 <std::backtrace_rs::symbolize::gimli::resolve+0x1fe9>
   1de59:	48 8d 1c 80          	lea    (%rax,%rax,4),%rbx
   1de5d:	48 c1 e3 03          	shl    $0x3,%rbx
   1de61:	49 03 5e 18          	add    0x18(%r14),%rbx
   1de65:	49 39 f5             	cmp    %rsi,%r13
   1de68:	0f 85 34 ff ff ff    	jne    1dda2 <std::backtrace_rs::symbolize::gimli::resolve+0x1492>
   1de6e:	48 89 f0             	mov    %rsi,%rax
   1de71:	48 ff c0             	inc    %rax
   1de74:	0f 84 94 0a 00 00    	je     1e90e <std::backtrace_rs::symbolize::gimli::resolve+0x1ffe>
   1de7a:	48 8d 0c 36          	lea    (%rsi,%rsi,1),%rcx
   1de7e:	48 39 c1             	cmp    %rax,%rcx
   1de81:	48 0f 47 c1          	cmova  %rcx,%rax
   1de85:	48 83 f8 04          	cmp    $0x4,%rax
   1de89:	b9 04 00 00 00       	mov    $0x4,%ecx
   1de8e:	48 0f 46 c1          	cmovbe %rcx,%rax
   1de92:	31 c9                	xor    %ecx,%ecx
   1de94:	ba 08 00 00 00       	mov    $0x8,%edx
   1de99:	48 f7 e2             	mul    %rdx
   1de9c:	0f 90 c2             	seto   %dl
   1de9f:	0f 91 c1             	setno  %cl
   1dea2:	48 c1 e1 03          	shl    $0x3,%rcx
   1dea6:	48 85 f6             	test   %rsi,%rsi
   1dea9:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1deae:	74 24                	je     1ded4 <std::backtrace_rs::symbolize::gimli::resolve+0x15c4>
   1deb0:	84 d2                	test   %dl,%dl
   1deb2:	0f 85 56 0a 00 00    	jne    1e90e <std::backtrace_rs::symbolize::gimli::resolve+0x1ffe>
   1deb8:	48 c1 e6 03          	shl    $0x3,%rsi
   1debc:	48 85 f6             	test   %rsi,%rsi
   1debf:	74 22                	je     1dee3 <std::backtrace_rs::symbolize::gimli::resolve+0x15d3>
   1dec1:	48 89 ca             	mov    %rcx,%rdx
   1dec4:	48 89 c1             	mov    %rax,%rcx
   1dec7:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   1decc:	ff 15 a6 80 02 00    	callq  *0x280a6(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
   1ded2:	eb 25                	jmp    1def9 <std::backtrace_rs::symbolize::gimli::resolve+0x15e9>
   1ded4:	84 d2                	test   %dl,%dl
   1ded6:	0f 85 32 0a 00 00    	jne    1e90e <std::backtrace_rs::symbolize::gimli::resolve+0x1ffe>
   1dedc:	48 85 c0             	test   %rax,%rax
   1dedf:	74 25                	je     1df06 <std::backtrace_rs::symbolize::gimli::resolve+0x15f6>
   1dee1:	eb 05                	jmp    1dee8 <std::backtrace_rs::symbolize::gimli::resolve+0x15d8>
   1dee3:	48 85 c0             	test   %rax,%rax
   1dee6:	74 1e                	je     1df06 <std::backtrace_rs::symbolize::gimli::resolve+0x15f6>
   1dee8:	48 89 c7             	mov    %rax,%rdi
   1deeb:	48 89 ce             	mov    %rcx,%rsi
   1deee:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   1def3:	ff 15 87 7c 02 00    	callq  *0x27c87(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   1def9:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   1defe:	4c 8b 54 24 50       	mov    0x50(%rsp),%r10
   1df03:	48 89 c1             	mov    %rax,%rcx
   1df06:	48 85 c9             	test   %rcx,%rcx
   1df09:	0f 84 07 0a 00 00    	je     1e916 <std::backtrace_rs::symbolize::gimli::resolve+0x2006>
   1df0f:	48 89 8c 24 70 01 00 	mov    %rcx,0x170(%rsp)
   1df16:	00 
   1df17:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   1df1c:	48 c1 ee 03          	shr    $0x3,%rsi
   1df20:	48 89 b4 24 78 01 00 	mov    %rsi,0x178(%rsp)
   1df27:	00 
   1df28:	48 89 cf             	mov    %rcx,%rdi
   1df2b:	e9 72 fe ff ff       	jmpq   1dda2 <std::backtrace_rs::symbolize::gimli::resolve+0x1492>
   1df30:	4a 8d 04 ef          	lea    (%rdi,%r13,8),%rax
   1df34:	44 8b 4c 24 1c       	mov    0x1c(%rsp),%r9d
   1df39:	4c 8b bc 24 88 00 00 	mov    0x88(%rsp),%r15
   1df40:	00 
   1df41:	48 8b 94 24 50 01 00 	mov    0x150(%rsp),%rdx
   1df48:	00 
   1df49:	44 8b 84 24 dc 00 00 	mov    0xdc(%rsp),%r8d
   1df50:	00 
   1df51:	48 8b 9c 24 00 01 00 	mov    0x100(%rsp),%rbx
   1df58:	00 
   1df59:	44 8b 9c 24 d8 00 00 	mov    0xd8(%rsp),%r11d
   1df60:	00 
   1df61:	8b 8c 24 d4 00 00 00 	mov    0xd4(%rsp),%ecx
   1df68:	e9 8d ef ff ff       	jmpq   1cefa <std::backtrace_rs::symbolize::gimli::resolve+0x5ea>
   1df6d:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   1df72:	48 d1 e8             	shr    %rax
   1df75:	b9 20 00 00 00       	mov    $0x20,%ecx
   1df7a:	31 db                	xor    %ebx,%ebx
   1df7c:	48 f7 e1             	mul    %rcx
   1df7f:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   1df84:	0f 91 c0             	setno  %al
   1df87:	0f 80 cf 0a 00 00    	jo     1ea5c <std::backtrace_rs::symbolize::gimli::resolve+0x214c>
   1df8d:	88 c3                	mov    %al,%bl
   1df8f:	48 c1 e3 03          	shl    $0x3,%rbx
   1df93:	48 83 7c 24 60 00    	cmpq   $0x0,0x60(%rsp)
   1df99:	74 15                	je     1dfb0 <std::backtrace_rs::symbolize::gimli::resolve+0x16a0>
   1df9b:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   1dfa0:	48 89 de             	mov    %rbx,%rsi
   1dfa3:	ff 15 d7 7b 02 00    	callq  *0x27bd7(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   1dfa9:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1dfae:	eb 05                	jmp    1dfb5 <std::backtrace_rs::symbolize::gimli::resolve+0x16a5>
   1dfb0:	48 89 5c 24 48       	mov    %rbx,0x48(%rsp)
   1dfb5:	48 83 7c 24 48 00    	cmpq   $0x0,0x48(%rsp)
   1dfbb:	0f 84 a6 0a 00 00    	je     1ea67 <std::backtrace_rs::symbolize::gimli::resolve+0x2157>
   1dfc1:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   1dfc6:	48 c1 e8 05          	shr    $0x5,%rax
   1dfca:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
   1dfcf:	48 89 8c 24 10 06 00 	mov    %rcx,0x610(%rsp)
   1dfd6:	00 
   1dfd7:	48 89 84 24 18 06 00 	mov    %rax,0x618(%rsp)
   1dfde:	00 
   1dfdf:	48 c7 84 24 20 06 00 	movq   $0x0,0x620(%rsp)
   1dfe6:	00 00 00 00 00 
   1dfeb:	48 c7 84 24 98 04 00 	movq   $0x8,0x498(%rsp)
   1dff2:	00 08 00 00 00 
   1dff7:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1dffb:	f3 0f 7f 84 24 a0 04 	movdqu %xmm0,0x4a0(%rsp)
   1e002:	00 00 
   1e004:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   1e009:	48 8d 48 b0          	lea    -0x50(%rax),%rcx
   1e00d:	48 89 8c 24 30 01 00 	mov    %rcx,0x130(%rsp)
   1e014:	00 
   1e015:	48 8d 48 c0          	lea    -0x40(%rax),%rcx
   1e019:	48 89 8c 24 40 01 00 	mov    %rcx,0x140(%rsp)
   1e020:	00 
   1e021:	48 83 c0 e0          	add    $0xffffffffffffffe0,%rax
   1e025:	48 89 84 24 f8 00 00 	mov    %rax,0xf8(%rsp)
   1e02c:	00 
   1e02d:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
   1e032:	eb 11                	jmp    1e045 <std::backtrace_rs::symbolize::gimli::resolve+0x1735>
   1e034:	48 8b b4 24 48 01 00 	mov    0x148(%rsp),%rsi
   1e03b:	00 
   1e03c:	48 85 f6             	test   %rsi,%rsi
   1e03f:	0f 84 30 06 00 00    	je     1e675 <std::backtrace_rs::symbolize::gimli::resolve+0x1d65>
   1e045:	49 89 f0             	mov    %rsi,%r8
   1e048:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   1e04c:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
   1e051:	74 6e                	je     1e0c1 <std::backtrace_rs::symbolize::gimli::resolve+0x17b1>
   1e053:	48 8d 7e fe          	lea    -0x2(%rsi),%rdi
   1e057:	4c 89 c0             	mov    %r8,%rax
   1e05a:	48 c1 e0 05          	shl    $0x5,%rax
   1e05e:	48 89 fa             	mov    %rdi,%rdx
   1e061:	48 c1 e2 05          	shl    $0x5,%rdx
   1e065:	48 8b 4c 13 10       	mov    0x10(%rbx,%rdx,1),%rcx
   1e06a:	48 39 4c 03 10       	cmp    %rcx,0x10(%rbx,%rax,1)
   1e06f:	72 14                	jb     1e085 <std::backtrace_rs::symbolize::gimli::resolve+0x1775>
   1e071:	4c 8b 0c 13          	mov    (%rbx,%rdx,1),%r9
   1e075:	0f 87 a0 05 00 00    	ja     1e61b <std::backtrace_rs::symbolize::gimli::resolve+0x1d0b>
   1e07b:	4c 39 0c 03          	cmp    %r9,(%rbx,%rax,1)
   1e07f:	0f 83 96 05 00 00    	jae    1e61b <std::backtrace_rs::symbolize::gimli::resolve+0x1d0b>
   1e085:	48 85 ff             	test   %rdi,%rdi
   1e088:	74 43                	je     1e0cd <std::backtrace_rs::symbolize::gimli::resolve+0x17bd>
   1e08a:	48 89 f0             	mov    %rsi,%rax
   1e08d:	48 c1 e0 05          	shl    $0x5,%rax
   1e091:	48 03 84 24 40 01 00 	add    0x140(%rsp),%rax
   1e098:	00 
   1e099:	eb 0d                	jmp    1e0a8 <std::backtrace_rs::symbolize::gimli::resolve+0x1798>
   1e09b:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   1e09f:	48 83 c0 e0          	add    $0xffffffffffffffe0,%rax
   1e0a3:	48 85 ff             	test   %rdi,%rdi
   1e0a6:	74 25                	je     1e0cd <std::backtrace_rs::symbolize::gimli::resolve+0x17bd>
   1e0a8:	48 89 ca             	mov    %rcx,%rdx
   1e0ab:	48 8b 48 f0          	mov    -0x10(%rax),%rcx
   1e0af:	48 39 ca             	cmp    %rcx,%rdx
   1e0b2:	72 e7                	jb     1e09b <std::backtrace_rs::symbolize::gimli::resolve+0x178b>
   1e0b4:	77 19                	ja     1e0cf <std::backtrace_rs::symbolize::gimli::resolve+0x17bf>
   1e0b6:	48 8b 50 e0          	mov    -0x20(%rax),%rdx
   1e0ba:	48 39 10             	cmp    %rdx,(%rax)
   1e0bd:	72 dc                	jb     1e09b <std::backtrace_rs::symbolize::gimli::resolve+0x178b>
   1e0bf:	eb 0e                	jmp    1e0cf <std::backtrace_rs::symbolize::gimli::resolve+0x17bf>
   1e0c1:	ba 01 00 00 00       	mov    $0x1,%edx
   1e0c6:	31 c0                	xor    %eax,%eax
   1e0c8:	e9 98 01 00 00       	jmpq   1e265 <std::backtrace_rs::symbolize::gimli::resolve+0x1955>
   1e0cd:	31 ff                	xor    %edi,%edi
   1e0cf:	48 89 f2             	mov    %rsi,%rdx
   1e0d2:	48 29 fa             	sub    %rdi,%rdx
   1e0d5:	0f 82 f0 08 00 00    	jb     1e9cb <std::backtrace_rs::symbolize::gimli::resolve+0x20bb>
   1e0db:	48 3b 74 24 38       	cmp    0x38(%rsp),%rsi
   1e0e0:	0f 87 21 09 00 00    	ja     1ea07 <std::backtrace_rs::symbolize::gimli::resolve+0x20f7>
   1e0e6:	48 89 d0             	mov    %rdx,%rax
   1e0e9:	48 d1 e8             	shr    %rax
   1e0ec:	74 67                	je     1e155 <std::backtrace_rs::symbolize::gimli::resolve+0x1845>
   1e0ee:	48 89 f1             	mov    %rsi,%rcx
   1e0f1:	48 c1 e1 05          	shl    $0x5,%rcx
   1e0f5:	48 03 8c 24 f8 00 00 	add    0xf8(%rsp),%rcx
   1e0fc:	00 
   1e0fd:	48 89 fb             	mov    %rdi,%rbx
   1e100:	48 c1 e3 05          	shl    $0x5,%rbx
   1e104:	48 03 5c 24 20       	add    0x20(%rsp),%rbx
   1e109:	0f 10 03             	movups (%rbx),%xmm0
   1e10c:	0f 10 4b 10          	movups 0x10(%rbx),%xmm1
   1e110:	0f 29 8c 24 80 01 00 	movaps %xmm1,0x180(%rsp)
   1e117:	00 
   1e118:	0f 29 84 24 70 01 00 	movaps %xmm0,0x170(%rsp)
   1e11f:	00 
   1e120:	0f 10 01             	movups (%rcx),%xmm0
   1e123:	0f 10 49 10          	movups 0x10(%rcx),%xmm1
   1e127:	0f 11 03             	movups %xmm0,(%rbx)
   1e12a:	0f 11 4b 10          	movups %xmm1,0x10(%rbx)
   1e12e:	66 0f 6f 84 24 70 01 	movdqa 0x170(%rsp),%xmm0
   1e135:	00 00 
   1e137:	0f 28 8c 24 80 01 00 	movaps 0x180(%rsp),%xmm1
   1e13e:	00 
   1e13f:	0f 11 49 10          	movups %xmm1,0x10(%rcx)
   1e143:	f3 0f 7f 01          	movdqu %xmm0,(%rcx)
   1e147:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
   1e14b:	48 83 c3 20          	add    $0x20,%rbx
   1e14f:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
   1e153:	75 b4                	jne    1e109 <std::backtrace_rs::symbolize::gimli::resolve+0x17f9>
   1e155:	48 83 fa 09          	cmp    $0x9,%rdx
   1e159:	0f 87 03 01 00 00    	ja     1e262 <std::backtrace_rs::symbolize::gimli::resolve+0x1952>
   1e15f:	48 85 ff             	test   %rdi,%rdi
   1e162:	0f 84 fa 00 00 00    	je     1e262 <std::backtrace_rs::symbolize::gimli::resolve+0x1952>
   1e168:	48 3b 74 24 38       	cmp    0x38(%rsp),%rsi
   1e16d:	0f 87 ae 08 00 00    	ja     1ea21 <std::backtrace_rs::symbolize::gimli::resolve+0x2111>
   1e173:	49 89 fe             	mov    %rdi,%r14
   1e176:	49 c1 e6 05          	shl    $0x5,%r14
   1e17a:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
   1e17f:	49 01 de             	add    %rbx,%r14
   1e182:	48 8d 47 ff          	lea    -0x1(%rdi),%rax
   1e186:	48 89 f2             	mov    %rsi,%rdx
   1e189:	48 29 c2             	sub    %rax,%rdx
   1e18c:	0f 82 9b 08 00 00    	jb     1ea2d <std::backtrace_rs::symbolize::gimli::resolve+0x211d>
   1e192:	48 83 fa 02          	cmp    $0x2,%rdx
   1e196:	0f 82 ae 00 00 00    	jb     1e24a <std::backtrace_rs::symbolize::gimli::resolve+0x193a>
   1e19c:	49 89 c2             	mov    %rax,%r10
   1e19f:	49 c1 e2 05          	shl    $0x5,%r10
   1e1a3:	4e 8d 3c 13          	lea    (%rbx,%r10,1),%r15
   1e1a7:	48 89 fb             	mov    %rdi,%rbx
   1e1aa:	48 c1 e3 05          	shl    $0x5,%rbx
   1e1ae:	49 89 c5             	mov    %rax,%r13
   1e1b1:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   1e1b6:	48 8d 0c 18          	lea    (%rax,%rbx,1),%rcx
   1e1ba:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   1e1bf:	4e 8b 64 10 10       	mov    0x10(%rax,%r10,1),%r12
   1e1c4:	4d 8b 0f             	mov    (%r15),%r9
   1e1c7:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   1e1cc:	4c 39 64 18 10       	cmp    %r12,0x10(%rax,%rbx,1)
   1e1d1:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
   1e1d6:	72 0a                	jb     1e1e2 <std::backtrace_rs::symbolize::gimli::resolve+0x18d2>
   1e1d8:	4c 89 e8             	mov    %r13,%rax
   1e1db:	77 6d                	ja     1e24a <std::backtrace_rs::symbolize::gimli::resolve+0x193a>
   1e1dd:	4c 39 09             	cmp    %r9,(%rcx)
   1e1e0:	73 68                	jae    1e24a <std::backtrace_rs::symbolize::gimli::resolve+0x193a>
   1e1e2:	4e 8b 5c 13 08       	mov    0x8(%rbx,%r10,1),%r11
   1e1e7:	4e 8b 54 13 18       	mov    0x18(%rbx,%r10,1),%r10
   1e1ec:	f3 0f 6f 01          	movdqu (%rcx),%xmm0
   1e1f0:	0f 10 49 10          	movups 0x10(%rcx),%xmm1
   1e1f4:	41 0f 11 4f 10       	movups %xmm1,0x10(%r15)
   1e1f9:	f3 41 0f 7f 07       	movdqu %xmm0,(%r15)
   1e1fe:	48 83 fa 03          	cmp    $0x3,%rdx
   1e202:	72 34                	jb     1e238 <std::backtrace_rs::symbolize::gimli::resolve+0x1928>
   1e204:	4c 89 c0             	mov    %r8,%rax
   1e207:	4c 89 f1             	mov    %r14,%rcx
   1e20a:	eb 1e                	jmp    1e22a <std::backtrace_rs::symbolize::gimli::resolve+0x191a>
   1e20c:	f3 0f 6f 41 20       	movdqu 0x20(%rcx),%xmm0
   1e211:	0f 10 49 30          	movups 0x30(%rcx),%xmm1
   1e215:	0f 11 49 10          	movups %xmm1,0x10(%rcx)
   1e219:	f3 0f 7f 01          	movdqu %xmm0,(%rcx)
   1e21d:	48 83 c1 20          	add    $0x20,%rcx
   1e221:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
   1e225:	48 39 c7             	cmp    %rax,%rdi
   1e228:	74 0e                	je     1e238 <std::backtrace_rs::symbolize::gimli::resolve+0x1928>
   1e22a:	4c 39 61 30          	cmp    %r12,0x30(%rcx)
   1e22e:	72 dc                	jb     1e20c <std::backtrace_rs::symbolize::gimli::resolve+0x18fc>
   1e230:	77 06                	ja     1e238 <std::backtrace_rs::symbolize::gimli::resolve+0x1928>
   1e232:	4c 39 49 20          	cmp    %r9,0x20(%rcx)
   1e236:	72 d4                	jb     1e20c <std::backtrace_rs::symbolize::gimli::resolve+0x18fc>
   1e238:	4c 89 09             	mov    %r9,(%rcx)
   1e23b:	4c 89 59 08          	mov    %r11,0x8(%rcx)
   1e23f:	4c 89 61 10          	mov    %r12,0x10(%rcx)
   1e243:	4c 89 51 18          	mov    %r10,0x18(%rcx)
   1e247:	4c 89 e8             	mov    %r13,%rax
   1e24a:	48 85 c0             	test   %rax,%rax
   1e24d:	74 16                	je     1e265 <std::backtrace_rs::symbolize::gimli::resolve+0x1955>
   1e24f:	49 83 c6 e0          	add    $0xffffffffffffffe0,%r14
   1e253:	48 89 c7             	mov    %rax,%rdi
   1e256:	48 83 fa 0a          	cmp    $0xa,%rdx
   1e25a:	0f 82 22 ff ff ff    	jb     1e182 <std::backtrace_rs::symbolize::gimli::resolve+0x1872>
   1e260:	eb 03                	jmp    1e265 <std::backtrace_rs::symbolize::gimli::resolve+0x1955>
   1e262:	48 89 f8             	mov    %rdi,%rax
   1e265:	48 8d bc 24 98 04 00 	lea    0x498(%rsp),%rdi
   1e26c:	00 
   1e26d:	48 89 84 24 48 01 00 	mov    %rax,0x148(%rsp)
   1e274:	00 
   1e275:	48 89 c6             	mov    %rax,%rsi
   1e278:	e8 43 b2 fe ff       	callq  94c0 <alloc::vec::Vec<T>::push>
   1e27d:	48 8b 84 24 a8 04 00 	mov    0x4a8(%rsp),%rax
   1e284:	00 
   1e285:	48 83 f8 02          	cmp    $0x2,%rax
   1e289:	0f 82 a5 fd ff ff    	jb     1e034 <std::backtrace_rs::symbolize::gimli::resolve+0x1724>
   1e28f:	4c 8b bc 24 98 04 00 	mov    0x498(%rsp),%r15
   1e296:	00 
   1e297:	4c 89 bc 24 90 00 00 	mov    %r15,0x90(%rsp)
   1e29e:	00 
   1e29f:	e9 89 00 00 00       	jmpq   1e32d <std::backtrace_rs::symbolize::gimli::resolve+0x1a1d>
   1e2a4:	4c 89 ef             	mov    %r13,%rdi
   1e2a7:	4c 89 f6             	mov    %r14,%rsi
   1e2aa:	4c 8b b4 24 80 00 00 	mov    0x80(%rsp),%r14
   1e2b1:	00 
   1e2b2:	48 29 f2             	sub    %rsi,%rdx
   1e2b5:	48 83 e2 e0          	and    $0xffffffffffffffe0,%rdx
   1e2b9:	ff 15 39 7a 02 00    	callq  *0x27a39(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
   1e2bf:	48 8b 8c 24 68 01 00 	mov    0x168(%rsp),%rcx
   1e2c6:	00 
   1e2c7:	48 03 4c 24 10       	add    0x10(%rsp),%rcx
   1e2cc:	48 8b 84 24 b0 00 00 	mov    0xb0(%rsp),%rax
   1e2d3:	00 
   1e2d4:	49 89 06             	mov    %rax,(%r14)
   1e2d7:	48 8b 84 24 58 01 00 	mov    0x158(%rsp),%rax
   1e2de:	00 
   1e2df:	48 89 08             	mov    %rcx,(%rax)
   1e2e2:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
   1e2e9:	00 
   1e2ea:	49 8d 3c 07          	lea    (%r15,%rax,1),%rdi
   1e2ee:	49 8d 34 07          	lea    (%r15,%rax,1),%rsi
   1e2f2:	48 83 c6 10          	add    $0x10,%rsi
   1e2f6:	48 8b 94 24 c8 00 00 	mov    0xc8(%rsp),%rdx
   1e2fd:	00 
   1e2fe:	48 f7 d2             	not    %rdx
   1e301:	48 03 94 24 b8 00 00 	add    0xb8(%rsp),%rdx
   1e308:	00 
   1e309:	48 c1 e2 04          	shl    $0x4,%rdx
   1e30d:	ff 15 55 7b 02 00    	callq  *0x27b55(%rip)        # 45e68 <memmove@GLIBC_2.2.5>
   1e313:	48 8b 84 24 c0 00 00 	mov    0xc0(%rsp),%rax
   1e31a:	00 
   1e31b:	48 89 84 24 a8 04 00 	mov    %rax,0x4a8(%rsp)
   1e322:	00 
   1e323:	48 83 f8 01          	cmp    $0x1,%rax
   1e327:	0f 86 07 fd ff ff    	jbe    1e034 <std::backtrace_rs::symbolize::gimli::resolve+0x1724>
   1e32d:	48 89 c6             	mov    %rax,%rsi
   1e330:	4c 8d 40 ff          	lea    -0x1(%rax),%r8
   1e334:	4c 89 c3             	mov    %r8,%rbx
   1e337:	48 c1 e3 04          	shl    $0x4,%rbx
   1e33b:	49 83 3c 1f 00       	cmpq   $0x0,(%r15,%rbx,1)
   1e340:	74 52                	je     1e394 <std::backtrace_rs::symbolize::gimli::resolve+0x1a84>
   1e342:	48 89 f2             	mov    %rsi,%rdx
   1e345:	48 c1 e2 04          	shl    $0x4,%rdx
   1e349:	4a 8b 44 3a e8       	mov    -0x18(%rdx,%r15,1),%rax
   1e34e:	4d 8b 4c 1f 08       	mov    0x8(%r15,%rbx,1),%r9
   1e353:	4c 39 c8             	cmp    %r9,%rax
   1e356:	76 3c                	jbe    1e394 <std::backtrace_rs::symbolize::gimli::resolve+0x1a84>
   1e358:	48 83 fe 02          	cmp    $0x2,%rsi
   1e35c:	0f 86 d2 fc ff ff    	jbe    1e034 <std::backtrace_rs::symbolize::gimli::resolve+0x1724>
   1e362:	48 8d 7e fd          	lea    -0x3(%rsi),%rdi
   1e366:	48 89 f9             	mov    %rdi,%rcx
   1e369:	48 c1 e1 04          	shl    $0x4,%rcx
   1e36d:	49 8b 4c 0f 08       	mov    0x8(%r15,%rcx,1),%rcx
   1e372:	49 8d 1c 01          	lea    (%r9,%rax,1),%rbx
   1e376:	48 39 d9             	cmp    %rbx,%rcx
   1e379:	76 34                	jbe    1e3af <std::backtrace_rs::symbolize::gimli::resolve+0x1a9f>
   1e37b:	48 83 fe 03          	cmp    $0x3,%rsi
   1e37f:	0f 86 af fc ff ff    	jbe    1e034 <std::backtrace_rs::symbolize::gimli::resolve+0x1724>
   1e385:	48 01 c8             	add    %rcx,%rax
   1e388:	4a 39 44 3a c8       	cmp    %rax,-0x38(%rdx,%r15,1)
   1e38d:	76 20                	jbe    1e3af <std::backtrace_rs::symbolize::gimli::resolve+0x1a9f>
   1e38f:	e9 a0 fc ff ff       	jmpq   1e034 <std::backtrace_rs::symbolize::gimli::resolve+0x1724>
   1e394:	48 83 fe 03          	cmp    $0x3,%rsi
   1e398:	72 1a                	jb     1e3b4 <std::backtrace_rs::symbolize::gimli::resolve+0x1aa4>
   1e39a:	48 8d 7e fd          	lea    -0x3(%rsi),%rdi
   1e39e:	48 89 f8             	mov    %rdi,%rax
   1e3a1:	48 c1 e0 04          	shl    $0x4,%rax
   1e3a5:	49 8b 4c 07 08       	mov    0x8(%r15,%rax,1),%rcx
   1e3aa:	4d 8b 4c 1f 08       	mov    0x8(%r15,%rbx,1),%r9
   1e3af:	4c 39 c9             	cmp    %r9,%rcx
   1e3b2:	72 04                	jb     1e3b8 <std::backtrace_rs::symbolize::gimli::resolve+0x1aa8>
   1e3b4:	48 8d 7e fe          	lea    -0x2(%rsi),%rdi
   1e3b8:	48 8d 47 01          	lea    0x1(%rdi),%rax
   1e3bc:	48 39 c6             	cmp    %rax,%rsi
   1e3bf:	0f 86 63 05 00 00    	jbe    1e928 <std::backtrace_rs::symbolize::gimli::resolve+0x2018>
   1e3c5:	48 39 fe             	cmp    %rdi,%rsi
   1e3c8:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   1e3cd:	0f 86 67 05 00 00    	jbe    1e93a <std::backtrace_rs::symbolize::gimli::resolve+0x202a>
   1e3d3:	48 89 c1             	mov    %rax,%rcx
   1e3d6:	48 c1 e1 04          	shl    $0x4,%rcx
   1e3da:	49 8b 1c 0f          	mov    (%r15,%rcx,1),%rbx
   1e3de:	48 c1 e7 04          	shl    $0x4,%rdi
   1e3e2:	49 8b 54 3f 08       	mov    0x8(%r15,%rdi,1),%rdx
   1e3e7:	4d 8b 24 3f          	mov    (%r15,%rdi,1),%r12
   1e3eb:	49 01 d4             	add    %rdx,%r12
   1e3ee:	4d 89 e6             	mov    %r12,%r14
   1e3f1:	49 29 de             	sub    %rbx,%r14
   1e3f4:	0f 82 4f 05 00 00    	jb     1e949 <std::backtrace_rs::symbolize::gimli::resolve+0x2039>
   1e3fa:	4c 3b 64 24 38       	cmp    0x38(%rsp),%r12
   1e3ff:	0f 87 59 05 00 00    	ja     1e95e <std::backtrace_rs::symbolize::gimli::resolve+0x204e>
   1e405:	48 89 94 24 68 01 00 	mov    %rdx,0x168(%rsp)
   1e40c:	00 
   1e40d:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
   1e414:	00 
   1e415:	48 89 b4 24 b8 00 00 	mov    %rsi,0xb8(%rsp)
   1e41c:	00 
   1e41d:	4c 89 84 24 c0 00 00 	mov    %r8,0xc0(%rsp)
   1e424:	00 
   1e425:	48 89 8c 24 60 01 00 	mov    %rcx,0x160(%rsp)
   1e42c:	00 
   1e42d:	49 8b 4c 0f 08       	mov    0x8(%r15,%rcx,1),%rcx
   1e432:	49 8d 04 3f          	lea    (%r15,%rdi,1),%rax
   1e436:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   1e43d:	00 
   1e43e:	49 8d 04 3f          	lea    (%r15,%rdi,1),%rax
   1e442:	48 83 c0 08          	add    $0x8,%rax
   1e446:	48 89 84 24 58 01 00 	mov    %rax,0x158(%rsp)
   1e44d:	00 
   1e44e:	48 89 9c 24 b0 00 00 	mov    %rbx,0xb0(%rsp)
   1e455:	00 
   1e456:	48 c1 e3 05          	shl    $0x5,%rbx
   1e45a:	4c 01 cb             	add    %r9,%rbx
   1e45d:	48 89 ca             	mov    %rcx,%rdx
   1e460:	48 c1 e2 05          	shl    $0x5,%rdx
   1e464:	4c 8d 2c 13          	lea    (%rbx,%rdx,1),%r13
   1e468:	49 c1 e4 05          	shl    $0x5,%r12
   1e46c:	4d 89 f7             	mov    %r14,%r15
   1e46f:	49 29 cf             	sub    %rcx,%r15
   1e472:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   1e477:	49 39 cf             	cmp    %rcx,%r15
   1e47a:	48 89 9c 24 a8 00 00 	mov    %rbx,0xa8(%rsp)
   1e481:	00 
   1e482:	0f 83 ae 00 00 00    	jae    1e536 <std::backtrace_rs::symbolize::gimli::resolve+0x1c26>
   1e488:	4c 89 fb             	mov    %r15,%rbx
   1e48b:	48 c1 e3 05          	shl    $0x5,%rbx
   1e48f:	4c 8b 74 24 48       	mov    0x48(%rsp),%r14
   1e494:	4c 89 f7             	mov    %r14,%rdi
   1e497:	4c 89 ee             	mov    %r13,%rsi
   1e49a:	48 89 da             	mov    %rbx,%rdx
   1e49d:	ff 15 55 78 02 00    	callq  *0x27855(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
   1e4a3:	48 89 da             	mov    %rbx,%rdx
   1e4a6:	4c 01 f2             	add    %r14,%rdx
   1e4a9:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1e4ae:	48 85 c0             	test   %rax,%rax
   1e4b1:	0f 8e 30 01 00 00    	jle    1e5e7 <std::backtrace_rs::symbolize::gimli::resolve+0x1cd7>
   1e4b7:	4d 85 ff             	test   %r15,%r15
   1e4ba:	0f 8e 27 01 00 00    	jle    1e5e7 <std::backtrace_rs::symbolize::gimli::resolve+0x1cd7>
   1e4c0:	4c 03 a4 24 f8 00 00 	add    0xf8(%rsp),%r12
   1e4c7:	00 
   1e4c8:	48 89 d0             	mov    %rdx,%rax
   1e4cb:	4c 8b bc 24 90 00 00 	mov    0x90(%rsp),%r15
   1e4d2:	00 
   1e4d3:	48 8b bc 24 a8 00 00 	mov    0xa8(%rsp),%rdi
   1e4da:	00 
   1e4db:	48 8d 50 e0          	lea    -0x20(%rax),%rdx
   1e4df:	49 8d 5d e0          	lea    -0x20(%r13),%rbx
   1e4e3:	49 8b 4d f0          	mov    -0x10(%r13),%rcx
   1e4e7:	48 39 48 f0          	cmp    %rcx,-0x10(%rax)
   1e4eb:	72 0d                	jb     1e4fa <std::backtrace_rs::symbolize::gimli::resolve+0x1bea>
   1e4ed:	77 42                	ja     1e531 <std::backtrace_rs::symbolize::gimli::resolve+0x1c21>
   1e4ef:	48 8b 33             	mov    (%rbx),%rsi
   1e4f2:	48 89 d1             	mov    %rdx,%rcx
   1e4f5:	48 39 32             	cmp    %rsi,(%rdx)
   1e4f8:	73 09                	jae    1e503 <std::backtrace_rs::symbolize::gimli::resolve+0x1bf3>
   1e4fa:	49 89 dd             	mov    %rbx,%r13
   1e4fd:	48 89 c2             	mov    %rax,%rdx
   1e500:	48 89 d9             	mov    %rbx,%rcx
   1e503:	f3 0f 6f 01          	movdqu (%rcx),%xmm0
   1e507:	0f 10 49 10          	movups 0x10(%rcx),%xmm1
   1e50b:	41 0f 11 4c 24 10    	movups %xmm1,0x10(%r12)
   1e511:	f3 41 0f 7f 04 24    	movdqu %xmm0,(%r12)
   1e517:	4c 39 ef             	cmp    %r13,%rdi
   1e51a:	0f 83 84 fd ff ff    	jae    1e2a4 <std::backtrace_rs::symbolize::gimli::resolve+0x1994>
   1e520:	49 83 c4 e0          	add    $0xffffffffffffffe0,%r12
   1e524:	48 89 d0             	mov    %rdx,%rax
   1e527:	4c 39 f2             	cmp    %r14,%rdx
   1e52a:	77 af                	ja     1e4db <std::backtrace_rs::symbolize::gimli::resolve+0x1bcb>
   1e52c:	e9 73 fd ff ff       	jmpq   1e2a4 <std::backtrace_rs::symbolize::gimli::resolve+0x1994>
   1e531:	48 89 d1             	mov    %rdx,%rcx
   1e534:	eb cd                	jmp    1e503 <std::backtrace_rs::symbolize::gimli::resolve+0x1bf3>
   1e536:	4c 8b 7c 24 48       	mov    0x48(%rsp),%r15
   1e53b:	4c 89 ff             	mov    %r15,%rdi
   1e53e:	48 89 de             	mov    %rbx,%rsi
   1e541:	48 89 d3             	mov    %rdx,%rbx
   1e544:	ff 15 ae 77 02 00    	callq  *0x277ae(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
   1e54a:	48 89 da             	mov    %rbx,%rdx
   1e54d:	4c 01 fa             	add    %r15,%rdx
   1e550:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1e555:	48 85 c0             	test   %rax,%rax
   1e558:	0f 8e a3 00 00 00    	jle    1e601 <std::backtrace_rs::symbolize::gimli::resolve+0x1cf1>
   1e55e:	49 39 c6             	cmp    %rax,%r14
   1e561:	4c 8b bc 24 90 00 00 	mov    0x90(%rsp),%r15
   1e568:	00 
   1e569:	0f 8e 80 00 00 00    	jle    1e5ef <std::backtrace_rs::symbolize::gimli::resolve+0x1cdf>
   1e56f:	4c 03 64 24 20       	add    0x20(%rsp),%r12
   1e574:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   1e579:	48 89 c6             	mov    %rax,%rsi
   1e57c:	4c 8b b4 24 80 00 00 	mov    0x80(%rsp),%r14
   1e583:	00 
   1e584:	48 8b 9c 24 a8 00 00 	mov    0xa8(%rsp),%rbx
   1e58b:	00 
   1e58c:	48 8b 48 10          	mov    0x10(%rax),%rcx
   1e590:	49 39 4d 10          	cmp    %rcx,0x10(%r13)
   1e594:	72 0b                	jb     1e5a1 <std::backtrace_rs::symbolize::gimli::resolve+0x1c91>
   1e596:	77 15                	ja     1e5ad <std::backtrace_rs::symbolize::gimli::resolve+0x1c9d>
   1e598:	48 8b 08             	mov    (%rax),%rcx
   1e59b:	49 39 4d 00          	cmp    %rcx,0x0(%r13)
   1e59f:	73 0c                	jae    1e5ad <std::backtrace_rs::symbolize::gimli::resolve+0x1c9d>
   1e5a1:	4d 8d 45 20          	lea    0x20(%r13),%r8
   1e5a5:	48 89 c1             	mov    %rax,%rcx
   1e5a8:	4c 89 e8             	mov    %r13,%rax
   1e5ab:	eb 0a                	jmp    1e5b7 <std::backtrace_rs::symbolize::gimli::resolve+0x1ca7>
   1e5ad:	48 8d 70 20          	lea    0x20(%rax),%rsi
   1e5b1:	48 89 f1             	mov    %rsi,%rcx
   1e5b4:	4d 89 e8             	mov    %r13,%r8
   1e5b7:	48 8d 7b 20          	lea    0x20(%rbx),%rdi
   1e5bb:	f3 0f 6f 00          	movdqu (%rax),%xmm0
   1e5bf:	0f 10 48 10          	movups 0x10(%rax),%xmm1
   1e5c3:	0f 11 4b 10          	movups %xmm1,0x10(%rbx)
   1e5c7:	f3 0f 7f 03          	movdqu %xmm0,(%rbx)
   1e5cb:	48 39 d1             	cmp    %rdx,%rcx
   1e5ce:	0f 83 de fc ff ff    	jae    1e2b2 <std::backtrace_rs::symbolize::gimli::resolve+0x19a2>
   1e5d4:	48 89 c8             	mov    %rcx,%rax
   1e5d7:	48 89 fb             	mov    %rdi,%rbx
   1e5da:	4d 89 c5             	mov    %r8,%r13
   1e5dd:	4d 39 e0             	cmp    %r12,%r8
   1e5e0:	72 aa                	jb     1e58c <std::backtrace_rs::symbolize::gimli::resolve+0x1c7c>
   1e5e2:	e9 cb fc ff ff       	jmpq   1e2b2 <std::backtrace_rs::symbolize::gimli::resolve+0x19a2>
   1e5e7:	4c 89 ef             	mov    %r13,%rdi
   1e5ea:	4c 89 f6             	mov    %r14,%rsi
   1e5ed:	eb 1f                	jmp    1e60e <std::backtrace_rs::symbolize::gimli::resolve+0x1cfe>
   1e5ef:	48 8b bc 24 a8 00 00 	mov    0xa8(%rsp),%rdi
   1e5f6:	00 
   1e5f7:	48 8b 74 24 48       	mov    0x48(%rsp),%rsi
   1e5fc:	e9 a9 fc ff ff       	jmpq   1e2aa <std::backtrace_rs::symbolize::gimli::resolve+0x199a>
   1e601:	48 8b bc 24 a8 00 00 	mov    0xa8(%rsp),%rdi
   1e608:	00 
   1e609:	48 8b 74 24 48       	mov    0x48(%rsp),%rsi
   1e60e:	4c 8b bc 24 90 00 00 	mov    0x90(%rsp),%r15
   1e615:	00 
   1e616:	e9 8f fc ff ff       	jmpq   1e2aa <std::backtrace_rs::symbolize::gimli::resolve+0x199a>
   1e61b:	49 89 f3             	mov    %rsi,%r11
   1e61e:	49 c1 e3 05          	shl    $0x5,%r11
   1e622:	4c 03 9c 24 30 01 00 	add    0x130(%rsp),%r11
   1e629:	00 
   1e62a:	41 ba 02 00 00 00    	mov    $0x2,%r10d
   1e630:	48 89 f7             	mov    %rsi,%rdi
   1e633:	4c 29 d7             	sub    %r10,%rdi
   1e636:	74 33                	je     1e66b <std::backtrace_rs::symbolize::gimli::resolve+0x1d5b>
   1e638:	4c 89 d2             	mov    %r10,%rdx
   1e63b:	49 8b 03             	mov    (%r11),%rax
   1e63e:	48 39 c1             	cmp    %rax,%rcx
   1e641:	0f 82 0e fb ff ff    	jb     1e155 <std::backtrace_rs::symbolize::gimli::resolve+0x1845>
   1e647:	4c 89 cb             	mov    %r9,%rbx
   1e64a:	4d 8b 4b f0          	mov    -0x10(%r11),%r9
   1e64e:	4c 8d 52 01          	lea    0x1(%rdx),%r10
   1e652:	49 83 c3 e0          	add    $0xffffffffffffffe0,%r11
   1e656:	48 39 c1             	cmp    %rax,%rcx
   1e659:	48 89 c1             	mov    %rax,%rcx
   1e65c:	77 d2                	ja     1e630 <std::backtrace_rs::symbolize::gimli::resolve+0x1d20>
   1e65e:	48 89 c1             	mov    %rax,%rcx
   1e661:	4c 39 cb             	cmp    %r9,%rbx
   1e664:	73 ca                	jae    1e630 <std::backtrace_rs::symbolize::gimli::resolve+0x1d20>
   1e666:	e9 ea fa ff ff       	jmpq   1e155 <std::backtrace_rs::symbolize::gimli::resolve+0x1845>
   1e66b:	31 c0                	xor    %eax,%eax
   1e66d:	48 89 f2             	mov    %rsi,%rdx
   1e670:	e9 f0 fb ff ff       	jmpq   1e265 <std::backtrace_rs::symbolize::gimli::resolve+0x1955>
   1e675:	48 8b b4 24 a0 04 00 	mov    0x4a0(%rsp),%rsi
   1e67c:	00 
   1e67d:	48 85 f6             	test   %rsi,%rsi
   1e680:	74 1e                	je     1e6a0 <std::backtrace_rs::symbolize::gimli::resolve+0x1d90>
   1e682:	48 8b bc 24 98 04 00 	mov    0x498(%rsp),%rdi
   1e689:	00 
   1e68a:	48 85 ff             	test   %rdi,%rdi
   1e68d:	74 11                	je     1e6a0 <std::backtrace_rs::symbolize::gimli::resolve+0x1d90>
   1e68f:	48 c1 e6 04          	shl    $0x4,%rsi
   1e693:	74 0b                	je     1e6a0 <std::backtrace_rs::symbolize::gimli::resolve+0x1d90>
   1e695:	ba 08 00 00 00       	mov    $0x8,%edx
   1e69a:	ff 15 58 75 02 00    	callq  *0x27558(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   1e6a0:	48 83 7c 24 60 00    	cmpq   $0x0,0x60(%rsp)
   1e6a6:	74 15                	je     1e6bd <std::backtrace_rs::symbolize::gimli::resolve+0x1dad>
   1e6a8:	ba 08 00 00 00       	mov    $0x8,%edx
   1e6ad:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
   1e6b2:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
   1e6b7:	ff 15 3b 75 02 00    	callq  *0x2753b(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   1e6bd:	48 8b 84 24 18 01 00 	mov    0x118(%rsp),%rax
   1e6c4:	00 
   1e6c5:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1e6ca:	48 8b 84 24 20 01 00 	mov    0x120(%rsp),%rax
   1e6d1:	00 
   1e6d2:	4c 8b bc 24 28 01 00 	mov    0x128(%rsp),%r15
   1e6d9:	00 
   1e6da:	4c 39 f8             	cmp    %r15,%rax
   1e6dd:	76 6d                	jbe    1e74c <std::backtrace_rs::symbolize::gimli::resolve+0x1e3c>
   1e6df:	48 83 7c 24 20 00    	cmpq   $0x0,0x20(%rsp)
   1e6e5:	74 65                	je     1e74c <std::backtrace_rs::symbolize::gimli::resolve+0x1e3c>
   1e6e7:	48 c1 e0 03          	shl    $0x3,%rax
   1e6eb:	48 8d 34 80          	lea    (%rax,%rax,4),%rsi
   1e6ef:	4a 8d 04 fd 00 00 00 	lea    0x0(,%r15,8),%rax
   1e6f6:	00 
   1e6f7:	48 8d 1c 80          	lea    (%rax,%rax,4),%rbx
   1e6fb:	48 85 db             	test   %rbx,%rbx
   1e6fe:	74 2d                	je     1e72d <std::backtrace_rs::symbolize::gimli::resolve+0x1e1d>
   1e700:	ba 08 00 00 00       	mov    $0x8,%edx
   1e705:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   1e70a:	48 89 d9             	mov    %rbx,%rcx
   1e70d:	ff 15 65 78 02 00    	callq  *0x27865(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
   1e713:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1e718:	48 85 c0             	test   %rax,%rax
   1e71b:	75 2f                	jne    1e74c <std::backtrace_rs::symbolize::gimli::resolve+0x1e3c>
   1e71d:	be 08 00 00 00       	mov    $0x8,%esi
   1e722:	48 89 df             	mov    %rbx,%rdi
   1e725:	ff 15 f5 73 02 00    	callq  *0x273f5(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   1e72b:	0f 0b                	ud2    
   1e72d:	48 85 f6             	test   %rsi,%rsi
   1e730:	74 10                	je     1e742 <std::backtrace_rs::symbolize::gimli::resolve+0x1e32>
   1e732:	ba 08 00 00 00       	mov    $0x8,%edx
   1e737:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   1e73c:	ff 15 b6 74 02 00    	callq  *0x274b6(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   1e742:	b8 08 00 00 00       	mov    $0x8,%eax
   1e747:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1e74c:	48 8b 84 24 e0 00 00 	mov    0xe0(%rsp),%rax
   1e753:	00 
   1e754:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1e759:	48 8b b4 24 e8 00 00 	mov    0xe8(%rsp),%rsi
   1e760:	00 
   1e761:	48 8b 9c 24 f0 00 00 	mov    0xf0(%rsp),%rbx
   1e768:	00 
   1e769:	48 39 de             	cmp    %rbx,%rsi
   1e76c:	76 61                	jbe    1e7cf <std::backtrace_rs::symbolize::gimli::resolve+0x1ebf>
   1e76e:	48 83 7c 24 10 00    	cmpq   $0x0,0x10(%rsp)
   1e774:	74 59                	je     1e7cf <std::backtrace_rs::symbolize::gimli::resolve+0x1ebf>
   1e776:	48 c1 e6 05          	shl    $0x5,%rsi
   1e77a:	49 89 dc             	mov    %rbx,%r12
   1e77d:	49 c1 e4 05          	shl    $0x5,%r12
   1e781:	74 2d                	je     1e7b0 <std::backtrace_rs::symbolize::gimli::resolve+0x1ea0>
   1e783:	ba 08 00 00 00       	mov    $0x8,%edx
   1e788:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   1e78d:	4c 89 e1             	mov    %r12,%rcx
   1e790:	ff 15 e2 77 02 00    	callq  *0x277e2(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
   1e796:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1e79b:	48 85 c0             	test   %rax,%rax
   1e79e:	75 2f                	jne    1e7cf <std::backtrace_rs::symbolize::gimli::resolve+0x1ebf>
   1e7a0:	be 08 00 00 00       	mov    $0x8,%esi
   1e7a5:	4c 89 e7             	mov    %r12,%rdi
   1e7a8:	ff 15 72 73 02 00    	callq  *0x27372(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   1e7ae:	0f 0b                	ud2    
   1e7b0:	48 85 f6             	test   %rsi,%rsi
   1e7b3:	74 10                	je     1e7c5 <std::backtrace_rs::symbolize::gimli::resolve+0x1eb5>
   1e7b5:	ba 08 00 00 00       	mov    $0x8,%edx
   1e7ba:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   1e7bf:	ff 15 33 74 02 00    	callq  *0x27433(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   1e7c5:	b8 08 00 00 00       	mov    $0x8,%eax
   1e7ca:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1e7cf:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   1e7d4:	83 38 02             	cmpl   $0x2,(%rax)
   1e7d7:	75 35                	jne    1e80e <std::backtrace_rs::symbolize::gimli::resolve+0x1efe>
   1e7d9:	31 c0                	xor    %eax,%eax
   1e7db:	4c 8b 74 24 30       	mov    0x30(%rsp),%r14
   1e7e0:	4c 8b 6c 24 70       	mov    0x70(%rsp),%r13
   1e7e5:	4c 8b 54 24 68       	mov    0x68(%rsp),%r10
   1e7ea:	4c 8b 4c 24 78       	mov    0x78(%rsp),%r9
   1e7ef:	4c 8b a4 24 98 00 00 	mov    0x98(%rsp),%r12
   1e7f6:	00 
   1e7f7:	48 8b 8c 24 38 01 00 	mov    0x138(%rsp),%rcx
   1e7fe:	00 
   1e7ff:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   1e804:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   1e809:	e9 14 f5 ff ff       	jmpq   1dd22 <std::backtrace_rs::symbolize::gimli::resolve+0x1412>
   1e80e:	49 c1 e7 03          	shl    $0x3,%r15
   1e812:	4b 8d 34 bf          	lea    (%r15,%r15,4),%rsi
   1e816:	48 85 f6             	test   %rsi,%rsi
   1e819:	74 10                	je     1e82b <std::backtrace_rs::symbolize::gimli::resolve+0x1f1b>
   1e81b:	ba 08 00 00 00       	mov    $0x8,%edx
   1e820:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   1e825:	ff 15 cd 73 02 00    	callq  *0x273cd(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   1e82b:	48 c1 e3 05          	shl    $0x5,%rbx
   1e82f:	4c 8b 74 24 30       	mov    0x30(%rsp),%r14
   1e834:	4c 8b 6c 24 70       	mov    0x70(%rsp),%r13
   1e839:	4c 8b 54 24 68       	mov    0x68(%rsp),%r10
   1e83e:	4c 8b 4c 24 78       	mov    0x78(%rsp),%r9
   1e843:	0f 84 04 f5 ff ff    	je     1dd4d <std::backtrace_rs::symbolize::gimli::resolve+0x143d>
   1e849:	ba 08 00 00 00       	mov    $0x8,%edx
   1e84e:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   1e853:	48 89 de             	mov    %rbx,%rsi
   1e856:	4c 89 d3             	mov    %r10,%rbx
   1e859:	4d 89 cf             	mov    %r9,%r15
   1e85c:	ff 15 96 73 02 00    	callq  *0x27396(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   1e862:	4d 89 f9             	mov    %r15,%r9
   1e865:	49 89 da             	mov    %rbx,%r10
   1e868:	e9 e0 f4 ff ff       	jmpq   1dd4d <std::backtrace_rs::symbolize::gimli::resolve+0x143d>
   1e86d:	4c 8b 74 24 30       	mov    0x30(%rsp),%r14
   1e872:	44 8b 7c 24 1c       	mov    0x1c(%rsp),%r15d
   1e877:	4c 8b 6c 24 70       	mov    0x70(%rsp),%r13
   1e87c:	4c 8b 54 24 68       	mov    0x68(%rsp),%r10
   1e881:	41 bc 12 00 00 00    	mov    $0x12,%r12d
   1e887:	e9 83 f4 ff ff       	jmpq   1dd0f <std::backtrace_rs::symbolize::gimli::resolve+0x13ff>
   1e88c:	48 8d 15 c5 51 02 00 	lea    0x251c5(%rip),%rdx        # 43a58 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x520>
   1e893:	ff 15 f7 73 02 00    	callq  *0x273f7(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   1e899:	0f 0b                	ud2    
   1e89b:	48 8d 15 26 5e 02 00 	lea    0x25e26(%rip),%rdx        # 446c8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1190>
   1e8a2:	31 ff                	xor    %edi,%edi
   1e8a4:	31 f6                	xor    %esi,%esi
   1e8a6:	ff 15 e4 73 02 00    	callq  *0x273e4(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   1e8ac:	0f 0b                	ud2    
   1e8ae:	48 8d 15 fb 5d 02 00 	lea    0x25dfb(%rip),%rdx        # 446b0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1178>
   1e8b5:	4c 89 e7             	mov    %r12,%rdi
   1e8b8:	ff 15 d2 73 02 00    	callq  *0x273d2(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   1e8be:	0f 0b                	ud2    
   1e8c0:	bf 20 06 00 00       	mov    $0x620,%edi
   1e8c5:	be 08 00 00 00       	mov    $0x8,%esi
   1e8ca:	ff 15 50 72 02 00    	callq  *0x27250(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   1e8d0:	0f 0b                	ud2    
   1e8d2:	48 8d 15 67 51 02 00 	lea    0x25167(%rip),%rdx        # 43a40 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x508>
   1e8d9:	4c 89 ff             	mov    %r15,%rdi
   1e8dc:	ff 15 46 71 02 00    	callq  *0x27146(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   1e8e2:	0f 0b                	ud2    
   1e8e4:	48 8d 15 25 51 02 00 	lea    0x25125(%rip),%rdx        # 43a10 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x4d8>
   1e8eb:	4c 89 e7             	mov    %r12,%rdi
   1e8ee:	4c 89 ce             	mov    %r9,%rsi
   1e8f1:	ff 15 99 73 02 00    	callq  *0x27399(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   1e8f7:	eb 1b                	jmp    1e914 <std::backtrace_rs::symbolize::gimli::resolve+0x2004>
   1e8f9:	48 8d 15 28 51 02 00 	lea    0x25128(%rip),%rdx        # 43a28 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x4f0>
   1e900:	48 89 c7             	mov    %rax,%rdi
   1e903:	48 89 ce             	mov    %rcx,%rsi
   1e906:	ff 15 84 73 02 00    	callq  *0x27384(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   1e90c:	eb 06                	jmp    1e914 <std::backtrace_rs::symbolize::gimli::resolve+0x2004>
   1e90e:	ff 15 cc 71 02 00    	callq  *0x271cc(%rip)        # 45ae0 <_GLOBAL_OFFSET_TABLE_+0x158>
   1e914:	0f 0b                	ud2    
   1e916:	be 08 00 00 00       	mov    $0x8,%esi
   1e91b:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   1e920:	ff 15 fa 71 02 00    	callq  *0x271fa(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   1e926:	0f 0b                	ud2    
   1e928:	48 8d 15 d1 4f 02 00 	lea    0x24fd1(%rip),%rdx        # 43900 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3c8>
   1e92f:	48 89 c7             	mov    %rax,%rdi
   1e932:	ff 15 58 73 02 00    	callq  *0x27358(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   1e938:	eb da                	jmp    1e914 <std::backtrace_rs::symbolize::gimli::resolve+0x2004>
   1e93a:	48 8d 15 d7 4f 02 00 	lea    0x24fd7(%rip),%rdx        # 43918 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3e0>
   1e941:	ff 15 49 73 02 00    	callq  *0x27349(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   1e947:	eb cb                	jmp    1e914 <std::backtrace_rs::symbolize::gimli::resolve+0x2004>
   1e949:	48 8d 15 e0 4f 02 00 	lea    0x24fe0(%rip),%rdx        # 43930 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3f8>
   1e950:	48 89 df             	mov    %rbx,%rdi
   1e953:	4c 89 e6             	mov    %r12,%rsi
   1e956:	ff 15 44 75 02 00    	callq  *0x27544(%rip)        # 45ea0 <_GLOBAL_OFFSET_TABLE_+0x518>
   1e95c:	eb b6                	jmp    1e914 <std::backtrace_rs::symbolize::gimli::resolve+0x2004>
   1e95e:	48 8d 15 cb 4f 02 00 	lea    0x24fcb(%rip),%rdx        # 43930 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3f8>
   1e965:	4c 89 e7             	mov    %r12,%rdi
   1e968:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
   1e96d:	ff 15 b5 70 02 00    	callq  *0x270b5(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   1e973:	eb 9f                	jmp    1e914 <std::backtrace_rs::symbolize::gimli::resolve+0x2004>
   1e975:	48 8d 15 64 50 02 00 	lea    0x25064(%rip),%rdx        # 439e0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x4a8>
   1e97c:	4c 89 e7             	mov    %r12,%rdi
   1e97f:	ff 15 0b 73 02 00    	callq  *0x2730b(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   1e985:	0f 0b                	ud2    
   1e987:	48 8d 15 6a 50 02 00 	lea    0x2506a(%rip),%rdx        # 439f8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x4c0>
   1e98e:	ff 15 fc 72 02 00    	callq  *0x272fc(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   1e994:	0f 0b                	ud2    
   1e996:	48 8d 15 d3 50 02 00 	lea    0x250d3(%rip),%rdx        # 43a70 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x538>
   1e99d:	ff 15 ed 72 02 00    	callq  *0x272ed(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   1e9a3:	0f 0b                	ud2    
   1e9a5:	48 8d 15 dc 50 02 00 	lea    0x250dc(%rip),%rdx        # 43a88 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x550>
   1e9ac:	ff 15 de 72 02 00    	callq  *0x272de(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   1e9b2:	0f 0b                	ud2    
   1e9b4:	48 8d 15 fd 4e 02 00 	lea    0x24efd(%rip),%rdx        # 438b8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x380>
   1e9bb:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
   1e9c0:	ff 15 2a 74 02 00    	callq  *0x2742a(%rip)        # 45df0 <_GLOBAL_OFFSET_TABLE_+0x468>
   1e9c6:	e9 49 ff ff ff       	jmpq   1e914 <std::backtrace_rs::symbolize::gimli::resolve+0x2004>
   1e9cb:	48 8d 15 fe 4e 02 00 	lea    0x24efe(%rip),%rdx        # 438d0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x398>
   1e9d2:	ff 15 c8 74 02 00    	callq  *0x274c8(%rip)        # 45ea0 <_GLOBAL_OFFSET_TABLE_+0x518>
   1e9d8:	e9 37 ff ff ff       	jmpq   1e914 <std::backtrace_rs::symbolize::gimli::resolve+0x2004>
   1e9dd:	48 c7 84 24 20 03 00 	movq   $0xffffffffffffffff,0x320(%rsp)
   1e9e4:	00 ff ff ff ff 
   1e9e9:	48 8d 3d 0a 8c 01 00 	lea    0x18c0a(%rip),%rdi        # 375fa <str.6+0x2da>
   1e9f0:	48 8d 15 a9 50 02 00 	lea    0x250a9(%rip),%rdx        # 43aa0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x568>
   1e9f7:	be 2b 00 00 00       	mov    $0x2b,%esi
   1e9fc:	ff 15 d6 74 02 00    	callq  *0x274d6(%rip)        # 45ed8 <_GLOBAL_OFFSET_TABLE_+0x550>
   1ea02:	e9 0d ff ff ff       	jmpq   1e914 <std::backtrace_rs::symbolize::gimli::resolve+0x2004>
   1ea07:	48 8d 15 c2 4e 02 00 	lea    0x24ec2(%rip),%rdx        # 438d0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x398>
   1ea0e:	48 89 f7             	mov    %rsi,%rdi
   1ea11:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
   1ea16:	ff 15 0c 70 02 00    	callq  *0x2700c(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   1ea1c:	e9 f3 fe ff ff       	jmpq   1e914 <std::backtrace_rs::symbolize::gimli::resolve+0x2004>
   1ea21:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   1ea25:	48 89 f8             	mov    %rdi,%rax
   1ea28:	48 39 fe             	cmp    %rdi,%rsi
   1ea2b:	73 15                	jae    1ea42 <std::backtrace_rs::symbolize::gimli::resolve+0x2132>
   1ea2d:	48 8d 15 b4 4e 02 00 	lea    0x24eb4(%rip),%rdx        # 438e8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3b0>
   1ea34:	48 89 c7             	mov    %rax,%rdi
   1ea37:	ff 15 63 74 02 00    	callq  *0x27463(%rip)        # 45ea0 <_GLOBAL_OFFSET_TABLE_+0x518>
   1ea3d:	e9 d2 fe ff ff       	jmpq   1e914 <std::backtrace_rs::symbolize::gimli::resolve+0x2004>
   1ea42:	48 8d 15 9f 4e 02 00 	lea    0x24e9f(%rip),%rdx        # 438e8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3b0>
   1ea49:	48 89 f7             	mov    %rsi,%rdi
   1ea4c:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
   1ea51:	ff 15 d1 6f 02 00    	callq  *0x26fd1(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   1ea57:	e9 b8 fe ff ff       	jmpq   1e914 <std::backtrace_rs::symbolize::gimli::resolve+0x2004>
   1ea5c:	ff 15 7e 70 02 00    	callq  *0x2707e(%rip)        # 45ae0 <_GLOBAL_OFFSET_TABLE_+0x158>
   1ea62:	e9 ad fe ff ff       	jmpq   1e914 <std::backtrace_rs::symbolize::gimli::resolve+0x2004>
   1ea67:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   1ea6c:	48 89 de             	mov    %rbx,%rsi
   1ea6f:	ff 15 ab 70 02 00    	callq  *0x270ab(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   1ea75:	0f 0b                	ud2    
   1ea77:	eb 1f                	jmp    1ea98 <std::backtrace_rs::symbolize::gimli::resolve+0x2188>
   1ea79:	49 89 c6             	mov    %rax,%r14
   1ea7c:	e9 fc 00 00 00       	jmpq   1eb7d <std::backtrace_rs::symbolize::gimli::resolve+0x226d>
   1ea81:	eb 2a                	jmp    1eaad <std::backtrace_rs::symbolize::gimli::resolve+0x219d>
   1ea83:	49 89 c6             	mov    %rax,%r14
   1ea86:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
   1ea8d:	00 
   1ea8e:	e8 bd 7e fe ff       	callq  6950 <core::ptr::drop_in_place>
   1ea93:	e9 e5 00 00 00       	jmpq   1eb7d <std::backtrace_rs::symbolize::gimli::resolve+0x226d>
   1ea98:	49 89 c6             	mov    %rax,%r14
   1ea9b:	eb 2d                	jmp    1eaca <std::backtrace_rs::symbolize::gimli::resolve+0x21ba>
   1ea9d:	49 89 c6             	mov    %rax,%r14
   1eaa0:	e9 d8 00 00 00       	jmpq   1eb7d <std::backtrace_rs::symbolize::gimli::resolve+0x226d>
   1eaa5:	49 89 c6             	mov    %rax,%r14
   1eaa8:	e9 d0 00 00 00       	jmpq   1eb7d <std::backtrace_rs::symbolize::gimli::resolve+0x226d>
   1eaad:	49 89 c6             	mov    %rax,%r14
   1eab0:	48 8d bc 24 98 04 00 	lea    0x498(%rsp),%rdi
   1eab7:	00 
   1eab8:	e8 13 80 fe ff       	callq  6ad0 <core::ptr::drop_in_place>
   1eabd:	48 8d bc 24 10 06 00 	lea    0x610(%rsp),%rdi
   1eac4:	00 
   1eac5:	e8 16 77 fe ff       	callq  61e0 <core::ptr::drop_in_place>
   1eaca:	48 8d bc 24 e0 00 00 	lea    0xe0(%rsp),%rdi
   1ead1:	00 
   1ead2:	e8 09 77 fe ff       	callq  61e0 <core::ptr::drop_in_place>
   1ead7:	48 8d bc 24 18 01 00 	lea    0x118(%rsp),%rdi
   1eade:	00 
   1eadf:	e8 bc 87 fe ff       	callq  72a0 <core::ptr::drop_in_place>
   1eae4:	e9 94 00 00 00       	jmpq   1eb7d <std::backtrace_rs::symbolize::gimli::resolve+0x226d>
   1eae9:	49 89 c6             	mov    %rax,%r14
   1eaec:	e9 8c 00 00 00       	jmpq   1eb7d <std::backtrace_rs::symbolize::gimli::resolve+0x226d>
   1eaf1:	49 89 c6             	mov    %rax,%r14
   1eaf4:	48 8d bc 24 00 03 00 	lea    0x300(%rsp),%rdi
   1eafb:	00 
   1eafc:	e8 7f 83 fe ff       	callq  6e80 <core::ptr::drop_in_place>
   1eb01:	eb 7a                	jmp    1eb7d <std::backtrace_rs::symbolize::gimli::resolve+0x226d>
   1eb03:	49 89 c6             	mov    %rax,%r14
   1eb06:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
   1eb0d:	00 
   1eb0e:	e8 fd 7d fe ff       	callq  6910 <core::ptr::drop_in_place>
   1eb13:	eb 68                	jmp    1eb7d <std::backtrace_rs::symbolize::gimli::resolve+0x226d>
   1eb15:	49 89 c6             	mov    %rax,%r14
   1eb18:	48 85 db             	test   %rbx,%rbx
   1eb1b:	74 18                	je     1eb35 <std::backtrace_rs::symbolize::gimli::resolve+0x2225>
   1eb1d:	4c 89 e7             	mov    %r12,%rdi
   1eb20:	e8 1b 7e fe ff       	callq  6940 <core::ptr::drop_in_place>
   1eb25:	49 81 c4 88 01 00 00 	add    $0x188,%r12
   1eb2c:	48 81 c3 78 fe ff ff 	add    $0xfffffffffffffe78,%rbx
   1eb33:	75 e8                	jne    1eb1d <std::backtrace_rs::symbolize::gimli::resolve+0x220d>
   1eb35:	48 8b 3d dc 76 02 00 	mov    0x276dc(%rip),%rdi        # 46218 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x18>
   1eb3c:	48 8b 35 dd 76 02 00 	mov    0x276dd(%rip),%rsi        # 46220 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x20>
   1eb43:	e8 d8 89 fe ff       	callq  7520 <core::ptr::drop_in_place>
   1eb48:	48 8b 84 24 10 03 00 	mov    0x310(%rsp),%rax
   1eb4f:	00 
   1eb50:	48 89 05 b9 76 02 00 	mov    %rax,0x276b9(%rip)        # 46210 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x10>
   1eb57:	0f 28 84 24 00 03 00 	movaps 0x300(%rsp),%xmm0
   1eb5e:	00 
   1eb5f:	0f 11 05 9a 76 02 00 	movups %xmm0,0x2769a(%rip)        # 46200 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE>
   1eb66:	4c 89 3d ab 76 02 00 	mov    %r15,0x276ab(%rip)        # 46218 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x18>
   1eb6d:	66 0f 6f 05 4b 77 01 	movdqa 0x1774b(%rip),%xmm0        # 362c0 <_fini+0x99c>
   1eb74:	00 
   1eb75:	f3 0f 7f 05 a3 76 02 	movdqu %xmm0,0x276a3(%rip)        # 46220 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x20>
   1eb7c:	00 
   1eb7d:	4c 89 f7             	mov    %r14,%rdi
   1eb80:	e8 cb 64 fe ff       	callq  5050 <_Unwind_Resume@plt>
   1eb85:	0f 0b                	ud2    
   1eb87:	49 89 c6             	mov    %rax,%r14
   1eb8a:	eb a9                	jmp    1eb35 <std::backtrace_rs::symbolize::gimli::resolve+0x2225>
   1eb8c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001eb90 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new>:
   1eb90:	55                   	push   %rbp
   1eb91:	41 57                	push   %r15
   1eb93:	41 56                	push   %r14
   1eb95:	41 55                	push   %r13
   1eb97:	41 54                	push   %r12
   1eb99:	53                   	push   %rbx
   1eb9a:	b8 c8 11 00 00       	mov    $0x11c8,%eax
   1eb9f:	e8 f6 68 01 00       	callq  3549a <__rust_probestack>
   1eba4:	48 29 c4             	sub    %rax,%rsp
   1eba7:	48 89 d1             	mov    %rdx,%rcx
   1ebaa:	48 89 f2             	mov    %rsi,%rdx
   1ebad:	49 89 fe             	mov    %rdi,%r14
   1ebb0:	48 b8 00 00 00 00 b6 	movabs $0x1b600000000,%rax
   1ebb7:	01 00 00 
   1ebba:	48 89 84 24 a0 0a 00 	mov    %rax,0xaa0(%rsp)
   1ebc1:	00 
   1ebc2:	48 c7 84 24 a8 0a 00 	movq   $0x1,0xaa8(%rsp)
   1ebc9:	00 01 00 00 00 
   1ebce:	48 8d bc 24 f0 03 00 	lea    0x3f0(%rsp),%rdi
   1ebd5:	00 
   1ebd6:	48 8d b4 24 a0 0a 00 	lea    0xaa0(%rsp),%rsi
   1ebdd:	00 
   1ebde:	ff 15 74 73 02 00    	callq  *0x27374(%rip)        # 45f58 <_GLOBAL_OFFSET_TABLE_+0x5d0>
   1ebe4:	83 bc 24 f0 03 00 00 	cmpl   $0x1,0x3f0(%rsp)
   1ebeb:	01 
   1ebec:	75 54                	jne    1ec42 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xb2>
   1ebee:	80 bc 24 f8 03 00 00 	cmpb   $0x2,0x3f8(%rsp)
   1ebf5:	02 
   1ebf6:	72 3e                	jb     1ec36 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xa6>
   1ebf8:	48 8b 9c 24 00 04 00 	mov    0x400(%rsp),%rbx
   1ebff:	00 
   1ec00:	48 8b 3b             	mov    (%rbx),%rdi
   1ec03:	48 8b 43 08          	mov    0x8(%rbx),%rax
   1ec07:	ff 10                	callq  *(%rax)
   1ec09:	48 8b 43 08          	mov    0x8(%rbx),%rax
   1ec0d:	48 8b 70 08          	mov    0x8(%rax),%rsi
   1ec11:	48 85 f6             	test   %rsi,%rsi
   1ec14:	74 0d                	je     1ec23 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x93>
   1ec16:	48 8b 3b             	mov    (%rbx),%rdi
   1ec19:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1ec1d:	ff 15 d5 6f 02 00    	callq  *0x26fd5(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   1ec23:	be 18 00 00 00       	mov    $0x18,%esi
   1ec28:	ba 08 00 00 00       	mov    $0x8,%edx
   1ec2d:	48 89 df             	mov    %rbx,%rdi
   1ec30:	ff 15 c2 6f 02 00    	callq  *0x26fc2(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   1ec36:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
   1ec3d:	e9 43 4f 00 00       	jmpq   23b85 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4ff5>
   1ec42:	8b ac 24 f4 03 00 00 	mov    0x3f4(%rsp),%ebp
   1ec49:	48 8d 15 5b 89 01 00 	lea    0x1895b(%rip),%rdx        # 375ab <str.6+0x28b>
   1ec50:	48 8d bc 24 f0 03 00 	lea    0x3f0(%rsp),%rdi
   1ec57:	00 
   1ec58:	89 ee                	mov    %ebp,%esi
   1ec5a:	b9 00 10 00 00       	mov    $0x1000,%ecx
   1ec5f:	e8 2c d7 ff ff       	callq  1c390 <std::sys::unix::fs::try_statx>
   1ec64:	48 8b 84 24 f0 03 00 	mov    0x3f0(%rsp),%rax
   1ec6b:	00 
   1ec6c:	48 83 f8 02          	cmp    $0x2,%rax
   1ec70:	75 78                	jne    1ecea <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x15a>
   1ec72:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1ec76:	66 0f 7f 84 24 70 04 	movdqa %xmm0,0x470(%rsp)
   1ec7d:	00 00 
   1ec7f:	66 0f 7f 84 24 60 04 	movdqa %xmm0,0x460(%rsp)
   1ec86:	00 00 
   1ec88:	66 0f 7f 84 24 50 04 	movdqa %xmm0,0x450(%rsp)
   1ec8f:	00 00 
   1ec91:	66 0f 7f 84 24 40 04 	movdqa %xmm0,0x440(%rsp)
   1ec98:	00 00 
   1ec9a:	66 0f 7f 84 24 30 04 	movdqa %xmm0,0x430(%rsp)
   1eca1:	00 00 
   1eca3:	66 0f 7f 84 24 20 04 	movdqa %xmm0,0x420(%rsp)
   1ecaa:	00 00 
   1ecac:	66 0f 7f 84 24 10 04 	movdqa %xmm0,0x410(%rsp)
   1ecb3:	00 00 
   1ecb5:	66 0f 7f 84 24 00 04 	movdqa %xmm0,0x400(%rsp)
   1ecbc:	00 00 
   1ecbe:	66 0f 7f 84 24 f0 03 	movdqa %xmm0,0x3f0(%rsp)
   1ecc5:	00 00 
   1ecc7:	48 8d b4 24 f0 03 00 	lea    0x3f0(%rsp),%rsi
   1ecce:	00 
   1eccf:	89 ef                	mov    %ebp,%edi
   1ecd1:	ff 15 a1 6e 02 00    	callq  *0x26ea1(%rip)        # 45b78 <_GLOBAL_OFFSET_TABLE_+0x1f0>
   1ecd7:	83 f8 ff             	cmp    $0xffffffff,%eax
   1ecda:	0f 84 fa 01 00 00    	je     1eeda <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x34a>
   1ece0:	48 8b 9c 24 20 04 00 	mov    0x420(%rsp),%rbx
   1ece7:	00 
   1ece8:	eb 6f                	jmp    1ed59 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1c9>
   1ecea:	83 f8 01             	cmp    $0x1,%eax
   1eced:	75 53                	jne    1ed42 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1b2>
   1ecef:	48 8b 84 24 f8 03 00 	mov    0x3f8(%rsp),%rax
   1ecf6:	00 
   1ecf7:	3c 02                	cmp    $0x2,%al
   1ecf9:	0f 82 e1 01 00 00    	jb     1eee0 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x350>
   1ecff:	48 8b 9c 24 00 04 00 	mov    0x400(%rsp),%rbx
   1ed06:	00 
   1ed07:	48 8b 3b             	mov    (%rbx),%rdi
   1ed0a:	48 8b 43 08          	mov    0x8(%rbx),%rax
   1ed0e:	ff 10                	callq  *(%rax)
   1ed10:	48 8b 43 08          	mov    0x8(%rbx),%rax
   1ed14:	48 8b 70 08          	mov    0x8(%rax),%rsi
   1ed18:	48 85 f6             	test   %rsi,%rsi
   1ed1b:	74 0d                	je     1ed2a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x19a>
   1ed1d:	48 8b 3b             	mov    (%rbx),%rdi
   1ed20:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1ed24:	ff 15 ce 6e 02 00    	callq  *0x26ece(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   1ed2a:	be 18 00 00 00       	mov    $0x18,%esi
   1ed2f:	ba 08 00 00 00       	mov    $0x8,%edx
   1ed34:	48 89 df             	mov    %rbx,%rdi
   1ed37:	ff 15 bb 6e 02 00    	callq  *0x26ebb(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   1ed3d:	e9 9e 01 00 00       	jmpq   1eee0 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x350>
   1ed42:	48 83 bc 24 88 04 00 	cmpq   $0x2,0x488(%rsp)
   1ed49:	00 02 
   1ed4b:	0f 84 8f 01 00 00    	je     1eee0 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x350>
   1ed51:	48 8b 9c 24 28 04 00 	mov    0x428(%rsp),%rbx
   1ed58:	00 
   1ed59:	31 ff                	xor    %edi,%edi
   1ed5b:	48 89 de             	mov    %rbx,%rsi
   1ed5e:	ba 01 00 00 00       	mov    $0x1,%edx
   1ed63:	b9 02 00 00 00       	mov    $0x2,%ecx
   1ed68:	41 89 e8             	mov    %ebp,%r8d
   1ed6b:	45 31 c9             	xor    %r9d,%r9d
   1ed6e:	ff 15 ec 6d 02 00    	callq  *0x26dec(%rip)        # 45b60 <mmap@GLIBC_2.2.5>
   1ed74:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1ed78:	0f 84 62 01 00 00    	je     1eee0 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x350>
   1ed7e:	4c 89 b4 24 50 03 00 	mov    %r14,0x350(%rsp)
   1ed85:	00 
   1ed86:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   1ed8b:	89 ef                	mov    %ebp,%edi
   1ed8d:	ff 15 a5 6e 02 00    	callq  *0x26ea5(%rip)        # 45c38 <close@GLIBC_2.2.5>
   1ed93:	48 c7 84 24 d0 01 00 	movq   $0x8,0x1d0(%rsp)
   1ed9a:	00 08 00 00 00 
   1ed9f:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1eda3:	f3 0f 7f 84 24 d8 01 	movdqu %xmm0,0x1d8(%rsp)
   1edaa:	00 00 
   1edac:	48 89 5c 24 50       	mov    %rbx,0x50(%rsp)
   1edb1:	48 83 fb 40          	cmp    $0x40,%rbx
   1edb5:	0f 82 df 49 00 00    	jb     2379a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1edbb:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   1edc0:	83 e0 07             	and    $0x7,%eax
   1edc3:	48 85 c0             	test   %rax,%rax
   1edc6:	0f 85 ce 49 00 00    	jne    2379a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1edcc:	48 8d 05 91 89 01 00 	lea    0x18991(%rip),%rax        # 37764 <str.6+0x444>
   1edd3:	48 39 44 24 58       	cmp    %rax,0x58(%rsp)
   1edd8:	74 11                	je     1edeb <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x25b>
   1edda:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   1eddf:	81 38 7f 45 4c 46    	cmpl   $0x464c457f,(%rax)
   1ede5:	0f 85 af 49 00 00    	jne    2379a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1edeb:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   1edf0:	80 78 04 02          	cmpb   $0x2,0x4(%rax)
   1edf4:	0f 85 a0 49 00 00    	jne    2379a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1edfa:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   1edff:	8a 40 05             	mov    0x5(%rax),%al
   1ee02:	8d 48 ff             	lea    -0x1(%rax),%ecx
   1ee05:	80 f9 02             	cmp    $0x2,%cl
   1ee08:	0f 83 8c 49 00 00    	jae    2379a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1ee0e:	3c 02                	cmp    $0x2,%al
   1ee10:	0f 84 84 49 00 00    	je     2379a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1ee16:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   1ee1b:	80 78 06 01          	cmpb   $0x1,0x6(%rax)
   1ee1f:	0f 85 75 49 00 00    	jne    2379a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1ee25:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
   1ee2a:	4c 8b 69 28          	mov    0x28(%rcx),%r13
   1ee2e:	4d 85 ed             	test   %r13,%r13
   1ee31:	0f 84 02 01 00 00    	je     1ef39 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3a9>
   1ee37:	0f b7 41 3a          	movzwl 0x3a(%rcx),%eax
   1ee3b:	44 0f b7 61 3c       	movzwl 0x3c(%rcx),%r12d
   1ee40:	66 45 85 e4          	test   %r12w,%r12w
   1ee44:	0f 84 aa 00 00 00    	je     1eef4 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x364>
   1ee4a:	66 83 f8 40          	cmp    $0x40,%ax
   1ee4e:	0f 85 46 49 00 00    	jne    2379a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1ee54:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   1ee59:	4c 29 e9             	sub    %r13,%rcx
   1ee5c:	0f 82 38 49 00 00    	jb     2379a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1ee62:	4c 03 6c 24 58       	add    0x58(%rsp),%r13
   1ee67:	41 f6 c5 07          	test   $0x7,%r13b
   1ee6b:	0f 85 29 49 00 00    	jne    2379a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1ee71:	ba 40 00 00 00       	mov    $0x40,%edx
   1ee76:	4c 89 e0             	mov    %r12,%rax
   1ee79:	48 f7 e2             	mul    %rdx
   1ee7c:	0f 80 18 49 00 00    	jo     2379a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1ee82:	48 39 c1             	cmp    %rax,%rcx
   1ee85:	0f 82 0f 49 00 00    	jb     2379a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1ee8b:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   1ee90:	0f b7 40 3e          	movzwl 0x3e(%rax),%eax
   1ee94:	3d ff ff 00 00       	cmp    $0xffff,%eax
   1ee99:	75 0e                	jne    1eea9 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x319>
   1ee9b:	48 83 f9 40          	cmp    $0x40,%rcx
   1ee9f:	0f 82 f5 48 00 00    	jb     2379a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1eea5:	41 8b 45 28          	mov    0x28(%r13),%eax
   1eea9:	85 c0                	test   %eax,%eax
   1eeab:	0f 84 e9 48 00 00    	je     2379a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1eeb1:	89 c0                	mov    %eax,%eax
   1eeb3:	49 39 c4             	cmp    %rax,%r12
   1eeb6:	0f 86 de 48 00 00    	jbe    2379a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1eebc:	48 c1 e0 06          	shl    $0x6,%rax
   1eec0:	41 83 7c 05 04 08    	cmpl   $0x8,0x4(%r13,%rax,1)
   1eec6:	0f 85 98 48 00 00    	jne    23764 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4bd4>
   1eecc:	48 8d 3d 85 83 01 00 	lea    0x18385(%rip),%rdi        # 37258 <_fini+0x1934>
   1eed3:	31 f6                	xor    %esi,%esi
   1eed5:	e9 a8 48 00 00       	jmpq   23782 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4bf2>
   1eeda:	ff 15 38 6b 02 00    	callq  *0x26b38(%rip)        # 45a18 <__errno_location@GLIBC_2.2.5>
   1eee0:	89 ef                	mov    %ebp,%edi
   1eee2:	ff 15 50 6d 02 00    	callq  *0x26d50(%rip)        # 45c38 <close@GLIBC_2.2.5>
   1eee8:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
   1eeef:	e9 91 4c 00 00       	jmpq   23b85 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4ff5>
   1eef4:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   1eef9:	4c 29 e9             	sub    %r13,%rcx
   1eefc:	0f 82 98 48 00 00    	jb     2379a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1ef02:	66 83 f8 40          	cmp    $0x40,%ax
   1ef06:	0f 85 8e 48 00 00    	jne    2379a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1ef0c:	48 83 f9 40          	cmp    $0x40,%rcx
   1ef10:	0f 82 84 48 00 00    	jb     2379a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1ef16:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   1ef1b:	4c 01 e8             	add    %r13,%rax
   1ef1e:	89 c1                	mov    %eax,%ecx
   1ef20:	83 e1 07             	and    $0x7,%ecx
   1ef23:	48 85 c9             	test   %rcx,%rcx
   1ef26:	0f 85 6e 48 00 00    	jne    2379a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1ef2c:	4c 8b 60 20          	mov    0x20(%rax),%r12
   1ef30:	4d 85 e4             	test   %r12,%r12
   1ef33:	0f 85 1b ff ff ff    	jne    1ee54 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2c4>
   1ef39:	4c 8d 2d 18 83 01 00 	lea    0x18318(%rip),%r13        # 37258 <_fini+0x1934>
   1ef40:	45 31 e4             	xor    %r12d,%r12d
   1ef43:	4c 89 ac 24 80 00 00 	mov    %r13,0x80(%rsp)
   1ef4a:	00 
   1ef4b:	31 c0                	xor    %eax,%eax
   1ef4d:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1ef52:	4d 89 e6             	mov    %r12,%r14
   1ef55:	49 c1 e6 06          	shl    $0x6,%r14
   1ef59:	48 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%rbp
   1ef60:	31 c9                	xor    %ecx,%ecx
   1ef62:	4c 89 e8             	mov    %r13,%rax
   1ef65:	49 39 ce             	cmp    %rcx,%r14
   1ef68:	0f 84 1f 01 00 00    	je     1f08d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4fd>
   1ef6e:	48 83 c5 01          	add    $0x1,%rbp
   1ef72:	48 83 c1 40          	add    $0x40,%rcx
   1ef76:	83 78 04 02          	cmpl   $0x2,0x4(%rax)
   1ef7a:	48 8d 40 40          	lea    0x40(%rax),%rax
   1ef7e:	75 e5                	jne    1ef65 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3d5>
   1ef80:	4d 8b 7c 0d d8       	mov    -0x28(%r13,%rcx,1),%r15
   1ef85:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   1ef8a:	4c 29 f8             	sub    %r15,%rax
   1ef8d:	0f 82 07 48 00 00    	jb     2379a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1ef93:	49 8b 5c 0d e0       	mov    -0x20(%r13,%rcx,1),%rbx
   1ef98:	48 39 d8             	cmp    %rbx,%rax
   1ef9b:	0f 82 f9 47 00 00    	jb     2379a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1efa1:	48 ba ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rdx
   1efa8:	aa aa aa 
   1efab:	48 89 d8             	mov    %rbx,%rax
   1efae:	48 f7 e2             	mul    %rdx
   1efb1:	48 c1 ea 04          	shr    $0x4,%rdx
   1efb5:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   1efba:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
   1efc1:	00 
   1efc2:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
   1efc6:	48 39 c3             	cmp    %rax,%rbx
   1efc9:	0f 82 cb 47 00 00    	jb     2379a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1efcf:	4c 03 7c 24 58       	add    0x58(%rsp),%r15
   1efd4:	44 89 f8             	mov    %r15d,%eax
   1efd7:	83 e0 07             	and    $0x7,%eax
   1efda:	48 85 c0             	test   %rax,%rax
   1efdd:	0f 85 b7 47 00 00    	jne    2379a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1efe3:	41 8b 44 0d e8       	mov    -0x18(%r13,%rcx,1),%eax
   1efe8:	49 39 c4             	cmp    %rax,%r12
   1efeb:	0f 86 a9 47 00 00    	jbe    2379a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1eff1:	48 c1 e0 06          	shl    $0x6,%rax
   1eff5:	41 83 7c 05 04 08    	cmpl   $0x8,0x4(%r13,%rax,1)
   1effb:	75 0b                	jne    1f008 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x478>
   1effd:	48 8d 3d 54 82 01 00 	lea    0x18254(%rip),%rdi        # 37258 <_fini+0x1934>
   1f004:	31 f6                	xor    %esi,%esi
   1f006:	eb 26                	jmp    1f02e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x49e>
   1f008:	49 8b 7c 05 18       	mov    0x18(%r13,%rax,1),%rdi
   1f00d:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   1f012:	48 29 f9             	sub    %rdi,%rcx
   1f015:	0f 82 7f 47 00 00    	jb     2379a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1f01b:	49 8b 74 05 20       	mov    0x20(%r13,%rax,1),%rsi
   1f020:	48 39 f1             	cmp    %rsi,%rcx
   1f023:	0f 82 71 47 00 00    	jb     2379a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1f029:	48 03 7c 24 58       	add    0x58(%rsp),%rdi
   1f02e:	ff 15 5c 6a 02 00    	callq  *0x26a5c(%rip)        # 45a90 <_GLOBAL_OFFSET_TABLE_+0x108>
   1f034:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1f039:	31 c0                	xor    %eax,%eax
   1f03b:	eb 09                	jmp    1f046 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4b6>
   1f03d:	48 83 c0 40          	add    $0x40,%rax
   1f041:	49 39 c6             	cmp    %rax,%r14
   1f044:	74 3d                	je     1f083 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4f3>
   1f046:	41 83 7c 05 04 12    	cmpl   $0x12,0x4(%r13,%rax,1)
   1f04c:	75 ef                	jne    1f03d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4ad>
   1f04e:	41 8b 4c 05 28       	mov    0x28(%r13,%rax,1),%ecx
   1f053:	48 39 e9             	cmp    %rbp,%rcx
   1f056:	75 e5                	jne    1f03d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4ad>
   1f058:	49 8b 4c 05 18       	mov    0x18(%r13,%rax,1),%rcx
   1f05d:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   1f062:	48 29 ce             	sub    %rcx,%rsi
   1f065:	0f 82 2f 47 00 00    	jb     2379a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1f06b:	49 3b 74 05 20       	cmp    0x20(%r13,%rax,1),%rsi
   1f070:	0f 82 24 47 00 00    	jb     2379a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1f076:	03 4c 24 58          	add    0x58(%rsp),%ecx
   1f07a:	f6 c1 03             	test   $0x3,%cl
   1f07d:	0f 85 17 47 00 00    	jne    2379a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1f083:	48 83 fb 17          	cmp    $0x17,%rbx
   1f087:	0f 87 42 3e 00 00    	ja     22ecf <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x433f>
   1f08d:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
   1f094:	31 d2                	xor    %edx,%edx
   1f096:	4c 8d 3d bb 81 01 00 	lea    0x181bb(%rip),%r15        # 37258 <_fini+0x1934>
   1f09d:	31 f6                	xor    %esi,%esi
   1f09f:	4c 89 e8             	mov    %r13,%rax
   1f0a2:	49 39 f6             	cmp    %rsi,%r14
   1f0a5:	0f 84 a1 00 00 00    	je     1f14c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5bc>
   1f0ab:	48 83 c3 01          	add    $0x1,%rbx
   1f0af:	48 83 c6 40          	add    $0x40,%rsi
   1f0b3:	83 78 04 0b          	cmpl   $0xb,0x4(%rax)
   1f0b7:	48 8d 40 40          	lea    0x40(%rax),%rax
   1f0bb:	75 e5                	jne    1f0a2 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x512>
   1f0bd:	4d 8b 7c 35 d8       	mov    -0x28(%r13,%rsi,1),%r15
   1f0c2:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   1f0c7:	4c 29 f8             	sub    %r15,%rax
   1f0ca:	0f 82 ca 46 00 00    	jb     2379a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1f0d0:	49 8b 4c 35 e0       	mov    -0x20(%r13,%rsi,1),%rcx
   1f0d5:	48 39 c8             	cmp    %rcx,%rax
   1f0d8:	0f 82 bc 46 00 00    	jb     2379a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1f0de:	48 ba ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rdx
   1f0e5:	aa aa aa 
   1f0e8:	48 89 c8             	mov    %rcx,%rax
   1f0eb:	48 f7 e2             	mul    %rdx
   1f0ee:	48 c1 ea 04          	shr    $0x4,%rdx
   1f0f2:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   1f0f7:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
   1f0fe:	00 
   1f0ff:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
   1f103:	48 39 c1             	cmp    %rax,%rcx
   1f106:	0f 82 8e 46 00 00    	jb     2379a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1f10c:	4c 03 7c 24 58       	add    0x58(%rsp),%r15
   1f111:	44 89 f8             	mov    %r15d,%eax
   1f114:	83 e0 07             	and    $0x7,%eax
   1f117:	48 85 c0             	test   %rax,%rax
   1f11a:	0f 85 7a 46 00 00    	jne    2379a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1f120:	41 8b 44 35 e8       	mov    -0x18(%r13,%rsi,1),%eax
   1f125:	49 39 c4             	cmp    %rax,%r12
   1f128:	0f 86 6c 46 00 00    	jbe    2379a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1f12e:	48 c1 e0 06          	shl    $0x6,%rax
   1f132:	41 83 7c 05 04 08    	cmpl   $0x8,0x4(%r13,%rax,1)
   1f138:	0f 85 16 3d 00 00    	jne    22e54 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x42c4>
   1f13e:	48 8d 3d 13 81 01 00 	lea    0x18113(%rip),%rdi        # 37258 <_fini+0x1934>
   1f145:	31 f6                	xor    %esi,%esi
   1f147:	e9 2e 3d 00 00       	jmpq   22e7a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x42ea>
   1f14c:	31 ed                	xor    %ebp,%ebp
   1f14e:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
   1f153:	48 8d 04 ed 00 00 00 	lea    0x0(,%rbp,8),%rax
   1f15a:	00 
   1f15b:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
   1f15f:	4c 89 fb             	mov    %r15,%rbx
   1f162:	48 85 c0             	test   %rax,%rax
   1f165:	0f 84 e8 01 00 00    	je     1f353 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x7c3>
   1f16b:	48 89 d9             	mov    %rbx,%rcx
   1f16e:	48 83 c3 18          	add    $0x18,%rbx
   1f172:	48 83 c0 e8          	add    $0xffffffffffffffe8,%rax
   1f176:	66 83 79 06 00       	cmpw   $0x0,0x6(%rcx)
   1f17b:	74 e5                	je     1f162 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5d2>
   1f17d:	0f b6 49 04          	movzbl 0x4(%rcx),%ecx
   1f181:	80 e1 0f             	and    $0xf,%cl
   1f184:	80 c1 ff             	add    $0xff,%cl
   1f187:	80 f9 01             	cmp    $0x1,%cl
   1f18a:	77 d6                	ja     1f162 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5d2>
   1f18c:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   1f191:	44 8b 73 e8          	mov    -0x18(%rbx),%r14d
   1f195:	0f 10 43 f0          	movups -0x10(%rbx),%xmm0
   1f199:	0f 29 84 24 a0 01 00 	movaps %xmm0,0x1a0(%rsp)
   1f1a0:	00 
   1f1a1:	bf 18 00 00 00       	mov    $0x18,%edi
   1f1a6:	be 08 00 00 00       	mov    $0x8,%esi
   1f1ab:	ff 15 cf 69 02 00    	callq  *0x269cf(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   1f1b1:	48 85 c0             	test   %rax,%rax
   1f1b4:	0f 84 99 4a 00 00    	je     23c53 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50c3>
   1f1ba:	66 0f 6f 84 24 a0 01 	movdqa 0x1a0(%rsp),%xmm0
   1f1c1:	00 00 
   1f1c3:	f3 0f 7f 00          	movdqu %xmm0,(%rax)
   1f1c7:	44 89 70 10          	mov    %r14d,0x10(%rax)
   1f1cb:	48 89 84 24 f0 03 00 	mov    %rax,0x3f0(%rsp)
   1f1d2:	00 
   1f1d3:	48 c7 84 24 f8 03 00 	movq   $0x1,0x3f8(%rsp)
   1f1da:	00 01 00 00 00 
   1f1df:	48 8d 44 6d 00       	lea    0x0(%rbp,%rbp,2),%rax
   1f1e4:	49 8d 2c c7          	lea    (%r15,%rax,8),%rbp
   1f1e8:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   1f1ee:	bf 04 00 00 00       	mov    $0x4,%edi
   1f1f3:	4c 8d 05 36 62 fe ff 	lea    -0x19dca(%rip),%r8        # 5430 <__rust_alloc>
   1f1fa:	4c 89 bc 24 00 04 00 	mov    %r15,0x400(%rsp)
   1f201:	00 
   1f202:	48 39 dd             	cmp    %rbx,%rbp
   1f205:	0f 84 6a 01 00 00    	je     1f375 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x7e5>
   1f20b:	48 89 d8             	mov    %rbx,%rax
   1f20e:	48 83 c3 18          	add    $0x18,%rbx
   1f212:	66 83 78 06 00       	cmpw   $0x0,0x6(%rax)
   1f217:	74 e9                	je     1f202 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x672>
   1f219:	0f b6 40 04          	movzbl 0x4(%rax),%eax
   1f21d:	24 0f                	and    $0xf,%al
   1f21f:	04 ff                	add    $0xff,%al
   1f221:	3c 01                	cmp    $0x1,%al
   1f223:	77 dd                	ja     1f202 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x672>
   1f225:	8b 73 e8             	mov    -0x18(%rbx),%esi
   1f228:	f3 0f 6f 43 f0       	movdqu -0x10(%rbx),%xmm0
   1f22d:	4c 39 bc 24 f8 03 00 	cmp    %r15,0x3f8(%rsp)
   1f234:	00 
   1f235:	0f 85 83 00 00 00    	jne    1f2be <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x72e>
   1f23b:	4c 89 f8             	mov    %r15,%rax
   1f23e:	48 ff c0             	inc    %rax
   1f241:	0f 84 b2 49 00 00    	je     23bf9 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5069>
   1f247:	4b 8d 0c 3f          	lea    (%r15,%r15,1),%rcx
   1f24b:	48 39 c1             	cmp    %rax,%rcx
   1f24e:	48 0f 47 c1          	cmova  %rcx,%rax
   1f252:	48 83 f8 04          	cmp    $0x4,%rax
   1f256:	48 0f 46 c7          	cmovbe %rdi,%rax
   1f25a:	31 c9                	xor    %ecx,%ecx
   1f25c:	ba 18 00 00 00       	mov    $0x18,%edx
   1f261:	48 f7 e2             	mul    %rdx
   1f264:	49 89 c6             	mov    %rax,%r14
   1f267:	0f 90 c0             	seto   %al
   1f26a:	0f 91 c1             	setno  %cl
   1f26d:	48 c1 e1 03          	shl    $0x3,%rcx
   1f271:	4d 85 ff             	test   %r15,%r15
   1f274:	89 b4 24 a0 01 00 00 	mov    %esi,0x1a0(%rsp)
   1f27b:	66 0f 7f 84 24 e0 00 	movdqa %xmm0,0xe0(%rsp)
   1f282:	00 00 
   1f284:	74 42                	je     1f2c8 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x738>
   1f286:	84 c0                	test   %al,%al
   1f288:	0f 85 6b 49 00 00    	jne    23bf9 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5069>
   1f28e:	48 8b bc 24 f0 03 00 	mov    0x3f0(%rsp),%rdi
   1f295:	00 
   1f296:	48 85 ff             	test   %rdi,%rdi
   1f299:	74 35                	je     1f2d0 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x740>
   1f29b:	4a 8d 04 fd 00 00 00 	lea    0x0(,%r15,8),%rax
   1f2a2:	00 
   1f2a3:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
   1f2a7:	48 85 f6             	test   %rsi,%rsi
   1f2aa:	0f 84 90 00 00 00    	je     1f340 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x7b0>
   1f2b0:	48 89 ca             	mov    %rcx,%rdx
   1f2b3:	4c 89 f1             	mov    %r14,%rcx
   1f2b6:	ff 15 bc 6c 02 00    	callq  *0x26cbc(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
   1f2bc:	eb 20                	jmp    1f2de <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x74e>
   1f2be:	48 8b 8c 24 f0 03 00 	mov    0x3f0(%rsp),%rcx
   1f2c5:	00 
   1f2c6:	eb 62                	jmp    1f32a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x79a>
   1f2c8:	84 c0                	test   %al,%al
   1f2ca:	0f 85 29 49 00 00    	jne    23bf9 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5069>
   1f2d0:	4d 85 f6             	test   %r14,%r14
   1f2d3:	74 0c                	je     1f2e1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x751>
   1f2d5:	4c 89 f7             	mov    %r14,%rdi
   1f2d8:	48 89 ce             	mov    %rcx,%rsi
   1f2db:	41 ff d0             	callq  *%r8
   1f2de:	48 89 c1             	mov    %rax,%rcx
   1f2e1:	48 85 c9             	test   %rcx,%rcx
   1f2e4:	bf 04 00 00 00       	mov    $0x4,%edi
   1f2e9:	4c 8d 05 40 61 fe ff 	lea    -0x19ec0(%rip),%r8        # 5430 <__rust_alloc>
   1f2f0:	48 ba ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rdx
   1f2f7:	aa aa aa 
   1f2fa:	8b b4 24 a0 01 00 00 	mov    0x1a0(%rsp),%esi
   1f301:	66 0f 6f 84 24 e0 00 	movdqa 0xe0(%rsp),%xmm0
   1f308:	00 00 
   1f30a:	0f 84 f1 48 00 00    	je     23c01 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5071>
   1f310:	48 89 8c 24 f0 03 00 	mov    %rcx,0x3f0(%rsp)
   1f317:	00 
   1f318:	4c 89 f0             	mov    %r14,%rax
   1f31b:	48 f7 e2             	mul    %rdx
   1f31e:	48 c1 ea 04          	shr    $0x4,%rdx
   1f322:	48 89 94 24 f8 03 00 	mov    %rdx,0x3f8(%rsp)
   1f329:	00 
   1f32a:	4b 8d 04 7f          	lea    (%r15,%r15,2),%rax
   1f32e:	f3 0f 7f 04 c1       	movdqu %xmm0,(%rcx,%rax,8)
   1f333:	89 74 c1 10          	mov    %esi,0x10(%rcx,%rax,8)
   1f337:	49 83 c7 01          	add    $0x1,%r15
   1f33b:	e9 ba fe ff ff       	jmpq   1f1fa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x66a>
   1f340:	4d 85 f6             	test   %r14,%r14
   1f343:	74 9c                	je     1f2e1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x751>
   1f345:	4c 89 f7             	mov    %r14,%rdi
   1f348:	48 89 ce             	mov    %rcx,%rsi
   1f34b:	ff 15 2f 68 02 00    	callq  *0x2682f(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   1f351:	eb 8b                	jmp    1f2de <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x74e>
   1f353:	48 c7 84 24 a0 0a 00 	movq   $0x8,0xaa0(%rsp)
   1f35a:	00 08 00 00 00 
   1f35f:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1f363:	f3 0f 7f 84 24 a8 0a 	movdqu %xmm0,0xaa8(%rsp)
   1f36a:	00 00 
   1f36c:	bf 08 00 00 00       	mov    $0x8,%edi
   1f371:	31 f6                	xor    %esi,%esi
   1f373:	eb 2f                	jmp    1f3a4 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x814>
   1f375:	48 8b b4 24 00 04 00 	mov    0x400(%rsp),%rsi
   1f37c:	00 
   1f37d:	48 89 b4 24 b0 0a 00 	mov    %rsi,0xab0(%rsp)
   1f384:	00 
   1f385:	f3 0f 6f 84 24 f0 03 	movdqu 0x3f0(%rsp),%xmm0
   1f38c:	00 00 
   1f38e:	66 0f 7f 84 24 a0 0a 	movdqa %xmm0,0xaa0(%rsp)
   1f395:	00 00 
   1f397:	48 8b bc 24 a0 0a 00 	mov    0xaa0(%rsp),%rdi
   1f39e:	00 
   1f39f:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   1f3a4:	48 8d 84 24 f0 06 00 	lea    0x6f0(%rsp),%rax
   1f3ab:	00 
   1f3ac:	48 89 84 24 f0 03 00 	mov    %rax,0x3f0(%rsp)
   1f3b3:	00 
   1f3b4:	48 89 d3             	mov    %rdx,%rbx
   1f3b7:	48 85 f6             	test   %rsi,%rsi
   1f3ba:	74 0a                	je     1f3c6 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x836>
   1f3bc:	48 0f bd c6          	bsr    %rsi,%rax
   1f3c0:	48 83 f0 3f          	xor    $0x3f,%rax
   1f3c4:	eb 05                	jmp    1f3cb <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x83b>
   1f3c6:	b8 40 00 00 00       	mov    $0x40,%eax
   1f3cb:	41 b8 40 00 00 00    	mov    $0x40,%r8d
   1f3d1:	41 29 c0             	sub    %eax,%r8d
   1f3d4:	48 8d 94 24 f0 03 00 	lea    0x3f0(%rsp),%rdx
   1f3db:	00 
   1f3dc:	31 c9                	xor    %ecx,%ecx
   1f3de:	e8 5d 8a fe ff       	callq  7e40 <core::slice::sort::recurse>
   1f3e3:	66 0f 6f 84 24 a0 0a 	movdqa 0xaa0(%rsp),%xmm0
   1f3ea:	00 00 
   1f3ec:	66 0f 7f 84 24 90 0c 	movdqa %xmm0,0xc90(%rsp)
   1f3f3:	00 00 
   1f3f5:	48 8b 84 24 b0 0a 00 	mov    0xab0(%rsp),%rax
   1f3fc:	00 
   1f3fd:	48 89 84 24 a0 0c 00 	mov    %rax,0xca0(%rsp)
   1f404:	00 
   1f405:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
   1f40c:	00 
   1f40d:	66 0f 7f 84 24 c0 00 	movdqa %xmm0,0xc0(%rsp)
   1f414:	00 00 
   1f416:	48 83 7c 24 58 00    	cmpq   $0x0,0x58(%rsp)
   1f41c:	0f 84 9a 43 00 00    	je     237bc <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c2c>
   1f422:	48 8b 84 24 d0 00 00 	mov    0xd0(%rsp),%rax
   1f429:	00 
   1f42a:	48 89 84 24 60 0c 00 	mov    %rax,0xc60(%rsp)
   1f431:	00 
   1f432:	66 0f 6f 84 24 c0 00 	movdqa 0xc0(%rsp),%xmm0
   1f439:	00 00 
   1f43b:	66 0f 7f 84 24 50 0c 	movdqa %xmm0,0xc50(%rsp)
   1f442:	00 00 
   1f444:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
   1f449:	48 89 8c 24 f8 05 00 	mov    %rcx,0x5f8(%rsp)
   1f450:	00 
   1f451:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   1f456:	48 89 8c 24 00 06 00 	mov    %rcx,0x600(%rsp)
   1f45d:	00 
   1f45e:	4c 89 ac 24 08 06 00 	mov    %r13,0x608(%rsp)
   1f465:	00 
   1f466:	4c 89 a4 24 10 06 00 	mov    %r12,0x610(%rsp)
   1f46d:	00 
   1f46e:	48 8b 8c 24 80 00 00 	mov    0x80(%rsp),%rcx
   1f475:	00 
   1f476:	48 89 8c 24 18 06 00 	mov    %rcx,0x618(%rsp)
   1f47d:	00 
   1f47e:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   1f483:	48 89 8c 24 20 06 00 	mov    %rcx,0x620(%rsp)
   1f48a:	00 
   1f48b:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   1f490:	48 89 8c 24 28 06 00 	mov    %rcx,0x628(%rsp)
   1f497:	00 
   1f498:	48 89 9c 24 30 06 00 	mov    %rbx,0x630(%rsp)
   1f49f:	00 
   1f4a0:	f3 0f 7f 84 24 38 06 	movdqu %xmm0,0x638(%rsp)
   1f4a7:	00 00 
   1f4a9:	48 89 84 24 48 06 00 	mov    %rax,0x648(%rsp)
   1f4b0:	00 
   1f4b1:	31 ff                	xor    %edi,%edi
   1f4b3:	ff 15 77 66 02 00    	callq  *0x26677(%rip)        # 45b30 <_GLOBAL_OFFSET_TABLE_+0x1a8>
   1f4b9:	48 89 d1             	mov    %rdx,%rcx
   1f4bc:	48 8d bc 24 f8 05 00 	lea    0x5f8(%rsp),%rdi
   1f4c3:	00 
   1f4c4:	48 8d b4 24 d0 01 00 	lea    0x1d0(%rsp),%rsi
   1f4cb:	00 
   1f4cc:	48 89 c2             	mov    %rax,%rdx
   1f4cf:	e8 1c 4a 00 00       	callq  23ef0 <std::backtrace_rs::symbolize::gimli::elf::Object::section>
   1f4d4:	48 89 94 24 80 00 00 	mov    %rdx,0x80(%rsp)
   1f4db:	00 
   1f4dc:	48 85 c0             	test   %rax,%rax
   1f4df:	48 8d 0d 72 7d 01 00 	lea    0x17d72(%rip),%rcx        # 37258 <_fini+0x1934>
   1f4e6:	48 89 c2             	mov    %rax,%rdx
   1f4e9:	48 0f 44 d1          	cmove  %rcx,%rdx
   1f4ed:	48 89 54 24 78       	mov    %rdx,0x78(%rsp)
   1f4f2:	48 8b 8c 24 80 00 00 	mov    0x80(%rsp),%rcx
   1f4f9:	00 
   1f4fa:	48 0f 44 c8          	cmove  %rax,%rcx
   1f4fe:	48 89 8c 24 80 00 00 	mov    %rcx,0x80(%rsp)
   1f505:	00 
   1f506:	bf 01 00 00 00       	mov    $0x1,%edi
   1f50b:	ff 15 1f 66 02 00    	callq  *0x2661f(%rip)        # 45b30 <_GLOBAL_OFFSET_TABLE_+0x1a8>
   1f511:	48 89 d1             	mov    %rdx,%rcx
   1f514:	48 8d bc 24 f8 05 00 	lea    0x5f8(%rsp),%rdi
   1f51b:	00 
   1f51c:	48 8d b4 24 d0 01 00 	lea    0x1d0(%rsp),%rsi
   1f523:	00 
   1f524:	48 89 c2             	mov    %rax,%rdx
   1f527:	e8 c4 49 00 00       	callq  23ef0 <std::backtrace_rs::symbolize::gimli::elf::Object::section>
   1f52c:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   1f531:	48 85 c0             	test   %rax,%rax
   1f534:	48 89 c2             	mov    %rax,%rdx
   1f537:	48 8d 0d 1a 7d 01 00 	lea    0x17d1a(%rip),%rcx        # 37258 <_fini+0x1934>
   1f53e:	48 0f 44 d1          	cmove  %rcx,%rdx
   1f542:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   1f547:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   1f54c:	48 0f 44 c8          	cmove  %rax,%rcx
   1f550:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   1f555:	bf 06 00 00 00       	mov    $0x6,%edi
   1f55a:	ff 15 d0 65 02 00    	callq  *0x265d0(%rip)        # 45b30 <_GLOBAL_OFFSET_TABLE_+0x1a8>
   1f560:	48 89 d1             	mov    %rdx,%rcx
   1f563:	48 8d bc 24 f8 05 00 	lea    0x5f8(%rsp),%rdi
   1f56a:	00 
   1f56b:	48 8d b4 24 d0 01 00 	lea    0x1d0(%rsp),%rsi
   1f572:	00 
   1f573:	48 89 c2             	mov    %rax,%rdx
   1f576:	e8 75 49 00 00       	callq  23ef0 <std::backtrace_rs::symbolize::gimli::elf::Object::section>
   1f57b:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
   1f580:	48 85 c0             	test   %rax,%rax
   1f583:	48 89 c2             	mov    %rax,%rdx
   1f586:	48 8d 0d cb 7c 01 00 	lea    0x17ccb(%rip),%rcx        # 37258 <_fini+0x1934>
   1f58d:	48 0f 44 d1          	cmove  %rcx,%rdx
   1f591:	48 89 d5             	mov    %rdx,%rbp
   1f594:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   1f599:	48 0f 44 c8          	cmove  %rax,%rcx
   1f59d:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   1f5a2:	bf 07 00 00 00       	mov    $0x7,%edi
   1f5a7:	ff 15 83 65 02 00    	callq  *0x26583(%rip)        # 45b30 <_GLOBAL_OFFSET_TABLE_+0x1a8>
   1f5ad:	48 89 d1             	mov    %rdx,%rcx
   1f5b0:	48 8d bc 24 f8 05 00 	lea    0x5f8(%rsp),%rdi
   1f5b7:	00 
   1f5b8:	48 8d b4 24 d0 01 00 	lea    0x1d0(%rsp),%rsi
   1f5bf:	00 
   1f5c0:	48 89 c2             	mov    %rax,%rdx
   1f5c3:	e8 28 49 00 00       	callq  23ef0 <std::backtrace_rs::symbolize::gimli::elf::Object::section>
   1f5c8:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   1f5cd:	48 85 c0             	test   %rax,%rax
   1f5d0:	48 89 c2             	mov    %rax,%rdx
   1f5d3:	48 8d 0d 7e 7c 01 00 	lea    0x17c7e(%rip),%rcx        # 37258 <_fini+0x1934>
   1f5da:	48 0f 44 d1          	cmove  %rcx,%rdx
   1f5de:	48 89 94 24 a8 00 00 	mov    %rdx,0xa8(%rsp)
   1f5e5:	00 
   1f5e6:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   1f5eb:	48 0f 44 c8          	cmove  %rax,%rcx
   1f5ef:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   1f5f4:	bf 08 00 00 00       	mov    $0x8,%edi
   1f5f9:	ff 15 31 65 02 00    	callq  *0x26531(%rip)        # 45b30 <_GLOBAL_OFFSET_TABLE_+0x1a8>
   1f5ff:	48 89 d1             	mov    %rdx,%rcx
   1f602:	48 8d bc 24 f8 05 00 	lea    0x5f8(%rsp),%rdi
   1f609:	00 
   1f60a:	48 8d b4 24 d0 01 00 	lea    0x1d0(%rsp),%rsi
   1f611:	00 
   1f612:	48 89 c2             	mov    %rax,%rdx
   1f615:	e8 d6 48 00 00       	callq  23ef0 <std::backtrace_rs::symbolize::gimli::elf::Object::section>
   1f61a:	48 89 94 24 a0 01 00 	mov    %rdx,0x1a0(%rsp)
   1f621:	00 
   1f622:	48 85 c0             	test   %rax,%rax
   1f625:	48 89 c2             	mov    %rax,%rdx
   1f628:	48 8d 0d 29 7c 01 00 	lea    0x17c29(%rip),%rcx        # 37258 <_fini+0x1934>
   1f62f:	48 0f 44 d1          	cmove  %rcx,%rdx
   1f633:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
   1f638:	48 8b 8c 24 a0 01 00 	mov    0x1a0(%rsp),%rcx
   1f63f:	00 
   1f640:	48 0f 44 c8          	cmove  %rax,%rcx
   1f644:	48 89 8c 24 a0 01 00 	mov    %rcx,0x1a0(%rsp)
   1f64b:	00 
   1f64c:	bf 0f 00 00 00       	mov    $0xf,%edi
   1f651:	ff 15 d9 64 02 00    	callq  *0x264d9(%rip)        # 45b30 <_GLOBAL_OFFSET_TABLE_+0x1a8>
   1f657:	48 89 d1             	mov    %rdx,%rcx
   1f65a:	48 8d bc 24 f8 05 00 	lea    0x5f8(%rsp),%rdi
   1f661:	00 
   1f662:	48 8d b4 24 d0 01 00 	lea    0x1d0(%rsp),%rsi
   1f669:	00 
   1f66a:	48 89 c2             	mov    %rax,%rdx
   1f66d:	e8 7e 48 00 00       	callq  23ef0 <std::backtrace_rs::symbolize::gimli::elf::Object::section>
   1f672:	48 89 94 24 e0 00 00 	mov    %rdx,0xe0(%rsp)
   1f679:	00 
   1f67a:	48 85 c0             	test   %rax,%rax
   1f67d:	49 89 c7             	mov    %rax,%r15
   1f680:	48 8d 0d d1 7b 01 00 	lea    0x17bd1(%rip),%rcx        # 37258 <_fini+0x1934>
   1f687:	4c 0f 44 f9          	cmove  %rcx,%r15
   1f68b:	48 8b 8c 24 e0 00 00 	mov    0xe0(%rsp),%rcx
   1f692:	00 
   1f693:	48 0f 44 c8          	cmove  %rax,%rcx
   1f697:	48 89 8c 24 e0 00 00 	mov    %rcx,0xe0(%rsp)
   1f69e:	00 
   1f69f:	bf 10 00 00 00       	mov    $0x10,%edi
   1f6a4:	ff 15 86 64 02 00    	callq  *0x26486(%rip)        # 45b30 <_GLOBAL_OFFSET_TABLE_+0x1a8>
   1f6aa:	48 89 d1             	mov    %rdx,%rcx
   1f6ad:	48 8d bc 24 f8 05 00 	lea    0x5f8(%rsp),%rdi
   1f6b4:	00 
   1f6b5:	48 8d b4 24 d0 01 00 	lea    0x1d0(%rsp),%rsi
   1f6bc:	00 
   1f6bd:	48 89 c2             	mov    %rax,%rdx
   1f6c0:	e8 2b 48 00 00       	callq  23ef0 <std::backtrace_rs::symbolize::gimli::elf::Object::section>
   1f6c5:	49 89 d4             	mov    %rdx,%r12
   1f6c8:	48 85 c0             	test   %rax,%rax
   1f6cb:	48 89 c3             	mov    %rax,%rbx
   1f6ce:	48 8d 0d 83 7b 01 00 	lea    0x17b83(%rip),%rcx        # 37258 <_fini+0x1934>
   1f6d5:	48 0f 44 d9          	cmove  %rcx,%rbx
   1f6d9:	4c 0f 44 e0          	cmove  %rax,%r12
   1f6dd:	bf 11 00 00 00       	mov    $0x11,%edi
   1f6e2:	ff 15 48 64 02 00    	callq  *0x26448(%rip)        # 45b30 <_GLOBAL_OFFSET_TABLE_+0x1a8>
   1f6e8:	48 89 d1             	mov    %rdx,%rcx
   1f6eb:	48 8d bc 24 f8 05 00 	lea    0x5f8(%rsp),%rdi
   1f6f2:	00 
   1f6f3:	48 8d b4 24 d0 01 00 	lea    0x1d0(%rsp),%rsi
   1f6fa:	00 
   1f6fb:	48 89 c2             	mov    %rax,%rdx
   1f6fe:	e8 ed 47 00 00       	callq  23ef0 <std::backtrace_rs::symbolize::gimli::elf::Object::section>
   1f703:	49 89 d6             	mov    %rdx,%r14
   1f706:	48 85 c0             	test   %rax,%rax
   1f709:	49 89 c5             	mov    %rax,%r13
   1f70c:	48 8d 0d 45 7b 01 00 	lea    0x17b45(%rip),%rcx        # 37258 <_fini+0x1934>
   1f713:	4c 0f 44 e9          	cmove  %rcx,%r13
   1f717:	4c 0f 44 f0          	cmove  %rax,%r14
   1f71b:	bf 12 00 00 00       	mov    $0x12,%edi
   1f720:	ff 15 0a 64 02 00    	callq  *0x2640a(%rip)        # 45b30 <_GLOBAL_OFFSET_TABLE_+0x1a8>
   1f726:	48 89 d1             	mov    %rdx,%rcx
   1f729:	48 8d bc 24 f8 05 00 	lea    0x5f8(%rsp),%rdi
   1f730:	00 
   1f731:	48 8d b4 24 d0 01 00 	lea    0x1d0(%rsp),%rsi
   1f738:	00 
   1f739:	48 89 c2             	mov    %rax,%rdx
   1f73c:	e8 af 47 00 00       	callq  23ef0 <std::backtrace_rs::symbolize::gimli::elf::Object::section>
   1f741:	48 8b 4c 24 78       	mov    0x78(%rsp),%rcx
   1f746:	48 89 8c 24 f0 06 00 	mov    %rcx,0x6f0(%rsp)
   1f74d:	00 
   1f74e:	48 8b 8c 24 80 00 00 	mov    0x80(%rsp),%rcx
   1f755:	00 
   1f756:	48 89 8c 24 f8 06 00 	mov    %rcx,0x6f8(%rsp)
   1f75d:	00 
   1f75e:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   1f763:	48 89 8c 24 00 07 00 	mov    %rcx,0x700(%rsp)
   1f76a:	00 
   1f76b:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   1f770:	48 89 8c 24 08 07 00 	mov    %rcx,0x708(%rsp)
   1f777:	00 
   1f778:	48 89 ac 24 10 07 00 	mov    %rbp,0x710(%rsp)
   1f77f:	00 
   1f780:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
   1f785:	48 89 b4 24 18 07 00 	mov    %rsi,0x718(%rsp)
   1f78c:	00 
   1f78d:	48 8b 8c 24 a8 00 00 	mov    0xa8(%rsp),%rcx
   1f794:	00 
   1f795:	48 89 8c 24 20 07 00 	mov    %rcx,0x720(%rsp)
   1f79c:	00 
   1f79d:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   1f7a2:	48 89 8c 24 28 07 00 	mov    %rcx,0x728(%rsp)
   1f7a9:	00 
   1f7aa:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
   1f7af:	48 89 8c 24 30 07 00 	mov    %rcx,0x730(%rsp)
   1f7b6:	00 
   1f7b7:	48 8b 8c 24 a0 01 00 	mov    0x1a0(%rsp),%rcx
   1f7be:	00 
   1f7bf:	48 89 8c 24 38 07 00 	mov    %rcx,0x738(%rsp)
   1f7c6:	00 
   1f7c7:	4c 89 ac 24 40 07 00 	mov    %r13,0x740(%rsp)
   1f7ce:	00 
   1f7cf:	4c 89 b4 24 48 07 00 	mov    %r14,0x748(%rsp)
   1f7d6:	00 
   1f7d7:	48 85 c0             	test   %rax,%rax
   1f7da:	48 0f 44 d0          	cmove  %rax,%rdx
   1f7de:	48 8d 0d 73 7a 01 00 	lea    0x17a73(%rip),%rcx        # 37258 <_fini+0x1934>
   1f7e5:	48 0f 44 c1          	cmove  %rcx,%rax
   1f7e9:	48 89 84 24 50 07 00 	mov    %rax,0x750(%rsp)
   1f7f0:	00 
   1f7f1:	48 89 94 24 58 07 00 	mov    %rdx,0x758(%rsp)
   1f7f8:	00 
   1f7f9:	48 89 8c 24 60 07 00 	mov    %rcx,0x760(%rsp)
   1f800:	00 
   1f801:	48 c7 84 24 68 07 00 	movq   $0x0,0x768(%rsp)
   1f808:	00 00 00 00 00 
   1f80d:	48 89 8c 24 70 07 00 	mov    %rcx,0x770(%rsp)
   1f814:	00 
   1f815:	48 c7 84 24 78 07 00 	movq   $0x0,0x778(%rsp)
   1f81c:	00 00 00 00 00 
   1f821:	48 89 8c 24 80 07 00 	mov    %rcx,0x780(%rsp)
   1f828:	00 
   1f829:	48 c7 84 24 88 07 00 	movq   $0x0,0x788(%rsp)
   1f830:	00 00 00 00 00 
   1f835:	48 89 8c 24 90 07 00 	mov    %rcx,0x790(%rsp)
   1f83c:	00 
   1f83d:	48 c7 84 24 98 07 00 	movq   $0x0,0x798(%rsp)
   1f844:	00 00 00 00 00 
   1f849:	4c 89 bc 24 a0 07 00 	mov    %r15,0x7a0(%rsp)
   1f850:	00 
   1f851:	48 8b 84 24 e0 00 00 	mov    0xe0(%rsp),%rax
   1f858:	00 
   1f859:	48 89 84 24 a8 07 00 	mov    %rax,0x7a8(%rsp)
   1f860:	00 
   1f861:	48 89 9c 24 b0 07 00 	mov    %rbx,0x7b0(%rsp)
   1f868:	00 
   1f869:	4c 89 a4 24 b8 07 00 	mov    %r12,0x7b8(%rsp)
   1f870:	00 
   1f871:	48 c7 84 24 58 03 00 	movq   $0x8,0x358(%rsp)
   1f878:	00 08 00 00 00 
   1f87d:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1f881:	f3 0f 7f 84 24 60 03 	movdqu %xmm0,0x360(%rsp)
   1f888:	00 00 
   1f88a:	48 c7 84 24 c0 02 00 	movq   $0x8,0x2c0(%rsp)
   1f891:	00 08 00 00 00 
   1f896:	f3 0f 7f 84 24 c8 02 	movdqu %xmm0,0x2c8(%rsp)
   1f89d:	00 00 
   1f89f:	48 85 f6             	test   %rsi,%rsi
   1f8a2:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   1f8a7:	0f 84 59 34 00 00    	je     22d06 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4176>
   1f8ad:	49 89 f7             	mov    %rsi,%r15
   1f8b0:	41 bd 00 00 00 00    	mov    $0x0,%r13d
   1f8b6:	eb 0e                	jmp    1f8c6 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xd36>
   1f8b8:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   1f8bd:	4d 85 ff             	test   %r15,%r15
   1f8c0:	0f 84 40 34 00 00    	je     22d06 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4176>
   1f8c6:	4c 89 bc 24 80 00 00 	mov    %r15,0x80(%rsp)
   1f8cd:	00 
   1f8ce:	49 83 ff 04          	cmp    $0x4,%r15
   1f8d2:	0f 82 79 3f 00 00    	jb     23851 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4cc1>
   1f8d8:	48 8b 84 24 80 00 00 	mov    0x80(%rsp),%rax
   1f8df:	00 
   1f8e0:	4c 8d 78 fc          	lea    -0x4(%rax),%r15
   1f8e4:	44 8b 75 00          	mov    0x0(%rbp),%r14d
   1f8e8:	4c 89 f0             	mov    %r14,%rax
   1f8eb:	48 c1 e8 04          	shr    $0x4,%rax
   1f8ef:	3d ff ff ff 0f       	cmp    $0xfffffff,%eax
   1f8f4:	73 1a                	jae    1f910 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xd80>
   1f8f6:	48 83 c5 04          	add    $0x4,%rbp
   1f8fa:	c6 84 24 a8 00 00 00 	movb   $0x4,0xa8(%rsp)
   1f901:	04 
   1f902:	b8 04 00 00 00       	mov    $0x4,%eax
   1f907:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   1f90c:	31 c0                	xor    %eax,%eax
   1f90e:	eb 3c                	jmp    1f94c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xdbc>
   1f910:	41 83 fe ff          	cmp    $0xffffffff,%r14d
   1f914:	0f 85 37 3f 00 00    	jne    23851 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4cc1>
   1f91a:	49 83 ff 08          	cmp    $0x8,%r15
   1f91e:	0f 82 2d 3f 00 00    	jb     23851 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4cc1>
   1f924:	48 8b 84 24 80 00 00 	mov    0x80(%rsp),%rax
   1f92b:	00 
   1f92c:	4c 8d 78 f4          	lea    -0xc(%rax),%r15
   1f930:	4c 8b 75 04          	mov    0x4(%rbp),%r14
   1f934:	48 83 c5 0c          	add    $0xc,%rbp
   1f938:	c6 84 24 a8 00 00 00 	movb   $0x8,0xa8(%rsp)
   1f93f:	08 
   1f940:	b8 0c 00 00 00       	mov    $0xc,%eax
   1f945:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   1f94a:	b0 01                	mov    $0x1,%al
   1f94c:	4d 29 f7             	sub    %r14,%r15
   1f94f:	0f 82 fc 3e 00 00    	jb     23851 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4cc1>
   1f955:	49 83 fe 02          	cmp    $0x2,%r14
   1f959:	0f 82 f2 3e 00 00    	jb     23851 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4cc1>
   1f95f:	49 8d 4e fe          	lea    -0x2(%r14),%rcx
   1f963:	0f b7 55 00          	movzwl 0x0(%rbp),%edx
   1f967:	89 54 24 20          	mov    %edx,0x20(%rsp)
   1f96b:	83 c2 fe             	add    $0xfffffffe,%edx
   1f96e:	66 83 fa 03          	cmp    $0x3,%dx
   1f972:	4c 89 ac 24 a0 01 00 	mov    %r13,0x1a0(%rsp)
   1f979:	00 
   1f97a:	73 1c                	jae    1f998 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xe08>
   1f97c:	84 c0                	test   %al,%al
   1f97e:	74 71                	je     1f9f1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xe61>
   1f980:	48 83 f9 07          	cmp    $0x7,%rcx
   1f984:	0f 86 c7 3e 00 00    	jbe    23851 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4cc1>
   1f98a:	48 8d 45 0a          	lea    0xa(%rbp),%rax
   1f98e:	49 8d 4e f6          	lea    -0xa(%r14),%rcx
   1f992:	48 8b 55 02          	mov    0x2(%rbp),%rdx
   1f996:	eb 6e                	jmp    1fa06 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xe76>
   1f998:	48 85 c9             	test   %rcx,%rcx
   1f99b:	0f 84 b0 3e 00 00    	je     23851 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4cc1>
   1f9a1:	66 83 7c 24 20 05    	cmpw   $0x5,0x20(%rsp)
   1f9a7:	0f 85 a4 3e 00 00    	jne    23851 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4cc1>
   1f9ad:	49 83 fe 03          	cmp    $0x3,%r14
   1f9b1:	0f 84 9a 3e 00 00    	je     23851 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4cc1>
   1f9b7:	80 7d 02 01          	cmpb   $0x1,0x2(%rbp)
   1f9bb:	0f 85 90 3e 00 00    	jne    23851 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4cc1>
   1f9c1:	48 8d 4d 04          	lea    0x4(%rbp),%rcx
   1f9c5:	49 8d 76 fc          	lea    -0x4(%r14),%rsi
   1f9c9:	8a 55 03             	mov    0x3(%rbp),%dl
   1f9cc:	88 54 24 70          	mov    %dl,0x70(%rsp)
   1f9d0:	84 c0                	test   %al,%al
   1f9d2:	74 5d                	je     1fa31 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xea1>
   1f9d4:	48 83 fe 07          	cmp    $0x7,%rsi
   1f9d8:	0f 86 73 3e 00 00    	jbe    23851 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4cc1>
   1f9de:	48 89 f2             	mov    %rsi,%rdx
   1f9e1:	48 89 c8             	mov    %rcx,%rax
   1f9e4:	48 8b 09             	mov    (%rcx),%rcx
   1f9e7:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   1f9ec:	48 89 f1             	mov    %rsi,%rcx
   1f9ef:	eb 57                	jmp    1fa48 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xeb8>
   1f9f1:	48 83 f9 04          	cmp    $0x4,%rcx
   1f9f5:	0f 82 56 3e 00 00    	jb     23851 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4cc1>
   1f9fb:	48 8d 45 06          	lea    0x6(%rbp),%rax
   1f9ff:	49 8d 4e fa          	lea    -0x6(%r14),%rcx
   1fa03:	8b 55 02             	mov    0x2(%rbp),%edx
   1fa06:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   1fa0b:	48 85 c9             	test   %rcx,%rcx
   1fa0e:	0f 84 3d 3e 00 00    	je     23851 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4cc1>
   1fa14:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
   1fa18:	48 89 4c 24 78       	mov    %rcx,0x78(%rsp)
   1fa1d:	8a 08                	mov    (%rax),%cl
   1fa1f:	88 4c 24 70          	mov    %cl,0x70(%rsp)
   1fa23:	48 83 c0 01          	add    $0x1,%rax
   1fa27:	48 89 84 24 e0 00 00 	mov    %rax,0xe0(%rsp)
   1fa2e:	00 
   1fa2f:	eb 2c                	jmp    1fa5d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xecd>
   1fa31:	48 83 fe 04          	cmp    $0x4,%rsi
   1fa35:	0f 82 16 3e 00 00    	jb     23851 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4cc1>
   1fa3b:	8b 01                	mov    (%rcx),%eax
   1fa3d:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1fa42:	4c 89 f1             	mov    %r14,%rcx
   1fa45:	48 89 e8             	mov    %rbp,%rax
   1fa48:	48 83 c0 08          	add    $0x8,%rax
   1fa4c:	48 89 84 24 e0 00 00 	mov    %rax,0xe0(%rsp)
   1fa53:	00 
   1fa54:	48 83 c1 f8          	add    $0xfffffffffffffff8,%rcx
   1fa58:	48 89 4c 24 78       	mov    %rcx,0x78(%rsp)
   1fa5d:	48 8b 84 24 d0 02 00 	mov    0x2d0(%rsp),%rax
   1fa64:	00 
   1fa65:	48 89 84 24 e8 06 00 	mov    %rax,0x6e8(%rsp)
   1fa6c:	00 
   1fa6d:	4c 8b a4 24 f0 06 00 	mov    0x6f0(%rsp),%r12
   1fa74:	00 
   1fa75:	4c 8b ac 24 f8 06 00 	mov    0x6f8(%rsp),%r13
   1fa7c:	00 
   1fa7d:	4c 2b 6c 24 18       	sub    0x18(%rsp),%r13
   1fa82:	73 19                	jae    1fa9d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xf0d>
   1fa84:	4c 89 e3             	mov    %r12,%rbx
   1fa87:	48 c1 eb 08          	shr    $0x8,%rbx
   1fa8b:	49 c1 e4 38          	shl    $0x38,%r12
   1fa8f:	b1 01                	mov    $0x1,%cl
   1fa91:	b0 13                	mov    $0x13,%al
   1fa93:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1fa98:	e9 7a 06 00 00       	jmpq   20117 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1587>
   1fa9d:	48 8d bc 24 50 06 00 	lea    0x650(%rsp),%rdi
   1faa4:	00 
   1faa5:	ff 15 45 60 02 00    	callq  *0x26045(%rip)        # 45af0 <_GLOBAL_OFFSET_TABLE_+0x168>
   1faab:	4c 03 64 24 18       	add    0x18(%rsp),%r12
   1fab0:	b8 13 00 00 00       	mov    $0x13,%eax
   1fab5:	4d 85 ed             	test   %r13,%r13
   1fab8:	0f 84 ca 05 00 00    	je     20088 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x14f8>
   1fabe:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1fac3:	4c 89 7c 24 28       	mov    %r15,0x28(%rsp)
   1fac8:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
   1facd:	31 c0                	xor    %eax,%eax
   1facf:	31 ed                	xor    %ebp,%ebp
   1fad1:	31 c9                	xor    %ecx,%ecx
   1fad3:	41 0f b6 14 04       	movzbl (%r12,%rax,1),%edx
   1fad8:	83 f9 3f             	cmp    $0x3f,%ecx
   1fadb:	75 09                	jne    1fae6 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xf56>
   1fadd:	80 fa 01             	cmp    $0x1,%dl
   1fae0:	0f 87 a9 05 00 00    	ja     2008f <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x14ff>
   1fae6:	0f b6 d2             	movzbl %dl,%edx
   1fae9:	89 d6                	mov    %edx,%esi
   1faeb:	83 e6 7f             	and    $0x7f,%esi
   1faee:	48 d3 e6             	shl    %cl,%rsi
   1faf1:	48 09 f5             	or     %rsi,%rbp
   1faf4:	84 d2                	test   %dl,%dl
   1faf6:	79 11                	jns    1fb09 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xf79>
   1faf8:	83 c1 07             	add    $0x7,%ecx
   1fafb:	48 83 c0 01          	add    $0x1,%rax
   1faff:	49 39 c5             	cmp    %rax,%r13
   1fb02:	75 cf                	jne    1fad3 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xf43>
   1fb04:	e9 95 05 00 00       	jmpq   2009e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x150e>
   1fb09:	48 85 ed             	test   %rbp,%rbp
   1fb0c:	74 3b                	je     1fb49 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xfb9>
   1fb0e:	49 8d 4d ff          	lea    -0x1(%r13),%rcx
   1fb12:	48 39 c1             	cmp    %rax,%rcx
   1fb15:	0f 84 62 0d 00 00    	je     2087d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1ced>
   1fb1b:	4d 89 ef             	mov    %r13,%r15
   1fb1e:	49 29 c7             	sub    %rax,%r15
   1fb21:	41 0f b6 4c 04 01    	movzbl 0x1(%r12,%rax,1),%ecx
   1fb27:	89 ca                	mov    %ecx,%edx
   1fb29:	83 e2 7f             	and    $0x7f,%edx
   1fb2c:	89 54 24 60          	mov    %edx,0x60(%rsp)
   1fb30:	84 c9                	test   %cl,%cl
   1fb32:	0f 88 3b 01 00 00    	js     1fc73 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x10e3>
   1fb38:	49 8d 1c 04          	lea    (%r12,%rax,1),%rbx
   1fb3c:	48 83 c3 02          	add    $0x2,%rbx
   1fb40:	49 83 c7 fe          	add    $0xfffffffffffffffe,%r15
   1fb44:	e9 9d 01 00 00       	jmpq   1fce6 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1156>
   1fb49:	49 01 c4             	add    %rax,%r12
   1fb4c:	49 83 c4 01          	add    $0x1,%r12
   1fb50:	48 f7 d0             	not    %rax
   1fb53:	49 01 c5             	add    %rax,%r13
   1fb56:	b8 02 00 00 00       	mov    $0x2,%eax
   1fb5b:	0f 28 84 24 90 02 00 	movaps 0x290(%rsp),%xmm0
   1fb62:	00 
   1fb63:	0f 29 84 24 30 03 00 	movaps %xmm0,0x330(%rsp)
   1fb6a:	00 
   1fb6b:	0f 28 8c 24 50 02 00 	movaps 0x250(%rsp),%xmm1
   1fb72:	00 
   1fb73:	0f 28 94 24 60 02 00 	movaps 0x260(%rsp),%xmm2
   1fb7a:	00 
   1fb7b:	0f 28 9c 24 70 02 00 	movaps 0x270(%rsp),%xmm3
   1fb82:	00 
   1fb83:	0f 28 a4 24 80 02 00 	movaps 0x280(%rsp),%xmm4
   1fb8a:	00 
   1fb8b:	0f 29 a4 24 20 03 00 	movaps %xmm4,0x320(%rsp)
   1fb92:	00 
   1fb93:	0f 29 9c 24 10 03 00 	movaps %xmm3,0x310(%rsp)
   1fb9a:	00 
   1fb9b:	0f 29 94 24 00 03 00 	movaps %xmm2,0x300(%rsp)
   1fba2:	00 
   1fba3:	0f 29 8c 24 f0 02 00 	movaps %xmm1,0x2f0(%rsp)
   1fbaa:	00 
   1fbab:	0f 29 8c 24 00 02 00 	movaps %xmm1,0x200(%rsp)
   1fbb2:	00 
   1fbb3:	0f 29 94 24 10 02 00 	movaps %xmm2,0x210(%rsp)
   1fbba:	00 
   1fbbb:	0f 29 9c 24 20 02 00 	movaps %xmm3,0x220(%rsp)
   1fbc2:	00 
   1fbc3:	0f 29 a4 24 30 02 00 	movaps %xmm4,0x230(%rsp)
   1fbca:	00 
   1fbcb:	0f 29 84 24 40 02 00 	movaps %xmm0,0x240(%rsp)
   1fbd2:	00 
   1fbd3:	48 83 f8 02          	cmp    $0x2,%rax
   1fbd7:	0f 84 cd 0c 00 00    	je     208aa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1d1a>
   1fbdd:	48 8b 4c 24 60       	mov    0x60(%rsp),%rcx
   1fbe2:	48 89 8c 24 f0 03 00 	mov    %rcx,0x3f0(%rsp)
   1fbe9:	00 
   1fbea:	48 89 84 24 f8 03 00 	mov    %rax,0x3f8(%rsp)
   1fbf1:	00 
   1fbf2:	48 89 9c 24 00 04 00 	mov    %rbx,0x400(%rsp)
   1fbf9:	00 
   1fbfa:	4c 89 bc 24 08 04 00 	mov    %r15,0x408(%rsp)
   1fc01:	00 
   1fc02:	0f 28 84 24 40 02 00 	movaps 0x240(%rsp),%xmm0
   1fc09:	00 
   1fc0a:	48 8d 84 24 10 04 00 	lea    0x410(%rsp),%rax
   1fc11:	00 
   1fc12:	0f 11 40 40          	movups %xmm0,0x40(%rax)
   1fc16:	66 0f 6f 84 24 00 02 	movdqa 0x200(%rsp),%xmm0
   1fc1d:	00 00 
   1fc1f:	0f 28 8c 24 10 02 00 	movaps 0x210(%rsp),%xmm1
   1fc26:	00 
   1fc27:	0f 28 94 24 20 02 00 	movaps 0x220(%rsp),%xmm2
   1fc2e:	00 
   1fc2f:	0f 28 9c 24 30 02 00 	movaps 0x230(%rsp),%xmm3
   1fc36:	00 
   1fc37:	0f 11 58 30          	movups %xmm3,0x30(%rax)
   1fc3b:	0f 11 50 20          	movups %xmm2,0x20(%rax)
   1fc3f:	0f 11 48 10          	movups %xmm1,0x10(%rax)
   1fc43:	f3 0f 7f 00          	movdqu %xmm0,(%rax)
   1fc47:	48 8d bc 24 50 06 00 	lea    0x650(%rsp),%rdi
   1fc4e:	00 
   1fc4f:	48 8d b4 24 f0 03 00 	lea    0x3f0(%rsp),%rsi
   1fc56:	00 
   1fc57:	ff 15 23 5e 02 00    	callq  *0x25e23(%rip)        # 45a80 <_GLOBAL_OFFSET_TABLE_+0xf8>
   1fc5d:	84 c0                	test   %al,%al
   1fc5f:	0f 85 9b 0c 00 00    	jne    20900 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1d70>
   1fc65:	4d 85 ed             	test   %r13,%r13
   1fc68:	0f 85 5f fe ff ff    	jne    1facd <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xf3d>
   1fc6e:	e9 2e 04 00 00       	jmpq   200a1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1511>
   1fc73:	49 8d 4d fe          	lea    -0x2(%r13),%rcx
   1fc77:	48 39 c1             	cmp    %rax,%rcx
   1fc7a:	0f 84 0d 0d 00 00    	je     2098d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1dfd>
   1fc80:	49 8d 1c 04          	lea    (%r12,%rax,1),%rbx
   1fc84:	48 83 c3 03          	add    $0x3,%rbx
   1fc88:	41 0f b6 4c 04 02    	movzbl 0x2(%r12,%rax,1),%ecx
   1fc8e:	89 ca                	mov    %ecx,%edx
   1fc90:	83 e2 7f             	and    $0x7f,%edx
   1fc93:	c1 e2 07             	shl    $0x7,%edx
   1fc96:	8b 74 24 60          	mov    0x60(%rsp),%esi
   1fc9a:	0f b7 f6             	movzwl %si,%esi
   1fc9d:	09 d6                	or     %edx,%esi
   1fc9f:	89 74 24 60          	mov    %esi,0x60(%rsp)
   1fca3:	84 c9                	test   %cl,%cl
   1fca5:	78 06                	js     1fcad <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x111d>
   1fca7:	49 83 c7 fd          	add    $0xfffffffffffffffd,%r15
   1fcab:	eb 39                	jmp    1fce6 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1156>
   1fcad:	49 83 c5 fd          	add    $0xfffffffffffffffd,%r13
   1fcb1:	49 39 c5             	cmp    %rax,%r13
   1fcb4:	0f 84 df 0e 00 00    	je     20b99 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2009>
   1fcba:	0f b6 0b             	movzbl (%rbx),%ecx
   1fcbd:	66 83 f9 03          	cmp    $0x3,%cx
   1fcc1:	0f 87 c8 03 00 00    	ja     2008f <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x14ff>
   1fcc7:	49 83 c7 fc          	add    $0xfffffffffffffffc,%r15
   1fccb:	49 8d 1c 04          	lea    (%r12,%rax,1),%rbx
   1fccf:	48 83 c3 04          	add    $0x4,%rbx
   1fcd3:	0f b7 c1             	movzwl %cx,%eax
   1fcd6:	c1 e0 0e             	shl    $0xe,%eax
   1fcd9:	8b 4c 24 60          	mov    0x60(%rsp),%ecx
   1fcdd:	0f b7 c9             	movzwl %cx,%ecx
   1fce0:	09 c1                	or     %eax,%ecx
   1fce2:	89 4c 24 60          	mov    %ecx,0x60(%rsp)
   1fce6:	66 83 7c 24 60 00    	cmpw   $0x0,0x60(%rsp)
   1fcec:	0f 84 97 0b 00 00    	je     20889 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1cf9>
   1fcf2:	4d 85 ff             	test   %r15,%r15
   1fcf5:	0f 84 95 0b 00 00    	je     20890 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1d00>
   1fcfb:	8a 03                	mov    (%rbx),%al
   1fcfd:	88 84 24 08 01 00 00 	mov    %al,0x108(%rsp)
   1fd04:	84 c0                	test   %al,%al
   1fd06:	74 16                	je     1fd1e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x118e>
   1fd08:	80 bc 24 08 01 00 00 	cmpb   $0x1,0x108(%rsp)
   1fd0f:	01 
   1fd10:	0f 85 82 0b 00 00    	jne    20898 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1d08>
   1fd16:	c6 84 24 08 01 00 00 	movb   $0x1,0x108(%rsp)
   1fd1d:	01 
   1fd1e:	48 8d bc 24 f0 03 00 	lea    0x3f0(%rsp),%rdi
   1fd25:	00 
   1fd26:	ff 15 6c 5d 02 00    	callq  *0x25d6c(%rip)        # 45a98 <_GLOBAL_OFFSET_TABLE_+0x110>
   1fd2c:	48 83 c3 01          	add    $0x1,%rbx
   1fd30:	49 83 c7 ff          	add    $0xffffffffffffffff,%r15
   1fd34:	0f 84 24 06 00 00    	je     2035e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x17ce>
   1fd3a:	48 8d 4b 01          	lea    0x1(%rbx),%rcx
   1fd3e:	49 8d 77 ff          	lea    -0x1(%r15),%rsi
   1fd42:	0f b6 03             	movzbl (%rbx),%eax
   1fd45:	41 89 c0             	mov    %eax,%r8d
   1fd48:	41 83 e0 7f          	and    $0x7f,%r8d
   1fd4c:	84 c0                	test   %al,%al
   1fd4e:	79 59                	jns    1fda9 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1219>
   1fd50:	48 85 f6             	test   %rsi,%rsi
   1fd53:	0f 84 47 06 00 00    	je     203a0 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1810>
   1fd59:	48 8d 4b 02          	lea    0x2(%rbx),%rcx
   1fd5d:	49 8d 77 fe          	lea    -0x2(%r15),%rsi
   1fd61:	0f b6 43 01          	movzbl 0x1(%rbx),%eax
   1fd65:	89 c2                	mov    %eax,%edx
   1fd67:	83 e2 7f             	and    $0x7f,%edx
   1fd6a:	c1 e2 07             	shl    $0x7,%edx
   1fd6d:	45 0f b7 c0          	movzwl %r8w,%r8d
   1fd71:	41 09 d0             	or     %edx,%r8d
   1fd74:	84 c0                	test   %al,%al
   1fd76:	79 31                	jns    1fda9 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1219>
   1fd78:	48 85 f6             	test   %rsi,%rsi
   1fd7b:	0f 84 1f 06 00 00    	je     203a0 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1810>
   1fd81:	0f b6 01             	movzbl (%rcx),%eax
   1fd84:	66 83 f8 03          	cmp    $0x3,%ax
   1fd88:	0f 87 a7 0b 00 00    	ja     20935 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1da5>
   1fd8e:	49 83 c7 fd          	add    $0xfffffffffffffffd,%r15
   1fd92:	48 83 c3 03          	add    $0x3,%rbx
   1fd96:	0f b7 c0             	movzwl %ax,%eax
   1fd99:	c1 e0 0e             	shl    $0xe,%eax
   1fd9c:	45 0f b7 c0          	movzwl %r8w,%r8d
   1fda0:	41 09 c0             	or     %eax,%r8d
   1fda3:	48 89 d9             	mov    %rbx,%rcx
   1fda6:	4c 89 fe             	mov    %r15,%rsi
   1fda9:	66 45 85 c0          	test   %r8w,%r8w
   1fdad:	0f 84 42 01 00 00    	je     1fef5 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1365>
   1fdb3:	48 85 f6             	test   %rsi,%rsi
   1fdb6:	0f 84 e4 05 00 00    	je     203a0 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1810>
   1fdbc:	48 8d 59 01          	lea    0x1(%rcx),%rbx
   1fdc0:	4c 8d 7e ff          	lea    -0x1(%rsi),%r15
   1fdc4:	0f b6 01             	movzbl (%rcx),%eax
   1fdc7:	41 89 c1             	mov    %eax,%r9d
   1fdca:	41 83 e1 7f          	and    $0x7f,%r9d
   1fdce:	84 c0                	test   %al,%al
   1fdd0:	79 59                	jns    1fe2b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x129b>
   1fdd2:	4d 85 ff             	test   %r15,%r15
   1fdd5:	0f 84 83 05 00 00    	je     2035e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x17ce>
   1fddb:	48 8d 59 02          	lea    0x2(%rcx),%rbx
   1fddf:	4c 8d 7e fe          	lea    -0x2(%rsi),%r15
   1fde3:	0f b6 41 01          	movzbl 0x1(%rcx),%eax
   1fde7:	89 c7                	mov    %eax,%edi
   1fde9:	83 e7 7f             	and    $0x7f,%edi
   1fdec:	c1 e7 07             	shl    $0x7,%edi
   1fdef:	45 0f b7 c9          	movzwl %r9w,%r9d
   1fdf3:	41 09 f9             	or     %edi,%r9d
   1fdf6:	84 c0                	test   %al,%al
   1fdf8:	79 31                	jns    1fe2b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x129b>
   1fdfa:	4d 85 ff             	test   %r15,%r15
   1fdfd:	0f 84 5b 05 00 00    	je     2035e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x17ce>
   1fe03:	0f b6 03             	movzbl (%rbx),%eax
   1fe06:	66 83 f8 03          	cmp    $0x3,%ax
   1fe0a:	0f 87 25 0b 00 00    	ja     20935 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1da5>
   1fe10:	48 83 c1 03          	add    $0x3,%rcx
   1fe14:	48 83 c6 fd          	add    $0xfffffffffffffffd,%rsi
   1fe18:	0f b7 c0             	movzwl %ax,%eax
   1fe1b:	c1 e0 0e             	shl    $0xe,%eax
   1fe1e:	45 0f b7 c9          	movzwl %r9w,%r9d
   1fe22:	41 09 c1             	or     %eax,%r9d
   1fe25:	49 89 f7             	mov    %rsi,%r15
   1fe28:	48 89 cb             	mov    %rcx,%rbx
   1fe2b:	66 41 83 f9 21       	cmp    $0x21,%r9w
   1fe30:	74 0e                	je     1fe40 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x12b0>
   1fe32:	66 45 85 c9          	test   %r9w,%r9w
   1fe36:	0f 84 31 09 00 00    	je     2076d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1bdd>
   1fe3c:	31 f6                	xor    %esi,%esi
   1fe3e:	eb 72                	jmp    1feb2 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1322>
   1fe40:	4d 85 ff             	test   %r15,%r15
   1fe43:	0f 84 15 05 00 00    	je     2035e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x17ce>
   1fe49:	31 ff                	xor    %edi,%edi
   1fe4b:	31 f6                	xor    %esi,%esi
   1fe4d:	31 c9                	xor    %ecx,%ecx
   1fe4f:	0f b6 14 3b          	movzbl (%rbx,%rdi,1),%edx
   1fe53:	83 f9 3f             	cmp    $0x3f,%ecx
   1fe56:	75 0d                	jne    1fe65 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x12d5>
   1fe58:	80 fa 7f             	cmp    $0x7f,%dl
   1fe5b:	74 08                	je     1fe65 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x12d5>
   1fe5d:	84 d2                	test   %dl,%dl
   1fe5f:	0f 85 1a 05 00 00    	jne    2037f <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x17ef>
   1fe65:	89 d0                	mov    %edx,%eax
   1fe67:	83 e0 7f             	and    $0x7f,%eax
   1fe6a:	48 d3 e0             	shl    %cl,%rax
   1fe6d:	48 09 c6             	or     %rax,%rsi
   1fe70:	83 c1 07             	add    $0x7,%ecx
   1fe73:	84 d2                	test   %dl,%dl
   1fe75:	79 0e                	jns    1fe85 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x12f5>
   1fe77:	48 83 c7 01          	add    $0x1,%rdi
   1fe7b:	49 39 ff             	cmp    %rdi,%r15
   1fe7e:	75 cf                	jne    1fe4f <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x12bf>
   1fe80:	e9 d6 04 00 00       	jmpq   2035b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x17cb>
   1fe85:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   1fe8c:	48 d3 e0             	shl    %cl,%rax
   1fe8f:	f6 c2 40             	test   $0x40,%dl
   1fe92:	ba 00 00 00 00       	mov    $0x0,%edx
   1fe97:	48 0f 44 c2          	cmove  %rdx,%rax
   1fe9b:	83 f9 40             	cmp    $0x40,%ecx
   1fe9e:	48 0f 4d c2          	cmovge %rdx,%rax
   1fea2:	48 09 c6             	or     %rax,%rsi
   1fea5:	48 01 fb             	add    %rdi,%rbx
   1fea8:	48 83 c3 01          	add    $0x1,%rbx
   1feac:	48 f7 d7             	not    %rdi
   1feaf:	49 01 ff             	add    %rdi,%r15
   1feb2:	41 0f b7 c1          	movzwl %r9w,%eax
   1feb6:	48 c1 e0 10          	shl    $0x10,%rax
   1feba:	41 0f b7 c8          	movzwl %r8w,%ecx
   1febe:	48 09 c1             	or     %rax,%rcx
   1fec1:	48 89 b4 24 10 01 00 	mov    %rsi,0x110(%rsp)
   1fec8:	00 
   1fec9:	48 89 8c 24 18 01 00 	mov    %rcx,0x118(%rsp)
   1fed0:	00 
   1fed1:	48 8d bc 24 f0 03 00 	lea    0x3f0(%rsp),%rdi
   1fed8:	00 
   1fed9:	48 8d b4 24 10 01 00 	lea    0x110(%rsp),%rsi
   1fee0:	00 
   1fee1:	ff 15 19 5c 02 00    	callq  *0x25c19(%rip)        # 45b00 <_GLOBAL_OFFSET_TABLE_+0x178>
   1fee7:	4d 85 ff             	test   %r15,%r15
   1feea:	0f 85 4a fe ff ff    	jne    1fd3a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x11aa>
   1fef0:	e9 69 04 00 00       	jmpq   2035e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x17ce>
   1fef5:	48 85 f6             	test   %rsi,%rsi
   1fef8:	0f 84 a2 04 00 00    	je     203a0 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1810>
   1fefe:	4c 8d 61 01          	lea    0x1(%rcx),%r12
   1ff02:	4c 8d 6e ff          	lea    -0x1(%rsi),%r13
   1ff06:	0f b6 11             	movzbl (%rcx),%edx
   1ff09:	89 d0                	mov    %edx,%eax
   1ff0b:	83 e0 7f             	and    $0x7f,%eax
   1ff0e:	84 d2                	test   %dl,%dl
   1ff10:	79 57                	jns    1ff69 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x13d9>
   1ff12:	4d 85 ed             	test   %r13,%r13
   1ff15:	0f 84 01 0d 00 00    	je     20c1c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x208c>
   1ff1b:	4c 8d 61 02          	lea    0x2(%rcx),%r12
   1ff1f:	4c 8d 6e fe          	lea    -0x2(%rsi),%r13
   1ff23:	0f b6 51 01          	movzbl 0x1(%rcx),%edx
   1ff27:	89 d7                	mov    %edx,%edi
   1ff29:	83 e7 7f             	and    $0x7f,%edi
   1ff2c:	c1 e7 07             	shl    $0x7,%edi
   1ff2f:	0f b7 c0             	movzwl %ax,%eax
   1ff32:	09 f8                	or     %edi,%eax
   1ff34:	84 d2                	test   %dl,%dl
   1ff36:	79 31                	jns    1ff69 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x13d9>
   1ff38:	4d 85 ed             	test   %r13,%r13
   1ff3b:	0f 84 db 0c 00 00    	je     20c1c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x208c>
   1ff41:	41 0f b6 14 24       	movzbl (%r12),%edx
   1ff46:	66 83 fa 03          	cmp    $0x3,%dx
   1ff4a:	0f 87 e5 09 00 00    	ja     20935 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1da5>
   1ff50:	48 83 c1 03          	add    $0x3,%rcx
   1ff54:	48 83 c6 fd          	add    $0xfffffffffffffffd,%rsi
   1ff58:	0f b7 d2             	movzwl %dx,%edx
   1ff5b:	c1 e2 0e             	shl    $0xe,%edx
   1ff5e:	0f b7 c0             	movzwl %ax,%eax
   1ff61:	09 d0                	or     %edx,%eax
   1ff63:	49 89 f5             	mov    %rsi,%r13
   1ff66:	49 89 cc             	mov    %rcx,%r12
   1ff69:	66 85 c0             	test   %ax,%ax
   1ff6c:	0f 85 4c 0c 00 00    	jne    20bbe <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x202e>
   1ff72:	f3 0f 6f 84 24 f0 03 	movdqu 0x3f0(%rsp),%xmm0
   1ff79:	00 00 
   1ff7b:	0f 10 8c 24 00 04 00 	movups 0x400(%rsp),%xmm1
   1ff82:	00 
   1ff83:	0f 10 94 24 10 04 00 	movups 0x410(%rsp),%xmm2
   1ff8a:	00 
   1ff8b:	0f 10 9c 24 20 04 00 	movups 0x420(%rsp),%xmm3
   1ff92:	00 
   1ff93:	48 8b 84 24 30 04 00 	mov    0x430(%rsp),%rax
   1ff9a:	00 
   1ff9b:	48 8d 8c 24 10 04 00 	lea    0x410(%rsp),%rcx
   1ffa2:	00 
   1ffa3:	0f 10 61 28          	movups 0x28(%rcx),%xmm4
   1ffa7:	0f 29 a4 24 c0 00 00 	movaps %xmm4,0xc0(%rsp)
   1ffae:	00 
   1ffaf:	48 8b 49 38          	mov    0x38(%rcx),%rcx
   1ffb3:	48 89 8c 24 d0 00 00 	mov    %rcx,0xd0(%rsp)
   1ffba:	00 
   1ffbb:	f3 0f 7f 84 24 10 01 	movdqu %xmm0,0x110(%rsp)
   1ffc2:	00 00 
   1ffc4:	0f 11 8c 24 20 01 00 	movups %xmm1,0x120(%rsp)
   1ffcb:	00 
   1ffcc:	0f 11 94 24 30 01 00 	movups %xmm2,0x130(%rsp)
   1ffd3:	00 
   1ffd4:	0f 11 9c 24 40 01 00 	movups %xmm3,0x140(%rsp)
   1ffdb:	00 
   1ffdc:	48 89 84 24 50 01 00 	mov    %rax,0x150(%rsp)
   1ffe3:	00 
   1ffe4:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
   1ffeb:	00 
   1ffec:	0f 11 60 28          	movups %xmm4,0x28(%rax)
   1fff0:	48 89 48 38          	mov    %rcx,0x38(%rax)
   1fff4:	0f b6 8c 24 08 01 00 	movzbl 0x108(%rsp),%ecx
   1fffb:	00 
   1fffc:	48 8d bc 24 f0 03 00 	lea    0x3f0(%rsp),%rdi
   20003:	00 
   20004:	48 89 ee             	mov    %rbp,%rsi
   20007:	8b 54 24 60          	mov    0x60(%rsp),%edx
   2000b:	4c 8d 84 24 10 01 00 	lea    0x110(%rsp),%r8
   20012:	00 
   20013:	ff 15 97 5d 02 00    	callq  *0x25d97(%rip)        # 45db0 <_GLOBAL_OFFSET_TABLE_+0x428>
   20019:	48 8b 84 24 f0 03 00 	mov    0x3f0(%rsp),%rax
   20020:	00 
   20021:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   20026:	48 8b 84 24 f8 03 00 	mov    0x3f8(%rsp),%rax
   2002d:	00 
   2002e:	48 8b 9c 24 00 04 00 	mov    0x400(%rsp),%rbx
   20035:	00 
   20036:	4c 8b bc 24 08 04 00 	mov    0x408(%rsp),%r15
   2003d:	00 
   2003e:	48 8d 8c 24 10 04 00 	lea    0x410(%rsp),%rcx
   20045:	00 
   20046:	0f 10 01             	movups (%rcx),%xmm0
   20049:	0f 10 49 10          	movups 0x10(%rcx),%xmm1
   2004d:	0f 10 51 20          	movups 0x20(%rcx),%xmm2
   20051:	0f 10 59 30          	movups 0x30(%rcx),%xmm3
   20055:	0f 29 84 24 50 02 00 	movaps %xmm0,0x250(%rsp)
   2005c:	00 
   2005d:	0f 29 8c 24 60 02 00 	movaps %xmm1,0x260(%rsp)
   20064:	00 
   20065:	0f 29 94 24 70 02 00 	movaps %xmm2,0x270(%rsp)
   2006c:	00 
   2006d:	0f 29 9c 24 80 02 00 	movaps %xmm3,0x280(%rsp)
   20074:	00 
   20075:	f3 0f 6f 41 40       	movdqu 0x40(%rcx),%xmm0
   2007a:	66 0f 7f 84 24 90 02 	movdqa %xmm0,0x290(%rsp)
   20081:	00 00 
   20083:	e9 d3 fa ff ff       	jmpq   1fb5b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xfcb>
   20088:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   2008d:	eb 1c                	jmp    200ab <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x151b>
   2008f:	45 31 e4             	xor    %r12d,%r12d
   20092:	b8 06 00 00 00       	mov    $0x6,%eax
   20097:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   2009c:	eb 03                	jmp    200a1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1511>
   2009e:	4d 01 ec             	add    %r13,%r12
   200a1:	48 8b 6c 24 40       	mov    0x40(%rsp),%rbp
   200a6:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
   200ab:	0f 28 84 24 90 02 00 	movaps 0x290(%rsp),%xmm0
   200b2:	00 
   200b3:	0f 29 84 24 30 03 00 	movaps %xmm0,0x330(%rsp)
   200ba:	00 
   200bb:	66 0f 6f 84 24 50 02 	movdqa 0x250(%rsp),%xmm0
   200c2:	00 00 
   200c4:	0f 28 8c 24 60 02 00 	movaps 0x260(%rsp),%xmm1
   200cb:	00 
   200cc:	0f 28 94 24 70 02 00 	movaps 0x270(%rsp),%xmm2
   200d3:	00 
   200d4:	0f 28 9c 24 80 02 00 	movaps 0x280(%rsp),%xmm3
   200db:	00 
   200dc:	0f 29 9c 24 20 03 00 	movaps %xmm3,0x320(%rsp)
   200e3:	00 
   200e4:	0f 29 94 24 10 03 00 	movaps %xmm2,0x310(%rsp)
   200eb:	00 
   200ec:	0f 29 8c 24 00 03 00 	movaps %xmm1,0x300(%rsp)
   200f3:	00 
   200f4:	66 0f 7f 84 24 f0 02 	movdqa %xmm0,0x2f0(%rsp)
   200fb:	00 00 
   200fd:	4c 89 e3             	mov    %r12,%rbx
   20100:	48 c1 eb 08          	shr    $0x8,%rbx
   20104:	49 c1 e4 38          	shl    $0x38,%r12
   20108:	48 8d bc 24 50 06 00 	lea    0x650(%rsp),%rdi
   2010f:	00 
   20110:	e8 4b 5d fe ff       	callq  5e60 <core::ptr::drop_in_place>
   20115:	b1 01                	mov    $0x1,%cl
   20117:	4c 01 f5             	add    %r14,%rbp
   2011a:	4c 8b ac 24 80 00 00 	mov    0x80(%rsp),%r13
   20121:	00 
   20122:	48 8b 84 24 a0 01 00 	mov    0x1a0(%rsp),%rax
   20129:	00 
   2012a:	49 01 c5             	add    %rax,%r13
   2012d:	4d 29 fd             	sub    %r15,%r13
   20130:	66 0f 6f 84 24 70 03 	movdqa 0x370(%rsp),%xmm0
   20137:	00 00 
   20139:	0f 28 8c 24 80 03 00 	movaps 0x380(%rsp),%xmm1
   20140:	00 
   20141:	0f 29 8c 24 b0 06 00 	movaps %xmm1,0x6b0(%rsp)
   20148:	00 
   20149:	66 0f 7f 84 24 a0 06 	movdqa %xmm0,0x6a0(%rsp)
   20150:	00 00 
   20152:	84 c9                	test   %cl,%cl
   20154:	0f 85 5e f7 ff ff    	jne    1f8b8 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xd28>
   2015a:	4c 89 7c 24 28       	mov    %r15,0x28(%rsp)
   2015f:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
   20164:	4c 0f a4 e3 08       	shld   $0x8,%r12,%rbx
   20169:	49 c1 e4 08          	shl    $0x8,%r12
   2016d:	0f b6 7c 24 10       	movzbl 0x10(%rsp),%edi
   20172:	4c 09 e7             	or     %r12,%rdi
   20175:	66 0f 6f 84 24 a0 06 	movdqa 0x6a0(%rsp),%xmm0
   2017c:	00 00 
   2017e:	0f 28 8c 24 b0 06 00 	movaps 0x6b0(%rsp),%xmm1
   20185:	00 
   20186:	0f 29 8c 24 80 0c 00 	movaps %xmm1,0xc80(%rsp)
   2018d:	00 
   2018e:	66 0f 7f 84 24 70 0c 	movdqa %xmm0,0xc70(%rsp)
   20195:	00 00 
   20197:	48 c7 84 24 f0 03 00 	movq   $0x0,0x3f0(%rsp)
   2019e:	00 00 00 00 00 
   201a3:	48 89 84 24 f8 03 00 	mov    %rax,0x3f8(%rsp)
   201aa:	00 
   201ab:	4c 89 b4 24 00 04 00 	mov    %r14,0x400(%rsp)
   201b2:	00 
   201b3:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   201b8:	48 89 84 24 08 04 00 	mov    %rax,0x408(%rsp)
   201bf:	00 
   201c0:	48 8b 8c 24 e0 00 00 	mov    0xe0(%rsp),%rcx
   201c7:	00 
   201c8:	48 89 8c 24 10 04 00 	mov    %rcx,0x410(%rsp)
   201cf:	00 
   201d0:	48 8b 54 24 78       	mov    0x78(%rsp),%rdx
   201d5:	48 89 94 24 18 04 00 	mov    %rdx,0x418(%rsp)
   201dc:	00 
   201dd:	8a 44 24 70          	mov    0x70(%rsp),%al
   201e1:	88 84 24 20 04 00 00 	mov    %al,0x420(%rsp)
   201e8:	8a 84 24 a8 00 00 00 	mov    0xa8(%rsp),%al
   201ef:	88 84 24 21 04 00 00 	mov    %al,0x421(%rsp)
   201f6:	8b 44 24 20          	mov    0x20(%rsp),%eax
   201fa:	66 89 84 24 22 04 00 	mov    %ax,0x422(%rsp)
   20201:	00 
   20202:	48 89 9c 24 30 04 00 	mov    %rbx,0x430(%rsp)
   20209:	00 
   2020a:	48 89 bc 24 28 04 00 	mov    %rdi,0x428(%rsp)
   20211:	00 
   20212:	48 8d 84 24 10 04 00 	lea    0x410(%rsp),%rax
   20219:	00 
   2021a:	0f 11 48 38          	movups %xmm1,0x38(%rax)
   2021e:	f3 0f 7f 40 28       	movdqu %xmm0,0x28(%rax)
   20223:	48 c7 84 24 58 04 00 	movq   $0x0,0x458(%rsp)
   2022a:	00 00 00 00 00 
   2022f:	48 c7 84 24 68 04 00 	movq   $0x0,0x468(%rsp)
   20236:	00 00 00 00 00 
   2023b:	66 0f ef c0          	pxor   %xmm0,%xmm0
   2023f:	f3 0f 7f 40 78       	movdqu %xmm0,0x78(%rax)
   20244:	f3 0f 7f 40 68       	movdqu %xmm0,0x68(%rax)
   20249:	48 c7 80 88 00 00 00 	movq   $0x0,0x88(%rax)
   20250:	00 00 00 00 
   20254:	48 c7 84 24 48 05 00 	movq   $0x2e,0x548(%rsp)
   2025b:	00 2e 00 00 00 
   20260:	48 89 8c 24 10 01 00 	mov    %rcx,0x110(%rsp)
   20267:	00 
   20268:	48 89 94 24 18 01 00 	mov    %rdx,0x118(%rsp)
   2026f:	00 
   20270:	48 8d 84 24 00 04 00 	lea    0x400(%rsp),%rax
   20277:	00 
   20278:	48 89 84 24 20 01 00 	mov    %rax,0x120(%rsp)
   2027f:	00 
   20280:	48 8d 84 24 28 04 00 	lea    0x428(%rsp),%rax
   20287:	00 
   20288:	48 89 84 24 28 01 00 	mov    %rax,0x128(%rsp)
   2028f:	00 
   20290:	48 c7 84 24 48 01 00 	movq   $0x2,0x148(%rsp)
   20297:	00 02 00 00 00 
   2029c:	48 c7 84 24 68 01 00 	movq   $0x0,0x168(%rsp)
   202a3:	00 00 00 00 00 
   202a8:	48 85 d2             	test   %rdx,%rdx
   202ab:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   202b0:	0f 84 88 00 00 00    	je     2033e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x17ae>
   202b6:	4c 8b bc 24 e0 00 00 	mov    0xe0(%rsp),%r15
   202bd:	00 
   202be:	48 8b 6c 24 78       	mov    0x78(%rsp),%rbp
   202c3:	49 8d 5f 01          	lea    0x1(%r15),%rbx
   202c7:	48 83 c5 ff          	add    $0xffffffffffffffff,%rbp
   202cb:	31 d2                	xor    %edx,%edx
   202cd:	31 c9                	xor    %ecx,%ecx
   202cf:	48 89 9c 24 10 01 00 	mov    %rbx,0x110(%rsp)
   202d6:	00 
   202d7:	48 89 ac 24 18 01 00 	mov    %rbp,0x118(%rsp)
   202de:	00 
   202df:	0f b6 43 ff          	movzbl -0x1(%rbx),%eax
   202e3:	83 f9 3f             	cmp    $0x3f,%ecx
   202e6:	75 08                	jne    202f0 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1760>
   202e8:	3c 01                	cmp    $0x1,%al
   202ea:	0f 87 23 05 00 00    	ja     20813 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1c83>
   202f0:	0f b6 f0             	movzbl %al,%esi
   202f3:	89 f0                	mov    %esi,%eax
   202f5:	83 e0 7f             	and    $0x7f,%eax
   202f8:	48 d3 e0             	shl    %cl,%rax
   202fb:	48 09 c2             	or     %rax,%rdx
   202fe:	40 84 f6             	test   %sil,%sil
   20301:	79 12                	jns    20315 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1785>
   20303:	83 c1 07             	add    $0x7,%ecx
   20306:	48 83 c3 01          	add    $0x1,%rbx
   2030a:	48 83 c5 ff          	add    $0xffffffffffffffff,%rbp
   2030e:	72 bf                	jb     202cf <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x173f>
   20310:	e9 fe 04 00 00       	jmpq   20813 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1c83>
   20315:	48 85 d2             	test   %rdx,%rdx
   20318:	0f 85 a3 00 00 00    	jne    203c1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1831>
   2031e:	48 c7 84 24 68 01 00 	movq   $0xffffffffffffffff,0x168(%rsp)
   20325:	00 ff ff ff ff 
   2032a:	48 c7 84 24 48 01 00 	movq   $0x2,0x148(%rsp)
   20331:	00 02 00 00 00 
   20336:	49 89 df             	mov    %rbx,%r15
   20339:	48 85 ed             	test   %rbp,%rbp
   2033c:	75 85                	jne    202c3 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1733>
   2033e:	48 c7 84 24 48 01 00 	movq   $0x2,0x148(%rsp)
   20345:	00 02 00 00 00 
   2034a:	48 c7 84 24 68 01 00 	movq   $0x0,0x168(%rsp)
   20351:	00 00 00 00 00 
   20356:	e9 eb 04 00 00       	jmpq   20846 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1cb6>
   2035b:	4c 01 fb             	add    %r15,%rbx
   2035e:	b8 13 00 00 00       	mov    $0x13,%eax
   20363:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   20368:	49 89 dc             	mov    %rbx,%r12
   2036b:	48 83 bc 24 f0 03 00 	cmpq   $0x0,0x3f0(%rsp)
   20372:	00 00 
   20374:	0f 85 d7 05 00 00    	jne    20951 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1dc1>
   2037a:	e9 22 fd ff ff       	jmpq   200a1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1511>
   2037f:	b8 07 00 00 00       	mov    $0x7,%eax
   20384:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   20389:	45 31 e4             	xor    %r12d,%r12d
   2038c:	48 83 bc 24 f0 03 00 	cmpq   $0x0,0x3f0(%rsp)
   20393:	00 00 
   20395:	0f 85 b6 05 00 00    	jne    20951 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1dc1>
   2039b:	e9 01 fd ff ff       	jmpq   200a1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1511>
   203a0:	b8 13 00 00 00       	mov    $0x13,%eax
   203a5:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   203aa:	49 89 cc             	mov    %rcx,%r12
   203ad:	48 83 bc 24 f0 03 00 	cmpq   $0x0,0x3f0(%rsp)
   203b4:	00 00 
   203b6:	0f 85 95 05 00 00    	jne    20951 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1dc1>
   203bc:	e9 e0 fc ff ff       	jmpq   200a1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1511>
   203c1:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
   203c5:	48 3b 84 24 38 04 00 	cmp    0x438(%rsp),%rax
   203cc:	00 
   203cd:	0f 83 bb 03 00 00    	jae    2078e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1bfe>
   203d3:	48 6b c0 70          	imul   $0x70,%rax,%rax
   203d7:	48 01 c7             	add    %rax,%rdi
   203da:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
   203df:	4c 01 f1             	add    %r14,%rcx
   203e2:	48 2b 4c 24 78       	sub    0x78(%rsp),%rcx
   203e7:	48 2b 8c 24 e0 00 00 	sub    0xe0(%rsp),%rcx
   203ee:	00 
   203ef:	4c 01 f9             	add    %r15,%rcx
   203f2:	31 c0                	xor    %eax,%eax
   203f4:	80 7f 6a 01          	cmpb   $0x1,0x6a(%rdi)
   203f8:	0f 94 c0             	sete   %al
   203fb:	48 89 84 24 68 01 00 	mov    %rax,0x168(%rsp)
   20402:	00 
   20403:	48 89 8c 24 30 01 00 	mov    %rcx,0x130(%rsp)
   2040a:	00 
   2040b:	48 89 9c 24 38 01 00 	mov    %rbx,0x138(%rsp)
   20412:	00 
   20413:	48 89 ac 24 40 01 00 	mov    %rbp,0x140(%rsp)
   2041a:	00 
   2041b:	48 c7 84 24 48 01 00 	movq   $0x0,0x148(%rsp)
   20422:	00 00 00 00 00 
   20427:	48 89 bc 24 58 01 00 	mov    %rdi,0x158(%rsp)
   2042e:	00 
   2042f:	48 8d 84 24 00 04 00 	lea    0x400(%rsp),%rax
   20436:	00 
   20437:	48 89 84 24 60 01 00 	mov    %rax,0x160(%rsp)
   2043e:	00 
   2043f:	48 83 c7 08          	add    $0x8,%rdi
   20443:	ff 15 3f 56 02 00    	callq  *0x2563f(%rip)        # 45a88 <_GLOBAL_OFFSET_TABLE_+0x100>
   20449:	49 89 c4             	mov    %rax,%r12
   2044c:	49 89 d6             	mov    %rdx,%r14
   2044f:	48 89 9c 24 f0 02 00 	mov    %rbx,0x2f0(%rsp)
   20456:	00 
   20457:	48 89 ac 24 f8 02 00 	mov    %rbp,0x2f8(%rsp)
   2045e:	00 
   2045f:	48 89 84 24 00 03 00 	mov    %rax,0x300(%rsp)
   20466:	00 
   20467:	48 89 94 24 08 03 00 	mov    %rdx,0x308(%rsp)
   2046e:	00 
   2046f:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
   20476:	00 
   20477:	48 89 84 24 10 03 00 	mov    %rax,0x310(%rsp)
   2047e:	00 
   2047f:	48 85 d2             	test   %rdx,%rdx
   20482:	0f 84 8e 04 00 00    	je     20916 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1d86>
   20488:	bb 2d 00 00 00       	mov    $0x2d,%ebx
   2048d:	bd 2d 00 00 00       	mov    $0x2d,%ebp
   20492:	45 31 ff             	xor    %r15d,%r15d
   20495:	48 8d 84 24 60 01 00 	lea    0x160(%rsp),%rax
   2049c:	00 
   2049d:	49 8b 0c 24          	mov    (%r12),%rcx
   204a1:	45 0f b7 4c 24 0a    	movzwl 0xa(%r12),%r9d
   204a7:	45 8b 44 24 08       	mov    0x8(%r12),%r8d
   204ac:	48 8b 00             	mov    (%rax),%rax
   204af:	8b 50 20             	mov    0x20(%rax),%edx
   204b2:	48 8d bc 24 50 02 00 	lea    0x250(%rsp),%rdi
   204b9:	00 
   204ba:	48 8d b4 24 f0 02 00 	lea    0x2f0(%rsp),%rsi
   204c1:	00 
   204c2:	e8 f9 a3 fe ff       	callq  a8c0 <gimli::read::unit::parse_attribute>
   204c7:	83 bc 24 50 02 00 00 	cmpl   $0x1,0x250(%rsp)
   204ce:	01 
   204cf:	0f 84 1f 0c 00 00    	je     210f4 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2564>
   204d5:	49 83 c4 10          	add    $0x10,%r12
   204d9:	49 83 c6 ff          	add    $0xffffffffffffffff,%r14
   204dd:	4c 89 a4 24 00 03 00 	mov    %r12,0x300(%rsp)
   204e4:	00 
   204e5:	4c 89 b4 24 08 03 00 	mov    %r14,0x308(%rsp)
   204ec:	00 
   204ed:	f3 0f 6f 84 24 58 02 	movdqu 0x258(%rsp),%xmm0
   204f4:	00 00 
   204f6:	48 8d 84 24 68 02 00 	lea    0x268(%rsp),%rax
   204fd:	00 
   204fe:	0f 10 08             	movups (%rax),%xmm1
   20501:	0f 29 8c 24 50 06 00 	movaps %xmm1,0x650(%rsp)
   20508:	00 
   20509:	0f 29 8c 24 70 03 00 	movaps %xmm1,0x370(%rsp)
   20510:	00 
   20511:	66 48 0f 7e c0       	movq   %xmm0,%rax
   20516:	48 83 f8 2d          	cmp    $0x2d,%rax
   2051a:	0f 84 bd 04 00 00    	je     209dd <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1e4d>
   20520:	66 0f 7f 84 24 50 02 	movdqa %xmm0,0x250(%rsp)
   20527:	00 00 
   20529:	66 0f 6f 84 24 70 03 	movdqa 0x370(%rsp),%xmm0
   20530:	00 00 
   20532:	48 8d 84 24 68 02 00 	lea    0x268(%rsp),%rax
   20539:	00 
   2053a:	f3 0f 7f 40 f8       	movdqu %xmm0,-0x8(%rax)
   2053f:	8b 84 24 68 02 00 00 	mov    0x268(%rsp),%eax
   20546:	8d 48 fd             	lea    -0x3(%rax),%ecx
   20549:	66 83 f9 18          	cmp    $0x18,%cx
   2054d:	76 58                	jbe    205a7 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1a17>
   2054f:	83 c0 8e             	add    $0xffffff8e,%eax
   20552:	66 83 f8 1a          	cmp    $0x1a,%ax
   20556:	0f 87 e7 01 00 00    	ja     20743 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1bb3>
   2055c:	0f b7 c0             	movzwl %ax,%eax
   2055f:	48 8d 0d 2a 6c 01 00 	lea    0x16c2a(%rip),%rcx        # 37190 <_fini+0x186c>
   20566:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   2056a:	48 01 c8             	add    %rcx,%rax
   2056d:	ff e0                	jmpq   *%rax
   2056f:	48 8d bc 24 00 02 00 	lea    0x200(%rsp),%rdi
   20576:	00 
   20577:	48 8d b4 24 50 02 00 	lea    0x250(%rsp),%rsi
   2057e:	00 
   2057f:	e8 7c b5 fe ff       	callq  bb00 <gimli::read::unit::Attribute<R>::value>
   20584:	83 bc 24 00 02 00 00 	cmpl   $0x1c,0x200(%rsp)
   2058b:	1c 
   2058c:	0f 85 b1 01 00 00    	jne    20743 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1bb3>
   20592:	48 8b 84 24 08 02 00 	mov    0x208(%rsp),%rax
   20599:	00 
   2059a:	48 89 84 24 80 04 00 	mov    %rax,0x480(%rsp)
   205a1:	00 
   205a2:	e9 9c 01 00 00       	jmpq   20743 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1bb3>
   205a7:	0f b7 c1             	movzwl %cx,%eax
   205aa:	48 8d 0d 7b 6b 01 00 	lea    0x16b7b(%rip),%rcx        # 3712c <_fini+0x1808>
   205b1:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   205b5:	48 01 c8             	add    %rcx,%rax
   205b8:	ff e0                	jmpq   *%rax
   205ba:	48 8d bc 24 00 02 00 	lea    0x200(%rsp),%rdi
   205c1:	00 
   205c2:	48 8d b4 24 50 02 00 	lea    0x250(%rsp),%rsi
   205c9:	00 
   205ca:	e8 31 b5 fe ff       	callq  bb00 <gimli::read::unit::Attribute<R>::value>
   205cf:	48 8b 9c 24 00 02 00 	mov    0x200(%rsp),%rbx
   205d6:	00 
   205d7:	48 8b 84 24 08 02 00 	mov    0x208(%rsp),%rax
   205de:	00 
   205df:	48 89 84 24 e0 00 00 	mov    %rax,0xe0(%rsp)
   205e6:	00 
   205e7:	48 8b 84 24 10 02 00 	mov    0x210(%rsp),%rax
   205ee:	00 
   205ef:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   205f4:	e9 4a 01 00 00       	jmpq   20743 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1bb3>
   205f9:	48 8d bc 24 00 02 00 	lea    0x200(%rsp),%rdi
   20600:	00 
   20601:	48 8d b4 24 50 02 00 	lea    0x250(%rsp),%rsi
   20608:	00 
   20609:	e8 f2 b4 fe ff       	callq  bb00 <gimli::read::unit::Attribute<R>::value>
   2060e:	48 8b ac 24 00 02 00 	mov    0x200(%rsp),%rbp
   20615:	00 
   20616:	48 8b 84 24 08 02 00 	mov    0x208(%rsp),%rax
   2061d:	00 
   2061e:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   20623:	48 8b 84 24 10 02 00 	mov    0x210(%rsp),%rax
   2062a:	00 
   2062b:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   20630:	e9 0e 01 00 00       	jmpq   20743 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1bb3>
   20635:	48 8d bc 24 00 02 00 	lea    0x200(%rsp),%rdi
   2063c:	00 
   2063d:	48 8d b4 24 50 02 00 	lea    0x250(%rsp),%rsi
   20644:	00 
   20645:	e8 b6 b4 fe ff       	callq  bb00 <gimli::read::unit::Attribute<R>::value>
   2064a:	48 83 bc 24 00 02 00 	cmpq   $0x0,0x200(%rsp)
   20651:	00 00 
   20653:	0f 85 ea 00 00 00    	jne    20743 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1bb3>
   20659:	48 8b 84 24 08 02 00 	mov    0x208(%rsp),%rax
   20660:	00 
   20661:	48 89 84 24 78 04 00 	mov    %rax,0x478(%rsp)
   20668:	00 
   20669:	e9 d5 00 00 00       	jmpq   20743 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1bb3>
   2066e:	48 8d bc 24 00 02 00 	lea    0x200(%rsp),%rdi
   20675:	00 
   20676:	48 8d b4 24 50 02 00 	lea    0x250(%rsp),%rsi
   2067d:	00 
   2067e:	e8 7d b4 fe ff       	callq  bb00 <gimli::read::unit::Attribute<R>::value>
   20683:	48 8b 84 24 00 02 00 	mov    0x200(%rsp),%rax
   2068a:	00 
   2068b:	48 83 f8 10          	cmp    $0x10,%rax
   2068f:	75 10                	jne    206a1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1b11>
   20691:	48 8b 8c 24 08 02 00 	mov    0x208(%rsp),%rcx
   20698:	00 
   20699:	48 89 8c 24 80 00 00 	mov    %rcx,0x80(%rsp)
   206a0:	00 
   206a1:	83 f8 10             	cmp    $0x10,%eax
   206a4:	b8 01 00 00 00       	mov    $0x1,%eax
   206a9:	4c 0f 44 f8          	cmove  %rax,%r15
   206ad:	e9 91 00 00 00       	jmpq   20743 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1bb3>
   206b2:	48 8d bc 24 00 02 00 	lea    0x200(%rsp),%rdi
   206b9:	00 
   206ba:	48 8d b4 24 50 02 00 	lea    0x250(%rsp),%rsi
   206c1:	00 
   206c2:	e8 39 b4 fe ff       	callq  bb00 <gimli::read::unit::Attribute<R>::value>
   206c7:	83 bc 24 00 02 00 00 	cmpl   $0x12,0x200(%rsp)
   206ce:	12 
   206cf:	75 72                	jne    20743 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1bb3>
   206d1:	48 8b 84 24 08 02 00 	mov    0x208(%rsp),%rax
   206d8:	00 
   206d9:	48 89 84 24 90 04 00 	mov    %rax,0x490(%rsp)
   206e0:	00 
   206e1:	eb 60                	jmp    20743 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1bb3>
   206e3:	48 8d bc 24 00 02 00 	lea    0x200(%rsp),%rdi
   206ea:	00 
   206eb:	48 8d b4 24 50 02 00 	lea    0x250(%rsp),%rsi
   206f2:	00 
   206f3:	e8 08 b4 fe ff       	callq  bb00 <gimli::read::unit::Attribute<R>::value>
   206f8:	83 bc 24 00 02 00 00 	cmpl   $0x17,0x200(%rsp)
   206ff:	17 
   20700:	75 41                	jne    20743 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1bb3>
   20702:	48 8b 84 24 08 02 00 	mov    0x208(%rsp),%rax
   20709:	00 
   2070a:	48 89 84 24 98 04 00 	mov    %rax,0x498(%rsp)
   20711:	00 
   20712:	eb 2f                	jmp    20743 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1bb3>
   20714:	48 8d bc 24 00 02 00 	lea    0x200(%rsp),%rdi
   2071b:	00 
   2071c:	48 8d b4 24 50 02 00 	lea    0x250(%rsp),%rsi
   20723:	00 
   20724:	e8 d7 b3 fe ff       	callq  bb00 <gimli::read::unit::Attribute<R>::value>
   20729:	83 bc 24 00 02 00 00 	cmpl   $0xb,0x200(%rsp)
   20730:	0b 
   20731:	75 10                	jne    20743 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1bb3>
   20733:	48 8b 84 24 08 02 00 	mov    0x208(%rsp),%rax
   2073a:	00 
   2073b:	48 89 84 24 88 04 00 	mov    %rax,0x488(%rsp)
   20742:	00 
   20743:	4c 8b b4 24 08 03 00 	mov    0x308(%rsp),%r14
   2074a:	00 
   2074b:	4d 85 f6             	test   %r14,%r14
   2074e:	0f 84 45 02 00 00    	je     20999 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1e09>
   20754:	4c 8b a4 24 00 03 00 	mov    0x300(%rsp),%r12
   2075b:	00 
   2075c:	48 8b 84 24 10 03 00 	mov    0x310(%rsp),%rax
   20763:	00 
   20764:	48 83 c0 30          	add    $0x30,%rax
   20768:	e9 30 fd ff ff       	jmpq   2049d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x190d>
   2076d:	b8 09 00 00 00       	mov    $0x9,%eax
   20772:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   20777:	45 31 e4             	xor    %r12d,%r12d
   2077a:	48 83 bc 24 f0 03 00 	cmpq   $0x0,0x3f0(%rsp)
   20781:	00 00 
   20783:	0f 85 c8 01 00 00    	jne    20951 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1dc1>
   20789:	e9 13 f9 ff ff       	jmpq   200a1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1511>
   2078e:	4c 8b 94 24 40 04 00 	mov    0x440(%rsp),%r10
   20795:	00 
   20796:	4d 85 d2             	test   %r10,%r10
   20799:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   2079e:	74 73                	je     20813 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1c83>
   207a0:	4c 8b 84 24 48 04 00 	mov    0x448(%rsp),%r8
   207a7:	00 
   207a8:	45 0f b7 8a 32 05 00 	movzwl 0x532(%r10),%r9d
   207af:	00 
   207b0:	49 8d 7a f0          	lea    -0x10(%r10),%rdi
   207b4:	4d 89 cb             	mov    %r9,%r11
   207b7:	49 f7 db             	neg    %r11
   207ba:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   207c1:	49 8d 0c 03          	lea    (%r11,%rax,1),%rcx
   207c5:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
   207c9:	74 2d                	je     207f8 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1c68>
   207cb:	31 c9                	xor    %ecx,%ecx
   207cd:	49 39 54 c2 10       	cmp    %rdx,0x10(%r10,%rax,8)
   207d2:	0f 95 c1             	setne  %cl
   207d5:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
   207dc:	48 0f 47 ce          	cmova  %rsi,%rcx
   207e0:	48 83 c0 01          	add    $0x1,%rax
   207e4:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
   207e8:	74 11                	je     207fb <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1c6b>
   207ea:	48 83 c7 70          	add    $0x70,%rdi
   207ee:	48 85 c9             	test   %rcx,%rcx
   207f1:	75 ce                	jne    207c1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1c31>
   207f3:	e9 e2 fb ff ff       	jmpq   203da <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x184a>
   207f8:	4c 89 c8             	mov    %r9,%rax
   207fb:	4d 85 c0             	test   %r8,%r8
   207fe:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   20803:	74 0e                	je     20813 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1c83>
   20805:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   20809:	4d 8b 94 c2 38 05 00 	mov    0x538(%r10,%rax,8),%r10
   20810:	00 
   20811:	eb 95                	jmp    207a8 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1c18>
   20813:	48 8d 05 3e 6a 01 00 	lea    0x16a3e(%rip),%rax        # 37258 <_fini+0x1934>
   2081a:	48 89 84 24 10 01 00 	mov    %rax,0x110(%rsp)
   20821:	00 
   20822:	48 c7 84 24 18 01 00 	movq   $0x0,0x118(%rsp)
   20829:	00 00 00 00 00 
   2082e:	48 c7 84 24 68 01 00 	movq   $0x0,0x168(%rsp)
   20835:	00 00 00 00 00 
   2083a:	48 c7 84 24 48 01 00 	movq   $0x2,0x148(%rsp)
   20841:	00 02 00 00 00 
   20846:	48 8d bc 24 28 04 00 	lea    0x428(%rsp),%rdi
   2084d:	00 
   2084e:	e8 0d 56 fe ff       	callq  5e60 <core::ptr::drop_in_place>
   20853:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
   20858:	83 bc 24 48 05 00 00 	cmpl   $0x2e,0x548(%rsp)
   2085f:	2e 
   20860:	48 8b 6c 24 40       	mov    0x40(%rsp),%rbp
   20865:	0f 84 52 f0 ff ff    	je     1f8bd <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xd2d>
   2086b:	48 8d bc 24 a0 04 00 	lea    0x4a0(%rsp),%rdi
   20872:	00 
   20873:	e8 38 61 fe ff       	callq  69b0 <core::ptr::drop_in_place>
   20878:	e9 40 f0 ff ff       	jmpq   1f8bd <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xd2d>
   2087d:	49 01 c4             	add    %rax,%r12
   20880:	49 83 c4 01          	add    $0x1,%r12
   20884:	e9 18 f8 ff ff       	jmpq   200a1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1511>
   20889:	b8 08 00 00 00       	mov    $0x8,%eax
   2088e:	eb 0d                	jmp    2089d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1d0d>
   20890:	49 89 dc             	mov    %rbx,%r12
   20893:	e9 09 f8 ff ff       	jmpq   200a1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1511>
   20898:	b8 0a 00 00 00       	mov    $0xa,%eax
   2089d:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   208a2:	45 31 e4             	xor    %r12d,%r12d
   208a5:	e9 f7 f7 ff ff       	jmpq   200a1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1511>
   208aa:	48 8b 8c 24 50 06 00 	mov    0x650(%rsp),%rcx
   208b1:	00 
   208b2:	4c 8b a4 24 58 06 00 	mov    0x658(%rsp),%r12
   208b9:	00 
   208ba:	4c 89 e3             	mov    %r12,%rbx
   208bd:	48 c1 eb 08          	shr    $0x8,%rbx
   208c1:	48 89 c8             	mov    %rcx,%rax
   208c4:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   208c9:	49 0f a4 cc 38       	shld   $0x38,%rcx,%r12
   208ce:	48 8d 84 24 60 06 00 	lea    0x660(%rsp),%rax
   208d5:	00 
   208d6:	f3 0f 6f 00          	movdqu (%rax),%xmm0
   208da:	0f 10 48 10          	movups 0x10(%rax),%xmm1
   208de:	66 0f 7f 84 24 70 03 	movdqa %xmm0,0x370(%rsp)
   208e5:	00 00 
   208e7:	0f 29 8c 24 80 03 00 	movaps %xmm1,0x380(%rsp)
   208ee:	00 
   208ef:	31 c9                	xor    %ecx,%ecx
   208f1:	48 8b 6c 24 40       	mov    0x40(%rsp),%rbp
   208f6:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
   208fb:	e9 17 f8 ff ff       	jmpq   20117 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1587>
   20900:	b0 0e                	mov    $0xe,%al
   20902:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   20907:	48 8b 6c 24 40       	mov    0x40(%rsp),%rbp
   2090c:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
   20911:	e9 f2 f7 ff ff       	jmpq   20108 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1578>
   20916:	bd 2d 00 00 00       	mov    $0x2d,%ebp
   2091b:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
   20922:	00 
   20923:	45 31 ff             	xor    %r15d,%r15d
   20926:	bb 2d 00 00 00       	mov    $0x2d,%ebx
   2092b:	48 8d 8c 24 48 01 00 	lea    0x148(%rsp),%rcx
   20932:	00 
   20933:	eb 70                	jmp    209a5 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1e15>
   20935:	b8 06 00 00 00       	mov    $0x6,%eax
   2093a:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   2093f:	45 31 e4             	xor    %r12d,%r12d
   20942:	48 83 bc 24 f0 03 00 	cmpq   $0x0,0x3f0(%rsp)
   20949:	00 00 
   2094b:	0f 84 50 f7 ff ff    	je     200a1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1511>
   20951:	48 8b b4 24 00 04 00 	mov    0x400(%rsp),%rsi
   20958:	00 
   20959:	48 85 f6             	test   %rsi,%rsi
   2095c:	0f 84 3f f7 ff ff    	je     200a1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1511>
   20962:	48 8b bc 24 f8 03 00 	mov    0x3f8(%rsp),%rdi
   20969:	00 
   2096a:	48 85 ff             	test   %rdi,%rdi
   2096d:	0f 84 2e f7 ff ff    	je     200a1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1511>
   20973:	48 c1 e6 04          	shl    $0x4,%rsi
   20977:	0f 84 24 f7 ff ff    	je     200a1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1511>
   2097d:	ba 08 00 00 00       	mov    $0x8,%edx
   20982:	ff 15 70 52 02 00    	callq  *0x25270(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   20988:	e9 14 f7 ff ff       	jmpq   200a1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1511>
   2098d:	49 01 c4             	add    %rax,%r12
   20990:	49 83 c4 02          	add    $0x2,%r12
   20994:	e9 08 f7 ff ff       	jmpq   200a1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1511>
   20999:	48 8b 84 24 10 03 00 	mov    0x310(%rsp),%rax
   209a0:	00 
   209a1:	48 8d 48 18          	lea    0x18(%rax),%rcx
   209a5:	48 83 39 01          	cmpq   $0x1,(%rcx)
   209a9:	74 17                	je     209c2 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1e32>
   209ab:	48 8b 94 24 f0 02 00 	mov    0x2f0(%rsp),%rdx
   209b2:	00 
   209b3:	48 2b 50 08          	sub    0x8(%rax),%rdx
   209b7:	48 c7 01 01 00 00 00 	movq   $0x1,(%rcx)
   209be:	48 89 50 20          	mov    %rdx,0x20(%rax)
   209c2:	66 0f 6f 84 24 00 02 	movdqa 0x200(%rsp),%xmm0
   209c9:	00 00 
   209cb:	66 0f 7f 84 24 50 06 	movdqa %xmm0,0x650(%rsp)
   209d2:	00 00 
   209d4:	66 0f 7f 84 24 70 03 	movdqa %xmm0,0x370(%rsp)
   209db:	00 00 
   209dd:	48 83 fb 2d          	cmp    $0x2d,%rbx
   209e1:	75 04                	jne    209e7 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1e57>
   209e3:	31 c9                	xor    %ecx,%ecx
   209e5:	eb 4b                	jmp    20a32 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1ea2>
   209e7:	48 8d bc 24 10 01 00 	lea    0x110(%rsp),%rdi
   209ee:	00 
   209ef:	48 8d b4 24 f0 06 00 	lea    0x6f0(%rsp),%rsi
   209f6:	00 
   209f7:	48 8d 94 24 f0 03 00 	lea    0x3f0(%rsp),%rdx
   209fe:	00 
   209ff:	48 89 d9             	mov    %rbx,%rcx
   20a02:	4c 8b 84 24 e0 00 00 	mov    0xe0(%rsp),%r8
   20a09:	00 
   20a0a:	4c 8b 4c 24 78       	mov    0x78(%rsp),%r9
   20a0f:	e8 8c b8 fe ff       	callq  c2a0 <gimli::read::dwarf::Dwarf<R>::attr_string>
   20a14:	83 bc 24 10 01 00 00 	cmpl   $0x1,0x110(%rsp)
   20a1b:	01 
   20a1c:	48 8b 84 24 20 01 00 	mov    0x120(%rsp),%rax
   20a23:	00 
   20a24:	74 0a                	je     20a30 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1ea0>
   20a26:	48 8b 8c 24 18 01 00 	mov    0x118(%rsp),%rcx
   20a2d:	00 
   20a2e:	eb 02                	jmp    20a32 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1ea2>
   20a30:	31 c9                	xor    %ecx,%ecx
   20a32:	48 89 8c 24 58 04 00 	mov    %rcx,0x458(%rsp)
   20a39:	00 
   20a3a:	48 89 84 24 60 04 00 	mov    %rax,0x460(%rsp)
   20a41:	00 
   20a42:	48 83 fd 2d          	cmp    $0x2d,%rbp
   20a46:	75 05                	jne    20a4d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1ebd>
   20a48:	45 31 e4             	xor    %r12d,%r12d
   20a4b:	eb 49                	jmp    20a96 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1f06>
   20a4d:	48 8d bc 24 10 01 00 	lea    0x110(%rsp),%rdi
   20a54:	00 
   20a55:	48 8d b4 24 f0 06 00 	lea    0x6f0(%rsp),%rsi
   20a5c:	00 
   20a5d:	48 8d 94 24 f0 03 00 	lea    0x3f0(%rsp),%rdx
   20a64:	00 
   20a65:	48 89 e9             	mov    %rbp,%rcx
   20a68:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   20a6d:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   20a72:	e8 29 b8 fe ff       	callq  c2a0 <gimli::read::dwarf::Dwarf<R>::attr_string>
   20a77:	83 bc 24 10 01 00 00 	cmpl   $0x1,0x110(%rsp)
   20a7e:	01 
   20a7f:	4c 8b b4 24 20 01 00 	mov    0x120(%rsp),%r14
   20a86:	00 
   20a87:	74 0a                	je     20a93 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1f03>
   20a89:	4c 8b a4 24 18 01 00 	mov    0x118(%rsp),%r12
   20a90:	00 
   20a91:	eb 03                	jmp    20a96 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1f06>
   20a93:	45 31 e4             	xor    %r12d,%r12d
   20a96:	4c 89 a4 24 68 04 00 	mov    %r12,0x468(%rsp)
   20a9d:	00 
   20a9e:	4c 89 b4 24 70 04 00 	mov    %r14,0x470(%rsp)
   20aa5:	00 
   20aa6:	4d 85 ff             	test   %r15,%r15
   20aa9:	74 46                	je     20af1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1f61>
   20aab:	48 8b 84 24 58 04 00 	mov    0x458(%rsp),%rax
   20ab2:	00 
   20ab3:	48 89 84 24 e0 00 00 	mov    %rax,0xe0(%rsp)
   20aba:	00 
   20abb:	48 8b 84 24 60 04 00 	mov    0x460(%rsp),%rax
   20ac2:	00 
   20ac3:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   20ac8:	48 8b bc 24 20 07 00 	mov    0x720(%rsp),%rdi
   20acf:	00 
   20ad0:	48 8b 94 24 28 07 00 	mov    0x728(%rsp),%rdx
   20ad7:	00 
   20ad8:	48 2b 94 24 80 00 00 	sub    0x80(%rsp),%rdx
   20adf:	00 
   20ae0:	73 22                	jae    20b04 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1f74>
   20ae2:	bb 13 00 00 00       	mov    $0x13,%ebx
   20ae7:	b0 01                	mov    $0x1,%al
   20ae9:	49 89 ff             	mov    %rdi,%r15
   20aec:	e9 4f 04 00 00       	jmpq   20f40 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x23b0>
   20af1:	bd 2e 00 00 00       	mov    $0x2e,%ebp
   20af6:	89 44 24 18          	mov    %eax,0x18(%rsp)
   20afa:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   20aff:	e9 ca 06 00 00       	jmpq   211ce <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x263e>
   20b04:	48 03 bc 24 80 00 00 	add    0x80(%rsp),%rdi
   20b0b:	00 
   20b0c:	48 83 fa 04          	cmp    $0x4,%rdx
   20b10:	73 1c                	jae    20b2e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1f9e>
   20b12:	48 89 f9             	mov    %rdi,%rcx
   20b15:	48 81 e1 00 ff ff ff 	and    $0xffffffffffffff00,%rcx
   20b1c:	b8 13 00 00 00       	mov    $0x13,%eax
   20b21:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   20b28:	00 
   20b29:	e9 d5 00 00 00       	jmpq   20c03 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2073>
   20b2e:	8a 84 24 20 04 00 00 	mov    0x420(%rsp),%al
   20b35:	88 44 24 10          	mov    %al,0x10(%rsp)
   20b39:	48 89 f9             	mov    %rdi,%rcx
   20b3c:	48 8d 47 04          	lea    0x4(%rdi),%rax
   20b40:	48 8d 72 fc          	lea    -0x4(%rdx),%rsi
   20b44:	44 8b 3f             	mov    (%rdi),%r15d
   20b47:	4c 89 f9             	mov    %r15,%rcx
   20b4a:	48 c1 e9 04          	shr    $0x4,%rcx
   20b4e:	81 f9 ff ff ff 0f    	cmp    $0xfffffff,%ecx
   20b54:	73 4f                	jae    20ba5 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2015>
   20b56:	c6 84 24 a8 00 00 00 	movb   $0x4,0xa8(%rsp)
   20b5d:	04 
   20b5e:	31 c9                	xor    %ecx,%ecx
   20b60:	48 89 c2             	mov    %rax,%rdx
   20b63:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   20b68:	ba 13 00 00 00       	mov    $0x13,%edx
   20b6d:	48 89 54 24 48       	mov    %rdx,0x48(%rsp)
   20b72:	4c 39 fe             	cmp    %r15,%rsi
   20b75:	0f 82 bf 02 00 00    	jb     20e3a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x22aa>
   20b7b:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   20b80:	4c 89 7c 24 38       	mov    %r15,0x38(%rsp)
   20b85:	49 83 ff 02          	cmp    $0x2,%r15
   20b89:	0f 83 ab 00 00 00    	jae    20c3a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x20aa>
   20b8f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   20b94:	e9 a1 02 00 00       	jmpq   20e3a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x22aa>
   20b99:	49 01 c4             	add    %rax,%r12
   20b9c:	49 83 c4 03          	add    $0x3,%r12
   20ba0:	e9 fc f4 ff ff       	jmpq   200a1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1511>
   20ba5:	41 83 ff ff          	cmp    $0xffffffff,%r15d
   20ba9:	74 34                	je     20bdf <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x204f>
   20bab:	b8 10 00 00 00       	mov    $0x10,%eax
   20bb0:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   20bb7:	00 
   20bb8:	31 ff                	xor    %edi,%edi
   20bba:	31 c9                	xor    %ecx,%ecx
   20bbc:	eb 45                	jmp    20c03 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2073>
   20bbe:	b8 0d 00 00 00       	mov    $0xd,%eax
   20bc3:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   20bc8:	45 31 e4             	xor    %r12d,%r12d
   20bcb:	48 83 bc 24 f0 03 00 	cmpq   $0x0,0x3f0(%rsp)
   20bd2:	00 00 
   20bd4:	0f 85 77 fd ff ff    	jne    20951 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1dc1>
   20bda:	e9 c2 f4 ff ff       	jmpq   200a1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1511>
   20bdf:	48 83 fe 08          	cmp    $0x8,%rsi
   20be3:	0f 83 95 00 00 00    	jae    20c7e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x20ee>
   20be9:	b9 13 00 00 00       	mov    $0x13,%ecx
   20bee:	48 89 8c 24 80 00 00 	mov    %rcx,0x80(%rsp)
   20bf5:	00 
   20bf6:	48 89 c1             	mov    %rax,%rcx
   20bf9:	48 81 e1 00 ff ff ff 	and    $0xffffffffffffff00,%rcx
   20c00:	48 89 c7             	mov    %rax,%rdi
   20c03:	44 0f b6 ff          	movzbl %dil,%r15d
   20c07:	49 09 cf             	or     %rcx,%r15
   20c0a:	b1 01                	mov    $0x1,%cl
   20c0c:	89 44 24 18          	mov    %eax,0x18(%rsp)
   20c10:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   20c15:	31 c0                	xor    %eax,%eax
   20c17:	e9 3d 02 00 00       	jmpq   20e59 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x22c9>
   20c1c:	b8 13 00 00 00       	mov    $0x13,%eax
   20c21:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   20c26:	48 83 bc 24 f0 03 00 	cmpq   $0x0,0x3f0(%rsp)
   20c2d:	00 00 
   20c2f:	0f 85 1c fd ff ff    	jne    20951 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1dc1>
   20c35:	e9 67 f4 ff ff       	jmpq   200a1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1511>
   20c3a:	48 8d 78 02          	lea    0x2(%rax),%rdi
   20c3e:	49 8d 57 fe          	lea    -0x2(%r15),%rdx
   20c42:	48 89 fe             	mov    %rdi,%rsi
   20c45:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   20c4a:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
   20c4f:	48 89 d6             	mov    %rdx,%rsi
   20c52:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   20c57:	0f b7 10             	movzwl (%rax),%edx
   20c5a:	0f b7 ea             	movzwl %dx,%ebp
   20c5d:	89 54 24 18          	mov    %edx,0x18(%rsp)
   20c61:	83 c2 fe             	add    $0xfffffffe,%edx
   20c64:	66 83 fa 03          	cmp    $0x3,%dx
   20c68:	76 50                	jbe    20cba <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x212a>
   20c6a:	b8 11 00 00 00       	mov    $0x11,%eax
   20c6f:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   20c74:	48 89 6c 24 08       	mov    %rbp,0x8(%rsp)
   20c79:	e9 bc 01 00 00       	jmpq   20e3a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x22aa>
   20c7e:	48 83 c2 f4          	add    $0xfffffffffffffff4,%rdx
   20c82:	48 89 f8             	mov    %rdi,%rax
   20c85:	4c 8b 7f 04          	mov    0x4(%rdi),%r15
   20c89:	48 83 c0 0c          	add    $0xc,%rax
   20c8d:	c6 84 24 a8 00 00 00 	movb   $0x8,0xa8(%rsp)
   20c94:	08 
   20c95:	b1 01                	mov    $0x1,%cl
   20c97:	48 89 c6             	mov    %rax,%rsi
   20c9a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   20c9f:	48 89 d6             	mov    %rdx,%rsi
   20ca2:	ba 13 00 00 00       	mov    $0x13,%edx
   20ca7:	48 89 54 24 48       	mov    %rdx,0x48(%rsp)
   20cac:	4c 39 fe             	cmp    %r15,%rsi
   20caf:	0f 82 85 01 00 00    	jb     20e3a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x22aa>
   20cb5:	e9 c1 fe ff ff       	jmpq   20b7b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1feb>
   20cba:	66 83 7c 24 18 04    	cmpw   $0x4,0x18(%rsp)
   20cc0:	76 60                	jbe    20d22 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2192>
   20cc2:	48 85 f6             	test   %rsi,%rsi
   20cc5:	0f 84 6f 01 00 00    	je     20e3a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x22aa>
   20ccb:	48 8d 70 03          	lea    0x3(%rax),%rsi
   20ccf:	48 89 f2             	mov    %rsi,%rdx
   20cd2:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   20cd7:	48 89 74 24 30       	mov    %rsi,0x30(%rsp)
   20cdc:	4c 89 fa             	mov    %r15,%rdx
   20cdf:	48 83 c2 fd          	add    $0xfffffffffffffffd,%rdx
   20ce3:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   20ce8:	0f 84 4c 01 00 00    	je     20e3a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x22aa>
   20cee:	8a 50 02             	mov    0x2(%rax),%dl
   20cf1:	88 54 24 10          	mov    %dl,0x10(%rsp)
   20cf5:	48 8d 78 04          	lea    0x4(%rax),%rdi
   20cf9:	49 8d 57 fc          	lea    -0x4(%r15),%rdx
   20cfd:	48 89 fe             	mov    %rdi,%rsi
   20d00:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   20d05:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
   20d0a:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   20d0f:	80 78 03 00          	cmpb   $0x0,0x3(%rax)
   20d13:	74 0a                	je     20d1f <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x218f>
   20d15:	b8 40 00 00 00       	mov    $0x40,%eax
   20d1a:	e9 16 01 00 00       	jmpq   20e35 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x22a5>
   20d1f:	48 89 d6             	mov    %rdx,%rsi
   20d22:	84 c9                	test   %cl,%cl
   20d24:	74 30                	je     20d56 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x21c6>
   20d26:	48 83 fe 07          	cmp    $0x7,%rsi
   20d2a:	0f 86 0a 01 00 00    	jbe    20e3a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x22aa>
   20d30:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   20d35:	48 8d 41 08          	lea    0x8(%rcx),%rax
   20d39:	48 83 c6 f8          	add    $0xfffffffffffffff8,%rsi
   20d3d:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   20d42:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   20d47:	48 89 74 24 60       	mov    %rsi,0x60(%rsp)
   20d4c:	48 89 74 24 38       	mov    %rsi,0x38(%rsp)
   20d51:	48 8b 01             	mov    (%rcx),%rax
   20d54:	eb 2d                	jmp    20d83 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x21f3>
   20d56:	48 83 fe 04          	cmp    $0x4,%rsi
   20d5a:	0f 82 da 00 00 00    	jb     20e3a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x22aa>
   20d60:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   20d65:	48 8d 41 04          	lea    0x4(%rcx),%rax
   20d69:	48 83 c6 fc          	add    $0xfffffffffffffffc,%rsi
   20d6d:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   20d72:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   20d77:	48 89 74 24 60       	mov    %rsi,0x60(%rsp)
   20d7c:	48 89 74 24 38       	mov    %rsi,0x38(%rsp)
   20d81:	8b 01                	mov    (%rcx),%eax
   20d83:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   20d88:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   20d8d:	48 29 44 24 60       	sub    %rax,0x60(%rsp)
   20d92:	0f 82 8e 00 00 00    	jb     20e26 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2296>
   20d98:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   20d9d:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   20da2:	48 85 c0             	test   %rax,%rax
   20da5:	74 7f                	je     20e26 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2296>
   20da7:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
   20dac:	48 8d 71 01          	lea    0x1(%rcx),%rsi
   20db0:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   20db5:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
   20db9:	48 89 f2             	mov    %rsi,%rdx
   20dbc:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   20dc1:	48 89 74 24 30       	mov    %rsi,0x30(%rsp)
   20dc6:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   20dcb:	8a 09                	mov    (%rcx),%cl
   20dcd:	88 8c 24 08 01 00 00 	mov    %cl,0x108(%rsp)
   20dd4:	84 c9                	test   %cl,%cl
   20dd6:	74 58                	je     20e30 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x22a0>
   20dd8:	66 83 7c 24 18 04    	cmpw   $0x4,0x18(%rsp)
   20dde:	0f 82 24 0e 00 00    	jb     21c08 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3078>
   20de4:	48 85 c0             	test   %rax,%rax
   20de7:	74 51                	je     20e3a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x22aa>
   20de9:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
   20dee:	48 8d 71 02          	lea    0x2(%rcx),%rsi
   20df2:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   20df7:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
   20dfb:	48 89 f2             	mov    %rsi,%rdx
   20dfe:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   20e03:	48 89 74 24 30       	mov    %rsi,0x30(%rsp)
   20e08:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   20e0d:	8a 49 01             	mov    0x1(%rcx),%cl
   20e10:	88 8c 24 b8 02 00 00 	mov    %cl,0x2b8(%rsp)
   20e17:	84 c9                	test   %cl,%cl
   20e19:	0f 85 f1 0d 00 00    	jne    21c10 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3080>
   20e1f:	b8 1b 00 00 00       	mov    $0x1b,%eax
   20e24:	eb 0f                	jmp    20e35 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x22a5>
   20e26:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
   20e2b:	e9 5f fd ff ff       	jmpq   20b8f <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1fff>
   20e30:	b8 1a 00 00 00       	mov    $0x1a,%eax
   20e35:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   20e3a:	31 c0                	xor    %eax,%eax
   20e3c:	b1 01                	mov    $0x1,%cl
   20e3e:	89 54 24 18          	mov    %edx,0x18(%rsp)
   20e42:	4c 8b 7c 24 08       	mov    0x8(%rsp),%r15
   20e47:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
   20e4c:	48 89 94 24 80 00 00 	mov    %rdx,0x80(%rsp)
   20e53:	00 
   20e54:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   20e59:	48 25 00 ff ff ff    	and    $0xffffffffffffff00,%rax
   20e5f:	0f b6 9c 24 80 00 00 	movzbl 0x80(%rsp),%ebx
   20e66:	00 
   20e67:	48 09 c3             	or     %rax,%rbx
   20e6a:	48 8b 84 24 60 02 00 	mov    0x260(%rsp),%rax
   20e71:	00 
   20e72:	48 89 84 24 30 09 00 	mov    %rax,0x930(%rsp)
   20e79:	00 
   20e7a:	0f 28 84 24 50 02 00 	movaps 0x250(%rsp),%xmm0
   20e81:	00 
   20e82:	0f 29 84 24 20 09 00 	movaps %xmm0,0x920(%rsp)
   20e89:	00 
   20e8a:	0f 28 84 24 f0 02 00 	movaps 0x2f0(%rsp),%xmm0
   20e91:	00 
   20e92:	0f 29 84 24 00 09 00 	movaps %xmm0,0x900(%rsp)
   20e99:	00 
   20e9a:	48 8b 84 24 00 03 00 	mov    0x300(%rsp),%rax
   20ea1:	00 
   20ea2:	48 89 84 24 10 09 00 	mov    %rax,0x910(%rsp)
   20ea9:	00 
   20eaa:	0f 28 84 24 60 09 00 	movaps 0x960(%rsp),%xmm0
   20eb1:	00 
   20eb2:	0f 29 84 24 e0 08 00 	movaps %xmm0,0x8e0(%rsp)
   20eb9:	00 
   20eba:	48 8b 84 24 70 09 00 	mov    0x970(%rsp),%rax
   20ec1:	00 
   20ec2:	48 89 84 24 f0 08 00 	mov    %rax,0x8f0(%rsp)
   20ec9:	00 
   20eca:	0f 28 84 24 40 09 00 	movaps 0x940(%rsp),%xmm0
   20ed1:	00 
   20ed2:	0f 29 84 24 c0 08 00 	movaps %xmm0,0x8c0(%rsp)
   20ed9:	00 
   20eda:	48 8b 84 24 50 09 00 	mov    0x950(%rsp),%rax
   20ee1:	00 
   20ee2:	48 89 84 24 d0 08 00 	mov    %rax,0x8d0(%rsp)
   20ee9:	00 
   20eea:	48 8b 84 24 30 01 00 	mov    0x130(%rsp),%rax
   20ef1:	00 
   20ef2:	48 89 84 24 70 06 00 	mov    %rax,0x670(%rsp)
   20ef9:	00 
   20efa:	66 0f 6f 84 24 10 01 	movdqa 0x110(%rsp),%xmm0
   20f01:	00 00 
   20f03:	0f 28 8c 24 20 01 00 	movaps 0x120(%rsp),%xmm1
   20f0a:	00 
   20f0b:	0f 29 8c 24 60 06 00 	movaps %xmm1,0x660(%rsp)
   20f12:	00 
   20f13:	66 0f 7f 84 24 50 06 	movdqa %xmm0,0x650(%rsp)
   20f1a:	00 00 
   20f1c:	0f b7 84 24 04 02 00 	movzwl 0x204(%rsp),%eax
   20f23:	00 
   20f24:	66 89 84 24 fc 01 00 	mov    %ax,0x1fc(%rsp)
   20f2b:	00 
   20f2c:	8b 84 24 00 02 00 00 	mov    0x200(%rsp),%eax
   20f33:	89 84 24 f8 01 00 00 	mov    %eax,0x1f8(%rsp)
   20f3a:	84 c9                	test   %cl,%cl
   20f3c:	74 10                	je     20f4e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x23be>
   20f3e:	b0 01                	mov    $0x1,%al
   20f40:	89 4c 24 18          	mov    %ecx,0x18(%rsp)
   20f44:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   20f49:	e9 d2 00 00 00       	jmpq   21020 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2490>
   20f4e:	48 8b 84 24 30 09 00 	mov    0x930(%rsp),%rax
   20f55:	00 
   20f56:	48 89 84 24 60 02 00 	mov    %rax,0x260(%rsp)
   20f5d:	00 
   20f5e:	0f 28 84 24 20 09 00 	movaps 0x920(%rsp),%xmm0
   20f65:	00 
   20f66:	0f 29 84 24 50 02 00 	movaps %xmm0,0x250(%rsp)
   20f6d:	00 
   20f6e:	0f 28 84 24 00 09 00 	movaps 0x900(%rsp),%xmm0
   20f75:	00 
   20f76:	0f 29 84 24 f0 02 00 	movaps %xmm0,0x2f0(%rsp)
   20f7d:	00 
   20f7e:	48 8b 84 24 10 09 00 	mov    0x910(%rsp),%rax
   20f85:	00 
   20f86:	48 89 84 24 00 03 00 	mov    %rax,0x300(%rsp)
   20f8d:	00 
   20f8e:	0f 28 84 24 e0 08 00 	movaps 0x8e0(%rsp),%xmm0
   20f95:	00 
   20f96:	0f 29 84 24 00 02 00 	movaps %xmm0,0x200(%rsp)
   20f9d:	00 
   20f9e:	48 8b 84 24 f0 08 00 	mov    0x8f0(%rsp),%rax
   20fa5:	00 
   20fa6:	48 89 84 24 10 02 00 	mov    %rax,0x210(%rsp)
   20fad:	00 
   20fae:	0f 28 84 24 c0 08 00 	movaps 0x8c0(%rsp),%xmm0
   20fb5:	00 
   20fb6:	0f 29 84 24 c0 00 00 	movaps %xmm0,0xc0(%rsp)
   20fbd:	00 
   20fbe:	48 8b 84 24 d0 08 00 	mov    0x8d0(%rsp),%rax
   20fc5:	00 
   20fc6:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
   20fcd:	00 
   20fce:	48 8b 84 24 70 06 00 	mov    0x670(%rsp),%rax
   20fd5:	00 
   20fd6:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
   20fdd:	00 
   20fde:	66 0f 6f 84 24 50 06 	movdqa 0x650(%rsp),%xmm0
   20fe5:	00 00 
   20fe7:	0f 28 8c 24 60 06 00 	movaps 0x660(%rsp),%xmm1
   20fee:	00 
   20fef:	0f 29 8c 24 20 01 00 	movaps %xmm1,0x120(%rsp)
   20ff6:	00 
   20ff7:	66 0f 7f 84 24 10 01 	movdqa %xmm0,0x110(%rsp)
   20ffe:	00 00 
   21000:	0f b7 84 24 fc 01 00 	movzwl 0x1fc(%rsp),%eax
   21007:	00 
   21008:	66 89 84 24 dc 02 00 	mov    %ax,0x2dc(%rsp)
   2100f:	00 
   21010:	8b 84 24 f8 01 00 00 	mov    0x1f8(%rsp),%eax
   21017:	89 84 24 d8 02 00 00 	mov    %eax,0x2d8(%rsp)
   2101e:	31 c0                	xor    %eax,%eax
   21020:	48 8b 8c 24 60 02 00 	mov    0x260(%rsp),%rcx
   21027:	00 
   21028:	48 89 8c 24 b0 08 00 	mov    %rcx,0x8b0(%rsp)
   2102f:	00 
   21030:	0f 28 84 24 50 02 00 	movaps 0x250(%rsp),%xmm0
   21037:	00 
   21038:	0f 29 84 24 a0 08 00 	movaps %xmm0,0x8a0(%rsp)
   2103f:	00 
   21040:	0f 28 84 24 f0 02 00 	movaps 0x2f0(%rsp),%xmm0
   21047:	00 
   21048:	0f 29 84 24 80 08 00 	movaps %xmm0,0x880(%rsp)
   2104f:	00 
   21050:	48 8b 8c 24 00 03 00 	mov    0x300(%rsp),%rcx
   21057:	00 
   21058:	48 89 8c 24 90 08 00 	mov    %rcx,0x890(%rsp)
   2105f:	00 
   21060:	0f 28 84 24 00 02 00 	movaps 0x200(%rsp),%xmm0
   21067:	00 
   21068:	0f 29 84 24 60 08 00 	movaps %xmm0,0x860(%rsp)
   2106f:	00 
   21070:	48 8b 8c 24 10 02 00 	mov    0x210(%rsp),%rcx
   21077:	00 
   21078:	48 89 8c 24 70 08 00 	mov    %rcx,0x870(%rsp)
   2107f:	00 
   21080:	0f 28 84 24 c0 00 00 	movaps 0xc0(%rsp),%xmm0
   21087:	00 
   21088:	0f 29 84 24 40 08 00 	movaps %xmm0,0x840(%rsp)
   2108f:	00 
   21090:	48 8b 8c 24 d0 00 00 	mov    0xd0(%rsp),%rcx
   21097:	00 
   21098:	48 89 8c 24 50 08 00 	mov    %rcx,0x850(%rsp)
   2109f:	00 
   210a0:	48 8b 8c 24 30 01 00 	mov    0x130(%rsp),%rcx
   210a7:	00 
   210a8:	48 89 8c 24 90 03 00 	mov    %rcx,0x390(%rsp)
   210af:	00 
   210b0:	66 0f 6f 84 24 10 01 	movdqa 0x110(%rsp),%xmm0
   210b7:	00 00 
   210b9:	0f 28 8c 24 20 01 00 	movaps 0x120(%rsp),%xmm1
   210c0:	00 
   210c1:	0f 29 8c 24 80 03 00 	movaps %xmm1,0x380(%rsp)
   210c8:	00 
   210c9:	66 0f 7f 84 24 70 03 	movdqa %xmm0,0x370(%rsp)
   210d0:	00 00 
   210d2:	0f b7 8c 24 dc 02 00 	movzwl 0x2dc(%rsp),%ecx
   210d9:	00 
   210da:	66 89 8c 24 f4 01 00 	mov    %cx,0x1f4(%rsp)
   210e1:	00 
   210e2:	8b 8c 24 d8 02 00 00 	mov    0x2d8(%rsp),%ecx
   210e9:	89 8c 24 f0 01 00 00 	mov    %ecx,0x1f0(%rsp)
   210f0:	84 c0                	test   %al,%al
   210f2:	74 0a                	je     210fe <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x256e>
   210f4:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   210f9:	e9 48 f7 ff ff       	jmpq   20846 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1cb6>
   210fe:	48 8b 84 24 b0 08 00 	mov    0x8b0(%rsp),%rax
   21105:	00 
   21106:	48 89 84 24 30 08 00 	mov    %rax,0x830(%rsp)
   2110d:	00 
   2110e:	0f 28 84 24 a0 08 00 	movaps 0x8a0(%rsp),%xmm0
   21115:	00 
   21116:	0f 29 84 24 20 08 00 	movaps %xmm0,0x820(%rsp)
   2111d:	00 
   2111e:	0f 28 84 24 80 08 00 	movaps 0x880(%rsp),%xmm0
   21125:	00 
   21126:	0f 29 84 24 00 08 00 	movaps %xmm0,0x800(%rsp)
   2112d:	00 
   2112e:	48 8b 84 24 90 08 00 	mov    0x890(%rsp),%rax
   21135:	00 
   21136:	48 89 84 24 10 08 00 	mov    %rax,0x810(%rsp)
   2113d:	00 
   2113e:	0f 28 84 24 60 08 00 	movaps 0x860(%rsp),%xmm0
   21145:	00 
   21146:	0f 29 84 24 e0 07 00 	movaps %xmm0,0x7e0(%rsp)
   2114d:	00 
   2114e:	48 8b 84 24 70 08 00 	mov    0x870(%rsp),%rax
   21155:	00 
   21156:	48 89 84 24 f0 07 00 	mov    %rax,0x7f0(%rsp)
   2115d:	00 
   2115e:	0f 28 84 24 40 08 00 	movaps 0x840(%rsp),%xmm0
   21165:	00 
   21166:	0f 29 84 24 c0 07 00 	movaps %xmm0,0x7c0(%rsp)
   2116d:	00 
   2116e:	48 8b 84 24 50 08 00 	mov    0x850(%rsp),%rax
   21175:	00 
   21176:	48 89 84 24 d0 07 00 	mov    %rax,0x7d0(%rsp)
   2117d:	00 
   2117e:	48 8b 84 24 90 03 00 	mov    0x390(%rsp),%rax
   21185:	00 
   21186:	48 89 84 24 c0 06 00 	mov    %rax,0x6c0(%rsp)
   2118d:	00 
   2118e:	66 0f 6f 84 24 70 03 	movdqa 0x370(%rsp),%xmm0
   21195:	00 00 
   21197:	0f 28 8c 24 80 03 00 	movaps 0x380(%rsp),%xmm1
   2119e:	00 
   2119f:	0f 29 8c 24 b0 06 00 	movaps %xmm1,0x6b0(%rsp)
   211a6:	00 
   211a7:	66 0f 7f 84 24 a0 06 	movdqa %xmm0,0x6a0(%rsp)
   211ae:	00 00 
   211b0:	0f b7 84 24 f4 01 00 	movzwl 0x1f4(%rsp),%eax
   211b7:	00 
   211b8:	66 89 84 24 ec 01 00 	mov    %ax,0x1ec(%rsp)
   211bf:	00 
   211c0:	8b 84 24 f0 01 00 00 	mov    0x1f0(%rsp),%eax
   211c7:	89 84 24 e8 01 00 00 	mov    %eax,0x1e8(%rsp)
   211ce:	83 bc 24 48 05 00 00 	cmpl   $0x2e,0x548(%rsp)
   211d5:	2e 
   211d6:	74 0d                	je     211e5 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2655>
   211d8:	48 8d bc 24 a0 04 00 	lea    0x4a0(%rsp),%rdi
   211df:	00 
   211e0:	e8 cb 57 fe ff       	callq  69b0 <core::ptr::drop_in_place>
   211e5:	48 89 9c 24 a0 04 00 	mov    %rbx,0x4a0(%rsp)
   211ec:	00 
   211ed:	4c 89 bc 24 a8 04 00 	mov    %r15,0x4a8(%rsp)
   211f4:	00 
   211f5:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   211fa:	48 89 84 24 b0 04 00 	mov    %rax,0x4b0(%rsp)
   21201:	00 
   21202:	48 8b 84 24 c8 01 00 	mov    0x1c8(%rsp),%rax
   21209:	00 
   2120a:	48 89 84 24 b8 04 00 	mov    %rax,0x4b8(%rsp)
   21211:	00 
   21212:	48 8b 84 24 e8 03 00 	mov    0x3e8(%rsp),%rax
   21219:	00 
   2121a:	48 89 84 24 c0 04 00 	mov    %rax,0x4c0(%rsp)
   21221:	00 
   21222:	48 8b 84 24 30 08 00 	mov    0x830(%rsp),%rax
   21229:	00 
   2122a:	48 8d 8c 24 10 04 00 	lea    0x410(%rsp),%rcx
   21231:	00 
   21232:	48 89 81 c8 00 00 00 	mov    %rax,0xc8(%rcx)
   21239:	0f 28 84 24 20 08 00 	movaps 0x820(%rsp),%xmm0
   21240:	00 
   21241:	0f 11 81 b8 00 00 00 	movups %xmm0,0xb8(%rcx)
   21248:	48 8b 84 24 10 08 00 	mov    0x810(%rsp),%rax
   2124f:	00 
   21250:	48 89 81 e0 00 00 00 	mov    %rax,0xe0(%rcx)
   21257:	0f 28 84 24 00 08 00 	movaps 0x800(%rsp),%xmm0
   2125e:	00 
   2125f:	0f 11 81 d0 00 00 00 	movups %xmm0,0xd0(%rcx)
   21266:	48 8b 84 24 f0 07 00 	mov    0x7f0(%rsp),%rax
   2126d:	00 
   2126e:	48 89 81 f8 00 00 00 	mov    %rax,0xf8(%rcx)
   21275:	0f 28 84 24 e0 07 00 	movaps 0x7e0(%rsp),%xmm0
   2127c:	00 
   2127d:	0f 11 81 e8 00 00 00 	movups %xmm0,0xe8(%rcx)
   21284:	48 8b 84 24 d0 07 00 	mov    0x7d0(%rsp),%rax
   2128b:	00 
   2128c:	48 89 81 10 01 00 00 	mov    %rax,0x110(%rcx)
   21293:	0f 28 84 24 c0 07 00 	movaps 0x7c0(%rsp),%xmm0
   2129a:	00 
   2129b:	0f 11 81 00 01 00 00 	movups %xmm0,0x100(%rcx)
   212a2:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
   212a7:	48 89 84 24 28 05 00 	mov    %rax,0x528(%rsp)
   212ae:	00 
   212af:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   212b4:	48 89 84 24 30 05 00 	mov    %rax,0x530(%rsp)
   212bb:	00 
   212bc:	4c 89 a4 24 38 05 00 	mov    %r12,0x538(%rsp)
   212c3:	00 
   212c4:	4c 89 b4 24 40 05 00 	mov    %r14,0x540(%rsp)
   212cb:	00 
   212cc:	48 89 ac 24 48 05 00 	mov    %rbp,0x548(%rsp)
   212d3:	00 
   212d4:	48 8b 84 24 e0 00 00 	mov    0xe0(%rsp),%rax
   212db:	00 
   212dc:	48 89 84 24 50 05 00 	mov    %rax,0x550(%rsp)
   212e3:	00 
   212e4:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   212e9:	48 89 84 24 58 05 00 	mov    %rax,0x558(%rsp)
   212f0:	00 
   212f1:	48 8b 84 24 c0 06 00 	mov    0x6c0(%rsp),%rax
   212f8:	00 
   212f9:	48 89 81 70 01 00 00 	mov    %rax,0x170(%rcx)
   21300:	0f 28 84 24 a0 06 00 	movaps 0x6a0(%rsp),%xmm0
   21307:	00 
   21308:	0f 28 8c 24 b0 06 00 	movaps 0x6b0(%rsp),%xmm1
   2130f:	00 
   21310:	0f 11 89 60 01 00 00 	movups %xmm1,0x160(%rcx)
   21317:	0f 11 81 50 01 00 00 	movups %xmm0,0x150(%rcx)
   2131e:	8a 44 24 10          	mov    0x10(%rsp),%al
   21322:	88 84 24 88 05 00 00 	mov    %al,0x588(%rsp)
   21329:	8a 84 24 a8 00 00 00 	mov    0xa8(%rsp),%al
   21330:	88 84 24 89 05 00 00 	mov    %al,0x589(%rsp)
   21337:	8b 44 24 18          	mov    0x18(%rsp),%eax
   2133b:	66 89 84 24 8a 05 00 	mov    %ax,0x58a(%rsp)
   21342:	00 
   21343:	8a 84 24 08 01 00 00 	mov    0x108(%rsp),%al
   2134a:	88 84 24 8c 05 00 00 	mov    %al,0x58c(%rsp)
   21351:	8a 84 24 b8 02 00 00 	mov    0x2b8(%rsp),%al
   21358:	88 84 24 8d 05 00 00 	mov    %al,0x58d(%rsp)
   2135f:	8a 84 24 c0 01 00 00 	mov    0x1c0(%rsp),%al
   21366:	88 84 24 8e 05 00 00 	mov    %al,0x58e(%rsp)
   2136d:	8a 84 24 48 03 00 00 	mov    0x348(%rsp),%al
   21374:	88 84 24 8f 05 00 00 	mov    %al,0x58f(%rsp)
   2137b:	8a 84 24 40 03 00 00 	mov    0x340(%rsp),%al
   21382:	88 84 24 90 05 00 00 	mov    %al,0x590(%rsp)
   21389:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   2138e:	88 84 24 91 05 00 00 	mov    %al,0x591(%rsp)
   21395:	0f b7 84 24 ec 01 00 	movzwl 0x1ec(%rsp),%eax
   2139c:	00 
   2139d:	66 89 81 86 01 00 00 	mov    %ax,0x186(%rcx)
   213a4:	8b 84 24 e8 01 00 00 	mov    0x1e8(%rsp),%eax
   213ab:	89 81 82 01 00 00    	mov    %eax,0x182(%rcx)
   213b1:	0f 10 84 24 f0 03 00 	movups 0x3f0(%rsp),%xmm0
   213b8:	00 
   213b9:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
   213c0:	00 
   213c1:	ba 98 01 00 00       	mov    $0x198,%edx
   213c6:	4c 8d b4 24 90 0c 00 	lea    0xc90(%rsp),%r14
   213cd:	00 
   213ce:	4c 89 f7             	mov    %r14,%rdi
   213d1:	48 8d b4 24 00 04 00 	lea    0x400(%rsp),%rsi
   213d8:	00 
   213d9:	48 8b 2d 18 49 02 00 	mov    0x24918(%rip),%rbp        # 45cf8 <memcpy@GLIBC_2.14>
   213e0:	ff d5                	callq  *%rbp
   213e2:	66 0f 6f 84 24 80 00 	movdqa 0x80(%rsp),%xmm0
   213e9:	00 00 
   213eb:	f3 0f 7f 84 24 a0 0a 	movdqu %xmm0,0xaa0(%rsp)
   213f2:	00 00 
   213f4:	ba 98 01 00 00       	mov    $0x198,%edx
   213f9:	48 8d 9c 24 b0 0a 00 	lea    0xab0(%rsp),%rbx
   21400:	00 
   21401:	48 89 df             	mov    %rbx,%rdi
   21404:	4c 89 f6             	mov    %r14,%rsi
   21407:	ff d5                	callq  *%rbp
   21409:	48 8b 94 24 c0 0a 00 	mov    0xac0(%rsp),%rdx
   21410:	00 
   21411:	48 8b b4 24 c8 0a 00 	mov    0xac8(%rsp),%rsi
   21418:	00 
   21419:	48 89 94 24 90 0c 00 	mov    %rdx,0xc90(%rsp)
   21420:	00 
   21421:	48 89 b4 24 98 0c 00 	mov    %rsi,0xc98(%rsp)
   21428:	00 
   21429:	48 89 9c 24 a0 0c 00 	mov    %rbx,0xca0(%rsp)
   21430:	00 
   21431:	48 8d 84 24 d8 0a 00 	lea    0xad8(%rsp),%rax
   21438:	00 
   21439:	48 89 84 24 a8 0c 00 	mov    %rax,0xca8(%rsp)
   21440:	00 
   21441:	48 c7 84 24 b0 0c 00 	movq   $0x0,0xcb0(%rsp)
   21448:	00 00 00 00 00 
   2144d:	48 85 f6             	test   %rsi,%rsi
   21450:	0f 84 d2 23 00 00    	je     23828 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c98>
   21456:	48 83 c2 01          	add    $0x1,%rdx
   2145a:	48 83 c6 ff          	add    $0xffffffffffffffff,%rsi
   2145e:	31 c0                	xor    %eax,%eax
   21460:	31 c9                	xor    %ecx,%ecx
   21462:	48 89 94 24 90 0c 00 	mov    %rdx,0xc90(%rsp)
   21469:	00 
   2146a:	48 89 b4 24 98 0c 00 	mov    %rsi,0xc98(%rsp)
   21471:	00 
   21472:	0f b6 5a ff          	movzbl -0x1(%rdx),%ebx
   21476:	83 f9 3f             	cmp    $0x3f,%ecx
   21479:	75 09                	jne    21484 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x28f4>
   2147b:	80 fb 01             	cmp    $0x1,%bl
   2147e:	0f 87 a4 23 00 00    	ja     23828 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c98>
   21484:	0f b6 eb             	movzbl %bl,%ebp
   21487:	89 ef                	mov    %ebp,%edi
   21489:	83 e7 7f             	and    $0x7f,%edi
   2148c:	48 d3 e7             	shl    %cl,%rdi
   2148f:	48 09 f8             	or     %rdi,%rax
   21492:	40 84 ed             	test   %bpl,%bpl
   21495:	79 12                	jns    214a9 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2919>
   21497:	83 c1 07             	add    $0x7,%ecx
   2149a:	48 83 c2 01          	add    $0x1,%rdx
   2149e:	48 83 c6 ff          	add    $0xffffffffffffffff,%rsi
   214a2:	72 be                	jb     21462 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x28d2>
   214a4:	e9 7f 23 00 00       	jmpq   23828 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c98>
   214a9:	48 85 c0             	test   %rax,%rax
   214ac:	0f 84 97 00 00 00    	je     21549 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x29b9>
   214b2:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   214b6:	48 3b 8c 24 e8 0a 00 	cmp    0xae8(%rsp),%rcx
   214bd:	00 
   214be:	0f 83 c8 00 00 00    	jae    2158c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x29fc>
   214c4:	48 6b f9 70          	imul   $0x70,%rcx,%rdi
   214c8:	48 03 bc 24 d8 0a 00 	add    0xad8(%rsp),%rdi
   214cf:	00 
   214d0:	80 7f 6a 01          	cmpb   $0x1,0x6a(%rdi)
   214d4:	75 0c                	jne    214e2 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2952>
   214d6:	48 c7 84 24 b0 0c 00 	movq   $0x1,0xcb0(%rsp)
   214dd:	00 01 00 00 00 
   214e2:	66 83 7f 68 11       	cmpw   $0x11,0x68(%rdi)
   214e7:	75 6c                	jne    21555 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x29c5>
   214e9:	48 83 c7 08          	add    $0x8,%rdi
   214ed:	ff 15 95 45 02 00    	callq  *0x24595(%rip)        # 45a88 <_GLOBAL_OFFSET_TABLE_+0x100>
   214f3:	49 89 d4             	mov    %rdx,%r12
   214f6:	48 85 d2             	test   %rdx,%rdx
   214f9:	0f 84 cf 03 00 00    	je     218ce <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2d3e>
   214ff:	48 89 c5             	mov    %rax,%rbp
   21502:	49 c1 e4 04          	shl    $0x4,%r12
   21506:	49 01 c4             	add    %rax,%r12
   21509:	48 8b 84 24 b0 07 00 	mov    0x7b0(%rsp),%rax
   21510:	00 
   21511:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   21516:	48 8b 84 24 b8 07 00 	mov    0x7b8(%rsp),%rax
   2151d:	00 
   2151e:	48 89 84 24 e0 00 00 	mov    %rax,0xe0(%rsp)
   21525:	00 
   21526:	45 31 ff             	xor    %r15d,%r15d
   21529:	45 31 f6             	xor    %r14d,%r14d
   2152c:	31 c0                	xor    %eax,%eax
   2152e:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   21533:	31 c0                	xor    %eax,%eax
   21535:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2153a:	31 c0                	xor    %eax,%eax
   2153c:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   21543:	00 
   21544:	e9 df 00 00 00       	jmpq   21628 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2a98>
   21549:	48 c7 84 24 b0 0c 00 	movq   $0xffffffffffffffff,0xcb0(%rsp)
   21550:	00 ff ff ff ff 
   21555:	48 8d bc 24 d8 0a 00 	lea    0xad8(%rsp),%rdi
   2155c:	00 
   2155d:	e8 fe 48 fe ff       	callq  5e60 <core::ptr::drop_in_place>
   21562:	83 bc 24 f8 0b 00 00 	cmpl   $0x2e,0xbf8(%rsp)
   21569:	2e 
   2156a:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   2156f:	48 8b 6c 24 40       	mov    0x40(%rsp),%rbp
   21574:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
   21579:	0f 84 3e e3 ff ff    	je     1f8bd <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xd2d>
   2157f:	48 8d bc 24 50 0b 00 	lea    0xb50(%rsp),%rdi
   21586:	00 
   21587:	e9 e7 f2 ff ff       	jmpq   20873 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1ce3>
   2158c:	48 8b 8c 24 f0 0a 00 	mov    0xaf0(%rsp),%rcx
   21593:	00 
   21594:	48 85 c9             	test   %rcx,%rcx
   21597:	0f 84 8b 22 00 00    	je     23828 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c98>
   2159d:	4c 8b 84 24 f8 0a 00 	mov    0xaf8(%rsp),%r8
   215a4:	00 
   215a5:	44 0f b7 89 32 05 00 	movzwl 0x532(%rcx),%r9d
   215ac:	00 
   215ad:	48 8d 79 f0          	lea    -0x10(%rcx),%rdi
   215b1:	4c 89 cd             	mov    %r9,%rbp
   215b4:	48 f7 dd             	neg    %rbp
   215b7:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
   215be:	48 8d 14 2e          	lea    (%rsi,%rbp,1),%rdx
   215c2:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   215c6:	74 2d                	je     215f5 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2a65>
   215c8:	31 d2                	xor    %edx,%edx
   215ca:	48 39 44 f1 10       	cmp    %rax,0x10(%rcx,%rsi,8)
   215cf:	0f 95 c2             	setne  %dl
   215d2:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
   215d9:	48 0f 47 d3          	cmova  %rbx,%rdx
   215dd:	48 83 c6 01          	add    $0x1,%rsi
   215e1:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   215e5:	74 11                	je     215f8 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2a68>
   215e7:	48 83 c7 70          	add    $0x70,%rdi
   215eb:	48 85 d2             	test   %rdx,%rdx
   215ee:	75 ce                	jne    215be <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2a2e>
   215f0:	e9 db fe ff ff       	jmpq   214d0 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2940>
   215f5:	4c 89 ce             	mov    %r9,%rsi
   215f8:	4d 85 c0             	test   %r8,%r8
   215fb:	0f 84 27 22 00 00    	je     23828 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c98>
   21601:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   21605:	48 8b 8c f1 38 05 00 	mov    0x538(%rcx,%rsi,8),%rcx
   2160c:	00 
   2160d:	eb 96                	jmp    215a5 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2a15>
   2160f:	83 f8 26             	cmp    $0x26,%eax
   21612:	b8 01 00 00 00       	mov    $0x1,%eax
   21617:	44 0f 44 f8          	cmove  %eax,%r15d
   2161b:	48 83 c5 10          	add    $0x10,%rbp
   2161f:	4c 39 e5             	cmp    %r12,%rbp
   21622:	0f 84 c4 02 00 00    	je     218ec <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2d5c>
   21628:	48 8b 4d 00          	mov    0x0(%rbp),%rcx
   2162c:	48 8b 84 24 a0 0c 00 	mov    0xca0(%rsp),%rax
   21633:	00 
   21634:	8b 50 20             	mov    0x20(%rax),%edx
   21637:	44 0f b7 4d 0a       	movzwl 0xa(%rbp),%r9d
   2163c:	44 8b 45 08          	mov    0x8(%rbp),%r8d
   21640:	48 8d bc 24 f0 03 00 	lea    0x3f0(%rsp),%rdi
   21647:	00 
   21648:	48 8d b4 24 90 0c 00 	lea    0xc90(%rsp),%rsi
   2164f:	00 
   21650:	e8 6b 92 fe ff       	callq  a8c0 <gimli::read::unit::parse_attribute>
   21655:	48 8b 84 24 00 04 00 	mov    0x400(%rsp),%rax
   2165c:	00 
   2165d:	48 8b 94 24 f0 03 00 	mov    0x3f0(%rsp),%rdx
   21664:	00 
   21665:	48 8b 8c 24 f8 03 00 	mov    0x3f8(%rsp),%rcx
   2166c:	00 
   2166d:	48 8d b4 24 10 04 00 	lea    0x410(%rsp),%rsi
   21674:	00 
   21675:	f3 0f 6f 46 f8       	movdqu -0x8(%rsi),%xmm0
   2167a:	66 0f 7f 84 24 50 02 	movdqa %xmm0,0x250(%rsp)
   21681:	00 00 
   21683:	48 83 fa 01          	cmp    $0x1,%rdx
   21687:	0f 84 9b 21 00 00    	je     23828 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c98>
   2168d:	48 89 8c 24 10 01 00 	mov    %rcx,0x110(%rsp)
   21694:	00 
   21695:	48 89 84 24 18 01 00 	mov    %rax,0x118(%rsp)
   2169c:	00 
   2169d:	66 0f 6f 84 24 50 02 	movdqa 0x250(%rsp),%xmm0
   216a4:	00 00 
   216a6:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
   216ad:	00 
   216ae:	f3 0f 7f 40 f0       	movdqu %xmm0,-0x10(%rax)
   216b3:	0f b7 84 24 28 01 00 	movzwl 0x128(%rsp),%eax
   216ba:	00 
   216bb:	66 83 f8 12          	cmp    $0x12,%ax
   216bf:	7f 63                	jg     21724 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2b94>
   216c1:	66 83 f8 11          	cmp    $0x11,%ax
   216c5:	0f 84 15 01 00 00    	je     217e0 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2c50>
   216cb:	66 83 f8 12          	cmp    $0x12,%ax
   216cf:	0f 85 46 ff ff ff    	jne    2161b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2a8b>
   216d5:	48 8d bc 24 f0 03 00 	lea    0x3f0(%rsp),%rdi
   216dc:	00 
   216dd:	48 8d b4 24 10 01 00 	lea    0x110(%rsp),%rsi
   216e4:	00 
   216e5:	e8 16 a4 fe ff       	callq  bb00 <gimli::read::unit::Attribute<R>::value>
   216ea:	48 8b 84 24 f0 03 00 	mov    0x3f0(%rsp),%rax
   216f1:	00 
   216f2:	48 83 f8 07          	cmp    $0x7,%rax
   216f6:	0f 84 66 01 00 00    	je     21862 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2cd2>
   216fc:	48 85 c0             	test   %rax,%rax
   216ff:	0f 85 16 ff ff ff    	jne    2161b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2a8b>
   21705:	b8 01 00 00 00       	mov    $0x1,%eax
   2170a:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2170f:	48 8b 84 24 f8 03 00 	mov    0x3f8(%rsp),%rax
   21716:	00 
   21717:	48 89 84 24 d8 06 00 	mov    %rax,0x6d8(%rsp)
   2171e:	00 
   2171f:	e9 f7 fe ff ff       	jmpq   2161b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2a8b>
   21724:	66 83 f8 13          	cmp    $0x13,%ax
   21728:	0f 84 f8 00 00 00    	je     21826 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2c96>
   2172e:	66 83 f8 55          	cmp    $0x55,%ax
   21732:	0f 85 e3 fe ff ff    	jne    2161b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2a8b>
   21738:	48 8d bc 24 f0 03 00 	lea    0x3f0(%rsp),%rdi
   2173f:	00 
   21740:	48 8d b4 24 10 01 00 	lea    0x110(%rsp),%rsi
   21747:	00 
   21748:	e8 b3 a3 fe ff       	callq  bb00 <gimli::read::unit::Attribute<R>::value>
   2174d:	48 8b 84 24 f0 03 00 	mov    0x3f0(%rsp),%rax
   21754:	00 
   21755:	48 8b 8c 24 f8 03 00 	mov    0x3f8(%rsp),%rcx
   2175c:	00 
   2175d:	48 89 8c 24 00 01 00 	mov    %rcx,0x100(%rsp)
   21764:	00 
   21765:	48 83 f8 16          	cmp    $0x16,%rax
   21769:	0f 84 44 01 00 00    	je     218b3 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2d23>
   2176f:	48 83 f8 18          	cmp    $0x18,%rax
   21773:	0f 85 08 01 00 00    	jne    21881 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2cf1>
   21779:	48 8b 84 24 48 0b 00 	mov    0xb48(%rsp),%rax
   21780:	00 
   21781:	48 8b 8c 24 e0 00 00 	mov    0xe0(%rsp),%rcx
   21788:	00 
   21789:	48 29 c1             	sub    %rax,%rcx
   2178c:	0f 82 96 20 00 00    	jb     23828 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c98>
   21792:	0f b6 9c 24 d1 0a 00 	movzbl 0xad1(%rsp),%ebx
   21799:	00 
   2179a:	31 d2                	xor    %edx,%edx
   2179c:	80 fb 08             	cmp    $0x8,%bl
   2179f:	0f 94 c2             	sete   %dl
   217a2:	48 8d 14 95 04 00 00 	lea    0x4(,%rdx,4),%rdx
   217a9:	00 
   217aa:	48 0f af 94 24 00 01 	imul   0x100(%rsp),%rdx
   217b1:	00 00 
   217b3:	48 29 d1             	sub    %rdx,%rcx
   217b6:	0f 82 6c 20 00 00    	jb     23828 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c98>
   217bc:	48 8b 74 24 78       	mov    0x78(%rsp),%rsi
   217c1:	48 01 c6             	add    %rax,%rsi
   217c4:	80 fb 08             	cmp    $0x8,%bl
   217c7:	0f 85 c9 00 00 00    	jne    21896 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2d06>
   217cd:	48 83 f9 07          	cmp    $0x7,%rcx
   217d1:	0f 86 51 20 00 00    	jbe    23828 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c98>
   217d7:	48 8b 0c 16          	mov    (%rsi,%rdx,1),%rcx
   217db:	e9 c3 00 00 00       	jmpq   218a3 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2d13>
   217e0:	48 8d bc 24 f0 03 00 	lea    0x3f0(%rsp),%rdi
   217e7:	00 
   217e8:	48 8d b4 24 10 01 00 	lea    0x110(%rsp),%rsi
   217ef:	00 
   217f0:	e8 0b a3 fe ff       	callq  bb00 <gimli::read::unit::Attribute<R>::value>
   217f5:	48 83 bc 24 f0 03 00 	cmpq   $0x0,0x3f0(%rsp)
   217fc:	00 00 
   217fe:	0f 85 17 fe ff ff    	jne    2161b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2a8b>
   21804:	b8 01 00 00 00       	mov    $0x1,%eax
   21809:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   21810:	00 
   21811:	48 8b 84 24 f8 03 00 	mov    0x3f8(%rsp),%rax
   21818:	00 
   21819:	48 89 84 24 e0 03 00 	mov    %rax,0x3e0(%rsp)
   21820:	00 
   21821:	e9 f5 fd ff ff       	jmpq   2161b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2a8b>
   21826:	48 8d bc 24 f0 03 00 	lea    0x3f0(%rsp),%rdi
   2182d:	00 
   2182e:	48 8d b4 24 10 01 00 	lea    0x110(%rsp),%rsi
   21835:	00 
   21836:	e8 c5 a2 fe ff       	callq  bb00 <gimli::read::unit::Attribute<R>::value>
   2183b:	48 8b 84 24 f0 03 00 	mov    0x3f0(%rsp),%rax
   21842:	00 
   21843:	48 83 f8 26          	cmp    $0x26,%rax
   21847:	0f 85 c2 fd ff ff    	jne    2160f <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2a7f>
   2184d:	0f b7 8c 24 f8 03 00 	movzwl 0x3f8(%rsp),%ecx
   21854:	00 
   21855:	66 89 8c 24 7e 01 00 	mov    %cx,0x17e(%rsp)
   2185c:	00 
   2185d:	e9 ad fd ff ff       	jmpq   2160f <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2a7f>
   21862:	b8 01 00 00 00       	mov    $0x1,%eax
   21867:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   2186c:	48 8b 84 24 f8 03 00 	mov    0x3f8(%rsp),%rax
   21873:	00 
   21874:	48 89 84 24 d0 06 00 	mov    %rax,0x6d0(%rsp)
   2187b:	00 
   2187c:	e9 9a fd ff ff       	jmpq   2161b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2a8b>
   21881:	45 31 f6             	xor    %r14d,%r14d
   21884:	48 8b 84 24 e0 06 00 	mov    0x6e0(%rsp),%rax
   2188b:	00 
   2188c:	48 89 84 24 00 01 00 	mov    %rax,0x100(%rsp)
   21893:	00 
   21894:	eb 23                	jmp    218b9 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2d29>
   21896:	48 83 f9 04          	cmp    $0x4,%rcx
   2189a:	0f 82 88 1f 00 00    	jb     23828 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c98>
   218a0:	8b 0c 16             	mov    (%rsi,%rdx,1),%ecx
   218a3:	48 89 8c 24 00 01 00 	mov    %rcx,0x100(%rsp)
   218aa:	00 
   218ab:	48 01 84 24 00 01 00 	add    %rax,0x100(%rsp)
   218b2:	00 
   218b3:	41 be 01 00 00 00    	mov    $0x1,%r14d
   218b9:	48 8b 84 24 00 01 00 	mov    0x100(%rsp),%rax
   218c0:	00 
   218c1:	48 89 84 24 e0 06 00 	mov    %rax,0x6e0(%rsp)
   218c8:	00 
   218c9:	e9 4d fd ff ff       	jmpq   2161b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2a8b>
   218ce:	31 c0                	xor    %eax,%eax
   218d0:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   218d7:	00 
   218d8:	31 c0                	xor    %eax,%eax
   218da:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   218df:	31 c0                	xor    %eax,%eax
   218e1:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   218e6:	45 31 f6             	xor    %r14d,%r14d
   218e9:	45 31 ff             	xor    %r15d,%r15d
   218ec:	48 8d 84 24 58 03 00 	lea    0x358(%rsp),%rax
   218f3:	00 
   218f4:	48 89 84 24 f0 02 00 	mov    %rax,0x2f0(%rsp)
   218fb:	00 
   218fc:	48 8d 84 24 e8 06 00 	lea    0x6e8(%rsp),%rax
   21903:	00 
   21904:	48 89 84 24 f8 02 00 	mov    %rax,0x2f8(%rsp)
   2190b:	00 
   2190c:	c6 84 24 00 02 00 00 	movb   $0x0,0x200(%rsp)
   21913:	00 
   21914:	48 8d 84 24 f0 02 00 	lea    0x2f0(%rsp),%rax
   2191b:	00 
   2191c:	48 89 84 24 50 02 00 	mov    %rax,0x250(%rsp)
   21923:	00 
   21924:	48 8d 84 24 00 02 00 	lea    0x200(%rsp),%rax
   2192b:	00 
   2192c:	48 89 84 24 58 02 00 	mov    %rax,0x258(%rsp)
   21933:	00 
   21934:	49 83 fe 01          	cmp    $0x1,%r14
   21938:	0f 85 ef 00 00 00    	jne    21a2d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2e9d>
   2193e:	8b 84 24 d0 0a 00 00 	mov    0xad0(%rsp),%eax
   21945:	89 c2                	mov    %eax,%edx
   21947:	c1 ea 10             	shr    $0x10,%edx
   2194a:	66 83 fa 05          	cmp    $0x5,%dx
   2194e:	48 8d 8c 24 b8 07 00 	lea    0x7b8(%rsp),%rcx
   21955:	00 
   21956:	48 8d b4 24 a8 07 00 	lea    0x7a8(%rsp),%rsi
   2195d:	00 
   2195e:	48 0f 42 ce          	cmovb  %rsi,%rcx
   21962:	48 8b 09             	mov    (%rcx),%rcx
   21965:	48 2b 8c 24 00 01 00 	sub    0x100(%rsp),%rcx
   2196c:	00 
   2196d:	0f 82 b5 1e 00 00    	jb     23828 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c98>
   21973:	66 83 fa 05          	cmp    $0x5,%dx
   21977:	48 8d 94 24 b0 07 00 	lea    0x7b0(%rsp),%rdx
   2197e:	00 
   2197f:	48 8d b4 24 a0 07 00 	lea    0x7a0(%rsp),%rsi
   21986:	00 
   21987:	48 0f 42 d6          	cmovb  %rsi,%rdx
   2198b:	48 8b b4 24 28 0b 00 	mov    0xb28(%rsp),%rsi
   21992:	00 
   21993:	48 8b bc 24 38 0b 00 	mov    0xb38(%rsp),%rdi
   2199a:	00 
   2199b:	48 8b 12             	mov    (%rdx),%rdx
   2199e:	48 03 94 24 00 01 00 	add    0x100(%rsp),%rdx
   219a5:	00 
   219a6:	f3 0f 6f 84 24 00 07 	movdqu 0x700(%rsp),%xmm0
   219ad:	00 00 
   219af:	48 89 8c 24 f8 03 00 	mov    %rcx,0x3f8(%rsp)
   219b6:	00 
   219b7:	48 89 94 24 f0 03 00 	mov    %rdx,0x3f0(%rsp)
   219be:	00 
   219bf:	89 84 24 00 04 00 00 	mov    %eax,0x400(%rsp)
   219c6:	48 89 b4 24 08 04 00 	mov    %rsi,0x408(%rsp)
   219cd:	00 
   219ce:	f3 0f 7f 84 24 10 04 	movdqu %xmm0,0x410(%rsp)
   219d5:	00 00 
   219d7:	48 89 bc 24 20 04 00 	mov    %rdi,0x420(%rsp)
   219de:	00 
   219df:	48 8d bc 24 10 01 00 	lea    0x110(%rsp),%rdi
   219e6:	00 
   219e7:	48 8d b4 24 f0 03 00 	lea    0x3f0(%rsp),%rsi
   219ee:	00 
   219ef:	e8 4c ab fe ff       	callq  c540 <gimli::read::rnglists::RngListIter<R>::next>
   219f4:	48 83 bc 24 10 01 00 	cmpq   $0x1,0x110(%rsp)
   219fb:	00 01 
   219fd:	0f 84 25 1e 00 00    	je     23828 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c98>
   21a03:	48 83 bc 24 18 01 00 	cmpq   $0x1,0x118(%rsp)
   21a0a:	00 01 
   21a0c:	75 7a                	jne    21a88 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2ef8>
   21a0e:	48 8b b4 24 20 01 00 	mov    0x120(%rsp),%rsi
   21a15:	00 
   21a16:	48 8b 94 24 28 01 00 	mov    0x128(%rsp),%rdx
   21a1d:	00 
   21a1e:	48 8d bc 24 50 02 00 	lea    0x250(%rsp),%rdi
   21a25:	00 
   21a26:	e8 c5 0f ff ff       	callq  129f0 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}>
   21a2b:	eb b2                	jmp    219df <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2e4f>
   21a2d:	48 83 bc 24 80 00 00 	cmpq   $0x1,0x80(%rsp)
   21a34:	00 01 
   21a36:	75 50                	jne    21a88 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2ef8>
   21a38:	48 83 7c 24 18 01    	cmpq   $0x1,0x18(%rsp)
   21a3e:	75 1f                	jne    21a5f <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2ecf>
   21a40:	48 8d bc 24 50 02 00 	lea    0x250(%rsp),%rdi
   21a47:	00 
   21a48:	48 8b b4 24 e0 03 00 	mov    0x3e0(%rsp),%rsi
   21a4f:	00 
   21a50:	48 8b 94 24 d8 06 00 	mov    0x6d8(%rsp),%rdx
   21a57:	00 
   21a58:	e8 93 0f ff ff       	callq  129f0 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}>
   21a5d:	eb 29                	jmp    21a88 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2ef8>
   21a5f:	48 83 7c 24 20 01    	cmpq   $0x1,0x20(%rsp)
   21a65:	75 21                	jne    21a88 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2ef8>
   21a67:	48 8b 84 24 d0 06 00 	mov    0x6d0(%rsp),%rax
   21a6e:	00 
   21a6f:	48 8b b4 24 e0 03 00 	mov    0x3e0(%rsp),%rsi
   21a76:	00 
   21a77:	48 8d 14 30          	lea    (%rax,%rsi,1),%rdx
   21a7b:	48 8d bc 24 50 02 00 	lea    0x250(%rsp),%rdi
   21a82:	00 
   21a83:	e8 68 0f ff ff       	callq  129f0 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}>
   21a88:	48 8b 84 24 a0 01 00 	mov    0x1a0(%rsp),%rax
   21a8f:	00 
   21a90:	48 89 84 24 f0 03 00 	mov    %rax,0x3f0(%rsp)
   21a97:	00 
   21a98:	ba a8 01 00 00       	mov    $0x1a8,%edx
   21a9d:	48 8d bc 24 f8 03 00 	lea    0x3f8(%rsp),%rdi
   21aa4:	00 
   21aa5:	48 8d b4 24 a0 0a 00 	lea    0xaa0(%rsp),%rsi
   21aac:	00 
   21aad:	ff 15 45 42 02 00    	callq  *0x24245(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
   21ab3:	66 44 89 bc 24 f0 05 	mov    %r15w,0x5f0(%rsp)
   21aba:	00 00 
   21abc:	0f b7 84 24 7e 01 00 	movzwl 0x17e(%rsp),%eax
   21ac3:	00 
   21ac4:	66 89 84 24 f2 05 00 	mov    %ax,0x5f2(%rsp)
   21acb:	00 
   21acc:	48 c7 84 24 a0 05 00 	movq   $0x2,0x5a0(%rsp)
   21ad3:	00 02 00 00 00 
   21ad8:	48 c7 84 24 c8 05 00 	movq   $0x2,0x5c8(%rsp)
   21adf:	00 02 00 00 00 
   21ae4:	48 8b ac 24 d0 02 00 	mov    0x2d0(%rsp),%rbp
   21aeb:	00 
   21aec:	48 3b ac 24 c8 02 00 	cmp    0x2c8(%rsp),%rbp
   21af3:	00 
   21af4:	75 75                	jne    21b6b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2fdb>
   21af6:	48 89 e8             	mov    %rbp,%rax
   21af9:	48 ff c0             	inc    %rax
   21afc:	0f 84 63 21 00 00    	je     23c65 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50d5>
   21b02:	48 89 e9             	mov    %rbp,%rcx
   21b05:	48 01 e9             	add    %rbp,%rcx
   21b08:	48 39 c1             	cmp    %rax,%rcx
   21b0b:	48 0f 47 c1          	cmova  %rcx,%rax
   21b0f:	48 83 f8 04          	cmp    $0x4,%rax
   21b13:	b9 04 00 00 00       	mov    $0x4,%ecx
   21b18:	48 0f 46 c1          	cmovbe %rcx,%rax
   21b1c:	31 c9                	xor    %ecx,%ecx
   21b1e:	ba 08 02 00 00       	mov    $0x208,%edx
   21b23:	48 f7 e2             	mul    %rdx
   21b26:	48 89 c3             	mov    %rax,%rbx
   21b29:	0f 90 c0             	seto   %al
   21b2c:	0f 91 c1             	setno  %cl
   21b2f:	48 c1 e1 03          	shl    $0x3,%rcx
   21b33:	48 85 ed             	test   %rbp,%rbp
   21b36:	74 3d                	je     21b75 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2fe5>
   21b38:	84 c0                	test   %al,%al
   21b3a:	0f 85 25 21 00 00    	jne    23c65 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50d5>
   21b40:	48 8b bc 24 c0 02 00 	mov    0x2c0(%rsp),%rdi
   21b47:	00 
   21b48:	48 85 ff             	test   %rdi,%rdi
   21b4b:	74 30                	je     21b7d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2fed>
   21b4d:	48 89 e8             	mov    %rbp,%rax
   21b50:	48 c1 e0 09          	shl    $0x9,%rax
   21b54:	48 8d 34 e8          	lea    (%rax,%rbp,8),%rsi
   21b58:	48 85 f6             	test   %rsi,%rsi
   21b5b:	74 20                	je     21b7d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2fed>
   21b5d:	48 89 ca             	mov    %rcx,%rdx
   21b60:	48 89 d9             	mov    %rbx,%rcx
   21b63:	ff 15 0f 44 02 00    	callq  *0x2440f(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
   21b69:	eb 23                	jmp    21b8e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2ffe>
   21b6b:	48 8b 8c 24 c0 02 00 	mov    0x2c0(%rsp),%rcx
   21b72:	00 
   21b73:	eb 49                	jmp    21bbe <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x302e>
   21b75:	84 c0                	test   %al,%al
   21b77:	0f 85 e8 20 00 00    	jne    23c65 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50d5>
   21b7d:	48 85 db             	test   %rbx,%rbx
   21b80:	74 0f                	je     21b91 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3001>
   21b82:	48 89 df             	mov    %rbx,%rdi
   21b85:	48 89 ce             	mov    %rcx,%rsi
   21b88:	ff 15 f2 3f 02 00    	callq  *0x23ff2(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   21b8e:	48 89 c1             	mov    %rax,%rcx
   21b91:	48 85 c9             	test   %rcx,%rcx
   21b94:	0f 84 d3 20 00 00    	je     23c6d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50dd>
   21b9a:	48 89 8c 24 c0 02 00 	mov    %rcx,0x2c0(%rsp)
   21ba1:	00 
   21ba2:	48 89 d8             	mov    %rbx,%rax
   21ba5:	48 ba c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rdx
   21bac:	fc c0 0f 
   21baf:	48 f7 e2             	mul    %rdx
   21bb2:	48 c1 ea 05          	shr    $0x5,%rdx
   21bb6:	48 89 94 24 c8 02 00 	mov    %rdx,0x2c8(%rsp)
   21bbd:	00 
   21bbe:	48 89 e8             	mov    %rbp,%rax
   21bc1:	48 c1 e0 09          	shl    $0x9,%rax
   21bc5:	48 8d 3c e8          	lea    (%rax,%rbp,8),%rdi
   21bc9:	48 01 cf             	add    %rcx,%rdi
   21bcc:	ba 08 02 00 00       	mov    $0x208,%edx
   21bd1:	48 8d b4 24 f0 03 00 	lea    0x3f0(%rsp),%rsi
   21bd8:	00 
   21bd9:	ff 15 19 41 02 00    	callq  *0x24119(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
   21bdf:	48 83 c5 01          	add    $0x1,%rbp
   21be3:	48 89 ac 24 d0 02 00 	mov    %rbp,0x2d0(%rsp)
   21bea:	00 
   21beb:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
   21bf0:	4d 85 ff             	test   %r15,%r15
   21bf3:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   21bf8:	48 8b 6c 24 40       	mov    0x40(%rsp),%rbp
   21bfd:	0f 85 c3 dc ff ff    	jne    1f8c6 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xd36>
   21c03:	e9 fe 10 00 00       	jmpq   22d06 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4176>
   21c08:	c6 84 24 b8 02 00 00 	movb   $0x1,0x2b8(%rsp)
   21c0f:	01 
   21c10:	48 85 c0             	test   %rax,%rax
   21c13:	0f 84 21 f2 ff ff    	je     20e3a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x22aa>
   21c19:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   21c1e:	48 83 c1 01          	add    $0x1,%rcx
   21c22:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   21c27:	48 89 c2             	mov    %rax,%rdx
   21c2a:	48 83 c2 ff          	add    $0xffffffffffffffff,%rdx
   21c2e:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   21c33:	0f 84 b3 00 00 00    	je     21cec <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x315c>
   21c39:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   21c3e:	8a 0a                	mov    (%rdx),%cl
   21c40:	48 83 c2 02          	add    $0x2,%rdx
   21c44:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   21c49:	48 89 c6             	mov    %rax,%rsi
   21c4c:	48 83 c6 fe          	add    $0xfffffffffffffffe,%rsi
   21c50:	48 89 74 24 38       	mov    %rsi,0x38(%rsp)
   21c55:	0f 84 9b 00 00 00    	je     21cf6 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3166>
   21c5b:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   21c60:	8a 57 01             	mov    0x1(%rdi),%dl
   21c63:	88 94 24 48 03 00 00 	mov    %dl,0x348(%rsp)
   21c6a:	48 8d 57 03          	lea    0x3(%rdi),%rdx
   21c6e:	48 8d 70 fd          	lea    -0x3(%rax),%rsi
   21c72:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   21c77:	48 89 74 24 38       	mov    %rsi,0x38(%rsp)
   21c7c:	8a 5f 02             	mov    0x2(%rdi),%bl
   21c7f:	88 9c 24 40 03 00 00 	mov    %bl,0x340(%rsp)
   21c86:	84 db                	test   %bl,%bl
   21c88:	74 76                	je     21d00 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3170>
   21c8a:	84 c9                	test   %cl,%cl
   21c8c:	0f 95 84 24 c0 01 00 	setne  0x1c0(%rsp)
   21c93:	00 
   21c94:	48 85 f6             	test   %rsi,%rsi
   21c97:	74 5d                	je     21cf6 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3166>
   21c99:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   21c9e:	48 8d 56 04          	lea    0x4(%rsi),%rdx
   21ca2:	48 8d 48 fc          	lea    -0x4(%rax),%rcx
   21ca6:	48 89 94 24 c8 01 00 	mov    %rdx,0x1c8(%rsp)
   21cad:	00 
   21cae:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   21cb3:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   21cb8:	8a 56 03             	mov    0x3(%rsi),%dl
   21cbb:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   21cc0:	84 d2                	test   %dl,%dl
   21cc2:	74 46                	je     21d0a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x317a>
   21cc4:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   21cc9:	83 c2 ff             	add    $0xffffffff,%edx
   21ccc:	0f b6 f2             	movzbl %dl,%esi
   21ccf:	48 89 f2             	mov    %rsi,%rdx
   21cd2:	48 89 b4 24 e8 03 00 	mov    %rsi,0x3e8(%rsp)
   21cd9:	00 
   21cda:	48 29 f1             	sub    %rsi,%rcx
   21cdd:	73 35                	jae    21d14 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3184>
   21cdf:	48 8b 84 24 c8 01 00 	mov    0x1c8(%rsp),%rax
   21ce6:	00 
   21ce7:	e9 a3 ee ff ff       	jmpq   20b8f <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1fff>
   21cec:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   21cf1:	e9 44 f1 ff ff       	jmpq   20e3a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x22aa>
   21cf6:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   21cfb:	e9 3a f1 ff ff       	jmpq   20e3a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x22aa>
   21d00:	b8 1c 00 00 00       	mov    $0x1c,%eax
   21d05:	e9 2b f1 ff ff       	jmpq   20e35 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x22a5>
   21d0a:	b8 1d 00 00 00       	mov    $0x1d,%eax
   21d0f:	e9 21 f1 ff ff       	jmpq   20e35 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x22a5>
   21d14:	48 8b 94 24 c8 01 00 	mov    0x1c8(%rsp),%rdx
   21d1b:	00 
   21d1c:	48 8b b4 24 e8 03 00 	mov    0x3e8(%rsp),%rsi
   21d23:	00 
   21d24:	48 8d 3c 32          	lea    (%rdx,%rsi,1),%rdi
   21d28:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
   21d2d:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   21d32:	48 c7 84 24 88 01 00 	movq   $0x8,0x188(%rsp)
   21d39:	00 08 00 00 00 
   21d3e:	66 0f ef c0          	pxor   %xmm0,%xmm0
   21d42:	48 8d 94 24 90 01 00 	lea    0x190(%rsp),%rdx
   21d49:	00 
   21d4a:	f3 0f 7f 02          	movdqu %xmm0,(%rdx)
   21d4e:	66 83 7c 24 18 05    	cmpw   $0x5,0x18(%rsp)
   21d54:	0f 83 28 01 00 00    	jae    21e82 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x32f2>
   21d5a:	48 c7 84 24 a0 03 00 	movq   $0x2,0x3a0(%rsp)
   21d61:	00 02 00 00 00 
   21d66:	66 0f ef c0          	pxor   %xmm0,%xmm0
   21d6a:	48 8d 94 24 a8 03 00 	lea    0x3a8(%rsp),%rdx
   21d71:	00 
   21d72:	f3 0f 7f 02          	movdqu %xmm0,(%rdx)
   21d76:	ba 13 00 00 00       	mov    $0x13,%edx
   21d7b:	48 89 54 24 48       	mov    %rdx,0x48(%rsp)
   21d80:	48 85 c9             	test   %rcx,%rcx
   21d83:	0f 84 00 02 00 00    	je     21f89 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x33f9>
   21d89:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   21d8e:	48 01 c6             	add    %rax,%rsi
   21d91:	b8 08 00 00 00       	mov    $0x8,%eax
   21d96:	31 d2                	xor    %edx,%edx
   21d98:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   21d9d:	48 2b 74 24 08       	sub    0x8(%rsp),%rsi
   21da2:	31 db                	xor    %ebx,%ebx
   21da4:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   21da9:	80 3c 1f 00          	cmpb   $0x0,(%rdi,%rbx,1)
   21dad:	74 0e                	je     21dbd <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x322d>
   21daf:	48 83 c3 01          	add    $0x1,%rbx
   21db3:	48 39 de             	cmp    %rbx,%rsi
   21db6:	75 ec                	jne    21da4 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3214>
   21db8:	e9 09 02 00 00       	jmpq   21fc6 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3436>
   21dbd:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   21dc2:	48 01 de             	add    %rbx,%rsi
   21dc5:	48 89 74 24 30       	mov    %rsi,0x30(%rsp)
   21dca:	48 89 cf             	mov    %rcx,%rdi
   21dcd:	48 29 df             	sub    %rbx,%rdi
   21dd0:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
   21dd5:	0f 84 e8 04 00 00    	je     222c3 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3733>
   21ddb:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   21de0:	48 01 de             	add    %rbx,%rsi
   21de3:	48 83 c6 01          	add    $0x1,%rsi
   21de7:	48 89 df             	mov    %rbx,%rdi
   21dea:	48 f7 d7             	not    %rdi
   21ded:	48 01 cf             	add    %rcx,%rdi
   21df0:	48 89 74 24 30       	mov    %rsi,0x30(%rsp)
   21df5:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
   21dfa:	48 85 db             	test   %rbx,%rbx
   21dfd:	0f 84 23 04 00 00    	je     22226 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3696>
   21e03:	48 3b 94 24 90 01 00 	cmp    0x190(%rsp),%rdx
   21e0a:	00 
   21e0b:	75 22                	jne    21e2f <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x329f>
   21e0d:	be 01 00 00 00       	mov    $0x1,%esi
   21e12:	48 8d bc 24 88 01 00 	lea    0x188(%rsp),%rdi
   21e19:	00 
   21e1a:	e8 b1 79 fe ff       	callq  97d0 <alloc::vec::Vec<T>::reserve>
   21e1f:	48 8b 84 24 88 01 00 	mov    0x188(%rsp),%rax
   21e26:	00 
   21e27:	48 8b 94 24 98 01 00 	mov    0x198(%rsp),%rdx
   21e2e:	00 
   21e2f:	48 8d 0c 52          	lea    (%rdx,%rdx,2),%rcx
   21e33:	48 c7 04 c8 1f 00 00 	movq   $0x1f,(%rax,%rcx,8)
   21e3a:	00 
   21e3b:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   21e40:	48 89 54 c8 08       	mov    %rdx,0x8(%rax,%rcx,8)
   21e45:	48 89 5c c8 10       	mov    %rbx,0x10(%rax,%rcx,8)
   21e4a:	48 8b 94 24 98 01 00 	mov    0x198(%rsp),%rdx
   21e51:	00 
   21e52:	48 83 c2 01          	add    $0x1,%rdx
   21e56:	48 89 94 24 98 01 00 	mov    %rdx,0x198(%rsp)
   21e5d:	00 
   21e5e:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   21e63:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
   21e68:	48 89 fe             	mov    %rdi,%rsi
   21e6b:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   21e70:	48 8d 34 0f          	lea    (%rdi,%rcx,1),%rsi
   21e74:	48 85 c9             	test   %rcx,%rcx
   21e77:	0f 85 20 ff ff ff    	jne    21d9d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x320d>
   21e7d:	e9 44 01 00 00       	jmpq   21fc6 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3436>
   21e82:	48 8d bc 24 10 01 00 	lea    0x110(%rsp),%rdi
   21e89:	00 
   21e8a:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
   21e8f:	e8 6c 7b fe ff       	callq  9a00 <gimli::read::line::FileEntryFormat::parse>
   21e94:	48 8b 84 24 20 01 00 	mov    0x120(%rsp),%rax
   21e9b:	00 
   21e9c:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   21ea1:	48 8b 84 24 18 01 00 	mov    0x118(%rsp),%rax
   21ea8:	00 
   21ea9:	48 89 84 24 a0 00 00 	mov    %rax,0xa0(%rsp)
   21eb0:	00 
   21eb1:	48 83 bc 24 10 01 00 	cmpq   $0x1,0x110(%rsp)
   21eb8:	00 01 
   21eba:	75 26                	jne    21ee2 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3352>
   21ebc:	40 b5 01             	mov    $0x1,%bpl
   21ebf:	48 8b 84 24 a0 00 00 	mov    0xa0(%rsp),%rax
   21ec6:	00 
   21ec7:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   21ecc:	48 8b 84 24 90 01 00 	mov    0x190(%rsp),%rax
   21ed3:	00 
   21ed4:	48 85 c0             	test   %rax,%rax
   21ed7:	0f 85 f8 00 00 00    	jne    21fd5 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3445>
   21edd:	e9 18 01 00 00       	jmpq   21ffa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x346a>
   21ee2:	48 8b 8c 24 28 01 00 	mov    0x128(%rsp),%rcx
   21ee9:	00 
   21eea:	48 8b 84 24 a0 00 00 	mov    0xa0(%rsp),%rax
   21ef1:	00 
   21ef2:	48 89 84 24 a0 03 00 	mov    %rax,0x3a0(%rsp)
   21ef9:	00 
   21efa:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   21eff:	48 89 84 24 a8 03 00 	mov    %rax,0x3a8(%rsp)
   21f06:	00 
   21f07:	48 89 8c 24 70 01 00 	mov    %rcx,0x170(%rsp)
   21f0e:	00 
   21f0f:	48 89 8c 24 b0 03 00 	mov    %rcx,0x3b0(%rsp)
   21f16:	00 
   21f17:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   21f1c:	48 85 c0             	test   %rax,%rax
   21f1f:	74 7e                	je     21f9f <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x340f>
   21f21:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
   21f26:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
   21f2a:	31 c9                	xor    %ecx,%ecx
   21f2c:	48 89 8c 24 b8 01 00 	mov    %rcx,0x1b8(%rsp)
   21f33:	00 
   21f34:	31 c9                	xor    %ecx,%ecx
   21f36:	48 8d 7a 01          	lea    0x1(%rdx),%rdi
   21f3a:	48 89 fe             	mov    %rdi,%rsi
   21f3d:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   21f42:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
   21f47:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   21f4c:	0f b6 12             	movzbl (%rdx),%edx
   21f4f:	83 f9 3f             	cmp    $0x3f,%ecx
   21f52:	75 05                	jne    21f59 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x33c9>
   21f54:	80 fa 01             	cmp    $0x1,%dl
   21f57:	77 5c                	ja     21fb5 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3425>
   21f59:	0f b6 d2             	movzbl %dl,%edx
   21f5c:	89 d6                	mov    %edx,%esi
   21f5e:	83 e6 7f             	and    $0x7f,%esi
   21f61:	48 d3 e6             	shl    %cl,%rsi
   21f64:	48 09 b4 24 b8 01 00 	or     %rsi,0x1b8(%rsp)
   21f6b:	00 
   21f6c:	84 d2                	test   %dl,%dl
   21f6e:	0f 89 c9 00 00 00    	jns    2203d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x34ad>
   21f74:	83 c1 07             	add    $0x7,%ecx
   21f77:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   21f7c:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
   21f80:	72 b4                	jb     21f36 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x33a6>
   21f82:	b8 13 00 00 00       	mov    $0x13,%eax
   21f87:	eb 38                	jmp    21fc1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3431>
   21f89:	31 ed                	xor    %ebp,%ebp
   21f8b:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   21f90:	48 8b 84 24 90 01 00 	mov    0x190(%rsp),%rax
   21f97:	00 
   21f98:	48 85 c0             	test   %rax,%rax
   21f9b:	75 38                	jne    21fd5 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3445>
   21f9d:	eb 5b                	jmp    21ffa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x346a>
   21f9f:	b8 13 00 00 00       	mov    $0x13,%eax
   21fa4:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   21fa9:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   21fae:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   21fb3:	eb 11                	jmp    21fc6 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3436>
   21fb5:	31 c0                	xor    %eax,%eax
   21fb7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   21fbc:	b8 06 00 00 00       	mov    $0x6,%eax
   21fc1:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   21fc6:	31 ed                	xor    %ebp,%ebp
   21fc8:	48 8b 84 24 90 01 00 	mov    0x190(%rsp),%rax
   21fcf:	00 
   21fd0:	48 85 c0             	test   %rax,%rax
   21fd3:	74 25                	je     21ffa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x346a>
   21fd5:	48 8b bc 24 88 01 00 	mov    0x188(%rsp),%rdi
   21fdc:	00 
   21fdd:	48 85 ff             	test   %rdi,%rdi
   21fe0:	74 18                	je     21ffa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x346a>
   21fe2:	48 c1 e0 03          	shl    $0x3,%rax
   21fe6:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
   21fea:	48 85 f6             	test   %rsi,%rsi
   21fed:	74 0b                	je     21ffa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x346a>
   21fef:	ba 08 00 00 00       	mov    $0x8,%edx
   21ff4:	ff 15 fe 3b 02 00    	callq  *0x23bfe(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   21ffa:	40 84 ed             	test   %bpl,%bpl
   21ffd:	75 2e                	jne    2202d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x349d>
   21fff:	48 8b b4 24 a8 03 00 	mov    0x3a8(%rsp),%rsi
   22006:	00 
   22007:	48 85 f6             	test   %rsi,%rsi
   2200a:	74 21                	je     2202d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x349d>
   2200c:	48 8b bc 24 a0 03 00 	mov    0x3a0(%rsp),%rdi
   22013:	00 
   22014:	48 85 ff             	test   %rdi,%rdi
   22017:	74 14                	je     2202d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x349d>
   22019:	48 c1 e6 02          	shl    $0x2,%rsi
   2201d:	48 85 f6             	test   %rsi,%rsi
   22020:	74 0b                	je     2202d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x349d>
   22022:	ba 02 00 00 00       	mov    $0x2,%edx
   22027:	ff 15 cb 3b 02 00    	callq  *0x23bcb(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   2202d:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   22032:	48 25 00 ff ff ff    	and    $0xffffffffffffff00,%rax
   22038:	e9 ff ed ff ff       	jmpq   20e3c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x22ac>
   2203d:	48 83 bc 24 b8 01 00 	cmpq   $0x0,0x1b8(%rsp)
   22044:	00 00 
   22046:	0f 84 d7 01 00 00    	je     22223 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3693>
   2204c:	48 83 bc 24 70 01 00 	cmpq   $0x0,0x170(%rsp)
   22053:	00 00 
   22055:	0f 84 22 1c 00 00    	je     23c7d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50ed>
   2205b:	89 e8                	mov    %ebp,%eax
   2205d:	c1 e0 10             	shl    $0x10,%eax
   22060:	0f b6 8c 24 a8 00 00 	movzbl 0xa8(%rsp),%ecx
   22067:	00 
   22068:	c1 e1 08             	shl    $0x8,%ecx
   2206b:	09 c1                	or     %eax,%ecx
   2206d:	0f b6 44 24 10       	movzbl 0x10(%rsp),%eax
   22072:	09 c8                	or     %ecx,%eax
   22074:	89 84 24 f8 00 00 00 	mov    %eax,0xf8(%rsp)
   2207b:	48 c1 a4 24 70 01 00 	shlq   $0x2,0x170(%rsp)
   22082:	00 02 
   22084:	b8 08 00 00 00       	mov    $0x8,%eax
   22089:	48 89 84 24 b0 02 00 	mov    %rax,0x2b0(%rsp)
   22090:	00 
   22091:	31 c0                	xor    %eax,%eax
   22093:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   2209a:	00 
   2209b:	31 c0                	xor    %eax,%eax
   2209d:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   220a4:	00 
   220a5:	48 83 84 24 b8 00 00 	addq   $0x1,0xb8(%rsp)
   220ac:	00 01 
   220ae:	b8 2d 00 00 00       	mov    $0x2d,%eax
   220b3:	48 89 84 24 b0 00 00 	mov    %rax,0xb0(%rsp)
   220ba:	00 
   220bb:	45 31 e4             	xor    %r12d,%r12d
   220be:	48 8b 84 24 a0 00 00 	mov    0xa0(%rsp),%rax
   220c5:	00 
   220c6:	42 0f b7 4c 20 02    	movzwl 0x2(%rax,%r12,1),%ecx
   220cc:	48 8d bc 24 10 01 00 	lea    0x110(%rsp),%rdi
   220d3:	00 
   220d4:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
   220d9:	8b 94 24 f8 00 00 00 	mov    0xf8(%rsp),%edx
   220e0:	e8 bb 7c fe ff       	callq  9da0 <gimli::read::line::parse_attribute>
   220e5:	48 8b 84 24 18 01 00 	mov    0x118(%rsp),%rax
   220ec:	00 
   220ed:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   220f2:	48 8b 84 24 20 01 00 	mov    0x120(%rsp),%rax
   220f9:	00 
   220fa:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   220ff:	48 83 bc 24 10 01 00 	cmpq   $0x1,0x110(%rsp)
   22106:	00 01 
   22108:	0f 84 b8 fe ff ff    	je     21fc6 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3436>
   2210e:	48 8b 84 24 a0 00 00 	mov    0xa0(%rsp),%rax
   22115:	00 
   22116:	4c 89 e1             	mov    %r12,%rcx
   22119:	66 42 83 3c 20 01    	cmpw   $0x1,(%rax,%r12,1)
   2211f:	48 0f 44 5c 24 08    	cmove  0x8(%rsp),%rbx
   22125:	48 8b 84 24 80 01 00 	mov    0x180(%rsp),%rax
   2212c:	00 
   2212d:	48 0f 44 84 24 28 01 	cmove  0x128(%rsp),%rax
   22134:	00 00 
   22136:	48 89 84 24 80 01 00 	mov    %rax,0x180(%rsp)
   2213d:	00 
   2213e:	48 8b 84 24 b0 00 00 	mov    0xb0(%rsp),%rax
   22145:	00 
   22146:	48 0f 44 44 24 48    	cmove  0x48(%rsp),%rax
   2214c:	48 89 84 24 b0 00 00 	mov    %rax,0xb0(%rsp)
   22153:	00 
   22154:	48 83 c1 04          	add    $0x4,%rcx
   22158:	49 89 cc             	mov    %rcx,%r12
   2215b:	48 39 8c 24 70 01 00 	cmp    %rcx,0x170(%rsp)
   22162:	00 
   22163:	0f 85 55 ff ff ff    	jne    220be <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x352e>
   22169:	48 83 bc 24 b0 00 00 	cmpq   $0x2d,0xb0(%rsp)
   22170:	00 2d 
   22172:	0f 84 05 1b 00 00    	je     23c7d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50ed>
   22178:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
   2217f:	00 
   22180:	48 3b 84 24 90 01 00 	cmp    0x190(%rsp),%rax
   22187:	00 
   22188:	75 32                	jne    221bc <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x362c>
   2218a:	be 01 00 00 00       	mov    $0x1,%esi
   2218f:	48 8d bc 24 88 01 00 	lea    0x188(%rsp),%rdi
   22196:	00 
   22197:	e8 34 76 fe ff       	callq  97d0 <alloc::vec::Vec<T>::reserve>
   2219c:	48 8b 84 24 88 01 00 	mov    0x188(%rsp),%rax
   221a3:	00 
   221a4:	48 89 84 24 b0 02 00 	mov    %rax,0x2b0(%rsp)
   221ab:	00 
   221ac:	48 8b 84 24 98 01 00 	mov    0x198(%rsp),%rax
   221b3:	00 
   221b4:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   221bb:	00 
   221bc:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
   221c3:	00 
   221c4:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
   221c8:	48 8b 8c 24 b0 02 00 	mov    0x2b0(%rsp),%rcx
   221cf:	00 
   221d0:	48 89 5c c1 08       	mov    %rbx,0x8(%rcx,%rax,8)
   221d5:	48 8b 94 24 b0 00 00 	mov    0xb0(%rsp),%rdx
   221dc:	00 
   221dd:	48 89 14 c1          	mov    %rdx,(%rcx,%rax,8)
   221e1:	48 8b 94 24 80 01 00 	mov    0x180(%rsp),%rdx
   221e8:	00 
   221e9:	48 89 54 c1 10       	mov    %rdx,0x10(%rcx,%rax,8)
   221ee:	48 8b 8c 24 98 01 00 	mov    0x198(%rsp),%rcx
   221f5:	00 
   221f6:	48 83 c1 01          	add    $0x1,%rcx
   221fa:	48 89 c8             	mov    %rcx,%rax
   221fd:	48 89 8c 24 98 00 00 	mov    %rcx,0x98(%rsp)
   22204:	00 
   22205:	48 89 8c 24 98 01 00 	mov    %rcx,0x198(%rsp)
   2220c:	00 
   2220d:	48 8b 84 24 b8 00 00 	mov    0xb8(%rsp),%rax
   22214:	00 
   22215:	48 3b 84 24 b8 01 00 	cmp    0x1b8(%rsp),%rax
   2221c:	00 
   2221d:	0f 85 82 fe ff ff    	jne    220a5 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3515>
   22223:	45 31 e4             	xor    %r12d,%r12d
   22226:	48 c7 84 24 c0 00 00 	movq   $0x8,0xc0(%rsp)
   2222d:	00 08 00 00 00 
   22232:	66 0f ef c0          	pxor   %xmm0,%xmm0
   22236:	48 8d 84 24 c8 00 00 	lea    0xc8(%rsp),%rax
   2223d:	00 
   2223e:	f3 0f 7f 00          	movdqu %xmm0,(%rax)
   22242:	66 83 7c 24 18 05    	cmpw   $0x5,0x18(%rsp)
   22248:	73 3b                	jae    22285 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x36f5>
   2224a:	48 83 bc 24 e0 00 00 	cmpq   $0x0,0xe0(%rsp)
   22251:	00 00 
   22253:	0f 84 36 01 00 00    	je     2238f <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x37ff>
   22259:	66 0f ef c0          	pxor   %xmm0,%xmm0
   2225d:	66 0f 7f 84 24 20 01 	movdqa %xmm0,0x120(%rsp)
   22264:	00 00 
   22266:	66 0f 7f 84 24 10 01 	movdqa %xmm0,0x110(%rsp)
   2226d:	00 00 
   2226f:	48 c7 84 24 30 01 00 	movq   $0x0,0x130(%rsp)
   22276:	00 00 00 00 00 
   2227b:	bd 1f 00 00 00       	mov    $0x1f,%ebp
   22280:	e9 0f 01 00 00       	jmpq   22394 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3804>
   22285:	48 8d bc 24 10 01 00 	lea    0x110(%rsp),%rdi
   2228c:	00 
   2228d:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
   22292:	e8 69 77 fe ff       	callq  9a00 <gimli::read::line::FileEntryFormat::parse>
   22297:	48 8b 84 24 20 01 00 	mov    0x120(%rsp),%rax
   2229e:	00 
   2229f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   222a4:	48 8b 84 24 18 01 00 	mov    0x118(%rsp),%rax
   222ab:	00 
   222ac:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   222b1:	48 83 bc 24 10 01 00 	cmpq   $0x1,0x110(%rsp)
   222b8:	00 01 
   222ba:	75 24                	jne    222e0 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3750>
   222bc:	b3 01                	mov    $0x1,%bl
   222be:	e9 40 03 00 00       	jmpq   22603 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3a73>
   222c3:	31 ed                	xor    %ebp,%ebp
   222c5:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   222ca:	48 8b 84 24 90 01 00 	mov    0x190(%rsp),%rax
   222d1:	00 
   222d2:	48 85 c0             	test   %rax,%rax
   222d5:	0f 85 fa fc ff ff    	jne    21fd5 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3445>
   222db:	e9 1a fd ff ff       	jmpq   21ffa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x346a>
   222e0:	48 8b 8c 24 28 01 00 	mov    0x128(%rsp),%rcx
   222e7:	00 
   222e8:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   222ed:	48 89 84 24 d8 02 00 	mov    %rax,0x2d8(%rsp)
   222f4:	00 
   222f5:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   222fa:	48 89 84 24 e0 02 00 	mov    %rax,0x2e0(%rsp)
   22301:	00 
   22302:	48 89 8c 24 80 01 00 	mov    %rcx,0x180(%rsp)
   22309:	00 
   2230a:	48 89 8c 24 e8 02 00 	mov    %rcx,0x2e8(%rsp)
   22311:	00 
   22312:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   22317:	48 85 c0             	test   %rax,%rax
   2231a:	0f 84 ba 02 00 00    	je     225da <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3a4a>
   22320:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
   22325:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
   22329:	31 c9                	xor    %ecx,%ecx
   2232b:	48 89 8c 24 b0 00 00 	mov    %rcx,0xb0(%rsp)
   22332:	00 
   22333:	31 c9                	xor    %ecx,%ecx
   22335:	48 8d 7a 01          	lea    0x1(%rdx),%rdi
   22339:	48 89 fe             	mov    %rdi,%rsi
   2233c:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   22341:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
   22346:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   2234b:	0f b6 12             	movzbl (%rdx),%edx
   2234e:	83 f9 3f             	cmp    $0x3f,%ecx
   22351:	75 09                	jne    2235c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x37cc>
   22353:	80 fa 01             	cmp    $0x1,%dl
   22356:	0f 87 94 02 00 00    	ja     225f0 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3a60>
   2235c:	0f b6 d2             	movzbl %dl,%edx
   2235f:	89 d6                	mov    %edx,%esi
   22361:	83 e6 7f             	and    $0x7f,%esi
   22364:	48 d3 e6             	shl    %cl,%rsi
   22367:	48 09 b4 24 b0 00 00 	or     %rsi,0xb0(%rsp)
   2236e:	00 
   2236f:	84 d2                	test   %dl,%dl
   22371:	0f 89 fe 02 00 00    	jns    22675 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3ae5>
   22377:	83 c1 07             	add    $0x7,%ecx
   2237a:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   2237f:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
   22383:	72 b0                	jb     22335 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x37a5>
   22385:	b8 13 00 00 00       	mov    $0x13,%eax
   2238a:	e9 6d 02 00 00       	jmpq   225fc <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3a6c>
   2238f:	bd 2d 00 00 00       	mov    $0x2d,%ebp
   22394:	48 8b 84 24 30 01 00 	mov    0x130(%rsp),%rax
   2239b:	00 
   2239c:	48 89 84 24 20 02 00 	mov    %rax,0x220(%rsp)
   223a3:	00 
   223a4:	66 0f 6f 84 24 10 01 	movdqa 0x110(%rsp),%xmm0
   223ab:	00 00 
   223ad:	0f 28 8c 24 20 01 00 	movaps 0x120(%rsp),%xmm1
   223b4:	00 
   223b5:	0f 29 8c 24 10 02 00 	movaps %xmm1,0x210(%rsp)
   223bc:	00 
   223bd:	66 0f 7f 84 24 00 02 	movdqa %xmm0,0x200(%rsp)
   223c4:	00 00 
   223c6:	48 c7 84 24 d8 02 00 	movq   $0x2,0x2d8(%rsp)
   223cd:	00 02 00 00 00 
   223d2:	66 0f ef c0          	pxor   %xmm0,%xmm0
   223d6:	48 8d 84 24 e0 02 00 	lea    0x2e0(%rsp),%rax
   223dd:	00 
   223de:	f3 0f 7f 00          	movdqu %xmm0,(%rax)
   223e2:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   223e7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   223ec:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   223f1:	b9 13 00 00 00       	mov    $0x13,%ecx
   223f6:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
   223fb:	48 85 c0             	test   %rax,%rax
   223fe:	0f 84 fd 01 00 00    	je     22601 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3a71>
   22404:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   22409:	48 01 c2             	add    %rax,%rdx
   2240c:	b9 08 00 00 00       	mov    $0x8,%ecx
   22411:	48 89 8c 24 a0 00 00 	mov    %rcx,0xa0(%rsp)
   22418:	00 
   22419:	31 db                	xor    %ebx,%ebx
   2241b:	48 2b 54 24 08       	sub    0x8(%rsp),%rdx
   22420:	31 c9                	xor    %ecx,%ecx
   22422:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   22427:	80 3c 0e 00          	cmpb   $0x0,(%rsi,%rcx,1)
   2242b:	74 0e                	je     2243b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x38ab>
   2242d:	48 83 c1 01          	add    $0x1,%rcx
   22431:	48 39 ca             	cmp    %rcx,%rdx
   22434:	75 ec                	jne    22422 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3892>
   22436:	e9 c6 01 00 00       	jmpq   22601 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3a71>
   2243b:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   22440:	48 01 ca             	add    %rcx,%rdx
   22443:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   22448:	48 89 c6             	mov    %rax,%rsi
   2244b:	48 29 ce             	sub    %rcx,%rsi
   2244e:	48 89 74 24 38       	mov    %rsi,0x38(%rsp)
   22453:	0f 84 8d 08 00 00    	je     22ce6 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4156>
   22459:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   2245e:	48 01 ca             	add    %rcx,%rdx
   22461:	48 83 c2 01          	add    $0x1,%rdx
   22465:	48 89 ce             	mov    %rcx,%rsi
   22468:	48 f7 d6             	not    %rsi
   2246b:	48 01 c6             	add    %rax,%rsi
   2246e:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   22473:	48 89 74 24 38       	mov    %rsi,0x38(%rsp)
   22478:	48 85 c9             	test   %rcx,%rcx
   2247b:	0f 84 88 07 00 00    	je     22c09 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4079>
   22481:	48 8d bc 24 10 01 00 	lea    0x110(%rsp),%rdi
   22488:	00 
   22489:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
   2248e:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   22493:	e8 48 82 fe ff       	callq  a6e0 <gimli::read::line::FileEntry<R,Offset>::parse>
   22498:	48 8b 84 24 20 01 00 	mov    0x120(%rsp),%rax
   2249f:	00 
   224a0:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   224a5:	48 8b 84 24 10 01 00 	mov    0x110(%rsp),%rax
   224ac:	00 
   224ad:	48 8b 8c 24 18 01 00 	mov    0x118(%rsp),%rcx
   224b4:	00 
   224b5:	48 89 8c 24 b0 00 00 	mov    %rcx,0xb0(%rsp)
   224bc:	00 
   224bd:	48 8d 8c 24 30 01 00 	lea    0x130(%rsp),%rcx
   224c4:	00 
   224c5:	f3 0f 6f 41 f8       	movdqu -0x8(%rcx),%xmm0
   224ca:	0f 10 49 08          	movups 0x8(%rcx),%xmm1
   224ce:	0f 10 51 18          	movups 0x18(%rcx),%xmm2
   224d2:	66 0f 7f 84 24 50 02 	movdqa %xmm0,0x250(%rsp)
   224d9:	00 00 
   224db:	0f 29 8c 24 60 02 00 	movaps %xmm1,0x260(%rsp)
   224e2:	00 
   224e3:	0f 29 94 24 70 02 00 	movaps %xmm2,0x270(%rsp)
   224ea:	00 
   224eb:	48 83 f8 01          	cmp    $0x1,%rax
   224ef:	0f 84 fd 07 00 00    	je     22cf2 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4162>
   224f5:	66 0f 6f 84 24 50 02 	movdqa 0x250(%rsp),%xmm0
   224fc:	00 00 
   224fe:	0f 28 8c 24 60 02 00 	movaps 0x260(%rsp),%xmm1
   22505:	00 
   22506:	0f 28 94 24 70 02 00 	movaps 0x270(%rsp),%xmm2
   2250d:	00 
   2250e:	0f 29 94 24 10 03 00 	movaps %xmm2,0x310(%rsp)
   22515:	00 
   22516:	0f 29 8c 24 00 03 00 	movaps %xmm1,0x300(%rsp)
   2251d:	00 
   2251e:	66 0f 7f 84 24 f0 02 	movdqa %xmm0,0x2f0(%rsp)
   22525:	00 00 
   22527:	48 3b 9c 24 c8 00 00 	cmp    0xc8(%rsp),%rbx
   2252e:	00 
   2252f:	75 2a                	jne    2255b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x39cb>
   22531:	be 01 00 00 00       	mov    $0x1,%esi
   22536:	48 8d bc 24 c0 00 00 	lea    0xc0(%rsp),%rdi
   2253d:	00 
   2253e:	e8 6d 73 fe ff       	callq  98b0 <alloc::vec::Vec<T>::reserve>
   22543:	48 8b 84 24 c0 00 00 	mov    0xc0(%rsp),%rax
   2254a:	00 
   2254b:	48 89 84 24 a0 00 00 	mov    %rax,0xa0(%rsp)
   22552:	00 
   22553:	48 8b 9c 24 d0 00 00 	mov    0xd0(%rsp),%rbx
   2255a:	00 
   2255b:	48 c1 e3 06          	shl    $0x6,%rbx
   2255f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   22564:	48 8b 8c 24 a0 00 00 	mov    0xa0(%rsp),%rcx
   2256b:	00 
   2256c:	48 89 44 19 08       	mov    %rax,0x8(%rcx,%rbx,1)
   22571:	48 8b 84 24 b0 00 00 	mov    0xb0(%rsp),%rax
   22578:	00 
   22579:	48 89 04 19          	mov    %rax,(%rcx,%rbx,1)
   2257d:	66 0f 6f 84 24 f0 02 	movdqa 0x2f0(%rsp),%xmm0
   22584:	00 00 
   22586:	0f 28 8c 24 00 03 00 	movaps 0x300(%rsp),%xmm1
   2258d:	00 
   2258e:	0f 28 94 24 10 03 00 	movaps 0x310(%rsp),%xmm2
   22595:	00 
   22596:	f3 0f 7f 44 19 10    	movdqu %xmm0,0x10(%rcx,%rbx,1)
   2259c:	0f 11 4c 19 20       	movups %xmm1,0x20(%rcx,%rbx,1)
   225a1:	0f 11 54 19 30       	movups %xmm2,0x30(%rcx,%rbx,1)
   225a6:	48 8b 9c 24 d0 00 00 	mov    0xd0(%rsp),%rbx
   225ad:	00 
   225ae:	48 83 c3 01          	add    $0x1,%rbx
   225b2:	48 89 9c 24 d0 00 00 	mov    %rbx,0xd0(%rsp)
   225b9:	00 
   225ba:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
   225bf:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   225c4:	48 89 d1             	mov    %rdx,%rcx
   225c7:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   225cc:	48 01 c2             	add    %rax,%rdx
   225cf:	48 85 c0             	test   %rax,%rax
   225d2:	0f 85 43 fe ff ff    	jne    2241b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x388b>
   225d8:	eb 27                	jmp    22601 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3a71>
   225da:	b8 13 00 00 00       	mov    $0x13,%eax
   225df:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   225e4:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   225e9:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   225ee:	eb 11                	jmp    22601 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3a71>
   225f0:	31 c0                	xor    %eax,%eax
   225f2:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   225f7:	b8 06 00 00 00       	mov    $0x6,%eax
   225fc:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   22601:	31 db                	xor    %ebx,%ebx
   22603:	48 8b b4 24 c8 00 00 	mov    0xc8(%rsp),%rsi
   2260a:	00 
   2260b:	48 85 f6             	test   %rsi,%rsi
   2260e:	74 1e                	je     2262e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3a9e>
   22610:	48 8b bc 24 c0 00 00 	mov    0xc0(%rsp),%rdi
   22617:	00 
   22618:	48 85 ff             	test   %rdi,%rdi
   2261b:	74 11                	je     2262e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3a9e>
   2261d:	48 c1 e6 06          	shl    $0x6,%rsi
   22621:	74 0b                	je     2262e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3a9e>
   22623:	ba 08 00 00 00       	mov    $0x8,%edx
   22628:	ff 15 ca 35 02 00    	callq  *0x235ca(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   2262e:	84 db                	test   %bl,%bl
   22630:	0f 85 90 f9 ff ff    	jne    21fc6 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3436>
   22636:	48 8b b4 24 e0 02 00 	mov    0x2e0(%rsp),%rsi
   2263d:	00 
   2263e:	48 85 f6             	test   %rsi,%rsi
   22641:	0f 84 7f f9 ff ff    	je     21fc6 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3436>
   22647:	48 8b bc 24 d8 02 00 	mov    0x2d8(%rsp),%rdi
   2264e:	00 
   2264f:	48 85 ff             	test   %rdi,%rdi
   22652:	0f 84 6e f9 ff ff    	je     21fc6 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3436>
   22658:	48 c1 e6 02          	shl    $0x2,%rsi
   2265c:	48 85 f6             	test   %rsi,%rsi
   2265f:	0f 84 61 f9 ff ff    	je     21fc6 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3436>
   22665:	ba 02 00 00 00       	mov    $0x2,%edx
   2266a:	ff 15 88 35 02 00    	callq  *0x23588(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   22670:	e9 51 f9 ff ff       	jmpq   21fc6 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3436>
   22675:	48 83 bc 24 b0 00 00 	cmpq   $0x0,0xb0(%rsp)
   2267c:	00 00 
   2267e:	0f 84 80 05 00 00    	je     22c04 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4074>
   22684:	48 83 bc 24 80 01 00 	cmpq   $0x0,0x180(%rsp)
   2268b:	00 00 
   2268d:	0f 84 05 16 00 00    	je     23c98 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5108>
   22693:	c1 e5 10             	shl    $0x10,%ebp
   22696:	0f b6 84 24 a8 00 00 	movzbl 0xa8(%rsp),%eax
   2269d:	00 
   2269e:	c1 e0 08             	shl    $0x8,%eax
   226a1:	09 e8                	or     %ebp,%eax
   226a3:	0f b6 4c 24 10       	movzbl 0x10(%rsp),%ecx
   226a8:	09 c1                	or     %eax,%ecx
   226aa:	89 8c 24 b8 01 00 00 	mov    %ecx,0x1b8(%rsp)
   226b1:	48 c1 a4 24 80 01 00 	shlq   $0x2,0x180(%rsp)
   226b8:	00 02 
   226ba:	b8 08 00 00 00       	mov    $0x8,%eax
   226bf:	48 89 84 24 b8 03 00 	mov    %rax,0x3b8(%rsp)
   226c6:	00 
   226c7:	31 c0                	xor    %eax,%eax
   226c9:	48 89 84 24 a8 02 00 	mov    %rax,0x2a8(%rsp)
   226d0:	00 
   226d1:	31 c0                	xor    %eax,%eax
   226d3:	48 89 84 24 c0 03 00 	mov    %rax,0x3c0(%rsp)
   226da:	00 
   226db:	48 83 84 24 c0 03 00 	addq   $0x1,0x3c0(%rsp)
   226e2:	00 01 
   226e4:	b8 2d 00 00 00       	mov    $0x2d,%eax
   226e9:	48 89 84 24 70 01 00 	mov    %rax,0x170(%rsp)
   226f0:	00 
   226f1:	31 c0                	xor    %eax,%eax
   226f3:	48 89 84 24 a0 00 00 	mov    %rax,0xa0(%rsp)
   226fa:	00 
   226fb:	31 c0                	xor    %eax,%eax
   226fd:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   22704:	00 
   22705:	31 c0                	xor    %eax,%eax
   22707:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   2270e:	00 
   2270f:	31 c0                	xor    %eax,%eax
   22711:	48 89 84 24 f8 00 00 	mov    %rax,0xf8(%rsp)
   22718:	00 
   22719:	31 c0                	xor    %eax,%eax
   2271b:	48 89 84 24 d8 03 00 	mov    %rax,0x3d8(%rsp)
   22722:	00 
   22723:	31 c0                	xor    %eax,%eax
   22725:	48 89 84 24 d0 03 00 	mov    %rax,0x3d0(%rsp)
   2272c:	00 
   2272d:	31 c0                	xor    %eax,%eax
   2272f:	48 89 84 24 c8 03 00 	mov    %rax,0x3c8(%rsp)
   22736:	00 
   22737:	eb 58                	jmp    22791 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3c01>
   22739:	c1 e2 08             	shl    $0x8,%edx
   2273c:	0f b6 6c 24 08       	movzbl 0x8(%rsp),%ebp
   22741:	c1 e0 10             	shl    $0x10,%eax
   22744:	0f b7 d2             	movzwl %dx,%edx
   22747:	48 c1 e1 20          	shl    $0x20,%rcx
   2274b:	48 09 e9             	or     %rbp,%rcx
   2274e:	48 09 d1             	or     %rdx,%rcx
   22751:	48 09 c8             	or     %rcx,%rax
   22754:	48 89 84 24 c8 06 00 	mov    %rax,0x6c8(%rsp)
   2275b:	00 
   2275c:	48 89 bc 24 b0 02 00 	mov    %rdi,0x2b0(%rsp)
   22763:	00 
   22764:	48 89 b4 24 70 01 00 	mov    %rsi,0x170(%rsp)
   2276b:	00 
   2276c:	48 8b 8c 24 a0 00 00 	mov    0xa0(%rsp),%rcx
   22773:	00 
   22774:	48 83 c1 04          	add    $0x4,%rcx
   22778:	48 89 c8             	mov    %rcx,%rax
   2277b:	48 89 8c 24 a0 00 00 	mov    %rcx,0xa0(%rsp)
   22782:	00 
   22783:	48 39 8c 24 80 01 00 	cmp    %rcx,0x180(%rsp)
   2278a:	00 
   2278b:	0f 84 51 03 00 00    	je     22ae2 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3f52>
   22791:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   22796:	48 8b 8c 24 a0 00 00 	mov    0xa0(%rsp),%rcx
   2279d:	00 
   2279e:	0f b7 4c 08 02       	movzwl 0x2(%rax,%rcx,1),%ecx
   227a3:	48 8d bc 24 10 01 00 	lea    0x110(%rsp),%rdi
   227aa:	00 
   227ab:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
   227b0:	8b 94 24 b8 01 00 00 	mov    0x1b8(%rsp),%edx
   227b7:	e8 e4 75 fe ff       	callq  9da0 <gimli::read::line::parse_attribute>
   227bc:	48 8b 84 24 20 01 00 	mov    0x120(%rsp),%rax
   227c3:	00 
   227c4:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   227c9:	48 8b b4 24 18 01 00 	mov    0x118(%rsp),%rsi
   227d0:	00 
   227d1:	48 83 bc 24 10 01 00 	cmpq   $0x1,0x110(%rsp)
   227d8:	00 01 
   227da:	0f 84 fa 04 00 00    	je     22cda <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x414a>
   227e0:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   227e5:	48 8b 8c 24 a0 00 00 	mov    0xa0(%rsp),%rcx
   227ec:	00 
   227ed:	0f b7 2c 08          	movzwl (%rax,%rcx,1),%ebp
   227f1:	83 c5 ff             	add    $0xffffffff,%ebp
   227f4:	66 83 fd 04          	cmp    $0x4,%bp
   227f8:	0f 87 6e ff ff ff    	ja     2276c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   227fe:	48 8b bc 24 28 01 00 	mov    0x128(%rsp),%rdi
   22805:	00 
   22806:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   2280b:	48 89 ca             	mov    %rcx,%rdx
   2280e:	48 c1 ea 08          	shr    $0x8,%rdx
   22812:	48 89 c8             	mov    %rcx,%rax
   22815:	48 c1 e8 10          	shr    $0x10,%rax
   22819:	48 c1 e9 20          	shr    $0x20,%rcx
   2281d:	0f b7 ed             	movzwl %bp,%ebp
   22820:	48 8d 1d d5 49 01 00 	lea    0x149d5(%rip),%rbx        # 371fc <_fini+0x18d8>
   22827:	48 63 2c ab          	movslq (%rbx,%rbp,4),%rbp
   2282b:	48 01 dd             	add    %rbx,%rbp
   2282e:	ff e5                	jmpq   *%rbp
   22830:	48 83 c6 fe          	add    $0xfffffffffffffffe,%rsi
   22834:	48 83 fe 05          	cmp    $0x5,%rsi
   22838:	0f 87 2e ff ff ff    	ja     2276c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   2283e:	48 8d 3d fb 49 01 00 	lea    0x149fb(%rip),%rdi        # 37240 <_fini+0x191c>
   22845:	48 63 34 b7          	movslq (%rdi,%rsi,4),%rsi
   22849:	48 01 fe             	add    %rdi,%rsi
   2284c:	ff e6                	jmpq   *%rsi
   2284e:	c1 e2 08             	shl    $0x8,%edx
   22851:	0f b6 74 24 08       	movzbl 0x8(%rsp),%esi
   22856:	c1 e0 10             	shl    $0x10,%eax
   22859:	0f b7 d2             	movzwl %dx,%edx
   2285c:	48 c1 e1 20          	shl    $0x20,%rcx
   22860:	48 09 f1             	or     %rsi,%rcx
   22863:	48 09 d1             	or     %rdx,%rcx
   22866:	48 09 c8             	or     %rcx,%rax
   22869:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   22870:	00 
   22871:	e9 f6 fe ff ff       	jmpq   2276c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   22876:	48 83 c6 fe          	add    $0xfffffffffffffffe,%rsi
   2287a:	48 83 fe 05          	cmp    $0x5,%rsi
   2287e:	0f 87 e8 fe ff ff    	ja     2276c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   22884:	48 8d 3d 9d 49 01 00 	lea    0x1499d(%rip),%rdi        # 37228 <_fini+0x1904>
   2288b:	48 63 34 b7          	movslq (%rdi,%rsi,4),%rsi
   2288f:	48 01 fe             	add    %rdi,%rsi
   22892:	ff e6                	jmpq   *%rsi
   22894:	c1 e2 08             	shl    $0x8,%edx
   22897:	0f b6 74 24 08       	movzbl 0x8(%rsp),%esi
   2289c:	c1 e0 10             	shl    $0x10,%eax
   2289f:	0f b7 d2             	movzwl %dx,%edx
   228a2:	48 c1 e1 20          	shl    $0x20,%rcx
   228a6:	48 09 f1             	or     %rsi,%rcx
   228a9:	48 09 d1             	or     %rdx,%rcx
   228ac:	48 09 c8             	or     %rcx,%rax
   228af:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   228b6:	00 
   228b7:	e9 b0 fe ff ff       	jmpq   2276c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   228bc:	48 83 c6 fe          	add    $0xfffffffffffffffe,%rsi
   228c0:	48 83 fe 05          	cmp    $0x5,%rsi
   228c4:	0f 87 a2 fe ff ff    	ja     2276c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   228ca:	48 8d 3d 3f 49 01 00 	lea    0x1493f(%rip),%rdi        # 37210 <_fini+0x18ec>
   228d1:	48 63 34 b7          	movslq (%rdi,%rsi,4),%rsi
   228d5:	48 01 fe             	add    %rdi,%rsi
   228d8:	ff e6                	jmpq   *%rsi
   228da:	c1 e2 08             	shl    $0x8,%edx
   228dd:	0f b6 74 24 08       	movzbl 0x8(%rsp),%esi
   228e2:	c1 e0 10             	shl    $0x10,%eax
   228e5:	0f b7 d2             	movzwl %dx,%edx
   228e8:	48 c1 e1 20          	shl    $0x20,%rcx
   228ec:	48 09 f1             	or     %rsi,%rcx
   228ef:	48 09 d1             	or     %rdx,%rcx
   228f2:	48 09 c8             	or     %rcx,%rax
   228f5:	48 89 84 24 f8 00 00 	mov    %rax,0xf8(%rsp)
   228fc:	00 
   228fd:	e9 6a fe ff ff       	jmpq   2276c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   22902:	48 83 fe 01          	cmp    $0x1,%rsi
   22906:	0f 85 60 fe ff ff    	jne    2276c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   2290c:	48 83 ff 10          	cmp    $0x10,%rdi
   22910:	0f 85 56 fe ff ff    	jne    2276c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   22916:	48 c1 e1 20          	shl    $0x20,%rcx
   2291a:	0f b6 74 24 08       	movzbl 0x8(%rsp),%esi
   2291f:	48 09 ce             	or     %rcx,%rsi
   22922:	c1 e2 08             	shl    $0x8,%edx
   22925:	0f b7 ca             	movzwl %dx,%ecx
   22928:	c1 e0 10             	shl    $0x10,%eax
   2292b:	48 09 f1             	or     %rsi,%rcx
   2292e:	0f b7 54 08 04       	movzwl 0x4(%rax,%rcx,1),%edx
   22933:	0f b6 74 08 06       	movzbl 0x6(%rax,%rcx,1),%esi
   22938:	c1 e6 10             	shl    $0x10,%esi
   2293b:	09 d6                	or     %edx,%esi
   2293d:	48 c1 e6 20          	shl    $0x20,%rsi
   22941:	8b 14 08             	mov    (%rax,%rcx,1),%edx
   22944:	48 09 f2             	or     %rsi,%rdx
   22947:	48 89 94 24 d8 03 00 	mov    %rdx,0x3d8(%rsp)
   2294e:	00 
   2294f:	48 8b 54 08 07       	mov    0x7(%rax,%rcx,1),%rdx
   22954:	48 89 94 24 d0 03 00 	mov    %rdx,0x3d0(%rsp)
   2295b:	00 
   2295c:	0f b6 44 08 0f       	movzbl 0xf(%rax,%rcx,1),%eax
   22961:	48 89 84 24 c8 03 00 	mov    %rax,0x3c8(%rsp)
   22968:	00 
   22969:	e9 fe fd ff ff       	jmpq   2276c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   2296e:	0f b6 44 24 08       	movzbl 0x8(%rsp),%eax
   22973:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   2297a:	00 
   2297b:	e9 ec fd ff ff       	jmpq   2276c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   22980:	c1 e2 08             	shl    $0x8,%edx
   22983:	0f b6 44 24 08       	movzbl 0x8(%rsp),%eax
   22988:	0f b7 ca             	movzwl %dx,%ecx
   2298b:	48 09 c1             	or     %rax,%rcx
   2298e:	48 89 8c 24 b8 00 00 	mov    %rcx,0xb8(%rsp)
   22995:	00 
   22996:	e9 d1 fd ff ff       	jmpq   2276c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   2299b:	c1 e2 08             	shl    $0x8,%edx
   2299e:	0f b6 4c 24 08       	movzbl 0x8(%rsp),%ecx
   229a3:	c1 e0 10             	shl    $0x10,%eax
   229a6:	0f b7 d2             	movzwl %dx,%edx
   229a9:	48 09 ca             	or     %rcx,%rdx
   229ac:	48 09 d0             	or     %rdx,%rax
   229af:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   229b6:	00 
   229b7:	e9 b0 fd ff ff       	jmpq   2276c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   229bc:	c1 e2 08             	shl    $0x8,%edx
   229bf:	0f b6 74 24 08       	movzbl 0x8(%rsp),%esi
   229c4:	c1 e0 10             	shl    $0x10,%eax
   229c7:	0f b7 d2             	movzwl %dx,%edx
   229ca:	48 c1 e1 20          	shl    $0x20,%rcx
   229ce:	48 09 f1             	or     %rsi,%rcx
   229d1:	48 09 d1             	or     %rdx,%rcx
   229d4:	48 09 c8             	or     %rcx,%rax
   229d7:	0f 88 8f fd ff ff    	js     2276c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   229dd:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   229e4:	00 
   229e5:	e9 82 fd ff ff       	jmpq   2276c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   229ea:	0f b6 44 24 08       	movzbl 0x8(%rsp),%eax
   229ef:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   229f6:	00 
   229f7:	e9 70 fd ff ff       	jmpq   2276c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   229fc:	c1 e2 08             	shl    $0x8,%edx
   229ff:	0f b6 44 24 08       	movzbl 0x8(%rsp),%eax
   22a04:	0f b7 ca             	movzwl %dx,%ecx
   22a07:	48 09 c1             	or     %rax,%rcx
   22a0a:	48 89 8c 24 98 00 00 	mov    %rcx,0x98(%rsp)
   22a11:	00 
   22a12:	e9 55 fd ff ff       	jmpq   2276c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   22a17:	c1 e2 08             	shl    $0x8,%edx
   22a1a:	0f b6 4c 24 08       	movzbl 0x8(%rsp),%ecx
   22a1f:	c1 e0 10             	shl    $0x10,%eax
   22a22:	0f b7 d2             	movzwl %dx,%edx
   22a25:	48 09 ca             	or     %rcx,%rdx
   22a28:	48 09 d0             	or     %rdx,%rax
   22a2b:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   22a32:	00 
   22a33:	e9 34 fd ff ff       	jmpq   2276c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   22a38:	c1 e2 08             	shl    $0x8,%edx
   22a3b:	0f b6 74 24 08       	movzbl 0x8(%rsp),%esi
   22a40:	c1 e0 10             	shl    $0x10,%eax
   22a43:	0f b7 d2             	movzwl %dx,%edx
   22a46:	48 c1 e1 20          	shl    $0x20,%rcx
   22a4a:	48 09 f1             	or     %rsi,%rcx
   22a4d:	48 09 d1             	or     %rdx,%rcx
   22a50:	48 09 c8             	or     %rcx,%rax
   22a53:	0f 88 13 fd ff ff    	js     2276c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   22a59:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   22a60:	00 
   22a61:	e9 06 fd ff ff       	jmpq   2276c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   22a66:	0f b6 44 24 08       	movzbl 0x8(%rsp),%eax
   22a6b:	48 89 84 24 f8 00 00 	mov    %rax,0xf8(%rsp)
   22a72:	00 
   22a73:	e9 f4 fc ff ff       	jmpq   2276c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   22a78:	c1 e2 08             	shl    $0x8,%edx
   22a7b:	0f b6 44 24 08       	movzbl 0x8(%rsp),%eax
   22a80:	0f b7 ca             	movzwl %dx,%ecx
   22a83:	48 09 c1             	or     %rax,%rcx
   22a86:	48 89 8c 24 f8 00 00 	mov    %rcx,0xf8(%rsp)
   22a8d:	00 
   22a8e:	e9 d9 fc ff ff       	jmpq   2276c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   22a93:	c1 e2 08             	shl    $0x8,%edx
   22a96:	0f b6 4c 24 08       	movzbl 0x8(%rsp),%ecx
   22a9b:	c1 e0 10             	shl    $0x10,%eax
   22a9e:	0f b7 d2             	movzwl %dx,%edx
   22aa1:	48 09 ca             	or     %rcx,%rdx
   22aa4:	48 09 d0             	or     %rdx,%rax
   22aa7:	48 89 84 24 f8 00 00 	mov    %rax,0xf8(%rsp)
   22aae:	00 
   22aaf:	e9 b8 fc ff ff       	jmpq   2276c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   22ab4:	c1 e2 08             	shl    $0x8,%edx
   22ab7:	0f b6 74 24 08       	movzbl 0x8(%rsp),%esi
   22abc:	c1 e0 10             	shl    $0x10,%eax
   22abf:	0f b7 d2             	movzwl %dx,%edx
   22ac2:	48 c1 e1 20          	shl    $0x20,%rcx
   22ac6:	48 09 f1             	or     %rsi,%rcx
   22ac9:	48 09 d1             	or     %rdx,%rcx
   22acc:	48 09 c8             	or     %rcx,%rax
   22acf:	0f 88 97 fc ff ff    	js     2276c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   22ad5:	48 89 84 24 f8 00 00 	mov    %rax,0xf8(%rsp)
   22adc:	00 
   22add:	e9 8a fc ff ff       	jmpq   2276c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   22ae2:	48 83 bc 24 70 01 00 	cmpq   $0x2d,0x170(%rsp)
   22ae9:	00 2d 
   22aeb:	0f 84 a7 11 00 00    	je     23c98 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5108>
   22af1:	48 8b 84 24 a8 02 00 	mov    0x2a8(%rsp),%rax
   22af8:	00 
   22af9:	48 3b 84 24 c8 00 00 	cmp    0xc8(%rsp),%rax
   22b00:	00 
   22b01:	75 32                	jne    22b35 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3fa5>
   22b03:	be 01 00 00 00       	mov    $0x1,%esi
   22b08:	48 8d bc 24 c0 00 00 	lea    0xc0(%rsp),%rdi
   22b0f:	00 
   22b10:	e8 9b 6d fe ff       	callq  98b0 <alloc::vec::Vec<T>::reserve>
   22b15:	48 8b 84 24 c0 00 00 	mov    0xc0(%rsp),%rax
   22b1c:	00 
   22b1d:	48 89 84 24 b8 03 00 	mov    %rax,0x3b8(%rsp)
   22b24:	00 
   22b25:	48 8b 84 24 d0 00 00 	mov    0xd0(%rsp),%rax
   22b2c:	00 
   22b2d:	48 89 84 24 a8 02 00 	mov    %rax,0x2a8(%rsp)
   22b34:	00 
   22b35:	48 8b 94 24 a8 02 00 	mov    0x2a8(%rsp),%rdx
   22b3c:	00 
   22b3d:	48 c1 e2 06          	shl    $0x6,%rdx
   22b41:	48 8b 8c 24 b8 03 00 	mov    0x3b8(%rsp),%rcx
   22b48:	00 
   22b49:	48 8b 84 24 c8 06 00 	mov    0x6c8(%rsp),%rax
   22b50:	00 
   22b51:	48 89 44 11 08       	mov    %rax,0x8(%rcx,%rdx,1)
   22b56:	48 8b 84 24 70 01 00 	mov    0x170(%rsp),%rax
   22b5d:	00 
   22b5e:	48 89 04 11          	mov    %rax,(%rcx,%rdx,1)
   22b62:	48 8b 84 24 b0 02 00 	mov    0x2b0(%rsp),%rax
   22b69:	00 
   22b6a:	48 89 44 11 10       	mov    %rax,0x10(%rcx,%rdx,1)
   22b6f:	48 8b 84 24 b8 00 00 	mov    0xb8(%rsp),%rax
   22b76:	00 
   22b77:	48 89 44 11 18       	mov    %rax,0x18(%rcx,%rdx,1)
   22b7c:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
   22b83:	00 
   22b84:	48 89 44 11 20       	mov    %rax,0x20(%rcx,%rdx,1)
   22b89:	48 8b 84 24 f8 00 00 	mov    0xf8(%rsp),%rax
   22b90:	00 
   22b91:	48 89 44 11 28       	mov    %rax,0x28(%rcx,%rdx,1)
   22b96:	48 8b b4 24 d8 03 00 	mov    0x3d8(%rsp),%rsi
   22b9d:	00 
   22b9e:	89 74 11 30          	mov    %esi,0x30(%rcx,%rdx,1)
   22ba2:	48 89 f0             	mov    %rsi,%rax
   22ba5:	48 c1 e8 30          	shr    $0x30,%rax
   22ba9:	88 44 11 36          	mov    %al,0x36(%rcx,%rdx,1)
   22bad:	48 c1 ee 20          	shr    $0x20,%rsi
   22bb1:	66 89 74 11 34       	mov    %si,0x34(%rcx,%rdx,1)
   22bb6:	48 8b 84 24 d0 03 00 	mov    0x3d0(%rsp),%rax
   22bbd:	00 
   22bbe:	48 89 44 11 37       	mov    %rax,0x37(%rcx,%rdx,1)
   22bc3:	48 8b 84 24 c8 03 00 	mov    0x3c8(%rsp),%rax
   22bca:	00 
   22bcb:	88 44 11 3f          	mov    %al,0x3f(%rcx,%rdx,1)
   22bcf:	48 8b 8c 24 d0 00 00 	mov    0xd0(%rsp),%rcx
   22bd6:	00 
   22bd7:	48 83 c1 01          	add    $0x1,%rcx
   22bdb:	48 89 c8             	mov    %rcx,%rax
   22bde:	48 89 8c 24 a8 02 00 	mov    %rcx,0x2a8(%rsp)
   22be5:	00 
   22be6:	48 89 8c 24 d0 00 00 	mov    %rcx,0xd0(%rsp)
   22bed:	00 
   22bee:	48 8b 84 24 c0 03 00 	mov    0x3c0(%rsp),%rax
   22bf5:	00 
   22bf6:	48 3b 84 24 b0 00 00 	cmp    0xb0(%rsp),%rax
   22bfd:	00 
   22bfe:	0f 85 d7 fa ff ff    	jne    226db <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3b4b>
   22c04:	bd 2d 00 00 00       	mov    $0x2d,%ebp
   22c09:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   22c0e:	48 01 44 24 68       	add    %rax,0x68(%rsp)
   22c13:	48 8b 84 24 80 00 00 	mov    0x80(%rsp),%rax
   22c1a:	00 
   22c1b:	48 25 00 ff ff ff    	and    $0xffffffffffffff00,%rax
   22c21:	48 8b 8c 24 b0 03 00 	mov    0x3b0(%rsp),%rcx
   22c28:	00 
   22c29:	48 89 8c 24 60 02 00 	mov    %rcx,0x260(%rsp)
   22c30:	00 
   22c31:	0f 10 84 24 a0 03 00 	movups 0x3a0(%rsp),%xmm0
   22c38:	00 
   22c39:	0f 29 84 24 50 02 00 	movaps %xmm0,0x250(%rsp)
   22c40:	00 
   22c41:	0f 10 84 24 88 01 00 	movups 0x188(%rsp),%xmm0
   22c48:	00 
   22c49:	0f 29 84 24 f0 02 00 	movaps %xmm0,0x2f0(%rsp)
   22c50:	00 
   22c51:	48 8b 8c 24 98 01 00 	mov    0x198(%rsp),%rcx
   22c58:	00 
   22c59:	48 89 8c 24 00 03 00 	mov    %rcx,0x300(%rsp)
   22c60:	00 
   22c61:	0f 10 84 24 d8 02 00 	movups 0x2d8(%rsp),%xmm0
   22c68:	00 
   22c69:	0f 29 84 24 60 09 00 	movaps %xmm0,0x960(%rsp)
   22c70:	00 
   22c71:	48 8b 8c 24 e8 02 00 	mov    0x2e8(%rsp),%rcx
   22c78:	00 
   22c79:	48 89 8c 24 70 09 00 	mov    %rcx,0x970(%rsp)
   22c80:	00 
   22c81:	0f 10 84 24 c0 00 00 	movups 0xc0(%rsp),%xmm0
   22c88:	00 
   22c89:	0f 29 84 24 40 09 00 	movaps %xmm0,0x940(%rsp)
   22c90:	00 
   22c91:	48 8b 8c 24 d0 00 00 	mov    0xd0(%rsp),%rcx
   22c98:	00 
   22c99:	48 89 8c 24 50 09 00 	mov    %rcx,0x950(%rsp)
   22ca0:	00 
   22ca1:	48 8b 8c 24 20 02 00 	mov    0x220(%rsp),%rcx
   22ca8:	00 
   22ca9:	48 89 8c 24 30 01 00 	mov    %rcx,0x130(%rsp)
   22cb0:	00 
   22cb1:	66 0f 6f 84 24 00 02 	movdqa 0x200(%rsp),%xmm0
   22cb8:	00 00 
   22cba:	0f 28 8c 24 10 02 00 	movaps 0x210(%rsp),%xmm1
   22cc1:	00 
   22cc2:	0f 29 8c 24 20 01 00 	movaps %xmm1,0x120(%rsp)
   22cc9:	00 
   22cca:	66 0f 7f 84 24 10 01 	movdqa %xmm0,0x110(%rsp)
   22cd1:	00 00 
   22cd3:	31 c9                	xor    %ecx,%ecx
   22cd5:	e9 7f e1 ff ff       	jmpq   20e59 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x22c9>
   22cda:	31 db                	xor    %ebx,%ebx
   22cdc:	48 89 74 24 48       	mov    %rsi,0x48(%rsp)
   22ce1:	e9 1d f9 ff ff       	jmpq   22603 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3a73>
   22ce6:	31 db                	xor    %ebx,%ebx
   22ce8:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   22ced:	e9 11 f9 ff ff       	jmpq   22603 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3a73>
   22cf2:	31 db                	xor    %ebx,%ebx
   22cf4:	48 8b 84 24 b0 00 00 	mov    0xb0(%rsp),%rax
   22cfb:	00 
   22cfc:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   22d01:	e9 fd f8 ff ff       	jmpq   22603 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3a73>
   22d06:	4c 8b ac 24 58 03 00 	mov    0x358(%rsp),%r13
   22d0d:	00 
   22d0e:	48 8b b4 24 68 03 00 	mov    0x368(%rsp),%rsi
   22d15:	00 
   22d16:	48 83 fe 15          	cmp    $0x15,%rsi
   22d1a:	0f 83 e9 00 00 00    	jae    22e09 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4279>
   22d20:	48 83 fe 02          	cmp    $0x2,%rsi
   22d24:	0f 82 50 08 00 00    	jb     2357a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x49ea>
   22d2a:	48 8d 7e ff          	lea    -0x1(%rsi),%rdi
   22d2e:	49 89 f3             	mov    %rsi,%r11
   22d31:	49 c1 e3 05          	shl    $0x5,%r11
   22d35:	4d 01 eb             	add    %r13,%r11
   22d38:	31 d2                	xor    %edx,%edx
   22d3a:	eb 26                	jmp    22d62 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x41d2>
   22d3c:	66 0f 6f 84 24 f0 03 	movdqa 0x3f0(%rsp),%xmm0
   22d43:	00 00 
   22d45:	f3 0f 7f 00          	movdqu %xmm0,(%rax)
   22d49:	4c 89 48 10          	mov    %r9,0x10(%rax)
   22d4d:	4c 89 40 18          	mov    %r8,0x18(%rax)
   22d51:	49 83 c3 e0          	add    $0xffffffffffffffe0,%r11
   22d55:	48 83 c2 01          	add    $0x1,%rdx
   22d59:	48 85 ff             	test   %rdi,%rdi
   22d5c:	0f 84 08 08 00 00    	je     2356a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x49da>
   22d62:	48 89 fb             	mov    %rdi,%rbx
   22d65:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   22d69:	48 89 f5             	mov    %rsi,%rbp
   22d6c:	48 29 fd             	sub    %rdi,%rbp
   22d6f:	0f 82 75 0e 00 00    	jb     23bea <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x505a>
   22d75:	48 83 fd 02          	cmp    $0x2,%rbp
   22d79:	72 d6                	jb     22d51 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x41c1>
   22d7b:	48 89 f9             	mov    %rdi,%rcx
   22d7e:	48 c1 e1 05          	shl    $0x5,%rcx
   22d82:	48 c1 e3 05          	shl    $0x5,%rbx
   22d86:	4d 8b 4c 0d 10       	mov    0x10(%r13,%rcx,1),%r9
   22d8b:	4d 39 4c 1d 10       	cmp    %r9,0x10(%r13,%rbx,1)
   22d90:	73 bf                	jae    22d51 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x41c1>
   22d92:	4e 8d 14 29          	lea    (%rcx,%r13,1),%r10
   22d96:	4a 8d 04 2b          	lea    (%rbx,%r13,1),%rax
   22d9a:	41 0f 10 02          	movups (%r10),%xmm0
   22d9e:	0f 29 84 24 f0 03 00 	movaps %xmm0,0x3f0(%rsp)
   22da5:	00 
   22da6:	4d 8b 44 0d 18       	mov    0x18(%r13,%rcx,1),%r8
   22dab:	f3 41 0f 6f 44 1d 00 	movdqu 0x0(%r13,%rbx,1),%xmm0
   22db2:	41 0f 10 4c 1d 10    	movups 0x10(%r13,%rbx,1),%xmm1
   22db8:	41 0f 11 4a 10       	movups %xmm1,0x10(%r10)
   22dbd:	f3 41 0f 7f 02       	movdqu %xmm0,(%r10)
   22dc2:	48 83 fd 03          	cmp    $0x3,%rbp
   22dc6:	0f 82 70 ff ff ff    	jb     22d3c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x41ac>
   22dcc:	48 89 d1             	mov    %rdx,%rcx
   22dcf:	4c 89 db             	mov    %r11,%rbx
   22dd2:	4d 39 4a 50          	cmp    %r9,0x50(%r10)
   22dd6:	0f 83 60 ff ff ff    	jae    22d3c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x41ac>
   22ddc:	48 89 d8             	mov    %rbx,%rax
   22ddf:	f3 0f 6f 03          	movdqu (%rbx),%xmm0
   22de3:	0f 10 4b 10          	movups 0x10(%rbx),%xmm1
   22de7:	0f 11 4b f0          	movups %xmm1,-0x10(%rbx)
   22deb:	f3 0f 7f 43 e0       	movdqu %xmm0,-0x20(%rbx)
   22df0:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
   22df4:	0f 84 42 ff ff ff    	je     22d3c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x41ac>
   22dfa:	48 8d 58 20          	lea    0x20(%rax),%rbx
   22dfe:	4c 39 48 30          	cmp    %r9,0x30(%rax)
   22e02:	72 d8                	jb     22ddc <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x424c>
   22e04:	e9 33 ff ff ff       	jmpq   22d3c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x41ac>
   22e09:	4c 89 6c 24 70       	mov    %r13,0x70(%rsp)
   22e0e:	48 89 74 24 60       	mov    %rsi,0x60(%rsp)
   22e13:	48 89 f0             	mov    %rsi,%rax
   22e16:	48 d1 e8             	shr    %rax
   22e19:	b9 20 00 00 00       	mov    $0x20,%ecx
   22e1e:	31 db                	xor    %ebx,%ebx
   22e20:	48 f7 e1             	mul    %rcx
   22e23:	48 89 c7             	mov    %rax,%rdi
   22e26:	0f 91 c0             	setno  %al
   22e29:	0f 80 9b 0e 00 00    	jo     23cca <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x513a>
   22e2f:	88 c3                	mov    %al,%bl
   22e31:	48 c1 e3 03          	shl    $0x3,%rbx
   22e35:	48 85 ff             	test   %rdi,%rdi
   22e38:	48 89 bc 24 c0 01 00 	mov    %rdi,0x1c0(%rsp)
   22e3f:	00 
   22e40:	0f 84 93 00 00 00    	je     22ed9 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4349>
   22e46:	48 89 de             	mov    %rbx,%rsi
   22e49:	ff 15 31 2d 02 00    	callq  *0x22d31(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   22e4f:	e9 88 00 00 00       	jmpq   22edc <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x434c>
   22e54:	49 8b 7c 05 18       	mov    0x18(%r13,%rax,1),%rdi
   22e59:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   22e5e:	48 29 f9             	sub    %rdi,%rcx
   22e61:	0f 82 33 09 00 00    	jb     2379a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   22e67:	49 8b 74 05 20       	mov    0x20(%r13,%rax,1),%rsi
   22e6c:	48 39 f1             	cmp    %rsi,%rcx
   22e6f:	0f 82 25 09 00 00    	jb     2379a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   22e75:	48 03 7c 24 58       	add    0x58(%rsp),%rdi
   22e7a:	ff 15 10 2c 02 00    	callq  *0x22c10(%rip)        # 45a90 <_GLOBAL_OFFSET_TABLE_+0x108>
   22e80:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   22e85:	31 c0                	xor    %eax,%eax
   22e87:	eb 09                	jmp    22e92 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4302>
   22e89:	48 83 c0 40          	add    $0x40,%rax
   22e8d:	49 39 c6             	cmp    %rax,%r14
   22e90:	74 3d                	je     22ecf <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x433f>
   22e92:	41 83 7c 05 04 12    	cmpl   $0x12,0x4(%r13,%rax,1)
   22e98:	75 ef                	jne    22e89 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x42f9>
   22e9a:	41 8b 4c 05 28       	mov    0x28(%r13,%rax,1),%ecx
   22e9f:	48 39 d9             	cmp    %rbx,%rcx
   22ea2:	75 e5                	jne    22e89 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x42f9>
   22ea4:	49 8b 4c 05 18       	mov    0x18(%r13,%rax,1),%rcx
   22ea9:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   22eae:	48 29 ce             	sub    %rcx,%rsi
   22eb1:	0f 82 e3 08 00 00    	jb     2379a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   22eb7:	49 3b 74 05 20       	cmp    0x20(%r13,%rax,1),%rsi
   22ebc:	0f 82 d8 08 00 00    	jb     2379a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   22ec2:	03 4c 24 58          	add    0x58(%rsp),%ecx
   22ec6:	f6 c1 03             	test   $0x3,%cl
   22ec9:	0f 85 cb 08 00 00    	jne    2379a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   22ecf:	48 8b 6c 24 20       	mov    0x20(%rsp),%rbp
   22ed4:	e9 7a c2 ff ff       	jmpq   1f153 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5c3>
   22ed9:	48 89 d8             	mov    %rbx,%rax
   22edc:	48 85 c0             	test   %rax,%rax
   22edf:	0f 84 f0 0d 00 00    	je     23cd5 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5145>
   22ee5:	48 8b 8c 24 c0 01 00 	mov    0x1c0(%rsp),%rcx
   22eec:	00 
   22eed:	48 c1 e9 05          	shr    $0x5,%rcx
   22ef1:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   22ef6:	48 89 84 24 a0 0a 00 	mov    %rax,0xaa0(%rsp)
   22efd:	00 
   22efe:	48 89 8c 24 a8 0a 00 	mov    %rcx,0xaa8(%rsp)
   22f05:	00 
   22f06:	48 c7 84 24 b0 0a 00 	movq   $0x0,0xab0(%rsp)
   22f0d:	00 00 00 00 00 
   22f12:	48 c7 84 24 f0 03 00 	movq   $0x8,0x3f0(%rsp)
   22f19:	00 08 00 00 00 
   22f1e:	66 0f ef c0          	pxor   %xmm0,%xmm0
   22f22:	f3 0f 7f 84 24 f8 03 	movdqu %xmm0,0x3f8(%rsp)
   22f29:	00 00 
   22f2b:	4c 8b 64 24 70       	mov    0x70(%rsp),%r12
   22f30:	49 8d 44 24 b0       	lea    -0x50(%r12),%rax
   22f35:	48 89 84 24 48 03 00 	mov    %rax,0x348(%rsp)
   22f3c:	00 
   22f3d:	49 8d 44 24 c0       	lea    -0x40(%r12),%rax
   22f42:	48 89 84 24 40 03 00 	mov    %rax,0x340(%rsp)
   22f49:	00 
   22f4a:	49 8d 44 24 e0       	lea    -0x20(%r12),%rax
   22f4f:	48 89 84 24 08 01 00 	mov    %rax,0x108(%rsp)
   22f56:	00 
   22f57:	48 c7 c0 e0 ff ff ff 	mov    $0xffffffffffffffe0,%rax
   22f5e:	4c 29 e0             	sub    %r12,%rax
   22f61:	48 89 84 24 c8 01 00 	mov    %rax,0x1c8(%rsp)
   22f68:	00 
   22f69:	4c 8b 7c 24 60       	mov    0x60(%rsp),%r15
   22f6e:	4c 89 fe             	mov    %r15,%rsi
   22f71:	eb 11                	jmp    22f84 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x43f4>
   22f73:	48 8b b4 24 b8 02 00 	mov    0x2b8(%rsp),%rsi
   22f7a:	00 
   22f7b:	48 85 f6             	test   %rsi,%rsi
   22f7e:	0f 84 99 05 00 00    	je     2351d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x498d>
   22f84:	49 89 f0             	mov    %rsi,%r8
   22f87:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   22f8b:	0f 84 e3 00 00 00    	je     23074 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x44e4>
   22f91:	4c 8d 4e fe          	lea    -0x2(%rsi),%r9
   22f95:	4c 89 c1             	mov    %r8,%rcx
   22f98:	48 c1 e1 05          	shl    $0x5,%rcx
   22f9c:	4c 89 c8             	mov    %r9,%rax
   22f9f:	48 c1 e0 05          	shl    $0x5,%rax
   22fa3:	49 8b 44 04 10       	mov    0x10(%r12,%rax,1),%rax
   22fa8:	49 39 44 0c 10       	cmp    %rax,0x10(%r12,%rcx,1)
   22fad:	0f 83 cd 00 00 00    	jae    23080 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x44f0>
   22fb3:	48 89 f1             	mov    %rsi,%rcx
   22fb6:	48 c1 e1 05          	shl    $0x5,%rcx
   22fba:	48 8b 94 24 40 03 00 	mov    0x340(%rsp),%rdx
   22fc1:	00 
   22fc2:	4c 8d 14 0a          	lea    (%rdx,%rcx,1),%r10
   22fc6:	ba 02 00 00 00       	mov    $0x2,%edx
   22fcb:	4c 89 cf             	mov    %r9,%rdi
   22fce:	48 89 d5             	mov    %rdx,%rbp
   22fd1:	4c 89 d3             	mov    %r10,%rbx
   22fd4:	4d 85 c9             	test   %r9,%r9
   22fd7:	74 20                	je     22ff9 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4469>
   22fd9:	4c 8d 4f ff          	lea    -0x1(%rdi),%r9
   22fdd:	4c 89 ca             	mov    %r9,%rdx
   22fe0:	48 c1 e2 05          	shl    $0x5,%rdx
   22fe4:	4d 8b 5c 14 10       	mov    0x10(%r12,%rdx,1),%r11
   22fe9:	48 8d 55 01          	lea    0x1(%rbp),%rdx
   22fed:	4c 8d 53 e0          	lea    -0x20(%rbx),%r10
   22ff1:	4c 39 d8             	cmp    %r11,%rax
   22ff4:	4c 89 d8             	mov    %r11,%rax
   22ff7:	72 d2                	jb     22fcb <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x443b>
   22ff9:	48 89 f2             	mov    %rsi,%rdx
   22ffc:	48 29 fa             	sub    %rdi,%rdx
   22fff:	0f 82 0c 0c 00 00    	jb     23c11 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5081>
   23005:	4c 39 fe             	cmp    %r15,%rsi
   23008:	0f 87 12 0c 00 00    	ja     23c20 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5090>
   2300e:	48 f7 c2 fe ff ff ff 	test   $0xfffffffffffffffe,%rdx
   23015:	0f 84 a0 00 00 00    	je     230bb <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x452b>
   2301b:	48 d1 ed             	shr    %rbp
   2301e:	48 03 8c 24 08 01 00 	add    0x108(%rsp),%rcx
   23025:	00 
   23026:	0f 10 03             	movups (%rbx),%xmm0
   23029:	0f 10 4b 10          	movups 0x10(%rbx),%xmm1
   2302d:	0f 29 8c 24 80 03 00 	movaps %xmm1,0x380(%rsp)
   23034:	00 
   23035:	0f 29 84 24 70 03 00 	movaps %xmm0,0x370(%rsp)
   2303c:	00 
   2303d:	0f 10 01             	movups (%rcx),%xmm0
   23040:	0f 10 49 10          	movups 0x10(%rcx),%xmm1
   23044:	0f 11 03             	movups %xmm0,(%rbx)
   23047:	0f 11 4b 10          	movups %xmm1,0x10(%rbx)
   2304b:	66 0f 6f 84 24 70 03 	movdqa 0x370(%rsp),%xmm0
   23052:	00 00 
   23054:	0f 28 8c 24 80 03 00 	movaps 0x380(%rsp),%xmm1
   2305b:	00 
   2305c:	0f 11 49 10          	movups %xmm1,0x10(%rcx)
   23060:	f3 0f 7f 01          	movdqu %xmm0,(%rcx)
   23064:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
   23068:	48 83 c3 20          	add    $0x20,%rbx
   2306c:	48 83 c5 ff          	add    $0xffffffffffffffff,%rbp
   23070:	75 b4                	jne    23026 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4496>
   23072:	eb 47                	jmp    230bb <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x452b>
   23074:	ba 01 00 00 00       	mov    $0x1,%edx
   23079:	31 c0                	xor    %eax,%eax
   2307b:	e9 54 01 00 00       	jmpq   231d4 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4644>
   23080:	48 89 f1             	mov    %rsi,%rcx
   23083:	48 c1 e1 05          	shl    $0x5,%rcx
   23087:	48 03 8c 24 48 03 00 	add    0x348(%rsp),%rcx
   2308e:	00 
   2308f:	48 8d 7e fe          	lea    -0x2(%rsi),%rdi
   23093:	31 d2                	xor    %edx,%edx
   23095:	48 39 d7             	cmp    %rdx,%rdi
   23098:	0f 84 31 01 00 00    	je     231cf <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x463f>
   2309e:	48 8b 29             	mov    (%rcx),%rbp
   230a1:	48 83 c2 01          	add    $0x1,%rdx
   230a5:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
   230a9:	48 39 e8             	cmp    %rbp,%rax
   230ac:	48 89 e8             	mov    %rbp,%rax
   230af:	73 e4                	jae    23095 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4505>
   230b1:	4c 89 c7             	mov    %r8,%rdi
   230b4:	48 29 d7             	sub    %rdx,%rdi
   230b7:	48 83 c2 01          	add    $0x1,%rdx
   230bb:	48 83 fa 09          	cmp    $0x9,%rdx
   230bf:	0f 87 05 01 00 00    	ja     231ca <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x463a>
   230c5:	48 85 ff             	test   %rdi,%rdi
   230c8:	0f 84 fc 00 00 00    	je     231ca <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x463a>
   230ce:	4c 39 fe             	cmp    %r15,%rsi
   230d1:	0f 87 5e 0b 00 00    	ja     23c35 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50a5>
   230d7:	48 89 f9             	mov    %rdi,%rcx
   230da:	48 c1 e1 05          	shl    $0x5,%rcx
   230de:	4c 8b 9c 24 c8 01 00 	mov    0x1c8(%rsp),%r11
   230e5:	00 
   230e6:	49 29 cb             	sub    %rcx,%r11
   230e9:	4c 01 e1             	add    %r12,%rcx
   230ec:	48 8d 47 ff          	lea    -0x1(%rdi),%rax
   230f0:	48 89 f2             	mov    %rsi,%rdx
   230f3:	48 29 c2             	sub    %rax,%rdx
   230f6:	0f 82 45 0b 00 00    	jb     23c41 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50b1>
   230fc:	48 83 fa 02          	cmp    $0x2,%rdx
   23100:	0f 82 a8 00 00 00    	jb     231ae <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x461e>
   23106:	48 89 c3             	mov    %rax,%rbx
   23109:	48 c1 e3 05          	shl    $0x5,%rbx
   2310d:	48 89 fd             	mov    %rdi,%rbp
   23110:	48 c1 e5 05          	shl    $0x5,%rbp
   23114:	4d 8b 54 1c 10       	mov    0x10(%r12,%rbx,1),%r10
   23119:	4d 39 54 2c 10       	cmp    %r10,0x10(%r12,%rbp,1)
   2311e:	0f 83 8a 00 00 00    	jae    231ae <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x461e>
   23124:	49 89 c5             	mov    %rax,%r13
   23127:	4d 8d 34 1c          	lea    (%r12,%rbx,1),%r14
   2312b:	49 8d 04 2c          	lea    (%r12,%rbp,1),%rax
   2312f:	41 0f 10 06          	movups (%r14),%xmm0
   23133:	0f 29 84 24 90 0c 00 	movaps %xmm0,0xc90(%rsp)
   2313a:	00 
   2313b:	4d 8b 4c 1c 18       	mov    0x18(%r12,%rbx,1),%r9
   23140:	f3 41 0f 6f 04 2c    	movdqu (%r12,%rbp,1),%xmm0
   23146:	41 0f 10 4c 2c 10    	movups 0x10(%r12,%rbp,1),%xmm1
   2314c:	41 0f 11 4e 10       	movups %xmm1,0x10(%r14)
   23151:	f3 41 0f 7f 06       	movdqu %xmm0,(%r14)
   23156:	48 83 fa 03          	cmp    $0x3,%rdx
   2315a:	72 3a                	jb     23196 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4606>
   2315c:	4d 39 56 50          	cmp    %r10,0x50(%r14)
   23160:	73 34                	jae    23196 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4606>
   23162:	4c 89 c3             	mov    %r8,%rbx
   23165:	31 ed                	xor    %ebp,%ebp
   23167:	48 89 e8             	mov    %rbp,%rax
   2316a:	f3 0f 6f 44 29 20    	movdqu 0x20(%rcx,%rbp,1),%xmm0
   23170:	0f 10 4c 29 30       	movups 0x30(%rcx,%rbp,1),%xmm1
   23175:	0f 11 4c 29 10       	movups %xmm1,0x10(%rcx,%rbp,1)
   2317a:	f3 0f 7f 04 29       	movdqu %xmm0,(%rcx,%rbp,1)
   2317f:	48 83 c3 ff          	add    $0xffffffffffffffff,%rbx
   23183:	48 39 df             	cmp    %rbx,%rdi
   23186:	74 0b                	je     23193 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4603>
   23188:	48 8d 68 20          	lea    0x20(%rax),%rbp
   2318c:	4c 39 54 01 50       	cmp    %r10,0x50(%rcx,%rax,1)
   23191:	72 d4                	jb     23167 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x45d7>
   23193:	4c 29 d8             	sub    %r11,%rax
   23196:	66 0f 6f 84 24 90 0c 	movdqa 0xc90(%rsp),%xmm0
   2319d:	00 00 
   2319f:	f3 0f 7f 00          	movdqu %xmm0,(%rax)
   231a3:	4c 89 50 10          	mov    %r10,0x10(%rax)
   231a7:	4c 89 48 18          	mov    %r9,0x18(%rax)
   231ab:	4c 89 e8             	mov    %r13,%rax
   231ae:	48 85 c0             	test   %rax,%rax
   231b1:	74 21                	je     231d4 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4644>
   231b3:	49 83 c3 20          	add    $0x20,%r11
   231b7:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
   231bb:	48 89 c7             	mov    %rax,%rdi
   231be:	48 83 fa 0a          	cmp    $0xa,%rdx
   231c2:	0f 82 24 ff ff ff    	jb     230ec <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x455c>
   231c8:	eb 0a                	jmp    231d4 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4644>
   231ca:	48 89 f8             	mov    %rdi,%rax
   231cd:	eb 05                	jmp    231d4 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4644>
   231cf:	31 c0                	xor    %eax,%eax
   231d1:	48 89 f2             	mov    %rsi,%rdx
   231d4:	48 8d bc 24 f0 03 00 	lea    0x3f0(%rsp),%rdi
   231db:	00 
   231dc:	48 89 84 24 b8 02 00 	mov    %rax,0x2b8(%rsp)
   231e3:	00 
   231e4:	48 89 c6             	mov    %rax,%rsi
   231e7:	e8 d4 62 fe ff       	callq  94c0 <alloc::vec::Vec<T>::push>
   231ec:	48 8b 84 24 00 04 00 	mov    0x400(%rsp),%rax
   231f3:	00 
   231f4:	48 83 f8 02          	cmp    $0x2,%rax
   231f8:	0f 82 75 fd ff ff    	jb     22f73 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x43e3>
   231fe:	4c 8b b4 24 f0 03 00 	mov    0x3f0(%rsp),%r14
   23205:	00 
   23206:	4c 89 74 24 68       	mov    %r14,0x68(%rsp)
   2320b:	e9 8d 00 00 00       	jmpq   2329d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x470d>
   23210:	4c 89 e7             	mov    %r12,%rdi
   23213:	48 89 ee             	mov    %rbp,%rsi
   23216:	4c 8b 74 24 68       	mov    0x68(%rsp),%r14
   2321b:	48 89 cd             	mov    %rcx,%rbp
   2321e:	49 29 f5             	sub    %rsi,%r13
   23221:	49 83 e5 e0          	and    $0xffffffffffffffe0,%r13
   23225:	4c 89 ea             	mov    %r13,%rdx
   23228:	ff 15 ca 2a 02 00    	callq  *0x22aca(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
   2322e:	48 8b 8c 24 e0 00 00 	mov    0xe0(%rsp),%rcx
   23235:	00 
   23236:	48 01 e9             	add    %rbp,%rcx
   23239:	48 8b 84 24 a0 01 00 	mov    0x1a0(%rsp),%rax
   23240:	00 
   23241:	48 8b 54 24 78       	mov    0x78(%rsp),%rdx
   23246:	48 89 02             	mov    %rax,(%rdx)
   23249:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   2324e:	48 89 08             	mov    %rcx,(%rax)
   23251:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   23256:	49 8d 3c 06          	lea    (%r14,%rax,1),%rdi
   2325a:	49 8d 34 06          	lea    (%r14,%rax,1),%rsi
   2325e:	48 83 c6 10          	add    $0x10,%rsi
   23262:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   23267:	48 f7 d2             	not    %rdx
   2326a:	48 03 54 24 28       	add    0x28(%rsp),%rdx
   2326f:	48 c1 e2 04          	shl    $0x4,%rdx
   23273:	ff 15 ef 2b 02 00    	callq  *0x22bef(%rip)        # 45e68 <memmove@GLIBC_2.2.5>
   23279:	48 8b 84 24 80 00 00 	mov    0x80(%rsp),%rax
   23280:	00 
   23281:	48 89 84 24 00 04 00 	mov    %rax,0x400(%rsp)
   23288:	00 
   23289:	48 83 f8 01          	cmp    $0x1,%rax
   2328d:	4c 8b 64 24 70       	mov    0x70(%rsp),%r12
   23292:	4c 8b 7c 24 60       	mov    0x60(%rsp),%r15
   23297:	0f 86 d6 fc ff ff    	jbe    22f73 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x43e3>
   2329d:	48 89 c6             	mov    %rax,%rsi
   232a0:	4c 8d 40 ff          	lea    -0x1(%rax),%r8
   232a4:	4c 89 c5             	mov    %r8,%rbp
   232a7:	48 c1 e5 04          	shl    $0x4,%rbp
   232ab:	49 83 3c 2e 00       	cmpq   $0x0,(%r14,%rbp,1)
   232b0:	74 52                	je     23304 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4774>
   232b2:	48 89 f2             	mov    %rsi,%rdx
   232b5:	48 c1 e2 04          	shl    $0x4,%rdx
   232b9:	4a 8b 5c 32 e8       	mov    -0x18(%rdx,%r14,1),%rbx
   232be:	49 8b 44 2e 08       	mov    0x8(%r14,%rbp,1),%rax
   232c3:	48 39 c3             	cmp    %rax,%rbx
   232c6:	76 3c                	jbe    23304 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4774>
   232c8:	48 83 fe 02          	cmp    $0x2,%rsi
   232cc:	0f 86 a1 fc ff ff    	jbe    22f73 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x43e3>
   232d2:	48 8d 7e fd          	lea    -0x3(%rsi),%rdi
   232d6:	48 89 f9             	mov    %rdi,%rcx
   232d9:	48 c1 e1 04          	shl    $0x4,%rcx
   232dd:	49 8b 4c 0e 08       	mov    0x8(%r14,%rcx,1),%rcx
   232e2:	48 8d 2c 18          	lea    (%rax,%rbx,1),%rbp
   232e6:	48 39 e9             	cmp    %rbp,%rcx
   232e9:	76 34                	jbe    2331f <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x478f>
   232eb:	48 83 fe 03          	cmp    $0x3,%rsi
   232ef:	0f 86 7e fc ff ff    	jbe    22f73 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x43e3>
   232f5:	48 01 cb             	add    %rcx,%rbx
   232f8:	4a 39 5c 32 c8       	cmp    %rbx,-0x38(%rdx,%r14,1)
   232fd:	76 20                	jbe    2331f <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x478f>
   232ff:	e9 6f fc ff ff       	jmpq   22f73 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x43e3>
   23304:	48 83 fe 03          	cmp    $0x3,%rsi
   23308:	72 1a                	jb     23324 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4794>
   2330a:	48 8d 7e fd          	lea    -0x3(%rsi),%rdi
   2330e:	48 89 f8             	mov    %rdi,%rax
   23311:	48 c1 e0 04          	shl    $0x4,%rax
   23315:	49 8b 4c 06 08       	mov    0x8(%r14,%rax,1),%rcx
   2331a:	49 8b 44 2e 08       	mov    0x8(%r14,%rbp,1),%rax
   2331f:	48 39 c1             	cmp    %rax,%rcx
   23322:	72 04                	jb     23328 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4798>
   23324:	48 8d 7e fe          	lea    -0x2(%rsi),%rdi
   23328:	4c 8d 4f 01          	lea    0x1(%rdi),%r9
   2332c:	4c 39 ce             	cmp    %r9,%rsi
   2332f:	0f 86 62 08 00 00    	jbe    23b97 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5007>
   23335:	48 39 fe             	cmp    %rdi,%rsi
   23338:	0f 86 6e 08 00 00    	jbe    23bac <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x501c>
   2333e:	4c 89 c9             	mov    %r9,%rcx
   23341:	48 c1 e1 04          	shl    $0x4,%rcx
   23345:	49 8b 04 0e          	mov    (%r14,%rcx,1),%rax
   23349:	48 c1 e7 04          	shl    $0x4,%rdi
   2334d:	49 8b 54 3e 08       	mov    0x8(%r14,%rdi,1),%rdx
   23352:	49 8b 1c 3e          	mov    (%r14,%rdi,1),%rbx
   23356:	48 01 d3             	add    %rdx,%rbx
   23359:	48 89 dd             	mov    %rbx,%rbp
   2335c:	48 29 c5             	sub    %rax,%rbp
   2335f:	0f 82 59 08 00 00    	jb     23bbe <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x502e>
   23365:	4c 39 fb             	cmp    %r15,%rbx
   23368:	0f 87 65 08 00 00    	ja     23bd3 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5043>
   2336e:	48 89 94 24 e0 00 00 	mov    %rdx,0xe0(%rsp)
   23375:	00 
   23376:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
   2337b:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
   23380:	4c 89 84 24 80 00 00 	mov    %r8,0x80(%rsp)
   23387:	00 
   23388:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   2338d:	49 8b 54 0e 08       	mov    0x8(%r14,%rcx,1),%rdx
   23392:	49 8d 0c 3e          	lea    (%r14,%rdi,1),%rcx
   23396:	48 89 4c 24 78       	mov    %rcx,0x78(%rsp)
   2339b:	49 8d 4c 3e 08       	lea    0x8(%r14,%rdi,1),%rcx
   233a0:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   233a5:	48 89 84 24 a0 01 00 	mov    %rax,0x1a0(%rsp)
   233ac:	00 
   233ad:	49 89 c7             	mov    %rax,%r15
   233b0:	49 c1 e7 05          	shl    $0x5,%r15
   233b4:	4d 01 e7             	add    %r12,%r15
   233b7:	49 89 d5             	mov    %rdx,%r13
   233ba:	49 c1 e5 05          	shl    $0x5,%r13
   233be:	4f 8d 24 2f          	lea    (%r15,%r13,1),%r12
   233c2:	48 c1 e3 05          	shl    $0x5,%rbx
   233c6:	49 89 ee             	mov    %rbp,%r14
   233c9:	49 29 d6             	sub    %rdx,%r14
   233cc:	48 89 94 24 a8 00 00 	mov    %rdx,0xa8(%rsp)
   233d3:	00 
   233d4:	49 39 d6             	cmp    %rdx,%r14
   233d7:	0f 83 8c 00 00 00    	jae    23469 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x48d9>
   233dd:	4d 89 f5             	mov    %r14,%r13
   233e0:	49 c1 e5 05          	shl    $0x5,%r13
   233e4:	48 8b 6c 24 40       	mov    0x40(%rsp),%rbp
   233e9:	48 89 ef             	mov    %rbp,%rdi
   233ec:	4c 89 e6             	mov    %r12,%rsi
   233ef:	4c 89 ea             	mov    %r13,%rdx
   233f2:	ff 15 00 29 02 00    	callq  *0x22900(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
   233f8:	49 01 ed             	add    %rbp,%r13
   233fb:	48 8b 84 24 a8 00 00 	mov    0xa8(%rsp),%rax
   23402:	00 
   23403:	48 89 c1             	mov    %rax,%rcx
   23406:	48 85 c0             	test   %rax,%rax
   23409:	0f 8e 01 fe ff ff    	jle    23210 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4680>
   2340f:	4d 85 f6             	test   %r14,%r14
   23412:	0f 8e f8 fd ff ff    	jle    23210 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4680>
   23418:	48 03 9c 24 08 01 00 	add    0x108(%rsp),%rbx
   2341f:	00 
   23420:	4c 8b 74 24 68       	mov    0x68(%rsp),%r14
   23425:	49 8b 45 f0          	mov    -0x10(%r13),%rax
   23429:	49 3b 44 24 f0       	cmp    -0x10(%r12),%rax
   2342e:	72 09                	jb     23439 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x48a9>
   23430:	49 83 c5 e0          	add    $0xffffffffffffffe0,%r13
   23434:	4c 89 e8             	mov    %r13,%rax
   23437:	eb 07                	jmp    23440 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x48b0>
   23439:	49 83 c4 e0          	add    $0xffffffffffffffe0,%r12
   2343d:	4c 89 e0             	mov    %r12,%rax
   23440:	f3 0f 6f 00          	movdqu (%rax),%xmm0
   23444:	0f 10 48 10          	movups 0x10(%rax),%xmm1
   23448:	0f 11 4b 10          	movups %xmm1,0x10(%rbx)
   2344c:	f3 0f 7f 03          	movdqu %xmm0,(%rbx)
   23450:	4d 39 e7             	cmp    %r12,%r15
   23453:	73 09                	jae    2345e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x48ce>
   23455:	48 83 c3 e0          	add    $0xffffffffffffffe0,%rbx
   23459:	49 39 ed             	cmp    %rbp,%r13
   2345c:	77 c7                	ja     23425 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4895>
   2345e:	4c 89 e7             	mov    %r12,%rdi
   23461:	48 89 ee             	mov    %rbp,%rsi
   23464:	e9 b2 fd ff ff       	jmpq   2321b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x468b>
   23469:	4c 8b 74 24 40       	mov    0x40(%rsp),%r14
   2346e:	4c 89 f7             	mov    %r14,%rdi
   23471:	4c 89 fe             	mov    %r15,%rsi
   23474:	4c 89 ea             	mov    %r13,%rdx
   23477:	ff 15 7b 28 02 00    	callq  *0x2287b(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
   2347d:	4d 01 f5             	add    %r14,%r13
   23480:	48 8b 84 24 a8 00 00 	mov    0xa8(%rsp),%rax
   23487:	00 
   23488:	48 85 c0             	test   %rax,%rax
   2348b:	7e 7b                	jle    23508 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4978>
   2348d:	48 39 c5             	cmp    %rax,%rbp
   23490:	4c 8b 74 24 68       	mov    0x68(%rsp),%r14
   23495:	48 89 c5             	mov    %rax,%rbp
   23498:	7e 61                	jle    234fb <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x496b>
   2349a:	48 03 5c 24 70       	add    0x70(%rsp),%rbx
   2349f:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   234a4:	48 89 c6             	mov    %rax,%rsi
   234a7:	49 8b 4c 24 10       	mov    0x10(%r12),%rcx
   234ac:	48 3b 48 10          	cmp    0x10(%rax),%rcx
   234b0:	73 0d                	jae    234bf <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x492f>
   234b2:	49 8d 4c 24 20       	lea    0x20(%r12),%rcx
   234b7:	48 89 c2             	mov    %rax,%rdx
   234ba:	4c 89 e0             	mov    %r12,%rax
   234bd:	eb 0a                	jmp    234c9 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4939>
   234bf:	48 8d 70 20          	lea    0x20(%rax),%rsi
   234c3:	48 89 f2             	mov    %rsi,%rdx
   234c6:	4c 89 e1             	mov    %r12,%rcx
   234c9:	49 8d 7f 20          	lea    0x20(%r15),%rdi
   234cd:	f3 0f 6f 00          	movdqu (%rax),%xmm0
   234d1:	0f 10 48 10          	movups 0x10(%rax),%xmm1
   234d5:	41 0f 11 4f 10       	movups %xmm1,0x10(%r15)
   234da:	f3 41 0f 7f 07       	movdqu %xmm0,(%r15)
   234df:	4c 39 ea             	cmp    %r13,%rdx
   234e2:	0f 83 36 fd ff ff    	jae    2321e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x468e>
   234e8:	48 89 d0             	mov    %rdx,%rax
   234eb:	49 89 ff             	mov    %rdi,%r15
   234ee:	49 89 cc             	mov    %rcx,%r12
   234f1:	48 39 d9             	cmp    %rbx,%rcx
   234f4:	72 b1                	jb     234a7 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4917>
   234f6:	e9 23 fd ff ff       	jmpq   2321e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x468e>
   234fb:	4c 89 ff             	mov    %r15,%rdi
   234fe:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
   23503:	e9 16 fd ff ff       	jmpq   2321e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x468e>
   23508:	4c 89 ff             	mov    %r15,%rdi
   2350b:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
   23510:	4c 8b 74 24 68       	mov    0x68(%rsp),%r14
   23515:	48 89 c5             	mov    %rax,%rbp
   23518:	e9 01 fd ff ff       	jmpq   2321e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x468e>
   2351d:	48 8b b4 24 f8 03 00 	mov    0x3f8(%rsp),%rsi
   23524:	00 
   23525:	48 85 f6             	test   %rsi,%rsi
   23528:	74 1e                	je     23548 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x49b8>
   2352a:	48 8b bc 24 f0 03 00 	mov    0x3f0(%rsp),%rdi
   23531:	00 
   23532:	48 85 ff             	test   %rdi,%rdi
   23535:	74 11                	je     23548 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x49b8>
   23537:	48 c1 e6 04          	shl    $0x4,%rsi
   2353b:	74 0b                	je     23548 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x49b8>
   2353d:	ba 08 00 00 00       	mov    $0x8,%edx
   23542:	ff 15 b0 26 02 00    	callq  *0x226b0(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   23548:	48 8b b4 24 c0 01 00 	mov    0x1c0(%rsp),%rsi
   2354f:	00 
   23550:	48 85 f6             	test   %rsi,%rsi
   23553:	74 10                	je     23565 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x49d5>
   23555:	ba 08 00 00 00       	mov    $0x8,%edx
   2355a:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   2355f:	ff 15 93 26 02 00    	callq  *0x22693(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   23565:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   2356a:	4c 8b ac 24 58 03 00 	mov    0x358(%rsp),%r13
   23571:	00 
   23572:	48 8b b4 24 68 03 00 	mov    0x368(%rsp),%rsi
   23579:	00 
   2357a:	48 85 f6             	test   %rsi,%rsi
   2357d:	74 54                	je     235d3 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4a43>
   2357f:	48 c1 e6 05          	shl    $0x5,%rsi
   23583:	48 83 c6 e0          	add    $0xffffffffffffffe0,%rsi
   23587:	48 89 f0             	mov    %rsi,%rax
   2358a:	48 c1 e8 05          	shr    $0x5,%rax
   2358e:	48 83 c0 01          	add    $0x1,%rax
   23592:	89 c3                	mov    %eax,%ebx
   23594:	83 e3 03             	and    $0x3,%ebx
   23597:	48 83 fe 60          	cmp    $0x60,%rsi
   2359b:	0f 83 40 01 00 00    	jae    236e1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4b51>
   235a1:	31 c9                	xor    %ecx,%ecx
   235a3:	4c 89 ea             	mov    %r13,%rdx
   235a6:	48 85 db             	test   %rbx,%rbx
   235a9:	74 1e                	je     235c9 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4a39>
   235ab:	48 83 c2 18          	add    $0x18,%rdx
   235af:	48 f7 db             	neg    %rbx
   235b2:	48 8b 32             	mov    (%rdx),%rsi
   235b5:	48 39 f1             	cmp    %rsi,%rcx
   235b8:	48 0f 46 ce          	cmovbe %rsi,%rcx
   235bc:	48 89 4a f0          	mov    %rcx,-0x10(%rdx)
   235c0:	48 83 c2 20          	add    $0x20,%rdx
   235c4:	48 ff c3             	inc    %rbx
   235c7:	75 e9                	jne    235b2 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4a22>
   235c9:	48 8b ac 24 68 03 00 	mov    0x368(%rsp),%rbp
   235d0:	00 
   235d1:	eb 02                	jmp    235d5 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4a45>
   235d3:	31 ed                	xor    %ebp,%ebp
   235d5:	4c 8b b4 24 60 03 00 	mov    0x360(%rsp),%r14
   235dc:	00 
   235dd:	0f 10 84 24 c0 02 00 	movups 0x2c0(%rsp),%xmm0
   235e4:	00 
   235e5:	0f 29 84 24 80 06 00 	movaps %xmm0,0x680(%rsp)
   235ec:	00 
   235ed:	48 8b 84 24 d0 02 00 	mov    0x2d0(%rsp),%rax
   235f4:	00 
   235f5:	48 89 84 24 90 06 00 	mov    %rax,0x690(%rsp)
   235fc:	00 
   235fd:	4c 8d bc 24 28 0e 00 	lea    0xe28(%rsp),%r15
   23604:	00 
   23605:	48 8d b4 24 f0 06 00 	lea    0x6f0(%rsp),%rsi
   2360c:	00 
   2360d:	48 8b 1d e4 26 02 00 	mov    0x226e4(%rip),%rbx        # 45cf8 <memcpy@GLIBC_2.14>
   23614:	ba d0 00 00 00       	mov    $0xd0,%edx
   23619:	4c 89 ff             	mov    %r15,%rdi
   2361c:	ff d3                	callq  *%rbx
   2361e:	48 89 ac 24 f0 03 00 	mov    %rbp,0x3f0(%rsp)
   23625:	00 
   23626:	0f 28 84 24 80 06 00 	movaps 0x680(%rsp),%xmm0
   2362d:	00 
   2362e:	0f 11 84 24 f8 03 00 	movups %xmm0,0x3f8(%rsp)
   23635:	00 
   23636:	48 8b 84 24 90 06 00 	mov    0x690(%rsp),%rax
   2363d:	00 
   2363e:	48 89 84 24 08 04 00 	mov    %rax,0x408(%rsp)
   23645:	00 
   23646:	48 8d bc 24 10 04 00 	lea    0x410(%rsp),%rdi
   2364d:	00 
   2364e:	ba d0 00 00 00       	mov    $0xd0,%edx
   23653:	4c 89 fe             	mov    %r15,%rsi
   23656:	ff d3                	callq  *%rbx
   23658:	4d 85 ed             	test   %r13,%r13
   2365b:	0f 84 63 02 00 00    	je     238c4 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4d34>
   23661:	48 8d bc 24 f8 0e 00 	lea    0xef8(%rsp),%rdi
   23668:	00 
   23669:	48 8d b4 24 f0 03 00 	lea    0x3f0(%rsp),%rsi
   23670:	00 
   23671:	ba f0 00 00 00       	mov    $0xf0,%edx
   23676:	ff 15 7c 26 02 00    	callq  *0x2267c(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
   2367c:	0f 10 84 24 f8 05 00 	movups 0x5f8(%rsp),%xmm0
   23683:	00 
   23684:	0f 10 8c 24 08 06 00 	movups 0x608(%rsp),%xmm1
   2368b:	00 
   2368c:	0f 10 94 24 18 06 00 	movups 0x618(%rsp),%xmm2
   23693:	00 
   23694:	0f 10 9c 24 28 06 00 	movups 0x628(%rsp),%xmm3
   2369b:	00 
   2369c:	0f 29 84 24 40 0a 00 	movaps %xmm0,0xa40(%rsp)
   236a3:	00 
   236a4:	0f 29 8c 24 50 0a 00 	movaps %xmm1,0xa50(%rsp)
   236ab:	00 
   236ac:	0f 29 94 24 60 0a 00 	movaps %xmm2,0xa60(%rsp)
   236b3:	00 
   236b4:	0f 29 9c 24 70 0a 00 	movaps %xmm3,0xa70(%rsp)
   236bb:	00 
   236bc:	0f 10 84 24 38 06 00 	movups 0x638(%rsp),%xmm0
   236c3:	00 
   236c4:	0f 29 84 24 80 0a 00 	movaps %xmm0,0xa80(%rsp)
   236cb:	00 
   236cc:	48 8b 84 24 48 06 00 	mov    0x648(%rsp),%rax
   236d3:	00 
   236d4:	48 89 84 24 90 0a 00 	mov    %rax,0xa90(%rsp)
   236db:	00 
   236dc:	e9 1b 02 00 00       	jmpq   238fc <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4d6c>
   236e1:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
   236e5:	48 f7 d8             	neg    %rax
   236e8:	31 c9                	xor    %ecx,%ecx
   236ea:	4c 89 ea             	mov    %r13,%rdx
   236ed:	eb 12                	jmp    23701 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4b71>
   236ef:	48 89 4a 68          	mov    %rcx,0x68(%rdx)
   236f3:	48 83 ea 80          	sub    $0xffffffffffffff80,%rdx
   236f7:	48 83 c0 04          	add    $0x4,%rax
   236fb:	0f 84 a5 fe ff ff    	je     235a6 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4a16>
   23701:	48 8b 6a 18          	mov    0x18(%rdx),%rbp
   23705:	48 8b 7a 38          	mov    0x38(%rdx),%rdi
   23709:	48 39 e9             	cmp    %rbp,%rcx
   2370c:	77 2b                	ja     23739 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4ba9>
   2370e:	48 89 e9             	mov    %rbp,%rcx
   23711:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   23715:	48 39 f9             	cmp    %rdi,%rcx
   23718:	76 28                	jbe    23742 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4bb2>
   2371a:	48 89 4a 28          	mov    %rcx,0x28(%rdx)
   2371e:	48 8b 7a 58          	mov    0x58(%rdx),%rdi
   23722:	48 39 f9             	cmp    %rdi,%rcx
   23725:	77 2b                	ja     23752 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4bc2>
   23727:	48 89 f9             	mov    %rdi,%rcx
   2372a:	48 89 4a 48          	mov    %rcx,0x48(%rdx)
   2372e:	48 8b 7a 78          	mov    0x78(%rdx),%rdi
   23732:	48 39 f9             	cmp    %rdi,%rcx
   23735:	77 b8                	ja     236ef <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4b5f>
   23737:	eb 26                	jmp    2375f <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4bcf>
   23739:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   2373d:	48 39 f9             	cmp    %rdi,%rcx
   23740:	77 d8                	ja     2371a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4b8a>
   23742:	48 89 f9             	mov    %rdi,%rcx
   23745:	48 89 4a 28          	mov    %rcx,0x28(%rdx)
   23749:	48 8b 7a 58          	mov    0x58(%rdx),%rdi
   2374d:	48 39 f9             	cmp    %rdi,%rcx
   23750:	76 d5                	jbe    23727 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4b97>
   23752:	48 89 4a 48          	mov    %rcx,0x48(%rdx)
   23756:	48 8b 7a 78          	mov    0x78(%rdx),%rdi
   2375a:	48 39 f9             	cmp    %rdi,%rcx
   2375d:	77 90                	ja     236ef <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4b5f>
   2375f:	48 89 f9             	mov    %rdi,%rcx
   23762:	eb 8b                	jmp    236ef <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4b5f>
   23764:	49 8b 7c 05 18       	mov    0x18(%r13,%rax,1),%rdi
   23769:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   2376e:	48 29 f9             	sub    %rdi,%rcx
   23771:	72 27                	jb     2379a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   23773:	49 8b 74 05 20       	mov    0x20(%r13,%rax,1),%rsi
   23778:	48 39 f1             	cmp    %rsi,%rcx
   2377b:	72 1d                	jb     2379a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   2377d:	48 03 7c 24 58       	add    0x58(%rsp),%rdi
   23782:	ff 15 08 23 02 00    	callq  *0x22308(%rip)        # 45a90 <_GLOBAL_OFFSET_TABLE_+0x108>
   23788:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   2378f:	00 
   23790:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
   23795:	e9 b8 b7 ff ff       	jmpq   1ef52 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3c2>
   2379a:	48 8b 84 24 a0 0c 00 	mov    0xca0(%rsp),%rax
   237a1:	00 
   237a2:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
   237a9:	00 
   237aa:	66 0f 6f 84 24 90 0c 	movdqa 0xc90(%rsp),%xmm0
   237b1:	00 00 
   237b3:	66 0f 7f 84 24 c0 00 	movdqa %xmm0,0xc0(%rsp)
   237ba:	00 00 
   237bc:	48 8b 84 24 50 03 00 	mov    0x350(%rsp),%rax
   237c3:	00 
   237c4:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   237cb:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   237d0:	4c 8b b4 24 d0 01 00 	mov    0x1d0(%rsp),%r14
   237d7:	00 
   237d8:	48 8b 84 24 e0 01 00 	mov    0x1e0(%rsp),%rax
   237df:	00 
   237e0:	48 85 c0             	test   %rax,%rax
   237e3:	0f 84 66 03 00 00    	je     23b4f <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4fbf>
   237e9:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
   237ed:	49 8d 2c c6          	lea    (%r14,%rax,8),%rbp
   237f1:	4c 8d 3d 48 1c fe ff 	lea    -0x1e3b8(%rip),%r15        # 5440 <__rust_dealloc>
   237f8:	4c 89 f3             	mov    %r14,%rbx
   237fb:	e9 0d 00 00 00       	jmpq   2380d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c7d>
   23800:	48 83 c3 18          	add    $0x18,%rbx
   23804:	48 39 eb             	cmp    %rbp,%rbx
   23807:	0f 84 42 03 00 00    	je     23b4f <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4fbf>
   2380d:	48 8b 3b             	mov    (%rbx),%rdi
   23810:	48 85 ff             	test   %rdi,%rdi
   23813:	74 eb                	je     23800 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c70>
   23815:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   23819:	48 85 f6             	test   %rsi,%rsi
   2381c:	74 e2                	je     23800 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c70>
   2381e:	ba 01 00 00 00       	mov    $0x1,%edx
   23823:	41 ff d7             	callq  *%r15
   23826:	eb d8                	jmp    23800 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c70>
   23828:	48 8d bc 24 d8 0a 00 	lea    0xad8(%rsp),%rdi
   2382f:	00 
   23830:	e8 2b 26 fe ff       	callq  5e60 <core::ptr::drop_in_place>
   23835:	83 bc 24 f8 0b 00 00 	cmpl   $0x2e,0xbf8(%rsp)
   2383c:	2e 
   2383d:	74 0d                	je     2384c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4cbc>
   2383f:	48 8d bc 24 50 0b 00 	lea    0xb50(%rsp),%rdi
   23846:	00 
   23847:	e8 64 31 fe ff       	callq  69b0 <core::ptr::drop_in_place>
   2384c:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   23851:	48 8d bc 24 c0 02 00 	lea    0x2c0(%rsp),%rdi
   23858:	00 
   23859:	e8 22 2d fe ff       	callq  6580 <core::ptr::drop_in_place>
   2385e:	48 8b b4 24 60 03 00 	mov    0x360(%rsp),%rsi
   23865:	00 
   23866:	48 85 f6             	test   %rsi,%rsi
   23869:	74 1e                	je     23889 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4cf9>
   2386b:	48 8b bc 24 58 03 00 	mov    0x358(%rsp),%rdi
   23872:	00 
   23873:	48 85 ff             	test   %rdi,%rdi
   23876:	74 11                	je     23889 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4cf9>
   23878:	48 c1 e6 05          	shl    $0x5,%rsi
   2387c:	74 0b                	je     23889 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4cf9>
   2387e:	ba 08 00 00 00       	mov    $0x8,%edx
   23883:	ff 15 6f 23 02 00    	callq  *0x2236f(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   23889:	48 8b 84 24 90 06 00 	mov    0x690(%rsp),%rax
   23890:	00 
   23891:	48 89 84 24 08 04 00 	mov    %rax,0x408(%rsp)
   23898:	00 
   23899:	0f 10 84 24 80 06 00 	movups 0x680(%rsp),%xmm0
   238a0:	00 
   238a1:	0f 11 84 24 f8 03 00 	movups %xmm0,0x3f8(%rsp)
   238a8:	00 
   238a9:	48 8d bc 24 10 04 00 	lea    0x410(%rsp),%rdi
   238b0:	00 
   238b1:	48 8d b4 24 28 0e 00 	lea    0xe28(%rsp),%rsi
   238b8:	00 
   238b9:	ba d0 00 00 00       	mov    $0xd0,%edx
   238be:	ff 15 34 24 02 00    	callq  *0x22434(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
   238c4:	48 8b 84 24 40 06 00 	mov    0x640(%rsp),%rax
   238cb:	00 
   238cc:	48 85 c0             	test   %rax,%rax
   238cf:	74 28                	je     238f9 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4d69>
   238d1:	48 8b bc 24 38 06 00 	mov    0x638(%rsp),%rdi
   238d8:	00 
   238d9:	45 31 ed             	xor    %r13d,%r13d
   238dc:	48 85 ff             	test   %rdi,%rdi
   238df:	74 1b                	je     238fc <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4d6c>
   238e1:	48 c1 e0 03          	shl    $0x3,%rax
   238e5:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
   238e9:	48 85 f6             	test   %rsi,%rsi
   238ec:	74 0e                	je     238fc <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4d6c>
   238ee:	ba 08 00 00 00       	mov    $0x8,%edx
   238f3:	ff 15 ff 22 02 00    	callq  *0x222ff(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   238f9:	45 31 ed             	xor    %r13d,%r13d
   238fc:	48 8d bc 24 f0 03 00 	lea    0x3f0(%rsp),%rdi
   23903:	00 
   23904:	48 8d b4 24 f8 0e 00 	lea    0xef8(%rsp),%rsi
   2390b:	00 
   2390c:	ba f0 00 00 00       	mov    $0xf0,%edx
   23911:	ff 15 e1 23 02 00    	callq  *0x223e1(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
   23917:	0f 28 84 24 40 0a 00 	movaps 0xa40(%rsp),%xmm0
   2391e:	00 
   2391f:	0f 28 8c 24 50 0a 00 	movaps 0xa50(%rsp),%xmm1
   23926:	00 
   23927:	0f 28 94 24 60 0a 00 	movaps 0xa60(%rsp),%xmm2
   2392e:	00 
   2392f:	0f 28 9c 24 70 0a 00 	movaps 0xa70(%rsp),%xmm3
   23936:	00 
   23937:	0f 29 84 24 a0 0a 00 	movaps %xmm0,0xaa0(%rsp)
   2393e:	00 
   2393f:	0f 29 8c 24 b0 0a 00 	movaps %xmm1,0xab0(%rsp)
   23946:	00 
   23947:	0f 29 94 24 c0 0a 00 	movaps %xmm2,0xac0(%rsp)
   2394e:	00 
   2394f:	0f 29 9c 24 d0 0a 00 	movaps %xmm3,0xad0(%rsp)
   23956:	00 
   23957:	66 0f 6f 84 24 80 0a 	movdqa 0xa80(%rsp),%xmm0
   2395e:	00 00 
   23960:	66 0f 7f 84 24 e0 0a 	movdqa %xmm0,0xae0(%rsp)
   23967:	00 00 
   23969:	48 8b 84 24 90 0a 00 	mov    0xa90(%rsp),%rax
   23970:	00 
   23971:	48 89 84 24 f0 0a 00 	mov    %rax,0xaf0(%rsp)
   23978:	00 
   23979:	4d 85 ed             	test   %r13,%r13
   2397c:	0f 84 a5 01 00 00    	je     23b27 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4f97>
   23982:	48 8d 9c 24 d8 10 00 	lea    0x10d8(%rsp),%rbx
   23989:	00 
   2398a:	48 8d b4 24 f0 03 00 	lea    0x3f0(%rsp),%rsi
   23991:	00 
   23992:	4c 8b 3d 5f 23 02 00 	mov    0x2235f(%rip),%r15        # 45cf8 <memcpy@GLIBC_2.14>
   23999:	ba f0 00 00 00       	mov    $0xf0,%edx
   2399e:	48 89 df             	mov    %rbx,%rdi
   239a1:	41 ff d7             	callq  *%r15
   239a4:	0f 28 84 24 a0 0a 00 	movaps 0xaa0(%rsp),%xmm0
   239ab:	00 
   239ac:	0f 28 8c 24 b0 0a 00 	movaps 0xab0(%rsp),%xmm1
   239b3:	00 
   239b4:	0f 28 94 24 c0 0a 00 	movaps 0xac0(%rsp),%xmm2
   239bb:	00 
   239bc:	0f 28 9c 24 d0 0a 00 	movaps 0xad0(%rsp),%xmm3
   239c3:	00 
   239c4:	0f 29 84 24 e0 09 00 	movaps %xmm0,0x9e0(%rsp)
   239cb:	00 
   239cc:	0f 29 8c 24 f0 09 00 	movaps %xmm1,0x9f0(%rsp)
   239d3:	00 
   239d4:	0f 29 94 24 00 0a 00 	movaps %xmm2,0xa00(%rsp)
   239db:	00 
   239dc:	0f 29 9c 24 10 0a 00 	movaps %xmm3,0xa10(%rsp)
   239e3:	00 
   239e4:	0f 28 84 24 e0 0a 00 	movaps 0xae0(%rsp),%xmm0
   239eb:	00 
   239ec:	0f 29 84 24 20 0a 00 	movaps %xmm0,0xa20(%rsp)
   239f3:	00 
   239f4:	48 8b 84 24 f0 0a 00 	mov    0xaf0(%rsp),%rax
   239fb:	00 
   239fc:	48 89 84 24 30 0a 00 	mov    %rax,0xa30(%rsp)
   23a03:	00 
   23a04:	48 8d ac 24 e8 0f 00 	lea    0xfe8(%rsp),%rbp
   23a0b:	00 
   23a0c:	ba f0 00 00 00       	mov    $0xf0,%edx
   23a11:	48 89 ef             	mov    %rbp,%rdi
   23a14:	48 89 de             	mov    %rbx,%rsi
   23a17:	41 ff d7             	callq  *%r15
   23a1a:	0f 28 84 24 e0 09 00 	movaps 0x9e0(%rsp),%xmm0
   23a21:	00 
   23a22:	0f 28 8c 24 f0 09 00 	movaps 0x9f0(%rsp),%xmm1
   23a29:	00 
   23a2a:	0f 28 94 24 00 0a 00 	movaps 0xa00(%rsp),%xmm2
   23a31:	00 
   23a32:	0f 28 9c 24 10 0a 00 	movaps 0xa10(%rsp),%xmm3
   23a39:	00 
   23a3a:	0f 29 84 24 80 09 00 	movaps %xmm0,0x980(%rsp)
   23a41:	00 
   23a42:	0f 29 8c 24 90 09 00 	movaps %xmm1,0x990(%rsp)
   23a49:	00 
   23a4a:	0f 29 94 24 a0 09 00 	movaps %xmm2,0x9a0(%rsp)
   23a51:	00 
   23a52:	0f 29 9c 24 b0 09 00 	movaps %xmm3,0x9b0(%rsp)
   23a59:	00 
   23a5a:	0f 28 84 24 20 0a 00 	movaps 0xa20(%rsp),%xmm0
   23a61:	00 
   23a62:	0f 29 84 24 c0 09 00 	movaps %xmm0,0x9c0(%rsp)
   23a69:	00 
   23a6a:	48 8b 84 24 30 0a 00 	mov    0xa30(%rsp),%rax
   23a71:	00 
   23a72:	48 89 84 24 d0 09 00 	mov    %rax,0x9d0(%rsp)
   23a79:	00 
   23a7a:	48 8b 9c 24 50 03 00 	mov    0x350(%rsp),%rbx
   23a81:	00 
   23a82:	4c 89 2b             	mov    %r13,(%rbx)
   23a85:	4c 89 73 08          	mov    %r14,0x8(%rbx)
   23a89:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
   23a8d:	ba f0 00 00 00       	mov    $0xf0,%edx
   23a92:	48 89 ee             	mov    %rbp,%rsi
   23a95:	41 ff d7             	callq  *%r15
   23a98:	0f 28 84 24 80 09 00 	movaps 0x980(%rsp),%xmm0
   23a9f:	00 
   23aa0:	0f 28 8c 24 90 09 00 	movaps 0x990(%rsp),%xmm1
   23aa7:	00 
   23aa8:	0f 28 94 24 a0 09 00 	movaps 0x9a0(%rsp),%xmm2
   23aaf:	00 
   23ab0:	0f 28 9c 24 b0 09 00 	movaps 0x9b0(%rsp),%xmm3
   23ab7:	00 
   23ab8:	0f 11 83 00 01 00 00 	movups %xmm0,0x100(%rbx)
   23abf:	0f 11 8b 10 01 00 00 	movups %xmm1,0x110(%rbx)
   23ac6:	0f 11 93 20 01 00 00 	movups %xmm2,0x120(%rbx)
   23acd:	0f 11 9b 30 01 00 00 	movups %xmm3,0x130(%rbx)
   23ad4:	0f 28 84 24 c0 09 00 	movaps 0x9c0(%rsp),%xmm0
   23adb:	00 
   23adc:	0f 11 83 40 01 00 00 	movups %xmm0,0x140(%rbx)
   23ae3:	48 8b 84 24 d0 09 00 	mov    0x9d0(%rsp),%rax
   23aea:	00 
   23aeb:	48 89 83 50 01 00 00 	mov    %rax,0x150(%rbx)
   23af2:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   23af7:	48 89 83 58 01 00 00 	mov    %rax,0x158(%rbx)
   23afe:	4c 89 a3 60 01 00 00 	mov    %r12,0x160(%rbx)
   23b05:	48 8b 84 24 e0 01 00 	mov    0x1e0(%rsp),%rax
   23b0c:	00 
   23b0d:	48 89 83 78 01 00 00 	mov    %rax,0x178(%rbx)
   23b14:	f3 0f 6f 84 24 d0 01 	movdqu 0x1d0(%rsp),%xmm0
   23b1b:	00 00 
   23b1d:	f3 0f 7f 83 68 01 00 	movdqu %xmm0,0x168(%rbx)
   23b24:	00 
   23b25:	eb 5e                	jmp    23b85 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4ff5>
   23b27:	48 8b 84 24 50 03 00 	mov    0x350(%rsp),%rax
   23b2e:	00 
   23b2f:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   23b36:	4c 8b b4 24 d0 01 00 	mov    0x1d0(%rsp),%r14
   23b3d:	00 
   23b3e:	48 8b 84 24 e0 01 00 	mov    0x1e0(%rsp),%rax
   23b45:	00 
   23b46:	48 85 c0             	test   %rax,%rax
   23b49:	0f 85 9a fc ff ff    	jne    237e9 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c59>
   23b4f:	48 8b 84 24 d8 01 00 	mov    0x1d8(%rsp),%rax
   23b56:	00 
   23b57:	48 85 c0             	test   %rax,%rax
   23b5a:	74 1b                	je     23b77 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4fe7>
   23b5c:	48 c1 e0 03          	shl    $0x3,%rax
   23b60:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
   23b64:	48 85 f6             	test   %rsi,%rsi
   23b67:	74 0e                	je     23b77 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4fe7>
   23b69:	ba 08 00 00 00       	mov    $0x8,%edx
   23b6e:	4c 89 f7             	mov    %r14,%rdi
   23b71:	ff 15 81 20 02 00    	callq  *0x22081(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   23b77:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
   23b7c:	4c 89 e6             	mov    %r12,%rsi
   23b7f:	ff 15 9b 22 02 00    	callq  *0x2229b(%rip)        # 45e20 <munmap@GLIBC_2.2.5>
   23b85:	48 81 c4 c8 11 00 00 	add    $0x11c8,%rsp
   23b8c:	5b                   	pop    %rbx
   23b8d:	41 5c                	pop    %r12
   23b8f:	41 5d                	pop    %r13
   23b91:	41 5e                	pop    %r14
   23b93:	41 5f                	pop    %r15
   23b95:	5d                   	pop    %rbp
   23b96:	c3                   	retq   
   23b97:	48 8d 15 62 fd 01 00 	lea    0x1fd62(%rip),%rdx        # 43900 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3c8>
   23b9e:	4c 89 cf             	mov    %r9,%rdi
   23ba1:	ff 15 e9 20 02 00    	callq  *0x220e9(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   23ba7:	e9 a5 00 00 00       	jmpq   23c51 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50c1>
   23bac:	48 8d 15 65 fd 01 00 	lea    0x1fd65(%rip),%rdx        # 43918 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3e0>
   23bb3:	ff 15 d7 20 02 00    	callq  *0x220d7(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   23bb9:	e9 93 00 00 00       	jmpq   23c51 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50c1>
   23bbe:	48 8d 15 6b fd 01 00 	lea    0x1fd6b(%rip),%rdx        # 43930 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3f8>
   23bc5:	48 89 c7             	mov    %rax,%rdi
   23bc8:	48 89 de             	mov    %rbx,%rsi
   23bcb:	ff 15 cf 22 02 00    	callq  *0x222cf(%rip)        # 45ea0 <_GLOBAL_OFFSET_TABLE_+0x518>
   23bd1:	eb 7e                	jmp    23c51 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50c1>
   23bd3:	48 8d 15 56 fd 01 00 	lea    0x1fd56(%rip),%rdx        # 43930 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3f8>
   23bda:	48 89 df             	mov    %rbx,%rdi
   23bdd:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
   23be2:	ff 15 40 1e 02 00    	callq  *0x21e40(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   23be8:	eb 67                	jmp    23c51 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50c1>
   23bea:	48 8d 15 c7 fc 01 00 	lea    0x1fcc7(%rip),%rdx        # 438b8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x380>
   23bf1:	ff 15 f9 21 02 00    	callq  *0x221f9(%rip)        # 45df0 <_GLOBAL_OFFSET_TABLE_+0x468>
   23bf7:	eb 58                	jmp    23c51 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50c1>
   23bf9:	ff 15 e1 1e 02 00    	callq  *0x21ee1(%rip)        # 45ae0 <_GLOBAL_OFFSET_TABLE_+0x158>
   23bff:	eb 50                	jmp    23c51 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50c1>
   23c01:	be 08 00 00 00       	mov    $0x8,%esi
   23c06:	4c 89 f7             	mov    %r14,%rdi
   23c09:	ff 15 11 1f 02 00    	callq  *0x21f11(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   23c0f:	0f 0b                	ud2    
   23c11:	48 8d 15 b8 fc 01 00 	lea    0x1fcb8(%rip),%rdx        # 438d0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x398>
   23c18:	ff 15 82 22 02 00    	callq  *0x22282(%rip)        # 45ea0 <_GLOBAL_OFFSET_TABLE_+0x518>
   23c1e:	eb 31                	jmp    23c51 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50c1>
   23c20:	48 8d 15 a9 fc 01 00 	lea    0x1fca9(%rip),%rdx        # 438d0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x398>
   23c27:	48 89 f7             	mov    %rsi,%rdi
   23c2a:	4c 89 fe             	mov    %r15,%rsi
   23c2d:	ff 15 f5 1d 02 00    	callq  *0x21df5(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   23c33:	eb 1c                	jmp    23c51 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50c1>
   23c35:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   23c39:	48 89 f8             	mov    %rdi,%rax
   23c3c:	48 39 fe             	cmp    %rdi,%rsi
   23c3f:	73 72                	jae    23cb3 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5123>
   23c41:	48 8d 15 a0 fc 01 00 	lea    0x1fca0(%rip),%rdx        # 438e8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3b0>
   23c48:	48 89 c7             	mov    %rax,%rdi
   23c4b:	ff 15 4f 22 02 00    	callq  *0x2224f(%rip)        # 45ea0 <_GLOBAL_OFFSET_TABLE_+0x518>
   23c51:	0f 0b                	ud2    
   23c53:	bf 18 00 00 00       	mov    $0x18,%edi
   23c58:	be 08 00 00 00       	mov    $0x8,%esi
   23c5d:	ff 15 bd 1e 02 00    	callq  *0x21ebd(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   23c63:	0f 0b                	ud2    
   23c65:	ff 15 75 1e 02 00    	callq  *0x21e75(%rip)        # 45ae0 <_GLOBAL_OFFSET_TABLE_+0x158>
   23c6b:	eb e4                	jmp    23c51 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50c1>
   23c6d:	be 08 00 00 00       	mov    $0x8,%esi
   23c72:	48 89 df             	mov    %rbx,%rdi
   23c75:	ff 15 a5 1e 02 00    	callq  *0x21ea5(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   23c7b:	0f 0b                	ud2    
   23c7d:	48 8d 3d 76 39 01 00 	lea    0x13976(%rip),%rdi        # 375fa <str.6+0x2da>
   23c84:	48 8d 15 d5 fc 01 00 	lea    0x1fcd5(%rip),%rdx        # 43960 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x428>
   23c8b:	be 2b 00 00 00       	mov    $0x2b,%esi
   23c90:	ff 15 42 22 02 00    	callq  *0x22242(%rip)        # 45ed8 <_GLOBAL_OFFSET_TABLE_+0x550>
   23c96:	eb b9                	jmp    23c51 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50c1>
   23c98:	48 8d 3d 5b 39 01 00 	lea    0x1395b(%rip),%rdi        # 375fa <str.6+0x2da>
   23c9f:	48 8d 15 a2 fc 01 00 	lea    0x1fca2(%rip),%rdx        # 43948 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x410>
   23ca6:	be 2b 00 00 00       	mov    $0x2b,%esi
   23cab:	ff 15 27 22 02 00    	callq  *0x22227(%rip)        # 45ed8 <_GLOBAL_OFFSET_TABLE_+0x550>
   23cb1:	eb 9e                	jmp    23c51 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50c1>
   23cb3:	48 8d 15 2e fc 01 00 	lea    0x1fc2e(%rip),%rdx        # 438e8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3b0>
   23cba:	48 89 f7             	mov    %rsi,%rdi
   23cbd:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
   23cc2:	ff 15 60 1d 02 00    	callq  *0x21d60(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   23cc8:	eb 87                	jmp    23c51 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50c1>
   23cca:	ff 15 10 1e 02 00    	callq  *0x21e10(%rip)        # 45ae0 <_GLOBAL_OFFSET_TABLE_+0x158>
   23cd0:	e9 7c ff ff ff       	jmpq   23c51 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50c1>
   23cd5:	48 8b bc 24 c0 01 00 	mov    0x1c0(%rsp),%rdi
   23cdc:	00 
   23cdd:	48 89 de             	mov    %rbx,%rsi
   23ce0:	ff 15 3a 1e 02 00    	callq  *0x21e3a(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   23ce6:	0f 0b                	ud2    
   23ce8:	eb 41                	jmp    23d2b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x519b>
   23cea:	e9 81 00 00 00       	jmpq   23d70 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x51e0>
   23cef:	49 89 c6             	mov    %rax,%r14
   23cf2:	48 8d bc 24 f0 03 00 	lea    0x3f0(%rsp),%rdi
   23cf9:	00 
   23cfa:	e8 81 33 fe ff       	callq  7080 <core::ptr::drop_in_place>
   23cff:	e9 57 01 00 00       	jmpq   23e5b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x52cb>
   23d04:	49 89 c6             	mov    %rax,%r14
   23d07:	e9 4f 01 00 00       	jmpq   23e5b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x52cb>
   23d0c:	49 89 c6             	mov    %rax,%r14
   23d0f:	48 8d bc 24 f0 03 00 	lea    0x3f0(%rsp),%rdi
   23d16:	00 
   23d17:	e9 16 01 00 00       	jmpq   23e32 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x52a2>
   23d1c:	49 89 c6             	mov    %rax,%r14
   23d1f:	e9 37 01 00 00       	jmpq   23e5b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x52cb>
   23d24:	e9 15 01 00 00       	jmpq   23e3e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x52ae>
   23d29:	eb 00                	jmp    23d2b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x519b>
   23d2b:	49 89 c6             	mov    %rax,%r14
   23d2e:	48 8d bc 24 c0 00 00 	lea    0xc0(%rsp),%rdi
   23d35:	00 
   23d36:	e8 15 33 fe ff       	callq  7050 <core::ptr::drop_in_place>
   23d3b:	48 8d bc 24 d8 02 00 	lea    0x2d8(%rsp),%rdi
   23d42:	00 
   23d43:	e8 88 2a fe ff       	callq  67d0 <core::ptr::drop_in_place>
   23d48:	eb 29                	jmp    23d73 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x51e3>
   23d4a:	49 89 c6             	mov    %rax,%r14
   23d4d:	48 8d bc 24 c0 00 00 	lea    0xc0(%rsp),%rdi
   23d54:	00 
   23d55:	e8 f6 32 fe ff       	callq  7050 <core::ptr::drop_in_place>
   23d5a:	eb 17                	jmp    23d73 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x51e3>
   23d5c:	eb 12                	jmp    23d70 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x51e0>
   23d5e:	49 89 c6             	mov    %rax,%r14
   23d61:	48 8d bc 24 88 01 00 	lea    0x188(%rsp),%rdi
   23d68:	00 
   23d69:	e8 32 2d fe ff       	callq  6aa0 <core::ptr::drop_in_place>
   23d6e:	eb 59                	jmp    23dc9 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5239>
   23d70:	49 89 c6             	mov    %rax,%r14
   23d73:	48 8d bc 24 88 01 00 	lea    0x188(%rsp),%rdi
   23d7a:	00 
   23d7b:	e8 20 2d fe ff       	callq  6aa0 <core::ptr::drop_in_place>
   23d80:	48 8d bc 24 a0 03 00 	lea    0x3a0(%rsp),%rdi
   23d87:	00 
   23d88:	e8 43 2a fe ff       	callq  67d0 <core::ptr::drop_in_place>
   23d8d:	eb 3a                	jmp    23dc9 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5239>
   23d8f:	eb 00                	jmp    23d91 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5201>
   23d91:	49 89 c6             	mov    %rax,%r14
   23d94:	eb 05                	jmp    23d9b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x520b>
   23d96:	eb 00                	jmp    23d98 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5208>
   23d98:	49 89 c6             	mov    %rax,%r14
   23d9b:	48 8d bc 24 a0 0a 00 	lea    0xaa0(%rsp),%rdi
   23da2:	00 
   23da3:	e8 18 36 fe ff       	callq  73c0 <core::ptr::drop_in_place>
   23da8:	e9 ae 00 00 00       	jmpq   23e5b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x52cb>
   23dad:	eb 00                	jmp    23daf <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x521f>
   23daf:	49 89 c6             	mov    %rax,%r14
   23db2:	48 8d bc 24 50 0b 00 	lea    0xb50(%rsp),%rdi
   23db9:	00 
   23dba:	e8 e1 2d fe ff       	callq  6ba0 <core::ptr::drop_in_place>
   23dbf:	e9 97 00 00 00       	jmpq   23e5b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x52cb>
   23dc4:	eb 00                	jmp    23dc6 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5236>
   23dc6:	49 89 c6             	mov    %rax,%r14
   23dc9:	48 8d bc 24 28 04 00 	lea    0x428(%rsp),%rdi
   23dd0:	00 
   23dd1:	e8 8a 20 fe ff       	callq  5e60 <core::ptr::drop_in_place>
   23dd6:	eb 40                	jmp    23e18 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5288>
   23dd8:	49 89 c6             	mov    %rax,%r14
   23ddb:	eb 7e                	jmp    23e5b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x52cb>
   23ddd:	49 89 c6             	mov    %rax,%r14
   23de0:	eb 15                	jmp    23df7 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5267>
   23de2:	49 89 c6             	mov    %rax,%r14
   23de5:	eb 10                	jmp    23df7 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5267>
   23de7:	49 89 c6             	mov    %rax,%r14
   23dea:	48 8d bc 24 f0 03 00 	lea    0x3f0(%rsp),%rdi
   23df1:	00 
   23df2:	e8 d9 25 fe ff       	callq  63d0 <core::ptr::drop_in_place>
   23df7:	48 8d bc 24 50 06 00 	lea    0x650(%rsp),%rdi
   23dfe:	00 
   23dff:	e8 5c 20 fe ff       	callq  5e60 <core::ptr::drop_in_place>
   23e04:	eb 55                	jmp    23e5b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x52cb>
   23e06:	49 89 c6             	mov    %rax,%r14
   23e09:	eb 50                	jmp    23e5b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x52cb>
   23e0b:	49 89 c6             	mov    %rax,%r14
   23e0e:	eb 77                	jmp    23e87 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x52f7>
   23e10:	49 89 c6             	mov    %rax,%r14
   23e13:	eb 53                	jmp    23e68 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x52d8>
   23e15:	49 89 c6             	mov    %rax,%r14
   23e18:	48 8d bc 24 a0 04 00 	lea    0x4a0(%rsp),%rdi
   23e1f:	00 
   23e20:	e8 7b 2d fe ff       	callq  6ba0 <core::ptr::drop_in_place>
   23e25:	eb 34                	jmp    23e5b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x52cb>
   23e27:	49 89 c6             	mov    %rax,%r14
   23e2a:	48 8d bc 24 a0 0a 00 	lea    0xaa0(%rsp),%rdi
   23e31:	00 
   23e32:	e8 69 2c fe ff       	callq  6aa0 <core::ptr::drop_in_place>
   23e37:	eb 4e                	jmp    23e87 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x52f7>
   23e39:	49 89 c6             	mov    %rax,%r14
   23e3c:	eb 1d                	jmp    23e5b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x52cb>
   23e3e:	49 89 c6             	mov    %rax,%r14
   23e41:	48 8d bc 24 f0 03 00 	lea    0x3f0(%rsp),%rdi
   23e48:	00 
   23e49:	e8 82 2c fe ff       	callq  6ad0 <core::ptr::drop_in_place>
   23e4e:	48 8d bc 24 a0 0a 00 	lea    0xaa0(%rsp),%rdi
   23e55:	00 
   23e56:	e8 85 23 fe ff       	callq  61e0 <core::ptr::drop_in_place>
   23e5b:	48 8d bc 24 c0 02 00 	lea    0x2c0(%rsp),%rdi
   23e62:	00 
   23e63:	e8 18 27 fe ff       	callq  6580 <core::ptr::drop_in_place>
   23e68:	48 8d bc 24 58 03 00 	lea    0x358(%rsp),%rdi
   23e6f:	00 
   23e70:	e8 6b 23 fe ff       	callq  61e0 <core::ptr::drop_in_place>
   23e75:	eb 03                	jmp    23e7a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x52ea>
   23e77:	49 89 c6             	mov    %rax,%r14
   23e7a:	48 8d bc 24 f8 05 00 	lea    0x5f8(%rsp),%rdi
   23e81:	00 
   23e82:	e8 c9 36 fe ff       	callq  7550 <core::ptr::drop_in_place>
   23e87:	48 8d bc 24 d0 01 00 	lea    0x1d0(%rsp),%rdi
   23e8e:	00 
   23e8f:	e8 8c 28 fe ff       	callq  6720 <core::ptr::drop_in_place>
   23e94:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
   23e99:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   23e9e:	e8 0d 2f fe ff       	callq  6db0 <core::ptr::drop_in_place>
   23ea3:	eb 3c                	jmp    23ee1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5351>
   23ea5:	49 89 c6             	mov    %rax,%r14
   23ea8:	48 8b 3b             	mov    (%rbx),%rdi
   23eab:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   23eaf:	e8 1c 5b fe ff       	callq  99d0 <alloc::alloc::box_free>
   23eb4:	48 89 df             	mov    %rbx,%rdi
   23eb7:	e8 34 5b fe ff       	callq  99f0 <alloc::alloc::box_free>
   23ebc:	eb 1c                	jmp    23eda <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x534a>
   23ebe:	49 89 c6             	mov    %rax,%r14
   23ec1:	48 8b 3b             	mov    (%rbx),%rdi
   23ec4:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   23ec8:	e8 03 5b fe ff       	callq  99d0 <alloc::alloc::box_free>
   23ecd:	48 89 df             	mov    %rbx,%rdi
   23ed0:	e8 1b 5b fe ff       	callq  99f0 <alloc::alloc::box_free>
   23ed5:	eb 0a                	jmp    23ee1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5351>
   23ed7:	49 89 c6             	mov    %rax,%r14
   23eda:	89 ef                	mov    %ebp,%edi
   23edc:	e8 7f 26 fe ff       	callq  6560 <core::ptr::drop_in_place>
   23ee1:	4c 89 f7             	mov    %r14,%rdi
   23ee4:	e8 67 11 fe ff       	callq  5050 <_Unwind_Resume@plt>
   23ee9:	0f 0b                	ud2    
   23eeb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000023ef0 <std::backtrace_rs::symbolize::gimli::elf::Object::section>:
   23ef0:	55                   	push   %rbp
   23ef1:	41 57                	push   %r15
   23ef3:	41 56                	push   %r14
   23ef5:	41 55                	push   %r13
   23ef7:	41 54                	push   %r12
   23ef9:	53                   	push   %rbx
   23efa:	b8 18 2b 00 00       	mov    $0x2b18,%eax
   23eff:	e8 96 15 01 00       	callq  3549a <__rust_probestack>
   23f04:	48 29 c4             	sub    %rax,%rsp
   23f07:	49 89 cc             	mov    %rcx,%r12
   23f0a:	49 89 d5             	mov    %rdx,%r13
   23f0d:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   23f12:	48 89 3c 24          	mov    %rdi,(%rsp)
   23f16:	48 8b 6f 18          	mov    0x18(%rdi),%rbp
   23f1a:	48 85 ed             	test   %rbp,%rbp
   23f1d:	74 7e                	je     23f9d <std::backtrace_rs::symbolize::gimli::elf::Object::section+0xad>
   23f1f:	48 8b 04 24          	mov    (%rsp),%rax
   23f23:	4c 8b 70 10          	mov    0x10(%rax),%r14
   23f27:	4c 8d 78 20          	lea    0x20(%rax),%r15
   23f2b:	48 c1 e5 06          	shl    $0x6,%rbp
   23f2f:	31 db                	xor    %ebx,%ebx
   23f31:	eb 16                	jmp    23f49 <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x59>
   23f33:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   23f3a:	00 00 00 
   23f3d:	0f 1f 00             	nopl   (%rax)
   23f40:	48 83 c3 40          	add    $0x40,%rbx
   23f44:	48 39 dd             	cmp    %rbx,%rbp
   23f47:	74 54                	je     23f9d <std::backtrace_rs::symbolize::gimli::elf::Object::section+0xad>
   23f49:	41 8b 34 1e          	mov    (%r14,%rbx,1),%esi
   23f4d:	4c 89 ff             	mov    %r15,%rdi
   23f50:	ff 15 52 20 02 00    	callq  *0x22052(%rip)        # 45fa8 <_GLOBAL_OFFSET_TABLE_+0x620>
   23f56:	48 85 c0             	test   %rax,%rax
   23f59:	74 e5                	je     23f40 <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x50>
   23f5b:	4c 39 e2             	cmp    %r12,%rdx
   23f5e:	75 e0                	jne    23f40 <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x50>
   23f60:	4c 39 e8             	cmp    %r13,%rax
   23f63:	74 13                	je     23f78 <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x88>
   23f65:	48 89 c7             	mov    %rax,%rdi
   23f68:	4c 89 ee             	mov    %r13,%rsi
   23f6b:	4c 89 e2             	mov    %r12,%rdx
   23f6e:	ff 15 44 1e 02 00    	callq  *0x21e44(%rip)        # 45db8 <bcmp@GLIBC_2.2.5>
   23f74:	85 c0                	test   %eax,%eax
   23f76:	75 c8                	jne    23f40 <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x50>
   23f78:	41 83 7c 1e 04 08    	cmpl   $0x8,0x4(%r14,%rbx,1)
   23f7e:	0f 85 74 01 00 00    	jne    240f8 <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x208>
   23f84:	45 31 ed             	xor    %r13d,%r13d
   23f87:	41 f6 44 1e 09 08    	testb  $0x8,0x9(%r14,%rbx,1)
   23f8d:	48 8d 2d c4 32 01 00 	lea    0x132c4(%rip),%rbp        # 37258 <_fini+0x1934>
   23f94:	49 0f 45 ed          	cmovne %r13,%rbp
   23f98:	e9 1f 02 00 00       	jmpq   241bc <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x2cc>
   23f9d:	49 83 fc 07          	cmp    $0x7,%r12
   23fa1:	0f 82 13 02 00 00    	jb     241ba <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x2ca>
   23fa7:	48 8d 05 27 46 01 00 	lea    0x14627(%rip),%rax        # 385d5 <str.6+0x12b5>
   23fae:	49 39 c5             	cmp    %rax,%r13
   23fb1:	74 1a                	je     23fcd <std::backtrace_rs::symbolize::gimli::elf::Object::section+0xdd>
   23fb3:	b8 2e 64 65 62       	mov    $0x6265642e,%eax
   23fb8:	41 33 45 00          	xor    0x0(%r13),%eax
   23fbc:	b9 62 75 67 5f       	mov    $0x5f677562,%ecx
   23fc1:	41 33 4d 03          	xor    0x3(%r13),%ecx
   23fc5:	09 c1                	or     %eax,%ecx
   23fc7:	0f 85 ed 01 00 00    	jne    241ba <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x2ca>
   23fcd:	49 83 fc 07          	cmp    $0x7,%r12
   23fd1:	74 0b                	je     23fde <std::backtrace_rs::symbolize::gimli::elf::Object::section+0xee>
   23fd3:	41 80 7d 07 bf       	cmpb   $0xbf,0x7(%r13)
   23fd8:	0f 8e 67 02 00 00    	jle    24245 <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x355>
   23fde:	48 8b 04 24          	mov    (%rsp),%rax
   23fe2:	4c 8b 78 18          	mov    0x18(%rax),%r15
   23fe6:	4d 85 ff             	test   %r15,%r15
   23fe9:	0f 84 cb 01 00 00    	je     241ba <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x2ca>
   23fef:	49 83 c5 07          	add    $0x7,%r13
   23ff3:	4c 8b 70 10          	mov    0x10(%rax),%r14
   23ff7:	48 8d 68 20          	lea    0x20(%rax),%rbp
   23ffb:	49 c1 e7 06          	shl    $0x6,%r15
   23fff:	31 db                	xor    %ebx,%ebx
   24001:	eb 1a                	jmp    2401d <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x12d>
   24003:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2400a:	00 00 00 
   2400d:	0f 1f 00             	nopl   (%rax)
   24010:	48 83 c3 40          	add    $0x40,%rbx
   24014:	49 39 df             	cmp    %rbx,%r15
   24017:	0f 84 14 01 00 00    	je     24131 <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x241>
   2401d:	41 8b 34 1e          	mov    (%r14,%rbx,1),%esi
   24021:	48 89 ef             	mov    %rbp,%rdi
   24024:	ff 15 7e 1f 02 00    	callq  *0x21f7e(%rip)        # 45fa8 <_GLOBAL_OFFSET_TABLE_+0x620>
   2402a:	48 85 c0             	test   %rax,%rax
   2402d:	74 e1                	je     24010 <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x120>
   2402f:	48 83 fa 08          	cmp    $0x8,%rdx
   24033:	72 db                	jb     24010 <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x120>
   24035:	48 8d 0d ac 3a 01 00 	lea    0x13aac(%rip),%rcx        # 37ae8 <str.6+0x7c8>
   2403c:	48 39 c8             	cmp    %rcx,%rax
   2403f:	74 0f                	je     24050 <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x160>
   24041:	48 b9 2e 7a 64 65 62 	movabs $0x5f67756265647a2e,%rcx
   24048:	75 67 5f 
   2404b:	48 39 08             	cmp    %rcx,(%rax)
   2404e:	75 c0                	jne    24010 <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x120>
   24050:	48 8d 4a ff          	lea    -0x1(%rdx),%rcx
   24054:	4c 39 e1             	cmp    %r12,%rcx
   24057:	75 b7                	jne    24010 <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x120>
   24059:	48 83 c0 08          	add    $0x8,%rax
   2405d:	49 39 c5             	cmp    %rax,%r13
   24060:	74 14                	je     24076 <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x186>
   24062:	48 83 c2 f8          	add    $0xfffffffffffffff8,%rdx
   24066:	48 89 c7             	mov    %rax,%rdi
   24069:	4c 89 ee             	mov    %r13,%rsi
   2406c:	ff 15 46 1d 02 00    	callq  *0x21d46(%rip)        # 45db8 <bcmp@GLIBC_2.2.5>
   24072:	85 c0                	test   %eax,%eax
   24074:	75 9a                	jne    24010 <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x120>
   24076:	41 83 7c 1e 04 08    	cmpl   $0x8,0x4(%r14,%rbx,1)
   2407c:	0f 84 38 01 00 00    	je     241ba <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x2ca>
   24082:	48 8b 14 24          	mov    (%rsp),%rdx
   24086:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
   2408a:	49 8b 44 1e 18       	mov    0x18(%r14,%rbx,1),%rax
   2408f:	31 ed                	xor    %ebp,%ebp
   24091:	48 29 c1             	sub    %rax,%rcx
   24094:	0f 82 22 01 00 00    	jb     241bc <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x2cc>
   2409a:	49 8b 5c 1e 20       	mov    0x20(%r14,%rbx,1),%rbx
   2409f:	48 39 d9             	cmp    %rbx,%rcx
   240a2:	0f 82 14 01 00 00    	jb     241bc <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x2cc>
   240a8:	48 03 02             	add    (%rdx),%rax
   240ab:	48 8d 48 08          	lea    0x8(%rax),%rcx
   240af:	31 ed                	xor    %ebp,%ebp
   240b1:	4c 8d 3d a0 31 01 00 	lea    0x131a0(%rip),%r15        # 37258 <_fini+0x1934>
   240b8:	48 83 eb 08          	sub    $0x8,%rbx
   240bc:	4c 0f 43 f9          	cmovae %rcx,%r15
   240c0:	48 0f 42 dd          	cmovb  %rbp,%rbx
   240c4:	0f 82 f2 00 00 00    	jb     241bc <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x2cc>
   240ca:	48 8d 0d 0f 3a 01 00 	lea    0x13a0f(%rip),%rcx        # 37ae0 <str.6+0x7c0>
   240d1:	48 39 c8             	cmp    %rcx,%rax
   240d4:	0f 84 da 00 00 00    	je     241b4 <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x2c4>
   240da:	31 ed                	xor    %ebp,%ebp
   240dc:	48 83 fb 04          	cmp    $0x4,%rbx
   240e0:	0f 82 d6 00 00 00    	jb     241bc <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x2cc>
   240e6:	48 81 38 5a 4c 49 42 	cmpq   $0x42494c5a,(%rax)
   240ed:	0f 84 e1 00 00 00    	je     241d4 <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x2e4>
   240f3:	e9 c4 00 00 00       	jmpq   241bc <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x2cc>
   240f8:	48 8b 0c 24          	mov    (%rsp),%rcx
   240fc:	48 8b 41 08          	mov    0x8(%rcx),%rax
   24100:	4d 8b 7c 1e 18       	mov    0x18(%r14,%rbx,1),%r15
   24105:	31 ed                	xor    %ebp,%ebp
   24107:	4c 29 f8             	sub    %r15,%rax
   2410a:	0f 82 ac 00 00 00    	jb     241bc <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x2cc>
   24110:	4d 8b 6c 1e 20       	mov    0x20(%r14,%rbx,1),%r13
   24115:	4c 39 e8             	cmp    %r13,%rax
   24118:	0f 82 9e 00 00 00    	jb     241bc <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x2cc>
   2411e:	4c 03 39             	add    (%rcx),%r15
   24121:	41 f6 44 1e 09 08    	testb  $0x8,0x9(%r14,%rbx,1)
   24127:	75 0f                	jne    24138 <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x248>
   24129:	4c 89 fd             	mov    %r15,%rbp
   2412c:	e9 8b 00 00 00       	jmpq   241bc <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x2cc>
   24131:	31 ed                	xor    %ebp,%ebp
   24133:	e9 84 00 00 00       	jmpq   241bc <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x2cc>
   24138:	49 83 fd 18          	cmp    $0x18,%r13
   2413c:	72 7c                	jb     241ba <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x2ca>
   2413e:	41 83 3f 01          	cmpl   $0x1,(%r15)
   24142:	75 76                	jne    241ba <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x2ca>
   24144:	49 83 c5 e8          	add    $0xffffffffffffffe8,%r13
   24148:	49 8b 77 08          	mov    0x8(%r15),%rsi
   2414c:	49 83 c7 18          	add    $0x18,%r15
   24150:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   24155:	e8 06 86 ff ff       	callq  1c760 <std::backtrace_rs::symbolize::gimli::stash::Stash::allocate>
   2415a:	48 89 c5             	mov    %rax,%rbp
   2415d:	49 89 d6             	mov    %rdx,%r14
   24160:	4c 8d 64 24 28       	lea    0x28(%rsp),%r12
   24165:	4c 89 e7             	mov    %r12,%rdi
   24168:	ff 15 f2 1c 02 00    	callq  *0x21cf2(%rip)        # 45e60 <_GLOBAL_OFFSET_TABLE_+0x4d8>
   2416e:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   24173:	4c 89 e6             	mov    %r12,%rsi
   24176:	4c 89 fa             	mov    %r15,%rdx
   24179:	4c 89 e9             	mov    %r13,%rcx
   2417c:	49 89 e8             	mov    %rbp,%r8
   2417f:	4d 89 f1             	mov    %r14,%r9
   24182:	6a 05                	pushq  $0x5
   24184:	6a 00                	pushq  $0x0
   24186:	ff 15 ec 1c 02 00    	callq  *0x21cec(%rip)        # 45e78 <_GLOBAL_OFFSET_TABLE_+0x4f0>
   2418c:	48 83 c4 10          	add    $0x10,%rsp
   24190:	4c 33 6c 24 10       	xor    0x10(%rsp),%r13
   24195:	4c 89 f0             	mov    %r14,%rax
   24198:	48 33 44 24 20       	xor    0x20(%rsp),%rax
   2419d:	31 c9                	xor    %ecx,%ecx
   2419f:	4c 09 e8             	or     %r13,%rax
   241a2:	48 0f 45 e9          	cmovne %rcx,%rbp
   241a6:	80 7c 24 18 00       	cmpb   $0x0,0x18(%rsp)
   241ab:	48 0f 45 e9          	cmovne %rcx,%rbp
   241af:	4d 89 f5             	mov    %r14,%r13
   241b2:	eb 08                	jmp    241bc <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x2cc>
   241b4:	48 83 fb 04          	cmp    $0x4,%rbx
   241b8:	73 1a                	jae    241d4 <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x2e4>
   241ba:	31 ed                	xor    %ebp,%ebp
   241bc:	48 89 e8             	mov    %rbp,%rax
   241bf:	4c 89 ea             	mov    %r13,%rdx
   241c2:	48 81 c4 18 2b 00 00 	add    $0x2b18,%rsp
   241c9:	5b                   	pop    %rbx
   241ca:	41 5c                	pop    %r12
   241cc:	41 5d                	pop    %r13
   241ce:	41 5e                	pop    %r14
   241d0:	41 5f                	pop    %r15
   241d2:	5d                   	pop    %rbp
   241d3:	c3                   	retq   
   241d4:	48 83 c3 fc          	add    $0xfffffffffffffffc,%rbx
   241d8:	41 8b 37             	mov    (%r15),%esi
   241db:	49 83 c7 04          	add    $0x4,%r15
   241df:	0f ce                	bswap  %esi
   241e1:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   241e6:	e8 75 85 ff ff       	callq  1c760 <std::backtrace_rs::symbolize::gimli::stash::Stash::allocate>
   241eb:	48 89 c5             	mov    %rax,%rbp
   241ee:	49 89 d5             	mov    %rdx,%r13
   241f1:	4c 8d 74 24 28       	lea    0x28(%rsp),%r14
   241f6:	4c 89 f7             	mov    %r14,%rdi
   241f9:	ff 15 61 1c 02 00    	callq  *0x21c61(%rip)        # 45e60 <_GLOBAL_OFFSET_TABLE_+0x4d8>
   241ff:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   24204:	4c 89 f6             	mov    %r14,%rsi
   24207:	4c 89 fa             	mov    %r15,%rdx
   2420a:	48 89 d9             	mov    %rbx,%rcx
   2420d:	49 89 e8             	mov    %rbp,%r8
   24210:	4d 89 e9             	mov    %r13,%r9
   24213:	6a 05                	pushq  $0x5
   24215:	6a 00                	pushq  $0x0
   24217:	ff 15 5b 1c 02 00    	callq  *0x21c5b(%rip)        # 45e78 <_GLOBAL_OFFSET_TABLE_+0x4f0>
   2421d:	48 83 c4 10          	add    $0x10,%rsp
   24221:	48 33 5c 24 10       	xor    0x10(%rsp),%rbx
   24226:	4c 89 e8             	mov    %r13,%rax
   24229:	48 33 44 24 20       	xor    0x20(%rsp),%rax
   2422e:	31 c9                	xor    %ecx,%ecx
   24230:	48 09 d8             	or     %rbx,%rax
   24233:	48 0f 45 e9          	cmovne %rcx,%rbp
   24237:	80 7c 24 18 00       	cmpb   $0x0,0x18(%rsp)
   2423c:	48 0f 45 e9          	cmovne %rcx,%rbp
   24240:	e9 77 ff ff ff       	jmpq   241bc <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x2cc>
   24245:	4c 8d 05 94 04 02 00 	lea    0x20494(%rip),%r8        # 446e0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x11a8>
   2424c:	ba 07 00 00 00       	mov    $0x7,%edx
   24251:	4c 89 ef             	mov    %r13,%rdi
   24254:	4c 89 e6             	mov    %r12,%rsi
   24257:	4c 89 e1             	mov    %r12,%rcx
   2425a:	ff 15 d0 1b 02 00    	callq  *0x21bd0(%rip)        # 45e30 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   24260:	0f 0b                	ud2    
   24262:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   24269:	00 00 00 
   2426c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000024270 <std::backtrace_rs::symbolize::gimli::callback>:
   24270:	55                   	push   %rbp
   24271:	41 57                	push   %r15
   24273:	41 56                	push   %r14
   24275:	41 55                	push   %r13
   24277:	41 54                	push   %r12
   24279:	53                   	push   %rbx
   2427a:	48 83 ec 78          	sub    $0x78,%rsp
   2427e:	49 89 d6             	mov    %rdx,%r14
   24281:	49 89 fc             	mov    %rdi,%r12
   24284:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
   24288:	48 85 db             	test   %rbx,%rbx
   2428b:	74 63                	je     242f0 <std::backtrace_rs::symbolize::gimli::callback+0x80>
   2428d:	80 3b 00             	cmpb   $0x0,(%rbx)
   24290:	74 5e                	je     242f0 <std::backtrace_rs::symbolize::gimli::callback+0x80>
   24292:	48 89 df             	mov    %rbx,%rdi
   24295:	ff 15 ad 18 02 00    	callq  *0x218ad(%rip)        # 45b48 <strlen@GLIBC_2.2.5>
   2429b:	49 89 c7             	mov    %rax,%r15
   2429e:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   242a4:	48 85 c0             	test   %rax,%rax
   242a7:	74 24                	je     242cd <std::backtrace_rs::symbolize::gimli::callback+0x5d>
   242a9:	49 83 ff ff          	cmp    $0xffffffffffffffff,%r15
   242ad:	0f 84 60 03 00 00    	je     24613 <std::backtrace_rs::symbolize::gimli::callback+0x3a3>
   242b3:	be 01 00 00 00       	mov    $0x1,%esi
   242b8:	4c 89 ff             	mov    %r15,%rdi
   242bb:	ff 15 bf 18 02 00    	callq  *0x218bf(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   242c1:	49 89 c5             	mov    %rax,%r13
   242c4:	48 85 c0             	test   %rax,%rax
   242c7:	0f 84 5e 03 00 00    	je     2462b <std::backtrace_rs::symbolize::gimli::callback+0x3bb>
   242cd:	4c 89 ef             	mov    %r13,%rdi
   242d0:	48 89 de             	mov    %rbx,%rsi
   242d3:	4c 89 fa             	mov    %r15,%rdx
   242d6:	ff 15 1c 1a 02 00    	callq  *0x21a1c(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
   242dc:	4c 89 6c 24 08       	mov    %r13,0x8(%rsp)
   242e1:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
   242e6:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
   242eb:	e9 b8 00 00 00       	jmpq   243a8 <std::backtrace_rs::symbolize::gimli::callback+0x138>
   242f0:	49 83 7e 10 00       	cmpq   $0x0,0x10(%r14)
   242f5:	74 16                	je     2430d <std::backtrace_rs::symbolize::gimli::callback+0x9d>
   242f7:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   242fe:	00 00 
   24300:	0f 57 c0             	xorps  %xmm0,%xmm0
   24303:	0f 11 44 24 10       	movups %xmm0,0x10(%rsp)
   24308:	e9 9b 00 00 00       	jmpq   243a8 <std::backtrace_rs::symbolize::gimli::callback+0x138>
   2430d:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   24312:	ff 15 70 1c 02 00    	callq  *0x21c70(%rip)        # 45f88 <_GLOBAL_OFFSET_TABLE_+0x600>
   24318:	83 7c 24 40 01       	cmpl   $0x1,0x40(%rsp)
   2431d:	8a 44 24 48          	mov    0x48(%rsp),%al
   24321:	8b 4c 24 49          	mov    0x49(%rsp),%ecx
   24325:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
   24329:	8b 4c 24 4c          	mov    0x4c(%rsp),%ecx
   2432d:	89 4c 24 23          	mov    %ecx,0x23(%rsp)
   24331:	4c 8b 7c 24 50       	mov    0x50(%rsp),%r15
   24336:	75 4d                	jne    24385 <std::backtrace_rs::symbolize::gimli::callback+0x115>
   24338:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   2433f:	00 00 
   24341:	0f 57 c0             	xorps  %xmm0,%xmm0
   24344:	0f 11 44 24 10       	movups %xmm0,0x10(%rsp)
   24349:	3c 02                	cmp    $0x2,%al
   2434b:	72 5b                	jb     243a8 <std::backtrace_rs::symbolize::gimli::callback+0x138>
   2434d:	49 8b 3f             	mov    (%r15),%rdi
   24350:	49 8b 47 08          	mov    0x8(%r15),%rax
   24354:	ff 10                	callq  *(%rax)
   24356:	49 8b 47 08          	mov    0x8(%r15),%rax
   2435a:	48 8b 70 08          	mov    0x8(%rax),%rsi
   2435e:	48 85 f6             	test   %rsi,%rsi
   24361:	74 0d                	je     24370 <std::backtrace_rs::symbolize::gimli::callback+0x100>
   24363:	49 8b 3f             	mov    (%r15),%rdi
   24366:	48 8b 50 10          	mov    0x10(%rax),%rdx
   2436a:	ff 15 88 18 02 00    	callq  *0x21888(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   24370:	be 18 00 00 00       	mov    $0x18,%esi
   24375:	ba 08 00 00 00       	mov    $0x8,%edx
   2437a:	4c 89 ff             	mov    %r15,%rdi
   2437d:	ff 15 75 18 02 00    	callq  *0x21875(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   24383:	eb 23                	jmp    243a8 <std::backtrace_rs::symbolize::gimli::callback+0x138>
   24385:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
   2438a:	88 44 24 08          	mov    %al,0x8(%rsp)
   2438e:	8b 44 24 20          	mov    0x20(%rsp),%eax
   24392:	8b 54 24 23          	mov    0x23(%rsp),%edx
   24396:	89 44 24 09          	mov    %eax,0x9(%rsp)
   2439a:	89 54 24 0c          	mov    %edx,0xc(%rsp)
   2439e:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
   243a3:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   243a8:	49 8b 6c 24 10       	mov    0x10(%r12),%rbp
   243ad:	45 0f b7 7c 24 18    	movzwl 0x18(%r12),%r15d
   243b3:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   243b8:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   243bd:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   243c2:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   243c7:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   243cc:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   243d1:	4d 85 ff             	test   %r15,%r15
   243d4:	74 34                	je     2440a <std::backtrace_rs::symbolize::gimli::callback+0x19a>
   243d6:	49 83 ff 04          	cmp    $0x4,%r15
   243da:	41 bd 04 00 00 00    	mov    $0x4,%r13d
   243e0:	4d 0f 47 ef          	cmova  %r15,%r13
   243e4:	4c 89 eb             	mov    %r13,%rbx
   243e7:	48 c1 e3 04          	shl    $0x4,%rbx
   243eb:	be 08 00 00 00       	mov    $0x8,%esi
   243f0:	48 89 df             	mov    %rbx,%rdi
   243f3:	ff 15 87 17 02 00    	callq  *0x21787(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   243f9:	48 85 c0             	test   %rax,%rax
   243fc:	0f 84 f9 01 00 00    	je     245fb <std::backtrace_rs::symbolize::gimli::callback+0x38b>
   24402:	49 89 c0             	mov    %rax,%r8
   24405:	48 89 c6             	mov    %rax,%rsi
   24408:	eb 0e                	jmp    24418 <std::backtrace_rs::symbolize::gimli::callback+0x1a8>
   2440a:	45 31 ed             	xor    %r13d,%r13d
   2440d:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   24413:	be 08 00 00 00       	mov    $0x8,%esi
   24418:	4d 6b cf 38          	imul   $0x38,%r15,%r9
   2441c:	49 8d 3c 29          	lea    (%r9,%rbp,1),%rdi
   24420:	49 bf 93 24 49 92 24 	movabs $0x2492492492492493,%r15
   24427:	49 92 24 
   2442a:	48 39 fd             	cmp    %rdi,%rbp
   2442d:	0f 84 b1 00 00 00    	je     244e4 <std::backtrace_rs::symbolize::gimli::callback+0x274>
   24433:	49 83 c1 c8          	add    $0xffffffffffffffc8,%r9
   24437:	4c 89 c8             	mov    %r9,%rax
   2443a:	48 c1 e8 03          	shr    $0x3,%rax
   2443e:	49 f7 e7             	mul    %r15
   24441:	8d 42 01             	lea    0x1(%rdx),%eax
   24444:	48 83 e0 03          	and    $0x3,%rax
   24448:	74 22                	je     2446c <std::backtrace_rs::symbolize::gimli::callback+0x1fc>
   2444a:	48 f7 d8             	neg    %rax
   2444d:	0f 1f 00             	nopl   (%rax)
   24450:	48 8b 4d 10          	mov    0x10(%rbp),%rcx
   24454:	48 8b 5d 28          	mov    0x28(%rbp),%rbx
   24458:	48 83 c5 38          	add    $0x38,%rbp
   2445c:	48 89 0e             	mov    %rcx,(%rsi)
   2445f:	48 89 5e 08          	mov    %rbx,0x8(%rsi)
   24463:	48 83 c6 10          	add    $0x10,%rsi
   24467:	48 ff c0             	inc    %rax
   2446a:	75 e4                	jne    24450 <std::backtrace_rs::symbolize::gimli::callback+0x1e0>
   2446c:	49 81 f9 a8 00 00 00 	cmp    $0xa8,%r9
   24473:	72 69                	jb     244de <std::backtrace_rs::symbolize::gimli::callback+0x26e>
   24475:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2447c:	00 00 00 
   2447f:	90                   	nop
   24480:	48 8b 45 10          	mov    0x10(%rbp),%rax
   24484:	48 8b 4d 28          	mov    0x28(%rbp),%rcx
   24488:	48 89 06             	mov    %rax,(%rsi)
   2448b:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
   2448f:	48 8b 45 48          	mov    0x48(%rbp),%rax
   24493:	48 8b 4d 60          	mov    0x60(%rbp),%rcx
   24497:	48 89 46 10          	mov    %rax,0x10(%rsi)
   2449b:	48 89 4e 18          	mov    %rcx,0x18(%rsi)
   2449f:	48 8b 85 80 00 00 00 	mov    0x80(%rbp),%rax
   244a6:	48 8b 8d 98 00 00 00 	mov    0x98(%rbp),%rcx
   244ad:	48 89 46 20          	mov    %rax,0x20(%rsi)
   244b1:	48 89 4e 28          	mov    %rcx,0x28(%rsi)
   244b5:	48 8b 85 b8 00 00 00 	mov    0xb8(%rbp),%rax
   244bc:	48 8b 8d d0 00 00 00 	mov    0xd0(%rbp),%rcx
   244c3:	48 8d 9d e0 00 00 00 	lea    0xe0(%rbp),%rbx
   244ca:	48 89 46 30          	mov    %rax,0x30(%rsi)
   244ce:	48 89 4e 38          	mov    %rcx,0x38(%rsi)
   244d2:	48 83 c6 40          	add    $0x40,%rsi
   244d6:	48 89 dd             	mov    %rbx,%rbp
   244d9:	48 39 df             	cmp    %rbx,%rdi
   244dc:	75 a2                	jne    24480 <std::backtrace_rs::symbolize::gimli::callback+0x210>
   244de:	48 83 c2 01          	add    $0x1,%rdx
   244e2:	eb 02                	jmp    244e6 <std::backtrace_rs::symbolize::gimli::callback+0x276>
   244e4:	31 d2                	xor    %edx,%edx
   244e6:	49 8b 04 24          	mov    (%r12),%rax
   244ea:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   244ef:	48 89 4c 24 50       	mov    %rcx,0x50(%rsp)
   244f4:	0f 28 44 24 20       	movaps 0x20(%rsp),%xmm0
   244f9:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
   244fe:	4c 89 44 24 58       	mov    %r8,0x58(%rsp)
   24503:	4c 89 6c 24 60       	mov    %r13,0x60(%rsp)
   24508:	48 89 54 24 68       	mov    %rdx,0x68(%rsp)
   2450d:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   24512:	49 8b 76 10          	mov    0x10(%r14),%rsi
   24516:	49 3b 76 08          	cmp    0x8(%r14),%rsi
   2451a:	75 67                	jne    24583 <std::backtrace_rs::symbolize::gimli::callback+0x313>
   2451c:	48 89 f1             	mov    %rsi,%rcx
   2451f:	48 ff c1             	inc    %rcx
   24522:	0f 84 e3 00 00 00    	je     2460b <std::backtrace_rs::symbolize::gimli::callback+0x39b>
   24528:	48 8d 04 36          	lea    (%rsi,%rsi,1),%rax
   2452c:	48 39 c8             	cmp    %rcx,%rax
   2452f:	48 0f 47 c8          	cmova  %rax,%rcx
   24533:	48 83 f9 04          	cmp    $0x4,%rcx
   24537:	b8 04 00 00 00       	mov    $0x4,%eax
   2453c:	48 0f 47 c1          	cmova  %rcx,%rax
   24540:	ba 38 00 00 00       	mov    $0x38,%edx
   24545:	31 c9                	xor    %ecx,%ecx
   24547:	48 f7 e2             	mul    %rdx
   2454a:	48 89 c3             	mov    %rax,%rbx
   2454d:	0f 90 c0             	seto   %al
   24550:	0f 91 c1             	setno  %cl
   24553:	48 c1 e1 03          	shl    $0x3,%rcx
   24557:	48 85 f6             	test   %rsi,%rsi
   2455a:	74 2c                	je     24588 <std::backtrace_rs::symbolize::gimli::callback+0x318>
   2455c:	84 c0                	test   %al,%al
   2455e:	0f 85 a7 00 00 00    	jne    2460b <std::backtrace_rs::symbolize::gimli::callback+0x39b>
   24564:	49 8b 3e             	mov    (%r14),%rdi
   24567:	48 85 ff             	test   %rdi,%rdi
   2456a:	74 20                	je     2458c <std::backtrace_rs::symbolize::gimli::callback+0x31c>
   2456c:	48 6b f6 38          	imul   $0x38,%rsi,%rsi
   24570:	48 85 f6             	test   %rsi,%rsi
   24573:	74 17                	je     2458c <std::backtrace_rs::symbolize::gimli::callback+0x31c>
   24575:	48 89 ca             	mov    %rcx,%rdx
   24578:	48 89 d9             	mov    %rbx,%rcx
   2457b:	ff 15 f7 19 02 00    	callq  *0x219f7(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
   24581:	eb 1a                	jmp    2459d <std::backtrace_rs::symbolize::gimli::callback+0x32d>
   24583:	49 8b 0e             	mov    (%r14),%rcx
   24586:	eb 32                	jmp    245ba <std::backtrace_rs::symbolize::gimli::callback+0x34a>
   24588:	84 c0                	test   %al,%al
   2458a:	75 7f                	jne    2460b <std::backtrace_rs::symbolize::gimli::callback+0x39b>
   2458c:	48 85 db             	test   %rbx,%rbx
   2458f:	74 0f                	je     245a0 <std::backtrace_rs::symbolize::gimli::callback+0x330>
   24591:	48 89 df             	mov    %rbx,%rdi
   24594:	48 89 ce             	mov    %rcx,%rsi
   24597:	ff 15 e3 15 02 00    	callq  *0x215e3(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   2459d:	48 89 c1             	mov    %rax,%rcx
   245a0:	48 85 c9             	test   %rcx,%rcx
   245a3:	74 56                	je     245fb <std::backtrace_rs::symbolize::gimli::callback+0x38b>
   245a5:	49 89 0e             	mov    %rcx,(%r14)
   245a8:	48 c1 eb 03          	shr    $0x3,%rbx
   245ac:	48 89 d8             	mov    %rbx,%rax
   245af:	49 f7 e7             	mul    %r15
   245b2:	49 89 56 08          	mov    %rdx,0x8(%r14)
   245b6:	49 8b 76 10          	mov    0x10(%r14),%rsi
   245ba:	48 6b c6 38          	imul   $0x38,%rsi,%rax
   245be:	48 8b 54 24 70       	mov    0x70(%rsp),%rdx
   245c3:	48 89 54 01 30       	mov    %rdx,0x30(%rcx,%rax,1)
   245c8:	0f 28 44 24 40       	movaps 0x40(%rsp),%xmm0
   245cd:	0f 28 4c 24 50       	movaps 0x50(%rsp),%xmm1
   245d2:	0f 28 54 24 60       	movaps 0x60(%rsp),%xmm2
   245d7:	0f 11 54 01 20       	movups %xmm2,0x20(%rcx,%rax,1)
   245dc:	0f 11 4c 01 10       	movups %xmm1,0x10(%rcx,%rax,1)
   245e1:	0f 11 04 01          	movups %xmm0,(%rcx,%rax,1)
   245e5:	49 83 46 10 01       	addq   $0x1,0x10(%r14)
   245ea:	31 c0                	xor    %eax,%eax
   245ec:	48 83 c4 78          	add    $0x78,%rsp
   245f0:	5b                   	pop    %rbx
   245f1:	41 5c                	pop    %r12
   245f3:	41 5d                	pop    %r13
   245f5:	41 5e                	pop    %r14
   245f7:	41 5f                	pop    %r15
   245f9:	5d                   	pop    %rbp
   245fa:	c3                   	retq   
   245fb:	be 08 00 00 00       	mov    $0x8,%esi
   24600:	48 89 df             	mov    %rbx,%rdi
   24603:	ff 15 17 15 02 00    	callq  *0x21517(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   24609:	0f 0b                	ud2    
   2460b:	ff 15 cf 14 02 00    	callq  *0x214cf(%rip)        # 45ae0 <_GLOBAL_OFFSET_TABLE_+0x158>
   24611:	0f 0b                	ud2    
   24613:	48 8d 15 b6 f5 01 00 	lea    0x1f5b6(%rip),%rdx        # 43bd0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x698>
   2461a:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   24621:	31 f6                	xor    %esi,%esi
   24623:	ff 15 ff 13 02 00    	callq  *0x213ff(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   24629:	0f 0b                	ud2    
   2462b:	be 01 00 00 00       	mov    $0x1,%esi
   24630:	4c 89 ff             	mov    %r15,%rdi
   24633:	ff 15 e7 14 02 00    	callq  *0x214e7(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   24639:	0f 0b                	ud2    
   2463b:	48 89 c3             	mov    %rax,%rbx
   2463e:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   24643:	e8 18 27 fe ff       	callq  6d60 <core::ptr::drop_in_place>
   24648:	eb 17                	jmp    24661 <std::backtrace_rs::symbolize::gimli::callback+0x3f1>
   2464a:	48 89 c3             	mov    %rax,%rbx
   2464d:	49 8b 3f             	mov    (%r15),%rdi
   24650:	49 8b 77 08          	mov    0x8(%r15),%rsi
   24654:	e8 77 53 fe ff       	callq  99d0 <alloc::alloc::box_free>
   24659:	4c 89 ff             	mov    %r15,%rdi
   2465c:	e8 8f 53 fe ff       	callq  99f0 <alloc::alloc::box_free>
   24661:	48 89 df             	mov    %rbx,%rdi
   24664:	e8 e7 09 fe ff       	callq  5050 <_Unwind_Resume@plt>
   24669:	0f 0b                	ud2    
   2466b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000024670 <core::ops::function::FnOnce::call_once{{vtable-shim}}>:
   24670:	48 8b 07             	mov    (%rdi),%rax
   24673:	48 8b 38             	mov    (%rax),%rdi
   24676:	ff 25 7c 14 02 00    	jmpq   *0x2147c(%rip)        # 45af8 <_Unwind_GetTextRelBase@GCC_3.0>
   2467c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000024680 <core::ops::function::FnOnce::call_once{{vtable-shim}}>:
   24680:	48 8b 07             	mov    (%rdi),%rax
   24683:	48 8b 38             	mov    (%rax),%rdi
   24686:	ff 25 ac 17 02 00    	jmpq   *0x217ac(%rip)        # 45e38 <_Unwind_GetDataRelBase@GCC_3.0>
   2468c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000024690 <core::ptr::drop_in_place>:
   24690:	41 57                	push   %r15
   24692:	41 56                	push   %r14
   24694:	53                   	push   %rbx
   24695:	49 89 ff             	mov    %rdi,%r15
   24698:	48 8b 1f             	mov    (%rdi),%rbx
   2469b:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
   2469f:	48 8b 43 48          	mov    0x48(%rbx),%rax
   246a3:	ff 10                	callq  *(%rax)
   246a5:	48 8b 43 48          	mov    0x48(%rbx),%rax
   246a9:	48 8b 70 08          	mov    0x8(%rax),%rsi
   246ad:	48 85 f6             	test   %rsi,%rsi
   246b0:	74 0e                	je     246c0 <core::ptr::drop_in_place+0x30>
   246b2:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
   246b6:	48 8b 50 10          	mov    0x10(%rax),%rdx
   246ba:	ff 15 38 15 02 00    	callq  *0x21538(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   246c0:	49 8b 3f             	mov    (%r15),%rdi
   246c3:	be 50 00 00 00       	mov    $0x50,%esi
   246c8:	ba 08 00 00 00       	mov    $0x8,%edx
   246cd:	5b                   	pop    %rbx
   246ce:	41 5e                	pop    %r14
   246d0:	41 5f                	pop    %r15
   246d2:	ff 25 20 15 02 00    	jmpq   *0x21520(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   246d8:	49 89 c6             	mov    %rax,%r14
   246db:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
   246df:	48 8b 73 48          	mov    0x48(%rbx),%rsi
   246e3:	e8 28 00 00 00       	callq  24710 <alloc::alloc::box_free>
   246e8:	49 8b 3f             	mov    (%r15),%rdi
   246eb:	e8 40 00 00 00       	callq  24730 <alloc::alloc::box_free>
   246f0:	4c 89 f7             	mov    %r14,%rdi
   246f3:	e8 58 09 fe ff       	callq  5050 <_Unwind_Resume@plt>
   246f8:	0f 0b                	ud2    
   246fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000024700 <core::ptr::drop_in_place>:
   24700:	c3                   	retq   
   24701:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   24708:	00 00 00 
   2470b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000024710 <alloc::alloc::box_free>:
   24710:	48 89 f0             	mov    %rsi,%rax
   24713:	48 8b 76 08          	mov    0x8(%rsi),%rsi
   24717:	48 85 f6             	test   %rsi,%rsi
   2471a:	74 0a                	je     24726 <alloc::alloc::box_free+0x16>
   2471c:	48 8b 50 10          	mov    0x10(%rax),%rdx
   24720:	ff 25 d2 14 02 00    	jmpq   *0x214d2(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   24726:	c3                   	retq   
   24727:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2472e:	00 00 

0000000000024730 <alloc::alloc::box_free>:
   24730:	be 50 00 00 00       	mov    $0x50,%esi
   24735:	ba 08 00 00 00       	mov    $0x8,%edx
   2473a:	ff 25 b8 14 02 00    	jmpq   *0x214b8(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>

0000000000024740 <panic_unwind::dwarf::eh::read_encoded_pointer>:
   24740:	55                   	push   %rbp
   24741:	41 57                	push   %r15
   24743:	41 56                	push   %r14
   24745:	53                   	push   %rbx
   24746:	50                   	push   %rax
   24747:	41 89 d6             	mov    %edx,%r14d
   2474a:	b8 01 00 00 00       	mov    $0x1,%eax
   2474f:	41 80 fe ff          	cmp    $0xff,%r14b
   24753:	0f 84 59 01 00 00    	je     248b2 <panic_unwind::dwarf::eh::read_encoded_pointer+0x172>
   24759:	41 80 fe 50          	cmp    $0x50,%r14b
   2475d:	75 1d                	jne    2477c <panic_unwind::dwarf::eh::read_encoded_pointer+0x3c>
   2475f:	48 8b 07             	mov    (%rdi),%rax
   24762:	48 83 c0 07          	add    $0x7,%rax
   24766:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   2476a:	48 89 07             	mov    %rax,(%rdi)
   2476d:	48 8b 10             	mov    (%rax),%rdx
   24770:	48 83 c0 08          	add    $0x8,%rax
   24774:	48 89 07             	mov    %rax,(%rdi)
   24777:	e9 32 01 00 00       	jmpq   248ae <panic_unwind::dwarf::eh::read_encoded_pointer+0x16e>
   2477c:	44 89 f1             	mov    %r14d,%ecx
   2477f:	80 e1 0f             	and    $0xf,%cl
   24782:	80 f9 0c             	cmp    $0xc,%cl
   24785:	0f 87 27 01 00 00    	ja     248b2 <panic_unwind::dwarf::eh::read_encoded_pointer+0x172>
   2478b:	0f b6 c9             	movzbl %cl,%ecx
   2478e:	48 8d 15 83 3e 01 00 	lea    0x13e83(%rip),%rdx        # 38618 <str.6+0x12f8>
   24795:	48 63 0c 8a          	movslq (%rdx,%rcx,4),%rcx
   24799:	48 01 d1             	add    %rdx,%rcx
   2479c:	ff e1                	jmpq   *%rcx
   2479e:	48 8b 2f             	mov    (%rdi),%rbp
   247a1:	4c 8b 7d 00          	mov    0x0(%rbp),%r15
   247a5:	48 83 c5 08          	add    $0x8,%rbp
   247a9:	e9 a7 00 00 00       	jmpq   24855 <panic_unwind::dwarf::eh::read_encoded_pointer+0x115>
   247ae:	48 8b 2f             	mov    (%rdi),%rbp
   247b1:	31 c9                	xor    %ecx,%ecx
   247b3:	45 31 ff             	xor    %r15d,%r15d
   247b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   247bd:	00 00 00 
   247c0:	0f b6 5d 00          	movzbl 0x0(%rbp),%ebx
   247c4:	48 83 c5 01          	add    $0x1,%rbp
   247c8:	89 da                	mov    %ebx,%edx
   247ca:	83 e2 7f             	and    $0x7f,%edx
   247cd:	48 d3 e2             	shl    %cl,%rdx
   247d0:	48 89 2f             	mov    %rbp,(%rdi)
   247d3:	49 09 d7             	or     %rdx,%r15
   247d6:	48 83 c1 07          	add    $0x7,%rcx
   247da:	84 db                	test   %bl,%bl
   247dc:	78 e2                	js     247c0 <panic_unwind::dwarf::eh::read_encoded_pointer+0x80>
   247de:	eb 78                	jmp    24858 <panic_unwind::dwarf::eh::read_encoded_pointer+0x118>
   247e0:	48 8b 2f             	mov    (%rdi),%rbp
   247e3:	44 0f b7 7d 00       	movzwl 0x0(%rbp),%r15d
   247e8:	48 83 c5 02          	add    $0x2,%rbp
   247ec:	eb 67                	jmp    24855 <panic_unwind::dwarf::eh::read_encoded_pointer+0x115>
   247ee:	48 8b 2f             	mov    (%rdi),%rbp
   247f1:	44 8b 7d 00          	mov    0x0(%rbp),%r15d
   247f5:	eb 5a                	jmp    24851 <panic_unwind::dwarf::eh::read_encoded_pointer+0x111>
   247f7:	48 8b 2f             	mov    (%rdi),%rbp
   247fa:	45 31 ff             	xor    %r15d,%r15d
   247fd:	31 c9                	xor    %ecx,%ecx
   247ff:	90                   	nop
   24800:	0f b6 5d 00          	movzbl 0x0(%rbp),%ebx
   24804:	48 83 c5 01          	add    $0x1,%rbp
   24808:	89 da                	mov    %ebx,%edx
   2480a:	83 e2 7f             	and    $0x7f,%edx
   2480d:	48 d3 e2             	shl    %cl,%rdx
   24810:	48 89 2f             	mov    %rbp,(%rdi)
   24813:	49 09 d7             	or     %rdx,%r15
   24816:	83 c1 07             	add    $0x7,%ecx
   24819:	84 db                	test   %bl,%bl
   2481b:	78 e3                	js     24800 <panic_unwind::dwarf::eh::read_encoded_pointer+0xc0>
   2481d:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
   24824:	48 d3 e2             	shl    %cl,%rdx
   24827:	31 ff                	xor    %edi,%edi
   24829:	f6 c3 40             	test   $0x40,%bl
   2482c:	48 0f 44 d7          	cmove  %rdi,%rdx
   24830:	83 f9 40             	cmp    $0x40,%ecx
   24833:	48 0f 43 d7          	cmovae %rdi,%rdx
   24837:	49 09 d7             	or     %rdx,%r15
   2483a:	eb 1c                	jmp    24858 <panic_unwind::dwarf::eh::read_encoded_pointer+0x118>
   2483c:	48 8b 2f             	mov    (%rdi),%rbp
   2483f:	4c 0f bf 7d 00       	movswq 0x0(%rbp),%r15
   24844:	48 83 c5 02          	add    $0x2,%rbp
   24848:	eb 0b                	jmp    24855 <panic_unwind::dwarf::eh::read_encoded_pointer+0x115>
   2484a:	48 8b 2f             	mov    (%rdi),%rbp
   2484d:	4c 63 7d 00          	movslq 0x0(%rbp),%r15
   24851:	48 83 c5 04          	add    $0x4,%rbp
   24855:	48 89 2f             	mov    %rbp,(%rdi)
   24858:	44 89 f1             	mov    %r14d,%ecx
   2485b:	c0 e9 04             	shr    $0x4,%cl
   2485e:	80 e1 07             	and    $0x7,%cl
   24861:	80 f9 04             	cmp    $0x4,%cl
   24864:	77 4c                	ja     248b2 <panic_unwind::dwarf::eh::read_encoded_pointer+0x172>
   24866:	31 d2                	xor    %edx,%edx
   24868:	0f b6 c9             	movzbl %cl,%ecx
   2486b:	48 8d 3d da 3d 01 00 	lea    0x13dda(%rip),%rdi        # 3864c <str.6+0x132c>
   24872:	48 63 0c 8f          	movslq (%rdi,%rcx,4),%rcx
   24876:	48 01 f9             	add    %rdi,%rcx
   24879:	ff e1                	jmpq   *%rcx
   2487b:	48 89 ea             	mov    %rbp,%rdx
   2487e:	eb 23                	jmp    248a3 <panic_unwind::dwarf::eh::read_encoded_pointer+0x163>
   24880:	48 8b 7e 10          	mov    0x10(%rsi),%rdi
   24884:	48 8b 46 18          	mov    0x18(%rsi),%rax
   24888:	eb 08                	jmp    24892 <panic_unwind::dwarf::eh::read_encoded_pointer+0x152>
   2488a:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
   2488e:	48 8b 46 28          	mov    0x28(%rsi),%rax
   24892:	ff 50 18             	callq  *0x18(%rax)
   24895:	48 89 c2             	mov    %rax,%rdx
   24898:	eb 09                	jmp    248a3 <panic_unwind::dwarf::eh::read_encoded_pointer+0x163>
   2489a:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   2489e:	48 85 d2             	test   %rdx,%rdx
   248a1:	74 0f                	je     248b2 <panic_unwind::dwarf::eh::read_encoded_pointer+0x172>
   248a3:	4c 01 fa             	add    %r15,%rdx
   248a6:	45 84 f6             	test   %r14b,%r14b
   248a9:	79 03                	jns    248ae <panic_unwind::dwarf::eh::read_encoded_pointer+0x16e>
   248ab:	48 8b 12             	mov    (%rdx),%rdx
   248ae:	31 c0                	xor    %eax,%eax
   248b0:	eb 00                	jmp    248b2 <panic_unwind::dwarf::eh::read_encoded_pointer+0x172>
   248b2:	48 83 c4 08          	add    $0x8,%rsp
   248b6:	5b                   	pop    %rbx
   248b7:	41 5e                	pop    %r14
   248b9:	41 5f                	pop    %r15
   248bb:	5d                   	pop    %rbp
   248bc:	c3                   	retq   
   248bd:	0f 1f 00             	nopl   (%rax)

00000000000248c0 <__rust_panic_cleanup>:
   248c0:	41 56                	push   %r14
   248c2:	53                   	push   %rbx
   248c3:	50                   	push   %rax
   248c4:	48 b8 54 53 55 52 00 	movabs $0x4d4f5a0052555354,%rax
   248cb:	5a 4f 4d 
   248ce:	48 39 07             	cmp    %rax,(%rdi)
   248d1:	75 26                	jne    248f9 <__rust_panic_cleanup+0x39>
   248d3:	48 8b 5f 40          	mov    0x40(%rdi),%rbx
   248d7:	4c 8b 77 48          	mov    0x48(%rdi),%r14
   248db:	be 50 00 00 00       	mov    $0x50,%esi
   248e0:	ba 08 00 00 00       	mov    $0x8,%edx
   248e5:	ff 15 0d 13 02 00    	callq  *0x2130d(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   248eb:	48 89 d8             	mov    %rbx,%rax
   248ee:	4c 89 f2             	mov    %r14,%rdx
   248f1:	48 83 c4 08          	add    $0x8,%rsp
   248f5:	5b                   	pop    %rbx
   248f6:	41 5e                	pop    %r14
   248f8:	c3                   	retq   
   248f9:	ff 15 61 16 02 00    	callq  *0x21661(%rip)        # 45f60 <_Unwind_DeleteException@GCC_3.0>
   248ff:	ff 15 6b 15 02 00    	callq  *0x2156b(%rip)        # 45e70 <_GLOBAL_OFFSET_TABLE_+0x4e8>
   24905:	0f 0b                	ud2    
   24907:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2490e:	00 00 

0000000000024910 <__rust_start_panic>:
   24910:	41 56                	push   %r14
   24912:	53                   	push   %rbx
   24913:	48 83 ec 38          	sub    $0x38,%rsp
   24917:	48 8b 07             	mov    (%rdi),%rax
   2491a:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
   2491e:	48 89 c7             	mov    %rax,%rdi
   24921:	ff 51 18             	callq  *0x18(%rcx)
   24924:	48 89 c3             	mov    %rax,%rbx
   24927:	49 89 d6             	mov    %rdx,%r14
   2492a:	0f 57 c0             	xorps  %xmm0,%xmm0
   2492d:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   24932:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   24937:	0f 29 04 24          	movaps %xmm0,(%rsp)
   2493b:	bf 50 00 00 00       	mov    $0x50,%edi
   24940:	be 08 00 00 00       	mov    $0x8,%esi
   24945:	ff 15 35 12 02 00    	callq  *0x21235(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   2494b:	48 85 c0             	test   %rax,%rax
   2494e:	74 4a                	je     2499a <__rust_start_panic+0x8a>
   24950:	48 b9 54 53 55 52 00 	movabs $0x4d4f5a0052555354,%rcx
   24957:	5a 4f 4d 
   2495a:	48 89 08             	mov    %rcx,(%rax)
   2495d:	48 8d 0d 4c 00 00 00 	lea    0x4c(%rip),%rcx        # 249b0 <panic_unwind::real_imp::panic::exception_cleanup>
   24964:	48 89 48 08          	mov    %rcx,0x8(%rax)
   24968:	0f 28 04 24          	movaps (%rsp),%xmm0
   2496c:	0f 28 4c 24 10       	movaps 0x10(%rsp),%xmm1
   24971:	0f 28 54 24 20       	movaps 0x20(%rsp),%xmm2
   24976:	0f 11 40 10          	movups %xmm0,0x10(%rax)
   2497a:	0f 11 48 20          	movups %xmm1,0x20(%rax)
   2497e:	0f 11 50 30          	movups %xmm2,0x30(%rax)
   24982:	48 89 58 40          	mov    %rbx,0x40(%rax)
   24986:	4c 89 70 48          	mov    %r14,0x48(%rax)
   2498a:	48 89 c7             	mov    %rax,%rdi
   2498d:	48 83 c4 38          	add    $0x38,%rsp
   24991:	5b                   	pop    %rbx
   24992:	41 5e                	pop    %r14
   24994:	ff 25 6e 11 02 00    	jmpq   *0x2116e(%rip)        # 45b08 <_Unwind_RaiseException@GCC_3.0>
   2499a:	bf 50 00 00 00       	mov    $0x50,%edi
   2499f:	be 08 00 00 00       	mov    $0x8,%esi
   249a4:	ff 15 76 11 02 00    	callq  *0x21176(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   249aa:	0f 0b                	ud2    
   249ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000249b0 <panic_unwind::real_imp::panic::exception_cleanup>:
   249b0:	50                   	push   %rax
   249b1:	48 89 34 24          	mov    %rsi,(%rsp)
   249b5:	48 89 e7             	mov    %rsp,%rdi
   249b8:	e8 d3 fc ff ff       	callq  24690 <core::ptr::drop_in_place>
   249bd:	ff 15 ad 10 02 00    	callq  *0x210ad(%rip)        # 45a70 <_GLOBAL_OFFSET_TABLE_+0xe8>
   249c3:	0f 0b                	ud2    
   249c5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   249cc:	00 00 00 
   249cf:	90                   	nop

00000000000249d0 <panic_unwind::real_imp::find_eh_action::{{closure}}>:
   249d0:	48 8b 07             	mov    (%rdi),%rax
   249d3:	48 8b 38             	mov    (%rax),%rdi
   249d6:	ff 25 1c 11 02 00    	jmpq   *0x2111c(%rip)        # 45af8 <_Unwind_GetTextRelBase@GCC_3.0>
   249dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000249e0 <panic_unwind::real_imp::find_eh_action::{{closure}}>:
   249e0:	48 8b 07             	mov    (%rdi),%rax
   249e3:	48 8b 38             	mov    (%rax),%rdi
   249e6:	ff 25 4c 14 02 00    	jmpq   *0x2144c(%rip)        # 45e38 <_Unwind_GetDataRelBase@GCC_3.0>
   249ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000249f0 <rust_eh_personality>:
   249f0:	55                   	push   %rbp
   249f1:	41 57                	push   %r15
   249f3:	41 56                	push   %r14
   249f5:	41 55                	push   %r13
   249f7:	41 54                	push   %r12
   249f9:	53                   	push   %rbx
   249fa:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
   24a01:	41 bf 03 00 00 00    	mov    $0x3,%r15d
   24a07:	83 ff 01             	cmp    $0x1,%edi
   24a0a:	0f 85 1c 03 00 00    	jne    24d2c <rust_eh_personality+0x33c>
   24a10:	4d 89 c6             	mov    %r8,%r14
   24a13:	49 89 cd             	mov    %rcx,%r13
   24a16:	41 89 f4             	mov    %esi,%r12d
   24a19:	4c 89 44 24 50       	mov    %r8,0x50(%rsp)
   24a1e:	4c 89 c7             	mov    %r8,%rdi
   24a21:	ff 15 39 12 02 00    	callq  *0x21239(%rip)        # 45c60 <_Unwind_GetLanguageSpecificData@GCC_3.0>
   24a27:	48 89 c3             	mov    %rax,%rbx
   24a2a:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%rsp)
   24a31:	00 
   24a32:	48 8d 74 24 14       	lea    0x14(%rsp),%rsi
   24a37:	4c 89 f7             	mov    %r14,%rdi
   24a3a:	ff 15 e8 11 02 00    	callq  *0x211e8(%rip)        # 45c28 <_Unwind_GetIPInfo@GCC_4.2.0>
   24a40:	48 89 c5             	mov    %rax,%rbp
   24a43:	83 7c 24 14 01       	cmpl   $0x1,0x14(%rsp)
   24a48:	48 83 dd 00          	sbb    $0x0,%rbp
   24a4c:	4c 89 f7             	mov    %r14,%rdi
   24a4f:	ff 15 73 10 02 00    	callq  *0x21073(%rip)        # 45ac8 <_Unwind_GetRegionStart@GCC_3.0>
   24a55:	48 8d 4c 24 50       	lea    0x50(%rsp),%rcx
   24a5a:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
   24a5f:	48 89 4c 24 60       	mov    %rcx,0x60(%rsp)
   24a64:	48 89 6c 24 68       	mov    %rbp,0x68(%rsp)
   24a69:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   24a6e:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   24a73:	48 8d 44 24 58       	lea    0x58(%rsp),%rax
   24a78:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   24a7d:	48 8d 05 74 fc 01 00 	lea    0x1fc74(%rip),%rax        # 446f8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x11c0>
   24a84:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   24a8b:	00 
   24a8c:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
   24a91:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
   24a98:	00 
   24a99:	48 8d 05 88 fc 01 00 	lea    0x1fc88(%rip),%rax        # 44728 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x11f0>
   24aa0:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
   24aa7:	00 
   24aa8:	48 85 db             	test   %rbx,%rbx
   24aab:	74 3a                	je     24ae7 <rust_eh_personality+0xf7>
   24aad:	8a 03                	mov    (%rbx),%al
   24aaf:	48 83 c3 01          	add    $0x1,%rbx
   24ab3:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   24ab8:	3c ff                	cmp    $0xff,%al
   24aba:	74 3c                	je     24af8 <rust_eh_personality+0x108>
   24abc:	0f b6 d0             	movzbl %al,%edx
   24abf:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   24ac4:	48 8d 74 24 68       	lea    0x68(%rsp),%rsi
   24ac9:	e8 72 fc ff ff       	callq  24740 <panic_unwind::dwarf::eh::read_encoded_pointer>
   24ace:	48 85 c0             	test   %rax,%rax
   24ad1:	74 2c                	je     24aff <rust_eh_personality+0x10f>
   24ad3:	b9 04 00 00 00       	mov    $0x4,%ecx
   24ad8:	48 83 f9 04          	cmp    $0x4,%rcx
   24adc:	0f 85 ea 01 00 00    	jne    24ccc <rust_eh_personality+0x2dc>
   24ae2:	e9 45 02 00 00       	jmpq   24d2c <rust_eh_personality+0x33c>
   24ae7:	31 c9                	xor    %ecx,%ecx
   24ae9:	48 83 f9 04          	cmp    $0x4,%rcx
   24aed:	0f 85 d9 01 00 00    	jne    24ccc <rust_eh_personality+0x2dc>
   24af3:	e9 34 02 00 00       	jmpq   24d2c <rust_eh_personality+0x33c>
   24af8:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   24afd:	eb 05                	jmp    24b04 <rust_eh_personality+0x114>
   24aff:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   24b04:	8a 03                	mov    (%rbx),%al
   24b06:	48 83 c3 01          	add    $0x1,%rbx
   24b0a:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   24b0f:	3c ff                	cmp    $0xff,%al
   24b11:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
   24b16:	0f 84 17 00 00 00    	je     24b33 <rust_eh_personality+0x143>
   24b1c:	0f 1f 40 00          	nopl   0x0(%rax)
   24b20:	48 8d 43 01          	lea    0x1(%rbx),%rax
   24b24:	80 3b 00             	cmpb   $0x0,(%rbx)
   24b27:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   24b2c:	48 89 c3             	mov    %rax,%rbx
   24b2f:	78 ef                	js     24b20 <rust_eh_personality+0x130>
   24b31:	eb 03                	jmp    24b36 <rust_eh_personality+0x146>
   24b33:	48 89 d8             	mov    %rbx,%rax
   24b36:	44 89 64 24 10       	mov    %r12d,0x10(%rsp)
   24b3b:	4c 89 6c 24 30       	mov    %r13,0x30(%rsp)
   24b40:	4c 89 74 24 38       	mov    %r14,0x38(%rsp)
   24b45:	8a 10                	mov    (%rax),%dl
   24b47:	48 83 c0 01          	add    $0x1,%rax
   24b4b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   24b50:	31 c9                	xor    %ecx,%ecx
   24b52:	45 31 ff             	xor    %r15d,%r15d
   24b55:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   24b5c:	00 00 00 
   24b5f:	90                   	nop
   24b60:	0f b6 30             	movzbl (%rax),%esi
   24b63:	48 83 c0 01          	add    $0x1,%rax
   24b67:	89 f7                	mov    %esi,%edi
   24b69:	83 e7 7f             	and    $0x7f,%edi
   24b6c:	48 d3 e7             	shl    %cl,%rdi
   24b6f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   24b74:	49 09 ff             	or     %rdi,%r15
   24b77:	48 83 c1 07          	add    $0x7,%rcx
   24b7b:	40 84 f6             	test   %sil,%sil
   24b7e:	78 e0                	js     24b60 <rust_eh_personality+0x170>
   24b80:	49 01 c7             	add    %rax,%r15
   24b83:	0f b6 ca             	movzbl %dl,%ecx
   24b86:	89 4c 24 24          	mov    %ecx,0x24(%rsp)
   24b8a:	4c 8d 6c 24 68       	lea    0x68(%rsp),%r13
   24b8f:	48 89 6c 24 48       	mov    %rbp,0x48(%rsp)
   24b94:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   24b9b:	00 00 00 
   24b9e:	66 90                	xchg   %ax,%ax
   24ba0:	4c 39 f8             	cmp    %r15,%rax
   24ba3:	0f 83 d3 00 00 00    	jae    24c7c <rust_eh_personality+0x28c>
   24ba9:	48 8d 5c 24 08       	lea    0x8(%rsp),%rbx
   24bae:	48 89 df             	mov    %rbx,%rdi
   24bb1:	4c 89 ee             	mov    %r13,%rsi
   24bb4:	8b 6c 24 24          	mov    0x24(%rsp),%ebp
   24bb8:	89 ea                	mov    %ebp,%edx
   24bba:	e8 81 fb ff ff       	callq  24740 <panic_unwind::dwarf::eh::read_encoded_pointer>
   24bbf:	48 85 c0             	test   %rax,%rax
   24bc2:	0f 85 d6 00 00 00    	jne    24c9e <rust_eh_personality+0x2ae>
   24bc8:	49 89 d4             	mov    %rdx,%r12
   24bcb:	b8 04 00 00 00       	mov    $0x4,%eax
   24bd0:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   24bd5:	48 89 df             	mov    %rbx,%rdi
   24bd8:	4c 89 ee             	mov    %r13,%rsi
   24bdb:	89 ea                	mov    %ebp,%edx
   24bdd:	e8 5e fb ff ff       	callq  24740 <panic_unwind::dwarf::eh::read_encoded_pointer>
   24be2:	48 85 c0             	test   %rax,%rax
   24be5:	0f 85 c1 00 00 00    	jne    24cac <rust_eh_personality+0x2bc>
   24beb:	48 89 df             	mov    %rbx,%rdi
   24bee:	48 89 d3             	mov    %rdx,%rbx
   24bf1:	4d 89 ee             	mov    %r13,%r14
   24bf4:	4c 89 ee             	mov    %r13,%rsi
   24bf7:	89 ea                	mov    %ebp,%edx
   24bf9:	e8 42 fb ff ff       	callq  24740 <panic_unwind::dwarf::eh::read_encoded_pointer>
   24bfe:	48 85 c0             	test   %rax,%rax
   24c01:	0f 85 a5 00 00 00    	jne    24cac <rust_eh_personality+0x2bc>
   24c07:	49 89 d8             	mov    %rbx,%r8
   24c0a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   24c0f:	31 c9                	xor    %ecx,%ecx
   24c11:	31 db                	xor    %ebx,%ebx
   24c13:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   24c1a:	00 00 00 
   24c1d:	0f 1f 00             	nopl   (%rax)
   24c20:	0f b6 28             	movzbl (%rax),%ebp
   24c23:	48 83 c0 01          	add    $0x1,%rax
   24c27:	89 ef                	mov    %ebp,%edi
   24c29:	83 e7 7f             	and    $0x7f,%edi
   24c2c:	48 d3 e7             	shl    %cl,%rdi
   24c2f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   24c34:	48 09 fb             	or     %rdi,%rbx
   24c37:	48 83 c1 07          	add    $0x7,%rcx
   24c3b:	40 84 ed             	test   %bpl,%bpl
   24c3e:	78 e0                	js     24c20 <rust_eh_personality+0x230>
   24c40:	4c 03 64 24 40       	add    0x40(%rsp),%r12
   24c45:	48 8b 6c 24 48       	mov    0x48(%rsp),%rbp
   24c4a:	4c 39 e5             	cmp    %r12,%rbp
   24c4d:	72 2d                	jb     24c7c <rust_eh_personality+0x28c>
   24c4f:	4d 89 f5             	mov    %r14,%r13
   24c52:	4d 01 e0             	add    %r12,%r8
   24c55:	4c 39 c5             	cmp    %r8,%rbp
   24c58:	0f 83 42 ff ff ff    	jae    24ba0 <rust_eh_personality+0x1b0>
   24c5e:	48 85 d2             	test   %rdx,%rdx
   24c61:	74 42                	je     24ca5 <rust_eh_personality+0x2b5>
   24c63:	48 01 54 24 28       	add    %rdx,0x28(%rsp)
   24c68:	48 83 fb 01          	cmp    $0x1,%rbx
   24c6c:	b8 02 00 00 00       	mov    $0x2,%eax
   24c71:	48 83 d8 00          	sbb    $0x0,%rax
   24c75:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   24c7a:	eb 30                	jmp    24cac <rust_eh_personality+0x2bc>
   24c7c:	31 c9                	xor    %ecx,%ecx
   24c7e:	4c 8b 74 24 38       	mov    0x38(%rsp),%r14
   24c83:	4c 8b 6c 24 30       	mov    0x30(%rsp),%r13
   24c88:	41 bf 03 00 00 00    	mov    $0x3,%r15d
   24c8e:	44 8b 64 24 10       	mov    0x10(%rsp),%r12d
   24c93:	48 83 f9 04          	cmp    $0x4,%rcx
   24c97:	75 33                	jne    24ccc <rust_eh_personality+0x2dc>
   24c99:	e9 8e 00 00 00       	jmpq   24d2c <rust_eh_personality+0x33c>
   24c9e:	b8 04 00 00 00       	mov    $0x4,%eax
   24ca3:	eb 02                	jmp    24ca7 <rust_eh_personality+0x2b7>
   24ca5:	31 c0                	xor    %eax,%eax
   24ca7:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   24cac:	4c 8b 74 24 38       	mov    0x38(%rsp),%r14
   24cb1:	4c 8b 6c 24 30       	mov    0x30(%rsp),%r13
   24cb6:	41 bf 03 00 00 00    	mov    $0x3,%r15d
   24cbc:	44 8b 64 24 10       	mov    0x10(%rsp),%r12d
   24cc1:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   24cc6:	48 83 f9 04          	cmp    $0x4,%rcx
   24cca:	74 60                	je     24d2c <rust_eh_personality+0x33c>
   24ccc:	41 f6 c4 01          	test   $0x1,%r12b
   24cd0:	75 1d                	jne    24cef <rust_eh_personality+0x2ff>
   24cd2:	48 8d 41 ff          	lea    -0x1(%rcx),%rax
   24cd6:	48 83 f8 02          	cmp    $0x2,%rax
   24cda:	72 1f                	jb     24cfb <rust_eh_personality+0x30b>
   24cdc:	41 bf 02 00 00 00    	mov    $0x2,%r15d
   24ce2:	48 85 c9             	test   %rcx,%rcx
   24ce5:	75 45                	jne    24d2c <rust_eh_personality+0x33c>
   24ce7:	41 bf 08 00 00 00    	mov    $0x8,%r15d
   24ced:	eb 3d                	jmp    24d2c <rust_eh_personality+0x33c>
   24cef:	48 8d 05 6a 39 01 00 	lea    0x1396a(%rip),%rax        # 38660 <str.6+0x1340>
   24cf6:	8b 04 88             	mov    (%rax,%rcx,4),%eax
   24cf9:	eb 34                	jmp    24d2f <rust_eh_personality+0x33f>
   24cfb:	48 8b 1d 46 11 02 00 	mov    0x21146(%rip),%rbx        # 45e48 <_Unwind_SetGR@GCC_3.0>
   24d02:	4c 89 f7             	mov    %r14,%rdi
   24d05:	31 f6                	xor    %esi,%esi
   24d07:	4c 89 ea             	mov    %r13,%rdx
   24d0a:	ff d3                	callq  *%rbx
   24d0c:	4c 89 f7             	mov    %r14,%rdi
   24d0f:	be 01 00 00 00       	mov    $0x1,%esi
   24d14:	31 d2                	xor    %edx,%edx
   24d16:	ff d3                	callq  *%rbx
   24d18:	4c 89 f7             	mov    %r14,%rdi
   24d1b:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
   24d20:	ff 15 c2 12 02 00    	callq  *0x212c2(%rip)        # 45fe8 <_Unwind_SetIP@GCC_3.0>
   24d26:	41 bf 07 00 00 00    	mov    $0x7,%r15d
   24d2c:	44 89 f8             	mov    %r15d,%eax
   24d2f:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
   24d36:	5b                   	pop    %rbx
   24d37:	41 5c                	pop    %r12
   24d39:	41 5d                	pop    %r13
   24d3b:	41 5e                	pop    %r14
   24d3d:	41 5f                	pop    %r15
   24d3f:	5d                   	pop    %rbp
   24d40:	c3                   	retq   
   24d41:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   24d48:	00 00 00 
   24d4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000024d50 <miniz_oxide::inflate::core::DecompressorOxide::new>:
   24d50:	53                   	push   %rbx
   24d51:	48 89 fb             	mov    %rdi,%rbx
   24d54:	ba ea 2a 00 00       	mov    $0x2aea,%edx
   24d59:	31 f6                	xor    %esi,%esi
   24d5b:	ff 15 a7 0e 02 00    	callq  *0x20ea7(%rip)        # 45c08 <memset@GLIBC_2.2.5>
   24d61:	48 89 d8             	mov    %rbx,%rax
   24d64:	5b                   	pop    %rbx
   24d65:	c3                   	retq   
   24d66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   24d6d:	00 00 00 

0000000000024d70 <miniz_oxide::inflate::core::init_tree>:
   24d70:	55                   	push   %rbp
   24d71:	41 57                	push   %r15
   24d73:	41 56                	push   %r14
   24d75:	41 55                	push   %r13
   24d77:	41 54                	push   %r12
   24d79:	53                   	push   %rbx
   24d7a:	48 81 ec e8 00 00 00 	sub    $0xe8,%rsp
   24d81:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
   24d86:	49 89 ff             	mov    %rdi,%r15
   24d89:	8b 7f 1c             	mov    0x1c(%rdi),%edi
   24d8c:	48 83 ff 02          	cmp    $0x2,%rdi
   24d90:	0f 87 87 05 00 00    	ja     2531d <miniz_oxide::inflate::core::init_tree+0x5ad>
   24d96:	49 8d 87 bc 0c 00 00 	lea    0xcbc(%r15),%rax
   24d9d:	48 89 84 24 d8 00 00 	mov    %rax,0xd8(%rsp)
   24da4:	00 
   24da5:	49 8d 47 3c          	lea    0x3c(%r15),%rax
   24da9:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
   24db0:	00 
   24db1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   24db8:	00 00 00 
   24dbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   24dc0:	4c 69 f7 a0 0d 00 00 	imul   $0xda0,%rdi,%r14
   24dc7:	4b 8d 1c 37          	lea    (%r15,%r14,1),%rbx
   24dcb:	48 83 c3 3c          	add    $0x3c,%rbx
   24dcf:	45 8b 6c bf 30       	mov    0x30(%r15,%rdi,4),%r13d
   24dd4:	0f 57 c0             	xorps  %xmm0,%xmm0
   24dd7:	0f 29 84 24 c0 00 00 	movaps %xmm0,0xc0(%rsp)
   24dde:	00 
   24ddf:	0f 29 84 24 b0 00 00 	movaps %xmm0,0xb0(%rsp)
   24de6:	00 
   24de7:	0f 29 84 24 a0 00 00 	movaps %xmm0,0xa0(%rsp)
   24dee:	00 
   24def:	0f 29 84 24 90 00 00 	movaps %xmm0,0x90(%rsp)
   24df6:	00 
   24df7:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
   24dfc:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
   24e01:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   24e06:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
   24e0b:	c7 84 24 80 00 00 00 	movl   $0x0,0x80(%rsp)
   24e12:	00 00 00 00 
   24e16:	ba 80 0c 00 00       	mov    $0xc80,%edx
   24e1b:	48 89 df             	mov    %rbx,%rdi
   24e1e:	31 f6                	xor    %esi,%esi
   24e20:	ff 15 e2 0d 02 00    	callq  *0x20de2(%rip)        # 45c08 <memset@GLIBC_2.2.5>
   24e26:	49 81 fd 21 01 00 00 	cmp    $0x121,%r13
   24e2d:	0f 83 a4 05 00 00    	jae    253d7 <miniz_oxide::inflate::core::init_tree+0x667>
   24e33:	45 85 ed             	test   %r13d,%r13d
   24e36:	48 89 9c 24 e0 00 00 	mov    %rbx,0xe0(%rsp)
   24e3d:	00 
   24e3e:	0f 84 cc 00 00 00    	je     24f10 <miniz_oxide::inflate::core::init_tree+0x1a0>
   24e44:	48 8b 84 24 d8 00 00 	mov    0xd8(%rsp),%rax
   24e4b:	00 
   24e4c:	4c 01 f0             	add    %r14,%rax
   24e4f:	31 c9                	xor    %ecx,%ecx
   24e51:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   24e58:	00 00 00 
   24e5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   24e60:	0f b6 3c 08          	movzbl (%rax,%rcx,1),%edi
   24e64:	48 83 ff 0f          	cmp    $0xf,%rdi
   24e68:	0f 87 03 05 00 00    	ja     25371 <miniz_oxide::inflate::core::init_tree+0x601>
   24e6e:	83 84 bc 90 00 00 00 	addl   $0x1,0x90(%rsp,%rdi,4)
   24e75:	01 
   24e76:	48 83 c1 01          	add    $0x1,%rcx
   24e7a:	49 39 cd             	cmp    %rcx,%r13
   24e7d:	75 e1                	jne    24e60 <miniz_oxide::inflate::core::init_tree+0xf0>
   24e7f:	44 8b 94 24 94 00 00 	mov    0x94(%rsp),%r10d
   24e86:	00 
   24e87:	44 8b 8c 24 98 00 00 	mov    0x98(%rsp),%r9d
   24e8e:	00 
   24e8f:	44 8b 84 24 9c 00 00 	mov    0x9c(%rsp),%r8d
   24e96:	00 
   24e97:	44 8b a4 24 a0 00 00 	mov    0xa0(%rsp),%r12d
   24e9e:	00 
   24e9f:	8b b4 24 a4 00 00 00 	mov    0xa4(%rsp),%esi
   24ea6:	8b 94 24 a8 00 00 00 	mov    0xa8(%rsp),%edx
   24ead:	8b 84 24 ac 00 00 00 	mov    0xac(%rsp),%eax
   24eb4:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   24eb9:	8b 84 24 b0 00 00 00 	mov    0xb0(%rsp),%eax
   24ec0:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   24ec5:	8b 84 24 b4 00 00 00 	mov    0xb4(%rsp),%eax
   24ecc:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   24ed1:	8b 84 24 b8 00 00 00 	mov    0xb8(%rsp),%eax
   24ed8:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   24edd:	8b 8c 24 bc 00 00 00 	mov    0xbc(%rsp),%ecx
   24ee4:	8b 84 24 c0 00 00 00 	mov    0xc0(%rsp),%eax
   24eeb:	8b 9c 24 c4 00 00 00 	mov    0xc4(%rsp),%ebx
   24ef2:	8b bc 24 c8 00 00 00 	mov    0xc8(%rsp),%edi
   24ef9:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
   24efe:	8b bc 24 cc 00 00 00 	mov    0xcc(%rsp),%edi
   24f05:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
   24f0a:	e9 41 00 00 00       	jmpq   24f50 <miniz_oxide::inflate::core::init_tree+0x1e0>
   24f0f:	90                   	nop
   24f10:	31 c0                	xor    %eax,%eax
   24f12:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   24f17:	31 c0                	xor    %eax,%eax
   24f19:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   24f1e:	31 db                	xor    %ebx,%ebx
   24f20:	31 c0                	xor    %eax,%eax
   24f22:	31 c9                	xor    %ecx,%ecx
   24f24:	31 d2                	xor    %edx,%edx
   24f26:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   24f2b:	31 d2                	xor    %edx,%edx
   24f2d:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   24f32:	31 d2                	xor    %edx,%edx
   24f34:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   24f39:	31 d2                	xor    %edx,%edx
   24f3b:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   24f40:	31 d2                	xor    %edx,%edx
   24f42:	31 f6                	xor    %esi,%esi
   24f44:	45 31 e4             	xor    %r12d,%r12d
   24f47:	45 31 c0             	xor    %r8d,%r8d
   24f4a:	45 31 c9             	xor    %r9d,%r9d
   24f4d:	45 31 d2             	xor    %r10d,%r10d
   24f50:	47 8d 1c 12          	lea    (%r10,%r10,1),%r11d
   24f54:	44 89 5c 24 48       	mov    %r11d,0x48(%rsp)
   24f59:	43 8d 3c 51          	lea    (%r9,%r10,2),%edi
   24f5d:	8d 2c 3f             	lea    (%rdi,%rdi,1),%ebp
   24f60:	89 6c 24 4c          	mov    %ebp,0x4c(%rsp)
   24f64:	41 8d 3c 78          	lea    (%r8,%rdi,2),%edi
   24f68:	8d 2c 3f             	lea    (%rdi,%rdi,1),%ebp
   24f6b:	89 6c 24 50          	mov    %ebp,0x50(%rsp)
   24f6f:	41 8d 3c 7c          	lea    (%r12,%rdi,2),%edi
   24f73:	8d 2c 3f             	lea    (%rdi,%rdi,1),%ebp
   24f76:	89 6c 24 54          	mov    %ebp,0x54(%rsp)
   24f7a:	8d 3c 7e             	lea    (%rsi,%rdi,2),%edi
   24f7d:	8d 2c 3f             	lea    (%rdi,%rdi,1),%ebp
   24f80:	89 6c 24 58          	mov    %ebp,0x58(%rsp)
   24f84:	8d 3c 7a             	lea    (%rdx,%rdi,2),%edi
   24f87:	8d 2c 3f             	lea    (%rdi,%rdi,1),%ebp
   24f8a:	89 6c 24 5c          	mov    %ebp,0x5c(%rsp)
   24f8e:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
   24f93:	8d 7c 7d 00          	lea    0x0(%rbp,%rdi,2),%edi
   24f97:	8d 2c 3f             	lea    (%rdi,%rdi,1),%ebp
   24f9a:	89 6c 24 60          	mov    %ebp,0x60(%rsp)
   24f9e:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
   24fa3:	8d 7c 7d 00          	lea    0x0(%rbp,%rdi,2),%edi
   24fa7:	8d 2c 3f             	lea    (%rdi,%rdi,1),%ebp
   24faa:	89 6c 24 64          	mov    %ebp,0x64(%rsp)
   24fae:	48 8b 6c 24 18       	mov    0x18(%rsp),%rbp
   24fb3:	8d 7c 7d 00          	lea    0x0(%rbp,%rdi,2),%edi
   24fb7:	8d 2c 3f             	lea    (%rdi,%rdi,1),%ebp
   24fba:	89 6c 24 68          	mov    %ebp,0x68(%rsp)
   24fbe:	48 8b 6c 24 20       	mov    0x20(%rsp),%rbp
   24fc3:	8d 7c 7d 00          	lea    0x0(%rbp,%rdi,2),%edi
   24fc7:	8d 2c 3f             	lea    (%rdi,%rdi,1),%ebp
   24fca:	89 6c 24 6c          	mov    %ebp,0x6c(%rsp)
   24fce:	49 89 cb             	mov    %rcx,%r11
   24fd1:	8d 3c 79             	lea    (%rcx,%rdi,2),%edi
   24fd4:	8d 2c 3f             	lea    (%rdi,%rdi,1),%ebp
   24fd7:	89 6c 24 70          	mov    %ebp,0x70(%rsp)
   24fdb:	48 89 c1             	mov    %rax,%rcx
   24fde:	8d 3c 78             	lea    (%rax,%rdi,2),%edi
   24fe1:	8d 2c 3f             	lea    (%rdi,%rdi,1),%ebp
   24fe4:	89 6c 24 74          	mov    %ebp,0x74(%rsp)
   24fe8:	48 89 d8             	mov    %rbx,%rax
   24feb:	8d 3c 7b             	lea    (%rbx,%rdi,2),%edi
   24fee:	8d 2c 3f             	lea    (%rdi,%rdi,1),%ebp
   24ff1:	89 6c 24 78          	mov    %ebp,0x78(%rsp)
   24ff5:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
   24ffa:	8d 3c 7b             	lea    (%rbx,%rdi,2),%edi
   24ffd:	8d 2c 3f             	lea    (%rdi,%rdi,1),%ebp
   25000:	89 6c 24 7c          	mov    %ebp,0x7c(%rsp)
   25004:	48 8b 6c 24 38       	mov    0x38(%rsp),%rbp
   25009:	8d 7c 7d 00          	lea    0x0(%rbp,%rdi,2),%edi
   2500d:	01 ff                	add    %edi,%edi
   2500f:	89 bc 24 80 00 00 00 	mov    %edi,0x80(%rsp)
   25016:	81 ff 00 00 01 00    	cmp    $0x10000,%edi
   2501c:	74 3f                	je     2505d <miniz_oxide::inflate::core::init_tree+0x2ed>
   2501e:	45 01 d1             	add    %r10d,%r9d
   25021:	45 01 c8             	add    %r9d,%r8d
   25024:	45 01 c4             	add    %r8d,%r12d
   25027:	44 01 e6             	add    %r12d,%esi
   2502a:	01 f2                	add    %esi,%edx
   2502c:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   25031:	01 d6                	add    %edx,%esi
   25033:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   25038:	01 f2                	add    %esi,%edx
   2503a:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   2503f:	01 d6                	add    %edx,%esi
   25041:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   25046:	01 f2                	add    %esi,%edx
   25048:	41 01 d3             	add    %edx,%r11d
   2504b:	44 01 d9             	add    %r11d,%ecx
   2504e:	01 c8                	add    %ecx,%eax
   25050:	01 c3                	add    %eax,%ebx
   25052:	01 dd                	add    %ebx,%ebp
   25054:	83 fd 01             	cmp    $0x1,%ebp
   25057:	0f 87 d4 02 00 00    	ja     25331 <miniz_oxide::inflate::core::init_tree+0x5c1>
   2505d:	45 85 ed             	test   %r13d,%r13d
   25060:	0f 84 9a 02 00 00    	je     25300 <miniz_oxide::inflate::core::init_tree+0x590>
   25066:	48 8b 84 24 d0 00 00 	mov    0xd0(%rsp),%rax
   2506d:	00 
   2506e:	4e 8d 1c 30          	lea    (%rax,%r14,1),%r11
   25072:	66 41 b8 ff ff       	mov    $0xffff,%r8w
   25077:	45 31 c9             	xor    %r9d,%r9d
   2507a:	49 81 f9 20 01 00 00 	cmp    $0x120,%r9
   25081:	bf 20 01 00 00       	mov    $0x120,%edi
   25086:	49 0f 47 f9          	cmova  %r9,%rdi
   2508a:	e9 0a 00 00 00       	jmpq   25099 <miniz_oxide::inflate::core::init_tree+0x329>
   2508f:	90                   	nop
   25090:	4d 39 e9             	cmp    %r13,%r9
   25093:	0f 83 67 02 00 00    	jae    25300 <miniz_oxide::inflate::core::init_tree+0x590>
   25099:	49 39 f9             	cmp    %rdi,%r9
   2509c:	0f 84 e3 02 00 00    	je     25385 <miniz_oxide::inflate::core::init_tree+0x615>
   250a2:	4d 89 cc             	mov    %r9,%r12
   250a5:	49 83 c1 01          	add    $0x1,%r9
   250a9:	4f 8d 14 37          	lea    (%r15,%r14,1),%r10
   250ad:	43 0f b6 b4 14 bc 0c 	movzbl 0xcbc(%r12,%r10,1),%esi
   250b4:	00 00 
   250b6:	66 85 f6             	test   %si,%si
   250b9:	0f 84 d1 ff ff ff    	je     25090 <miniz_oxide::inflate::core::init_tree+0x320>
   250bf:	0f b7 ce             	movzwl %si,%ecx
   250c2:	80 f9 10             	cmp    $0x10,%cl
   250c5:	0f 87 ce 02 00 00    	ja     25399 <miniz_oxide::inflate::core::init_tree+0x629>
   250cb:	8b 5c 8c 40          	mov    0x40(%rsp,%rcx,4),%ebx
   250cf:	8d 43 01             	lea    0x1(%rbx),%eax
   250d2:	89 44 8c 40          	mov    %eax,0x40(%rsp,%rcx,4)
   250d6:	8d 51 ff             	lea    -0x1(%rcx),%edx
   250d9:	89 c8                	mov    %ecx,%eax
   250db:	24 03                	and    $0x3,%al
   250dd:	31 ed                	xor    %ebp,%ebp
   250df:	80 fa 03             	cmp    $0x3,%dl
   250e2:	0f 83 08 00 00 00    	jae    250f0 <miniz_oxide::inflate::core::init_tree+0x380>
   250e8:	e9 44 00 00 00       	jmpq   25131 <miniz_oxide::inflate::core::init_tree+0x3c1>
   250ed:	0f 1f 00             	nopl   (%rax)
   250f0:	40 80 e6 fc          	and    $0xfc,%sil
   250f4:	40 f6 de             	neg    %sil
   250f7:	31 ed                	xor    %ebp,%ebp
   250f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   25100:	89 da                	mov    %ebx,%edx
   25102:	83 e2 01             	and    $0x1,%edx
   25105:	c1 e2 02             	shl    $0x2,%edx
   25108:	8d 14 ea             	lea    (%rdx,%rbp,8),%edx
   2510b:	89 dd                	mov    %ebx,%ebp
   2510d:	83 e5 02             	and    $0x2,%ebp
   25110:	09 d5                	or     %edx,%ebp
   25112:	89 da                	mov    %ebx,%edx
   25114:	c1 ea 02             	shr    $0x2,%edx
   25117:	83 e2 01             	and    $0x1,%edx
   2511a:	09 ea                	or     %ebp,%edx
   2511c:	89 dd                	mov    %ebx,%ebp
   2511e:	c1 ed 03             	shr    $0x3,%ebp
   25121:	83 e5 01             	and    $0x1,%ebp
   25124:	8d 6c 55 00          	lea    0x0(%rbp,%rdx,2),%ebp
   25128:	c1 eb 04             	shr    $0x4,%ebx
   2512b:	40 80 c6 04          	add    $0x4,%sil
   2512f:	75 cf                	jne    25100 <miniz_oxide::inflate::core::init_tree+0x390>
   25131:	84 c0                	test   %al,%al
   25133:	0f 84 17 00 00 00    	je     25150 <miniz_oxide::inflate::core::init_tree+0x3e0>
   25139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   25140:	89 ea                	mov    %ebp,%edx
   25142:	89 de                	mov    %ebx,%esi
   25144:	83 e6 01             	and    $0x1,%esi
   25147:	8d 2c 56             	lea    (%rsi,%rdx,2),%ebp
   2514a:	d1 eb                	shr    %ebx
   2514c:	04 ff                	add    $0xff,%al
   2514e:	75 f0                	jne    25140 <miniz_oxide::inflate::core::init_tree+0x3d0>
   25150:	80 f9 0b             	cmp    $0xb,%cl
   25153:	0f 83 d7 00 00 00    	jae    25230 <miniz_oxide::inflate::core::init_tree+0x4c0>
   25159:	81 fd ff 03 00 00    	cmp    $0x3ff,%ebp
   2515f:	0f 87 2b ff ff ff    	ja     25090 <miniz_oxide::inflate::core::init_tree+0x320>
   25165:	b8 01 00 00 00       	mov    $0x1,%eax
   2516a:	48 d3 e0             	shl    %cl,%rax
   2516d:	89 cb                	mov    %ecx,%ebx
   2516f:	89 ea                	mov    %ebp,%edx
   25171:	be ff 03 00 00       	mov    $0x3ff,%esi
   25176:	48 29 d6             	sub    %rdx,%rsi
   25179:	48 d3 ee             	shr    %cl,%rsi
   2517c:	c1 e3 09             	shl    $0x9,%ebx
   2517f:	41 09 dc             	or     %ebx,%r12d
   25182:	8d 4e 01             	lea    0x1(%rsi),%ecx
   25185:	48 83 e1 07          	and    $0x7,%rcx
   25189:	0f 84 0f 00 00 00    	je     2519e <miniz_oxide::inflate::core::init_tree+0x42e>
   2518f:	90                   	nop
   25190:	66 45 89 24 53       	mov    %r12w,(%r11,%rdx,2)
   25195:	48 01 c2             	add    %rax,%rdx
   25198:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
   2519c:	75 f2                	jne    25190 <miniz_oxide::inflate::core::init_tree+0x420>
   2519e:	48 83 fe 07          	cmp    $0x7,%rsi
   251a2:	0f 82 e8 fe ff ff    	jb     25090 <miniz_oxide::inflate::core::init_tree+0x320>
   251a8:	49 8d 0c 53          	lea    (%r11,%rdx,2),%rcx
   251ac:	48 89 c6             	mov    %rax,%rsi
   251af:	48 c1 e6 04          	shl    $0x4,%rsi
   251b3:	48 8d 2c 00          	lea    (%rax,%rax,1),%rbp
   251b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   251be:	00 00 
   251c0:	66 44 89 21          	mov    %r12w,(%rcx)
   251c4:	48 01 c2             	add    %rax,%rdx
   251c7:	48 8d 1c 29          	lea    (%rcx,%rbp,1),%rbx
   251cb:	66 44 89 24 41       	mov    %r12w,(%rcx,%rax,2)
   251d0:	48 01 c2             	add    %rax,%rdx
   251d3:	48 01 eb             	add    %rbp,%rbx
   251d6:	66 44 89 24 81       	mov    %r12w,(%rcx,%rax,4)
   251db:	48 01 c2             	add    %rax,%rdx
   251de:	66 44 89 24 43       	mov    %r12w,(%rbx,%rax,2)
   251e3:	48 01 eb             	add    %rbp,%rbx
   251e6:	48 01 c2             	add    %rax,%rdx
   251e9:	48 01 eb             	add    %rbp,%rbx
   251ec:	66 44 89 24 c1       	mov    %r12w,(%rcx,%rax,8)
   251f1:	48 01 c2             	add    %rax,%rdx
   251f4:	66 44 89 24 43       	mov    %r12w,(%rbx,%rax,2)
   251f9:	48 01 eb             	add    %rbp,%rbx
   251fc:	48 01 c2             	add    %rax,%rdx
   251ff:	66 44 89 24 43       	mov    %r12w,(%rbx,%rax,2)
   25204:	48 01 eb             	add    %rbp,%rbx
   25207:	48 01 c2             	add    %rax,%rdx
   2520a:	66 44 89 24 43       	mov    %r12w,(%rbx,%rax,2)
   2520f:	48 01 c2             	add    %rax,%rdx
   25212:	48 01 f1             	add    %rsi,%rcx
   25215:	48 81 fa 00 04 00 00 	cmp    $0x400,%rdx
   2521c:	0f 82 9e ff ff ff    	jb     251c0 <miniz_oxide::inflate::core::init_tree+0x450>
   25222:	e9 69 fe ff ff       	jmpq   25090 <miniz_oxide::inflate::core::init_tree+0x320>
   25227:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2522e:	00 00 
   25230:	81 e5 ff 03 00 00    	and    $0x3ff,%ebp
   25236:	48 8b 84 24 e0 00 00 	mov    0xe0(%rsp),%rax
   2523d:	00 
   2523e:	0f b7 34 68          	movzwl (%rax,%rbp,2),%esi
   25242:	66 85 f6             	test   %si,%si
   25245:	74 6a                	je     252b1 <miniz_oxide::inflate::core::init_tree+0x541>
   25247:	44 89 c0             	mov    %r8d,%eax
   2524a:	c1 ea 08             	shr    $0x8,%edx
   2524d:	81 e2 ff ff 7f 00    	and    $0x7fffff,%edx
   25253:	80 f9 0c             	cmp    $0xc,%cl
   25256:	72 73                	jb     252cb <miniz_oxide::inflate::core::init_tree+0x55b>
   25258:	83 c1 f5             	add    $0xfffffff5,%ecx
   2525b:	e9 1e 00 00 00       	jmpq   2527e <miniz_oxide::inflate::core::init_tree+0x50e>
   25260:	49 8d 34 7a          	lea    (%r10,%rdi,2),%rsi
   25264:	48 81 c6 3c 08 00 00 	add    $0x83c,%rsi
   2526b:	66 89 06             	mov    %ax,(%rsi)
   2526e:	44 8d 40 fe          	lea    -0x2(%rax),%r8d
   25272:	89 c3                	mov    %eax,%ebx
   25274:	89 c6                	mov    %eax,%esi
   25276:	44 89 c0             	mov    %r8d,%eax
   25279:	80 c1 ff             	add    $0xff,%cl
   2527c:	74 52                	je     252d0 <miniz_oxide::inflate::core::init_tree+0x560>
   2527e:	d1 ea                	shr    %edx
   25280:	89 d7                	mov    %edx,%edi
   25282:	83 e7 01             	and    $0x1,%edi
   25285:	f7 d6                	not    %esi
   25287:	01 fe                	add    %edi,%esi
   25289:	48 0f bf fe          	movswq %si,%rdi
   2528d:	0f b7 f6             	movzwl %si,%esi
   25290:	81 fe 3f 02 00 00    	cmp    $0x23f,%esi
   25296:	0f 87 13 01 00 00    	ja     253af <miniz_oxide::inflate::core::init_tree+0x63f>
   2529c:	41 0f b7 b4 7a 3c 08 	movzwl 0x83c(%r10,%rdi,2),%esi
   252a3:	00 00 
   252a5:	66 85 f6             	test   %si,%si
   252a8:	74 b6                	je     25260 <miniz_oxide::inflate::core::init_tree+0x4f0>
   252aa:	41 89 c0             	mov    %eax,%r8d
   252ad:	89 f0                	mov    %esi,%eax
   252af:	eb c1                	jmp    25272 <miniz_oxide::inflate::core::init_tree+0x502>
   252b1:	66 44 89 04 68       	mov    %r8w,(%rax,%rbp,2)
   252b6:	41 8d 40 fe          	lea    -0x2(%r8),%eax
   252ba:	44 89 c6             	mov    %r8d,%esi
   252bd:	c1 ea 08             	shr    $0x8,%edx
   252c0:	81 e2 ff ff 7f 00    	and    $0x7fffff,%edx
   252c6:	80 f9 0c             	cmp    $0xc,%cl
   252c9:	73 8d                	jae    25258 <miniz_oxide::inflate::core::init_tree+0x4e8>
   252cb:	41 89 c0             	mov    %eax,%r8d
   252ce:	89 f3                	mov    %esi,%ebx
   252d0:	d1 ea                	shr    %edx
   252d2:	83 e2 01             	and    $0x1,%edx
   252d5:	f7 d3                	not    %ebx
   252d7:	01 d3                	add    %edx,%ebx
   252d9:	48 0f bf fb          	movswq %bx,%rdi
   252dd:	0f b7 c3             	movzwl %bx,%eax
   252e0:	3d 40 02 00 00       	cmp    $0x240,%eax
   252e5:	0f 83 d8 00 00 00    	jae    253c3 <miniz_oxide::inflate::core::init_tree+0x653>
   252eb:	66 45 89 a4 7a 3c 08 	mov    %r12w,0x83c(%r10,%rdi,2)
   252f2:	00 00 
   252f4:	4d 39 e9             	cmp    %r13,%r9
   252f7:	0f 82 7d fd ff ff    	jb     2507a <miniz_oxide::inflate::core::init_tree+0x30a>
   252fd:	0f 1f 00             	nopl   (%rax)
   25300:	41 8b 7f 1c          	mov    0x1c(%r15),%edi
   25304:	85 ff                	test   %edi,%edi
   25306:	74 41                	je     25349 <miniz_oxide::inflate::core::init_tree+0x5d9>
   25308:	83 ff 02             	cmp    $0x2,%edi
   2530b:	74 2a                	je     25337 <miniz_oxide::inflate::core::init_tree+0x5c7>
   2530d:	83 c7 ff             	add    $0xffffffff,%edi
   25310:	41 89 7f 1c          	mov    %edi,0x1c(%r15)
   25314:	83 ff 03             	cmp    $0x3,%edi
   25317:	0f 82 a3 fa ff ff    	jb     24dc0 <miniz_oxide::inflate::core::init_tree+0x50>
   2531d:	48 8d 15 ac f4 01 00 	lea    0x1f4ac(%rip),%rdx        # 447d0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1298>
   25324:	be 03 00 00 00       	mov    $0x3,%esi
   25329:	ff 15 61 09 02 00    	callq  *0x20961(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   2532f:	0f 0b                	ud2    
   25331:	66 b8 00 1b          	mov    $0x1b00,%ax
   25335:	eb 22                	jmp    25359 <miniz_oxide::inflate::core::init_tree+0x5e9>
   25337:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   2533c:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
   25343:	66 b8 00 0a          	mov    $0xa00,%ax
   25347:	eb 10                	jmp    25359 <miniz_oxide::inflate::core::init_tree+0x5e9>
   25349:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   2534e:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
   25355:	66 b8 00 0c          	mov    $0xc00,%ax
   25359:	0f b7 c0             	movzwl %ax,%eax
   2535c:	83 c8 01             	or     $0x1,%eax
   2535f:	48 81 c4 e8 00 00 00 	add    $0xe8,%rsp
   25366:	5b                   	pop    %rbx
   25367:	41 5c                	pop    %r12
   25369:	41 5d                	pop    %r13
   2536b:	41 5e                	pop    %r14
   2536d:	41 5f                	pop    %r15
   2536f:	5d                   	pop    %rbp
   25370:	c3                   	retq   
   25371:	48 8d 15 88 f4 01 00 	lea    0x1f488(%rip),%rdx        # 44800 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x12c8>
   25378:	be 10 00 00 00       	mov    $0x10,%esi
   2537d:	ff 15 0d 09 02 00    	callq  *0x2090d(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   25383:	0f 0b                	ud2    
   25385:	48 8d 15 8c f4 01 00 	lea    0x1f48c(%rip),%rdx        # 44818 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x12e0>
   2538c:	be 20 01 00 00       	mov    $0x120,%esi
   25391:	ff 15 f9 08 02 00    	callq  *0x208f9(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   25397:	0f 0b                	ud2    
   25399:	89 cf                	mov    %ecx,%edi
   2539b:	48 8d 15 8e f4 01 00 	lea    0x1f48e(%rip),%rdx        # 44830 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x12f8>
   253a2:	be 11 00 00 00       	mov    $0x11,%esi
   253a7:	ff 15 e3 08 02 00    	callq  *0x208e3(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   253ad:	0f 0b                	ud2    
   253af:	48 8d 15 92 f4 01 00 	lea    0x1f492(%rip),%rdx        # 44848 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1310>
   253b6:	be 40 02 00 00       	mov    $0x240,%esi
   253bb:	ff 15 cf 08 02 00    	callq  *0x208cf(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   253c1:	0f 0b                	ud2    
   253c3:	48 8d 15 96 f4 01 00 	lea    0x1f496(%rip),%rdx        # 44860 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1328>
   253ca:	be 40 02 00 00       	mov    $0x240,%esi
   253cf:	ff 15 bb 08 02 00    	callq  *0x208bb(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   253d5:	0f 0b                	ud2    
   253d7:	48 8d 15 0a f4 01 00 	lea    0x1f40a(%rip),%rdx        # 447e8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x12b0>
   253de:	be 20 01 00 00       	mov    $0x120,%esi
   253e3:	4c 89 ef             	mov    %r13,%rdi
   253e6:	ff 15 3c 06 02 00    	callq  *0x2063c(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   253ec:	0f 0b                	ud2    
   253ee:	66 90                	xchg   %ax,%ax

00000000000253f0 <miniz_oxide::inflate::core::transfer>:
   253f0:	53                   	push   %rbx
   253f1:	4d 89 c3             	mov    %r8,%r11
   253f4:	49 c1 eb 02          	shr    $0x2,%r11
   253f8:	0f 84 b5 00 00 00    	je     254b3 <miniz_oxide::inflate::core::transfer+0xc3>
   253fe:	66 90                	xchg   %ax,%ax
   25400:	48 89 d0             	mov    %rdx,%rax
   25403:	4c 21 c8             	and    %r9,%rax
   25406:	48 39 f0             	cmp    %rsi,%rax
   25409:	0f 83 8f 01 00 00    	jae    2559e <miniz_oxide::inflate::core::transfer+0x1ae>
   2540f:	48 39 f1             	cmp    %rsi,%rcx
   25412:	0f 83 98 01 00 00    	jae    255b0 <miniz_oxide::inflate::core::transfer+0x1c0>
   25418:	48 89 d3             	mov    %rdx,%rbx
   2541b:	0f b6 04 07          	movzbl (%rdi,%rax,1),%eax
   2541f:	88 04 0f             	mov    %al,(%rdi,%rcx,1)
   25422:	48 83 c2 01          	add    $0x1,%rdx
   25426:	48 89 d0             	mov    %rdx,%rax
   25429:	4c 21 c8             	and    %r9,%rax
   2542c:	48 39 f0             	cmp    %rsi,%rax
   2542f:	0f 83 8d 01 00 00    	jae    255c2 <miniz_oxide::inflate::core::transfer+0x1d2>
   25435:	4c 8d 51 01          	lea    0x1(%rcx),%r10
   25439:	49 39 f2             	cmp    %rsi,%r10
   2543c:	0f 83 92 01 00 00    	jae    255d4 <miniz_oxide::inflate::core::transfer+0x1e4>
   25442:	0f b6 04 07          	movzbl (%rdi,%rax,1),%eax
   25446:	88 44 0f 01          	mov    %al,0x1(%rdi,%rcx,1)
   2544a:	48 83 c2 01          	add    $0x1,%rdx
   2544e:	48 89 d0             	mov    %rdx,%rax
   25451:	4c 21 c8             	and    %r9,%rax
   25454:	48 39 f0             	cmp    %rsi,%rax
   25457:	0f 83 80 01 00 00    	jae    255dd <miniz_oxide::inflate::core::transfer+0x1ed>
   2545d:	4c 8d 51 02          	lea    0x2(%rcx),%r10
   25461:	49 39 f2             	cmp    %rsi,%r10
   25464:	0f 83 85 01 00 00    	jae    255ef <miniz_oxide::inflate::core::transfer+0x1ff>
   2546a:	0f b6 04 07          	movzbl (%rdi,%rax,1),%eax
   2546e:	88 44 0f 02          	mov    %al,0x2(%rdi,%rcx,1)
   25472:	48 83 c2 01          	add    $0x1,%rdx
   25476:	48 89 d0             	mov    %rdx,%rax
   25479:	4c 21 c8             	and    %r9,%rax
   2547c:	48 39 f0             	cmp    %rsi,%rax
   2547f:	0f 83 73 01 00 00    	jae    255f8 <miniz_oxide::inflate::core::transfer+0x208>
   25485:	4c 8d 51 03          	lea    0x3(%rcx),%r10
   25489:	49 39 f2             	cmp    %rsi,%r10
   2548c:	0f 83 78 01 00 00    	jae    2560a <miniz_oxide::inflate::core::transfer+0x21a>
   25492:	0f b6 04 07          	movzbl (%rdi,%rax,1),%eax
   25496:	88 44 0f 03          	mov    %al,0x3(%rdi,%rcx,1)
   2549a:	48 83 c1 04          	add    $0x4,%rcx
   2549e:	48 83 c2 01          	add    $0x1,%rdx
   254a2:	49 83 c3 ff          	add    $0xffffffffffffffff,%r11
   254a6:	0f 85 54 ff ff ff    	jne    25400 <miniz_oxide::inflate::core::transfer+0x10>
   254ac:	48 83 c3 04          	add    $0x4,%rbx
   254b0:	48 89 da             	mov    %rbx,%rdx
   254b3:	41 83 e0 03          	and    $0x3,%r8d
   254b7:	48 8d 05 72 32 01 00 	lea    0x13272(%rip),%rax        # 38730 <str.6+0x1410>
   254be:	4a 63 1c 80          	movslq (%rax,%r8,4),%rbx
   254c2:	48 01 c3             	add    %rax,%rbx
   254c5:	ff e3                	jmpq   *%rbx
   254c7:	4c 21 ca             	and    %r9,%rdx
   254ca:	48 39 f2             	cmp    %rsi,%rdx
   254cd:	0f 83 49 01 00 00    	jae    2561c <miniz_oxide::inflate::core::transfer+0x22c>
   254d3:	48 39 f1             	cmp    %rsi,%rcx
   254d6:	0f 82 ba 00 00 00    	jb     25596 <miniz_oxide::inflate::core::transfer+0x1a6>
   254dc:	48 8d 15 5d f5 01 00 	lea    0x1f55d(%rip),%rdx        # 44a40 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1508>
   254e3:	48 89 cf             	mov    %rcx,%rdi
   254e6:	ff 15 a4 07 02 00    	callq  *0x207a4(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   254ec:	0f 0b                	ud2    
   254ee:	48 89 d0             	mov    %rdx,%rax
   254f1:	4c 21 c8             	and    %r9,%rax
   254f4:	48 39 f0             	cmp    %rsi,%rax
   254f7:	0f 83 28 01 00 00    	jae    25625 <miniz_oxide::inflate::core::transfer+0x235>
   254fd:	48 39 f1             	cmp    %rsi,%rcx
   25500:	0f 83 31 01 00 00    	jae    25637 <miniz_oxide::inflate::core::transfer+0x247>
   25506:	8a 04 07             	mov    (%rdi,%rax,1),%al
   25509:	88 04 0f             	mov    %al,(%rdi,%rcx,1)
   2550c:	48 83 c2 01          	add    $0x1,%rdx
   25510:	4c 21 ca             	and    %r9,%rdx
   25513:	48 39 f2             	cmp    %rsi,%rdx
   25516:	0f 83 2d 01 00 00    	jae    25649 <miniz_oxide::inflate::core::transfer+0x259>
   2551c:	48 83 c1 01          	add    $0x1,%rcx
   25520:	48 39 f1             	cmp    %rsi,%rcx
   25523:	72 71                	jb     25596 <miniz_oxide::inflate::core::transfer+0x1a6>
   25525:	48 8d 15 e4 f4 01 00 	lea    0x1f4e4(%rip),%rdx        # 44a10 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x14d8>
   2552c:	48 89 cf             	mov    %rcx,%rdi
   2552f:	ff 15 5b 07 02 00    	callq  *0x2075b(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   25535:	0f 0b                	ud2    
   25537:	48 89 d0             	mov    %rdx,%rax
   2553a:	4c 21 c8             	and    %r9,%rax
   2553d:	48 39 f0             	cmp    %rsi,%rax
   25540:	0f 83 0c 01 00 00    	jae    25652 <miniz_oxide::inflate::core::transfer+0x262>
   25546:	48 39 f1             	cmp    %rsi,%rcx
   25549:	0f 83 15 01 00 00    	jae    25664 <miniz_oxide::inflate::core::transfer+0x274>
   2554f:	8a 04 07             	mov    (%rdi,%rax,1),%al
   25552:	88 04 0f             	mov    %al,(%rdi,%rcx,1)
   25555:	48 8d 42 01          	lea    0x1(%rdx),%rax
   25559:	4c 21 c8             	and    %r9,%rax
   2555c:	48 39 f0             	cmp    %rsi,%rax
   2555f:	0f 83 11 01 00 00    	jae    25676 <miniz_oxide::inflate::core::transfer+0x286>
   25565:	4c 8d 41 01          	lea    0x1(%rcx),%r8
   25569:	49 39 f0             	cmp    %rsi,%r8
   2556c:	0f 83 16 01 00 00    	jae    25688 <miniz_oxide::inflate::core::transfer+0x298>
   25572:	8a 04 07             	mov    (%rdi,%rax,1),%al
   25575:	42 88 04 07          	mov    %al,(%rdi,%r8,1)
   25579:	48 83 c2 02          	add    $0x2,%rdx
   2557d:	4c 21 ca             	and    %r9,%rdx
   25580:	48 39 f2             	cmp    %rsi,%rdx
   25583:	0f 83 11 01 00 00    	jae    2569a <miniz_oxide::inflate::core::transfer+0x2aa>
   25589:	48 83 c1 02          	add    $0x2,%rcx
   2558d:	48 39 f1             	cmp    %rsi,%rcx
   25590:	0f 83 19 01 00 00    	jae    256af <miniz_oxide::inflate::core::transfer+0x2bf>
   25596:	8a 04 17             	mov    (%rdi,%rdx,1),%al
   25599:	88 04 0f             	mov    %al,(%rdi,%rcx,1)
   2559c:	5b                   	pop    %rbx
   2559d:	c3                   	retq   
   2559e:	48 8d 15 d3 f2 01 00 	lea    0x1f2d3(%rip),%rdx        # 44878 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1340>
   255a5:	48 89 c7             	mov    %rax,%rdi
   255a8:	ff 15 e2 06 02 00    	callq  *0x206e2(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   255ae:	0f 0b                	ud2    
   255b0:	48 8d 15 d9 f2 01 00 	lea    0x1f2d9(%rip),%rdx        # 44890 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1358>
   255b7:	48 89 cf             	mov    %rcx,%rdi
   255ba:	ff 15 d0 06 02 00    	callq  *0x206d0(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   255c0:	0f 0b                	ud2    
   255c2:	48 8d 15 df f2 01 00 	lea    0x1f2df(%rip),%rdx        # 448a8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1370>
   255c9:	48 89 c7             	mov    %rax,%rdi
   255cc:	ff 15 be 06 02 00    	callq  *0x206be(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   255d2:	0f 0b                	ud2    
   255d4:	48 8d 15 e5 f2 01 00 	lea    0x1f2e5(%rip),%rdx        # 448c0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1388>
   255db:	eb 34                	jmp    25611 <miniz_oxide::inflate::core::transfer+0x221>
   255dd:	48 8d 15 f4 f2 01 00 	lea    0x1f2f4(%rip),%rdx        # 448d8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x13a0>
   255e4:	48 89 c7             	mov    %rax,%rdi
   255e7:	ff 15 a3 06 02 00    	callq  *0x206a3(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   255ed:	0f 0b                	ud2    
   255ef:	48 8d 15 fa f2 01 00 	lea    0x1f2fa(%rip),%rdx        # 448f0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x13b8>
   255f6:	eb 19                	jmp    25611 <miniz_oxide::inflate::core::transfer+0x221>
   255f8:	48 8d 15 09 f3 01 00 	lea    0x1f309(%rip),%rdx        # 44908 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x13d0>
   255ff:	48 89 c7             	mov    %rax,%rdi
   25602:	ff 15 88 06 02 00    	callq  *0x20688(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   25608:	0f 0b                	ud2    
   2560a:	48 8d 15 0f f3 01 00 	lea    0x1f30f(%rip),%rdx        # 44920 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x13e8>
   25611:	4c 89 d7             	mov    %r10,%rdi
   25614:	ff 15 76 06 02 00    	callq  *0x20676(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   2561a:	0f 0b                	ud2    
   2561c:	48 8d 05 05 f4 01 00 	lea    0x1f405(%rip),%rax        # 44a28 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x14f0>
   25623:	eb 7c                	jmp    256a1 <miniz_oxide::inflate::core::transfer+0x2b1>
   25625:	48 8d 15 9c f3 01 00 	lea    0x1f39c(%rip),%rdx        # 449c8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1490>
   2562c:	48 89 c7             	mov    %rax,%rdi
   2562f:	ff 15 5b 06 02 00    	callq  *0x2065b(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   25635:	0f 0b                	ud2    
   25637:	48 8d 15 a2 f3 01 00 	lea    0x1f3a2(%rip),%rdx        # 449e0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x14a8>
   2563e:	48 89 cf             	mov    %rcx,%rdi
   25641:	ff 15 49 06 02 00    	callq  *0x20649(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   25647:	0f 0b                	ud2    
   25649:	48 8d 05 a8 f3 01 00 	lea    0x1f3a8(%rip),%rax        # 449f8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x14c0>
   25650:	eb 4f                	jmp    256a1 <miniz_oxide::inflate::core::transfer+0x2b1>
   25652:	48 8d 15 df f2 01 00 	lea    0x1f2df(%rip),%rdx        # 44938 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1400>
   25659:	48 89 c7             	mov    %rax,%rdi
   2565c:	ff 15 2e 06 02 00    	callq  *0x2062e(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   25662:	0f 0b                	ud2    
   25664:	48 8d 15 e5 f2 01 00 	lea    0x1f2e5(%rip),%rdx        # 44950 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1418>
   2566b:	48 89 cf             	mov    %rcx,%rdi
   2566e:	ff 15 1c 06 02 00    	callq  *0x2061c(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   25674:	0f 0b                	ud2    
   25676:	48 8d 15 eb f2 01 00 	lea    0x1f2eb(%rip),%rdx        # 44968 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1430>
   2567d:	48 89 c7             	mov    %rax,%rdi
   25680:	ff 15 0a 06 02 00    	callq  *0x2060a(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   25686:	0f 0b                	ud2    
   25688:	48 8d 15 f1 f2 01 00 	lea    0x1f2f1(%rip),%rdx        # 44980 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1448>
   2568f:	4c 89 c7             	mov    %r8,%rdi
   25692:	ff 15 f8 05 02 00    	callq  *0x205f8(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   25698:	0f 0b                	ud2    
   2569a:	48 8d 05 f7 f2 01 00 	lea    0x1f2f7(%rip),%rax        # 44998 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1460>
   256a1:	48 89 d7             	mov    %rdx,%rdi
   256a4:	48 89 c2             	mov    %rax,%rdx
   256a7:	ff 15 e3 05 02 00    	callq  *0x205e3(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   256ad:	0f 0b                	ud2    
   256af:	48 8d 15 fa f2 01 00 	lea    0x1f2fa(%rip),%rdx        # 449b0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1478>
   256b6:	48 89 cf             	mov    %rcx,%rdi
   256b9:	ff 15 d1 05 02 00    	callq  *0x205d1(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   256bf:	0f 0b                	ud2    
   256c1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   256c8:	00 00 00 
   256cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000256d0 <miniz_oxide::inflate::core::apply_match>:
   256d0:	50                   	push   %rax
   256d1:	49 89 d2             	mov    %rdx,%r10
   256d4:	48 29 ca             	sub    %rcx,%rdx
   256d7:	4c 21 ca             	and    %r9,%rdx
   256da:	49 83 f8 03          	cmp    $0x3,%r8
   256de:	75 62                	jne    25742 <miniz_oxide::inflate::core::apply_match+0x72>
   256e0:	48 39 f2             	cmp    %rsi,%rdx
   256e3:	0f 83 f5 00 00 00    	jae    257de <miniz_oxide::inflate::core::apply_match+0x10e>
   256e9:	4c 39 d6             	cmp    %r10,%rsi
   256ec:	0f 86 f5 00 00 00    	jbe    257e7 <miniz_oxide::inflate::core::apply_match+0x117>
   256f2:	8a 04 17             	mov    (%rdi,%rdx,1),%al
   256f5:	42 88 04 17          	mov    %al,(%rdi,%r10,1)
   256f9:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
   256fd:	4c 21 c9             	and    %r9,%rcx
   25700:	48 39 f1             	cmp    %rsi,%rcx
   25703:	0f 83 e7 00 00 00    	jae    257f0 <miniz_oxide::inflate::core::apply_match+0x120>
   25709:	49 8d 42 01          	lea    0x1(%r10),%rax
   2570d:	48 39 f0             	cmp    %rsi,%rax
   25710:	0f 83 ec 00 00 00    	jae    25802 <miniz_oxide::inflate::core::apply_match+0x132>
   25716:	8a 0c 0f             	mov    (%rdi,%rcx,1),%cl
   25719:	88 0c 07             	mov    %cl,(%rdi,%rax,1)
   2571c:	48 83 c2 02          	add    $0x2,%rdx
   25720:	4c 21 ca             	and    %r9,%rdx
   25723:	48 39 f2             	cmp    %rsi,%rdx
   25726:	0f 83 e8 00 00 00    	jae    25814 <miniz_oxide::inflate::core::apply_match+0x144>
   2572c:	49 83 c2 02          	add    $0x2,%r10
   25730:	49 39 f2             	cmp    %rsi,%r10
   25733:	0f 83 f0 00 00 00    	jae    25829 <miniz_oxide::inflate::core::apply_match+0x159>
   25739:	8a 04 17             	mov    (%rdi,%rdx,1),%al
   2573c:	42 88 04 17          	mov    %al,(%rdi,%r10,1)
   25740:	58                   	pop    %rax
   25741:	c3                   	retq   
   25742:	48 89 d0             	mov    %rdx,%rax
   25745:	4c 29 d0             	sub    %r10,%rax
   25748:	41 0f 92 c3          	setb   %r11b
   2574c:	4c 39 c0             	cmp    %r8,%rax
   2574f:	73 05                	jae    25756 <miniz_oxide::inflate::core::apply_match+0x86>
   25751:	45 84 db             	test   %r11b,%r11b
   25754:	74 3f                	je     25795 <miniz_oxide::inflate::core::apply_match+0xc5>
   25756:	49 39 c8             	cmp    %rcx,%r8
   25759:	77 3a                	ja     25795 <miniz_oxide::inflate::core::apply_match+0xc5>
   2575b:	4a 8d 0c 02          	lea    (%rdx,%r8,1),%rcx
   2575f:	48 39 f1             	cmp    %rsi,%rcx
   25762:	73 31                	jae    25795 <miniz_oxide::inflate::core::apply_match+0xc5>
   25764:	4c 39 d2             	cmp    %r10,%rdx
   25767:	73 35                	jae    2579e <miniz_oxide::inflate::core::apply_match+0xce>
   25769:	4c 29 d6             	sub    %r10,%rsi
   2576c:	0f 82 c9 00 00 00    	jb     2583b <miniz_oxide::inflate::core::apply_match+0x16b>
   25772:	4c 39 c6             	cmp    %r8,%rsi
   25775:	0f 82 db 00 00 00    	jb     25856 <miniz_oxide::inflate::core::apply_match+0x186>
   2577b:	48 39 d1             	cmp    %rdx,%rcx
   2577e:	0f 82 db 00 00 00    	jb     2585f <miniz_oxide::inflate::core::apply_match+0x18f>
   25784:	4c 39 d1             	cmp    %r10,%rcx
   25787:	0f 87 ea 00 00 00    	ja     25877 <miniz_oxide::inflate::core::apply_match+0x1a7>
   2578d:	49 01 fa             	add    %rdi,%r10
   25790:	48 01 fa             	add    %rdi,%rdx
   25793:	eb 39                	jmp    257ce <miniz_oxide::inflate::core::apply_match+0xfe>
   25795:	4c 89 d1             	mov    %r10,%rcx
   25798:	58                   	pop    %rax
   25799:	e9 52 fc ff ff       	jmpq   253f0 <miniz_oxide::inflate::core::transfer>
   2579e:	48 39 f2             	cmp    %rsi,%rdx
   257a1:	0f 87 94 00 00 00    	ja     2583b <miniz_oxide::inflate::core::apply_match+0x16b>
   257a7:	4c 89 c1             	mov    %r8,%rcx
   257aa:	4c 01 d1             	add    %r10,%rcx
   257ad:	0f 82 d9 00 00 00    	jb     2588c <miniz_oxide::inflate::core::apply_match+0x1bc>
   257b3:	48 39 ca             	cmp    %rcx,%rdx
   257b6:	0f 82 e5 00 00 00    	jb     258a1 <miniz_oxide::inflate::core::apply_match+0x1d1>
   257bc:	48 29 d6             	sub    %rdx,%rsi
   257bf:	4c 39 c6             	cmp    %r8,%rsi
   257c2:	0f 82 f1 00 00 00    	jb     258b9 <miniz_oxide::inflate::core::apply_match+0x1e9>
   257c8:	48 01 fa             	add    %rdi,%rdx
   257cb:	49 01 fa             	add    %rdi,%r10
   257ce:	4c 89 d7             	mov    %r10,%rdi
   257d1:	48 89 d6             	mov    %rdx,%rsi
   257d4:	4c 89 c2             	mov    %r8,%rdx
   257d7:	58                   	pop    %rax
   257d8:	ff 25 1a 05 02 00    	jmpq   *0x2051a(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
   257de:	48 8d 05 d3 f2 01 00 	lea    0x1f2d3(%rip),%rax        # 44ab8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1580>
   257e5:	eb 34                	jmp    2581b <miniz_oxide::inflate::core::apply_match+0x14b>
   257e7:	48 8d 15 e2 f2 01 00 	lea    0x1f2e2(%rip),%rdx        # 44ad0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1598>
   257ee:	eb 40                	jmp    25830 <miniz_oxide::inflate::core::apply_match+0x160>
   257f0:	48 8d 15 f1 f2 01 00 	lea    0x1f2f1(%rip),%rdx        # 44ae8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x15b0>
   257f7:	48 89 cf             	mov    %rcx,%rdi
   257fa:	ff 15 90 04 02 00    	callq  *0x20490(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   25800:	0f 0b                	ud2    
   25802:	48 8d 15 f7 f2 01 00 	lea    0x1f2f7(%rip),%rdx        # 44b00 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x15c8>
   25809:	48 89 c7             	mov    %rax,%rdi
   2580c:	ff 15 7e 04 02 00    	callq  *0x2047e(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   25812:	0f 0b                	ud2    
   25814:	48 8d 05 fd f2 01 00 	lea    0x1f2fd(%rip),%rax        # 44b18 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x15e0>
   2581b:	48 89 d7             	mov    %rdx,%rdi
   2581e:	48 89 c2             	mov    %rax,%rdx
   25821:	ff 15 69 04 02 00    	callq  *0x20469(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   25827:	0f 0b                	ud2    
   25829:	48 8d 15 00 f3 01 00 	lea    0x1f300(%rip),%rdx        # 44b30 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x15f8>
   25830:	4c 89 d7             	mov    %r10,%rdi
   25833:	ff 15 57 04 02 00    	callq  *0x20457(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   25839:	0f 0b                	ud2    
   2583b:	48 8d 3d 72 2f 01 00 	lea    0x12f72(%rip),%rdi        # 387b4 <str.6+0x1494>
   25842:	48 8d 15 0f ef 01 00 	lea    0x1ef0f(%rip),%rdx        # 44758 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1220>
   25849:	be 23 00 00 00       	mov    $0x23,%esi
   2584e:	ff 15 84 06 02 00    	callq  *0x20684(%rip)        # 45ed8 <_GLOBAL_OFFSET_TABLE_+0x550>
   25854:	0f 0b                	ud2    
   25856:	48 8d 15 fb f1 01 00 	lea    0x1f1fb(%rip),%rdx        # 44a58 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1520>
   2585d:	eb 61                	jmp    258c0 <miniz_oxide::inflate::core::apply_match+0x1f0>
   2585f:	48 8d 05 0a f2 01 00 	lea    0x1f20a(%rip),%rax        # 44a70 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1538>
   25866:	48 89 d7             	mov    %rdx,%rdi
   25869:	48 89 ce             	mov    %rcx,%rsi
   2586c:	48 89 c2             	mov    %rax,%rdx
   2586f:	ff 15 2b 06 02 00    	callq  *0x2062b(%rip)        # 45ea0 <_GLOBAL_OFFSET_TABLE_+0x518>
   25875:	0f 0b                	ud2    
   25877:	48 8d 15 f2 f1 01 00 	lea    0x1f1f2(%rip),%rdx        # 44a70 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1538>
   2587e:	48 89 cf             	mov    %rcx,%rdi
   25881:	4c 89 d6             	mov    %r10,%rsi
   25884:	ff 15 9e 01 02 00    	callq  *0x2019e(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   2588a:	0f 0b                	ud2    
   2588c:	48 8d 15 f5 f1 01 00 	lea    0x1f1f5(%rip),%rdx        # 44a88 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1550>
   25893:	4c 89 d7             	mov    %r10,%rdi
   25896:	48 89 ce             	mov    %rcx,%rsi
   25899:	ff 15 01 06 02 00    	callq  *0x20601(%rip)        # 45ea0 <_GLOBAL_OFFSET_TABLE_+0x518>
   2589f:	0f 0b                	ud2    
   258a1:	48 8d 05 e0 f1 01 00 	lea    0x1f1e0(%rip),%rax        # 44a88 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1550>
   258a8:	48 89 cf             	mov    %rcx,%rdi
   258ab:	48 89 d6             	mov    %rdx,%rsi
   258ae:	48 89 c2             	mov    %rax,%rdx
   258b1:	ff 15 71 01 02 00    	callq  *0x20171(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   258b7:	0f 0b                	ud2    
   258b9:	48 8d 15 e0 f1 01 00 	lea    0x1f1e0(%rip),%rdx        # 44aa0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1568>
   258c0:	4c 89 c7             	mov    %r8,%rdi
   258c3:	ff 15 5f 01 02 00    	callq  *0x2015f(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   258c9:	0f 0b                	ud2    
   258cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000258d0 <miniz_oxide::inflate::core::decompress>:
   258d0:	55                   	push   %rbp
   258d1:	41 57                	push   %r15
   258d3:	41 56                	push   %r14
   258d5:	41 55                	push   %r13
   258d7:	41 54                	push   %r12
   258d9:	53                   	push   %rbx
   258da:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
   258e1:	4d 89 cb             	mov    %r9,%r11
   258e4:	4c 89 44 24 30       	mov    %r8,0x30(%rsp)
   258e9:	49 89 f1             	mov    %rsi,%r9
   258ec:	49 89 fc             	mov    %rdi,%r12
   258ef:	44 8b 84 24 18 01 00 	mov    0x118(%rsp),%r8d
   258f6:	00 
   258f7:	4c 8b 94 24 10 01 00 	mov    0x110(%rsp),%r10
   258fe:	00 
   258ff:	44 89 c6             	mov    %r8d,%esi
   25902:	83 e6 04             	and    $0x4,%esi
   25905:	31 ff                	xor    %edi,%edi
   25907:	4c 89 d8             	mov    %r11,%rax
   2590a:	48 83 e8 01          	sub    $0x1,%rax
   2590e:	48 0f 42 c7          	cmovb  %rdi,%rax
   25912:	83 fe 01             	cmp    $0x1,%esi
   25915:	48 19 ff             	sbb    %rdi,%rdi
   25918:	4d 39 d3             	cmp    %r10,%r11
   2591b:	0f 82 8c 1e 00 00    	jb     277ad <miniz_oxide::inflate::core::decompress+0x1edd>
   25921:	48 f7 d7             	not    %rdi
   25924:	48 09 c7             	or     %rax,%rdi
   25927:	48 8d 77 01          	lea    0x1(%rdi),%rsi
   2592b:	48 89 f0             	mov    %rsi,%rax
   2592e:	48 21 f8             	and    %rdi,%rax
   25931:	0f 85 76 1e 00 00    	jne    277ad <miniz_oxide::inflate::core::decompress+0x1edd>
   25937:	48 89 b4 24 d0 00 00 	mov    %rsi,0xd0(%rsp)
   2593e:	00 
   2593f:	48 89 7c 24 68       	mov    %rdi,0x68(%rsp)
   25944:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
   25949:	4c 8d 2c 0a          	lea    (%rdx,%rcx,1),%r13
   2594d:	45 8a b9 1c 29 00 00 	mov    0x291c(%r9),%r15b
   25954:	49 8b 01             	mov    (%r9),%rax
   25957:	41 8b 49 08          	mov    0x8(%r9),%ecx
   2595b:	41 8b 59 24          	mov    0x24(%r9),%ebx
   2595f:	41 8b 71 28          	mov    0x28(%r9),%esi
   25963:	41 8b 79 2c          	mov    0x2c(%r9),%edi
   25967:	48 89 04 24          	mov    %rax,(%rsp)
   2596b:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   2596f:	89 5c 24 0c          	mov    %ebx,0xc(%rsp)
   25973:	89 74 24 10          	mov    %esi,0x10(%rsp)
   25977:	89 7c 24 14          	mov    %edi,0x14(%rsp)
   2597b:	41 f6 c0 01          	test   $0x1,%r8b
   2597f:	0f 94 c3             	sete   %bl
   25982:	41 f6 c0 02          	test   $0x2,%r8b
   25986:	b8 02 fc 00 00       	mov    $0xfc02,%eax
   2598b:	be 02 01 00 00       	mov    $0x102,%esi
   25990:	0f 44 f0             	cmove  %eax,%esi
   25993:	b8 fc 00 00 00       	mov    $0xfc,%eax
   25998:	b9 01 00 00 00       	mov    $0x1,%ecx
   2599d:	0f 44 c8             	cmove  %eax,%ecx
   259a0:	89 4c 24 3c          	mov    %ecx,0x3c(%rsp)
   259a4:	89 74 24 18          	mov    %esi,0x18(%rsp)
   259a8:	81 e6 00 fd 00 00    	and    $0xfd00,%esi
   259ae:	89 74 24 2c          	mov    %esi,0x2c(%rsp)
   259b2:	49 8d 81 21 29 00 00 	lea    0x2921(%r9),%rax
   259b9:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
   259c0:	00 
   259c1:	49 8d 81 bc 0c 00 00 	lea    0xcbc(%r9),%rax
   259c8:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   259cf:	00 
   259d0:	49 8d 81 5c 1a 00 00 	lea    0x1a5c(%r9),%rax
   259d7:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
   259de:	00 
   259df:	49 8d 81 fc 27 00 00 	lea    0x27fc(%r9),%rax
   259e6:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
   259ed:	00 
   259ee:	49 8d 81 4c 0d 00 00 	lea    0xd4c(%r9),%rax
   259f5:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   259fc:	00 
   259fd:	49 8d 81 bc 0d 00 00 	lea    0xdbc(%r9),%rax
   25a04:	48 89 84 24 b0 00 00 	mov    %rax,0xb0(%rsp)
   25a0b:	00 
   25a0c:	00 db                	add    %bl,%bl
   25a0e:	80 cb 01             	or     $0x1,%bl
   25a11:	88 5c 24 2b          	mov    %bl,0x2b(%rsp)
   25a15:	48 89 94 24 c0 00 00 	mov    %rdx,0xc0(%rsp)
   25a1c:	00 
   25a1d:	49 89 d6             	mov    %rdx,%r14
   25a20:	4c 89 5c 24 40       	mov    %r11,0x40(%rsp)
   25a25:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
   25a2a:	b3 ff                	mov    $0xff,%bl
   25a2c:	41 80 ff 18          	cmp    $0x18,%r15b
   25a30:	0f 87 a9 1e 00 00    	ja     278df <miniz_oxide::inflate::core::decompress+0x200f>
   25a36:	41 0f b6 c7          	movzbl %r15b,%eax
   25a3a:	48 8d 0d ff 2c 01 00 	lea    0x12cff(%rip),%rcx        # 38740 <str.6+0x1420>
   25a41:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   25a45:	48 01 c8             	add    %rcx,%rax
   25a48:	ff e0                	jmpq   *%rax
   25a4a:	0f 57 c0             	xorps  %xmm0,%xmm0
   25a4d:	0f 29 04 24          	movaps %xmm0,(%rsp)
   25a51:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   25a58:	00 00 
   25a5a:	49 c7 41 0c 00 00 00 	movq   $0x0,0xc(%r9)
   25a61:	00 
   25a62:	41 c7 41 14 01 00 00 	movl   $0x1,0x14(%r9)
   25a69:	00 
   25a6a:	41 c7 41 20 01 00 00 	movl   $0x1,0x20(%r9)
   25a71:	00 
   25a72:	8a 44 24 2b          	mov    0x2b(%rsp),%al
   25a76:	41 89 c7             	mov    %eax,%r15d
   25a79:	e9 ac ff ff ff       	jmpq   25a2a <miniz_oxide::inflate::core::decompress+0x15a>
   25a7e:	66 90                	xchg   %ax,%ax
   25a80:	4c 89 e9             	mov    %r13,%rcx
   25a83:	4c 29 f1             	sub    %r14,%rcx
   25a86:	48 83 f9 04          	cmp    $0x4,%rcx
   25a8a:	0f 82 54 14 00 00    	jb     26ee4 <miniz_oxide::inflate::core::decompress+0x1614>
   25a90:	4c 89 d8             	mov    %r11,%rax
   25a93:	4c 29 d0             	sub    %r10,%rax
   25a96:	48 83 f8 02          	cmp    $0x2,%rax
   25a9a:	0f 82 44 14 00 00    	jb     26ee4 <miniz_oxide::inflate::core::decompress+0x1614>
   25aa0:	48 3d 03 01 00 00    	cmp    $0x103,%rax
   25aa6:	72 0a                	jb     25ab2 <miniz_oxide::inflate::core::decompress+0x1e2>
   25aa8:	48 83 f9 0d          	cmp    $0xd,%rcx
   25aac:	0f 87 51 16 00 00    	ja     27103 <miniz_oxide::inflate::core::decompress+0x1833>
   25ab2:	8b 44 24 08          	mov    0x8(%rsp),%eax
   25ab6:	48 83 f8 1d          	cmp    $0x1d,%rax
   25aba:	77 17                	ja     25ad3 <miniz_oxide::inflate::core::decompress+0x203>
   25abc:	41 8b 16             	mov    (%r14),%edx
   25abf:	89 c1                	mov    %eax,%ecx
   25ac1:	48 d3 e2             	shl    %cl,%rdx
   25ac4:	48 09 14 24          	or     %rdx,(%rsp)
   25ac8:	49 83 c6 04          	add    $0x4,%r14
   25acc:	83 c0 20             	add    $0x20,%eax
   25acf:	89 44 24 08          	mov    %eax,0x8(%rsp)
   25ad3:	48 8b 14 24          	mov    (%rsp),%rdx
   25ad7:	89 d1                	mov    %edx,%ecx
   25ad9:	81 e1 ff 03 00 00    	and    $0x3ff,%ecx
   25adf:	41 0f bf 74 49 3c    	movswl 0x3c(%r9,%rcx,2),%esi
   25ae5:	85 f6                	test   %esi,%esi
   25ae7:	78 0c                	js     25af5 <miniz_oxide::inflate::core::decompress+0x225>
   25ae9:	89 f1                	mov    %esi,%ecx
   25aeb:	c1 e9 09             	shr    $0x9,%ecx
   25aee:	75 3c                	jne    25b2c <miniz_oxide::inflate::core::decompress+0x25c>
   25af0:	e9 45 1a 00 00       	jmpq   2753a <miniz_oxide::inflate::core::decompress+0x1c6a>
   25af5:	b9 0a 00 00 00       	mov    $0xa,%ecx
   25afa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   25b00:	f7 d6                	not    %esi
   25b02:	48 89 d7             	mov    %rdx,%rdi
   25b05:	48 d3 ef             	shr    %cl,%rdi
   25b08:	83 e7 01             	and    $0x1,%edi
   25b0b:	01 f7                	add    %esi,%edi
   25b0d:	48 63 ff             	movslq %edi,%rdi
   25b10:	81 ff 3f 02 00 00    	cmp    $0x23f,%edi
   25b16:	0f 87 4e 1f 00 00    	ja     27a6a <miniz_oxide::inflate::core::decompress+0x219a>
   25b1c:	41 0f bf b4 79 3c 08 	movswl 0x83c(%r9,%rdi,2),%esi
   25b23:	00 00 
   25b25:	83 c1 01             	add    $0x1,%ecx
   25b28:	85 f6                	test   %esi,%esi
   25b2a:	78 d4                	js     25b00 <miniz_oxide::inflate::core::decompress+0x230>
   25b2c:	89 74 24 10          	mov    %esi,0x10(%rsp)
   25b30:	48 d3 ea             	shr    %cl,%rdx
   25b33:	48 89 14 24          	mov    %rdx,(%rsp)
   25b37:	29 c8                	sub    %ecx,%eax
   25b39:	89 44 24 08          	mov    %eax,0x8(%rsp)
   25b3d:	41 b7 15             	mov    $0x15,%r15b
   25b40:	f7 c6 00 01 00 00    	test   $0x100,%esi
   25b46:	0f 85 de fe ff ff    	jne    25a2a <miniz_oxide::inflate::core::decompress+0x15a>
   25b4c:	89 d1                	mov    %edx,%ecx
   25b4e:	81 e1 ff 03 00 00    	and    $0x3ff,%ecx
   25b54:	41 0f bf 6c 49 3c    	movswl 0x3c(%r9,%rcx,2),%ebp
   25b5a:	85 ed                	test   %ebp,%ebp
   25b5c:	78 0c                	js     25b6a <miniz_oxide::inflate::core::decompress+0x29a>
   25b5e:	89 e9                	mov    %ebp,%ecx
   25b60:	c1 e9 09             	shr    $0x9,%ecx
   25b63:	75 37                	jne    25b9c <miniz_oxide::inflate::core::decompress+0x2cc>
   25b65:	e9 d8 19 00 00       	jmpq   27542 <miniz_oxide::inflate::core::decompress+0x1c72>
   25b6a:	b9 0a 00 00 00       	mov    $0xa,%ecx
   25b6f:	90                   	nop
   25b70:	f7 d5                	not    %ebp
   25b72:	48 89 d7             	mov    %rdx,%rdi
   25b75:	48 d3 ef             	shr    %cl,%rdi
   25b78:	83 e7 01             	and    $0x1,%edi
   25b7b:	01 ef                	add    %ebp,%edi
   25b7d:	48 63 ff             	movslq %edi,%rdi
   25b80:	81 ff 3f 02 00 00    	cmp    $0x23f,%edi
   25b86:	0f 87 de 1e 00 00    	ja     27a6a <miniz_oxide::inflate::core::decompress+0x219a>
   25b8c:	41 0f bf ac 79 3c 08 	movswl 0x83c(%r9,%rdi,2),%ebp
   25b93:	00 00 
   25b95:	83 c1 01             	add    $0x1,%ecx
   25b98:	85 ed                	test   %ebp,%ebp
   25b9a:	78 d4                	js     25b70 <miniz_oxide::inflate::core::decompress+0x2a0>
   25b9c:	48 d3 ea             	shr    %cl,%rdx
   25b9f:	48 89 14 24          	mov    %rdx,(%rsp)
   25ba3:	29 c8                	sub    %ecx,%eax
   25ba5:	89 44 24 08          	mov    %eax,0x8(%rsp)
   25ba9:	4d 39 da             	cmp    %r11,%r10
   25bac:	0f 83 cc 1e 00 00    	jae    27a7e <miniz_oxide::inflate::core::decompress+0x21ae>
   25bb2:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   25bb7:	42 88 34 10          	mov    %sil,(%rax,%r10,1)
   25bbb:	49 8d 7a 01          	lea    0x1(%r10),%rdi
   25bbf:	f7 c5 00 01 00 00    	test   $0x100,%ebp
   25bc5:	0f 85 bd 18 00 00    	jne    27488 <miniz_oxide::inflate::core::decompress+0x1bb8>
   25bcb:	4c 39 df             	cmp    %r11,%rdi
   25bce:	0f 83 b6 1e 00 00    	jae    27a8a <miniz_oxide::inflate::core::decompress+0x21ba>
   25bd4:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   25bd9:	42 88 6c 10 01       	mov    %bpl,0x1(%rax,%r10,1)
   25bde:	49 83 c2 02          	add    $0x2,%r10
   25be2:	e9 99 fe ff ff       	jmpq   25a80 <miniz_oxide::inflate::core::decompress+0x1b0>
   25be7:	8b 44 24 14          	mov    0x14(%rsp),%eax
   25beb:	8b 7c 24 18          	mov    0x18(%rsp),%edi
   25bef:	8b 54 24 08          	mov    0x8(%rsp),%edx
   25bf3:	e9 0f 00 00 00       	jmpq   25c07 <miniz_oxide::inflate::core::decompress+0x337>
   25bf8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   25bff:	00 
   25c00:	89 f9                	mov    %edi,%ecx
   25c02:	f6 c1 02             	test   $0x2,%cl
   25c05:	75 2c                	jne    25c33 <miniz_oxide::inflate::core::decompress+0x363>
   25c07:	39 c2                	cmp    %eax,%edx
   25c09:	0f 83 af 11 00 00    	jae    26dbe <miniz_oxide::inflate::core::decompress+0x14ee>
   25c0f:	4d 39 f5             	cmp    %r14,%r13
   25c12:	74 ec                	je     25c00 <miniz_oxide::inflate::core::decompress+0x330>
   25c14:	41 0f b6 36          	movzbl (%r14),%esi
   25c18:	89 d1                	mov    %edx,%ecx
   25c1a:	48 d3 e6             	shl    %cl,%rsi
   25c1d:	48 09 34 24          	or     %rsi,(%rsp)
   25c21:	49 83 c6 01          	add    $0x1,%r14
   25c25:	83 c2 08             	add    $0x8,%edx
   25c28:	89 54 24 08          	mov    %edx,0x8(%rsp)
   25c2c:	31 c9                	xor    %ecx,%ecx
   25c2e:	f6 c1 02             	test   $0x2,%cl
   25c31:	74 d4                	je     25c07 <miniz_oxide::inflate::core::decompress+0x337>
   25c33:	84 c9                	test   %cl,%cl
   25c35:	74 b8                	je     25bef <miniz_oxide::inflate::core::decompress+0x31f>
   25c37:	e9 51 1c 00 00       	jmpq   2788d <miniz_oxide::inflate::core::decompress+0x1fbd>
   25c3c:	8b 44 24 14          	mov    0x14(%rsp),%eax
   25c40:	8b 7c 24 18          	mov    0x18(%rsp),%edi
   25c44:	8b 54 24 08          	mov    0x8(%rsp),%edx
   25c48:	e9 0a 00 00 00       	jmpq   25c57 <miniz_oxide::inflate::core::decompress+0x387>
   25c4d:	0f 1f 00             	nopl   (%rax)
   25c50:	89 f9                	mov    %edi,%ecx
   25c52:	f6 c1 02             	test   $0x2,%cl
   25c55:	75 2c                	jne    25c83 <miniz_oxide::inflate::core::decompress+0x3b3>
   25c57:	39 c2                	cmp    %eax,%edx
   25c59:	0f 83 91 11 00 00    	jae    26df0 <miniz_oxide::inflate::core::decompress+0x1520>
   25c5f:	4d 39 f5             	cmp    %r14,%r13
   25c62:	74 ec                	je     25c50 <miniz_oxide::inflate::core::decompress+0x380>
   25c64:	41 0f b6 36          	movzbl (%r14),%esi
   25c68:	89 d1                	mov    %edx,%ecx
   25c6a:	48 d3 e6             	shl    %cl,%rsi
   25c6d:	48 09 34 24          	or     %rsi,(%rsp)
   25c71:	49 83 c6 01          	add    $0x1,%r14
   25c75:	83 c2 08             	add    $0x8,%edx
   25c78:	89 54 24 08          	mov    %edx,0x8(%rsp)
   25c7c:	31 c9                	xor    %ecx,%ecx
   25c7e:	f6 c1 02             	test   $0x2,%cl
   25c81:	74 d4                	je     25c57 <miniz_oxide::inflate::core::decompress+0x387>
   25c83:	84 c9                	test   %cl,%cl
   25c85:	74 bd                	je     25c44 <miniz_oxide::inflate::core::decompress+0x374>
   25c87:	e9 f7 1b 00 00       	jmpq   27883 <miniz_oxide::inflate::core::decompress+0x1fb3>
   25c8c:	8b 44 24 14          	mov    0x14(%rsp),%eax
   25c90:	8b 7c 24 18          	mov    0x18(%rsp),%edi
   25c94:	8b 54 24 08          	mov    0x8(%rsp),%edx
   25c98:	e9 0a 00 00 00       	jmpq   25ca7 <miniz_oxide::inflate::core::decompress+0x3d7>
   25c9d:	0f 1f 00             	nopl   (%rax)
   25ca0:	89 f9                	mov    %edi,%ecx
   25ca2:	f6 c1 02             	test   $0x2,%cl
   25ca5:	75 2c                	jne    25cd3 <miniz_oxide::inflate::core::decompress+0x403>
   25ca7:	39 c2                	cmp    %eax,%edx
   25ca9:	0f 83 73 11 00 00    	jae    26e22 <miniz_oxide::inflate::core::decompress+0x1552>
   25caf:	4d 39 f5             	cmp    %r14,%r13
   25cb2:	74 ec                	je     25ca0 <miniz_oxide::inflate::core::decompress+0x3d0>
   25cb4:	41 0f b6 36          	movzbl (%r14),%esi
   25cb8:	89 d1                	mov    %edx,%ecx
   25cba:	48 d3 e6             	shl    %cl,%rsi
   25cbd:	48 09 34 24          	or     %rsi,(%rsp)
   25cc1:	49 83 c6 01          	add    $0x1,%r14
   25cc5:	83 c2 08             	add    $0x8,%edx
   25cc8:	89 54 24 08          	mov    %edx,0x8(%rsp)
   25ccc:	31 c9                	xor    %ecx,%ecx
   25cce:	f6 c1 02             	test   $0x2,%cl
   25cd1:	74 d4                	je     25ca7 <miniz_oxide::inflate::core::decompress+0x3d7>
   25cd3:	84 c9                	test   %cl,%cl
   25cd5:	74 bd                	je     25c94 <miniz_oxide::inflate::core::decompress+0x3c4>
   25cd7:	e9 c3 1b 00 00       	jmpq   2789f <miniz_oxide::inflate::core::decompress+0x1fcf>
   25cdc:	8b 74 24 18          	mov    0x18(%rsp),%esi
   25ce0:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
   25ce4:	89 c8                	mov    %ecx,%eax
   25ce6:	83 e0 07             	and    $0x7,%eax
   25ce9:	e9 09 00 00 00       	jmpq   25cf7 <miniz_oxide::inflate::core::decompress+0x427>
   25cee:	66 90                	xchg   %ax,%ax
   25cf0:	89 f2                	mov    %esi,%edx
   25cf2:	f6 c2 02             	test   $0x2,%dl
   25cf5:	75 2c                	jne    25d23 <miniz_oxide::inflate::core::decompress+0x453>
   25cf7:	89 ca                	mov    %ecx,%edx
   25cf9:	29 c2                	sub    %eax,%edx
   25cfb:	0f 83 a7 11 00 00    	jae    26ea8 <miniz_oxide::inflate::core::decompress+0x15d8>
   25d01:	4d 39 f5             	cmp    %r14,%r13
   25d04:	74 ea                	je     25cf0 <miniz_oxide::inflate::core::decompress+0x420>
   25d06:	41 0f b6 16          	movzbl (%r14),%edx
   25d0a:	48 d3 e2             	shl    %cl,%rdx
   25d0d:	48 09 14 24          	or     %rdx,(%rsp)
   25d11:	49 83 c6 01          	add    $0x1,%r14
   25d15:	83 c1 08             	add    $0x8,%ecx
   25d18:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   25d1c:	31 d2                	xor    %edx,%edx
   25d1e:	f6 c2 02             	test   $0x2,%dl
   25d21:	74 d4                	je     25cf7 <miniz_oxide::inflate::core::decompress+0x427>
   25d23:	84 d2                	test   %dl,%dl
   25d25:	74 b9                	je     25ce0 <miniz_oxide::inflate::core::decompress+0x410>
   25d27:	e9 6b 1b 00 00       	jmpq   27897 <miniz_oxide::inflate::core::decompress+0x1fc7>
   25d2c:	8b 74 24 18          	mov    0x18(%rsp),%esi
   25d30:	8b 7c 24 10          	mov    0x10(%rsp),%edi
   25d34:	41 3b 79 38          	cmp    0x38(%r9),%edi
   25d38:	73 43                	jae    25d7d <miniz_oxide::inflate::core::decompress+0x4ad>
   25d3a:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
   25d3e:	eb 09                	jmp    25d49 <miniz_oxide::inflate::core::decompress+0x479>
   25d40:	41 89 f7             	mov    %esi,%r15d
   25d43:	41 f6 c7 02          	test   $0x2,%r15b
   25d47:	75 29                	jne    25d72 <miniz_oxide::inflate::core::decompress+0x4a2>
   25d49:	83 f9 03             	cmp    $0x3,%ecx
   25d4c:	73 6b                	jae    25db9 <miniz_oxide::inflate::core::decompress+0x4e9>
   25d4e:	4d 39 f5             	cmp    %r14,%r13
   25d51:	74 ed                	je     25d40 <miniz_oxide::inflate::core::decompress+0x470>
   25d53:	41 0f b6 06          	movzbl (%r14),%eax
   25d57:	48 d3 e0             	shl    %cl,%rax
   25d5a:	48 09 04 24          	or     %rax,(%rsp)
   25d5e:	49 83 c6 01          	add    $0x1,%r14
   25d62:	83 c1 08             	add    $0x8,%ecx
   25d65:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   25d69:	45 31 ff             	xor    %r15d,%r15d
   25d6c:	41 f6 c7 02          	test   $0x2,%r15b
   25d70:	74 d7                	je     25d49 <miniz_oxide::inflate::core::decompress+0x479>
   25d72:	45 84 ff             	test   %r15b,%r15b
   25d75:	0f 85 85 00 00 00    	jne    25e00 <miniz_oxide::inflate::core::decompress+0x530>
   25d7b:	eb b3                	jmp    25d30 <miniz_oxide::inflate::core::decompress+0x460>
   25d7d:	41 c7 41 38 13 00 00 	movl   $0x13,0x38(%r9)
   25d84:	00 
   25d85:	48 89 e6             	mov    %rsp,%rsi
   25d88:	4c 89 cf             	mov    %r9,%rdi
   25d8b:	4c 89 d3             	mov    %r10,%rbx
   25d8e:	e8 dd ef ff ff       	callq  24d70 <miniz_oxide::inflate::core::init_tree>
   25d93:	49 89 da             	mov    %rbx,%r10
   25d96:	8b 74 24 18          	mov    0x18(%rsp),%esi
   25d9a:	44 8b 84 24 18 01 00 	mov    0x118(%rsp),%r8d
   25da1:	00 
   25da2:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   25da7:	4c 8b 5c 24 40       	mov    0x40(%rsp),%r11
   25dac:	41 89 c7             	mov    %eax,%r15d
   25daf:	45 84 ff             	test   %r15b,%r15b
   25db2:	75 4c                	jne    25e00 <miniz_oxide::inflate::core::decompress+0x530>
   25db4:	e9 77 ff ff ff       	jmpq   25d30 <miniz_oxide::inflate::core::decompress+0x460>
   25db9:	48 8b 04 24          	mov    (%rsp),%rax
   25dbd:	48 89 c2             	mov    %rax,%rdx
   25dc0:	48 c1 ea 03          	shr    $0x3,%rdx
   25dc4:	48 89 14 24          	mov    %rdx,(%rsp)
   25dc8:	83 c1 fd             	add    $0xfffffffd,%ecx
   25dcb:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   25dcf:	83 ff 13             	cmp    $0x13,%edi
   25dd2:	0f 83 c3 1d 00 00    	jae    27b9b <miniz_oxide::inflate::core::decompress+0x22cb>
   25dd8:	48 8d 0d 45 2a 01 00 	lea    0x12a45(%rip),%rcx        # 38824 <str.6+0x1504>
   25ddf:	0f b6 0c 0f          	movzbl (%rdi,%rcx,1),%ecx
   25de3:	24 07                	and    $0x7,%al
   25de5:	41 88 84 09 fc 27 00 	mov    %al,0x27fc(%r9,%rcx,1)
   25dec:	00 
   25ded:	8d 47 01             	lea    0x1(%rdi),%eax
   25df0:	89 44 24 10          	mov    %eax,0x10(%rsp)
   25df4:	45 31 ff             	xor    %r15d,%r15d
   25df7:	45 84 ff             	test   %r15b,%r15b
   25dfa:	0f 84 30 ff ff ff    	je     25d30 <miniz_oxide::inflate::core::decompress+0x460>
   25e00:	41 80 ff 01          	cmp    $0x1,%r15b
   25e04:	0f 85 e3 19 00 00    	jne    277ed <miniz_oxide::inflate::core::decompress+0x1f1d>
   25e0a:	e9 22 12 00 00       	jmpq   27031 <miniz_oxide::inflate::core::decompress+0x1761>
   25e0f:	4c 89 54 24 48       	mov    %r10,0x48(%rsp)
   25e14:	41 8b 49 0c          	mov    0xc(%r9),%ecx
   25e18:	41 89 c9             	mov    %ecx,%r9d
   25e1b:	41 c1 e1 08          	shl    $0x8,%r9d
   25e1f:	41 89 ca             	mov    %ecx,%r10d
   25e22:	41 83 e2 0f          	and    $0xf,%r10d
   25e26:	c1 e9 04             	shr    $0x4,%ecx
   25e29:	83 c1 08             	add    $0x8,%ecx
   25e2c:	83 e1 3f             	and    $0x3f,%ecx
   25e2f:	48 8b b4 24 d0 00 00 	mov    0xd0(%rsp),%rsi
   25e36:	00 
   25e37:	48 d3 ee             	shr    %cl,%rsi
   25e3a:	41 f6 c0 04          	test   $0x4,%r8b
   25e3e:	0f 85 e8 10 00 00    	jne    26f2c <miniz_oxide::inflate::core::decompress+0x165c>
   25e44:	8b 44 24 18          	mov    0x18(%rsp),%eax
   25e48:	4d 39 f5             	cmp    %r14,%r13
   25e4b:	74 7a                	je     25ec7 <miniz_oxide::inflate::core::decompress+0x5f7>
   25e4d:	44 89 d2             	mov    %r10d,%edx
   25e50:	83 f2 08             	xor    $0x8,%edx
   25e53:	41 0f b6 3e          	movzbl (%r14),%edi
   25e57:	44 89 cb             	mov    %r9d,%ebx
   25e5a:	09 fb                	or     %edi,%ebx
   25e5c:	48 69 c3 85 10 42 08 	imul   $0x8421085,%rbx,%rax
   25e63:	48 c1 e8 20          	shr    $0x20,%rax
   25e67:	89 dd                	mov    %ebx,%ebp
   25e69:	29 c5                	sub    %eax,%ebp
   25e6b:	d1 ed                	shr    %ebp
   25e6d:	01 c5                	add    %eax,%ebp
   25e6f:	c1 ed 04             	shr    $0x4,%ebp
   25e72:	89 e8                	mov    %ebp,%eax
   25e74:	c1 e0 05             	shl    $0x5,%eax
   25e77:	29 c5                	sub    %eax,%ebp
   25e79:	01 dd                	add    %ebx,%ebp
   25e7b:	89 f8                	mov    %edi,%eax
   25e7d:	83 e0 20             	and    $0x20,%eax
   25e80:	09 e8                	or     %ebp,%eax
   25e82:	48 85 f6             	test   %rsi,%rsi
   25e85:	41 b8 01 1c 00 00    	mov    $0x1c01,%r8d
   25e8b:	bb 01 03 00 00       	mov    $0x301,%ebx
   25e90:	41 0f 44 d8          	cmove  %r8d,%ebx
   25e94:	09 d0                	or     %edx,%eax
   25e96:	41 bf 01 1c 00 00    	mov    $0x1c01,%r15d
   25e9c:	75 03                	jne    25ea1 <miniz_oxide::inflate::core::decompress+0x5d1>
   25e9e:	41 89 df             	mov    %ebx,%r15d
   25ea1:	49 83 c6 01          	add    $0x1,%r14
   25ea5:	83 f9 0f             	cmp    $0xf,%ecx
   25ea8:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   25ead:	89 78 10             	mov    %edi,0x10(%rax)
   25eb0:	45 0f 47 f8          	cmova  %r8d,%r15d
   25eb4:	44 8b 84 24 18 01 00 	mov    0x118(%rsp),%r8d
   25ebb:	00 
   25ebc:	8b 44 24 18          	mov    0x18(%rsp),%eax
   25ec0:	45 84 ff             	test   %r15b,%r15b
   25ec3:	75 0e                	jne    25ed3 <miniz_oxide::inflate::core::decompress+0x603>
   25ec5:	eb 81                	jmp    25e48 <miniz_oxide::inflate::core::decompress+0x578>
   25ec7:	41 89 c7             	mov    %eax,%r15d
   25eca:	45 84 ff             	test   %r15b,%r15b
   25ecd:	0f 84 75 ff ff ff    	je     25e48 <miniz_oxide::inflate::core::decompress+0x578>
   25ed3:	41 80 ff 01          	cmp    $0x1,%r15b
   25ed7:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   25edc:	4c 8b 54 24 48       	mov    0x48(%rsp),%r10
   25ee1:	0f 85 0c 1a 00 00    	jne    278f3 <miniz_oxide::inflate::core::decompress+0x2023>
   25ee7:	e9 45 11 00 00       	jmpq   27031 <miniz_oxide::inflate::core::decompress+0x1761>
   25eec:	8b 5c 24 18          	mov    0x18(%rsp),%ebx
   25ef0:	8b 44 24 08          	mov    0x8(%rsp),%eax
   25ef4:	48 83 f8 0f          	cmp    $0xf,%rax
   25ef8:	73 38                	jae    25f32 <miniz_oxide::inflate::core::decompress+0x662>
   25efa:	4c 89 e9             	mov    %r13,%rcx
   25efd:	4c 29 f1             	sub    %r14,%rcx
   25f00:	48 83 f9 01          	cmp    $0x1,%rcx
   25f04:	77 35                	ja     25f3b <miniz_oxide::inflate::core::decompress+0x66b>
   25f06:	48 8b 14 24          	mov    (%rsp),%rdx
   25f0a:	89 d1                	mov    %edx,%ecx
   25f0c:	81 e1 ff 03 00 00    	and    $0x3ff,%ecx
   25f12:	41 0f bf b4 49 dc 0d 	movswl 0xddc(%r9,%rcx,2),%esi
   25f19:	00 00 
   25f1b:	85 f6                	test   %esi,%esi
   25f1d:	78 3d                	js     25f5c <miniz_oxide::inflate::core::decompress+0x68c>
   25f1f:	c1 ee 09             	shr    $0x9,%esi
   25f22:	0f 84 88 00 00 00    	je     25fb0 <miniz_oxide::inflate::core::decompress+0x6e0>
   25f28:	39 f0                	cmp    %esi,%eax
   25f2a:	0f 83 ff 01 00 00    	jae    2612f <miniz_oxide::inflate::core::decompress+0x85f>
   25f30:	eb 7e                	jmp    25fb0 <miniz_oxide::inflate::core::decompress+0x6e0>
   25f32:	48 8b 14 24          	mov    (%rsp),%rdx
   25f36:	e9 f4 01 00 00       	jmpq   2612f <miniz_oxide::inflate::core::decompress+0x85f>
   25f3b:	41 0f b7 16          	movzwl (%r14),%edx
   25f3f:	89 c1                	mov    %eax,%ecx
   25f41:	48 d3 e2             	shl    %cl,%rdx
   25f44:	48 0b 14 24          	or     (%rsp),%rdx
   25f48:	49 83 c6 02          	add    $0x2,%r14
   25f4c:	48 89 14 24          	mov    %rdx,(%rsp)
   25f50:	83 c0 10             	add    $0x10,%eax
   25f53:	89 44 24 08          	mov    %eax,0x8(%rsp)
   25f57:	e9 d3 01 00 00       	jmpq   2612f <miniz_oxide::inflate::core::decompress+0x85f>
   25f5c:	83 f8 0b             	cmp    $0xb,%eax
   25f5f:	0f 82 4b 00 00 00    	jb     25fb0 <miniz_oxide::inflate::core::decompress+0x6e0>
   25f65:	bd 0c 00 00 00       	mov    $0xc,%ebp
   25f6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   25f70:	f7 d6                	not    %esi
   25f72:	8d 4d fe             	lea    -0x2(%rbp),%ecx
   25f75:	48 89 d7             	mov    %rdx,%rdi
   25f78:	48 d3 ef             	shr    %cl,%rdi
   25f7b:	83 e7 01             	and    $0x1,%edi
   25f7e:	01 f7                	add    %esi,%edi
   25f80:	48 63 ff             	movslq %edi,%rdi
   25f83:	81 ff 3f 02 00 00    	cmp    $0x23f,%edi
   25f89:	0f 87 f8 1b 00 00    	ja     27b87 <miniz_oxide::inflate::core::decompress+0x22b7>
   25f8f:	41 0f b7 8c 79 dc 15 	movzwl 0x15dc(%r9,%rdi,2),%ecx
   25f96:	00 00 
   25f98:	39 e8                	cmp    %ebp,%eax
   25f9a:	72 0b                	jb     25fa7 <miniz_oxide::inflate::core::decompress+0x6d7>
   25f9c:	0f bf f1             	movswl %cx,%esi
   25f9f:	83 c5 01             	add    $0x1,%ebp
   25fa2:	66 85 f6             	test   %si,%si
   25fa5:	78 c9                	js     25f70 <miniz_oxide::inflate::core::decompress+0x6a0>
   25fa7:	66 85 c9             	test   %cx,%cx
   25faa:	0f 89 7f 01 00 00    	jns    2612f <miniz_oxide::inflate::core::decompress+0x85f>
   25fb0:	4d 39 f5             	cmp    %r14,%r13
   25fb3:	74 48                	je     25ffd <miniz_oxide::inflate::core::decompress+0x72d>
   25fb5:	4d 8d 46 01          	lea    0x1(%r14),%r8
   25fb9:	41 0f b6 2e          	movzbl (%r14),%ebp
   25fbd:	89 c1                	mov    %eax,%ecx
   25fbf:	48 d3 e5             	shl    %cl,%rbp
   25fc2:	48 09 d5             	or     %rdx,%rbp
   25fc5:	48 89 2c 24          	mov    %rbp,(%rsp)
   25fc9:	8d 50 08             	lea    0x8(%rax),%edx
   25fcc:	89 54 24 08          	mov    %edx,0x8(%rsp)
   25fd0:	83 fa 0f             	cmp    $0xf,%edx
   25fd3:	0f 83 46 01 00 00    	jae    2611f <miniz_oxide::inflate::core::decompress+0x84f>
   25fd9:	89 e9                	mov    %ebp,%ecx
   25fdb:	81 e1 ff 03 00 00    	and    $0x3ff,%ecx
   25fe1:	41 0f bf bc 49 dc 0d 	movswl 0xddc(%r9,%rcx,2),%edi
   25fe8:	00 00 
   25fea:	85 ff                	test   %edi,%edi
   25fec:	78 23                	js     26011 <miniz_oxide::inflate::core::decompress+0x741>
   25fee:	c1 ef 09             	shr    $0x9,%edi
   25ff1:	74 6c                	je     2605f <miniz_oxide::inflate::core::decompress+0x78f>
   25ff3:	39 fa                	cmp    %edi,%edx
   25ff5:	0f 83 24 01 00 00    	jae    2611f <miniz_oxide::inflate::core::decompress+0x84f>
   25ffb:	eb 62                	jmp    2605f <miniz_oxide::inflate::core::decompress+0x78f>
   25ffd:	44 8b 7c 24 2c       	mov    0x2c(%rsp),%r15d
   26002:	89 d8                	mov    %ebx,%eax
   26004:	84 c0                	test   %al,%al
   26006:	0f 85 fc 01 00 00    	jne    26208 <miniz_oxide::inflate::core::decompress+0x938>
   2600c:	e9 df fe ff ff       	jmpq   25ef0 <miniz_oxide::inflate::core::decompress+0x620>
   26011:	83 fa 0b             	cmp    $0xb,%edx
   26014:	72 49                	jb     2605f <miniz_oxide::inflate::core::decompress+0x78f>
   26016:	bb 0c 00 00 00       	mov    $0xc,%ebx
   2601b:	f7 d7                	not    %edi
   2601d:	8d 4b fe             	lea    -0x2(%rbx),%ecx
   26020:	48 89 ee             	mov    %rbp,%rsi
   26023:	48 d3 ee             	shr    %cl,%rsi
   26026:	83 e6 01             	and    $0x1,%esi
   26029:	01 fe                	add    %edi,%esi
   2602b:	48 63 fe             	movslq %esi,%rdi
   2602e:	81 ff 3f 02 00 00    	cmp    $0x23f,%edi
   26034:	0f 87 4d 1b 00 00    	ja     27b87 <miniz_oxide::inflate::core::decompress+0x22b7>
   2603a:	41 0f b7 8c 79 dc 15 	movzwl 0x15dc(%r9,%rdi,2),%ecx
   26041:	00 00 
   26043:	39 da                	cmp    %ebx,%edx
   26045:	72 0b                	jb     26052 <miniz_oxide::inflate::core::decompress+0x782>
   26047:	0f bf f9             	movswl %cx,%edi
   2604a:	83 c3 01             	add    $0x1,%ebx
   2604d:	66 85 ff             	test   %di,%di
   26050:	78 c9                	js     2601b <miniz_oxide::inflate::core::decompress+0x74b>
   26052:	66 85 c9             	test   %cx,%cx
   26055:	8b 5c 24 18          	mov    0x18(%rsp),%ebx
   26059:	0f 89 c0 00 00 00    	jns    2611f <miniz_oxide::inflate::core::decompress+0x84f>
   2605f:	4d 39 c5             	cmp    %r8,%r13
   26062:	0f 84 86 01 00 00    	je     261ee <miniz_oxide::inflate::core::decompress+0x91e>
   26068:	4d 8d 46 02          	lea    0x2(%r14),%r8
   2606c:	41 0f b6 76 01       	movzbl 0x1(%r14),%esi
   26071:	89 d1                	mov    %edx,%ecx
   26073:	48 d3 e6             	shl    %cl,%rsi
   26076:	48 09 f5             	or     %rsi,%rbp
   26079:	48 89 2c 24          	mov    %rbp,(%rsp)
   2607d:	8d 50 10             	lea    0x10(%rax),%edx
   26080:	89 54 24 08          	mov    %edx,0x8(%rsp)
   26084:	83 fa 0e             	cmp    $0xe,%edx
   26087:	0f 87 92 00 00 00    	ja     2611f <miniz_oxide::inflate::core::decompress+0x84f>
   2608d:	89 e9                	mov    %ebp,%ecx
   2608f:	81 e1 ff 03 00 00    	and    $0x3ff,%ecx
   26095:	41 0f bf bc 49 dc 0d 	movswl 0xddc(%r9,%rcx,2),%edi
   2609c:	00 00 
   2609e:	85 ff                	test   %edi,%edi
   260a0:	78 0b                	js     260ad <miniz_oxide::inflate::core::decompress+0x7dd>
   260a2:	c1 ef 09             	shr    $0x9,%edi
   260a5:	74 50                	je     260f7 <miniz_oxide::inflate::core::decompress+0x827>
   260a7:	39 fa                	cmp    %edi,%edx
   260a9:	73 74                	jae    2611f <miniz_oxide::inflate::core::decompress+0x84f>
   260ab:	eb 4a                	jmp    260f7 <miniz_oxide::inflate::core::decompress+0x827>
   260ad:	83 fa 0b             	cmp    $0xb,%edx
   260b0:	72 45                	jb     260f7 <miniz_oxide::inflate::core::decompress+0x827>
   260b2:	bb 0c 00 00 00       	mov    $0xc,%ebx
   260b7:	f7 d7                	not    %edi
   260b9:	8d 4b fe             	lea    -0x2(%rbx),%ecx
   260bc:	48 89 ee             	mov    %rbp,%rsi
   260bf:	48 d3 ee             	shr    %cl,%rsi
   260c2:	83 e6 01             	and    $0x1,%esi
   260c5:	01 fe                	add    %edi,%esi
   260c7:	48 63 fe             	movslq %esi,%rdi
   260ca:	81 ff 3f 02 00 00    	cmp    $0x23f,%edi
   260d0:	0f 87 b1 1a 00 00    	ja     27b87 <miniz_oxide::inflate::core::decompress+0x22b7>
   260d6:	41 0f b7 8c 79 dc 15 	movzwl 0x15dc(%r9,%rdi,2),%ecx
   260dd:	00 00 
   260df:	39 da                	cmp    %ebx,%edx
   260e1:	72 0b                	jb     260ee <miniz_oxide::inflate::core::decompress+0x81e>
   260e3:	0f bf f9             	movswl %cx,%edi
   260e6:	83 c3 01             	add    $0x1,%ebx
   260e9:	66 85 ff             	test   %di,%di
   260ec:	78 c9                	js     260b7 <miniz_oxide::inflate::core::decompress+0x7e7>
   260ee:	66 85 c9             	test   %cx,%cx
   260f1:	8b 5c 24 18          	mov    0x18(%rsp),%ebx
   260f5:	79 28                	jns    2611f <miniz_oxide::inflate::core::decompress+0x84f>
   260f7:	4d 39 c5             	cmp    %r8,%r13
   260fa:	0f 84 ee 00 00 00    	je     261ee <miniz_oxide::inflate::core::decompress+0x91e>
   26100:	41 0f b6 76 02       	movzbl 0x2(%r14),%esi
   26105:	49 83 c6 03          	add    $0x3,%r14
   26109:	89 d1                	mov    %edx,%ecx
   2610b:	48 d3 e6             	shl    %cl,%rsi
   2610e:	48 09 f5             	or     %rsi,%rbp
   26111:	48 89 2c 24          	mov    %rbp,(%rsp)
   26115:	8d 50 18             	lea    0x18(%rax),%edx
   26118:	89 54 24 08          	mov    %edx,0x8(%rsp)
   2611c:	4d 89 f0             	mov    %r14,%r8
   2611f:	4d 89 c6             	mov    %r8,%r14
   26122:	89 d0                	mov    %edx,%eax
   26124:	48 89 ea             	mov    %rbp,%rdx
   26127:	44 8b 84 24 18 01 00 	mov    0x118(%rsp),%r8d
   2612e:	00 
   2612f:	89 d1                	mov    %edx,%ecx
   26131:	81 e1 ff 03 00 00    	and    $0x3ff,%ecx
   26137:	41 0f bf b4 49 dc 0d 	movswl 0xddc(%r9,%rcx,2),%esi
   2613e:	00 00 
   26140:	85 f6                	test   %esi,%esi
   26142:	78 0d                	js     26151 <miniz_oxide::inflate::core::decompress+0x881>
   26144:	89 f1                	mov    %esi,%ecx
   26146:	c1 e9 09             	shr    $0x9,%ecx
   26149:	81 e6 ff 01 00 00    	and    $0x1ff,%esi
   2614f:	eb 3b                	jmp    2618c <miniz_oxide::inflate::core::decompress+0x8bc>
   26151:	b9 0a 00 00 00       	mov    $0xa,%ecx
   26156:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2615d:	00 00 00 
   26160:	f7 d6                	not    %esi
   26162:	48 89 d7             	mov    %rdx,%rdi
   26165:	48 d3 ef             	shr    %cl,%rdi
   26168:	83 e7 01             	and    $0x1,%edi
   2616b:	01 f7                	add    %esi,%edi
   2616d:	48 63 ff             	movslq %edi,%rdi
   26170:	81 ff 3f 02 00 00    	cmp    $0x23f,%edi
   26176:	0f 87 ee 18 00 00    	ja     27a6a <miniz_oxide::inflate::core::decompress+0x219a>
   2617c:	41 0f bf b4 79 dc 15 	movswl 0x15dc(%r9,%rdi,2),%esi
   26183:	00 00 
   26185:	83 c1 01             	add    $0x1,%ecx
   26188:	85 f6                	test   %esi,%esi
   2618a:	78 d4                	js     26160 <miniz_oxide::inflate::core::decompress+0x890>
   2618c:	85 c9                	test   %ecx,%ecx
   2618e:	0f 84 42 14 00 00    	je     275d6 <miniz_oxide::inflate::core::decompress+0x1d06>
   26194:	48 d3 ea             	shr    %cl,%rdx
   26197:	48 89 14 24          	mov    %rdx,(%rsp)
   2619b:	29 c8                	sub    %ecx,%eax
   2619d:	89 44 24 08          	mov    %eax,0x8(%rsp)
   261a1:	66 b8 01 21          	mov    $0x2101,%ax
   261a5:	83 fe 1d             	cmp    $0x1d,%esi
   261a8:	7f 30                	jg     261da <miniz_oxide::inflate::core::decompress+0x90a>
   261aa:	83 e6 1f             	and    $0x1f,%esi
   261ad:	48 8d 05 f8 26 01 00 	lea    0x126f8(%rip),%rax        # 388ac <str.6+0x158c>
   261b4:	0f b6 04 06          	movzbl (%rsi,%rax,1),%eax
   261b8:	85 c0                	test   %eax,%eax
   261ba:	89 44 24 14          	mov    %eax,0x14(%rsp)
   261be:	48 8d 05 47 27 01 00 	lea    0x12747(%rip),%rax        # 3890c <str.6+0x15ec>
   261c5:	0f b7 04 70          	movzwl (%rax,%rsi,2),%eax
   261c9:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   261cd:	b9 01 16 00 00       	mov    $0x1601,%ecx
   261d2:	b8 01 10 00 00       	mov    $0x1001,%eax
   261d7:	0f 44 c1             	cmove  %ecx,%eax
   261da:	44 0f b7 f8          	movzwl %ax,%r15d
   261de:	41 81 e7 00 37 00 00 	and    $0x3700,%r15d
   261e5:	84 c0                	test   %al,%al
   261e7:	75 1f                	jne    26208 <miniz_oxide::inflate::core::decompress+0x938>
   261e9:	e9 02 fd ff ff       	jmpq   25ef0 <miniz_oxide::inflate::core::decompress+0x620>
   261ee:	4d 89 c6             	mov    %r8,%r14
   261f1:	44 8b 7c 24 2c       	mov    0x2c(%rsp),%r15d
   261f6:	89 d8                	mov    %ebx,%eax
   261f8:	44 8b 84 24 18 01 00 	mov    0x118(%rsp),%r8d
   261ff:	00 
   26200:	84 c0                	test   %al,%al
   26202:	0f 84 e8 fc ff ff    	je     25ef0 <miniz_oxide::inflate::core::decompress+0x620>
   26208:	3c 01                	cmp    $0x1,%al
   2620a:	0f 85 0a 16 00 00    	jne    2781a <miniz_oxide::inflate::core::decompress+0x1f4a>
   26210:	e9 91 0b 00 00       	jmpq   26da6 <miniz_oxide::inflate::core::decompress+0x14d6>
   26215:	8b 7c 24 18          	mov    0x18(%rsp),%edi
   26219:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
   2621d:	eb 0a                	jmp    26229 <miniz_oxide::inflate::core::decompress+0x959>
   2621f:	90                   	nop
   26220:	41 89 ff             	mov    %edi,%r15d
   26223:	41 f6 c7 02          	test   $0x2,%r15b
   26227:	75 29                	jne    26252 <miniz_oxide::inflate::core::decompress+0x982>
   26229:	83 f9 03             	cmp    $0x3,%ecx
   2622c:	73 2f                	jae    2625d <miniz_oxide::inflate::core::decompress+0x98d>
   2622e:	4d 39 f5             	cmp    %r14,%r13
   26231:	74 ed                	je     26220 <miniz_oxide::inflate::core::decompress+0x950>
   26233:	41 0f b6 06          	movzbl (%r14),%eax
   26237:	48 d3 e0             	shl    %cl,%rax
   2623a:	48 09 04 24          	or     %rax,(%rsp)
   2623e:	49 83 c6 01          	add    $0x1,%r14
   26242:	83 c1 08             	add    $0x8,%ecx
   26245:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   26249:	45 31 ff             	xor    %r15d,%r15d
   2624c:	41 f6 c7 02          	test   $0x2,%r15b
   26250:	74 d7                	je     26229 <miniz_oxide::inflate::core::decompress+0x959>
   26252:	45 84 ff             	test   %r15b,%r15b
   26255:	0f 85 49 01 00 00    	jne    263a4 <miniz_oxide::inflate::core::decompress+0xad4>
   2625b:	eb bc                	jmp    26219 <miniz_oxide::inflate::core::decompress+0x949>
   2625d:	48 8b 14 24          	mov    (%rsp),%rdx
   26261:	48 89 d0             	mov    %rdx,%rax
   26264:	48 c1 e8 03          	shr    $0x3,%rax
   26268:	48 89 04 24          	mov    %rax,(%rsp)
   2626c:	83 c1 fd             	add    $0xfffffffd,%ecx
   2626f:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   26273:	89 d0                	mov    %edx,%eax
   26275:	83 e0 01             	and    $0x1,%eax
   26278:	41 89 41 18          	mov    %eax,0x18(%r9)
   2627c:	d1 ea                	shr    %edx
   2627e:	83 e2 03             	and    $0x3,%edx
   26281:	41 89 51 1c          	mov    %edx,0x1c(%r9)
   26285:	66 b9 01 00          	mov    $0x1,%cx
   26289:	66 b8 00 04          	mov    $0x400,%ax
   2628d:	48 8d 35 10 25 01 00 	lea    0x12510(%rip),%rsi        # 387a4 <str.6+0x1484>
   26294:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
   26298:	48 01 f2             	add    %rsi,%rdx
   2629b:	ff e2                	jmpq   *%rdx
   2629d:	48 b8 20 01 00 00 20 	movabs $0x2000000120,%rax
   262a4:	00 00 00 
   262a7:	49 89 41 30          	mov    %rax,0x30(%r9)
   262ab:	0f 28 05 0e 24 01 00 	movaps 0x1240e(%rip),%xmm0        # 386c0 <str.6+0x13a0>
   262b2:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
   262b9:	00 
   262ba:	0f 11 40 10          	movups %xmm0,0x10(%rax)
   262be:	0f 11 40 20          	movups %xmm0,0x20(%rax)
   262c2:	0f 11 40 30          	movups %xmm0,0x30(%rax)
   262c6:	0f 11 40 40          	movups %xmm0,0x40(%rax)
   262ca:	0f 11 40 50          	movups %xmm0,0x50(%rax)
   262ce:	0f 11 40 60          	movups %xmm0,0x60(%rax)
   262d2:	0f 11 40 70          	movups %xmm0,0x70(%rax)
   262d6:	0f 11 80 80 00 00 00 	movups %xmm0,0x80(%rax)
   262dd:	0f 11 00             	movups %xmm0,(%rax)
   262e0:	0f 28 05 e9 23 01 00 	movaps 0x123e9(%rip),%xmm0        # 386d0 <str.6+0x13b0>
   262e7:	48 8b 84 24 b8 00 00 	mov    0xb8(%rsp),%rax
   262ee:	00 
   262ef:	0f 11 40 60          	movups %xmm0,0x60(%rax)
   262f3:	0f 11 40 50          	movups %xmm0,0x50(%rax)
   262f7:	0f 11 40 40          	movups %xmm0,0x40(%rax)
   262fb:	0f 11 40 30          	movups %xmm0,0x30(%rax)
   262ff:	0f 11 40 20          	movups %xmm0,0x20(%rax)
   26303:	0f 11 40 10          	movups %xmm0,0x10(%rax)
   26307:	0f 11 00             	movups %xmm0,(%rax)
   2630a:	48 b8 07 07 07 07 07 	movabs $0x707070707070707,%rax
   26311:	07 07 07 
   26314:	48 8b 8c 24 b0 00 00 	mov    0xb0(%rsp),%rcx
   2631b:	00 
   2631c:	48 89 41 10          	mov    %rax,0x10(%rcx)
   26320:	0f 28 05 b9 23 01 00 	movaps 0x123b9(%rip),%xmm0        # 386e0 <str.6+0x13c0>
   26327:	0f 11 01             	movups %xmm0,(%rcx)
   2632a:	48 b8 08 08 08 08 08 	movabs $0x808080808080808,%rax
   26331:	08 08 08 
   26334:	49 89 81 d4 0d 00 00 	mov    %rax,0xdd4(%r9)
   2633b:	0f 28 05 ae 23 01 00 	movaps 0x123ae(%rip),%xmm0        # 386f0 <str.6+0x13d0>
   26342:	48 8b 84 24 90 00 00 	mov    0x90(%rsp),%rax
   26349:	00 
   2634a:	0f 11 40 10          	movups %xmm0,0x10(%rax)
   2634e:	0f 11 00             	movups %xmm0,(%rax)
   26351:	48 89 e6             	mov    %rsp,%rsi
   26354:	4c 89 cf             	mov    %r9,%rdi
   26357:	4c 89 d3             	mov    %r10,%rbx
   2635a:	e8 11 ea ff ff       	callq  24d70 <miniz_oxide::inflate::core::init_tree>
   2635f:	49 89 da             	mov    %rbx,%r10
   26362:	8b 7c 24 18          	mov    0x18(%rsp),%edi
   26366:	44 8b 84 24 18 01 00 	mov    0x118(%rsp),%r8d
   2636d:	00 
   2636e:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   26373:	4c 8b 5c 24 40       	mov    0x40(%rsp),%r11
   26378:	0f b6 c8             	movzbl %al,%ecx
   2637b:	25 00 ff 00 00       	and    $0xff00,%eax
   26380:	eb 12                	jmp    26394 <miniz_oxide::inflate::core::decompress+0xac4>
   26382:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%rsp)
   26389:	00 
   2638a:	66 b8 00 08          	mov    $0x800,%ax
   2638e:	eb 04                	jmp    26394 <miniz_oxide::inflate::core::decompress+0xac4>
   26390:	66 b8 00 19          	mov    $0x1900,%ax
   26394:	44 0f b7 f9          	movzwl %cx,%r15d
   26398:	41 09 c7             	or     %eax,%r15d
   2639b:	45 84 ff             	test   %r15b,%r15b
   2639e:	0f 84 75 fe ff ff    	je     26219 <miniz_oxide::inflate::core::decompress+0x949>
   263a4:	41 80 ff 01          	cmp    $0x1,%r15b
   263a8:	0f 85 4e 14 00 00    	jne    277fc <miniz_oxide::inflate::core::decompress+0x1f2c>
   263ae:	e9 7e 0c 00 00       	jmpq   27031 <miniz_oxide::inflate::core::decompress+0x1761>
   263b3:	4c 89 ed             	mov    %r13,%rbp
   263b6:	4c 29 f5             	sub    %r14,%rbp
   263b9:	0f 84 ae 14 00 00    	je     2786d <miniz_oxide::inflate::core::decompress+0x1f9d>
   263bf:	4c 89 64 24 50       	mov    %r12,0x50(%rsp)
   263c4:	4c 89 db             	mov    %r11,%rbx
   263c7:	4c 29 d3             	sub    %r10,%rbx
   263ca:	48 39 eb             	cmp    %rbp,%rbx
   263cd:	48 0f 47 dd          	cmova  %rbp,%rbx
   263d1:	44 8b 7c 24 10       	mov    0x10(%rsp),%r15d
   263d6:	4c 39 fb             	cmp    %r15,%rbx
   263d9:	49 0f 47 df          	cmova  %r15,%rbx
   263dd:	48 39 dd             	cmp    %rbx,%rbp
   263e0:	0f 82 c9 17 00 00    	jb     27baf <miniz_oxide::inflate::core::decompress+0x22df>
   263e6:	49 89 dc             	mov    %rbx,%r12
   263e9:	4d 01 d4             	add    %r10,%r12
   263ec:	0f 82 d2 17 00 00    	jb     27bc4 <miniz_oxide::inflate::core::decompress+0x22f4>
   263f2:	4d 39 dc             	cmp    %r11,%r12
   263f5:	0f 87 de 17 00 00    	ja     27bd9 <miniz_oxide::inflate::core::decompress+0x2309>
   263fb:	4c 03 54 24 30       	add    0x30(%rsp),%r10
   26400:	4c 89 d7             	mov    %r10,%rdi
   26403:	4c 89 f6             	mov    %r14,%rsi
   26406:	48 89 da             	mov    %rbx,%rdx
   26409:	ff 15 e9 f8 01 00    	callq  *0x1f8e9(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
   2640f:	48 8d 43 ff          	lea    -0x1(%rbx),%rax
   26413:	49 01 de             	add    %rbx,%r14
   26416:	48 39 c5             	cmp    %rax,%rbp
   26419:	4d 0f 46 f5          	cmovbe %r13,%r14
   2641d:	41 29 df             	sub    %ebx,%r15d
   26420:	44 89 7c 24 10       	mov    %r15d,0x10(%rsp)
   26425:	41 b7 06             	mov    $0x6,%r15b
   26428:	4d 89 e2             	mov    %r12,%r10
   2642b:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   26430:	4c 8b 5c 24 40       	mov    0x40(%rsp),%r11
   26435:	e9 8c 08 00 00       	jmpq   26cc6 <miniz_oxide::inflate::core::decompress+0x13f6>
   2643a:	4d 39 f5             	cmp    %r14,%r13
   2643d:	0f 84 25 14 00 00    	je     27868 <miniz_oxide::inflate::core::decompress+0x1f98>
   26443:	41 0f b6 06          	movzbl (%r14),%eax
   26447:	49 83 c6 01          	add    $0x1,%r14
   2644b:	41 89 41 0c          	mov    %eax,0xc(%r9)
   2644f:	41 b7 02             	mov    $0x2,%r15b
   26452:	e9 d3 f5 ff ff       	jmpq   25a2a <miniz_oxide::inflate::core::decompress+0x15a>
   26457:	8b 54 24 18          	mov    0x18(%rsp),%edx
   2645b:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
   2645f:	e9 12 00 00 00       	jmpq   26476 <miniz_oxide::inflate::core::decompress+0xba6>
   26464:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2646b:	00 00 00 
   2646e:	66 90                	xchg   %ax,%ax
   26470:	89 d0                	mov    %edx,%eax
   26472:	a8 02                	test   $0x2,%al
   26474:	75 2a                	jne    264a0 <miniz_oxide::inflate::core::decompress+0xbd0>
   26476:	83 f9 08             	cmp    $0x8,%ecx
   26479:	0f 83 43 0a 00 00    	jae    26ec2 <miniz_oxide::inflate::core::decompress+0x15f2>
   2647f:	4d 39 f5             	cmp    %r14,%r13
   26482:	74 ec                	je     26470 <miniz_oxide::inflate::core::decompress+0xba0>
   26484:	41 0f b6 06          	movzbl (%r14),%eax
   26488:	48 d3 e0             	shl    %cl,%rax
   2648b:	48 09 04 24          	or     %rax,(%rsp)
   2648f:	49 83 c6 01          	add    $0x1,%r14
   26493:	83 c1 08             	add    $0x8,%ecx
   26496:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   2649a:	31 c0                	xor    %eax,%eax
   2649c:	a8 02                	test   $0x2,%al
   2649e:	74 d6                	je     26476 <miniz_oxide::inflate::core::decompress+0xba6>
   264a0:	84 c0                	test   %al,%al
   264a2:	74 b7                	je     2645b <miniz_oxide::inflate::core::decompress+0xb8b>
   264a4:	e9 d0 13 00 00       	jmpq   27879 <miniz_oxide::inflate::core::decompress+0x1fa9>
   264a9:	8b 7c 24 18          	mov    0x18(%rsp),%edi
   264ad:	8b 44 24 10          	mov    0x10(%rsp),%eax
   264b1:	48 83 f8 04          	cmp    $0x4,%rax
   264b5:	0f 83 8f 10 00 00    	jae    2754a <miniz_oxide::inflate::core::decompress+0x1c7a>
   264bb:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
   264bf:	85 c9                	test   %ecx,%ecx
   264c1:	75 26                	jne    264e9 <miniz_oxide::inflate::core::decompress+0xc19>
   264c3:	4d 39 f5             	cmp    %r14,%r13
   264c6:	0f 84 7f 00 00 00    	je     2654b <miniz_oxide::inflate::core::decompress+0xc7b>
   264cc:	41 8a 0e             	mov    (%r14),%cl
   264cf:	49 83 c6 01          	add    $0x1,%r14
   264d3:	41 88 8c 01 1d 29 00 	mov    %cl,0x291d(%r9,%rax,1)
   264da:	00 
   264db:	e9 57 00 00 00       	jmpq   26537 <miniz_oxide::inflate::core::decompress+0xc67>
   264e0:	41 89 ff             	mov    %edi,%r15d
   264e3:	41 f6 c7 02          	test   $0x2,%r15b
   264e7:	75 29                	jne    26512 <miniz_oxide::inflate::core::decompress+0xc42>
   264e9:	83 f9 08             	cmp    $0x8,%ecx
   264ec:	73 2b                	jae    26519 <miniz_oxide::inflate::core::decompress+0xc49>
   264ee:	4d 39 f5             	cmp    %r14,%r13
   264f1:	74 ed                	je     264e0 <miniz_oxide::inflate::core::decompress+0xc10>
   264f3:	41 0f b6 16          	movzbl (%r14),%edx
   264f7:	48 d3 e2             	shl    %cl,%rdx
   264fa:	48 09 14 24          	or     %rdx,(%rsp)
   264fe:	49 83 c6 01          	add    $0x1,%r14
   26502:	83 c1 08             	add    $0x8,%ecx
   26505:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   26509:	45 31 ff             	xor    %r15d,%r15d
   2650c:	41 f6 c7 02          	test   $0x2,%r15b
   26510:	74 d7                	je     264e9 <miniz_oxide::inflate::core::decompress+0xc19>
   26512:	45 84 ff             	test   %r15b,%r15b
   26515:	75 40                	jne    26557 <miniz_oxide::inflate::core::decompress+0xc87>
   26517:	eb 94                	jmp    264ad <miniz_oxide::inflate::core::decompress+0xbdd>
   26519:	48 8b 14 24          	mov    (%rsp),%rdx
   2651d:	48 89 d6             	mov    %rdx,%rsi
   26520:	48 c1 ee 08          	shr    $0x8,%rsi
   26524:	48 89 34 24          	mov    %rsi,(%rsp)
   26528:	83 c1 f8             	add    $0xfffffff8,%ecx
   2652b:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   2652f:	41 88 94 01 1d 29 00 	mov    %dl,0x291d(%r9,%rax,1)
   26536:	00 
   26537:	83 c0 01             	add    $0x1,%eax
   2653a:	89 44 24 10          	mov    %eax,0x10(%rsp)
   2653e:	45 31 ff             	xor    %r15d,%r15d
   26541:	45 84 ff             	test   %r15b,%r15b
   26544:	75 11                	jne    26557 <miniz_oxide::inflate::core::decompress+0xc87>
   26546:	e9 62 ff ff ff       	jmpq   264ad <miniz_oxide::inflate::core::decompress+0xbdd>
   2654b:	41 89 ff             	mov    %edi,%r15d
   2654e:	45 84 ff             	test   %r15b,%r15b
   26551:	0f 84 56 ff ff ff    	je     264ad <miniz_oxide::inflate::core::decompress+0xbdd>
   26557:	41 80 ff 01          	cmp    $0x1,%r15b
   2655b:	0f 85 c8 12 00 00    	jne    27829 <miniz_oxide::inflate::core::decompress+0x1f59>
   26561:	e9 cb 0a 00 00       	jmpq   27031 <miniz_oxide::inflate::core::decompress+0x1761>
   26566:	41 b7 03             	mov    $0x3,%r15b
   26569:	41 83 79 18 00       	cmpl   $0x0,0x18(%r9)
   2656e:	0f 84 b6 f4 ff ff    	je     25a2a <miniz_oxide::inflate::core::decompress+0x15a>
   26574:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
   26578:	89 c8                	mov    %ecx,%eax
   2657a:	83 e0 07             	and    $0x7,%eax
   2657d:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
   26582:	8b 7c 24 18          	mov    0x18(%rsp),%edi
   26586:	e9 10 00 00 00       	jmpq   2659b <miniz_oxide::inflate::core::decompress+0xccb>
   2658b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   26590:	89 fa                	mov    %edi,%edx
   26592:	f6 c2 02             	test   $0x2,%dl
   26595:	0f 85 b4 0a 00 00    	jne    2704f <miniz_oxide::inflate::core::decompress+0x177f>
   2659b:	89 ca                	mov    %ecx,%edx
   2659d:	29 c2                	sub    %eax,%edx
   2659f:	0f 83 9e 0a 00 00    	jae    27043 <miniz_oxide::inflate::core::decompress+0x1773>
   265a5:	4d 39 f5             	cmp    %r14,%r13
   265a8:	74 e6                	je     26590 <miniz_oxide::inflate::core::decompress+0xcc0>
   265aa:	41 0f b6 16          	movzbl (%r14),%edx
   265ae:	48 d3 e2             	shl    %cl,%rdx
   265b1:	48 09 14 24          	or     %rdx,(%rsp)
   265b5:	49 83 c6 01          	add    $0x1,%r14
   265b9:	83 c1 08             	add    $0x8,%ecx
   265bc:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   265c0:	31 d2                	xor    %edx,%edx
   265c2:	f6 c2 02             	test   $0x2,%dl
   265c5:	74 d4                	je     2659b <miniz_oxide::inflate::core::decompress+0xccb>
   265c7:	e9 83 0a 00 00       	jmpq   2704f <miniz_oxide::inflate::core::decompress+0x177f>
   265cc:	8b 44 24 10          	mov    0x10(%rsp),%eax
   265d0:	89 c1                	mov    %eax,%ecx
   265d2:	81 e1 ff 01 00 00    	and    $0x1ff,%ecx
   265d8:	89 4c 24 10          	mov    %ecx,0x10(%rsp)
   265dc:	41 b7 14             	mov    $0x14,%r15b
   265df:	81 f9 00 01 00 00    	cmp    $0x100,%ecx
   265e5:	0f 84 3f f4 ff ff    	je     25a2a <miniz_oxide::inflate::core::decompress+0x15a>
   265eb:	41 b7 20             	mov    $0x20,%r15b
   265ee:	81 f9 1d 01 00 00    	cmp    $0x11d,%ecx
   265f4:	0f 87 30 f4 ff ff    	ja     25a2a <miniz_oxide::inflate::core::decompress+0x15a>
   265fa:	83 c0 ff             	add    $0xffffffff,%eax
   265fd:	83 e0 1f             	and    $0x1f,%eax
   26600:	48 8d 0d 85 22 01 00 	lea    0x12285(%rip),%rcx        # 3888c <str.6+0x156c>
   26607:	0f b6 0c 08          	movzbl (%rax,%rcx,1),%ecx
   2660b:	85 c9                	test   %ecx,%ecx
   2660d:	41 0f 94 c7          	sete   %r15b
   26611:	89 4c 24 14          	mov    %ecx,0x14(%rsp)
   26615:	48 8d 0d b0 22 01 00 	lea    0x122b0(%rip),%rcx        # 388cc <str.6+0x15ac>
   2661c:	0f b7 04 41          	movzwl (%rcx,%rax,2),%eax
   26620:	89 44 24 10          	mov    %eax,0x10(%rsp)
   26624:	41 80 cf 0e          	or     $0xe,%r15b
   26628:	e9 fd f3 ff ff       	jmpq   25a2a <miniz_oxide::inflate::core::decompress+0x15a>
   2662d:	41 b7 14             	mov    $0x14,%r15b
   26630:	83 7c 24 10 00       	cmpl   $0x0,0x10(%rsp)
   26635:	0f 84 ef f3 ff ff    	je     25a2a <miniz_oxide::inflate::core::decompress+0x15a>
   2663b:	41 b7 07             	mov    $0x7,%r15b
   2663e:	4d 39 da             	cmp    %r11,%r10
   26641:	0f 85 e3 f3 ff ff    	jne    25a2a <miniz_oxide::inflate::core::decompress+0x15a>
   26647:	e9 86 12 00 00       	jmpq   278d2 <miniz_oxide::inflate::core::decompress+0x2002>
   2664c:	8b 44 24 10          	mov    0x10(%rsp),%eax
   26650:	41 b7 15             	mov    $0x15,%r15b
   26653:	3d ff 00 00 00       	cmp    $0xff,%eax
   26658:	0f 87 cc f3 ff ff    	ja     25a2a <miniz_oxide::inflate::core::decompress+0x15a>
   2665e:	4d 39 da             	cmp    %r11,%r10
   26661:	0f 84 70 12 00 00    	je     278d7 <miniz_oxide::inflate::core::decompress+0x2007>
   26667:	0f 83 11 14 00 00    	jae    27a7e <miniz_oxide::inflate::core::decompress+0x21ae>
   2666d:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   26672:	42 88 04 11          	mov    %al,(%rcx,%r10,1)
   26676:	49 83 c2 01          	add    $0x1,%r10
   2667a:	41 b7 0c             	mov    $0xc,%r15b
   2667d:	e9 a8 f3 ff ff       	jmpq   25a2a <miniz_oxide::inflate::core::decompress+0x15a>
   26682:	8b 5c 24 18          	mov    0x18(%rsp),%ebx
   26686:	8b 74 24 10          	mov    0x10(%rsp),%esi
   2668a:	48 83 fe 03          	cmp    $0x3,%rsi
   2668e:	0f 83 fd 0e 00 00    	jae    27591 <miniz_oxide::inflate::core::decompress+0x1cc1>
   26694:	48 b8 05 00 00 00 05 	movabs $0x500000005,%rax
   2669b:	00 00 00 
   2669e:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   266a3:	c7 44 24 78 04 00 00 	movl   $0x4,0x78(%rsp)
   266aa:	00 
   266ab:	8b 44 b4 70          	mov    0x70(%rsp,%rsi,4),%eax
   266af:	8b 54 24 08          	mov    0x8(%rsp),%edx
   266b3:	e9 11 00 00 00       	jmpq   266c9 <miniz_oxide::inflate::core::decompress+0xdf9>
   266b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   266bf:	00 
   266c0:	41 89 df             	mov    %ebx,%r15d
   266c3:	41 f6 c7 02          	test   $0x2,%r15b
   266c7:	75 2a                	jne    266f3 <miniz_oxide::inflate::core::decompress+0xe23>
   266c9:	39 c2                	cmp    %eax,%edx
   266cb:	73 2d                	jae    266fa <miniz_oxide::inflate::core::decompress+0xe2a>
   266cd:	4d 39 f5             	cmp    %r14,%r13
   266d0:	74 ee                	je     266c0 <miniz_oxide::inflate::core::decompress+0xdf0>
   266d2:	41 0f b6 3e          	movzbl (%r14),%edi
   266d6:	89 d1                	mov    %edx,%ecx
   266d8:	48 d3 e7             	shl    %cl,%rdi
   266db:	48 09 3c 24          	or     %rdi,(%rsp)
   266df:	49 83 c6 01          	add    $0x1,%r14
   266e3:	83 c2 08             	add    $0x8,%edx
   266e6:	89 54 24 08          	mov    %edx,0x8(%rsp)
   266ea:	45 31 ff             	xor    %r15d,%r15d
   266ed:	41 f6 c7 02          	test   $0x2,%r15b
   266f1:	74 d6                	je     266c9 <miniz_oxide::inflate::core::decompress+0xdf9>
   266f3:	45 84 ff             	test   %r15b,%r15b
   266f6:	75 50                	jne    26748 <miniz_oxide::inflate::core::decompress+0xe78>
   266f8:	eb 8c                	jmp    26686 <miniz_oxide::inflate::core::decompress+0xdb6>
   266fa:	48 8b 2c 24          	mov    (%rsp),%rbp
   266fe:	48 89 ef             	mov    %rbp,%rdi
   26701:	89 c1                	mov    %eax,%ecx
   26703:	48 d3 ef             	shr    %cl,%rdi
   26706:	48 89 3c 24          	mov    %rdi,(%rsp)
   2670a:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   26711:	48 d3 e7             	shl    %cl,%rdi
   26714:	29 c2                	sub    %eax,%edx
   26716:	89 54 24 08          	mov    %edx,0x8(%rsp)
   2671a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2671f:	31 f8                	xor    %edi,%eax
   26721:	21 c5                	and    %eax,%ebp
   26723:	48 8d 05 22 22 01 00 	lea    0x12222(%rip),%rax        # 3894c <str.6+0x162c>
   2672a:	0f b7 04 70          	movzwl (%rax,%rsi,2),%eax
   2672e:	01 e8                	add    %ebp,%eax
   26730:	41 89 44 b1 30       	mov    %eax,0x30(%r9,%rsi,4)
   26735:	8d 46 01             	lea    0x1(%rsi),%eax
   26738:	89 44 24 10          	mov    %eax,0x10(%rsp)
   2673c:	45 31 ff             	xor    %r15d,%r15d
   2673f:	45 84 ff             	test   %r15b,%r15b
   26742:	0f 84 3e ff ff ff    	je     26686 <miniz_oxide::inflate::core::decompress+0xdb6>
   26748:	41 80 ff 01          	cmp    $0x1,%r15b
   2674c:	0f 85 e6 10 00 00    	jne    27838 <miniz_oxide::inflate::core::decompress+0x1f68>
   26752:	e9 da 08 00 00       	jmpq   27031 <miniz_oxide::inflate::core::decompress+0x1761>
   26757:	8b 5c 24 18          	mov    0x18(%rsp),%ebx
   2675b:	8b 7c 24 10          	mov    0x10(%rsp),%edi
   2675f:	45 8b 79 30          	mov    0x30(%r9),%r15d
   26763:	41 8b 69 34          	mov    0x34(%r9),%ebp
   26767:	41 8d 04 2f          	lea    (%r15,%rbp,1),%eax
   2676b:	39 c7                	cmp    %eax,%edi
   2676d:	73 51                	jae    267c0 <miniz_oxide::inflate::core::decompress+0xef0>
   2676f:	8b 44 24 08          	mov    0x8(%rsp),%eax
   26773:	48 83 f8 0f          	cmp    $0xf,%rax
   26777:	0f 83 12 01 00 00    	jae    2688f <miniz_oxide::inflate::core::decompress+0xfbf>
   2677d:	4c 89 e9             	mov    %r13,%rcx
   26780:	4c 29 f1             	sub    %r14,%rcx
   26783:	48 83 f9 01          	cmp    $0x1,%rcx
   26787:	0f 87 08 01 00 00    	ja     26895 <miniz_oxide::inflate::core::decompress+0xfc5>
   2678d:	48 8b 14 24          	mov    (%rsp),%rdx
   26791:	89 d1                	mov    %edx,%ecx
   26793:	81 e1 ff 03 00 00    	and    $0x3ff,%ecx
   26799:	41 0f bf b4 49 7c 1b 	movswl 0x1b7c(%r9,%rcx,2),%esi
   267a0:	00 00 
   267a2:	85 f6                	test   %esi,%esi
   267a4:	0f 88 17 02 00 00    	js     269c1 <miniz_oxide::inflate::core::decompress+0x10f1>
   267aa:	c1 ee 09             	shr    $0x9,%esi
   267ad:	0f 84 5e 02 00 00    	je     26a11 <miniz_oxide::inflate::core::decompress+0x1141>
   267b3:	39 f0                	cmp    %esi,%eax
   267b5:	0f 83 f6 00 00 00    	jae    268b1 <miniz_oxide::inflate::core::decompress+0xfe1>
   267bb:	e9 51 02 00 00       	jmpq   26a11 <miniz_oxide::inflate::core::decompress+0x1141>
   267c0:	39 c7                	cmp    %eax,%edi
   267c2:	0f 85 3c 0e 00 00    	jne    27604 <miniz_oxide::inflate::core::decompress+0x1d34>
   267c8:	4c 89 54 24 48       	mov    %r10,0x48(%rsp)
   267cd:	41 81 ff 21 01 00 00 	cmp    $0x121,%r15d
   267d4:	0f 83 d6 12 00 00    	jae    27ab0 <miniz_oxide::inflate::core::decompress+0x21e0>
   267da:	4c 89 e3             	mov    %r12,%rbx
   267dd:	49 89 fc             	mov    %rdi,%r12
   267e0:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   267e7:	00 
   267e8:	48 8b b4 24 c8 00 00 	mov    0xc8(%rsp),%rsi
   267ef:	00 
   267f0:	4c 89 fa             	mov    %r15,%rdx
   267f3:	ff 15 ff f4 01 00    	callq  *0x1f4ff(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
   267f9:	81 fd 21 01 00 00    	cmp    $0x121,%ebp
   267ff:	0f 83 c2 12 00 00    	jae    27ac7 <miniz_oxide::inflate::core::decompress+0x21f7>
   26805:	4c 89 e7             	mov    %r12,%rdi
   26808:	44 39 ff             	cmp    %r15d,%edi
   2680b:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   26810:	0f 82 c8 12 00 00    	jb     27ade <miniz_oxide::inflate::core::decompress+0x220e>
   26816:	81 ff c9 01 00 00    	cmp    $0x1c9,%edi
   2681c:	0f 87 d1 12 00 00    	ja     27af3 <miniz_oxide::inflate::core::decompress+0x2223>
   26822:	4c 29 ff             	sub    %r15,%rdi
   26825:	48 39 ef             	cmp    %rbp,%rdi
   26828:	0f 85 d9 12 00 00    	jne    27b07 <miniz_oxide::inflate::core::decompress+0x2237>
   2682e:	49 89 dc             	mov    %rbx,%r12
   26831:	4a 8d 34 38          	lea    (%rax,%r15,1),%rsi
   26835:	48 81 c6 21 29 00 00 	add    $0x2921,%rsi
   2683c:	48 8b bc 24 90 00 00 	mov    0x90(%rsp),%rdi
   26843:	00 
   26844:	48 89 ea             	mov    %rbp,%rdx
   26847:	ff 15 ab f4 01 00    	callq  *0x1f4ab(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
   2684d:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   26852:	83 40 1c ff          	addl   $0xffffffff,0x1c(%rax)
   26856:	48 89 e6             	mov    %rsp,%rsi
   26859:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   2685e:	e8 0d e5 ff ff       	callq  24d70 <miniz_oxide::inflate::core::init_tree>
   26863:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   26868:	41 89 c7             	mov    %eax,%r15d
   2686b:	4c 8b 5c 24 40       	mov    0x40(%rsp),%r11
   26870:	44 8b 84 24 18 01 00 	mov    0x118(%rsp),%r8d
   26877:	00 
   26878:	4c 8b 54 24 48       	mov    0x48(%rsp),%r10
   2687d:	8b 5c 24 18          	mov    0x18(%rsp),%ebx
   26881:	45 84 ff             	test   %r15b,%r15b
   26884:	0f 85 25 05 00 00    	jne    26daf <miniz_oxide::inflate::core::decompress+0x14df>
   2688a:	e9 cc fe ff ff       	jmpq   2675b <miniz_oxide::inflate::core::decompress+0xe8b>
   2688f:	48 8b 14 24          	mov    (%rsp),%rdx
   26893:	eb 1c                	jmp    268b1 <miniz_oxide::inflate::core::decompress+0xfe1>
   26895:	41 0f b7 16          	movzwl (%r14),%edx
   26899:	89 c1                	mov    %eax,%ecx
   2689b:	48 d3 e2             	shl    %cl,%rdx
   2689e:	48 0b 14 24          	or     (%rsp),%rdx
   268a2:	49 83 c6 02          	add    $0x2,%r14
   268a6:	48 89 14 24          	mov    %rdx,(%rsp)
   268aa:	83 c0 10             	add    $0x10,%eax
   268ad:	89 44 24 08          	mov    %eax,0x8(%rsp)
   268b1:	89 d1                	mov    %edx,%ecx
   268b3:	81 e1 ff 03 00 00    	and    $0x3ff,%ecx
   268b9:	41 0f bf b4 49 7c 1b 	movswl 0x1b7c(%r9,%rcx,2),%esi
   268c0:	00 00 
   268c2:	85 f6                	test   %esi,%esi
   268c4:	78 4a                	js     26910 <miniz_oxide::inflate::core::decompress+0x1040>
   268c6:	89 f1                	mov    %esi,%ecx
   268c8:	c1 e9 09             	shr    $0x9,%ecx
   268cb:	81 e6 ff 01 00 00    	and    $0x1ff,%esi
   268d1:	85 c9                	test   %ecx,%ecx
   268d3:	74 7e                	je     26953 <miniz_oxide::inflate::core::decompress+0x1083>
   268d5:	48 d3 ea             	shr    %cl,%rdx
   268d8:	48 89 14 24          	mov    %rdx,(%rsp)
   268dc:	29 c8                	sub    %ecx,%eax
   268de:	89 44 24 08          	mov    %eax,0x8(%rsp)
   268e2:	89 74 24 0c          	mov    %esi,0xc(%rsp)
   268e6:	83 fe 10             	cmp    $0x10,%esi
   268e9:	73 73                	jae    2695e <miniz_oxide::inflate::core::decompress+0x108e>
   268eb:	81 ff c8 01 00 00    	cmp    $0x1c8,%edi
   268f1:	0f 87 25 12 00 00    	ja     27b1c <miniz_oxide::inflate::core::decompress+0x224c>
   268f7:	41 88 b4 39 21 29 00 	mov    %sil,0x2921(%r9,%rdi,1)
   268fe:	00 
   268ff:	8d 47 01             	lea    0x1(%rdi),%eax
   26902:	89 44 24 10          	mov    %eax,0x10(%rsp)
   26906:	45 31 ff             	xor    %r15d,%r15d
   26909:	31 c0                	xor    %eax,%eax
   2690b:	e9 94 00 00 00       	jmpq   269a4 <miniz_oxide::inflate::core::decompress+0x10d4>
   26910:	48 89 fd             	mov    %rdi,%rbp
   26913:	b9 0a 00 00 00       	mov    $0xa,%ecx
   26918:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2691f:	00 
   26920:	f7 d6                	not    %esi
   26922:	48 89 d7             	mov    %rdx,%rdi
   26925:	48 d3 ef             	shr    %cl,%rdi
   26928:	83 e7 01             	and    $0x1,%edi
   2692b:	01 f7                	add    %esi,%edi
   2692d:	48 63 ff             	movslq %edi,%rdi
   26930:	81 ff 3f 02 00 00    	cmp    $0x23f,%edi
   26936:	0f 87 2e 11 00 00    	ja     27a6a <miniz_oxide::inflate::core::decompress+0x219a>
   2693c:	41 0f bf b4 79 7c 23 	movswl 0x237c(%r9,%rdi,2),%esi
   26943:	00 00 
   26945:	83 c1 01             	add    $0x1,%ecx
   26948:	85 f6                	test   %esi,%esi
   2694a:	78 d4                	js     26920 <miniz_oxide::inflate::core::decompress+0x1050>
   2694c:	48 89 ef             	mov    %rbp,%rdi
   2694f:	85 c9                	test   %ecx,%ecx
   26951:	75 82                	jne    268d5 <miniz_oxide::inflate::core::decompress+0x1005>
   26953:	66 b8 01 00          	mov    $0x1,%ax
   26957:	66 41 bf 00 22       	mov    $0x2200,%r15w
   2695c:	eb 4f                	jmp    269ad <miniz_oxide::inflate::core::decompress+0x10dd>
   2695e:	66 b8 01 00          	mov    $0x1,%ax
   26962:	85 ff                	test   %edi,%edi
   26964:	75 0a                	jne    26970 <miniz_oxide::inflate::core::decompress+0x10a0>
   26966:	66 41 bf 00 1f       	mov    $0x1f00,%r15w
   2696b:	83 fe 10             	cmp    $0x10,%esi
   2696e:	74 34                	je     269a4 <miniz_oxide::inflate::core::decompress+0x10d4>
   26970:	48 b9 02 00 00 00 03 	movabs $0x300000002,%rcx
   26977:	00 00 00 
   2697a:	48 89 4c 24 70       	mov    %rcx,0x70(%rsp)
   2697f:	c7 44 24 78 07 00 00 	movl   $0x7,0x78(%rsp)
   26986:	00 
   26987:	89 f1                	mov    %esi,%ecx
   26989:	48 8d 79 f0          	lea    -0x10(%rcx),%rdi
   2698d:	48 83 ff 02          	cmp    $0x2,%rdi
   26991:	0f 87 8e 11 00 00    	ja     27b25 <miniz_oxide::inflate::core::decompress+0x2255>
   26997:	8b 4c 8c 30          	mov    0x30(%rsp,%rcx,4),%ecx
   2699b:	89 4c 24 14          	mov    %ecx,0x14(%rsp)
   2699f:	66 41 bf 00 0b       	mov    $0xb00,%r15w
   269a4:	41 0f b7 cf          	movzwl %r15w,%ecx
   269a8:	0f b7 c0             	movzwl %ax,%eax
   269ab:	09 c8                	or     %ecx,%eax
   269ad:	0f b6 c0             	movzbl %al,%eax
   269b0:	41 09 c7             	or     %eax,%r15d
   269b3:	45 84 ff             	test   %r15b,%r15b
   269b6:	0f 85 f3 03 00 00    	jne    26daf <miniz_oxide::inflate::core::decompress+0x14df>
   269bc:	e9 9a fd ff ff       	jmpq   2675b <miniz_oxide::inflate::core::decompress+0xe8b>
   269c1:	83 f8 0b             	cmp    $0xb,%eax
   269c4:	72 4b                	jb     26a11 <miniz_oxide::inflate::core::decompress+0x1141>
   269c6:	49 89 ff             	mov    %rdi,%r15
   269c9:	bd 0c 00 00 00       	mov    $0xc,%ebp
   269ce:	f7 d6                	not    %esi
   269d0:	8d 4d fe             	lea    -0x2(%rbp),%ecx
   269d3:	48 89 d7             	mov    %rdx,%rdi
   269d6:	48 d3 ef             	shr    %cl,%rdi
   269d9:	83 e7 01             	and    $0x1,%edi
   269dc:	01 f7                	add    %esi,%edi
   269de:	48 63 ff             	movslq %edi,%rdi
   269e1:	81 ff 3f 02 00 00    	cmp    $0x23f,%edi
   269e7:	0f 87 9a 11 00 00    	ja     27b87 <miniz_oxide::inflate::core::decompress+0x22b7>
   269ed:	41 0f b7 8c 79 7c 23 	movzwl 0x237c(%r9,%rdi,2),%ecx
   269f4:	00 00 
   269f6:	39 e8                	cmp    %ebp,%eax
   269f8:	72 0b                	jb     26a05 <miniz_oxide::inflate::core::decompress+0x1135>
   269fa:	0f bf f1             	movswl %cx,%esi
   269fd:	83 c5 01             	add    $0x1,%ebp
   26a00:	66 85 f6             	test   %si,%si
   26a03:	78 c9                	js     269ce <miniz_oxide::inflate::core::decompress+0x10fe>
   26a05:	66 85 c9             	test   %cx,%cx
   26a08:	4c 89 ff             	mov    %r15,%rdi
   26a0b:	0f 89 a0 fe ff ff    	jns    268b1 <miniz_oxide::inflate::core::decompress+0xfe1>
   26a11:	4d 39 f5             	cmp    %r14,%r13
   26a14:	74 35                	je     26a4b <miniz_oxide::inflate::core::decompress+0x117b>
   26a16:	4d 8d 46 01          	lea    0x1(%r14),%r8
   26a1a:	41 0f b6 2e          	movzbl (%r14),%ebp
   26a1e:	89 c1                	mov    %eax,%ecx
   26a20:	48 d3 e5             	shl    %cl,%rbp
   26a23:	48 09 d5             	or     %rdx,%rbp
   26a26:	48 89 2c 24          	mov    %rbp,(%rsp)
   26a2a:	8d 50 08             	lea    0x8(%rax),%edx
   26a2d:	89 54 24 08          	mov    %edx,0x8(%rsp)
   26a31:	83 fa 0f             	cmp    $0xf,%edx
   26a34:	72 21                	jb     26a57 <miniz_oxide::inflate::core::decompress+0x1187>
   26a36:	4d 89 c6             	mov    %r8,%r14
   26a39:	89 d0                	mov    %edx,%eax
   26a3b:	48 89 ea             	mov    %rbp,%rdx
   26a3e:	44 8b 84 24 18 01 00 	mov    0x118(%rsp),%r8d
   26a45:	00 
   26a46:	e9 66 fe ff ff       	jmpq   268b1 <miniz_oxide::inflate::core::decompress+0xfe1>
   26a4b:	44 8b 7c 24 2c       	mov    0x2c(%rsp),%r15d
   26a50:	89 d8                	mov    %ebx,%eax
   26a52:	e9 56 ff ff ff       	jmpq   269ad <miniz_oxide::inflate::core::decompress+0x10dd>
   26a57:	49 89 ff             	mov    %rdi,%r15
   26a5a:	89 e9                	mov    %ebp,%ecx
   26a5c:	81 e1 ff 03 00 00    	and    $0x3ff,%ecx
   26a62:	41 0f bf bc 49 7c 1b 	movswl 0x1b7c(%r9,%rcx,2),%edi
   26a69:	00 00 
   26a6b:	85 ff                	test   %edi,%edi
   26a6d:	78 0f                	js     26a7e <miniz_oxide::inflate::core::decompress+0x11ae>
   26a6f:	c1 ef 09             	shr    $0x9,%edi
   26a72:	74 58                	je     26acc <miniz_oxide::inflate::core::decompress+0x11fc>
   26a74:	39 fa                	cmp    %edi,%edx
   26a76:	0f 83 ec 00 00 00    	jae    26b68 <miniz_oxide::inflate::core::decompress+0x1298>
   26a7c:	eb 4e                	jmp    26acc <miniz_oxide::inflate::core::decompress+0x11fc>
   26a7e:	83 fa 0b             	cmp    $0xb,%edx
   26a81:	72 49                	jb     26acc <miniz_oxide::inflate::core::decompress+0x11fc>
   26a83:	bb 0c 00 00 00       	mov    $0xc,%ebx
   26a88:	f7 d7                	not    %edi
   26a8a:	8d 4b fe             	lea    -0x2(%rbx),%ecx
   26a8d:	48 89 ee             	mov    %rbp,%rsi
   26a90:	48 d3 ee             	shr    %cl,%rsi
   26a93:	83 e6 01             	and    $0x1,%esi
   26a96:	01 fe                	add    %edi,%esi
   26a98:	48 63 fe             	movslq %esi,%rdi
   26a9b:	81 ff 3f 02 00 00    	cmp    $0x23f,%edi
   26aa1:	0f 87 e0 10 00 00    	ja     27b87 <miniz_oxide::inflate::core::decompress+0x22b7>
   26aa7:	41 0f b7 8c 79 7c 23 	movzwl 0x237c(%r9,%rdi,2),%ecx
   26aae:	00 00 
   26ab0:	39 da                	cmp    %ebx,%edx
   26ab2:	72 0b                	jb     26abf <miniz_oxide::inflate::core::decompress+0x11ef>
   26ab4:	0f bf f9             	movswl %cx,%edi
   26ab7:	83 c3 01             	add    $0x1,%ebx
   26aba:	66 85 ff             	test   %di,%di
   26abd:	78 c9                	js     26a88 <miniz_oxide::inflate::core::decompress+0x11b8>
   26abf:	66 85 c9             	test   %cx,%cx
   26ac2:	8b 5c 24 18          	mov    0x18(%rsp),%ebx
   26ac6:	0f 89 9c 00 00 00    	jns    26b68 <miniz_oxide::inflate::core::decompress+0x1298>
   26acc:	4d 39 c5             	cmp    %r8,%r13
   26acf:	0f 84 d7 00 00 00    	je     26bac <miniz_oxide::inflate::core::decompress+0x12dc>
   26ad5:	4d 8d 46 02          	lea    0x2(%r14),%r8
   26ad9:	41 0f b6 76 01       	movzbl 0x1(%r14),%esi
   26ade:	89 d1                	mov    %edx,%ecx
   26ae0:	48 d3 e6             	shl    %cl,%rsi
   26ae3:	48 09 f5             	or     %rsi,%rbp
   26ae6:	48 89 2c 24          	mov    %rbp,(%rsp)
   26aea:	8d 50 10             	lea    0x10(%rax),%edx
   26aed:	89 54 24 08          	mov    %edx,0x8(%rsp)
   26af1:	83 fa 0e             	cmp    $0xe,%edx
   26af4:	76 08                	jbe    26afe <miniz_oxide::inflate::core::decompress+0x122e>
   26af6:	4c 89 ff             	mov    %r15,%rdi
   26af9:	e9 38 ff ff ff       	jmpq   26a36 <miniz_oxide::inflate::core::decompress+0x1166>
   26afe:	89 e9                	mov    %ebp,%ecx
   26b00:	81 e1 ff 03 00 00    	and    $0x3ff,%ecx
   26b06:	41 0f bf bc 49 7c 1b 	movswl 0x1b7c(%r9,%rcx,2),%edi
   26b0d:	00 00 
   26b0f:	85 ff                	test   %edi,%edi
   26b11:	78 0b                	js     26b1e <miniz_oxide::inflate::core::decompress+0x124e>
   26b13:	c1 ef 09             	shr    $0x9,%edi
   26b16:	74 68                	je     26b80 <miniz_oxide::inflate::core::decompress+0x12b0>
   26b18:	39 fa                	cmp    %edi,%edx
   26b1a:	73 4c                	jae    26b68 <miniz_oxide::inflate::core::decompress+0x1298>
   26b1c:	eb 62                	jmp    26b80 <miniz_oxide::inflate::core::decompress+0x12b0>
   26b1e:	83 fa 0b             	cmp    $0xb,%edx
   26b21:	72 5d                	jb     26b80 <miniz_oxide::inflate::core::decompress+0x12b0>
   26b23:	bb 0c 00 00 00       	mov    $0xc,%ebx
   26b28:	f7 d7                	not    %edi
   26b2a:	8d 4b fe             	lea    -0x2(%rbx),%ecx
   26b2d:	48 89 ee             	mov    %rbp,%rsi
   26b30:	48 d3 ee             	shr    %cl,%rsi
   26b33:	83 e6 01             	and    $0x1,%esi
   26b36:	01 fe                	add    %edi,%esi
   26b38:	48 63 fe             	movslq %esi,%rdi
   26b3b:	81 ff 3f 02 00 00    	cmp    $0x23f,%edi
   26b41:	0f 87 40 10 00 00    	ja     27b87 <miniz_oxide::inflate::core::decompress+0x22b7>
   26b47:	41 0f b7 8c 79 7c 23 	movzwl 0x237c(%r9,%rdi,2),%ecx
   26b4e:	00 00 
   26b50:	39 da                	cmp    %ebx,%edx
   26b52:	72 0b                	jb     26b5f <miniz_oxide::inflate::core::decompress+0x128f>
   26b54:	0f bf f9             	movswl %cx,%edi
   26b57:	83 c3 01             	add    $0x1,%ebx
   26b5a:	66 85 ff             	test   %di,%di
   26b5d:	78 c9                	js     26b28 <miniz_oxide::inflate::core::decompress+0x1258>
   26b5f:	66 85 c9             	test   %cx,%cx
   26b62:	8b 5c 24 18          	mov    0x18(%rsp),%ebx
   26b66:	78 18                	js     26b80 <miniz_oxide::inflate::core::decompress+0x12b0>
   26b68:	4d 89 c6             	mov    %r8,%r14
   26b6b:	89 d0                	mov    %edx,%eax
   26b6d:	48 89 ea             	mov    %rbp,%rdx
   26b70:	44 8b 84 24 18 01 00 	mov    0x118(%rsp),%r8d
   26b77:	00 
   26b78:	4c 89 ff             	mov    %r15,%rdi
   26b7b:	e9 31 fd ff ff       	jmpq   268b1 <miniz_oxide::inflate::core::decompress+0xfe1>
   26b80:	4d 39 c5             	cmp    %r8,%r13
   26b83:	74 27                	je     26bac <miniz_oxide::inflate::core::decompress+0x12dc>
   26b85:	41 0f b6 76 02       	movzbl 0x2(%r14),%esi
   26b8a:	49 83 c6 03          	add    $0x3,%r14
   26b8e:	89 d1                	mov    %edx,%ecx
   26b90:	48 d3 e6             	shl    %cl,%rsi
   26b93:	48 09 f5             	or     %rsi,%rbp
   26b96:	48 89 2c 24          	mov    %rbp,(%rsp)
   26b9a:	8d 50 18             	lea    0x18(%rax),%edx
   26b9d:	89 54 24 08          	mov    %edx,0x8(%rsp)
   26ba1:	4d 89 f0             	mov    %r14,%r8
   26ba4:	4c 89 ff             	mov    %r15,%rdi
   26ba7:	e9 8a fe ff ff       	jmpq   26a36 <miniz_oxide::inflate::core::decompress+0x1166>
   26bac:	4d 89 c6             	mov    %r8,%r14
   26baf:	44 8b 7c 24 2c       	mov    0x2c(%rsp),%r15d
   26bb4:	89 d8                	mov    %ebx,%eax
   26bb6:	44 8b 84 24 18 01 00 	mov    0x118(%rsp),%r8d
   26bbd:	00 
   26bbe:	e9 ea fd ff ff       	jmpq   269ad <miniz_oxide::inflate::core::decompress+0x10dd>
   26bc3:	4d 39 da             	cmp    %r11,%r10
   26bc6:	0f 84 97 0c 00 00    	je     27863 <miniz_oxide::inflate::core::decompress+0x1f93>
   26bcc:	0f 83 ac 0e 00 00    	jae    27a7e <miniz_oxide::inflate::core::decompress+0x21ae>
   26bd2:	8a 44 24 0c          	mov    0xc(%rsp),%al
   26bd6:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   26bdb:	42 88 04 11          	mov    %al,(%rcx,%r10,1)
   26bdf:	49 83 c2 01          	add    $0x1,%r10
   26be3:	83 7c 24 08 00       	cmpl   $0x0,0x8(%rsp)
   26be8:	b8 06 00 00 00       	mov    $0x6,%eax
   26bed:	41 bf 11 00 00 00    	mov    $0x11,%r15d
   26bf3:	44 0f 44 f8          	cmove  %eax,%r15d
   26bf7:	83 44 24 10 ff       	addl   $0xffffffff,0x10(%rsp)
   26bfc:	44 0f 44 f8          	cmove  %eax,%r15d
   26c00:	e9 25 ee ff ff       	jmpq   25a2a <miniz_oxide::inflate::core::decompress+0x15a>
   26c05:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
   26c09:	41 f6 c0 04          	test   $0x4,%r8b
   26c0d:	74 0c                	je     26c1b <miniz_oxide::inflate::core::decompress+0x134b>
   26c0f:	41 b7 1d             	mov    $0x1d,%r15b
   26c12:	49 39 ca             	cmp    %rcx,%r10
   26c15:	0f 82 0f ee ff ff    	jb     25a2a <miniz_oxide::inflate::core::decompress+0x15a>
   26c1b:	44 8b 44 24 10       	mov    0x10(%rsp),%r8d
   26c20:	4b 8d 1c 02          	lea    (%r10,%r8,1),%rbx
   26c24:	4c 39 db             	cmp    %r11,%rbx
   26c27:	77 1d                	ja     26c46 <miniz_oxide::inflate::core::decompress+0x1376>
   26c29:	4c 89 d0             	mov    %r10,%rax
   26c2c:	48 29 c8             	sub    %rcx,%rax
   26c2f:	48 23 44 24 68       	and    0x68(%rsp),%rax
   26c34:	4c 29 d0             	sub    %r10,%rax
   26c37:	0f 82 94 04 00 00    	jb     270d1 <miniz_oxide::inflate::core::decompress+0x1801>
   26c3d:	4c 39 c0             	cmp    %r8,%rax
   26c40:	0f 83 8b 04 00 00    	jae    270d1 <miniz_oxide::inflate::core::decompress+0x1801>
   26c46:	45 85 c0             	test   %r8d,%r8d
   26c49:	b8 0c 00 00 00       	mov    $0xc,%eax
   26c4e:	41 bf 13 00 00 00    	mov    $0x13,%r15d
   26c54:	44 0f 44 f8          	cmove  %eax,%r15d
   26c58:	44 8b 84 24 18 01 00 	mov    0x118(%rsp),%r8d
   26c5f:	00 
   26c60:	e9 c5 ed ff ff       	jmpq   25a2a <miniz_oxide::inflate::core::decompress+0x15a>
   26c65:	4c 89 64 24 50       	mov    %r12,0x50(%rsp)
   26c6a:	44 8b 64 24 0c       	mov    0xc(%rsp),%r12d
   26c6f:	90                   	nop
   26c70:	4c 89 db             	mov    %r11,%rbx
   26c73:	4c 29 d3             	sub    %r10,%rbx
   26c76:	0f 84 4d 0b 00 00    	je     277c9 <miniz_oxide::inflate::core::decompress+0x1ef9>
   26c7c:	4c 89 d2             	mov    %r10,%rdx
   26c7f:	4c 29 e2             	sub    %r12,%rdx
   26c82:	4c 8b 4c 24 68       	mov    0x68(%rsp),%r9
   26c87:	4c 21 ca             	and    %r9,%rdx
   26c8a:	8b 6c 24 10          	mov    0x10(%rsp),%ebp
   26c8e:	48 39 eb             	cmp    %rbp,%rbx
   26c91:	48 0f 47 dd          	cmova  %rbp,%rbx
   26c95:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   26c9a:	4c 89 de             	mov    %r11,%rsi
   26c9d:	4c 89 d1             	mov    %r10,%rcx
   26ca0:	49 89 d8             	mov    %rbx,%r8
   26ca3:	4d 89 d7             	mov    %r10,%r15
   26ca6:	e8 45 e7 ff ff       	callq  253f0 <miniz_oxide::inflate::core::transfer>
   26cab:	4d 89 fa             	mov    %r15,%r10
   26cae:	4c 8b 5c 24 40       	mov    0x40(%rsp),%r11
   26cb3:	49 01 da             	add    %rbx,%r10
   26cb6:	41 b7 0c             	mov    $0xc,%r15b
   26cb9:	29 dd                	sub    %ebx,%ebp
   26cbb:	89 6c 24 10          	mov    %ebp,0x10(%rsp)
   26cbf:	75 af                	jne    26c70 <miniz_oxide::inflate::core::decompress+0x13a0>
   26cc1:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   26cc6:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   26ccb:	44 8b 84 24 18 01 00 	mov    0x118(%rsp),%r8d
   26cd2:	00 
   26cd3:	e9 52 ed ff ff       	jmpq   25a2a <miniz_oxide::inflate::core::decompress+0x15a>
   26cd8:	8b 7c 24 18          	mov    0x18(%rsp),%edi
   26cdc:	8b 44 24 10          	mov    0x10(%rsp),%eax
   26ce0:	83 f8 03             	cmp    $0x3,%eax
   26ce3:	0f 87 e5 08 00 00    	ja     275ce <miniz_oxide::inflate::core::decompress+0x1cfe>
   26ce9:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
   26ced:	85 c9                	test   %ecx,%ecx
   26cef:	0f 85 34 00 00 00    	jne    26d29 <miniz_oxide::inflate::core::decompress+0x1459>
   26cf5:	4d 39 f5             	cmp    %r14,%r13
   26cf8:	0f 84 92 00 00 00    	je     26d90 <miniz_oxide::inflate::core::decompress+0x14c0>
   26cfe:	41 0f b6 0e          	movzbl (%r14),%ecx
   26d02:	49 83 c6 01          	add    $0x1,%r14
   26d06:	41 8b 51 14          	mov    0x14(%r9),%edx
   26d0a:	c1 e2 08             	shl    $0x8,%edx
   26d0d:	09 ca                	or     %ecx,%edx
   26d0f:	41 89 51 14          	mov    %edx,0x14(%r9)
   26d13:	e9 64 00 00 00       	jmpq   26d7c <miniz_oxide::inflate::core::decompress+0x14ac>
   26d18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   26d1f:	00 
   26d20:	41 89 ff             	mov    %edi,%r15d
   26d23:	41 f6 c7 02          	test   $0x2,%r15b
   26d27:	75 29                	jne    26d52 <miniz_oxide::inflate::core::decompress+0x1482>
   26d29:	83 f9 08             	cmp    $0x8,%ecx
   26d2c:	73 2b                	jae    26d59 <miniz_oxide::inflate::core::decompress+0x1489>
   26d2e:	4d 39 f5             	cmp    %r14,%r13
   26d31:	74 ed                	je     26d20 <miniz_oxide::inflate::core::decompress+0x1450>
   26d33:	41 0f b6 16          	movzbl (%r14),%edx
   26d37:	48 d3 e2             	shl    %cl,%rdx
   26d3a:	48 09 14 24          	or     %rdx,(%rsp)
   26d3e:	49 83 c6 01          	add    $0x1,%r14
   26d42:	83 c1 08             	add    $0x8,%ecx
   26d45:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   26d49:	45 31 ff             	xor    %r15d,%r15d
   26d4c:	41 f6 c7 02          	test   $0x2,%r15b
   26d50:	74 d7                	je     26d29 <miniz_oxide::inflate::core::decompress+0x1459>
   26d52:	45 84 ff             	test   %r15b,%r15b
   26d55:	75 45                	jne    26d9c <miniz_oxide::inflate::core::decompress+0x14cc>
   26d57:	eb 83                	jmp    26cdc <miniz_oxide::inflate::core::decompress+0x140c>
   26d59:	48 8b 14 24          	mov    (%rsp),%rdx
   26d5d:	0f b6 f2             	movzbl %dl,%esi
   26d60:	48 c1 ea 08          	shr    $0x8,%rdx
   26d64:	48 89 14 24          	mov    %rdx,(%rsp)
   26d68:	83 c1 f8             	add    $0xfffffff8,%ecx
   26d6b:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   26d6f:	41 8b 49 14          	mov    0x14(%r9),%ecx
   26d73:	c1 e1 08             	shl    $0x8,%ecx
   26d76:	09 ce                	or     %ecx,%esi
   26d78:	41 89 71 14          	mov    %esi,0x14(%r9)
   26d7c:	83 c0 01             	add    $0x1,%eax
   26d7f:	89 44 24 10          	mov    %eax,0x10(%rsp)
   26d83:	45 31 ff             	xor    %r15d,%r15d
   26d86:	45 84 ff             	test   %r15b,%r15b
   26d89:	75 11                	jne    26d9c <miniz_oxide::inflate::core::decompress+0x14cc>
   26d8b:	e9 4c ff ff ff       	jmpq   26cdc <miniz_oxide::inflate::core::decompress+0x140c>
   26d90:	41 89 ff             	mov    %edi,%r15d
   26d93:	45 84 ff             	test   %r15b,%r15b
   26d96:	0f 84 40 ff ff ff    	je     26cdc <miniz_oxide::inflate::core::decompress+0x140c>
   26d9c:	41 80 ff 01          	cmp    $0x1,%r15b
   26da0:	0f 85 a1 0a 00 00    	jne    27847 <miniz_oxide::inflate::core::decompress+0x1f77>
   26da6:	41 c1 ef 08          	shr    $0x8,%r15d
   26daa:	e9 7b ec ff ff       	jmpq   25a2a <miniz_oxide::inflate::core::decompress+0x15a>
   26daf:	41 80 ff 01          	cmp    $0x1,%r15b
   26db3:	0f 85 52 0a 00 00    	jne    2780b <miniz_oxide::inflate::core::decompress+0x1f3b>
   26db9:	e9 73 02 00 00       	jmpq   27031 <miniz_oxide::inflate::core::decompress+0x1761>
   26dbe:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
   26dc5:	89 c1                	mov    %eax,%ecx
   26dc7:	48 d3 e6             	shl    %cl,%rsi
   26dca:	48 8b 3c 24          	mov    (%rsp),%rdi
   26dce:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
   26dd3:	31 f5                	xor    %esi,%ebp
   26dd5:	21 fd                	and    %edi,%ebp
   26dd7:	48 d3 ef             	shr    %cl,%rdi
   26dda:	48 89 3c 24          	mov    %rdi,(%rsp)
   26dde:	29 c2                	sub    %eax,%edx
   26de0:	89 54 24 08          	mov    %edx,0x8(%rsp)
   26de4:	01 6c 24 0c          	add    %ebp,0xc(%rsp)
   26de8:	41 b7 16             	mov    $0x16,%r15b
   26deb:	e9 3a ec ff ff       	jmpq   25a2a <miniz_oxide::inflate::core::decompress+0x15a>
   26df0:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
   26df7:	89 c1                	mov    %eax,%ecx
   26df9:	48 d3 e6             	shl    %cl,%rsi
   26dfc:	48 8b 3c 24          	mov    (%rsp),%rdi
   26e00:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
   26e05:	31 f5                	xor    %esi,%ebp
   26e07:	21 fd                	and    %edi,%ebp
   26e09:	48 d3 ef             	shr    %cl,%rdi
   26e0c:	48 89 3c 24          	mov    %rdi,(%rsp)
   26e10:	29 c2                	sub    %eax,%edx
   26e12:	89 54 24 08          	mov    %edx,0x8(%rsp)
   26e16:	01 6c 24 10          	add    %ebp,0x10(%rsp)
   26e1a:	41 b7 0f             	mov    $0xf,%r15b
   26e1d:	e9 08 ec ff ff       	jmpq   25a2a <miniz_oxide::inflate::core::decompress+0x15a>
   26e22:	48 8b 2c 24          	mov    (%rsp),%rbp
   26e26:	29 c2                	sub    %eax,%edx
   26e28:	83 e0 3f             	and    $0x3f,%eax
   26e2b:	48 89 ee             	mov    %rbp,%rsi
   26e2e:	89 c1                	mov    %eax,%ecx
   26e30:	48 d3 ee             	shr    %cl,%rsi
   26e33:	48 89 34 24          	mov    %rsi,(%rsp)
   26e37:	89 54 24 08          	mov    %edx,0x8(%rsp)
   26e3b:	0f 28 05 ce 18 01 00 	movaps 0x118ce(%rip),%xmm0        # 38710 <str.6+0x13f0>
   26e42:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
   26e47:	48 c7 84 24 80 00 00 	movq   $0xb,0x80(%rsp)
   26e4e:	00 0b 00 00 00 
   26e53:	8b 54 24 0c          	mov    0xc(%rsp),%edx
   26e57:	89 d6                	mov    %edx,%esi
   26e59:	83 e6 03             	and    $0x3,%esi
   26e5c:	83 fe 03             	cmp    $0x3,%esi
   26e5f:	0f 84 c9 0c 00 00    	je     27b2e <miniz_oxide::inflate::core::decompress+0x225e>
   26e65:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   26e6c:	89 c1                	mov    %eax,%ecx
   26e6e:	48 d3 e7             	shl    %cl,%rdi
   26e71:	48 f7 d7             	not    %rdi
   26e74:	48 21 fd             	and    %rdi,%rbp
   26e77:	48 03 6c f4 70       	add    0x70(%rsp,%rsi,8),%rbp
   26e7c:	44 8b 7c 24 10       	mov    0x10(%rsp),%r15d
   26e81:	83 fa 10             	cmp    $0x10,%edx
   26e84:	0f 85 d3 00 00 00    	jne    26f5d <miniz_oxide::inflate::core::decompress+0x168d>
   26e8a:	49 8d 7f ff          	lea    -0x1(%r15),%rdi
   26e8e:	48 81 ff c8 01 00 00 	cmp    $0x1c8,%rdi
   26e95:	0f 87 ac 0c 00 00    	ja     27b47 <miniz_oxide::inflate::core::decompress+0x2277>
   26e9b:	41 8a 8c 39 21 29 00 	mov    0x2921(%r9,%rdi,1),%cl
   26ea2:	00 
   26ea3:	e9 b7 00 00 00       	jmpq   26f5f <miniz_oxide::inflate::core::decompress+0x168f>
   26ea8:	89 c1                	mov    %eax,%ecx
   26eaa:	48 d3 2c 24          	shrq   %cl,(%rsp)
   26eae:	89 54 24 08          	mov    %edx,0x8(%rsp)
   26eb2:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%rsp)
   26eb9:	00 
   26eba:	41 b7 05             	mov    $0x5,%r15b
   26ebd:	e9 68 eb ff ff       	jmpq   25a2a <miniz_oxide::inflate::core::decompress+0x15a>
   26ec2:	48 8b 04 24          	mov    (%rsp),%rax
   26ec6:	0f b6 d0             	movzbl %al,%edx
   26ec9:	48 c1 e8 08          	shr    $0x8,%rax
   26ecd:	48 89 04 24          	mov    %rax,(%rsp)
   26ed1:	83 c1 f8             	add    $0xfffffff8,%ecx
   26ed4:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   26ed8:	89 54 24 0c          	mov    %edx,0xc(%rsp)
   26edc:	41 b7 12             	mov    $0x12,%r15b
   26edf:	e9 46 eb ff ff       	jmpq   25a2a <miniz_oxide::inflate::core::decompress+0x15a>
   26ee4:	8b 44 24 08          	mov    0x8(%rsp),%eax
   26ee8:	48 83 f8 0f          	cmp    $0xf,%rax
   26eec:	0f 83 48 01 00 00    	jae    2703a <miniz_oxide::inflate::core::decompress+0x176a>
   26ef2:	48 83 f9 01          	cmp    $0x1,%rcx
   26ef6:	0f 87 b4 01 00 00    	ja     270b0 <miniz_oxide::inflate::core::decompress+0x17e0>
   26efc:	48 8b 14 24          	mov    (%rsp),%rdx
   26f00:	89 d1                	mov    %edx,%ecx
   26f02:	81 e1 ff 03 00 00    	and    $0x3ff,%ecx
   26f08:	41 0f bf 74 49 3c    	movswl 0x3c(%r9,%rcx,2),%esi
   26f0e:	85 f6                	test   %esi,%esi
   26f10:	0f 88 7e 05 00 00    	js     27494 <miniz_oxide::inflate::core::decompress+0x1bc4>
   26f16:	c1 ee 09             	shr    $0x9,%esi
   26f19:	0f 84 bf 05 00 00    	je     274de <miniz_oxide::inflate::core::decompress+0x1c0e>
   26f1f:	39 f0                	cmp    %esi,%eax
   26f21:	0f 83 f8 07 00 00    	jae    2771f <miniz_oxide::inflate::core::decompress+0x1e4f>
   26f27:	e9 b2 05 00 00       	jmpq   274de <miniz_oxide::inflate::core::decompress+0x1c0e>
   26f2c:	83 f9 0f             	cmp    $0xf,%ecx
   26f2f:	8b 5c 24 18          	mov    0x18(%rsp),%ebx
   26f33:	0f 86 81 00 00 00    	jbe    26fba <miniz_oxide::inflate::core::decompress+0x16ea>
   26f39:	4d 39 f5             	cmp    %r14,%r13
   26f3c:	0f 84 a4 09 00 00    	je     278e6 <miniz_oxide::inflate::core::decompress+0x2016>
   26f42:	41 0f b6 06          	movzbl (%r14),%eax
   26f46:	49 83 c6 01          	add    $0x1,%r14
   26f4a:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   26f4f:	41 89 41 10          	mov    %eax,0x10(%r9)
   26f53:	66 41 bf 01 1c       	mov    $0x1c01,%r15w
   26f58:	e9 cf 00 00 00       	jmpq   2702c <miniz_oxide::inflate::core::decompress+0x175c>
   26f5d:	31 c9                	xor    %ecx,%ecx
   26f5f:	48 89 e8             	mov    %rbp,%rax
   26f62:	4c 01 f8             	add    %r15,%rax
   26f65:	0f 82 f0 0b 00 00    	jb     27b5b <miniz_oxide::inflate::core::decompress+0x228b>
   26f6b:	48 3d c9 01 00 00    	cmp    $0x1c9,%rax
   26f71:	0f 87 f9 0b 00 00    	ja     27b70 <miniz_oxide::inflate::core::decompress+0x22a0>
   26f77:	4c 89 d3             	mov    %r10,%rbx
   26f7a:	48 85 ed             	test   %rbp,%rbp
   26f7d:	74 1c                	je     26f9b <miniz_oxide::inflate::core::decompress+0x16cb>
   26f7f:	4b 8d 3c 39          	lea    (%r9,%r15,1),%rdi
   26f83:	48 81 c7 21 29 00 00 	add    $0x2921,%rdi
   26f8a:	0f b6 f1             	movzbl %cl,%esi
   26f8d:	48 89 ea             	mov    %rbp,%rdx
   26f90:	ff 15 72 ec 01 00    	callq  *0x1ec72(%rip)        # 45c08 <memset@GLIBC_2.2.5>
   26f96:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   26f9b:	44 01 fd             	add    %r15d,%ebp
   26f9e:	89 6c 24 10          	mov    %ebp,0x10(%rsp)
   26fa2:	41 b7 0a             	mov    $0xa,%r15b
   26fa5:	4c 8b 5c 24 40       	mov    0x40(%rsp),%r11
   26faa:	44 8b 84 24 18 01 00 	mov    0x118(%rsp),%r8d
   26fb1:	00 
   26fb2:	49 89 da             	mov    %rbx,%r10
   26fb5:	e9 70 ea ff ff       	jmpq   25a2a <miniz_oxide::inflate::core::decompress+0x15a>
   26fba:	4d 39 f5             	cmp    %r14,%r13
   26fbd:	74 56                	je     27015 <miniz_oxide::inflate::core::decompress+0x1745>
   26fbf:	44 89 d0             	mov    %r10d,%eax
   26fc2:	83 f0 08             	xor    $0x8,%eax
   26fc5:	41 0f b6 0e          	movzbl (%r14),%ecx
   26fc9:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   26fce:	89 4a 10             	mov    %ecx,0x10(%rdx)
   26fd1:	44 89 ca             	mov    %r9d,%edx
   26fd4:	09 ca                	or     %ecx,%edx
   26fd6:	48 69 f2 85 10 42 08 	imul   $0x8421085,%rdx,%rsi
   26fdd:	48 c1 ee 20          	shr    $0x20,%rsi
   26fe1:	89 d7                	mov    %edx,%edi
   26fe3:	29 f7                	sub    %esi,%edi
   26fe5:	d1 ef                	shr    %edi
   26fe7:	01 f7                	add    %esi,%edi
   26fe9:	c1 ef 04             	shr    $0x4,%edi
   26fec:	89 fe                	mov    %edi,%esi
   26fee:	c1 e6 05             	shl    $0x5,%esi
   26ff1:	29 f7                	sub    %esi,%edi
   26ff3:	01 d7                	add    %edx,%edi
   26ff5:	83 e1 20             	and    $0x20,%ecx
   26ff8:	09 f9                	or     %edi,%ecx
   26ffa:	09 c1                	or     %eax,%ecx
   26ffc:	41 bf 01 1c 00 00    	mov    $0x1c01,%r15d
   27002:	75 06                	jne    2700a <miniz_oxide::inflate::core::decompress+0x173a>
   27004:	41 bf 01 03 00 00    	mov    $0x301,%r15d
   2700a:	49 83 c6 01          	add    $0x1,%r14
   2700e:	45 84 ff             	test   %r15b,%r15b
   27011:	75 0a                	jne    2701d <miniz_oxide::inflate::core::decompress+0x174d>
   27013:	eb a5                	jmp    26fba <miniz_oxide::inflate::core::decompress+0x16ea>
   27015:	41 89 df             	mov    %ebx,%r15d
   27018:	45 84 ff             	test   %r15b,%r15b
   2701b:	74 9d                	je     26fba <miniz_oxide::inflate::core::decompress+0x16ea>
   2701d:	41 80 ff 01          	cmp    $0x1,%r15b
   27021:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   27026:	0f 85 c2 08 00 00    	jne    278ee <miniz_oxide::inflate::core::decompress+0x201e>
   2702c:	4c 8b 54 24 48       	mov    0x48(%rsp),%r10
   27031:	41 c1 ef 08          	shr    $0x8,%r15d
   27035:	e9 f0 e9 ff ff       	jmpq   25a2a <miniz_oxide::inflate::core::decompress+0x15a>
   2703a:	48 8b 14 24          	mov    (%rsp),%rdx
   2703e:	e9 dc 06 00 00       	jmpq   2771f <miniz_oxide::inflate::core::decompress+0x1e4f>
   27043:	89 c1                	mov    %eax,%ecx
   27045:	48 d3 2c 24          	shrq   %cl,(%rsp)
   27049:	89 54 24 08          	mov    %edx,0x8(%rsp)
   2704d:	89 d1                	mov    %edx,%ecx
   2704f:	4d 29 ee             	sub    %r13,%r14
   27052:	49 01 f6             	add    %rsi,%r14
   27055:	89 c8                	mov    %ecx,%eax
   27057:	c1 e8 03             	shr    $0x3,%eax
   2705a:	44 39 f0             	cmp    %r14d,%eax
   2705d:	41 0f 47 c6          	cmova  %r14d,%eax
   27061:	8d 14 c5 00 00 00 00 	lea    0x0(,%rax,8),%edx
   27068:	29 d1                	sub    %edx,%ecx
   2706a:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   2706e:	49 29 c6             	sub    %rax,%r14
   27071:	49 39 f6             	cmp    %rsi,%r14
   27074:	0f 87 76 0b 00 00    	ja     27bf0 <miniz_oxide::inflate::core::decompress+0x2320>
   2707a:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   27081:	48 d3 e0             	shl    %cl,%rax
   27084:	48 f7 d0             	not    %rax
   27087:	48 21 04 24          	and    %rax,(%rsp)
   2708b:	4c 03 b4 24 c0 00 00 	add    0xc0(%rsp),%r14
   27092:	00 
   27093:	41 b7 18             	mov    $0x18,%r15b
   27096:	41 f6 c0 01          	test   $0x1,%r8b
   2709a:	0f 84 8a e9 ff ff    	je     25a2a <miniz_oxide::inflate::core::decompress+0x15a>
   270a0:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%rsp)
   270a7:	00 
   270a8:	41 b7 17             	mov    $0x17,%r15b
   270ab:	e9 7a e9 ff ff       	jmpq   25a2a <miniz_oxide::inflate::core::decompress+0x15a>
   270b0:	41 0f b7 16          	movzwl (%r14),%edx
   270b4:	89 c1                	mov    %eax,%ecx
   270b6:	48 d3 e2             	shl    %cl,%rdx
   270b9:	48 0b 14 24          	or     (%rsp),%rdx
   270bd:	49 83 c6 02          	add    $0x2,%r14
   270c1:	48 89 14 24          	mov    %rdx,(%rsp)
   270c5:	83 c0 10             	add    $0x10,%eax
   270c8:	89 44 24 08          	mov    %eax,0x8(%rsp)
   270cc:	e9 4e 06 00 00       	jmpq   2771f <miniz_oxide::inflate::core::decompress+0x1e4f>
   270d1:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   270d6:	4c 89 de             	mov    %r11,%rsi
   270d9:	4c 89 d2             	mov    %r10,%rdx
   270dc:	4c 8b 4c 24 68       	mov    0x68(%rsp),%r9
   270e1:	e8 ea e5 ff ff       	callq  256d0 <miniz_oxide::inflate::core::apply_match>
   270e6:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   270eb:	4c 8b 5c 24 40       	mov    0x40(%rsp),%r11
   270f0:	41 b7 0c             	mov    $0xc,%r15b
   270f3:	49 89 da             	mov    %rbx,%r10
   270f6:	44 8b 84 24 18 01 00 	mov    0x118(%rsp),%r8d
   270fd:	00 
   270fe:	e9 27 e9 ff ff       	jmpq   25a2a <miniz_oxide::inflate::core::decompress+0x15a>
   27103:	4c 89 64 24 50       	mov    %r12,0x50(%rsp)
   27108:	4c 8b 24 24          	mov    (%rsp),%r12
   2710c:	8b 6c 24 08          	mov    0x8(%rsp),%ebp
   27110:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   27114:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
   27118:	8b 54 24 10          	mov    0x10(%rsp),%edx
   2711c:	8b 74 24 14          	mov    0x14(%rsp),%esi
   27120:	4c 89 e8             	mov    %r13,%rax
   27123:	4c 29 f0             	sub    %r14,%rax
   27126:	41 b7 0c             	mov    $0xc,%r15b
   27129:	48 83 f8 0e          	cmp    $0xe,%rax
   2712d:	0f 82 af 04 00 00    	jb     275e2 <miniz_oxide::inflate::core::decompress+0x1d12>
   27133:	48 89 74 24 60       	mov    %rsi,0x60(%rsp)
   27138:	83 fd 1d             	cmp    $0x1d,%ebp
   2713b:	77 12                	ja     2714f <miniz_oxide::inflate::core::decompress+0x187f>
   2713d:	41 8b 06             	mov    (%r14),%eax
   27140:	89 e9                	mov    %ebp,%ecx
   27142:	48 d3 e0             	shl    %cl,%rax
   27145:	49 83 c6 04          	add    $0x4,%r14
   27149:	49 09 c4             	or     %rax,%r12
   2714c:	83 c5 20             	add    $0x20,%ebp
   2714f:	44 89 e0             	mov    %r12d,%eax
   27152:	25 ff 03 00 00       	and    $0x3ff,%eax
   27157:	41 0f bf 44 41 3c    	movswl 0x3c(%r9,%rax,2),%eax
   2715d:	85 c0                	test   %eax,%eax
   2715f:	78 0c                	js     2716d <miniz_oxide::inflate::core::decompress+0x189d>
   27161:	89 c1                	mov    %eax,%ecx
   27163:	c1 e9 09             	shr    $0x9,%ecx
   27166:	75 44                	jne    271ac <miniz_oxide::inflate::core::decompress+0x18dc>
   27168:	e9 3c 07 00 00       	jmpq   278a9 <miniz_oxide::inflate::core::decompress+0x1fd9>
   2716d:	b9 0a 00 00 00       	mov    $0xa,%ecx
   27172:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   27179:	00 00 00 
   2717c:	0f 1f 40 00          	nopl   0x0(%rax)
   27180:	f7 d0                	not    %eax
   27182:	4c 89 e2             	mov    %r12,%rdx
   27185:	48 d3 ea             	shr    %cl,%rdx
   27188:	83 e2 01             	and    $0x1,%edx
   2718b:	01 c2                	add    %eax,%edx
   2718d:	48 63 fa             	movslq %edx,%rdi
   27190:	81 ff 3f 02 00 00    	cmp    $0x23f,%edi
   27196:	0f 87 ce 08 00 00    	ja     27a6a <miniz_oxide::inflate::core::decompress+0x219a>
   2719c:	41 0f bf 84 79 3c 08 	movswl 0x83c(%r9,%rdi,2),%eax
   271a3:	00 00 
   271a5:	83 c1 01             	add    $0x1,%ecx
   271a8:	85 c0                	test   %eax,%eax
   271aa:	78 d4                	js     27180 <miniz_oxide::inflate::core::decompress+0x18b0>
   271ac:	49 d3 ec             	shr    %cl,%r12
   271af:	29 cd                	sub    %ecx,%ebp
   271b1:	a9 00 01 00 00       	test   $0x100,%eax
   271b6:	0f 85 ce 00 00 00    	jne    2728a <miniz_oxide::inflate::core::decompress+0x19ba>
   271bc:	44 89 e1             	mov    %r12d,%ecx
   271bf:	81 e1 ff 03 00 00    	and    $0x3ff,%ecx
   271c5:	41 0f bf 54 49 3c    	movswl 0x3c(%r9,%rcx,2),%edx
   271cb:	85 d2                	test   %edx,%edx
   271cd:	78 18                	js     271e7 <miniz_oxide::inflate::core::decompress+0x1917>
   271cf:	89 d1                	mov    %edx,%ecx
   271d1:	c1 e9 09             	shr    $0x9,%ecx
   271d4:	0f 84 d4 06 00 00    	je     278ae <miniz_oxide::inflate::core::decompress+0x1fde>
   271da:	49 d3 ec             	shr    %cl,%r12
   271dd:	4d 39 da             	cmp    %r11,%r10
   271e0:	72 4b                	jb     2722d <miniz_oxide::inflate::core::decompress+0x195d>
   271e2:	e9 97 08 00 00       	jmpq   27a7e <miniz_oxide::inflate::core::decompress+0x21ae>
   271e7:	b9 0a 00 00 00       	mov    $0xa,%ecx
   271ec:	0f 1f 40 00          	nopl   0x0(%rax)
   271f0:	f7 d2                	not    %edx
   271f2:	4c 89 e6             	mov    %r12,%rsi
   271f5:	48 d3 ee             	shr    %cl,%rsi
   271f8:	83 e6 01             	and    $0x1,%esi
   271fb:	01 d6                	add    %edx,%esi
   271fd:	48 63 fe             	movslq %esi,%rdi
   27200:	81 ff 3f 02 00 00    	cmp    $0x23f,%edi
   27206:	0f 87 5e 08 00 00    	ja     27a6a <miniz_oxide::inflate::core::decompress+0x219a>
   2720c:	41 0f bf 94 79 3c 08 	movswl 0x83c(%r9,%rdi,2),%edx
   27213:	00 00 
   27215:	83 c1 01             	add    $0x1,%ecx
   27218:	85 d2                	test   %edx,%edx
   2721a:	78 d4                	js     271f0 <miniz_oxide::inflate::core::decompress+0x1920>
   2721c:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
   27221:	49 d3 ec             	shr    %cl,%r12
   27224:	4d 39 da             	cmp    %r11,%r10
   27227:	0f 83 51 08 00 00    	jae    27a7e <miniz_oxide::inflate::core::decompress+0x21ae>
   2722d:	29 cd                	sub    %ecx,%ebp
   2722f:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   27234:	42 88 04 11          	mov    %al,(%rcx,%r10,1)
   27238:	49 8d 7a 01          	lea    0x1(%r10),%rdi
   2723c:	f7 c2 00 01 00 00    	test   $0x100,%edx
   27242:	75 41                	jne    27285 <miniz_oxide::inflate::core::decompress+0x19b5>
   27244:	4c 39 df             	cmp    %r11,%rdi
   27247:	0f 83 3d 08 00 00    	jae    27a8a <miniz_oxide::inflate::core::decompress+0x21ba>
   2724d:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   27252:	42 88 54 11 01       	mov    %dl,0x1(%rcx,%r10,1)
   27257:	49 83 c2 02          	add    $0x2,%r10
   2725b:	4c 89 d9             	mov    %r11,%rcx
   2725e:	4c 29 d1             	sub    %r10,%rcx
   27261:	48 81 f9 03 01 00 00 	cmp    $0x103,%rcx
   27268:	0f 82 72 03 00 00    	jb     275e0 <miniz_oxide::inflate::core::decompress+0x1d10>
   2726e:	4c 89 e9             	mov    %r13,%rcx
   27271:	4c 29 f1             	sub    %r14,%rcx
   27274:	89 c2                	mov    %eax,%edx
   27276:	48 83 f9 0e          	cmp    $0xe,%rcx
   2727a:	0f 83 b8 fe ff ff    	jae    27138 <miniz_oxide::inflate::core::decompress+0x1868>
   27280:	e9 5b 03 00 00       	jmpq   275e0 <miniz_oxide::inflate::core::decompress+0x1d10>
   27285:	49 89 fa             	mov    %rdi,%r10
   27288:	89 d0                	mov    %edx,%eax
   2728a:	89 c2                	mov    %eax,%edx
   2728c:	81 e2 ff 01 00 00    	and    $0x1ff,%edx
   27292:	81 fa 00 01 00 00    	cmp    $0x100,%edx
   27298:	0f 84 02 05 00 00    	je     277a0 <miniz_oxide::inflate::core::decompress+0x1ed0>
   2729e:	81 fa 1d 01 00 00    	cmp    $0x11d,%edx
   272a4:	0f 87 8b 07 00 00    	ja     27a35 <miniz_oxide::inflate::core::decompress+0x2165>
   272aa:	83 fd 1d             	cmp    $0x1d,%ebp
   272ad:	77 22                	ja     272d1 <miniz_oxide::inflate::core::decompress+0x1a01>
   272af:	4c 89 ee             	mov    %r13,%rsi
   272b2:	4c 29 f6             	sub    %r14,%rsi
   272b5:	48 83 fe 03          	cmp    $0x3,%rsi
   272b9:	0f 86 dd 07 00 00    	jbe    27a9c <miniz_oxide::inflate::core::decompress+0x21cc>
   272bf:	41 8b 16             	mov    (%r14),%edx
   272c2:	89 e9                	mov    %ebp,%ecx
   272c4:	48 d3 e2             	shl    %cl,%rdx
   272c7:	49 83 c6 04          	add    $0x4,%r14
   272cb:	49 09 d4             	or     %rdx,%r12
   272ce:	83 c5 20             	add    $0x20,%ebp
   272d1:	83 c0 ff             	add    $0xffffffff,%eax
   272d4:	83 e0 1f             	and    $0x1f,%eax
   272d7:	48 8d 0d ae 15 01 00 	lea    0x115ae(%rip),%rcx        # 3888c <str.6+0x156c>
   272de:	0f b6 34 08          	movzbl (%rax,%rcx,1),%esi
   272e2:	48 8d 0d e3 15 01 00 	lea    0x115e3(%rip),%rcx        # 388cc <str.6+0x15ac>
   272e9:	0f b7 0c 41          	movzwl (%rcx,%rax,2),%ecx
   272ed:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   272f2:	40 84 f6             	test   %sil,%sil
   272f5:	74 2d                	je     27324 <miniz_oxide::inflate::core::decompress+0x1a54>
   272f7:	89 cf                	mov    %ecx,%edi
   272f9:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
   27300:	89 f1                	mov    %esi,%ecx
   27302:	48 d3 e2             	shl    %cl,%rdx
   27305:	48 89 f1             	mov    %rsi,%rcx
   27308:	be ff ff ff ff       	mov    $0xffffffff,%esi
   2730d:	31 d6                	xor    %edx,%esi
   2730f:	44 21 e6             	and    %r12d,%esi
   27312:	49 d3 ec             	shr    %cl,%r12
   27315:	29 cd                	sub    %ecx,%ebp
   27317:	01 fe                	add    %edi,%esi
   27319:	89 f2                	mov    %esi,%edx
   2731b:	89 74 24 38          	mov    %esi,0x38(%rsp)
   2731f:	48 89 ce             	mov    %rcx,%rsi
   27322:	eb 04                	jmp    27328 <miniz_oxide::inflate::core::decompress+0x1a58>
   27324:	89 4c 24 38          	mov    %ecx,0x38(%rsp)
   27328:	44 89 e1             	mov    %r12d,%ecx
   2732b:	81 e1 ff 03 00 00    	and    $0x3ff,%ecx
   27331:	41 0f bf 94 49 dc 0d 	movswl 0xddc(%r9,%rcx,2),%edx
   27338:	00 00 
   2733a:	85 d2                	test   %edx,%edx
   2733c:	78 0c                	js     2734a <miniz_oxide::inflate::core::decompress+0x1a7a>
   2733e:	89 d1                	mov    %edx,%ecx
   27340:	c1 e9 09             	shr    $0x9,%ecx
   27343:	75 40                	jne    27385 <miniz_oxide::inflate::core::decompress+0x1ab5>
   27345:	e9 00 07 00 00       	jmpq   27a4a <miniz_oxide::inflate::core::decompress+0x217a>
   2734a:	48 89 74 24 60       	mov    %rsi,0x60(%rsp)
   2734f:	b9 0a 00 00 00       	mov    $0xa,%ecx
   27354:	f7 d2                	not    %edx
   27356:	4c 89 e6             	mov    %r12,%rsi
   27359:	48 d3 ee             	shr    %cl,%rsi
   2735c:	83 e6 01             	and    $0x1,%esi
   2735f:	01 d6                	add    %edx,%esi
   27361:	48 63 fe             	movslq %esi,%rdi
   27364:	81 ff 3f 02 00 00    	cmp    $0x23f,%edi
   2736a:	0f 87 fa 06 00 00    	ja     27a6a <miniz_oxide::inflate::core::decompress+0x219a>
   27370:	41 0f bf 94 79 dc 15 	movswl 0x15dc(%r9,%rdi,2),%edx
   27377:	00 00 
   27379:	83 c1 01             	add    $0x1,%ecx
   2737c:	85 d2                	test   %edx,%edx
   2737e:	78 d4                	js     27354 <miniz_oxide::inflate::core::decompress+0x1a84>
   27380:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
   27385:	49 d3 ec             	shr    %cl,%r12
   27388:	81 e2 ff 01 00 00    	and    $0x1ff,%edx
   2738e:	29 cd                	sub    %ecx,%ebp
   27390:	83 fa 1d             	cmp    $0x1d,%edx
   27393:	0f 87 a4 06 00 00    	ja     27a3d <miniz_oxide::inflate::core::decompress+0x216d>
   27399:	48 8d 0d 0c 15 01 00 	lea    0x1150c(%rip),%rcx        # 388ac <str.6+0x158c>
   273a0:	0f b6 34 0a          	movzbl (%rdx,%rcx,1),%esi
   273a4:	48 8d 0d 61 15 01 00 	lea    0x11561(%rip),%rcx        # 3890c <str.6+0x15ec>
   273ab:	0f b7 0c 51          	movzwl (%rcx,%rdx,2),%ecx
   273af:	89 4c 24 1c          	mov    %ecx,0x1c(%rsp)
   273b3:	85 f6                	test   %esi,%esi
   273b5:	74 4b                	je     27402 <miniz_oxide::inflate::core::decompress+0x1b32>
   273b7:	83 fd 1d             	cmp    $0x1d,%ebp
   273ba:	77 28                	ja     273e4 <miniz_oxide::inflate::core::decompress+0x1b14>
   273bc:	48 89 f7             	mov    %rsi,%rdi
   273bf:	4c 89 ee             	mov    %r13,%rsi
   273c2:	4c 29 f6             	sub    %r14,%rsi
   273c5:	48 83 fe 03          	cmp    $0x3,%rsi
   273c9:	0f 86 cd 06 00 00    	jbe    27a9c <miniz_oxide::inflate::core::decompress+0x21cc>
   273cf:	41 8b 16             	mov    (%r14),%edx
   273d2:	89 e9                	mov    %ebp,%ecx
   273d4:	48 d3 e2             	shl    %cl,%rdx
   273d7:	49 83 c6 04          	add    $0x4,%r14
   273db:	49 09 d4             	or     %rdx,%r12
   273de:	83 c5 20             	add    $0x20,%ebp
   273e1:	48 89 fe             	mov    %rdi,%rsi
   273e4:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
   273eb:	89 f1                	mov    %esi,%ecx
   273ed:	48 d3 e2             	shl    %cl,%rdx
   273f0:	31 d0                	xor    %edx,%eax
   273f2:	44 21 e0             	and    %r12d,%eax
   273f5:	49 d3 ec             	shr    %cl,%r12
   273f8:	29 f5                	sub    %esi,%ebp
   273fa:	03 44 24 1c          	add    0x1c(%rsp),%eax
   273fe:	89 c7                	mov    %eax,%edi
   27400:	eb 04                	jmp    27406 <miniz_oxide::inflate::core::decompress+0x1b36>
   27402:	8b 7c 24 1c          	mov    0x1c(%rsp),%edi
   27406:	89 f9                	mov    %edi,%ecx
   27408:	41 f6 c0 04          	test   $0x4,%r8b
   2740c:	8b 54 24 38          	mov    0x38(%rsp),%edx
   27410:	74 09                	je     2741b <miniz_oxide::inflate::core::decompress+0x1b4b>
   27412:	49 39 ca             	cmp    %rcx,%r10
   27415:	0f 82 27 06 00 00    	jb     27a42 <miniz_oxide::inflate::core::decompress+0x2172>
   2741b:	89 7c 24 1c          	mov    %edi,0x1c(%rsp)
   2741f:	41 89 d0             	mov    %edx,%r8d
   27422:	4c 89 84 24 a0 00 00 	mov    %r8,0xa0(%rsp)
   27429:	00 
   2742a:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   2742f:	48 89 74 24 60       	mov    %rsi,0x60(%rsp)
   27434:	4c 89 de             	mov    %r11,%rsi
   27437:	4c 89 d2             	mov    %r10,%rdx
   2743a:	4c 8b 4c 24 68       	mov    0x68(%rsp),%r9
   2743f:	4c 89 54 24 48       	mov    %r10,0x48(%rsp)
   27444:	e8 87 e2 ff ff       	callq  256d0 <miniz_oxide::inflate::core::apply_match>
   27449:	8b 54 24 38          	mov    0x38(%rsp),%edx
   2744d:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
   27452:	4c 8b 54 24 48       	mov    0x48(%rsp),%r10
   27457:	44 8b 84 24 18 01 00 	mov    0x118(%rsp),%r8d
   2745e:	00 
   2745f:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   27464:	4c 8b 5c 24 40       	mov    0x40(%rsp),%r11
   27469:	4c 03 94 24 a0 00 00 	add    0xa0(%rsp),%r10
   27470:	00 
   27471:	4c 89 d8             	mov    %r11,%rax
   27474:	4c 29 d0             	sub    %r10,%rax
   27477:	48 3d 03 01 00 00    	cmp    $0x103,%rax
   2747d:	0f 83 9d fc ff ff    	jae    27120 <miniz_oxide::inflate::core::decompress+0x1850>
   27483:	e9 5a 01 00 00       	jmpq   275e2 <miniz_oxide::inflate::core::decompress+0x1d12>
   27488:	89 6c 24 10          	mov    %ebp,0x10(%rsp)
   2748c:	49 89 fa             	mov    %rdi,%r10
   2748f:	e9 96 e5 ff ff       	jmpq   25a2a <miniz_oxide::inflate::core::decompress+0x15a>
   27494:	83 f8 0b             	cmp    $0xb,%eax
   27497:	72 45                	jb     274de <miniz_oxide::inflate::core::decompress+0x1c0e>
   27499:	bd 0c 00 00 00       	mov    $0xc,%ebp
   2749e:	f7 d6                	not    %esi
   274a0:	8d 4d fe             	lea    -0x2(%rbp),%ecx
   274a3:	48 89 d7             	mov    %rdx,%rdi
   274a6:	48 d3 ef             	shr    %cl,%rdi
   274a9:	83 e7 01             	and    $0x1,%edi
   274ac:	01 f7                	add    %esi,%edi
   274ae:	48 63 ff             	movslq %edi,%rdi
   274b1:	81 ff 3f 02 00 00    	cmp    $0x23f,%edi
   274b7:	0f 87 ca 06 00 00    	ja     27b87 <miniz_oxide::inflate::core::decompress+0x22b7>
   274bd:	41 0f b7 8c 79 3c 08 	movzwl 0x83c(%r9,%rdi,2),%ecx
   274c4:	00 00 
   274c6:	39 e8                	cmp    %ebp,%eax
   274c8:	72 0b                	jb     274d5 <miniz_oxide::inflate::core::decompress+0x1c05>
   274ca:	0f bf f1             	movswl %cx,%esi
   274cd:	83 c5 01             	add    $0x1,%ebp
   274d0:	66 85 f6             	test   %si,%si
   274d3:	78 c9                	js     2749e <miniz_oxide::inflate::core::decompress+0x1bce>
   274d5:	66 85 c9             	test   %cx,%cx
   274d8:	0f 89 41 02 00 00    	jns    2771f <miniz_oxide::inflate::core::decompress+0x1e4f>
   274de:	41 b7 0c             	mov    $0xc,%r15b
   274e1:	4d 39 f5             	cmp    %r14,%r13
   274e4:	0f 84 86 03 00 00    	je     27870 <miniz_oxide::inflate::core::decompress+0x1fa0>
   274ea:	4d 8d 46 01          	lea    0x1(%r14),%r8
   274ee:	41 0f b6 2e          	movzbl (%r14),%ebp
   274f2:	89 c1                	mov    %eax,%ecx
   274f4:	48 d3 e5             	shl    %cl,%rbp
   274f7:	48 09 d5             	or     %rdx,%rbp
   274fa:	48 89 2c 24          	mov    %rbp,(%rsp)
   274fe:	8d 50 08             	lea    0x8(%rax),%edx
   27501:	89 54 24 08          	mov    %edx,0x8(%rsp)
   27505:	83 fa 0f             	cmp    $0xf,%edx
   27508:	0f 83 01 02 00 00    	jae    2770f <miniz_oxide::inflate::core::decompress+0x1e3f>
   2750e:	89 e9                	mov    %ebp,%ecx
   27510:	81 e1 ff 03 00 00    	and    $0x3ff,%ecx
   27516:	41 0f bf 7c 49 3c    	movswl 0x3c(%r9,%rcx,2),%edi
   2751c:	85 ff                	test   %edi,%edi
   2751e:	0f 88 e8 00 00 00    	js     2760c <miniz_oxide::inflate::core::decompress+0x1d3c>
   27524:	c1 ef 09             	shr    $0x9,%edi
   27527:	0f 84 29 01 00 00    	je     27656 <miniz_oxide::inflate::core::decompress+0x1d86>
   2752d:	39 fa                	cmp    %edi,%edx
   2752f:	0f 83 da 01 00 00    	jae    2770f <miniz_oxide::inflate::core::decompress+0x1e3f>
   27535:	e9 1c 01 00 00       	jmpq   27656 <miniz_oxide::inflate::core::decompress+0x1d86>
   2753a:	41 b7 22             	mov    $0x22,%r15b
   2753d:	e9 e8 e4 ff ff       	jmpq   25a2a <miniz_oxide::inflate::core::decompress+0x15a>
   27542:	41 b7 22             	mov    $0x22,%r15b
   27545:	e9 e0 e4 ff ff       	jmpq   25a2a <miniz_oxide::inflate::core::decompress+0x15a>
   2754a:	41 0f b7 81 1d 29 00 	movzwl 0x291d(%r9),%eax
   27551:	00 
   27552:	41 0f b7 89 1f 29 00 	movzwl 0x291f(%r9),%ecx
   27559:	00 
   2755a:	f7 d1                	not    %ecx
   2755c:	89 44 24 10          	mov    %eax,0x10(%rsp)
   27560:	41 b7 1e             	mov    $0x1e,%r15b
   27563:	66 39 c8             	cmp    %cx,%ax
   27566:	0f 85 be e4 ff ff    	jne    25a2a <miniz_oxide::inflate::core::decompress+0x15a>
   2756c:	41 b7 14             	mov    $0x14,%r15b
   2756f:	66 85 c0             	test   %ax,%ax
   27572:	0f 84 b2 e4 ff ff    	je     25a2a <miniz_oxide::inflate::core::decompress+0x15a>
   27578:	83 7c 24 08 00       	cmpl   $0x0,0x8(%rsp)
   2757d:	b8 06 00 00 00       	mov    $0x6,%eax
   27582:	41 bf 11 00 00 00    	mov    $0x11,%r15d
   27588:	44 0f 44 f8          	cmove  %eax,%r15d
   2758c:	e9 99 e4 ff ff       	jmpq   25a2a <miniz_oxide::inflate::core::decompress+0x15a>
   27591:	ba 20 01 00 00       	mov    $0x120,%edx
   27596:	48 8b bc 24 a8 00 00 	mov    0xa8(%rsp),%rdi
   2759d:	00 
   2759e:	31 f6                	xor    %esi,%esi
   275a0:	4c 89 d3             	mov    %r10,%rbx
   275a3:	ff 15 5f e6 01 00    	callq  *0x1e65f(%rip)        # 45c08 <memset@GLIBC_2.2.5>
   275a9:	49 89 da             	mov    %rbx,%r10
   275ac:	44 8b 84 24 18 01 00 	mov    0x118(%rsp),%r8d
   275b3:	00 
   275b4:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   275b9:	4c 8b 5c 24 40       	mov    0x40(%rsp),%r11
   275be:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%rsp)
   275c5:	00 
   275c6:	41 b7 09             	mov    $0x9,%r15b
   275c9:	e9 5c e4 ff ff       	jmpq   25a2a <miniz_oxide::inflate::core::decompress+0x15a>
   275ce:	41 b7 18             	mov    $0x18,%r15b
   275d1:	e9 54 e4 ff ff       	jmpq   25a2a <miniz_oxide::inflate::core::decompress+0x15a>
   275d6:	66 41 bf 00 22       	mov    $0x2200,%r15w
   275db:	e9 c6 f7 ff ff       	jmpq   26da6 <miniz_oxide::inflate::core::decompress+0x14d6>
   275e0:	89 c2                	mov    %eax,%edx
   275e2:	4c 89 24 24          	mov    %r12,(%rsp)
   275e6:	89 6c 24 08          	mov    %ebp,0x8(%rsp)
   275ea:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
   275ee:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   275f2:	89 54 24 10          	mov    %edx,0x10(%rsp)
   275f6:	89 74 24 14          	mov    %esi,0x14(%rsp)
   275fa:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   275ff:	e9 26 e4 ff ff       	jmpq   25a2a <miniz_oxide::inflate::core::decompress+0x15a>
   27604:	41 b7 1a             	mov    $0x1a,%r15b
   27607:	e9 1e e4 ff ff       	jmpq   25a2a <miniz_oxide::inflate::core::decompress+0x15a>
   2760c:	83 fa 0b             	cmp    $0xb,%edx
   2760f:	72 45                	jb     27656 <miniz_oxide::inflate::core::decompress+0x1d86>
   27611:	bb 0c 00 00 00       	mov    $0xc,%ebx
   27616:	f7 d7                	not    %edi
   27618:	8d 4b fe             	lea    -0x2(%rbx),%ecx
   2761b:	48 89 ee             	mov    %rbp,%rsi
   2761e:	48 d3 ee             	shr    %cl,%rsi
   27621:	83 e6 01             	and    $0x1,%esi
   27624:	01 fe                	add    %edi,%esi
   27626:	48 63 fe             	movslq %esi,%rdi
   27629:	81 ff 3f 02 00 00    	cmp    $0x23f,%edi
   2762f:	0f 87 52 05 00 00    	ja     27b87 <miniz_oxide::inflate::core::decompress+0x22b7>
   27635:	41 0f b7 8c 79 3c 08 	movzwl 0x83c(%r9,%rdi,2),%ecx
   2763c:	00 00 
   2763e:	39 da                	cmp    %ebx,%edx
   27640:	72 0b                	jb     2764d <miniz_oxide::inflate::core::decompress+0x1d7d>
   27642:	0f bf f9             	movswl %cx,%edi
   27645:	83 c3 01             	add    $0x1,%ebx
   27648:	66 85 ff             	test   %di,%di
   2764b:	78 c9                	js     27616 <miniz_oxide::inflate::core::decompress+0x1d46>
   2764d:	66 85 c9             	test   %cx,%cx
   27650:	0f 89 b9 00 00 00    	jns    2770f <miniz_oxide::inflate::core::decompress+0x1e3f>
   27656:	4d 39 c5             	cmp    %r8,%r13
   27659:	0f 84 fb 03 00 00    	je     27a5a <miniz_oxide::inflate::core::decompress+0x218a>
   2765f:	4d 8d 46 02          	lea    0x2(%r14),%r8
   27663:	41 0f b6 76 01       	movzbl 0x1(%r14),%esi
   27668:	89 d1                	mov    %edx,%ecx
   2766a:	48 d3 e6             	shl    %cl,%rsi
   2766d:	48 09 f5             	or     %rsi,%rbp
   27670:	48 89 2c 24          	mov    %rbp,(%rsp)
   27674:	8d 50 10             	lea    0x10(%rax),%edx
   27677:	89 54 24 08          	mov    %edx,0x8(%rsp)
   2767b:	83 fa 0e             	cmp    $0xe,%edx
   2767e:	0f 87 8b 00 00 00    	ja     2770f <miniz_oxide::inflate::core::decompress+0x1e3f>
   27684:	89 e9                	mov    %ebp,%ecx
   27686:	81 e1 ff 03 00 00    	and    $0x3ff,%ecx
   2768c:	41 0f bf 7c 49 3c    	movswl 0x3c(%r9,%rcx,2),%edi
   27692:	85 ff                	test   %edi,%edi
   27694:	78 0b                	js     276a1 <miniz_oxide::inflate::core::decompress+0x1dd1>
   27696:	c1 ef 09             	shr    $0x9,%edi
   27699:	74 4c                	je     276e7 <miniz_oxide::inflate::core::decompress+0x1e17>
   2769b:	39 fa                	cmp    %edi,%edx
   2769d:	73 70                	jae    2770f <miniz_oxide::inflate::core::decompress+0x1e3f>
   2769f:	eb 46                	jmp    276e7 <miniz_oxide::inflate::core::decompress+0x1e17>
   276a1:	83 fa 0b             	cmp    $0xb,%edx
   276a4:	72 41                	jb     276e7 <miniz_oxide::inflate::core::decompress+0x1e17>
   276a6:	bb 0c 00 00 00       	mov    $0xc,%ebx
   276ab:	f7 d7                	not    %edi
   276ad:	8d 4b fe             	lea    -0x2(%rbx),%ecx
   276b0:	48 89 ee             	mov    %rbp,%rsi
   276b3:	48 d3 ee             	shr    %cl,%rsi
   276b6:	83 e6 01             	and    $0x1,%esi
   276b9:	01 fe                	add    %edi,%esi
   276bb:	48 63 fe             	movslq %esi,%rdi
   276be:	81 ff 3f 02 00 00    	cmp    $0x23f,%edi
   276c4:	0f 87 bd 04 00 00    	ja     27b87 <miniz_oxide::inflate::core::decompress+0x22b7>
   276ca:	41 0f b7 8c 79 3c 08 	movzwl 0x83c(%r9,%rdi,2),%ecx
   276d1:	00 00 
   276d3:	39 da                	cmp    %ebx,%edx
   276d5:	72 0b                	jb     276e2 <miniz_oxide::inflate::core::decompress+0x1e12>
   276d7:	0f bf f9             	movswl %cx,%edi
   276da:	83 c3 01             	add    $0x1,%ebx
   276dd:	66 85 ff             	test   %di,%di
   276e0:	78 c9                	js     276ab <miniz_oxide::inflate::core::decompress+0x1ddb>
   276e2:	66 85 c9             	test   %cx,%cx
   276e5:	79 28                	jns    2770f <miniz_oxide::inflate::core::decompress+0x1e3f>
   276e7:	4d 39 c5             	cmp    %r8,%r13
   276ea:	0f 84 6a 03 00 00    	je     27a5a <miniz_oxide::inflate::core::decompress+0x218a>
   276f0:	41 0f b6 76 02       	movzbl 0x2(%r14),%esi
   276f5:	49 83 c6 03          	add    $0x3,%r14
   276f9:	89 d1                	mov    %edx,%ecx
   276fb:	48 d3 e6             	shl    %cl,%rsi
   276fe:	48 09 f5             	or     %rsi,%rbp
   27701:	48 89 2c 24          	mov    %rbp,(%rsp)
   27705:	8d 50 18             	lea    0x18(%rax),%edx
   27708:	89 54 24 08          	mov    %edx,0x8(%rsp)
   2770c:	4d 89 f0             	mov    %r14,%r8
   2770f:	4d 89 c6             	mov    %r8,%r14
   27712:	89 d0                	mov    %edx,%eax
   27714:	48 89 ea             	mov    %rbp,%rdx
   27717:	44 8b 84 24 18 01 00 	mov    0x118(%rsp),%r8d
   2771e:	00 
   2771f:	89 d1                	mov    %edx,%ecx
   27721:	81 e1 ff 03 00 00    	and    $0x3ff,%ecx
   27727:	41 0f bf 74 49 3c    	movswl 0x3c(%r9,%rcx,2),%esi
   2772d:	85 f6                	test   %esi,%esi
   2772f:	78 0d                	js     2773e <miniz_oxide::inflate::core::decompress+0x1e6e>
   27731:	89 f1                	mov    %esi,%ecx
   27733:	c1 e9 09             	shr    $0x9,%ecx
   27736:	81 e6 ff 01 00 00    	and    $0x1ff,%esi
   2773c:	eb 3e                	jmp    2777c <miniz_oxide::inflate::core::decompress+0x1eac>
   2773e:	b9 0a 00 00 00       	mov    $0xa,%ecx
   27743:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2774a:	00 00 00 
   2774d:	0f 1f 00             	nopl   (%rax)
   27750:	f7 d6                	not    %esi
   27752:	48 89 d7             	mov    %rdx,%rdi
   27755:	48 d3 ef             	shr    %cl,%rdi
   27758:	83 e7 01             	and    $0x1,%edi
   2775b:	01 f7                	add    %esi,%edi
   2775d:	48 63 ff             	movslq %edi,%rdi
   27760:	81 ff 3f 02 00 00    	cmp    $0x23f,%edi
   27766:	0f 87 fe 02 00 00    	ja     27a6a <miniz_oxide::inflate::core::decompress+0x219a>
   2776c:	41 0f bf b4 79 3c 08 	movswl 0x83c(%r9,%rdi,2),%esi
   27773:	00 00 
   27775:	83 c1 01             	add    $0x1,%ecx
   27778:	85 f6                	test   %esi,%esi
   2777a:	78 d4                	js     27750 <miniz_oxide::inflate::core::decompress+0x1e80>
   2777c:	41 b7 22             	mov    $0x22,%r15b
   2777f:	85 c9                	test   %ecx,%ecx
   27781:	0f 84 a3 e2 ff ff    	je     25a2a <miniz_oxide::inflate::core::decompress+0x15a>
   27787:	48 d3 ea             	shr    %cl,%rdx
   2778a:	48 89 14 24          	mov    %rdx,(%rsp)
   2778e:	29 c8                	sub    %ecx,%eax
   27790:	89 44 24 08          	mov    %eax,0x8(%rsp)
   27794:	89 74 24 10          	mov    %esi,0x10(%rsp)
   27798:	41 b7 0d             	mov    $0xd,%r15b
   2779b:	e9 8a e2 ff ff       	jmpq   25a2a <miniz_oxide::inflate::core::decompress+0x15a>
   277a0:	41 b7 14             	mov    $0x14,%r15b
   277a3:	ba 00 01 00 00       	mov    $0x100,%edx
   277a8:	e9 35 fe ff ff       	jmpq   275e2 <miniz_oxide::inflate::core::decompress+0x1d12>
   277ad:	41 c6 44 24 08 fd    	movb   $0xfd,0x8(%r12)
   277b3:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
   277ba:	00 
   277bb:	49 c7 44 24 10 00 00 	movq   $0x0,0x10(%r12)
   277c2:	00 00 
   277c4:	e9 52 02 00 00       	jmpq   27a1b <miniz_oxide::inflate::core::decompress+0x214b>
   277c9:	49 f7 dd             	neg    %r13
   277cc:	41 b7 13             	mov    $0x13,%r15b
   277cf:	b2 02                	mov    $0x2,%dl
   277d1:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   277d6:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   277db:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   277e0:	44 8b 84 24 18 01 00 	mov    0x118(%rsp),%r8d
   277e7:	00 
   277e8:	e9 2f 01 00 00       	jmpq   2791c <miniz_oxide::inflate::core::decompress+0x204c>
   277ed:	41 c1 ef 08          	shr    $0x8,%r15d
   277f1:	44 89 fa             	mov    %r15d,%edx
   277f4:	41 b7 09             	mov    $0x9,%r15b
   277f7:	e9 01 01 00 00       	jmpq   278fd <miniz_oxide::inflate::core::decompress+0x202d>
   277fc:	41 c1 ef 08          	shr    $0x8,%r15d
   27800:	44 89 fa             	mov    %r15d,%edx
   27803:	41 b7 03             	mov    $0x3,%r15b
   27806:	e9 f2 00 00 00       	jmpq   278fd <miniz_oxide::inflate::core::decompress+0x202d>
   2780b:	41 c1 ef 08          	shr    $0x8,%r15d
   2780f:	44 89 fa             	mov    %r15d,%edx
   27812:	41 b7 0a             	mov    $0xa,%r15b
   27815:	e9 e3 00 00 00       	jmpq   278fd <miniz_oxide::inflate::core::decompress+0x202d>
   2781a:	41 c1 ef 08          	shr    $0x8,%r15d
   2781e:	44 89 fa             	mov    %r15d,%edx
   27821:	41 b7 0f             	mov    $0xf,%r15b
   27824:	e9 d4 00 00 00       	jmpq   278fd <miniz_oxide::inflate::core::decompress+0x202d>
   27829:	41 c1 ef 08          	shr    $0x8,%r15d
   2782d:	44 89 fa             	mov    %r15d,%edx
   27830:	41 b7 05             	mov    $0x5,%r15b
   27833:	e9 c5 00 00 00       	jmpq   278fd <miniz_oxide::inflate::core::decompress+0x202d>
   27838:	41 c1 ef 08          	shr    $0x8,%r15d
   2783c:	44 89 fa             	mov    %r15d,%edx
   2783f:	41 b7 08             	mov    $0x8,%r15b
   27842:	e9 b6 00 00 00       	jmpq   278fd <miniz_oxide::inflate::core::decompress+0x202d>
   27847:	41 c1 ef 08          	shr    $0x8,%r15d
   2784b:	44 89 fa             	mov    %r15d,%edx
   2784e:	41 b7 17             	mov    $0x17,%r15b
   27851:	e9 a7 00 00 00       	jmpq   278fd <miniz_oxide::inflate::core::decompress+0x202d>
   27856:	49 f7 dd             	neg    %r13
   27859:	41 b7 18             	mov    $0x18,%r15b
   2785c:	31 d2                	xor    %edx,%edx
   2785e:	e9 b4 00 00 00       	jmpq   27917 <miniz_oxide::inflate::core::decompress+0x2047>
   27863:	41 b7 12             	mov    $0x12,%r15b
   27866:	eb 72                	jmp    278da <miniz_oxide::inflate::core::decompress+0x200a>
   27868:	41 b7 01             	mov    $0x1,%r15b
   2786b:	eb 03                	jmp    27870 <miniz_oxide::inflate::core::decompress+0x1fa0>
   2786d:	41 b7 07             	mov    $0x7,%r15b
   27870:	8b 54 24 3c          	mov    0x3c(%rsp),%edx
   27874:	e9 84 00 00 00       	jmpq   278fd <miniz_oxide::inflate::core::decompress+0x202d>
   27879:	c1 e8 08             	shr    $0x8,%eax
   2787c:	41 b7 11             	mov    $0x11,%r15b
   2787f:	89 c2                	mov    %eax,%edx
   27881:	eb 7a                	jmp    278fd <miniz_oxide::inflate::core::decompress+0x202d>
   27883:	c1 e9 08             	shr    $0x8,%ecx
   27886:	41 b7 0e             	mov    $0xe,%r15b
   27889:	89 ca                	mov    %ecx,%edx
   2788b:	eb 70                	jmp    278fd <miniz_oxide::inflate::core::decompress+0x202d>
   2788d:	c1 e9 08             	shr    $0x8,%ecx
   27890:	41 b7 10             	mov    $0x10,%r15b
   27893:	89 ca                	mov    %ecx,%edx
   27895:	eb 66                	jmp    278fd <miniz_oxide::inflate::core::decompress+0x202d>
   27897:	c1 ea 08             	shr    $0x8,%edx
   2789a:	41 b7 04             	mov    $0x4,%r15b
   2789d:	eb 5e                	jmp    278fd <miniz_oxide::inflate::core::decompress+0x202d>
   2789f:	c1 e9 08             	shr    $0x8,%ecx
   278a2:	41 b7 0b             	mov    $0xb,%r15b
   278a5:	89 ca                	mov    %ecx,%edx
   278a7:	eb 54                	jmp    278fd <miniz_oxide::inflate::core::decompress+0x202d>
   278a9:	41 b7 22             	mov    $0x22,%r15b
   278ac:	eb 05                	jmp    278b3 <miniz_oxide::inflate::core::decompress+0x1fe3>
   278ae:	41 b7 22             	mov    $0x22,%r15b
   278b1:	89 c2                	mov    %eax,%edx
   278b3:	8b 7c 24 1c          	mov    0x1c(%rsp),%edi
   278b7:	4c 89 24 24          	mov    %r12,(%rsp)
   278bb:	89 6c 24 08          	mov    %ebp,0x8(%rsp)
   278bf:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
   278c3:	89 54 24 10          	mov    %edx,0x10(%rsp)
   278c7:	89 74 24 14          	mov    %esi,0x14(%rsp)
   278cb:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   278d0:	eb 0d                	jmp    278df <miniz_oxide::inflate::core::decompress+0x200f>
   278d2:	41 b7 06             	mov    $0x6,%r15b
   278d5:	eb 03                	jmp    278da <miniz_oxide::inflate::core::decompress+0x200a>
   278d7:	41 b7 0d             	mov    $0xd,%r15b
   278da:	b3 02                	mov    $0x2,%bl
   278dc:	4d 89 da             	mov    %r11,%r10
   278df:	49 f7 dd             	neg    %r13
   278e2:	89 da                	mov    %ebx,%edx
   278e4:	eb 31                	jmp    27917 <miniz_oxide::inflate::core::decompress+0x2047>
   278e6:	41 89 df             	mov    %ebx,%r15d
   278e9:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   278ee:	4c 8b 54 24 48       	mov    0x48(%rsp),%r10
   278f3:	41 c1 ef 08          	shr    $0x8,%r15d
   278f7:	44 89 fa             	mov    %r15d,%edx
   278fa:	41 b7 02             	mov    $0x2,%r15b
   278fd:	49 f7 dd             	neg    %r13
   27900:	80 fa fc             	cmp    $0xfc,%dl
   27903:	74 0e                	je     27913 <miniz_oxide::inflate::core::decompress+0x2043>
   27905:	80 fa 01             	cmp    $0x1,%dl
   27908:	75 0d                	jne    27917 <miniz_oxide::inflate::core::decompress+0x2047>
   2790a:	4d 39 da             	cmp    %r11,%r10
   2790d:	0f 94 c2             	sete   %dl
   27910:	80 c2 01             	add    $0x1,%dl
   27913:	31 db                	xor    %ebx,%ebx
   27915:	eb 26                	jmp    2793d <miniz_oxide::inflate::core::decompress+0x206d>
   27917:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   2791c:	44 01 e8             	add    %r13d,%eax
   2791f:	44 01 f0             	add    %r14d,%eax
   27922:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
   27926:	89 cb                	mov    %ecx,%ebx
   27928:	c1 eb 03             	shr    $0x3,%ebx
   2792b:	39 c3                	cmp    %eax,%ebx
   2792d:	0f 47 d8             	cmova  %eax,%ebx
   27930:	8d 04 dd 00 00 00 00 	lea    0x0(,%rbx,8),%eax
   27937:	29 c1                	sub    %eax,%ecx
   27939:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   2793d:	45 88 b9 1c 29 00 00 	mov    %r15b,0x291c(%r9)
   27944:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
   27948:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   2794f:	48 d3 e0             	shl    %cl,%rax
   27952:	48 f7 d0             	not    %rax
   27955:	48 23 04 24          	and    (%rsp),%rax
   27959:	41 89 49 08          	mov    %ecx,0x8(%r9)
   2795d:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
   27961:	41 89 49 24          	mov    %ecx,0x24(%r9)
   27965:	8b 4c 24 10          	mov    0x10(%rsp),%ecx
   27969:	41 89 49 28          	mov    %ecx,0x28(%r9)
   2796d:	8b 4c 24 14          	mov    0x14(%rsp),%ecx
   27971:	41 89 49 2c          	mov    %ecx,0x2c(%r9)
   27975:	49 89 01             	mov    %rax,(%r9)
   27978:	41 f6 c0 09          	test   $0x9,%r8b
   2797c:	74 79                	je     279f7 <miniz_oxide::inflate::core::decompress+0x2127>
   2797e:	84 d2                	test   %dl,%dl
   27980:	78 75                	js     279f7 <miniz_oxide::inflate::core::decompress+0x2127>
   27982:	4c 89 d5             	mov    %r10,%rbp
   27985:	48 2b ac 24 10 01 00 	sub    0x110(%rsp),%rbp
   2798c:	00 
   2798d:	0f 82 74 02 00 00    	jb     27c07 <miniz_oxide::inflate::core::decompress+0x2337>
   27993:	4d 39 da             	cmp    %r11,%r10
   27996:	0f 87 85 02 00 00    	ja     27c21 <miniz_oxide::inflate::core::decompress+0x2351>
   2799c:	41 89 d7             	mov    %edx,%r15d
   2799f:	41 8b 41 20          	mov    0x20(%r9),%eax
   279a3:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   279a8:	48 03 b4 24 10 01 00 	add    0x110(%rsp),%rsi
   279af:	00 
   279b0:	66 89 44 24 70       	mov    %ax,0x70(%rsp)
   279b5:	c1 e8 10             	shr    $0x10,%eax
   279b8:	66 89 44 24 72       	mov    %ax,0x72(%rsp)
   279bd:	48 8d 7c 24 70       	lea    0x70(%rsp),%rdi
   279c2:	48 89 ea             	mov    %rbp,%rdx
   279c5:	ff 15 25 e5 01 00    	callq  *0x1e525(%rip)        # 45ef0 <_GLOBAL_OFFSET_TABLE_+0x568>
   279cb:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   279d0:	8b 44 24 70          	mov    0x70(%rsp),%eax
   279d4:	89 41 20             	mov    %eax,0x20(%rcx)
   279d7:	8b 94 24 18 01 00 00 	mov    0x118(%rsp),%edx
   279de:	f6 c2 01             	test   $0x1,%dl
   279e1:	74 4d                	je     27a30 <miniz_oxide::inflate::core::decompress+0x2160>
   279e3:	44 89 fa             	mov    %r15d,%edx
   279e6:	84 d2                	test   %dl,%dl
   279e8:	75 18                	jne    27a02 <miniz_oxide::inflate::core::decompress+0x2132>
   279ea:	3b 41 14             	cmp    0x14(%rcx),%eax
   279ed:	0f 94 c2             	sete   %dl
   279f0:	00 d2                	add    %dl,%dl
   279f2:	80 c2 fe             	add    $0xfe,%dl
   279f5:	eb 0b                	jmp    27a02 <miniz_oxide::inflate::core::decompress+0x2132>
   279f7:	4c 2b 94 24 10 01 00 	sub    0x110(%rsp),%r10
   279fe:	00 
   279ff:	4c 89 d5             	mov    %r10,%rbp
   27a02:	4c 03 6c 24 58       	add    0x58(%rsp),%r13
   27a07:	49 29 dd             	sub    %rbx,%r13
   27a0a:	4d 01 f5             	add    %r14,%r13
   27a0d:	41 88 54 24 08       	mov    %dl,0x8(%r12)
   27a12:	4d 89 2c 24          	mov    %r13,(%r12)
   27a16:	49 89 6c 24 10       	mov    %rbp,0x10(%r12)
   27a1b:	4c 89 e0             	mov    %r12,%rax
   27a1e:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
   27a25:	5b                   	pop    %rbx
   27a26:	41 5c                	pop    %r12
   27a28:	41 5d                	pop    %r13
   27a2a:	41 5e                	pop    %r14
   27a2c:	41 5f                	pop    %r15
   27a2e:	5d                   	pop    %rbp
   27a2f:	c3                   	retq   
   27a30:	44 89 fa             	mov    %r15d,%edx
   27a33:	eb cd                	jmp    27a02 <miniz_oxide::inflate::core::decompress+0x2132>
   27a35:	41 b7 20             	mov    $0x20,%r15b
   27a38:	e9 76 fe ff ff       	jmpq   278b3 <miniz_oxide::inflate::core::decompress+0x1fe3>
   27a3d:	41 b7 21             	mov    $0x21,%r15b
   27a40:	eb 0b                	jmp    27a4d <miniz_oxide::inflate::core::decompress+0x217d>
   27a42:	41 b7 1d             	mov    $0x1d,%r15b
   27a45:	e9 6d fe ff ff       	jmpq   278b7 <miniz_oxide::inflate::core::decompress+0x1fe7>
   27a4a:	41 b7 22             	mov    $0x22,%r15b
   27a4d:	8b 7c 24 1c          	mov    0x1c(%rsp),%edi
   27a51:	8b 54 24 38          	mov    0x38(%rsp),%edx
   27a55:	e9 5d fe ff ff       	jmpq   278b7 <miniz_oxide::inflate::core::decompress+0x1fe7>
   27a5a:	4d 89 c6             	mov    %r8,%r14
   27a5d:	44 8b 84 24 18 01 00 	mov    0x118(%rsp),%r8d
   27a64:	00 
   27a65:	e9 06 fe ff ff       	jmpq   27870 <miniz_oxide::inflate::core::decompress+0x1fa0>
   27a6a:	48 8d 15 17 cd 01 00 	lea    0x1cd17(%rip),%rdx        # 44788 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1250>
   27a71:	be 40 02 00 00       	mov    $0x240,%esi
   27a76:	ff 15 14 e2 01 00    	callq  *0x1e214(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   27a7c:	0f 0b                	ud2    
   27a7e:	48 8d 15 e3 d1 01 00 	lea    0x1d1e3(%rip),%rdx        # 44c68 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1730>
   27a85:	4c 89 d7             	mov    %r10,%rdi
   27a88:	eb 07                	jmp    27a91 <miniz_oxide::inflate::core::decompress+0x21c1>
   27a8a:	48 8d 15 d7 d1 01 00 	lea    0x1d1d7(%rip),%rdx        # 44c68 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1730>
   27a91:	4c 89 de             	mov    %r11,%rsi
   27a94:	ff 15 f6 e1 01 00    	callq  *0x1e1f6(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   27a9a:	0f 0b                	ud2    
   27a9c:	48 8d 15 fd cc 01 00 	lea    0x1ccfd(%rip),%rdx        # 447a0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1268>
   27aa3:	bf 04 00 00 00       	mov    $0x4,%edi
   27aa8:	ff 15 7a df 01 00    	callq  *0x1df7a(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   27aae:	0f 0b                	ud2    
   27ab0:	48 8d 15 a9 d0 01 00 	lea    0x1d0a9(%rip),%rdx        # 44b60 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1628>
   27ab7:	be 20 01 00 00       	mov    $0x120,%esi
   27abc:	4c 89 ff             	mov    %r15,%rdi
   27abf:	ff 15 63 df 01 00    	callq  *0x1df63(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   27ac5:	0f 0b                	ud2    
   27ac7:	48 8d 15 aa d0 01 00 	lea    0x1d0aa(%rip),%rdx        # 44b78 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1640>
   27ace:	be 20 01 00 00       	mov    $0x120,%esi
   27ad3:	48 89 ef             	mov    %rbp,%rdi
   27ad6:	ff 15 4c df 01 00    	callq  *0x1df4c(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   27adc:	0f 0b                	ud2    
   27ade:	48 8d 15 ab d0 01 00 	lea    0x1d0ab(%rip),%rdx        # 44b90 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1658>
   27ae5:	48 89 fe             	mov    %rdi,%rsi
   27ae8:	4c 89 ff             	mov    %r15,%rdi
   27aeb:	ff 15 af e3 01 00    	callq  *0x1e3af(%rip)        # 45ea0 <_GLOBAL_OFFSET_TABLE_+0x518>
   27af1:	0f 0b                	ud2    
   27af3:	48 8d 15 96 d0 01 00 	lea    0x1d096(%rip),%rdx        # 44b90 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1658>
   27afa:	be c9 01 00 00       	mov    $0x1c9,%esi
   27aff:	ff 15 23 df 01 00    	callq  *0x1df23(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   27b05:	0f 0b                	ud2    
   27b07:	48 8d 15 62 cc 01 00 	lea    0x1cc62(%rip),%rdx        # 44770 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1238>
   27b0e:	48 89 fe             	mov    %rdi,%rsi
   27b11:	48 89 ef             	mov    %rbp,%rdi
   27b14:	ff 15 be e4 01 00    	callq  *0x1e4be(%rip)        # 45fd8 <_GLOBAL_OFFSET_TABLE_+0x650>
   27b1a:	0f 0b                	ud2    
   27b1c:	48 8d 15 cd d0 01 00 	lea    0x1d0cd(%rip),%rdx        # 44bf0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x16b8>
   27b23:	eb 29                	jmp    27b4e <miniz_oxide::inflate::core::decompress+0x227e>
   27b25:	48 8d 15 dc d0 01 00 	lea    0x1d0dc(%rip),%rdx        # 44c08 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x16d0>
   27b2c:	eb 0c                	jmp    27b3a <miniz_oxide::inflate::core::decompress+0x226a>
   27b2e:	48 8d 15 eb d0 01 00 	lea    0x1d0eb(%rip),%rdx        # 44c20 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x16e8>
   27b35:	bf 03 00 00 00       	mov    $0x3,%edi
   27b3a:	be 03 00 00 00       	mov    $0x3,%esi
   27b3f:	ff 15 4b e1 01 00    	callq  *0x1e14b(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   27b45:	0f 0b                	ud2    
   27b47:	48 8d 15 ea d0 01 00 	lea    0x1d0ea(%rip),%rdx        # 44c38 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1700>
   27b4e:	be c9 01 00 00       	mov    $0x1c9,%esi
   27b53:	ff 15 37 e1 01 00    	callq  *0x1e137(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   27b59:	0f 0b                	ud2    
   27b5b:	48 8d 15 ee d0 01 00 	lea    0x1d0ee(%rip),%rdx        # 44c50 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1718>
   27b62:	4c 89 ff             	mov    %r15,%rdi
   27b65:	48 89 c6             	mov    %rax,%rsi
   27b68:	ff 15 32 e3 01 00    	callq  *0x1e332(%rip)        # 45ea0 <_GLOBAL_OFFSET_TABLE_+0x518>
   27b6e:	0f 0b                	ud2    
   27b70:	48 8d 15 d9 d0 01 00 	lea    0x1d0d9(%rip),%rdx        # 44c50 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1718>
   27b77:	be c9 01 00 00       	mov    $0x1c9,%esi
   27b7c:	48 89 c7             	mov    %rax,%rdi
   27b7f:	ff 15 a3 de 01 00    	callq  *0x1dea3(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   27b85:	0f 0b                	ud2    
   27b87:	48 8d 15 2a cc 01 00 	lea    0x1cc2a(%rip),%rdx        # 447b8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1280>
   27b8e:	be 40 02 00 00       	mov    $0x240,%esi
   27b93:	ff 15 f7 e0 01 00    	callq  *0x1e0f7(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   27b99:	0f 0b                	ud2    
   27b9b:	48 8d 15 36 d0 01 00 	lea    0x1d036(%rip),%rdx        # 44bd8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x16a0>
   27ba2:	be 13 00 00 00       	mov    $0x13,%esi
   27ba7:	ff 15 e3 e0 01 00    	callq  *0x1e0e3(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   27bad:	0f 0b                	ud2    
   27baf:	48 8d 15 f2 cf 01 00 	lea    0x1cff2(%rip),%rdx        # 44ba8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1670>
   27bb6:	48 89 df             	mov    %rbx,%rdi
   27bb9:	48 89 ee             	mov    %rbp,%rsi
   27bbc:	ff 15 66 de 01 00    	callq  *0x1de66(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   27bc2:	0f 0b                	ud2    
   27bc4:	48 8d 15 b5 d0 01 00 	lea    0x1d0b5(%rip),%rdx        # 44c80 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1748>
   27bcb:	4c 89 d7             	mov    %r10,%rdi
   27bce:	4c 89 e6             	mov    %r12,%rsi
   27bd1:	ff 15 c9 e2 01 00    	callq  *0x1e2c9(%rip)        # 45ea0 <_GLOBAL_OFFSET_TABLE_+0x518>
   27bd7:	0f 0b                	ud2    
   27bd9:	48 8d 15 a0 d0 01 00 	lea    0x1d0a0(%rip),%rdx        # 44c80 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1748>
   27be0:	4c 89 e7             	mov    %r12,%rdi
   27be3:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
   27be8:	ff 15 3a de 01 00    	callq  *0x1de3a(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   27bee:	0f 0b                	ud2    
   27bf0:	48 8d 15 51 cf 01 00 	lea    0x1cf51(%rip),%rdx        # 44b48 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1610>
   27bf7:	4c 89 f7             	mov    %r14,%rdi
   27bfa:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
   27bff:	ff 15 eb e1 01 00    	callq  *0x1e1eb(%rip)        # 45df0 <_GLOBAL_OFFSET_TABLE_+0x468>
   27c05:	0f 0b                	ud2    
   27c07:	48 8d 15 b2 cf 01 00 	lea    0x1cfb2(%rip),%rdx        # 44bc0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1688>
   27c0e:	48 8b bc 24 10 01 00 	mov    0x110(%rsp),%rdi
   27c15:	00 
   27c16:	4c 89 d6             	mov    %r10,%rsi
   27c19:	ff 15 81 e2 01 00    	callq  *0x1e281(%rip)        # 45ea0 <_GLOBAL_OFFSET_TABLE_+0x518>
   27c1f:	0f 0b                	ud2    
   27c21:	48 8d 15 98 cf 01 00 	lea    0x1cf98(%rip),%rdx        # 44bc0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1688>
   27c28:	4c 89 d7             	mov    %r10,%rdi
   27c2b:	4c 89 de             	mov    %r11,%rsi
   27c2e:	ff 15 f4 dd 01 00    	callq  *0x1ddf4(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   27c34:	0f 0b                	ud2    
   27c36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   27c3d:	00 00 00 

0000000000027c40 <adler::Adler32::write_slice>:
   27c40:	55                   	push   %rbp
   27c41:	41 57                	push   %r15
   27c43:	41 56                	push   %r14
   27c45:	41 55                	push   %r13
   27c47:	41 54                	push   %r12
   27c49:	53                   	push   %rbx
   27c4a:	48 83 ec 48          	sub    $0x48,%rsp
   27c4e:	48 89 d5             	mov    %rdx,%rbp
   27c51:	44 0f b7 0f          	movzwl (%rdi),%r9d
   27c55:	44 0f b7 47 02       	movzwl 0x2(%rdi),%r8d
   27c5a:	89 eb                	mov    %ebp,%ebx
   27c5c:	83 e3 03             	and    $0x3,%ebx
   27c5f:	48 83 e5 fc          	and    $0xfffffffffffffffc,%rbp
   27c63:	48 89 e8             	mov    %rbp,%rax
   27c66:	48 c1 e8 06          	shr    $0x6,%rax
   27c6a:	48 b9 b7 98 63 bb a6 	movabs $0x179baa6bb6398b7,%rcx
   27c71:	ba 79 01 
   27c74:	48 f7 e1             	mul    %rcx
   27c77:	48 d1 ea             	shr    %rdx
   27c7a:	4c 69 d2 c0 56 00 00 	imul   $0x56c0,%rdx,%r10
   27c81:	48 89 e8             	mov    %rbp,%rax
   27c84:	4c 29 d0             	sub    %r10,%rax
   27c87:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   27c8c:	31 c9                	xor    %ecx,%ecx
   27c8e:	49 81 fa c0 56 00 00 	cmp    $0x56c0,%r10
   27c95:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
   27c9a:	48 89 6c 24 30       	mov    %rbp,0x30(%rsp)
   27c9f:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
   27ca4:	48 89 5c 24 38       	mov    %rbx,0x38(%rsp)
   27ca9:	4c 89 04 24          	mov    %r8,(%rsp)
   27cad:	44 89 4c 24 08       	mov    %r9d,0x8(%rsp)
   27cb2:	4c 89 54 24 28       	mov    %r10,0x28(%rsp)
   27cb7:	73 16                	jae    27ccf <adler::Adler32::write_slice+0x8f>
   27cb9:	31 db                	xor    %ebx,%ebx
   27cbb:	31 ed                	xor    %ebp,%ebp
   27cbd:	31 d2                	xor    %edx,%edx
   27cbf:	31 c0                	xor    %eax,%eax
   27cc1:	45 31 e4             	xor    %r12d,%r12d
   27cc4:	45 31 ff             	xor    %r15d,%r15d
   27cc7:	45 31 f6             	xor    %r14d,%r14d
   27cca:	e9 91 01 00 00       	jmpq   27e60 <adler::Adler32::write_slice+0x220>
   27ccf:	41 69 c1 c0 56 00 00 	imul   $0x56c0,%r9d,%eax
   27cd6:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   27cda:	31 d2                	xor    %edx,%edx
   27cdc:	31 ed                	xor    %ebp,%ebp
   27cde:	31 db                	xor    %ebx,%ebx
   27ce0:	31 c9                	xor    %ecx,%ecx
   27ce2:	45 31 f6             	xor    %r14d,%r14d
   27ce5:	45 31 ff             	xor    %r15d,%r15d
   27ce8:	45 31 e4             	xor    %r12d,%r12d
   27ceb:	31 c0                	xor    %eax,%eax
   27ced:	49 89 f1             	mov    %rsi,%r9
   27cf0:	49 8d b1 c0 56 00 00 	lea    0x56c0(%r9),%rsi
   27cf7:	48 89 74 24 40       	mov    %rsi,0x40(%rsp)
   27cfc:	48 c7 c6 40 a9 ff ff 	mov    $0xffffffffffffa940,%rsi
   27d03:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   27d0a:	00 00 00 
   27d0d:	0f 1f 00             	nopl   (%rax)
   27d10:	45 0f b6 ac 31 c0 56 	movzbl 0x56c0(%r9,%rsi,1),%r13d
   27d17:	00 00 
   27d19:	41 01 c5             	add    %eax,%r13d
   27d1c:	41 0f b6 bc 31 c1 56 	movzbl 0x56c1(%r9,%rsi,1),%edi
   27d23:	00 00 
   27d25:	44 01 e7             	add    %r12d,%edi
   27d28:	45 0f b6 84 31 c2 56 	movzbl 0x56c2(%r9,%rsi,1),%r8d
   27d2f:	00 00 
   27d31:	45 01 f8             	add    %r15d,%r8d
   27d34:	45 0f b6 9c 31 c3 56 	movzbl 0x56c3(%r9,%rsi,1),%r11d
   27d3b:	00 00 
   27d3d:	45 01 f3             	add    %r14d,%r11d
   27d40:	44 01 e9             	add    %r13d,%ecx
   27d43:	01 fb                	add    %edi,%ebx
   27d45:	44 01 c5             	add    %r8d,%ebp
   27d48:	44 01 da             	add    %r11d,%edx
   27d4b:	41 0f b6 84 31 c4 56 	movzbl 0x56c4(%r9,%rsi,1),%eax
   27d52:	00 00 
   27d54:	45 0f b6 a4 31 c5 56 	movzbl 0x56c5(%r9,%rsi,1),%r12d
   27d5b:	00 00 
   27d5d:	45 0f b6 bc 31 c6 56 	movzbl 0x56c6(%r9,%rsi,1),%r15d
   27d64:	00 00 
   27d66:	45 0f b6 b4 31 c7 56 	movzbl 0x56c7(%r9,%rsi,1),%r14d
   27d6d:	00 00 
   27d6f:	44 01 e8             	add    %r13d,%eax
   27d72:	41 01 fc             	add    %edi,%r12d
   27d75:	45 01 c7             	add    %r8d,%r15d
   27d78:	45 01 de             	add    %r11d,%r14d
   27d7b:	01 c1                	add    %eax,%ecx
   27d7d:	44 01 e3             	add    %r12d,%ebx
   27d80:	44 01 fd             	add    %r15d,%ebp
   27d83:	44 01 f2             	add    %r14d,%edx
   27d86:	48 83 c6 08          	add    $0x8,%rsi
   27d8a:	75 84                	jne    27d10 <adler::Adler32::write_slice+0xd0>
   27d8c:	49 81 c2 40 a9 ff ff 	add    $0xffffffffffffa940,%r10
   27d93:	48 8b 3c 24          	mov    (%rsp),%rdi
   27d97:	03 7c 24 0c          	add    0xc(%rsp),%edi
   27d9b:	89 c6                	mov    %eax,%esi
   27d9d:	41 b8 71 80 07 80    	mov    $0x80078071,%r8d
   27da3:	49 0f af f0          	imul   %r8,%rsi
   27da7:	48 c1 ee 2f          	shr    $0x2f,%rsi
   27dab:	69 f6 f1 ff 00 00    	imul   $0xfff1,%esi,%esi
   27db1:	29 f0                	sub    %esi,%eax
   27db3:	44 89 e6             	mov    %r12d,%esi
   27db6:	49 0f af f0          	imul   %r8,%rsi
   27dba:	48 c1 ee 2f          	shr    $0x2f,%rsi
   27dbe:	69 f6 f1 ff 00 00    	imul   $0xfff1,%esi,%esi
   27dc4:	41 29 f4             	sub    %esi,%r12d
   27dc7:	44 89 fe             	mov    %r15d,%esi
   27dca:	49 0f af f0          	imul   %r8,%rsi
   27dce:	48 c1 ee 2f          	shr    $0x2f,%rsi
   27dd2:	69 f6 f1 ff 00 00    	imul   $0xfff1,%esi,%esi
   27dd8:	41 29 f7             	sub    %esi,%r15d
   27ddb:	44 89 f6             	mov    %r14d,%esi
   27dde:	49 0f af f0          	imul   %r8,%rsi
   27de2:	48 c1 ee 2f          	shr    $0x2f,%rsi
   27de6:	69 f6 f1 ff 00 00    	imul   $0xfff1,%esi,%esi
   27dec:	41 29 f6             	sub    %esi,%r14d
   27def:	89 ce                	mov    %ecx,%esi
   27df1:	49 0f af f0          	imul   %r8,%rsi
   27df5:	48 c1 ee 2f          	shr    $0x2f,%rsi
   27df9:	69 f6 f1 ff 00 00    	imul   $0xfff1,%esi,%esi
   27dff:	29 f1                	sub    %esi,%ecx
   27e01:	89 de                	mov    %ebx,%esi
   27e03:	49 0f af f0          	imul   %r8,%rsi
   27e07:	48 c1 ee 2f          	shr    $0x2f,%rsi
   27e0b:	69 f6 f1 ff 00 00    	imul   $0xfff1,%esi,%esi
   27e11:	29 f3                	sub    %esi,%ebx
   27e13:	89 ee                	mov    %ebp,%esi
   27e15:	49 0f af f0          	imul   %r8,%rsi
   27e19:	48 c1 ee 2f          	shr    $0x2f,%rsi
   27e1d:	69 f6 f1 ff 00 00    	imul   $0xfff1,%esi,%esi
   27e23:	29 f5                	sub    %esi,%ebp
   27e25:	89 d6                	mov    %edx,%esi
   27e27:	49 0f af f0          	imul   %r8,%rsi
   27e2b:	48 c1 ee 2f          	shr    $0x2f,%rsi
   27e2f:	69 f6 f1 ff 00 00    	imul   $0xfff1,%esi,%esi
   27e35:	29 f2                	sub    %esi,%edx
   27e37:	48 89 fe             	mov    %rdi,%rsi
   27e3a:	49 0f af f0          	imul   %r8,%rsi
   27e3e:	48 c1 ee 2f          	shr    $0x2f,%rsi
   27e42:	69 f6 f1 ff 00 00    	imul   $0xfff1,%esi,%esi
   27e48:	29 f7                	sub    %esi,%edi
   27e4a:	48 89 3c 24          	mov    %rdi,(%rsp)
   27e4e:	4c 8b 4c 24 40       	mov    0x40(%rsp),%r9
   27e53:	49 81 fa c0 56 00 00 	cmp    $0x56c0,%r10
   27e5a:	0f 83 90 fe ff ff    	jae    27cf0 <adler::Adler32::write_slice+0xb0>
   27e60:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
   27e65:	49 81 e0 fc 7f 00 00 	and    $0x7ffc,%r8
   27e6c:	0f 84 c5 00 00 00    	je     27f37 <adler::Adler32::write_slice+0x2f7>
   27e72:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   27e77:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
   27e7c:	4c 01 df             	add    %r11,%rdi
   27e7f:	4d 8d 48 fc          	lea    -0x4(%r8),%r9
   27e83:	41 f6 c1 04          	test   $0x4,%r9b
   27e87:	75 2f                	jne    27eb8 <adler::Adler32::write_slice+0x278>
   27e89:	0f b6 37             	movzbl (%rdi),%esi
   27e8c:	44 0f b6 47 01       	movzbl 0x1(%rdi),%r8d
   27e91:	44 0f b6 57 02       	movzbl 0x2(%rdi),%r10d
   27e96:	44 0f b6 6f 03       	movzbl 0x3(%rdi),%r13d
   27e9b:	48 83 c7 04          	add    $0x4,%rdi
   27e9f:	01 f0                	add    %esi,%eax
   27ea1:	45 01 c4             	add    %r8d,%r12d
   27ea4:	45 01 d7             	add    %r10d,%r15d
   27ea7:	45 01 ee             	add    %r13d,%r14d
   27eaa:	01 c1                	add    %eax,%ecx
   27eac:	44 01 e3             	add    %r12d,%ebx
   27eaf:	44 01 fd             	add    %r15d,%ebp
   27eb2:	44 01 f2             	add    %r14d,%edx
   27eb5:	4d 89 c8             	mov    %r9,%r8
   27eb8:	49 89 fd             	mov    %rdi,%r13
   27ebb:	4d 85 c9             	test   %r9,%r9
   27ebe:	0f 84 73 00 00 00    	je     27f37 <adler::Adler32::write_slice+0x2f7>
   27ec4:	31 f6                	xor    %esi,%esi
   27ec6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   27ecd:	00 00 00 
   27ed0:	45 0f b6 4c 35 00    	movzbl 0x0(%r13,%rsi,1),%r9d
   27ed6:	41 01 c1             	add    %eax,%r9d
   27ed9:	45 0f b6 54 35 01    	movzbl 0x1(%r13,%rsi,1),%r10d
   27edf:	45 01 e2             	add    %r12d,%r10d
   27ee2:	45 0f b6 5c 35 02    	movzbl 0x2(%r13,%rsi,1),%r11d
   27ee8:	45 01 fb             	add    %r15d,%r11d
   27eeb:	41 0f b6 7c 35 03    	movzbl 0x3(%r13,%rsi,1),%edi
   27ef1:	44 01 f7             	add    %r14d,%edi
   27ef4:	44 01 c9             	add    %r9d,%ecx
   27ef7:	44 01 d3             	add    %r10d,%ebx
   27efa:	44 01 dd             	add    %r11d,%ebp
   27efd:	01 fa                	add    %edi,%edx
   27eff:	41 0f b6 44 35 04    	movzbl 0x4(%r13,%rsi,1),%eax
   27f05:	45 0f b6 64 35 05    	movzbl 0x5(%r13,%rsi,1),%r12d
   27f0b:	45 0f b6 7c 35 06    	movzbl 0x6(%r13,%rsi,1),%r15d
   27f11:	45 0f b6 74 35 07    	movzbl 0x7(%r13,%rsi,1),%r14d
   27f17:	44 01 c8             	add    %r9d,%eax
   27f1a:	45 01 d4             	add    %r10d,%r12d
   27f1d:	45 01 df             	add    %r11d,%r15d
   27f20:	41 01 fe             	add    %edi,%r14d
   27f23:	01 c1                	add    %eax,%ecx
   27f25:	44 01 e3             	add    %r12d,%ebx
   27f28:	44 01 fd             	add    %r15d,%ebp
   27f2b:	44 01 f2             	add    %r14d,%edx
   27f2e:	48 83 c6 08          	add    $0x8,%rsi
   27f32:	49 39 f0             	cmp    %rsi,%r8
   27f35:	75 99                	jne    27ed0 <adler::Adler32::write_slice+0x290>
   27f37:	44 8b 4c 24 08       	mov    0x8(%rsp),%r9d
   27f3c:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   27f41:	41 0f af f9          	imul   %r9d,%edi
   27f45:	48 8b 34 24          	mov    (%rsp),%rsi
   27f49:	01 fe                	add    %edi,%esi
   27f4b:	89 c7                	mov    %eax,%edi
   27f4d:	41 b8 71 80 07 80    	mov    $0x80078071,%r8d
   27f53:	49 0f af f8          	imul   %r8,%rdi
   27f57:	48 c1 ef 2f          	shr    $0x2f,%rdi
   27f5b:	69 ff f1 ff 00 00    	imul   $0xfff1,%edi,%edi
   27f61:	29 f8                	sub    %edi,%eax
   27f63:	44 89 e7             	mov    %r12d,%edi
   27f66:	49 0f af f8          	imul   %r8,%rdi
   27f6a:	48 c1 ef 2f          	shr    $0x2f,%rdi
   27f6e:	69 ff f1 ff 00 00    	imul   $0xfff1,%edi,%edi
   27f74:	41 29 fc             	sub    %edi,%r12d
   27f77:	44 89 ff             	mov    %r15d,%edi
   27f7a:	49 0f af f8          	imul   %r8,%rdi
   27f7e:	48 c1 ef 2f          	shr    $0x2f,%rdi
   27f82:	69 ff f1 ff 00 00    	imul   $0xfff1,%edi,%edi
   27f88:	41 29 ff             	sub    %edi,%r15d
   27f8b:	44 89 f7             	mov    %r14d,%edi
   27f8e:	49 0f af f8          	imul   %r8,%rdi
   27f92:	48 c1 ef 2f          	shr    $0x2f,%rdi
   27f96:	69 ff f1 ff 00 00    	imul   $0xfff1,%edi,%edi
   27f9c:	41 29 fe             	sub    %edi,%r14d
   27f9f:	89 cf                	mov    %ecx,%edi
   27fa1:	49 0f af f8          	imul   %r8,%rdi
   27fa5:	48 c1 ef 2f          	shr    $0x2f,%rdi
   27fa9:	69 ff f1 ff 00 00    	imul   $0xfff1,%edi,%edi
   27faf:	29 f9                	sub    %edi,%ecx
   27fb1:	89 df                	mov    %ebx,%edi
   27fb3:	49 0f af f8          	imul   %r8,%rdi
   27fb7:	48 c1 ef 2f          	shr    $0x2f,%rdi
   27fbb:	69 ff f1 ff 00 00    	imul   $0xfff1,%edi,%edi
   27fc1:	29 fb                	sub    %edi,%ebx
   27fc3:	89 ef                	mov    %ebp,%edi
   27fc5:	49 0f af f8          	imul   %r8,%rdi
   27fc9:	48 c1 ef 2f          	shr    $0x2f,%rdi
   27fcd:	69 ff f1 ff 00 00    	imul   $0xfff1,%edi,%edi
   27fd3:	29 fd                	sub    %edi,%ebp
   27fd5:	89 d7                	mov    %edx,%edi
   27fd7:	49 0f af f8          	imul   %r8,%rdi
   27fdb:	48 c1 ef 2f          	shr    $0x2f,%rdi
   27fdf:	69 ff f1 ff 00 00    	imul   $0xfff1,%edi,%edi
   27fe5:	29 fa                	sub    %edi,%edx
   27fe7:	01 ea                	add    %ebp,%edx
   27fe9:	01 da                	add    %ebx,%edx
   27feb:	01 ca                	add    %ecx,%edx
   27fed:	b9 f1 ff 00 00       	mov    $0xfff1,%ecx
   27ff2:	44 29 f1             	sub    %r14d,%ecx
   27ff5:	8d 0c 49             	lea    (%rcx,%rcx,2),%ecx
   27ff8:	45 01 ce             	add    %r9d,%r14d
   27ffb:	45 01 fe             	add    %r15d,%r14d
   27ffe:	45 01 ff             	add    %r15d,%r15d
   28001:	45 01 e6             	add    %r12d,%r14d
   28004:	41 01 c6             	add    %eax,%r14d
   28007:	48 89 f0             	mov    %rsi,%rax
   2800a:	49 0f af c0          	imul   %r8,%rax
   2800e:	48 c1 e8 2f          	shr    $0x2f,%rax
   28012:	69 c0 f1 ff 00 00    	imul   $0xfff1,%eax,%eax
   28018:	29 c6                	sub    %eax,%esi
   2801a:	01 ce                	add    %ecx,%esi
   2801c:	44 29 fe             	sub    %r15d,%esi
   2801f:	44 29 e6             	sub    %r12d,%esi
   28022:	8d 04 96             	lea    (%rsi,%rdx,4),%eax
   28025:	05 d3 ff 02 00       	add    $0x2ffd3,%eax
   2802a:	48 8b 6c 24 38       	mov    0x38(%rsp),%rbp
   2802f:	48 85 ed             	test   %rbp,%rbp
   28032:	74 3b                	je     2806f <adler::Adler32::write_slice+0x42f>
   28034:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   28039:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   2803e:	0f b6 0c 3e          	movzbl (%rsi,%rdi,1),%ecx
   28042:	41 01 ce             	add    %ecx,%r14d
   28045:	44 01 f0             	add    %r14d,%eax
   28048:	83 fd 01             	cmp    $0x1,%ebp
   2804b:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   28050:	74 22                	je     28074 <adler::Adler32::write_slice+0x434>
   28052:	0f b6 4c 3e 01       	movzbl 0x1(%rsi,%rdi,1),%ecx
   28057:	41 01 ce             	add    %ecx,%r14d
   2805a:	44 01 f0             	add    %r14d,%eax
   2805d:	83 fd 02             	cmp    $0x2,%ebp
   28060:	74 12                	je     28074 <adler::Adler32::write_slice+0x434>
   28062:	0f b6 4c 3e 02       	movzbl 0x2(%rsi,%rdi,1),%ecx
   28067:	41 01 ce             	add    %ecx,%r14d
   2806a:	44 01 f0             	add    %r14d,%eax
   2806d:	eb 05                	jmp    28074 <adler::Adler32::write_slice+0x434>
   2806f:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   28074:	44 89 f1             	mov    %r14d,%ecx
   28077:	49 0f af c8          	imul   %r8,%rcx
   2807b:	48 c1 e9 2f          	shr    $0x2f,%rcx
   2807f:	69 c9 f1 ff 00 00    	imul   $0xfff1,%ecx,%ecx
   28085:	41 29 ce             	sub    %ecx,%r14d
   28088:	66 44 89 32          	mov    %r14w,(%rdx)
   2808c:	89 c1                	mov    %eax,%ecx
   2808e:	49 0f af c8          	imul   %r8,%rcx
   28092:	48 c1 e9 2f          	shr    $0x2f,%rcx
   28096:	69 c9 f1 ff 00 00    	imul   $0xfff1,%ecx,%ecx
   2809c:	29 c8                	sub    %ecx,%eax
   2809e:	66 89 42 02          	mov    %ax,0x2(%rdx)
   280a2:	48 83 c4 48          	add    $0x48,%rsp
   280a6:	5b                   	pop    %rbx
   280a7:	41 5c                	pop    %r12
   280a9:	41 5d                	pop    %r13
   280ab:	41 5e                	pop    %r14
   280ad:	41 5f                	pop    %r15
   280af:	5d                   	pop    %rbp
   280b0:	c3                   	retq   
   280b1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   280b8:	00 00 00 
   280bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000280c0 <object::read::util::StringTable::new>:
   280c0:	48 89 f2             	mov    %rsi,%rdx
   280c3:	48 89 f8             	mov    %rdi,%rax
   280c6:	c3                   	retq   
   280c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   280ce:	00 00 

00000000000280d0 <object::read::util::StringTable::get>:
   280d0:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
   280d4:	89 f0                	mov    %esi,%eax
   280d6:	48 39 c1             	cmp    %rax,%rcx
   280d9:	0f 82 23 00 00 00    	jb     28102 <object::read::util::StringTable::get+0x32>
   280df:	48 29 c1             	sub    %rax,%rcx
   280e2:	0f 84 1a 00 00 00    	je     28102 <object::read::util::StringTable::get+0x32>
   280e8:	48 03 07             	add    (%rdi),%rax
   280eb:	31 d2                	xor    %edx,%edx
   280ed:	0f 1f 00             	nopl   (%rax)
   280f0:	80 3c 10 00          	cmpb   $0x0,(%rax,%rdx,1)
   280f4:	74 0b                	je     28101 <object::read::util::StringTable::get+0x31>
   280f6:	48 83 c2 01          	add    $0x1,%rdx
   280fa:	48 39 d1             	cmp    %rdx,%rcx
   280fd:	75 f1                	jne    280f0 <object::read::util::StringTable::get+0x20>
   280ff:	31 c0                	xor    %eax,%eax
   28101:	c3                   	retq   
   28102:	31 c0                	xor    %eax,%eax
   28104:	c3                   	retq   
   28105:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2810c:	00 00 00 
   2810f:	90                   	nop

0000000000028110 <addr2line::path_push>:
   28110:	41 57                	push   %r15
   28112:	41 56                	push   %r14
   28114:	41 54                	push   %r12
   28116:	53                   	push   %rbx
   28117:	50                   	push   %rax
   28118:	49 89 d6             	mov    %rdx,%r14
   2811b:	49 89 f7             	mov    %rsi,%r15
   2811e:	48 89 fb             	mov    %rdi,%rbx
   28121:	48 85 d2             	test   %rdx,%rdx
   28124:	74 5b                	je     28181 <addr2line::path_push+0x71>
   28126:	41 80 3f 2f          	cmpb   $0x2f,(%r15)
   2812a:	75 55                	jne    28181 <addr2line::path_push+0x71>
   2812c:	be 01 00 00 00       	mov    $0x1,%esi
   28131:	4c 89 f7             	mov    %r14,%rdi
   28134:	ff 15 46 da 01 00    	callq  *0x1da46(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   2813a:	48 85 c0             	test   %rax,%rax
   2813d:	0f 84 7a 01 00 00    	je     282bd <addr2line::path_push+0x1ad>
   28143:	49 89 c4             	mov    %rax,%r12
   28146:	48 89 c7             	mov    %rax,%rdi
   28149:	4c 89 fe             	mov    %r15,%rsi
   2814c:	4c 89 f2             	mov    %r14,%rdx
   2814f:	ff 15 a3 db 01 00    	callq  *0x1dba3(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
   28155:	48 8b 3b             	mov    (%rbx),%rdi
   28158:	48 85 ff             	test   %rdi,%rdi
   2815b:	74 14                	je     28171 <addr2line::path_push+0x61>
   2815d:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   28161:	48 85 f6             	test   %rsi,%rsi
   28164:	74 0b                	je     28171 <addr2line::path_push+0x61>
   28166:	ba 01 00 00 00       	mov    $0x1,%edx
   2816b:	ff 15 87 da 01 00    	callq  *0x1da87(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   28171:	4c 89 23             	mov    %r12,(%rbx)
   28174:	4c 89 73 08          	mov    %r14,0x8(%rbx)
   28178:	4c 89 73 10          	mov    %r14,0x10(%rbx)
   2817c:	e9 18 01 00 00       	jmpq   28299 <addr2line::path_push+0x189>
   28181:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   28185:	48 85 f6             	test   %rsi,%rsi
   28188:	74 0a                	je     28194 <addr2line::path_push+0x84>
   2818a:	48 8b 03             	mov    (%rbx),%rax
   2818d:	80 7c 06 ff 2f       	cmpb   $0x2f,-0x1(%rsi,%rax,1)
   28192:	74 7f                	je     28213 <addr2line::path_push+0x103>
   28194:	48 3b 73 08          	cmp    0x8(%rbx),%rsi
   28198:	75 42                	jne    281dc <addr2line::path_push+0xcc>
   2819a:	48 89 f0             	mov    %rsi,%rax
   2819d:	48 ff c0             	inc    %rax
   281a0:	0f 84 ff 00 00 00    	je     282a5 <addr2line::path_push+0x195>
   281a6:	48 8d 0c 36          	lea    (%rsi,%rsi,1),%rcx
   281aa:	48 39 c1             	cmp    %rax,%rcx
   281ad:	48 0f 47 c1          	cmova  %rcx,%rax
   281b1:	48 83 f8 08          	cmp    $0x8,%rax
   281b5:	41 bc 08 00 00 00    	mov    $0x8,%r12d
   281bb:	4c 0f 47 e0          	cmova  %rax,%r12
   281bf:	48 85 f6             	test   %rsi,%rsi
   281c2:	74 1d                	je     281e1 <addr2line::path_push+0xd1>
   281c4:	48 8b 3b             	mov    (%rbx),%rdi
   281c7:	48 85 ff             	test   %rdi,%rdi
   281ca:	74 15                	je     281e1 <addr2line::path_push+0xd1>
   281cc:	ba 01 00 00 00       	mov    $0x1,%edx
   281d1:	4c 89 e1             	mov    %r12,%rcx
   281d4:	ff 15 9e dd 01 00    	callq  *0x1dd9e(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
   281da:	eb 13                	jmp    281ef <addr2line::path_push+0xdf>
   281dc:	48 8b 03             	mov    (%rbx),%rax
   281df:	eb 22                	jmp    28203 <addr2line::path_push+0xf3>
   281e1:	be 01 00 00 00       	mov    $0x1,%esi
   281e6:	4c 89 e7             	mov    %r12,%rdi
   281e9:	ff 15 91 d9 01 00    	callq  *0x1d991(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   281ef:	48 85 c0             	test   %rax,%rax
   281f2:	0f 84 b5 00 00 00    	je     282ad <addr2line::path_push+0x19d>
   281f8:	48 89 03             	mov    %rax,(%rbx)
   281fb:	4c 89 63 08          	mov    %r12,0x8(%rbx)
   281ff:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   28203:	c6 04 30 2f          	movb   $0x2f,(%rax,%rsi,1)
   28207:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   2820b:	48 83 c6 01          	add    $0x1,%rsi
   2820f:	48 89 73 10          	mov    %rsi,0x10(%rbx)
   28213:	48 8b 43 08          	mov    0x8(%rbx),%rax
   28217:	48 89 c1             	mov    %rax,%rcx
   2821a:	48 29 f1             	sub    %rsi,%rcx
   2821d:	4c 39 f1             	cmp    %r14,%rcx
   28220:	73 3e                	jae    28260 <addr2line::path_push+0x150>
   28222:	4c 01 f6             	add    %r14,%rsi
   28225:	72 7e                	jb     282a5 <addr2line::path_push+0x195>
   28227:	48 8d 0c 00          	lea    (%rax,%rax,1),%rcx
   2822b:	48 39 f1             	cmp    %rsi,%rcx
   2822e:	48 0f 47 f1          	cmova  %rcx,%rsi
   28232:	48 83 fe 08          	cmp    $0x8,%rsi
   28236:	41 bc 08 00 00 00    	mov    $0x8,%r12d
   2823c:	4c 0f 47 e6          	cmova  %rsi,%r12
   28240:	48 85 c0             	test   %rax,%rax
   28243:	74 20                	je     28265 <addr2line::path_push+0x155>
   28245:	48 8b 3b             	mov    (%rbx),%rdi
   28248:	48 85 ff             	test   %rdi,%rdi
   2824b:	74 18                	je     28265 <addr2line::path_push+0x155>
   2824d:	ba 01 00 00 00       	mov    $0x1,%edx
   28252:	48 89 c6             	mov    %rax,%rsi
   28255:	4c 89 e1             	mov    %r12,%rcx
   28258:	ff 15 1a dd 01 00    	callq  *0x1dd1a(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
   2825e:	eb 13                	jmp    28273 <addr2line::path_push+0x163>
   28260:	48 8b 3b             	mov    (%rbx),%rdi
   28263:	eb 21                	jmp    28286 <addr2line::path_push+0x176>
   28265:	be 01 00 00 00       	mov    $0x1,%esi
   2826a:	4c 89 e7             	mov    %r12,%rdi
   2826d:	ff 15 0d d9 01 00    	callq  *0x1d90d(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   28273:	48 89 c7             	mov    %rax,%rdi
   28276:	48 85 c0             	test   %rax,%rax
   28279:	74 32                	je     282ad <addr2line::path_push+0x19d>
   2827b:	48 89 3b             	mov    %rdi,(%rbx)
   2827e:	4c 89 63 08          	mov    %r12,0x8(%rbx)
   28282:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   28286:	48 01 f7             	add    %rsi,%rdi
   28289:	4c 89 fe             	mov    %r15,%rsi
   2828c:	4c 89 f2             	mov    %r14,%rdx
   2828f:	ff 15 63 da 01 00    	callq  *0x1da63(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
   28295:	4c 01 73 10          	add    %r14,0x10(%rbx)
   28299:	48 83 c4 08          	add    $0x8,%rsp
   2829d:	5b                   	pop    %rbx
   2829e:	41 5c                	pop    %r12
   282a0:	41 5e                	pop    %r14
   282a2:	41 5f                	pop    %r15
   282a4:	c3                   	retq   
   282a5:	ff 15 35 d8 01 00    	callq  *0x1d835(%rip)        # 45ae0 <_GLOBAL_OFFSET_TABLE_+0x158>
   282ab:	0f 0b                	ud2    
   282ad:	be 01 00 00 00       	mov    $0x1,%esi
   282b2:	4c 89 e7             	mov    %r12,%rdi
   282b5:	ff 15 65 d8 01 00    	callq  *0x1d865(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   282bb:	0f 0b                	ud2    
   282bd:	be 01 00 00 00       	mov    $0x1,%esi
   282c2:	4c 89 f7             	mov    %r14,%rdi
   282c5:	ff 15 55 d8 01 00    	callq  *0x1d855(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   282cb:	0f 0b                	ud2    
   282cd:	0f 1f 00             	nopl   (%rax)

00000000000282d0 <<&T as core::fmt::Debug>::fmt>:
   282d0:	41 56                	push   %r14
   282d2:	53                   	push   %rbx
   282d3:	50                   	push   %rax
   282d4:	48 89 f3             	mov    %rsi,%rbx
   282d7:	4c 8b 37             	mov    (%rdi),%r14
   282da:	48 89 f7             	mov    %rsi,%rdi
   282dd:	ff 15 ad dc 01 00    	callq  *0x1dcad(%rip)        # 45f90 <_GLOBAL_OFFSET_TABLE_+0x608>
   282e3:	84 c0                	test   %al,%al
   282e5:	74 13                	je     282fa <<&T as core::fmt::Debug>::fmt+0x2a>
   282e7:	4c 89 f7             	mov    %r14,%rdi
   282ea:	48 89 de             	mov    %rbx,%rsi
   282ed:	48 83 c4 08          	add    $0x8,%rsp
   282f1:	5b                   	pop    %rbx
   282f2:	41 5e                	pop    %r14
   282f4:	ff 25 16 da 01 00    	jmpq   *0x1da16(%rip)        # 45d10 <_GLOBAL_OFFSET_TABLE_+0x388>
   282fa:	48 89 df             	mov    %rbx,%rdi
   282fd:	ff 15 f5 d6 01 00    	callq  *0x1d6f5(%rip)        # 459f8 <_GLOBAL_OFFSET_TABLE_+0x70>
   28303:	4c 89 f7             	mov    %r14,%rdi
   28306:	48 89 de             	mov    %rbx,%rsi
   28309:	48 83 c4 08          	add    $0x8,%rsp
   2830d:	84 c0                	test   %al,%al
   2830f:	74 09                	je     2831a <<&T as core::fmt::Debug>::fmt+0x4a>
   28311:	5b                   	pop    %rbx
   28312:	41 5e                	pop    %r14
   28314:	ff 25 d6 dc 01 00    	jmpq   *0x1dcd6(%rip)        # 45ff0 <_GLOBAL_OFFSET_TABLE_+0x668>
   2831a:	5b                   	pop    %rbx
   2831b:	41 5e                	pop    %r14
   2831d:	ff 25 75 d8 01 00    	jmpq   *0x1d875(%rip)        # 45b98 <_GLOBAL_OFFSET_TABLE_+0x210>
   28323:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2832a:	00 00 00 
   2832d:	0f 1f 00             	nopl   (%rax)

0000000000028330 <core::ptr::drop_in_place>:
   28330:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   28334:	48 85 f6             	test   %rsi,%rsi
   28337:	74 19                	je     28352 <core::ptr::drop_in_place+0x22>
   28339:	48 8b 3f             	mov    (%rdi),%rdi
   2833c:	48 85 ff             	test   %rdi,%rdi
   2833f:	74 11                	je     28352 <core::ptr::drop_in_place+0x22>
   28341:	48 c1 e6 04          	shl    $0x4,%rsi
   28345:	74 0b                	je     28352 <core::ptr::drop_in_place+0x22>
   28347:	ba 08 00 00 00       	mov    $0x8,%edx
   2834c:	ff 25 a6 d8 01 00    	jmpq   *0x1d8a6(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   28352:	c3                   	retq   
   28353:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2835a:	00 00 00 
   2835d:	0f 1f 00             	nopl   (%rax)

0000000000028360 <core::ptr::drop_in_place>:
   28360:	48 83 3f 00          	cmpq   $0x0,(%rdi)
   28364:	74 23                	je     28389 <core::ptr::drop_in_place+0x29>
   28366:	48 8b 77 10          	mov    0x10(%rdi),%rsi
   2836a:	48 85 f6             	test   %rsi,%rsi
   2836d:	74 1a                	je     28389 <core::ptr::drop_in_place+0x29>
   2836f:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   28373:	48 85 ff             	test   %rdi,%rdi
   28376:	74 11                	je     28389 <core::ptr::drop_in_place+0x29>
   28378:	48 c1 e6 04          	shl    $0x4,%rsi
   2837c:	74 0b                	je     28389 <core::ptr::drop_in_place+0x29>
   2837e:	ba 08 00 00 00       	mov    $0x8,%edx
   28383:	ff 25 6f d8 01 00    	jmpq   *0x1d86f(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   28389:	c3                   	retq   
   2838a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000028390 <core::ptr::drop_in_place>:
   28390:	48 83 7f 08 00       	cmpq   $0x0,0x8(%rdi)
   28395:	74 23                	je     283ba <core::ptr::drop_in_place+0x2a>
   28397:	48 8b 77 18          	mov    0x18(%rdi),%rsi
   2839b:	48 85 f6             	test   %rsi,%rsi
   2839e:	74 1a                	je     283ba <core::ptr::drop_in_place+0x2a>
   283a0:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   283a4:	48 85 ff             	test   %rdi,%rdi
   283a7:	74 11                	je     283ba <core::ptr::drop_in_place+0x2a>
   283a9:	48 c1 e6 04          	shl    $0x4,%rsi
   283ad:	74 0b                	je     283ba <core::ptr::drop_in_place+0x2a>
   283af:	ba 08 00 00 00       	mov    $0x8,%edx
   283b4:	ff 25 3e d8 01 00    	jmpq   *0x1d83e(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   283ba:	c3                   	retq   
   283bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000283c0 <alloc::vec::Vec<T>::reserve>:
   283c0:	41 56                	push   %r14
   283c2:	53                   	push   %rbx
   283c3:	50                   	push   %rax
   283c4:	48 89 f0             	mov    %rsi,%rax
   283c7:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   283cb:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
   283cf:	48 89 f2             	mov    %rsi,%rdx
   283d2:	48 29 ca             	sub    %rcx,%rdx
   283d5:	48 39 c2             	cmp    %rax,%rdx
   283d8:	0f 83 88 00 00 00    	jae    28466 <alloc::vec::Vec<T>::reserve+0xa6>
   283de:	48 01 c1             	add    %rax,%rcx
   283e1:	0f 82 87 00 00 00    	jb     2846e <alloc::vec::Vec<T>::reserve+0xae>
   283e7:	48 89 fb             	mov    %rdi,%rbx
   283ea:	48 8d 04 36          	lea    (%rsi,%rsi,1),%rax
   283ee:	48 39 c8             	cmp    %rcx,%rax
   283f1:	48 0f 47 c8          	cmova  %rax,%rcx
   283f5:	48 83 f9 04          	cmp    $0x4,%rcx
   283f9:	b8 04 00 00 00       	mov    $0x4,%eax
   283fe:	48 0f 47 c1          	cmova  %rcx,%rax
   28402:	ba 10 00 00 00       	mov    $0x10,%edx
   28407:	31 c9                	xor    %ecx,%ecx
   28409:	48 f7 e2             	mul    %rdx
   2840c:	49 89 c6             	mov    %rax,%r14
   2840f:	0f 90 c0             	seto   %al
   28412:	0f 91 c1             	setno  %cl
   28415:	48 c1 e1 03          	shl    $0x3,%rcx
   28419:	48 85 f6             	test   %rsi,%rsi
   2841c:	74 20                	je     2843e <alloc::vec::Vec<T>::reserve+0x7e>
   2841e:	84 c0                	test   %al,%al
   28420:	75 4c                	jne    2846e <alloc::vec::Vec<T>::reserve+0xae>
   28422:	48 8b 3b             	mov    (%rbx),%rdi
   28425:	48 85 ff             	test   %rdi,%rdi
   28428:	74 18                	je     28442 <alloc::vec::Vec<T>::reserve+0x82>
   2842a:	48 c1 e6 04          	shl    $0x4,%rsi
   2842e:	74 12                	je     28442 <alloc::vec::Vec<T>::reserve+0x82>
   28430:	48 89 ca             	mov    %rcx,%rdx
   28433:	4c 89 f1             	mov    %r14,%rcx
   28436:	ff 15 3c db 01 00    	callq  *0x1db3c(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
   2843c:	eb 15                	jmp    28453 <alloc::vec::Vec<T>::reserve+0x93>
   2843e:	84 c0                	test   %al,%al
   28440:	75 2c                	jne    2846e <alloc::vec::Vec<T>::reserve+0xae>
   28442:	4d 85 f6             	test   %r14,%r14
   28445:	74 0f                	je     28456 <alloc::vec::Vec<T>::reserve+0x96>
   28447:	4c 89 f7             	mov    %r14,%rdi
   2844a:	48 89 ce             	mov    %rcx,%rsi
   2844d:	ff 15 2d d7 01 00    	callq  *0x1d72d(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   28453:	48 89 c1             	mov    %rax,%rcx
   28456:	48 85 c9             	test   %rcx,%rcx
   28459:	74 1b                	je     28476 <alloc::vec::Vec<T>::reserve+0xb6>
   2845b:	48 89 0b             	mov    %rcx,(%rbx)
   2845e:	49 c1 ee 04          	shr    $0x4,%r14
   28462:	4c 89 73 08          	mov    %r14,0x8(%rbx)
   28466:	48 83 c4 08          	add    $0x8,%rsp
   2846a:	5b                   	pop    %rbx
   2846b:	41 5e                	pop    %r14
   2846d:	c3                   	retq   
   2846e:	ff 15 6c d6 01 00    	callq  *0x1d66c(%rip)        # 45ae0 <_GLOBAL_OFFSET_TABLE_+0x158>
   28474:	0f 0b                	ud2    
   28476:	be 08 00 00 00       	mov    $0x8,%esi
   2847b:	4c 89 f7             	mov    %r14,%rdi
   2847e:	ff 15 9c d6 01 00    	callq  *0x1d69c(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   28484:	0f 0b                	ud2    
   28486:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2848d:	00 00 00 

0000000000028490 <gimli::common::SectionId::name>:
   28490:	ba 0c 00 00 00       	mov    $0xc,%edx
   28495:	48 8d 05 8c 0e 01 00 	lea    0x10e8c(%rip),%rax        # 39328 <str.6+0x2008>
   2849c:	40 0f b6 cf          	movzbl %dil,%ecx
   284a0:	48 8d 35 09 05 01 00 	lea    0x10509(%rip),%rsi        # 389b0 <str.6+0x1690>
   284a7:	48 63 0c 8e          	movslq (%rsi,%rcx,4),%rcx
   284ab:	48 01 f1             	add    %rsi,%rcx
   284ae:	ff e1                	jmpq   *%rcx
   284b0:	ba 0d 00 00 00       	mov    $0xd,%edx
   284b5:	48 8d 05 61 0f 01 00 	lea    0x10f61(%rip),%rax        # 3941d <str.6+0x20fd>
   284bc:	c3                   	retq   
   284bd:	ba 0b 00 00 00       	mov    $0xb,%edx
   284c2:	48 8d 05 49 0f 01 00 	lea    0x10f49(%rip),%rax        # 39412 <str.6+0x20f2>
   284c9:	c3                   	retq   
   284ca:	ba 0e 00 00 00       	mov    $0xe,%edx
   284cf:	48 8d 05 2e 0f 01 00 	lea    0x10f2e(%rip),%rax        # 39404 <str.6+0x20e4>
   284d6:	c3                   	retq   
   284d7:	48 8d 05 1a 0f 01 00 	lea    0x10f1a(%rip),%rax        # 393f8 <str.6+0x20d8>
   284de:	c3                   	retq   
   284df:	ba 09 00 00 00       	mov    $0x9,%edx
   284e4:	48 8d 05 04 0f 01 00 	lea    0x10f04(%rip),%rax        # 393ef <str.6+0x20cf>
   284eb:	c3                   	retq   
   284ec:	ba 0d 00 00 00       	mov    $0xd,%edx
   284f1:	48 8d 05 ea 0e 01 00 	lea    0x10eea(%rip),%rax        # 393e2 <str.6+0x20c2>
   284f8:	c3                   	retq   
   284f9:	ba 0b 00 00 00       	mov    $0xb,%edx
   284fe:	48 8d 05 d2 0e 01 00 	lea    0x10ed2(%rip),%rax        # 393d7 <str.6+0x20b7>
   28505:	c3                   	retq   
   28506:	ba 0b 00 00 00       	mov    $0xb,%edx
   2850b:	48 8d 05 ba 0e 01 00 	lea    0x10eba(%rip),%rax        # 393cc <str.6+0x20ac>
   28512:	c3                   	retq   
   28513:	ba 0f 00 00 00       	mov    $0xf,%edx
   28518:	48 8d 05 9e 0e 01 00 	lea    0x10e9e(%rip),%rax        # 393bd <str.6+0x209d>
   2851f:	c3                   	retq   
   28520:	ba 0a 00 00 00       	mov    $0xa,%edx
   28525:	48 8d 05 87 0e 01 00 	lea    0x10e87(%rip),%rax        # 393b3 <str.6+0x2093>
   2852c:	c3                   	retq   
   2852d:	ba 0f 00 00 00       	mov    $0xf,%edx
   28532:	48 8d 05 6b 0e 01 00 	lea    0x10e6b(%rip),%rax        # 393a4 <str.6+0x2084>
   28539:	c3                   	retq   
   2853a:	ba 0e 00 00 00       	mov    $0xe,%edx
   2853f:	48 8d 05 50 0e 01 00 	lea    0x10e50(%rip),%rax        # 39396 <str.6+0x2076>
   28546:	c3                   	retq   
   28547:	48 8d 05 3c 0e 01 00 	lea    0x10e3c(%rip),%rax        # 3938a <str.6+0x206a>
   2854e:	c3                   	retq   
   2854f:	ba 0f 00 00 00       	mov    $0xf,%edx
   28554:	48 8d 05 20 0e 01 00 	lea    0x10e20(%rip),%rax        # 3937b <str.6+0x205b>
   2855b:	c3                   	retq   
   2855c:	ba 0f 00 00 00       	mov    $0xf,%edx
   28561:	48 8d 05 04 0e 01 00 	lea    0x10e04(%rip),%rax        # 3936c <str.6+0x204c>
   28568:	c3                   	retq   
   28569:	ba 0d 00 00 00       	mov    $0xd,%edx
   2856e:	48 8d 05 ea 0d 01 00 	lea    0x10dea(%rip),%rax        # 3935f <str.6+0x203f>
   28575:	c3                   	retq   
   28576:	ba 0f 00 00 00       	mov    $0xf,%edx
   2857b:	48 8d 05 ce 0d 01 00 	lea    0x10dce(%rip),%rax        # 39350 <str.6+0x2030>
   28582:	c3                   	retq   
   28583:	ba 0a 00 00 00       	mov    $0xa,%edx
   28588:	48 8d 05 b7 0d 01 00 	lea    0x10db7(%rip),%rax        # 39346 <str.6+0x2026>
   2858f:	c3                   	retq   
   28590:	ba 12 00 00 00       	mov    $0x12,%edx
   28595:	48 8d 05 98 0d 01 00 	lea    0x10d98(%rip),%rax        # 39334 <str.6+0x2014>
   2859c:	c3                   	retq   
   2859d:	0f 1f 00             	nopl   (%rax)

00000000000285a0 <gimli::read::abbrev::Abbreviations::empty>:
   285a0:	48 89 f8             	mov    %rdi,%rax
   285a3:	48 c7 07 08 00 00 00 	movq   $0x8,(%rdi)
   285aa:	48 c7 47 28 00 00 00 	movq   $0x0,0x28(%rdi)
   285b1:	00 
   285b2:	0f 57 c0             	xorps  %xmm0,%xmm0
   285b5:	0f 11 47 08          	movups %xmm0,0x8(%rdi)
   285b9:	48 c7 47 18 00 00 00 	movq   $0x0,0x18(%rdi)
   285c0:	00 
   285c1:	c3                   	retq   
   285c2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   285c9:	00 00 00 
   285cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000285d0 <gimli::read::abbrev::Abbreviations::insert>:
   285d0:	55                   	push   %rbp
   285d1:	41 57                	push   %r15
   285d3:	41 56                	push   %r14
   285d5:	41 55                	push   %r13
   285d7:	41 54                	push   %r12
   285d9:	53                   	push   %rbx
   285da:	48 81 ec 78 07 00 00 	sub    $0x778,%rsp
   285e1:	48 89 f3             	mov    %rsi,%rbx
   285e4:	4c 8b 26             	mov    (%rsi),%r12
   285e7:	49 8d 74 24 ff       	lea    -0x1(%r12),%rsi
   285ec:	48 8b 47 10          	mov    0x10(%rdi),%rax
   285f0:	48 39 c6             	cmp    %rax,%rsi
   285f3:	73 42                	jae    28637 <gimli::read::abbrev::Abbreviations::insert+0x67>
   285f5:	40 b5 01             	mov    $0x1,%bpl
   285f8:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
   285fd:	0f 84 12 03 00 00    	je     28915 <gimli::read::abbrev::Abbreviations::insert+0x345>
   28603:	48 8b 73 18          	mov    0x18(%rbx),%rsi
   28607:	48 85 f6             	test   %rsi,%rsi
   2860a:	0f 84 05 03 00 00    	je     28915 <gimli::read::abbrev::Abbreviations::insert+0x345>
   28610:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   28614:	48 85 ff             	test   %rdi,%rdi
   28617:	0f 84 f8 02 00 00    	je     28915 <gimli::read::abbrev::Abbreviations::insert+0x345>
   2861d:	48 c1 e6 04          	shl    $0x4,%rsi
   28621:	0f 84 ee 02 00 00    	je     28915 <gimli::read::abbrev::Abbreviations::insert+0x345>
   28627:	ba 08 00 00 00       	mov    $0x8,%edx
   2862c:	ff 15 c6 d5 01 00    	callq  *0x1d5c6(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   28632:	e9 de 02 00 00       	jmpq   28915 <gimli::read::abbrev::Abbreviations::insert+0x345>
   28637:	49 89 fe             	mov    %rdi,%r14
   2863a:	48 8d 4f 18          	lea    0x18(%rdi),%rcx
   2863e:	48 39 c6             	cmp    %rax,%rsi
   28641:	75 74                	jne    286b7 <gimli::read::abbrev::Abbreviations::insert+0xe7>
   28643:	49 83 7e 28 00       	cmpq   $0x0,0x28(%r14)
   28648:	0f 84 86 00 00 00    	je     286d4 <gimli::read::abbrev::Abbreviations::insert+0x104>
   2864e:	48 8b 01             	mov    (%rcx),%rax
   28651:	48 85 c0             	test   %rax,%rax
   28654:	74 7e                	je     286d4 <gimli::read::abbrev::Abbreviations::insert+0x104>
   28656:	4d 8b 4e 20          	mov    0x20(%r14),%r9
   2865a:	49 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%r8
   28661:	0f b7 90 32 05 00 00 	movzwl 0x532(%rax),%edx
   28668:	48 89 d5             	mov    %rdx,%rbp
   2866b:	48 f7 dd             	neg    %rbp
   2866e:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   28675:	48 8d 0c 2f          	lea    (%rdi,%rbp,1),%rcx
   28679:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
   2867d:	74 22                	je     286a1 <gimli::read::abbrev::Abbreviations::insert+0xd1>
   2867f:	31 c9                	xor    %ecx,%ecx
   28681:	4c 39 64 f8 10       	cmp    %r12,0x10(%rax,%rdi,8)
   28686:	0f 95 c1             	setne  %cl
   28689:	49 0f 47 c8          	cmova  %r8,%rcx
   2868d:	48 83 c7 01          	add    $0x1,%rdi
   28691:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
   28695:	74 0d                	je     286a4 <gimli::read::abbrev::Abbreviations::insert+0xd4>
   28697:	48 85 c9             	test   %rcx,%rcx
   2869a:	75 d9                	jne    28675 <gimli::read::abbrev::Abbreviations::insert+0xa5>
   2869c:	e9 54 ff ff ff       	jmpq   285f5 <gimli::read::abbrev::Abbreviations::insert+0x25>
   286a1:	48 89 d7             	mov    %rdx,%rdi
   286a4:	4d 85 c9             	test   %r9,%r9
   286a7:	74 2b                	je     286d4 <gimli::read::abbrev::Abbreviations::insert+0x104>
   286a9:	49 83 c1 ff          	add    $0xffffffffffffffff,%r9
   286ad:	48 8b 84 f8 38 05 00 	mov    0x538(%rax,%rdi,8),%rax
   286b4:	00 
   286b5:	eb aa                	jmp    28661 <gimli::read::abbrev::Abbreviations::insert+0x91>
   286b7:	48 89 8c 24 d0 01 00 	mov    %rcx,0x1d0(%rsp)
   286be:	00 
   286bf:	4c 8b 29             	mov    (%rcx),%r13
   286c2:	4d 85 ed             	test   %r13,%r13
   286c5:	0f 84 dc 00 00 00    	je     287a7 <gimli::read::abbrev::Abbreviations::insert+0x1d7>
   286cb:	49 8b 46 20          	mov    0x20(%r14),%rax
   286cf:	e9 28 01 00 00       	jmpq   287fc <gimli::read::abbrev::Abbreviations::insert+0x22c>
   286d4:	0f 10 43 60          	movups 0x60(%rbx),%xmm0
   286d8:	0f 29 84 24 a0 02 00 	movaps %xmm0,0x2a0(%rsp)
   286df:	00 
   286e0:	0f 10 43 50          	movups 0x50(%rbx),%xmm0
   286e4:	0f 29 84 24 90 02 00 	movaps %xmm0,0x290(%rsp)
   286eb:	00 
   286ec:	0f 10 43 40          	movups 0x40(%rbx),%xmm0
   286f0:	0f 29 84 24 80 02 00 	movaps %xmm0,0x280(%rsp)
   286f7:	00 
   286f8:	0f 10 03             	movups (%rbx),%xmm0
   286fb:	0f 10 4b 10          	movups 0x10(%rbx),%xmm1
   286ff:	0f 10 53 20          	movups 0x20(%rbx),%xmm2
   28703:	0f 10 5b 30          	movups 0x30(%rbx),%xmm3
   28707:	0f 29 9c 24 70 02 00 	movaps %xmm3,0x270(%rsp)
   2870e:	00 
   2870f:	0f 29 94 24 60 02 00 	movaps %xmm2,0x260(%rsp)
   28716:	00 
   28717:	0f 29 8c 24 50 02 00 	movaps %xmm1,0x250(%rsp)
   2871e:	00 
   2871f:	0f 29 84 24 40 02 00 	movaps %xmm0,0x240(%rsp)
   28726:	00 
   28727:	49 3b 76 08          	cmp    0x8(%r14),%rsi
   2872b:	0f 85 36 01 00 00    	jne    28867 <gimli::read::abbrev::Abbreviations::insert+0x297>
   28731:	48 89 f1             	mov    %rsi,%rcx
   28734:	48 ff c1             	inc    %rcx
   28737:	0f 84 1b 10 00 00    	je     29758 <gimli::read::abbrev::Abbreviations::insert+0x1188>
   2873d:	48 8d 04 36          	lea    (%rsi,%rsi,1),%rax
   28741:	48 39 c8             	cmp    %rcx,%rax
   28744:	48 0f 47 c8          	cmova  %rax,%rcx
   28748:	48 83 f9 04          	cmp    $0x4,%rcx
   2874c:	b8 04 00 00 00       	mov    $0x4,%eax
   28751:	48 0f 47 c1          	cmova  %rcx,%rax
   28755:	ba 70 00 00 00       	mov    $0x70,%edx
   2875a:	31 c9                	xor    %ecx,%ecx
   2875c:	48 f7 e2             	mul    %rdx
   2875f:	48 89 c3             	mov    %rax,%rbx
   28762:	0f 90 c0             	seto   %al
   28765:	0f 91 c1             	setno  %cl
   28768:	48 c1 e1 03          	shl    $0x3,%rcx
   2876c:	48 85 f6             	test   %rsi,%rsi
   2876f:	0f 84 f7 00 00 00    	je     2886c <gimli::read::abbrev::Abbreviations::insert+0x29c>
   28775:	84 c0                	test   %al,%al
   28777:	0f 85 db 0f 00 00    	jne    29758 <gimli::read::abbrev::Abbreviations::insert+0x1188>
   2877d:	49 8b 3e             	mov    (%r14),%rdi
   28780:	48 85 ff             	test   %rdi,%rdi
   28783:	0f 84 eb 00 00 00    	je     28874 <gimli::read::abbrev::Abbreviations::insert+0x2a4>
   28789:	48 6b f6 70          	imul   $0x70,%rsi,%rsi
   2878d:	48 85 f6             	test   %rsi,%rsi
   28790:	0f 84 de 00 00 00    	je     28874 <gimli::read::abbrev::Abbreviations::insert+0x2a4>
   28796:	48 89 ca             	mov    %rcx,%rdx
   28799:	48 89 d9             	mov    %rbx,%rcx
   2879c:	ff 15 d6 d7 01 00    	callq  *0x1d7d6(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
   287a2:	e9 de 00 00 00       	jmpq   28885 <gimli::read::abbrev::Abbreviations::insert+0x2b5>
   287a7:	bf 38 05 00 00       	mov    $0x538,%edi
   287ac:	be 08 00 00 00       	mov    $0x8,%esi
   287b1:	ff 15 c9 d3 01 00    	callq  *0x1d3c9(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   287b7:	48 85 c0             	test   %rax,%rax
   287ba:	0f 84 a0 0f 00 00    	je     29760 <gimli::read::abbrev::Abbreviations::insert+0x1190>
   287c0:	49 89 c5             	mov    %rax,%r13
   287c3:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   287ca:	48 89 c7             	mov    %rax,%rdi
   287cd:	48 83 c7 08          	add    $0x8,%rdi
   287d1:	48 8d b4 24 40 02 00 	lea    0x240(%rsp),%rsi
   287d8:	00 
   287d9:	ba 2a 05 00 00       	mov    $0x52a,%edx
   287de:	ff 15 14 d5 01 00    	callq  *0x1d514(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
   287e4:	66 41 c7 85 32 05 00 	movw   $0x0,0x532(%r13)
   287eb:	00 00 00 
   287ee:	4d 89 6e 18          	mov    %r13,0x18(%r14)
   287f2:	49 c7 46 20 00 00 00 	movq   $0x0,0x20(%r14)
   287f9:	00 
   287fa:	31 c0                	xor    %eax,%eax
   287fc:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
   28803:	41 0f b7 95 32 05 00 	movzwl 0x532(%r13),%edx
   2880a:	00 
   2880b:	4d 8d 7d 08          	lea    0x8(%r13),%r15
   2880f:	48 89 d6             	mov    %rdx,%rsi
   28812:	48 f7 de             	neg    %rsi
   28815:	48 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%rbp
   2881c:	48 8d 3c 2e          	lea    (%rsi,%rbp,1),%rdi
   28820:	48 83 ff ff          	cmp    $0xffffffffffffffff,%rdi
   28824:	74 23                	je     28849 <gimli::read::abbrev::Abbreviations::insert+0x279>
   28826:	31 ff                	xor    %edi,%edi
   28828:	4d 39 64 ed 10       	cmp    %r12,0x10(%r13,%rbp,8)
   2882d:	40 0f 95 c7          	setne  %dil
   28831:	48 0f 47 f9          	cmova  %rcx,%rdi
   28835:	48 83 c5 01          	add    $0x1,%rbp
   28839:	48 83 ff ff          	cmp    $0xffffffffffffffff,%rdi
   2883d:	74 11                	je     28850 <gimli::read::abbrev::Abbreviations::insert+0x280>
   2883f:	48 85 ff             	test   %rdi,%rdi
   28842:	75 d8                	jne    2881c <gimli::read::abbrev::Abbreviations::insert+0x24c>
   28844:	e9 ac fd ff ff       	jmpq   285f5 <gimli::read::abbrev::Abbreviations::insert+0x25>
   28849:	48 89 d5             	mov    %rdx,%rbp
   2884c:	0f 1f 40 00          	nopl   0x0(%rax)
   28850:	48 85 c0             	test   %rax,%rax
   28853:	0f 84 d0 00 00 00    	je     28929 <gimli::read::abbrev::Abbreviations::insert+0x359>
   28859:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
   2885d:	4d 8b ac ed 38 05 00 	mov    0x538(%r13,%rbp,8),%r13
   28864:	00 
   28865:	eb 9c                	jmp    28803 <gimli::read::abbrev::Abbreviations::insert+0x233>
   28867:	49 8b 0e             	mov    (%r14),%rcx
   2886a:	eb 44                	jmp    288b0 <gimli::read::abbrev::Abbreviations::insert+0x2e0>
   2886c:	84 c0                	test   %al,%al
   2886e:	0f 85 e4 0e 00 00    	jne    29758 <gimli::read::abbrev::Abbreviations::insert+0x1188>
   28874:	48 85 db             	test   %rbx,%rbx
   28877:	74 0f                	je     28888 <gimli::read::abbrev::Abbreviations::insert+0x2b8>
   28879:	48 89 df             	mov    %rbx,%rdi
   2887c:	48 89 ce             	mov    %rcx,%rsi
   2887f:	ff 15 fb d2 01 00    	callq  *0x1d2fb(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   28885:	48 89 c1             	mov    %rax,%rcx
   28888:	48 85 c9             	test   %rcx,%rcx
   2888b:	0f 84 d6 0e 00 00    	je     29767 <gimli::read::abbrev::Abbreviations::insert+0x1197>
   28891:	49 89 0e             	mov    %rcx,(%r14)
   28894:	48 c1 eb 04          	shr    $0x4,%rbx
   28898:	48 ba 93 24 49 92 24 	movabs $0x2492492492492493,%rdx
   2889f:	49 92 24 
   288a2:	48 89 d8             	mov    %rbx,%rax
   288a5:	48 f7 e2             	mul    %rdx
   288a8:	49 89 56 08          	mov    %rdx,0x8(%r14)
   288ac:	49 8b 76 10          	mov    0x10(%r14),%rsi
   288b0:	48 6b c6 70          	imul   $0x70,%rsi,%rax
   288b4:	0f 28 84 24 a0 02 00 	movaps 0x2a0(%rsp),%xmm0
   288bb:	00 
   288bc:	0f 11 44 01 60       	movups %xmm0,0x60(%rcx,%rax,1)
   288c1:	0f 28 84 24 90 02 00 	movaps 0x290(%rsp),%xmm0
   288c8:	00 
   288c9:	0f 11 44 01 50       	movups %xmm0,0x50(%rcx,%rax,1)
   288ce:	0f 28 84 24 80 02 00 	movaps 0x280(%rsp),%xmm0
   288d5:	00 
   288d6:	0f 11 44 01 40       	movups %xmm0,0x40(%rcx,%rax,1)
   288db:	0f 28 84 24 40 02 00 	movaps 0x240(%rsp),%xmm0
   288e2:	00 
   288e3:	0f 28 8c 24 50 02 00 	movaps 0x250(%rsp),%xmm1
   288ea:	00 
   288eb:	0f 28 94 24 60 02 00 	movaps 0x260(%rsp),%xmm2
   288f2:	00 
   288f3:	0f 28 9c 24 70 02 00 	movaps 0x270(%rsp),%xmm3
   288fa:	00 
   288fb:	0f 11 5c 01 30       	movups %xmm3,0x30(%rcx,%rax,1)
   28900:	0f 11 54 01 20       	movups %xmm2,0x20(%rcx,%rax,1)
   28905:	0f 11 4c 01 10       	movups %xmm1,0x10(%rcx,%rax,1)
   2890a:	0f 11 04 01          	movups %xmm0,(%rcx,%rax,1)
   2890e:	49 83 46 10 01       	addq   $0x1,0x10(%r14)
   28913:	31 ed                	xor    %ebp,%ebp
   28915:	89 e8                	mov    %ebp,%eax
   28917:	48 81 c4 78 07 00 00 	add    $0x778,%rsp
   2891e:	5b                   	pop    %rbx
   2891f:	41 5c                	pop    %r12
   28921:	41 5d                	pop    %r13
   28923:	41 5e                	pop    %r14
   28925:	41 5f                	pop    %r15
   28927:	5d                   	pop    %rbp
   28928:	c3                   	retq   
   28929:	0f 10 43 60          	movups 0x60(%rbx),%xmm0
   2892d:	0f 29 84 24 00 01 00 	movaps %xmm0,0x100(%rsp)
   28934:	00 
   28935:	0f 10 43 50          	movups 0x50(%rbx),%xmm0
   28939:	0f 29 84 24 f0 00 00 	movaps %xmm0,0xf0(%rsp)
   28940:	00 
   28941:	0f 10 43 40          	movups 0x40(%rbx),%xmm0
   28945:	0f 29 84 24 e0 00 00 	movaps %xmm0,0xe0(%rsp)
   2894c:	00 
   2894d:	0f 10 03             	movups (%rbx),%xmm0
   28950:	0f 10 4b 10          	movups 0x10(%rbx),%xmm1
   28954:	0f 10 53 20          	movups 0x20(%rbx),%xmm2
   28958:	0f 10 5b 30          	movups 0x30(%rbx),%xmm3
   2895c:	0f 29 9c 24 d0 00 00 	movaps %xmm3,0xd0(%rsp)
   28963:	00 
   28964:	0f 29 94 24 c0 00 00 	movaps %xmm2,0xc0(%rsp)
   2896b:	00 
   2896c:	0f 29 8c 24 b0 00 00 	movaps %xmm1,0xb0(%rsp)
   28973:	00 
   28974:	0f 29 84 24 a0 00 00 	movaps %xmm0,0xa0(%rsp)
   2897b:	00 
   2897c:	66 83 fa 0b          	cmp    $0xb,%dx
   28980:	0f 83 ca 00 00 00    	jae    28a50 <gimli::read::abbrev::Abbreviations::insert+0x480>
   28986:	49 8d 34 ef          	lea    (%r15,%rbp,8),%rsi
   2898a:	49 8d 3c ef          	lea    (%r15,%rbp,8),%rdi
   2898e:	48 83 c7 08          	add    $0x8,%rdi
   28992:	48 29 ea             	sub    %rbp,%rdx
   28995:	48 c1 e2 03          	shl    $0x3,%rdx
   28999:	4c 8b 3d c8 d4 01 00 	mov    0x1d4c8(%rip),%r15        # 45e68 <memmove@GLIBC_2.2.5>
   289a0:	41 ff d7             	callq  *%r15
   289a3:	4d 89 64 ed 08       	mov    %r12,0x8(%r13,%rbp,8)
   289a8:	41 0f b7 85 32 05 00 	movzwl 0x532(%r13),%eax
   289af:	00 
   289b0:	48 6b dd 70          	imul   $0x70,%rbp,%rbx
   289b4:	4a 8d 34 2b          	lea    (%rbx,%r13,1),%rsi
   289b8:	48 83 c6 60          	add    $0x60,%rsi
   289bc:	4a 8d 3c 2b          	lea    (%rbx,%r13,1),%rdi
   289c0:	48 81 c7 d0 00 00 00 	add    $0xd0,%rdi
   289c7:	48 29 e8             	sub    %rbp,%rax
   289ca:	48 6b d0 70          	imul   $0x70,%rax,%rdx
   289ce:	41 ff d7             	callq  *%r15
   289d1:	0f 28 84 24 a0 00 00 	movaps 0xa0(%rsp),%xmm0
   289d8:	00 
   289d9:	0f 28 8c 24 b0 00 00 	movaps 0xb0(%rsp),%xmm1
   289e0:	00 
   289e1:	0f 28 94 24 c0 00 00 	movaps 0xc0(%rsp),%xmm2
   289e8:	00 
   289e9:	0f 28 9c 24 d0 00 00 	movaps 0xd0(%rsp),%xmm3
   289f0:	00 
   289f1:	41 0f 11 44 1d 60    	movups %xmm0,0x60(%r13,%rbx,1)
   289f7:	41 0f 11 4c 1d 70    	movups %xmm1,0x70(%r13,%rbx,1)
   289fd:	41 0f 11 94 1d 80 00 	movups %xmm2,0x80(%r13,%rbx,1)
   28a04:	00 00 
   28a06:	41 0f 11 9c 1d 90 00 	movups %xmm3,0x90(%r13,%rbx,1)
   28a0d:	00 00 
   28a0f:	0f 28 84 24 e0 00 00 	movaps 0xe0(%rsp),%xmm0
   28a16:	00 
   28a17:	41 0f 11 84 1d a0 00 	movups %xmm0,0xa0(%r13,%rbx,1)
   28a1e:	00 00 
   28a20:	0f 28 84 24 f0 00 00 	movaps 0xf0(%rsp),%xmm0
   28a27:	00 
   28a28:	41 0f 11 84 1d b0 00 	movups %xmm0,0xb0(%r13,%rbx,1)
   28a2f:	00 00 
   28a31:	0f 28 84 24 00 01 00 	movaps 0x100(%rsp),%xmm0
   28a38:	00 
   28a39:	41 0f 11 84 1d c0 00 	movups %xmm0,0xc0(%r13,%rbx,1)
   28a40:	00 00 
   28a42:	66 41 83 85 32 05 00 	addw   $0x1,0x532(%r13)
   28a49:	00 01 
   28a4b:	e9 90 0b 00 00       	jmpq   295e0 <gimli::read::abbrev::Abbreviations::insert+0x1010>
   28a50:	48 8d bc 24 40 02 00 	lea    0x240(%rsp),%rdi
   28a57:	00 
   28a58:	48 89 ee             	mov    %rbp,%rsi
   28a5b:	ff 15 bf d4 01 00    	callq  *0x1d4bf(%rip)        # 45f20 <_GLOBAL_OFFSET_TABLE_+0x598>
   28a61:	48 8b 9c 24 40 02 00 	mov    0x240(%rsp),%rbx
   28a68:	00 
   28a69:	48 8b 84 24 48 02 00 	mov    0x248(%rsp),%rax
   28a70:	00 
   28a71:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   28a76:	48 8b 84 24 50 02 00 	mov    0x250(%rsp),%rax
   28a7d:	00 
   28a7e:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   28a83:	bf 38 05 00 00       	mov    $0x538,%edi
   28a88:	be 08 00 00 00       	mov    $0x8,%esi
   28a8d:	ff 15 ed d0 01 00    	callq  *0x1d0ed(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   28a93:	48 85 c0             	test   %rax,%rax
   28a96:	0f 84 c4 0c 00 00    	je     29760 <gimli::read::abbrev::Abbreviations::insert+0x1190>
   28a9c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   28aa3:	48 8d 78 08          	lea    0x8(%rax),%rdi
   28aa7:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
   28aac:	48 8d b4 24 40 02 00 	lea    0x240(%rsp),%rsi
   28ab3:	00 
   28ab4:	ba 2a 05 00 00       	mov    $0x52a,%edx
   28ab9:	48 89 c5             	mov    %rax,%rbp
   28abc:	48 89 04 24          	mov    %rax,(%rsp)
   28ac0:	ff 15 32 d2 01 00    	callq  *0x1d232(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
   28ac6:	66 c7 85 32 05 00 00 	movw   $0x0,0x532(%rbp)
   28acd:	00 00 
   28acf:	49 8b 44 dd 08       	mov    0x8(%r13,%rbx,8),%rax
   28ad4:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   28ad9:	48 6b eb 70          	imul   $0x70,%rbx,%rbp
   28add:	41 0f 10 84 2d c0 00 	movups 0xc0(%r13,%rbp,1),%xmm0
   28ae4:	00 00 
   28ae6:	0f 29 84 24 90 00 00 	movaps %xmm0,0x90(%rsp)
   28aed:	00 
   28aee:	41 0f 10 84 2d b0 00 	movups 0xb0(%r13,%rbp,1),%xmm0
   28af5:	00 00 
   28af7:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
   28afe:	00 
   28aff:	41 0f 10 84 2d a0 00 	movups 0xa0(%r13,%rbp,1),%xmm0
   28b06:	00 00 
   28b08:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
   28b0d:	41 0f 10 44 2d 60    	movups 0x60(%r13,%rbp,1),%xmm0
   28b13:	41 0f 10 4c 2d 70    	movups 0x70(%r13,%rbp,1),%xmm1
   28b19:	41 0f 10 94 2d 80 00 	movups 0x80(%r13,%rbp,1),%xmm2
   28b20:	00 00 
   28b22:	41 0f 10 9c 2d 90 00 	movups 0x90(%r13,%rbp,1),%xmm3
   28b29:	00 00 
   28b2b:	0f 29 5c 24 60       	movaps %xmm3,0x60(%rsp)
   28b30:	0f 29 54 24 50       	movaps %xmm2,0x50(%rsp)
   28b35:	0f 29 4c 24 40       	movaps %xmm1,0x40(%rsp)
   28b3a:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
   28b3f:	41 0f b7 85 32 05 00 	movzwl 0x532(%r13),%eax
   28b46:	00 
   28b47:	48 89 d9             	mov    %rbx,%rcx
   28b4a:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
   28b4f:	48 f7 d3             	not    %rbx
   28b52:	48 01 c3             	add    %rax,%rbx
   28b55:	49 8d 34 cf          	lea    (%r15,%rcx,8),%rsi
   28b59:	48 83 c6 08          	add    $0x8,%rsi
   28b5d:	48 8d 14 dd 00 00 00 	lea    0x0(,%rbx,8),%rdx
   28b64:	00 
   28b65:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   28b6a:	4c 8b 3d 87 d1 01 00 	mov    0x1d187(%rip),%r15        # 45cf8 <memcpy@GLIBC_2.14>
   28b71:	41 ff d7             	callq  *%r15
   28b74:	48 8d 34 2d d0 00 00 	lea    0xd0(,%rbp,1),%rsi
   28b7b:	00 
   28b7c:	4c 01 ee             	add    %r13,%rsi
   28b7f:	48 8b 2c 24          	mov    (%rsp),%rbp
   28b83:	48 8d 7d 60          	lea    0x60(%rbp),%rdi
   28b87:	48 6b d3 70          	imul   $0x70,%rbx,%rdx
   28b8b:	41 ff d7             	callq  *%r15
   28b8e:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   28b93:	66 41 89 85 32 05 00 	mov    %ax,0x532(%r13)
   28b9a:	00 
   28b9b:	66 89 9d 32 05 00 00 	mov    %bx,0x532(%rbp)
   28ba2:	48 83 7c 24 20 00    	cmpq   $0x0,0x20(%rsp)
   28ba8:	48 89 eb             	mov    %rbp,%rbx
   28bab:	49 0f 44 dd          	cmove  %r13,%rbx
   28baf:	0f b7 93 32 05 00 00 	movzwl 0x532(%rbx),%edx
   28bb6:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
   28bbb:	4a 8d 34 fb          	lea    (%rbx,%r15,8),%rsi
   28bbf:	48 83 c6 08          	add    $0x8,%rsi
   28bc3:	4a 8d 3c fb          	lea    (%rbx,%r15,8),%rdi
   28bc7:	48 83 c7 10          	add    $0x10,%rdi
   28bcb:	4c 29 fa             	sub    %r15,%rdx
   28bce:	48 c1 e2 03          	shl    $0x3,%rdx
   28bd2:	48 8b 2d 8f d2 01 00 	mov    0x1d28f(%rip),%rbp        # 45e68 <memmove@GLIBC_2.2.5>
   28bd9:	ff d5                	callq  *%rbp
   28bdb:	48 89 e9             	mov    %rbp,%rcx
   28bde:	4e 89 64 fb 08       	mov    %r12,0x8(%rbx,%r15,8)
   28be3:	0f b7 83 32 05 00 00 	movzwl 0x532(%rbx),%eax
   28bea:	49 6b ef 70          	imul   $0x70,%r15,%rbp
   28bee:	48 8d 34 2b          	lea    (%rbx,%rbp,1),%rsi
   28bf2:	48 83 c6 60          	add    $0x60,%rsi
   28bf6:	48 8d 3c 2b          	lea    (%rbx,%rbp,1),%rdi
   28bfa:	48 81 c7 d0 00 00 00 	add    $0xd0,%rdi
   28c01:	4c 29 f8             	sub    %r15,%rax
   28c04:	48 6b d0 70          	imul   $0x70,%rax,%rdx
   28c08:	ff d1                	callq  *%rcx
   28c0a:	0f 28 84 24 a0 00 00 	movaps 0xa0(%rsp),%xmm0
   28c11:	00 
   28c12:	0f 28 8c 24 b0 00 00 	movaps 0xb0(%rsp),%xmm1
   28c19:	00 
   28c1a:	0f 28 94 24 c0 00 00 	movaps 0xc0(%rsp),%xmm2
   28c21:	00 
   28c22:	0f 28 9c 24 d0 00 00 	movaps 0xd0(%rsp),%xmm3
   28c29:	00 
   28c2a:	0f 11 44 2b 60       	movups %xmm0,0x60(%rbx,%rbp,1)
   28c2f:	0f 11 4c 2b 70       	movups %xmm1,0x70(%rbx,%rbp,1)
   28c34:	0f 11 94 2b 80 00 00 	movups %xmm2,0x80(%rbx,%rbp,1)
   28c3b:	00 
   28c3c:	0f 11 9c 2b 90 00 00 	movups %xmm3,0x90(%rbx,%rbp,1)
   28c43:	00 
   28c44:	0f 28 84 24 e0 00 00 	movaps 0xe0(%rsp),%xmm0
   28c4b:	00 
   28c4c:	0f 11 84 2b a0 00 00 	movups %xmm0,0xa0(%rbx,%rbp,1)
   28c53:	00 
   28c54:	0f 28 84 24 f0 00 00 	movaps 0xf0(%rsp),%xmm0
   28c5b:	00 
   28c5c:	0f 11 84 2b b0 00 00 	movups %xmm0,0xb0(%rbx,%rbp,1)
   28c63:	00 
   28c64:	0f 28 84 24 00 01 00 	movaps 0x100(%rsp),%xmm0
   28c6b:	00 
   28c6c:	0f 11 84 2b c0 00 00 	movups %xmm0,0xc0(%rbx,%rbp,1)
   28c73:	00 
   28c74:	66 83 83 32 05 00 00 	addw   $0x1,0x532(%rbx)
   28c7b:	01 
   28c7c:	0f 28 84 24 90 00 00 	movaps 0x90(%rsp),%xmm0
   28c83:	00 
   28c84:	0f 29 84 24 a0 01 00 	movaps %xmm0,0x1a0(%rsp)
   28c8b:	00 
   28c8c:	0f 28 84 24 80 00 00 	movaps 0x80(%rsp),%xmm0
   28c93:	00 
   28c94:	0f 29 84 24 90 01 00 	movaps %xmm0,0x190(%rsp)
   28c9b:	00 
   28c9c:	0f 28 44 24 70       	movaps 0x70(%rsp),%xmm0
   28ca1:	0f 29 84 24 80 01 00 	movaps %xmm0,0x180(%rsp)
   28ca8:	00 
   28ca9:	0f 28 44 24 30       	movaps 0x30(%rsp),%xmm0
   28cae:	0f 28 4c 24 40       	movaps 0x40(%rsp),%xmm1
   28cb3:	0f 28 54 24 50       	movaps 0x50(%rsp),%xmm2
   28cb8:	0f 28 5c 24 60       	movaps 0x60(%rsp),%xmm3
   28cbd:	0f 29 9c 24 70 01 00 	movaps %xmm3,0x170(%rsp)
   28cc4:	00 
   28cc5:	0f 29 94 24 60 01 00 	movaps %xmm2,0x160(%rsp)
   28ccc:	00 
   28ccd:	0f 29 8c 24 50 01 00 	movaps %xmm1,0x150(%rsp)
   28cd4:	00 
   28cd5:	0f 29 84 24 40 01 00 	movaps %xmm0,0x140(%rsp)
   28cdc:	00 
   28cdd:	49 8b 45 00          	mov    0x0(%r13),%rax
   28ce1:	45 31 e4             	xor    %r12d,%r12d
   28ce4:	48 85 c0             	test   %rax,%rax
   28ce7:	0f 84 e2 05 00 00    	je     292cf <gimli::read::abbrev::Abbreviations::insert+0xcff>
   28ced:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   28cf2:	4c 89 b4 24 b8 01 00 	mov    %r14,0x1b8(%rsp)
   28cf9:	00 
   28cfa:	e9 93 00 00 00       	jmpq   28d92 <gimli::read::abbrev::Abbreviations::insert+0x7c2>
   28cff:	0f 28 84 24 00 01 00 	movaps 0x100(%rsp),%xmm0
   28d06:	00 
   28d07:	0f 29 84 24 a0 01 00 	movaps %xmm0,0x1a0(%rsp)
   28d0e:	00 
   28d0f:	0f 28 84 24 f0 00 00 	movaps 0xf0(%rsp),%xmm0
   28d16:	00 
   28d17:	0f 29 84 24 90 01 00 	movaps %xmm0,0x190(%rsp)
   28d1e:	00 
   28d1f:	0f 28 84 24 e0 00 00 	movaps 0xe0(%rsp),%xmm0
   28d26:	00 
   28d27:	0f 29 84 24 80 01 00 	movaps %xmm0,0x180(%rsp)
   28d2e:	00 
   28d2f:	0f 28 84 24 a0 00 00 	movaps 0xa0(%rsp),%xmm0
   28d36:	00 
   28d37:	0f 28 8c 24 b0 00 00 	movaps 0xb0(%rsp),%xmm1
   28d3e:	00 
   28d3f:	0f 28 94 24 c0 00 00 	movaps 0xc0(%rsp),%xmm2
   28d46:	00 
   28d47:	0f 28 9c 24 d0 00 00 	movaps 0xd0(%rsp),%xmm3
   28d4e:	00 
   28d4f:	0f 29 9c 24 70 01 00 	movaps %xmm3,0x170(%rsp)
   28d56:	00 
   28d57:	0f 29 94 24 60 01 00 	movaps %xmm2,0x160(%rsp)
   28d5e:	00 
   28d5f:	0f 29 8c 24 50 01 00 	movaps %xmm1,0x150(%rsp)
   28d66:	00 
   28d67:	0f 29 84 24 40 01 00 	movaps %xmm0,0x140(%rsp)
   28d6e:	00 
   28d6f:	49 8b 45 00          	mov    0x0(%r13),%rax
   28d73:	48 89 1c 24          	mov    %rbx,(%rsp)
   28d77:	48 85 c0             	test   %rax,%rax
   28d7a:	4c 8b b4 24 b8 01 00 	mov    0x1b8(%rsp),%r14
   28d81:	00 
   28d82:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   28d87:	4c 8b 64 24 20       	mov    0x20(%rsp),%r12
   28d8c:	0f 84 46 05 00 00    	je     292d8 <gimli::read::abbrev::Abbreviations::insert+0xd08>
   28d92:	41 0f b7 9d 30 05 00 	movzwl 0x530(%r13),%ebx
   28d99:	00 
   28d9a:	49 89 c5             	mov    %rax,%r13
   28d9d:	0f 28 84 24 a0 01 00 	movaps 0x1a0(%rsp),%xmm0
   28da4:	00 
   28da5:	0f 29 84 24 90 00 00 	movaps %xmm0,0x90(%rsp)
   28dac:	00 
   28dad:	0f 28 84 24 90 01 00 	movaps 0x190(%rsp),%xmm0
   28db4:	00 
   28db5:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
   28dbc:	00 
   28dbd:	0f 28 84 24 80 01 00 	movaps 0x180(%rsp),%xmm0
   28dc4:	00 
   28dc5:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
   28dca:	0f 28 84 24 40 01 00 	movaps 0x140(%rsp),%xmm0
   28dd1:	00 
   28dd2:	0f 28 8c 24 50 01 00 	movaps 0x150(%rsp),%xmm1
   28dd9:	00 
   28dda:	0f 28 94 24 60 01 00 	movaps 0x160(%rsp),%xmm2
   28de1:	00 
   28de2:	0f 28 9c 24 70 01 00 	movaps 0x170(%rsp),%xmm3
   28de9:	00 
   28dea:	0f 29 5c 24 60       	movaps %xmm3,0x60(%rsp)
   28def:	0f 29 54 24 50       	movaps %xmm2,0x50(%rsp)
   28df4:	0f 29 4c 24 40       	movaps %xmm1,0x40(%rsp)
   28df9:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
   28dfe:	0f b7 a8 32 05 00 00 	movzwl 0x532(%rax),%ebp
   28e05:	48 83 fd 0b          	cmp    $0xb,%rbp
   28e09:	0f 82 db 07 00 00    	jb     295ea <gimli::read::abbrev::Abbreviations::insert+0x101a>
   28e0f:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   28e14:	48 8d bc 24 40 02 00 	lea    0x240(%rsp),%rdi
   28e1b:	00 
   28e1c:	48 89 de             	mov    %rbx,%rsi
   28e1f:	ff 15 fb d0 01 00    	callq  *0x1d0fb(%rip)        # 45f20 <_GLOBAL_OFFSET_TABLE_+0x598>
   28e25:	48 8b ac 24 40 02 00 	mov    0x240(%rsp),%rbp
   28e2c:	00 
   28e2d:	48 8b 84 24 48 02 00 	mov    0x248(%rsp),%rax
   28e34:	00 
   28e35:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   28e3a:	48 8b 84 24 50 02 00 	mov    0x250(%rsp),%rax
   28e41:	00 
   28e42:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   28e47:	bf 98 05 00 00       	mov    $0x598,%edi
   28e4c:	be 08 00 00 00       	mov    $0x8,%esi
   28e51:	ff 15 29 cd 01 00    	callq  *0x1cd29(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   28e57:	48 85 c0             	test   %rax,%rax
   28e5a:	0f 84 17 09 00 00    	je     29777 <gimli::read::abbrev::Abbreviations::insert+0x11a7>
   28e60:	49 89 c7             	mov    %rax,%r15
   28e63:	49 83 c4 01          	add    $0x1,%r12
   28e67:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
   28e6c:	48 89 c3             	mov    %rax,%rbx
   28e6f:	49 c7 07 00 00 00 00 	movq   $0x0,(%r15)
   28e76:	48 8d 78 08          	lea    0x8(%rax),%rdi
   28e7a:	48 89 bc 24 c8 01 00 	mov    %rdi,0x1c8(%rsp)
   28e81:	00 
   28e82:	ba 2a 05 00 00       	mov    $0x52a,%edx
   28e87:	48 8d b4 24 40 02 00 	lea    0x240(%rsp),%rsi
   28e8e:	00 
   28e8f:	48 8b 05 62 ce 01 00 	mov    0x1ce62(%rip),%rax        # 45cf8 <memcpy@GLIBC_2.14>
   28e96:	ff d0                	callq  *%rax
   28e98:	66 41 c7 87 32 05 00 	movw   $0x0,0x532(%r15)
   28e9f:	00 00 00 
   28ea2:	0f 10 84 24 dc 01 00 	movups 0x1dc(%rsp),%xmm0
   28ea9:	00 
   28eaa:	0f 10 8c 24 ec 01 00 	movups 0x1ec(%rsp),%xmm1
   28eb1:	00 
   28eb2:	0f 10 94 24 fc 01 00 	movups 0x1fc(%rsp),%xmm2
   28eb9:	00 
   28eba:	0f 10 9c 24 0c 02 00 	movups 0x20c(%rsp),%xmm3
   28ec1:	00 
   28ec2:	41 0f 11 87 34 05 00 	movups %xmm0,0x534(%r15)
   28ec9:	00 
   28eca:	41 0f 11 8f 44 05 00 	movups %xmm1,0x544(%r15)
   28ed1:	00 
   28ed2:	41 0f 11 97 54 05 00 	movups %xmm2,0x554(%r15)
   28ed9:	00 
   28eda:	41 0f 11 9f 64 05 00 	movups %xmm3,0x564(%r15)
   28ee1:	00 
   28ee2:	0f 10 84 24 1c 02 00 	movups 0x21c(%rsp),%xmm0
   28ee9:	00 
   28eea:	41 0f 11 87 74 05 00 	movups %xmm0,0x574(%r15)
   28ef1:	00 
   28ef2:	0f 10 84 24 2c 02 00 	movups 0x22c(%rsp),%xmm0
   28ef9:	00 
   28efa:	41 0f 11 87 84 05 00 	movups %xmm0,0x584(%r15)
   28f01:	00 
   28f02:	8b 84 24 3c 02 00 00 	mov    0x23c(%rsp),%eax
   28f09:	41 89 87 94 05 00 00 	mov    %eax,0x594(%r15)
   28f10:	49 8b 44 ed 08       	mov    0x8(%r13,%rbp,8),%rax
   28f15:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   28f1a:	4c 6b f5 70          	imul   $0x70,%rbp,%r14
   28f1e:	48 89 e8             	mov    %rbp,%rax
   28f21:	48 89 ac 24 c0 01 00 	mov    %rbp,0x1c0(%rsp)
   28f28:	00 
   28f29:	43 0f 10 84 35 c0 00 	movups 0xc0(%r13,%r14,1),%xmm0
   28f30:	00 00 
   28f32:	0f 29 84 24 a0 02 00 	movaps %xmm0,0x2a0(%rsp)
   28f39:	00 
   28f3a:	43 0f 10 84 35 b0 00 	movups 0xb0(%r13,%r14,1),%xmm0
   28f41:	00 00 
   28f43:	0f 29 84 24 90 02 00 	movaps %xmm0,0x290(%rsp)
   28f4a:	00 
   28f4b:	43 0f 10 84 35 a0 00 	movups 0xa0(%r13,%r14,1),%xmm0
   28f52:	00 00 
   28f54:	0f 29 84 24 80 02 00 	movaps %xmm0,0x280(%rsp)
   28f5b:	00 
   28f5c:	43 0f 10 44 35 60    	movups 0x60(%r13,%r14,1),%xmm0
   28f62:	43 0f 10 4c 35 70    	movups 0x70(%r13,%r14,1),%xmm1
   28f68:	43 0f 10 94 35 80 00 	movups 0x80(%r13,%r14,1),%xmm2
   28f6f:	00 00 
   28f71:	43 0f 10 9c 35 90 00 	movups 0x90(%r13,%r14,1),%xmm3
   28f78:	00 00 
   28f7a:	0f 29 9c 24 70 02 00 	movaps %xmm3,0x270(%rsp)
   28f81:	00 
   28f82:	0f 29 94 24 60 02 00 	movaps %xmm2,0x260(%rsp)
   28f89:	00 
   28f8a:	0f 29 8c 24 50 02 00 	movaps %xmm1,0x250(%rsp)
   28f91:	00 
   28f92:	0f 29 84 24 40 02 00 	movaps %xmm0,0x240(%rsp)
   28f99:	00 
   28f9a:	41 0f b7 ad 32 05 00 	movzwl 0x532(%r13),%ebp
   28fa1:	00 
   28fa2:	49 89 c4             	mov    %rax,%r12
   28fa5:	49 f7 d4             	not    %r12
   28fa8:	49 01 ec             	add    %rbp,%r12
   28fab:	48 8d 34 c5 10 00 00 	lea    0x10(,%rax,8),%rsi
   28fb2:	00 
   28fb3:	4c 01 ee             	add    %r13,%rsi
   28fb6:	4a 8d 14 e5 00 00 00 	lea    0x0(,%r12,8),%rdx
   28fbd:	00 
   28fbe:	48 8b bc 24 c8 01 00 	mov    0x1c8(%rsp),%rdi
   28fc5:	00 
   28fc6:	ff 15 2c cd 01 00    	callq  *0x1cd2c(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
   28fcc:	4b 8d 34 2e          	lea    (%r14,%r13,1),%rsi
   28fd0:	48 81 c6 d0 00 00 00 	add    $0xd0,%rsi
   28fd7:	49 8d 7f 60          	lea    0x60(%r15),%rdi
   28fdb:	49 6b d4 70          	imul   $0x70,%r12,%rdx
   28fdf:	4c 8b 35 12 cd 01 00 	mov    0x1cd12(%rip),%r14        # 45cf8 <memcpy@GLIBC_2.14>
   28fe6:	41 ff d6             	callq  *%r14
   28fe9:	48 8b 84 24 c0 01 00 	mov    0x1c0(%rsp),%rax
   28ff0:	00 
   28ff1:	66 41 89 85 32 05 00 	mov    %ax,0x532(%r13)
   28ff8:	00 
   28ff9:	66 45 89 a7 32 05 00 	mov    %r12w,0x532(%r15)
   29000:	00 
   29001:	0f 28 84 24 a0 02 00 	movaps 0x2a0(%rsp),%xmm0
   29008:	00 
   29009:	0f 29 84 24 00 01 00 	movaps %xmm0,0x100(%rsp)
   29010:	00 
   29011:	0f 28 84 24 90 02 00 	movaps 0x290(%rsp),%xmm0
   29018:	00 
   29019:	0f 29 84 24 f0 00 00 	movaps %xmm0,0xf0(%rsp)
   29020:	00 
   29021:	0f 28 84 24 80 02 00 	movaps 0x280(%rsp),%xmm0
   29028:	00 
   29029:	0f 29 84 24 e0 00 00 	movaps %xmm0,0xe0(%rsp)
   29030:	00 
   29031:	0f 28 84 24 40 02 00 	movaps 0x240(%rsp),%xmm0
   29038:	00 
   29039:	0f 28 8c 24 50 02 00 	movaps 0x250(%rsp),%xmm1
   29040:	00 
   29041:	0f 28 94 24 60 02 00 	movaps 0x260(%rsp),%xmm2
   29048:	00 
   29049:	0f 28 9c 24 70 02 00 	movaps 0x270(%rsp),%xmm3
   29050:	00 
   29051:	0f 29 9c 24 d0 00 00 	movaps %xmm3,0xd0(%rsp)
   29058:	00 
   29059:	0f 29 94 24 c0 00 00 	movaps %xmm2,0xc0(%rsp)
   29060:	00 
   29061:	0f 29 8c 24 b0 00 00 	movaps %xmm1,0xb0(%rsp)
   29068:	00 
   29069:	0f 29 84 24 a0 00 00 	movaps %xmm0,0xa0(%rsp)
   29070:	00 
   29071:	48 8d 34 c5 40 05 00 	lea    0x540(,%rax,8),%rsi
   29078:	00 
   29079:	4c 01 ee             	add    %r13,%rsi
   2907c:	49 8d bf 38 05 00 00 	lea    0x538(%r15),%rdi
   29083:	48 29 c5             	sub    %rax,%rbp
   29086:	48 c1 e5 03          	shl    $0x3,%rbp
   2908a:	48 89 ea             	mov    %rbp,%rdx
   2908d:	41 ff d6             	callq  *%r14
   29090:	31 c9                	xor    %ecx,%ecx
   29092:	31 c0                	xor    %eax,%eax
   29094:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2909b:	00 00 00 
   2909e:	66 90                	xchg   %ax,%ax
   290a0:	4c 39 e1             	cmp    %r12,%rcx
   290a3:	48 83 d0 00          	adc    $0x0,%rax
   290a7:	48 8b 94 cb 38 05 00 	mov    0x538(%rbx,%rcx,8),%rdx
   290ae:	00 
   290af:	48 89 1a             	mov    %rbx,(%rdx)
   290b2:	66 89 8a 30 05 00 00 	mov    %cx,0x530(%rdx)
   290b9:	4c 39 e0             	cmp    %r12,%rax
   290bc:	77 08                	ja     290c6 <gimli::read::abbrev::Abbreviations::insert+0xaf6>
   290be:	4c 39 e1             	cmp    %r12,%rcx
   290c1:	48 89 c1             	mov    %rax,%rcx
   290c4:	72 da                	jb     290a0 <gimli::read::abbrev::Abbreviations::insert+0xad0>
   290c6:	0f 28 84 24 00 01 00 	movaps 0x100(%rsp),%xmm0
   290cd:	00 
   290ce:	0f 29 84 24 a0 02 00 	movaps %xmm0,0x2a0(%rsp)
   290d5:	00 
   290d6:	0f 28 8c 24 f0 00 00 	movaps 0xf0(%rsp),%xmm1
   290dd:	00 
   290de:	0f 29 8c 24 90 02 00 	movaps %xmm1,0x290(%rsp)
   290e5:	00 
   290e6:	0f 28 94 24 e0 00 00 	movaps 0xe0(%rsp),%xmm2
   290ed:	00 
   290ee:	0f 29 94 24 80 02 00 	movaps %xmm2,0x280(%rsp)
   290f5:	00 
   290f6:	0f 28 9c 24 a0 00 00 	movaps 0xa0(%rsp),%xmm3
   290fd:	00 
   290fe:	0f 28 a4 24 b0 00 00 	movaps 0xb0(%rsp),%xmm4
   29105:	00 
   29106:	0f 28 ac 24 c0 00 00 	movaps 0xc0(%rsp),%xmm5
   2910d:	00 
   2910e:	0f 28 b4 24 d0 00 00 	movaps 0xd0(%rsp),%xmm6
   29115:	00 
   29116:	0f 29 b4 24 70 02 00 	movaps %xmm6,0x270(%rsp)
   2911d:	00 
   2911e:	0f 29 ac 24 60 02 00 	movaps %xmm5,0x260(%rsp)
   29125:	00 
   29126:	0f 29 a4 24 50 02 00 	movaps %xmm4,0x250(%rsp)
   2912d:	00 
   2912e:	0f 29 9c 24 40 02 00 	movaps %xmm3,0x240(%rsp)
   29135:	00 
   29136:	0f 29 84 24 00 01 00 	movaps %xmm0,0x100(%rsp)
   2913d:	00 
   2913e:	0f 29 8c 24 f0 00 00 	movaps %xmm1,0xf0(%rsp)
   29145:	00 
   29146:	0f 29 94 24 e0 00 00 	movaps %xmm2,0xe0(%rsp)
   2914d:	00 
   2914e:	0f 29 b4 24 d0 00 00 	movaps %xmm6,0xd0(%rsp)
   29155:	00 
   29156:	0f 29 ac 24 c0 00 00 	movaps %xmm5,0xc0(%rsp)
   2915d:	00 
   2915e:	0f 29 a4 24 b0 00 00 	movaps %xmm4,0xb0(%rsp)
   29165:	00 
   29166:	0f 29 9c 24 a0 00 00 	movaps %xmm3,0xa0(%rsp)
   2916d:	00 
   2916e:	48 83 7c 24 10 00    	cmpq   $0x0,0x10(%rsp)
   29174:	4d 0f 44 fd          	cmove  %r13,%r15
   29178:	41 0f b7 97 32 05 00 	movzwl 0x532(%r15),%edx
   2917f:	00 
   29180:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
   29185:	49 8d 6c 24 01       	lea    0x1(%r12),%rbp
   2918a:	4b 8d 34 e7          	lea    (%r15,%r12,8),%rsi
   2918e:	48 81 c6 40 05 00 00 	add    $0x540,%rsi
   29195:	4b 8d 3c e7          	lea    (%r15,%r12,8),%rdi
   29199:	48 81 c7 48 05 00 00 	add    $0x548,%rdi
   291a0:	4c 29 e2             	sub    %r12,%rdx
   291a3:	48 c1 e2 03          	shl    $0x3,%rdx
   291a7:	4c 8b 35 ba cc 01 00 	mov    0x1ccba(%rip),%r14        # 45e68 <memmove@GLIBC_2.2.5>
   291ae:	41 ff d6             	callq  *%r14
   291b1:	48 8b 04 24          	mov    (%rsp),%rax
   291b5:	4b 89 84 e7 40 05 00 	mov    %rax,0x540(%r15,%r12,8)
   291bc:	00 
   291bd:	41 0f b7 97 32 05 00 	movzwl 0x532(%r15),%edx
   291c4:	00 
   291c5:	4b 8d 34 e7          	lea    (%r15,%r12,8),%rsi
   291c9:	48 83 c6 08          	add    $0x8,%rsi
   291cd:	4b 8d 3c e7          	lea    (%r15,%r12,8),%rdi
   291d1:	48 83 c7 10          	add    $0x10,%rdi
   291d5:	4c 29 e2             	sub    %r12,%rdx
   291d8:	48 c1 e2 03          	shl    $0x3,%rdx
   291dc:	41 ff d6             	callq  *%r14
   291df:	4c 89 f1             	mov    %r14,%rcx
   291e2:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   291e7:	4b 89 44 e7 08       	mov    %rax,0x8(%r15,%r12,8)
   291ec:	41 0f b7 87 32 05 00 	movzwl 0x532(%r15),%eax
   291f3:	00 
   291f4:	4d 6b f4 70          	imul   $0x70,%r12,%r14
   291f8:	4b 8d 34 37          	lea    (%r15,%r14,1),%rsi
   291fc:	48 83 c6 60          	add    $0x60,%rsi
   29200:	4b 8d 3c 37          	lea    (%r15,%r14,1),%rdi
   29204:	48 81 c7 d0 00 00 00 	add    $0xd0,%rdi
   2920b:	4c 29 e0             	sub    %r12,%rax
   2920e:	48 6b d0 70          	imul   $0x70,%rax,%rdx
   29212:	ff d1                	callq  *%rcx
   29214:	0f 28 44 24 30       	movaps 0x30(%rsp),%xmm0
   29219:	0f 28 4c 24 40       	movaps 0x40(%rsp),%xmm1
   2921e:	0f 28 54 24 50       	movaps 0x50(%rsp),%xmm2
   29223:	0f 28 5c 24 60       	movaps 0x60(%rsp),%xmm3
   29228:	43 0f 11 44 37 60    	movups %xmm0,0x60(%r15,%r14,1)
   2922e:	43 0f 11 4c 37 70    	movups %xmm1,0x70(%r15,%r14,1)
   29234:	43 0f 11 94 37 80 00 	movups %xmm2,0x80(%r15,%r14,1)
   2923b:	00 00 
   2923d:	43 0f 11 9c 37 90 00 	movups %xmm3,0x90(%r15,%r14,1)
   29244:	00 00 
   29246:	0f 28 44 24 70       	movaps 0x70(%rsp),%xmm0
   2924b:	43 0f 11 84 37 a0 00 	movups %xmm0,0xa0(%r15,%r14,1)
   29252:	00 00 
   29254:	0f 28 84 24 80 00 00 	movaps 0x80(%rsp),%xmm0
   2925b:	00 
   2925c:	43 0f 11 84 37 b0 00 	movups %xmm0,0xb0(%r15,%r14,1)
   29263:	00 00 
   29265:	0f 28 84 24 90 00 00 	movaps 0x90(%rsp),%xmm0
   2926c:	00 
   2926d:	43 0f 11 84 37 c0 00 	movups %xmm0,0xc0(%r15,%r14,1)
   29274:	00 00 
   29276:	41 0f b7 87 32 05 00 	movzwl 0x532(%r15),%eax
   2927d:	00 
   2927e:	83 c0 01             	add    $0x1,%eax
   29281:	66 41 89 87 32 05 00 	mov    %ax,0x532(%r15)
   29288:	00 
   29289:	0f b7 c0             	movzwl %ax,%eax
   2928c:	48 39 c5             	cmp    %rax,%rbp
   2928f:	0f 87 6a fa ff ff    	ja     28cff <gimli::read::abbrev::Abbreviations::insert+0x72f>
   29295:	48 89 e9             	mov    %rbp,%rcx
   29298:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2929f:	00 
   292a0:	48 39 c5             	cmp    %rax,%rbp
   292a3:	48 83 d1 00          	adc    $0x0,%rcx
   292a7:	49 8b 94 ef 38 05 00 	mov    0x538(%r15,%rbp,8),%rdx
   292ae:	00 
   292af:	4c 89 3a             	mov    %r15,(%rdx)
   292b2:	66 89 aa 30 05 00 00 	mov    %bp,0x530(%rdx)
   292b9:	48 39 c1             	cmp    %rax,%rcx
   292bc:	0f 87 3d fa ff ff    	ja     28cff <gimli::read::abbrev::Abbreviations::insert+0x72f>
   292c2:	48 39 c5             	cmp    %rax,%rbp
   292c5:	48 89 cd             	mov    %rcx,%rbp
   292c8:	72 d6                	jb     292a0 <gimli::read::abbrev::Abbreviations::insert+0xcd0>
   292ca:	e9 30 fa ff ff       	jmpq   28cff <gimli::read::abbrev::Abbreviations::insert+0x72f>
   292cf:	48 8b 1c 24          	mov    (%rsp),%rbx
   292d3:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   292d8:	0f 28 84 24 a0 01 00 	movaps 0x1a0(%rsp),%xmm0
   292df:	00 
   292e0:	0f 29 84 24 90 00 00 	movaps %xmm0,0x90(%rsp)
   292e7:	00 
   292e8:	0f 28 84 24 90 01 00 	movaps 0x190(%rsp),%xmm0
   292ef:	00 
   292f0:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
   292f7:	00 
   292f8:	0f 28 84 24 80 01 00 	movaps 0x180(%rsp),%xmm0
   292ff:	00 
   29300:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
   29305:	0f 28 84 24 40 01 00 	movaps 0x140(%rsp),%xmm0
   2930c:	00 
   2930d:	0f 28 8c 24 50 01 00 	movaps 0x150(%rsp),%xmm1
   29314:	00 
   29315:	0f 28 94 24 60 01 00 	movaps 0x160(%rsp),%xmm2
   2931c:	00 
   2931d:	0f 28 9c 24 70 01 00 	movaps 0x170(%rsp),%xmm3
   29324:	00 
   29325:	0f 29 5c 24 60       	movaps %xmm3,0x60(%rsp)
   2932a:	0f 29 54 24 50       	movaps %xmm2,0x50(%rsp)
   2932f:	0f 29 4c 24 40       	movaps %xmm1,0x40(%rsp)
   29334:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
   29339:	4c 89 a4 24 a0 00 00 	mov    %r12,0xa0(%rsp)
   29340:	00 
   29341:	4c 89 ac 24 a8 00 00 	mov    %r13,0xa8(%rsp)
   29348:	00 
   29349:	48 89 8c 24 b0 00 00 	mov    %rcx,0xb0(%rsp)
   29350:	00 
   29351:	4c 89 e0             	mov    %r12,%rax
   29354:	4c 8d a4 24 b8 00 00 	lea    0xb8(%rsp),%r12
   2935b:	00 
   2935c:	0f 28 84 24 90 00 00 	movaps 0x90(%rsp),%xmm0
   29363:	00 
   29364:	0f 11 84 24 18 01 00 	movups %xmm0,0x118(%rsp)
   2936b:	00 
   2936c:	0f 28 84 24 80 00 00 	movaps 0x80(%rsp),%xmm0
   29373:	00 
   29374:	0f 11 84 24 08 01 00 	movups %xmm0,0x108(%rsp)
   2937b:	00 
   2937c:	0f 28 44 24 70       	movaps 0x70(%rsp),%xmm0
   29381:	0f 11 84 24 f8 00 00 	movups %xmm0,0xf8(%rsp)
   29388:	00 
   29389:	0f 28 44 24 30       	movaps 0x30(%rsp),%xmm0
   2938e:	0f 28 4c 24 40       	movaps 0x40(%rsp),%xmm1
   29393:	0f 28 54 24 50       	movaps 0x50(%rsp),%xmm2
   29398:	0f 28 5c 24 60       	movaps 0x60(%rsp),%xmm3
   2939d:	0f 11 9c 24 e8 00 00 	movups %xmm3,0xe8(%rsp)
   293a4:	00 
   293a5:	0f 11 94 24 d8 00 00 	movups %xmm2,0xd8(%rsp)
   293ac:	00 
   293ad:	0f 11 8c 24 c8 00 00 	movups %xmm1,0xc8(%rsp)
   293b4:	00 
   293b5:	0f 11 84 24 b8 00 00 	movups %xmm0,0xb8(%rsp)
   293bc:	00 
   293bd:	48 89 9c 24 28 01 00 	mov    %rbx,0x128(%rsp)
   293c4:	00 
   293c5:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
   293cc:	00 
   293cd:	48 8b ac 24 d0 01 00 	mov    0x1d0(%rsp),%rbp
   293d4:	00 
   293d5:	48 8b 45 00          	mov    0x0(%rbp),%rax
   293d9:	48 85 c0             	test   %rax,%rax
   293dc:	48 0f 44 e8          	cmove  %rax,%rbp
   293e0:	0f 84 a3 03 00 00    	je     29789 <gimli::read::abbrev::Abbreviations::insert+0x11b9>
   293e6:	bf 98 05 00 00       	mov    $0x598,%edi
   293eb:	be 08 00 00 00       	mov    $0x8,%esi
   293f0:	ff 15 8a c7 01 00    	callq  *0x1c78a(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   293f6:	48 85 c0             	test   %rax,%rax
   293f9:	0f 84 78 03 00 00    	je     29777 <gimli::read::abbrev::Abbreviations::insert+0x11a7>
   293ff:	48 89 c3             	mov    %rax,%rbx
   29402:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   29409:	48 89 c7             	mov    %rax,%rdi
   2940c:	48 83 c7 08          	add    $0x8,%rdi
   29410:	4c 8d bc 24 40 02 00 	lea    0x240(%rsp),%r15
   29417:	00 
   29418:	ba 2a 05 00 00       	mov    $0x52a,%edx
   2941d:	4c 89 fe             	mov    %r15,%rsi
   29420:	ff 15 d2 c8 01 00    	callq  *0x1c8d2(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
   29426:	66 c7 83 32 05 00 00 	movw   $0x0,0x532(%rbx)
   2942d:	00 00 
   2942f:	0f 10 84 24 dc 01 00 	movups 0x1dc(%rsp),%xmm0
   29436:	00 
   29437:	0f 10 8c 24 ec 01 00 	movups 0x1ec(%rsp),%xmm1
   2943e:	00 
   2943f:	0f 10 94 24 fc 01 00 	movups 0x1fc(%rsp),%xmm2
   29446:	00 
   29447:	0f 10 9c 24 0c 02 00 	movups 0x20c(%rsp),%xmm3
   2944e:	00 
   2944f:	0f 11 83 34 05 00 00 	movups %xmm0,0x534(%rbx)
   29456:	0f 11 8b 44 05 00 00 	movups %xmm1,0x544(%rbx)
   2945d:	0f 11 93 54 05 00 00 	movups %xmm2,0x554(%rbx)
   29464:	0f 11 9b 64 05 00 00 	movups %xmm3,0x564(%rbx)
   2946b:	0f 10 84 24 1c 02 00 	movups 0x21c(%rsp),%xmm0
   29472:	00 
   29473:	0f 11 83 74 05 00 00 	movups %xmm0,0x574(%rbx)
   2947a:	0f 10 84 24 2c 02 00 	movups 0x22c(%rsp),%xmm0
   29481:	00 
   29482:	0f 11 83 84 05 00 00 	movups %xmm0,0x584(%rbx)
   29489:	8b 84 24 3c 02 00 00 	mov    0x23c(%rsp),%eax
   29490:	89 83 94 05 00 00    	mov    %eax,0x594(%rbx)
   29496:	48 8b 45 00          	mov    0x0(%rbp),%rax
   2949a:	48 89 83 38 05 00 00 	mov    %rax,0x538(%rbx)
   294a1:	48 89 5d 00          	mov    %rbx,0x0(%rbp)
   294a5:	48 8b 4d 08          	mov    0x8(%rbp),%rcx
   294a9:	48 8d 51 01          	lea    0x1(%rcx),%rdx
   294ad:	48 89 55 08          	mov    %rdx,0x8(%rbp)
   294b1:	48 89 18             	mov    %rbx,(%rax)
   294b4:	66 c7 80 30 05 00 00 	movw   $0x0,0x530(%rax)
   294bb:	00 00 
   294bd:	48 8b 94 24 b0 00 00 	mov    0xb0(%rsp),%rdx
   294c4:	00 
   294c5:	48 8b 84 24 28 01 00 	mov    0x128(%rsp),%rax
   294cc:	00 
   294cd:	41 0f 10 44 24 60    	movups 0x60(%r12),%xmm0
   294d3:	0f 29 84 24 a0 02 00 	movaps %xmm0,0x2a0(%rsp)
   294da:	00 
   294db:	41 0f 10 44 24 50    	movups 0x50(%r12),%xmm0
   294e1:	0f 29 84 24 90 02 00 	movaps %xmm0,0x290(%rsp)
   294e8:	00 
   294e9:	41 0f 10 44 24 40    	movups 0x40(%r12),%xmm0
   294ef:	0f 29 84 24 80 02 00 	movaps %xmm0,0x280(%rsp)
   294f6:	00 
   294f7:	41 0f 10 04 24       	movups (%r12),%xmm0
   294fc:	41 0f 10 4c 24 10    	movups 0x10(%r12),%xmm1
   29502:	41 0f 10 54 24 20    	movups 0x20(%r12),%xmm2
   29508:	41 0f 10 5c 24 30    	movups 0x30(%r12),%xmm3
   2950e:	0f 29 9c 24 70 02 00 	movaps %xmm3,0x270(%rsp)
   29515:	00 
   29516:	0f 29 94 24 60 02 00 	movaps %xmm2,0x260(%rsp)
   2951d:	00 
   2951e:	0f 29 8c 24 50 02 00 	movaps %xmm1,0x250(%rsp)
   29525:	00 
   29526:	0f 29 84 24 40 02 00 	movaps %xmm0,0x240(%rsp)
   2952d:	00 
   2952e:	48 3b 8c 24 30 01 00 	cmp    0x130(%rsp),%rcx
   29535:	00 
   29536:	0f 85 68 02 00 00    	jne    297a4 <gimli::read::abbrev::Abbreviations::insert+0x11d4>
   2953c:	0f b7 8b 32 05 00 00 	movzwl 0x532(%rbx),%ecx
   29543:	48 83 f9 0b          	cmp    $0xb,%rcx
   29547:	0f 83 72 02 00 00    	jae    297bf <gimli::read::abbrev::Abbreviations::insert+0x11ef>
   2954d:	8d 71 01             	lea    0x1(%rcx),%esi
   29550:	66 89 b3 32 05 00 00 	mov    %si,0x532(%rbx)
   29557:	48 89 54 cb 08       	mov    %rdx,0x8(%rbx,%rcx,8)
   2955c:	48 6b d1 70          	imul   $0x70,%rcx,%rdx
   29560:	0f 28 84 24 a0 02 00 	movaps 0x2a0(%rsp),%xmm0
   29567:	00 
   29568:	0f 11 84 13 c0 00 00 	movups %xmm0,0xc0(%rbx,%rdx,1)
   2956f:	00 
   29570:	0f 28 84 24 90 02 00 	movaps 0x290(%rsp),%xmm0
   29577:	00 
   29578:	0f 11 84 13 b0 00 00 	movups %xmm0,0xb0(%rbx,%rdx,1)
   2957f:	00 
   29580:	0f 28 84 24 80 02 00 	movaps 0x280(%rsp),%xmm0
   29587:	00 
   29588:	0f 11 84 13 a0 00 00 	movups %xmm0,0xa0(%rbx,%rdx,1)
   2958f:	00 
   29590:	0f 28 84 24 40 02 00 	movaps 0x240(%rsp),%xmm0
   29597:	00 
   29598:	0f 28 8c 24 50 02 00 	movaps 0x250(%rsp),%xmm1
   2959f:	00 
   295a0:	0f 28 94 24 60 02 00 	movaps 0x260(%rsp),%xmm2
   295a7:	00 
   295a8:	0f 28 9c 24 70 02 00 	movaps 0x270(%rsp),%xmm3
   295af:	00 
   295b0:	0f 11 9c 13 90 00 00 	movups %xmm3,0x90(%rbx,%rdx,1)
   295b7:	00 
   295b8:	0f 11 94 13 80 00 00 	movups %xmm2,0x80(%rbx,%rdx,1)
   295bf:	00 
   295c0:	0f 11 4c 13 70       	movups %xmm1,0x70(%rbx,%rdx,1)
   295c5:	0f 11 44 13 60       	movups %xmm0,0x60(%rbx,%rdx,1)
   295ca:	48 89 84 cb 40 05 00 	mov    %rax,0x540(%rbx,%rcx,8)
   295d1:	00 
   295d2:	48 83 c1 01          	add    $0x1,%rcx
   295d6:	48 89 18             	mov    %rbx,(%rax)
   295d9:	66 89 88 30 05 00 00 	mov    %cx,0x530(%rax)
   295e0:	49 83 46 28 01       	addq   $0x1,0x28(%r14)
   295e5:	e9 29 f3 ff ff       	jmpq   28913 <gimli::read::abbrev::Abbreviations::insert+0x343>
   295ea:	48 8d 34 dd 40 05 00 	lea    0x540(,%rbx,8),%rsi
   295f1:	00 
   295f2:	4c 01 ee             	add    %r13,%rsi
   295f5:	48 8d 3c dd 48 05 00 	lea    0x548(,%rbx,8),%rdi
   295fc:	00 
   295fd:	4c 01 ef             	add    %r13,%rdi
   29600:	48 29 dd             	sub    %rbx,%rbp
   29603:	48 c1 e5 03          	shl    $0x3,%rbp
   29607:	48 89 ea             	mov    %rbp,%rdx
   2960a:	4c 8b 3d 57 c8 01 00 	mov    0x1c857(%rip),%r15        # 45e68 <memmove@GLIBC_2.2.5>
   29611:	49 89 cc             	mov    %rcx,%r12
   29614:	41 ff d7             	callq  *%r15
   29617:	48 8b 04 24          	mov    (%rsp),%rax
   2961b:	49 89 84 dd 40 05 00 	mov    %rax,0x540(%r13,%rbx,8)
   29622:	00 
   29623:	48 8d 34 dd 08 00 00 	lea    0x8(,%rbx,8),%rsi
   2962a:	00 
   2962b:	4c 01 ee             	add    %r13,%rsi
   2962e:	48 8d 3c dd 10 00 00 	lea    0x10(,%rbx,8),%rdi
   29635:	00 
   29636:	4c 01 ef             	add    %r13,%rdi
   29639:	48 89 ea             	mov    %rbp,%rdx
   2963c:	41 ff d7             	callq  *%r15
   2963f:	4d 89 64 dd 08       	mov    %r12,0x8(%r13,%rbx,8)
   29644:	41 0f b7 85 32 05 00 	movzwl 0x532(%r13),%eax
   2964b:	00 
   2964c:	48 6b eb 70          	imul   $0x70,%rbx,%rbp
   29650:	48 8d 34 2d 60 00 00 	lea    0x60(,%rbp,1),%rsi
   29657:	00 
   29658:	4c 01 ee             	add    %r13,%rsi
   2965b:	48 8d 3c 2d d0 00 00 	lea    0xd0(,%rbp,1),%rdi
   29662:	00 
   29663:	4c 01 ef             	add    %r13,%rdi
   29666:	48 29 d8             	sub    %rbx,%rax
   29669:	48 6b d0 70          	imul   $0x70,%rax,%rdx
   2966d:	41 ff d7             	callq  *%r15
   29670:	0f 28 44 24 30       	movaps 0x30(%rsp),%xmm0
   29675:	0f 28 4c 24 40       	movaps 0x40(%rsp),%xmm1
   2967a:	0f 28 54 24 50       	movaps 0x50(%rsp),%xmm2
   2967f:	0f 28 5c 24 60       	movaps 0x60(%rsp),%xmm3
   29684:	41 0f 11 44 2d 60    	movups %xmm0,0x60(%r13,%rbp,1)
   2968a:	41 0f 11 4c 2d 70    	movups %xmm1,0x70(%r13,%rbp,1)
   29690:	41 0f 11 94 2d 80 00 	movups %xmm2,0x80(%r13,%rbp,1)
   29697:	00 00 
   29699:	41 0f 11 9c 2d 90 00 	movups %xmm3,0x90(%r13,%rbp,1)
   296a0:	00 00 
   296a2:	0f 28 44 24 70       	movaps 0x70(%rsp),%xmm0
   296a7:	41 0f 11 84 2d a0 00 	movups %xmm0,0xa0(%r13,%rbp,1)
   296ae:	00 00 
   296b0:	0f 28 84 24 80 00 00 	movaps 0x80(%rsp),%xmm0
   296b7:	00 
   296b8:	41 0f 11 84 2d b0 00 	movups %xmm0,0xb0(%r13,%rbp,1)
   296bf:	00 00 
   296c1:	0f 28 84 24 90 00 00 	movaps 0x90(%rsp),%xmm0
   296c8:	00 
   296c9:	41 0f 11 84 2d c0 00 	movups %xmm0,0xc0(%r13,%rbp,1)
   296d0:	00 00 
   296d2:	41 0f b7 85 32 05 00 	movzwl 0x532(%r13),%eax
   296d9:	00 
   296da:	83 c0 01             	add    $0x1,%eax
   296dd:	66 41 89 85 32 05 00 	mov    %ax,0x532(%r13)
   296e4:	00 
   296e5:	66 39 c3             	cmp    %ax,%bx
   296e8:	0f 83 f2 fe ff ff    	jae    295e0 <gimli::read::abbrev::Abbreviations::insert+0x1010>
   296ee:	48 89 da             	mov    %rbx,%rdx
   296f1:	48 83 c3 01          	add    $0x1,%rbx
   296f5:	0f b7 c0             	movzwl %ax,%eax
   296f8:	48 39 c3             	cmp    %rax,%rbx
   296fb:	48 89 d9             	mov    %rbx,%rcx
   296fe:	48 83 d1 00          	adc    $0x0,%rcx
   29702:	49 8b 94 d5 40 05 00 	mov    0x540(%r13,%rdx,8),%rdx
   29709:	00 
   2970a:	4c 89 2a             	mov    %r13,(%rdx)
   2970d:	66 89 9a 30 05 00 00 	mov    %bx,0x530(%rdx)
   29714:	48 39 c1             	cmp    %rax,%rcx
   29717:	0f 87 c3 fe ff ff    	ja     295e0 <gimli::read::abbrev::Abbreviations::insert+0x1010>
   2971d:	48 39 c3             	cmp    %rax,%rbx
   29720:	0f 83 ba fe ff ff    	jae    295e0 <gimli::read::abbrev::Abbreviations::insert+0x1010>
   29726:	48 89 ca             	mov    %rcx,%rdx
   29729:	48 39 c1             	cmp    %rax,%rcx
   2972c:	48 83 d2 00          	adc    $0x0,%rdx
   29730:	49 8b b4 cd 38 05 00 	mov    0x538(%r13,%rcx,8),%rsi
   29737:	00 
   29738:	4c 89 2e             	mov    %r13,(%rsi)
   2973b:	66 89 8e 30 05 00 00 	mov    %cx,0x530(%rsi)
   29742:	48 39 c2             	cmp    %rax,%rdx
   29745:	0f 87 95 fe ff ff    	ja     295e0 <gimli::read::abbrev::Abbreviations::insert+0x1010>
   2974b:	48 39 c1             	cmp    %rax,%rcx
   2974e:	48 89 d1             	mov    %rdx,%rcx
   29751:	72 d6                	jb     29729 <gimli::read::abbrev::Abbreviations::insert+0x1159>
   29753:	e9 88 fe ff ff       	jmpq   295e0 <gimli::read::abbrev::Abbreviations::insert+0x1010>
   29758:	ff 15 82 c3 01 00    	callq  *0x1c382(%rip)        # 45ae0 <_GLOBAL_OFFSET_TABLE_+0x158>
   2975e:	0f 0b                	ud2    
   29760:	bf 38 05 00 00       	mov    $0x538,%edi
   29765:	eb 15                	jmp    2977c <gimli::read::abbrev::Abbreviations::insert+0x11ac>
   29767:	be 08 00 00 00       	mov    $0x8,%esi
   2976c:	48 89 df             	mov    %rbx,%rdi
   2976f:	ff 15 ab c3 01 00    	callq  *0x1c3ab(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   29775:	0f 0b                	ud2    
   29777:	bf 98 05 00 00       	mov    $0x598,%edi
   2977c:	be 08 00 00 00       	mov    $0x8,%esi
   29781:	ff 15 99 c3 01 00    	callq  *0x1c399(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   29787:	0f 0b                	ud2    
   29789:	48 8d 3d a8 f9 00 00 	lea    0xf9a8(%rip),%rdi        # 39138 <str.6+0x1e18>
   29790:	48 8d 15 01 b5 01 00 	lea    0x1b501(%rip),%rdx        # 44c98 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1760>
   29797:	be 2b 00 00 00       	mov    $0x2b,%esi
   2979c:	ff 15 36 c7 01 00    	callq  *0x1c736(%rip)        # 45ed8 <_GLOBAL_OFFSET_TABLE_+0x550>
   297a2:	eb ba                	jmp    2975e <gimli::read::abbrev::Abbreviations::insert+0x118e>
   297a4:	48 8d 3d 12 fa 00 00 	lea    0xfa12(%rip),%rdi        # 391bd <str.6+0x1e9d>
   297ab:	48 8d 15 fe b4 01 00 	lea    0x1b4fe(%rip),%rdx        # 44cb0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1778>
   297b2:	be 30 00 00 00       	mov    $0x30,%esi
   297b7:	ff 15 1b c7 01 00    	callq  *0x1c71b(%rip)        # 45ed8 <_GLOBAL_OFFSET_TABLE_+0x550>
   297bd:	eb 9f                	jmp    2975e <gimli::read::abbrev::Abbreviations::insert+0x118e>
   297bf:	48 8d 3d b5 dc 00 00 	lea    0xdcb5(%rip),%rdi        # 3747b <str.6+0x15b>
   297c6:	48 8d 15 fb b4 01 00 	lea    0x1b4fb(%rip),%rdx        # 44cc8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1790>
   297cd:	be 20 00 00 00       	mov    $0x20,%esi
   297d2:	ff 15 00 c7 01 00    	callq  *0x1c700(%rip)        # 45ed8 <_GLOBAL_OFFSET_TABLE_+0x550>
   297d8:	eb 84                	jmp    2975e <gimli::read::abbrev::Abbreviations::insert+0x118e>
   297da:	48 89 c3             	mov    %rax,%rbx
   297dd:	4d 89 e7             	mov    %r12,%r15
   297e0:	eb 27                	jmp    29809 <gimli::read::abbrev::Abbreviations::insert+0x1239>
   297e2:	48 89 c3             	mov    %rax,%rbx
   297e5:	eb 22                	jmp    29809 <gimli::read::abbrev::Abbreviations::insert+0x1239>
   297e7:	48 89 c3             	mov    %rax,%rbx
   297ea:	4c 8d bc 24 40 02 00 	lea    0x240(%rsp),%r15
   297f1:	00 
   297f2:	eb 15                	jmp    29809 <gimli::read::abbrev::Abbreviations::insert+0x1239>
   297f4:	48 89 c3             	mov    %rax,%rbx
   297f7:	4c 8d bc 24 a0 00 00 	lea    0xa0(%rsp),%r15
   297fe:	00 
   297ff:	eb 08                	jmp    29809 <gimli::read::abbrev::Abbreviations::insert+0x1239>
   29801:	48 89 c3             	mov    %rax,%rbx
   29804:	4c 8d 7c 24 30       	lea    0x30(%rsp),%r15
   29809:	4c 89 ff             	mov    %r15,%rdi
   2980c:	e8 7f eb ff ff       	callq  28390 <core::ptr::drop_in_place>
   29811:	48 89 df             	mov    %rbx,%rdi
   29814:	e8 37 b8 fd ff       	callq  5050 <_Unwind_Resume@plt>
   29819:	0f 0b                	ud2    
   2981b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000029820 <gimli::read::abbrev::Abbreviation::new>:
   29820:	41 56                	push   %r14
   29822:	53                   	push   %rbx
   29823:	48 83 ec 68          	sub    $0x68,%rsp
   29827:	4c 89 c3             	mov    %r8,%rbx
   2982a:	48 89 34 24          	mov    %rsi,(%rsp)
   2982e:	48 85 f6             	test   %rsi,%rsi
   29831:	74 44                	je     29877 <gimli::read::abbrev::Abbreviation::new+0x57>
   29833:	48 89 f8             	mov    %rdi,%rax
   29836:	48 89 37             	mov    %rsi,(%rdi)
   29839:	66 89 57 68          	mov    %dx,0x68(%rdi)
   2983d:	88 4f 6a             	mov    %cl,0x6a(%rdi)
   29840:	0f 10 03             	movups (%rbx),%xmm0
   29843:	0f 10 4b 10          	movups 0x10(%rbx),%xmm1
   29847:	0f 10 53 20          	movups 0x20(%rbx),%xmm2
   2984b:	0f 10 5b 30          	movups 0x30(%rbx),%xmm3
   2984f:	0f 11 47 08          	movups %xmm0,0x8(%rdi)
   29853:	0f 11 4f 18          	movups %xmm1,0x18(%rdi)
   29857:	0f 11 57 28          	movups %xmm2,0x28(%rdi)
   2985b:	0f 11 5f 38          	movups %xmm3,0x38(%rdi)
   2985f:	0f 10 43 40          	movups 0x40(%rbx),%xmm0
   29863:	0f 11 47 48          	movups %xmm0,0x48(%rdi)
   29867:	0f 10 43 50          	movups 0x50(%rbx),%xmm0
   2986b:	0f 11 47 58          	movups %xmm0,0x58(%rdi)
   2986f:	48 83 c4 68          	add    $0x68,%rsp
   29873:	5b                   	pop    %rbx
   29874:	41 5e                	pop    %r14
   29876:	c3                   	retq   
   29877:	48 89 e0             	mov    %rsp,%rax
   2987a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   2987f:	48 8d 05 3a e2 00 00 	lea    0xe23a(%rip),%rax        # 37ac0 <str.6+0x7a0>
   29886:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   2988b:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   29890:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   29895:	48 8d 05 34 ea ff ff 	lea    -0x15cc(%rip),%rax        # 282d0 <<&T as core::fmt::Debug>::fmt>
   2989c:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   298a1:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
   298a6:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   298ab:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   298b0:	48 8d 05 29 b4 01 00 	lea    0x1b429(%rip),%rax        # 44ce0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x17a8>
   298b7:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   298bc:	48 c7 44 24 40 03 00 	movq   $0x3,0x40(%rsp)
   298c3:	00 00 
   298c5:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
   298cc:	00 00 
   298ce:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
   298d3:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   298d8:	48 c7 44 24 60 02 00 	movq   $0x2,0x60(%rsp)
   298df:	00 00 
   298e1:	48 8d 35 28 b4 01 00 	lea    0x1b428(%rip),%rsi        # 44d10 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x17d8>
   298e8:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
   298ed:	ff 15 55 c3 01 00    	callq  *0x1c355(%rip)        # 45c48 <_GLOBAL_OFFSET_TABLE_+0x2c0>
   298f3:	0f 0b                	ud2    
   298f5:	49 89 c6             	mov    %rax,%r14
   298f8:	48 89 df             	mov    %rbx,%rdi
   298fb:	e8 60 ea ff ff       	callq  28360 <core::ptr::drop_in_place>
   29900:	4c 89 f7             	mov    %r14,%rdi
   29903:	e8 48 b7 fd ff       	callq  5050 <_Unwind_Resume@plt>
   29908:	0f 0b                	ud2    
   2990a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000029910 <gimli::read::abbrev::Attributes::new>:
   29910:	48 89 f8             	mov    %rdi,%rax
   29913:	0f 57 c0             	xorps  %xmm0,%xmm0
   29916:	0f 11 47 50          	movups %xmm0,0x50(%rdi)
   2991a:	0f 11 47 40          	movups %xmm0,0x40(%rdi)
   2991e:	0f 11 47 30          	movups %xmm0,0x30(%rdi)
   29922:	0f 11 47 20          	movups %xmm0,0x20(%rdi)
   29926:	0f 11 47 10          	movups %xmm0,0x10(%rdi)
   2992a:	0f 11 07             	movups %xmm0,(%rdi)
   2992d:	c3                   	retq   
   2992e:	66 90                	xchg   %ax,%ax

0000000000029930 <gimli::read::abbrev::Attributes::push>:
   29930:	41 57                	push   %r15
   29932:	41 56                	push   %r14
   29934:	53                   	push   %rbx
   29935:	48 81 ec 80 00 00 00 	sub    $0x80,%rsp
   2993c:	49 89 f6             	mov    %rsi,%r14
   2993f:	48 89 fb             	mov    %rdi,%rbx
   29942:	83 3f 01             	cmpl   $0x1,(%rdi)
   29945:	75 40                	jne    29987 <gimli::read::abbrev::Attributes::push+0x57>
   29947:	41 0f 10 06          	movups (%r14),%xmm0
   2994b:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
   29950:	48 8b 43 18          	mov    0x18(%rbx),%rax
   29954:	48 3b 43 10          	cmp    0x10(%rbx),%rax
   29958:	75 12                	jne    2996c <gimli::read::abbrev::Attributes::push+0x3c>
   2995a:	48 8d 7b 08          	lea    0x8(%rbx),%rdi
   2995e:	be 01 00 00 00       	mov    $0x1,%esi
   29963:	e8 58 ea ff ff       	callq  283c0 <alloc::vec::Vec<T>::reserve>
   29968:	48 8b 43 18          	mov    0x18(%rbx),%rax
   2996c:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
   29970:	48 c1 e0 04          	shl    $0x4,%rax
   29974:	0f 28 44 24 40       	movaps 0x40(%rsp),%xmm0
   29979:	0f 11 04 01          	movups %xmm0,(%rcx,%rax,1)
   2997d:	48 83 43 18 01       	addq   $0x1,0x18(%rbx)
   29982:	e9 6c 01 00 00       	jmpq   29af3 <gimli::read::abbrev::Attributes::push+0x1c3>
   29987:	4c 8d 7b 08          	lea    0x8(%rbx),%r15
   2998b:	48 8b 7b 58          	mov    0x58(%rbx),%rdi
   2998f:	48 83 ff 05          	cmp    $0x5,%rdi
   29993:	0f 85 3c 01 00 00    	jne    29ad5 <gimli::read::abbrev::Attributes::push+0x1a5>
   29999:	bf 50 00 00 00       	mov    $0x50,%edi
   2999e:	be 08 00 00 00       	mov    $0x8,%esi
   299a3:	ff 15 d7 c1 01 00    	callq  *0x1c1d7(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   299a9:	48 85 c0             	test   %rax,%rax
   299ac:	0f 84 4e 01 00 00    	je     29b00 <gimli::read::abbrev::Attributes::push+0x1d0>
   299b2:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   299b7:	0f 28 05 42 f0 00 00 	movaps 0xf042(%rip),%xmm0        # 38a00 <str.6+0x16e0>
   299be:	0f 11 44 24 10       	movups %xmm0,0x10(%rsp)
   299c3:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   299c8:	be 05 00 00 00       	mov    $0x5,%esi
   299cd:	e8 ee e9 ff ff       	callq  283c0 <alloc::vec::Vec<T>::reserve>
   299d2:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   299d7:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   299dc:	48 89 c2             	mov    %rax,%rdx
   299df:	48 c1 e2 04          	shl    $0x4,%rdx
   299e3:	41 0f 10 47 40       	movups 0x40(%r15),%xmm0
   299e8:	0f 11 44 11 40       	movups %xmm0,0x40(%rcx,%rdx,1)
   299ed:	41 0f 10 07          	movups (%r15),%xmm0
   299f1:	41 0f 10 4f 10       	movups 0x10(%r15),%xmm1
   299f6:	41 0f 10 57 20       	movups 0x20(%r15),%xmm2
   299fb:	41 0f 10 5f 30       	movups 0x30(%r15),%xmm3
   29a00:	0f 11 5c 11 30       	movups %xmm3,0x30(%rcx,%rdx,1)
   29a05:	0f 11 54 11 20       	movups %xmm2,0x20(%rcx,%rdx,1)
   29a0a:	0f 11 4c 11 10       	movups %xmm1,0x10(%rcx,%rdx,1)
   29a0f:	0f 11 04 11          	movups %xmm0,(%rcx,%rdx,1)
   29a13:	48 83 c0 05          	add    $0x5,%rax
   29a17:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   29a1c:	41 0f 10 06          	movups (%r14),%xmm0
   29a20:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
   29a25:	48 3b 44 24 10       	cmp    0x10(%rsp),%rax
   29a2a:	75 19                	jne    29a45 <gimli::read::abbrev::Attributes::push+0x115>
   29a2c:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   29a31:	be 01 00 00 00       	mov    $0x1,%esi
   29a36:	e8 85 e9 ff ff       	callq  283c0 <alloc::vec::Vec<T>::reserve>
   29a3b:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   29a40:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   29a45:	48 89 c2             	mov    %rax,%rdx
   29a48:	48 c1 e2 04          	shl    $0x4,%rdx
   29a4c:	0f 28 44 24 40       	movaps 0x40(%rsp),%xmm0
   29a51:	0f 11 04 11          	movups %xmm0,(%rcx,%rdx,1)
   29a55:	48 83 c0 01          	add    $0x1,%rax
   29a59:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   29a5e:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   29a63:	0f 10 44 24 08       	movups 0x8(%rsp),%xmm0
   29a68:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   29a6d:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   29a71:	74 23                	je     29a96 <gimli::read::abbrev::Attributes::push+0x166>
   29a73:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   29a77:	48 85 f6             	test   %rsi,%rsi
   29a7a:	74 1a                	je     29a96 <gimli::read::abbrev::Attributes::push+0x166>
   29a7c:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   29a80:	48 85 ff             	test   %rdi,%rdi
   29a83:	74 11                	je     29a96 <gimli::read::abbrev::Attributes::push+0x166>
   29a85:	48 c1 e6 04          	shl    $0x4,%rsi
   29a89:	74 0b                	je     29a96 <gimli::read::abbrev::Attributes::push+0x166>
   29a8b:	ba 08 00 00 00       	mov    $0x8,%edx
   29a90:	ff 15 62 c1 01 00    	callq  *0x1c162(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   29a96:	48 c7 03 01 00 00 00 	movq   $0x1,(%rbx)
   29a9d:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   29aa2:	49 89 47 10          	mov    %rax,0x10(%r15)
   29aa6:	0f 28 44 24 20       	movaps 0x20(%rsp),%xmm0
   29aab:	41 0f 11 07          	movups %xmm0,(%r15)
   29aaf:	0f 10 44 24 40       	movups 0x40(%rsp),%xmm0
   29ab4:	0f 10 4c 24 50       	movups 0x50(%rsp),%xmm1
   29ab9:	0f 10 54 24 60       	movups 0x60(%rsp),%xmm2
   29abe:	0f 10 5c 24 70       	movups 0x70(%rsp),%xmm3
   29ac3:	0f 11 5b 50          	movups %xmm3,0x50(%rbx)
   29ac7:	0f 11 53 40          	movups %xmm2,0x40(%rbx)
   29acb:	0f 11 4b 30          	movups %xmm1,0x30(%rbx)
   29acf:	0f 11 43 20          	movups %xmm0,0x20(%rbx)
   29ad3:	eb 1e                	jmp    29af3 <gimli::read::abbrev::Attributes::push+0x1c3>
   29ad5:	41 0f 10 06          	movups (%r14),%xmm0
   29ad9:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
   29ade:	73 32                	jae    29b12 <gimli::read::abbrev::Attributes::push+0x1e2>
   29ae0:	48 c1 e7 04          	shl    $0x4,%rdi
   29ae4:	0f 28 44 24 40       	movaps 0x40(%rsp),%xmm0
   29ae9:	41 0f 11 04 3f       	movups %xmm0,(%r15,%rdi,1)
   29aee:	48 83 43 58 01       	addq   $0x1,0x58(%rbx)
   29af3:	48 81 c4 80 00 00 00 	add    $0x80,%rsp
   29afa:	5b                   	pop    %rbx
   29afb:	41 5e                	pop    %r14
   29afd:	41 5f                	pop    %r15
   29aff:	c3                   	retq   
   29b00:	bf 50 00 00 00       	mov    $0x50,%edi
   29b05:	be 08 00 00 00       	mov    $0x8,%esi
   29b0a:	ff 15 10 c0 01 00    	callq  *0x1c010(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   29b10:	0f 0b                	ud2    
   29b12:	48 8d 15 0f b2 01 00 	lea    0x1b20f(%rip),%rdx        # 44d28 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x17f0>
   29b19:	be 05 00 00 00       	mov    $0x5,%esi
   29b1e:	ff 15 6c c1 01 00    	callq  *0x1c16c(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   29b24:	0f 0b                	ud2    
   29b26:	eb 00                	jmp    29b28 <gimli::read::abbrev::Attributes::push+0x1f8>
   29b28:	48 89 c3             	mov    %rax,%rbx
   29b2b:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   29b30:	e8 fb e7 ff ff       	callq  28330 <core::ptr::drop_in_place>
   29b35:	48 89 df             	mov    %rbx,%rdi
   29b38:	e8 13 b5 fd ff       	callq  5050 <_Unwind_Resume@plt>
   29b3d:	0f 0b                	ud2    
   29b3f:	90                   	nop

0000000000029b40 <<gimli::read::abbrev::Attributes as core::ops::deref::Deref>::deref>:
   29b40:	50                   	push   %rax
   29b41:	83 3f 01             	cmpl   $0x1,(%rdi)
   29b44:	75 0a                	jne    29b50 <<gimli::read::abbrev::Attributes as core::ops::deref::Deref>::deref+0x10>
   29b46:	48 8b 47 08          	mov    0x8(%rdi),%rax
   29b4a:	48 8b 57 18          	mov    0x18(%rdi),%rdx
   29b4e:	59                   	pop    %rcx
   29b4f:	c3                   	retq   
   29b50:	48 8b 57 58          	mov    0x58(%rdi),%rdx
   29b54:	48 83 fa 06          	cmp    $0x6,%rdx
   29b58:	73 09                	jae    29b63 <<gimli::read::abbrev::Attributes as core::ops::deref::Deref>::deref+0x23>
   29b5a:	48 83 c7 08          	add    $0x8,%rdi
   29b5e:	48 89 f8             	mov    %rdi,%rax
   29b61:	59                   	pop    %rcx
   29b62:	c3                   	retq   
   29b63:	48 8d 05 d6 b1 01 00 	lea    0x1b1d6(%rip),%rax        # 44d40 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1808>
   29b6a:	be 05 00 00 00       	mov    $0x5,%esi
   29b6f:	48 89 d7             	mov    %rdx,%rdi
   29b72:	48 89 c2             	mov    %rax,%rdx
   29b75:	ff 15 ad be 01 00    	callq  *0x1bead(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   29b7b:	0f 0b                	ud2    
   29b7d:	0f 1f 00             	nopl   (%rax)

0000000000029b80 <gimli::read::line::LineRow::apply_line_advance>:
   29b80:	48 85 f6             	test   %rsi,%rsi
   29b83:	78 05                	js     29b8a <gimli::read::line::LineRow::apply_line_advance+0xa>
   29b85:	48 01 77 18          	add    %rsi,0x18(%rdi)
   29b89:	c3                   	retq   
   29b8a:	48 89 f1             	mov    %rsi,%rcx
   29b8d:	48 f7 d9             	neg    %rcx
   29b90:	48 8b 47 18          	mov    0x18(%rdi),%rax
   29b94:	48 39 c8             	cmp    %rcx,%rax
   29b97:	73 09                	jae    29ba2 <gimli::read::line::LineRow::apply_line_advance+0x22>
   29b99:	48 c7 47 18 00 00 00 	movq   $0x0,0x18(%rdi)
   29ba0:	00 
   29ba1:	c3                   	retq   
   29ba2:	48 01 f0             	add    %rsi,%rax
   29ba5:	48 89 47 18          	mov    %rax,0x18(%rdi)
   29ba9:	c3                   	retq   
   29baa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000029bb0 <gimli::read::unit::allow_section_offset>:
   29bb0:	31 c0                	xor    %eax,%eax
   29bb2:	83 c7 fe             	add    $0xfffffffe,%edi
   29bb5:	66 83 ff 77          	cmp    $0x77,%di
   29bb9:	77 15                	ja     29bd0 <gimli::read::unit::allow_section_offset+0x20>
   29bbb:	0f b7 cf             	movzwl %di,%ecx
   29bbe:	48 8d 15 8b f2 00 00 	lea    0xf28b(%rip),%rdx        # 38e50 <str.6+0x1b30>
   29bc5:	48 63 0c 8a          	movslq (%rdx,%rcx,4),%rcx
   29bc9:	48 01 d1             	add    %rdx,%rcx
   29bcc:	ff e1                	jmpq   *%rcx
   29bce:	b0 01                	mov    $0x1,%al
   29bd0:	c3                   	retq   
   29bd1:	81 e6 fe ff 00 00    	and    $0xfffe,%esi
   29bd7:	66 83 fe 02          	cmp    $0x2,%si
   29bdb:	0f 94 c0             	sete   %al
   29bde:	c3                   	retq   
   29bdf:	90                   	nop

0000000000029be0 <core::ptr::drop_in_place>:
   29be0:	c3                   	retq   
   29be1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   29be8:	00 00 00 
   29beb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000029bf0 <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match>:
   29bf0:	55                   	push   %rbp
   29bf1:	41 57                	push   %r15
   29bf3:	41 56                	push   %r14
   29bf5:	41 55                	push   %r13
   29bf7:	41 54                	push   %r12
   29bf9:	53                   	push   %rbx
   29bfa:	48 83 ec 18          	sub    $0x18,%rsp
   29bfe:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
   29c03:	48 8b 6e 10          	mov    0x10(%rsi),%rbp
   29c07:	48 8b 46 18          	mov    0x18(%rsi),%rax
   29c0b:	45 31 ed             	xor    %r13d,%r13d
   29c0e:	48 89 c2             	mov    %rax,%rdx
   29c11:	48 29 ea             	sub    %rbp,%rdx
   29c14:	0f 82 d6 00 00 00    	jb     29cf0 <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match+0x100>
   29c1a:	48 89 f3             	mov    %rsi,%rbx
   29c1d:	48 39 46 08          	cmp    %rax,0x8(%rsi)
   29c21:	0f 82 c9 00 00 00    	jb     29cf0 <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match+0x100>
   29c27:	48 8d 4b 2c          	lea    0x2c(%rbx),%rcx
   29c2b:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   29c30:	4c 8b 63 20          	mov    0x20(%rbx),%r12
   29c34:	45 31 ed             	xor    %r13d,%r13d
   29c37:	48 8b 33             	mov    (%rbx),%rsi
   29c3a:	48 01 ee             	add    %rbp,%rsi
   29c3d:	41 8a 4c 1c 2b       	mov    0x2b(%r12,%rbx,1),%cl
   29c42:	48 83 fa 0f          	cmp    $0xf,%rdx
   29c46:	77 28                	ja     29c70 <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match+0x80>
   29c48:	48 85 d2             	test   %rdx,%rdx
   29c4b:	0f 84 98 00 00 00    	je     29ce9 <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match+0xf9>
   29c51:	48 89 c7             	mov    %rax,%rdi
   29c54:	48 29 ef             	sub    %rbp,%rdi
   29c57:	31 d2                	xor    %edx,%edx
   29c59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   29c60:	38 0c 16             	cmp    %cl,(%rsi,%rdx,1)
   29c63:	74 22                	je     29c87 <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match+0x97>
   29c65:	48 83 c2 01          	add    $0x1,%rdx
   29c69:	48 39 d7             	cmp    %rdx,%rdi
   29c6c:	75 f2                	jne    29c60 <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match+0x70>
   29c6e:	eb 79                	jmp    29ce9 <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match+0xf9>
   29c70:	0f b6 f9             	movzbl %cl,%edi
   29c73:	ff 15 ff c0 01 00    	callq  *0x1c0ff(%rip)        # 45d78 <_GLOBAL_OFFSET_TABLE_+0x3f0>
   29c79:	48 83 f8 01          	cmp    $0x1,%rax
   29c7d:	75 66                	jne    29ce5 <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match+0xf5>
   29c7f:	48 8b 6b 10          	mov    0x10(%rbx),%rbp
   29c83:	4c 8b 63 20          	mov    0x20(%rbx),%r12
   29c87:	48 01 d5             	add    %rdx,%rbp
   29c8a:	48 83 c5 01          	add    $0x1,%rbp
   29c8e:	48 89 6b 10          	mov    %rbp,0x10(%rbx)
   29c92:	49 89 ee             	mov    %rbp,%r14
   29c95:	4d 29 e6             	sub    %r12,%r14
   29c98:	73 06                	jae    29ca0 <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match+0xb0>
   29c9a:	4c 8b 7b 08          	mov    0x8(%rbx),%r15
   29c9e:	eb 2e                	jmp    29cce <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match+0xde>
   29ca0:	4c 8b 7b 08          	mov    0x8(%rbx),%r15
   29ca4:	49 39 ef             	cmp    %rbp,%r15
   29ca7:	72 25                	jb     29cce <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match+0xde>
   29ca9:	49 83 fc 05          	cmp    $0x5,%r12
   29cad:	73 6d                	jae    29d1c <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match+0x12c>
   29caf:	48 8b 3b             	mov    (%rbx),%rdi
   29cb2:	4c 01 f7             	add    %r14,%rdi
   29cb5:	48 3b 7c 24 08       	cmp    0x8(%rsp),%rdi
   29cba:	74 4b                	je     29d07 <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match+0x117>
   29cbc:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   29cc1:	4c 89 e2             	mov    %r12,%rdx
   29cc4:	ff 15 ee c0 01 00    	callq  *0x1c0ee(%rip)        # 45db8 <bcmp@GLIBC_2.2.5>
   29cca:	85 c0                	test   %eax,%eax
   29ccc:	74 39                	je     29d07 <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match+0x117>
   29cce:	48 8b 43 18          	mov    0x18(%rbx),%rax
   29cd2:	48 89 c2             	mov    %rax,%rdx
   29cd5:	48 29 ea             	sub    %rbp,%rdx
   29cd8:	72 16                	jb     29cf0 <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match+0x100>
   29cda:	49 39 c7             	cmp    %rax,%r15
   29cdd:	0f 83 54 ff ff ff    	jae    29c37 <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match+0x47>
   29ce3:	eb 0b                	jmp    29cf0 <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match+0x100>
   29ce5:	48 8b 43 18          	mov    0x18(%rbx),%rax
   29ce9:	48 89 43 10          	mov    %rax,0x10(%rbx)
   29ced:	45 31 ed             	xor    %r13d,%r13d
   29cf0:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   29cf5:	4c 89 28             	mov    %r13,(%rax)
   29cf8:	48 83 c4 18          	add    $0x18,%rsp
   29cfc:	5b                   	pop    %rbx
   29cfd:	41 5c                	pop    %r12
   29cff:	41 5d                	pop    %r13
   29d01:	41 5e                	pop    %r14
   29d03:	41 5f                	pop    %r15
   29d05:	5d                   	pop    %rbp
   29d06:	c3                   	retq   
   29d07:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   29d0c:	4c 89 70 08          	mov    %r14,0x8(%rax)
   29d10:	48 89 68 10          	mov    %rbp,0x10(%rax)
   29d14:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   29d1a:	eb d4                	jmp    29cf0 <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match+0x100>
   29d1c:	48 8d 15 b5 b0 01 00 	lea    0x1b0b5(%rip),%rdx        # 44dd8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x18a0>
   29d23:	be 04 00 00 00       	mov    $0x4,%esi
   29d28:	4c 89 e7             	mov    %r12,%rdi
   29d2b:	ff 15 f7 bc 01 00    	callq  *0x1bcf7(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   29d31:	0f 0b                	ud2    
   29d33:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   29d3a:	00 00 00 
   29d3d:	0f 1f 00             	nopl   (%rax)

0000000000029d40 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt>:
   29d40:	55                   	push   %rbp
   29d41:	41 57                	push   %r15
   29d43:	41 56                	push   %r14
   29d45:	41 55                	push   %r13
   29d47:	41 54                	push   %r12
   29d49:	53                   	push   %rbx
   29d4a:	48 83 ec 78          	sub    $0x78,%rsp
   29d4e:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   29d53:	4c 8b 37             	mov    (%rdi),%r14
   29d56:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   29d5a:	48 8b 47 10          	mov    0x10(%rdi),%rax
   29d5e:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   29d63:	31 c0                	xor    %eax,%eax
   29d65:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   29d6a:	e9 1f 00 00 00       	jmpq   29d8e <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x4e>
   29d6f:	90                   	nop
   29d70:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   29d75:	4c 89 fe             	mov    %r15,%rsi
   29d78:	4c 89 e2             	mov    %r12,%rdx
   29d7b:	ff 15 bf bc 01 00    	callq  *0x1bcbf(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   29d81:	84 c0                	test   %al,%al
   29d83:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
   29d88:	0f 85 93 0a 00 00    	jne    2a821 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xae1>
   29d8e:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
   29d93:	4c 3b 64 24 20       	cmp    0x20(%rsp),%r12
   29d98:	0f 84 7f 0a 00 00    	je     2a81d <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xadd>
   29d9e:	48 85 f6             	test   %rsi,%rsi
   29da1:	0f 84 8b 0a 00 00    	je     2a832 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xaf2>
   29da7:	49 8d 44 24 01       	lea    0x1(%r12),%rax
   29dac:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   29db1:	4d 8d 04 36          	lea    (%r14,%rsi,1),%r8
   29db5:	4c 8d 4e ff          	lea    -0x1(%rsi),%r9
   29db9:	31 ed                	xor    %ebp,%ebp
   29dbb:	41 0f b6 3c 2e       	movzbl (%r14,%rbp,1),%edi
   29dc0:	40 84 ff             	test   %dil,%dil
   29dc3:	0f 89 c7 00 00 00    	jns    29e90 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x150>
   29dc9:	eb 2c                	jmp    29df7 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xb7>
   29dcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   29dd0:	49 39 e9             	cmp    %rbp,%r9
   29dd3:	0f 84 59 0a 00 00    	je     2a832 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xaf2>
   29dd9:	41 80 7c 2e 01 bf    	cmpb   $0xbf,0x1(%r14,%rbp,1)
   29ddf:	0f 8e 68 0a 00 00    	jle    2a84d <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xb0d>
   29de5:	48 83 c5 01          	add    $0x1,%rbp
   29de9:	41 0f b6 3c 2e       	movzbl (%r14,%rbp,1),%edi
   29dee:	40 84 ff             	test   %dil,%dil
   29df1:	0f 89 99 00 00 00    	jns    29e90 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x150>
   29df7:	31 d2                	xor    %edx,%edx
   29df9:	4c 89 c0             	mov    %r8,%rax
   29dfc:	49 39 e9             	cmp    %rbp,%r9
   29dff:	74 11                	je     29e12 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xd2>
   29e01:	49 8d 04 2e          	lea    (%r14,%rbp,1),%rax
   29e05:	48 83 c0 02          	add    $0x2,%rax
   29e09:	41 0f b6 54 2e 01    	movzbl 0x1(%r14,%rbp,1),%edx
   29e0f:	83 e2 3f             	and    $0x3f,%edx
   29e12:	89 f9                	mov    %edi,%ecx
   29e14:	83 e1 1f             	and    $0x1f,%ecx
   29e17:	40 80 ff df          	cmp    $0xdf,%dil
   29e1b:	76 33                	jbe    29e50 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x110>
   29e1d:	4c 39 c0             	cmp    %r8,%rax
   29e20:	74 35                	je     29e57 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x117>
   29e22:	0f b6 18             	movzbl (%rax),%ebx
   29e25:	48 83 c0 01          	add    $0x1,%rax
   29e29:	83 e3 3f             	and    $0x3f,%ebx
   29e2c:	c1 e2 06             	shl    $0x6,%edx
   29e2f:	09 da                	or     %ebx,%edx
   29e31:	40 80 ff f0          	cmp    $0xf0,%dil
   29e35:	72 30                	jb     29e67 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x127>
   29e37:	4c 39 c0             	cmp    %r8,%rax
   29e3a:	74 32                	je     29e6e <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x12e>
   29e3c:	0f b6 00             	movzbl (%rax),%eax
   29e3f:	83 e0 3f             	and    $0x3f,%eax
   29e42:	eb 2c                	jmp    29e70 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x130>
   29e44:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   29e4b:	00 00 00 
   29e4e:	66 90                	xchg   %ax,%ax
   29e50:	c1 e1 06             	shl    $0x6,%ecx
   29e53:	09 ca                	or     %ecx,%edx
   29e55:	eb 3b                	jmp    29e92 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x152>
   29e57:	31 db                	xor    %ebx,%ebx
   29e59:	4c 89 c0             	mov    %r8,%rax
   29e5c:	c1 e2 06             	shl    $0x6,%edx
   29e5f:	09 da                	or     %ebx,%edx
   29e61:	40 80 ff f0          	cmp    $0xf0,%dil
   29e65:	73 d0                	jae    29e37 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xf7>
   29e67:	c1 e1 0c             	shl    $0xc,%ecx
   29e6a:	09 ca                	or     %ecx,%edx
   29e6c:	eb 24                	jmp    29e92 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x152>
   29e6e:	31 c0                	xor    %eax,%eax
   29e70:	83 e1 07             	and    $0x7,%ecx
   29e73:	c1 e1 12             	shl    $0x12,%ecx
   29e76:	c1 e2 06             	shl    $0x6,%edx
   29e79:	09 ca                	or     %ecx,%edx
   29e7b:	09 c2                	or     %eax,%edx
   29e7d:	81 fa 00 00 11 00    	cmp    $0x110000,%edx
   29e83:	75 0d                	jne    29e92 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x152>
   29e85:	e9 a8 09 00 00       	jmpq   2a832 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xaf2>
   29e8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   29e90:	89 fa                	mov    %edi,%edx
   29e92:	83 c2 d0             	add    $0xffffffd0,%edx
   29e95:	83 fa 0a             	cmp    $0xa,%edx
   29e98:	0f 82 32 ff ff ff    	jb     29dd0 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x90>
   29e9e:	49 89 f7             	mov    %rsi,%r15
   29ea1:	49 29 ef             	sub    %rbp,%r15
   29ea4:	48 85 ed             	test   %rbp,%rbp
   29ea7:	74 14                	je     29ebd <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x17d>
   29ea9:	4c 39 fe             	cmp    %r15,%rsi
   29eac:	0f 82 64 0a 00 00    	jb     2a916 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xbd6>
   29eb2:	41 80 3c 2e bf       	cmpb   $0xbf,(%r14,%rbp,1)
   29eb7:	0f 8e 59 0a 00 00    	jle    2a916 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xbd6>
   29ebd:	48 89 f3             	mov    %rsi,%rbx
   29ec0:	4c 89 f7             	mov    %r14,%rdi
   29ec3:	48 89 ee             	mov    %rbp,%rsi
   29ec6:	ff 15 84 bf 01 00    	callq  *0x1bf84(%rip)        # 45e50 <_GLOBAL_OFFSET_TABLE_+0x4c8>
   29ecc:	3c 01                	cmp    $0x1,%al
   29ece:	0f 84 71 0a 00 00    	je     2a945 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xc05>
   29ed4:	49 89 d5             	mov    %rdx,%r13
   29ed7:	49 8d 3c 2e          	lea    (%r14,%rbp,1),%rdi
   29edb:	48 29 d3             	sub    %rdx,%rbx
   29ede:	48 85 d2             	test   %rdx,%rdx
   29ee1:	48 89 5c 24 28       	mov    %rbx,0x28(%rsp)
   29ee6:	74 28                	je     29f10 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x1d0>
   29ee8:	48 39 eb             	cmp    %rbp,%rbx
   29eeb:	74 23                	je     29f10 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x1d0>
   29eed:	4d 39 ef             	cmp    %r13,%r15
   29ef0:	0f 86 37 0a 00 00    	jbe    2a92d <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xbed>
   29ef6:	4b 8d 1c 2e          	lea    (%r14,%r13,1),%rbx
   29efa:	80 7c 1d 00 bf       	cmpb   $0xbf,0x0(%rbp,%rbx,1)
   29eff:	0f 8e 28 0a 00 00    	jle    2a92d <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xbed>
   29f05:	49 89 ff             	mov    %rdi,%r15
   29f08:	e9 0a 00 00 00       	jmpq   29f17 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x1d7>
   29f0d:	0f 1f 00             	nopl   (%rax)
   29f10:	49 89 ff             	mov    %rdi,%r15
   29f13:	4b 8d 1c 2e          	lea    (%r14,%r13,1),%rbx
   29f17:	48 01 eb             	add    %rbp,%rbx
   29f1a:	49 8d 04 2e          	lea    (%r14,%rbp,1),%rax
   29f1e:	48 83 c0 01          	add    $0x1,%rax
   29f22:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   29f27:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   29f2c:	ff 15 16 bb 01 00    	callq  *0x1bb16(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xc0>
   29f32:	4d 85 ed             	test   %r13,%r13
   29f35:	0f 84 45 01 00 00    	je     2a080 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x340>
   29f3b:	84 c0                	test   %al,%al
   29f3d:	0f 84 3d 01 00 00    	je     2a080 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x340>
   29f43:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   29f48:	48 3b 44 24 20       	cmp    0x20(%rsp),%rax
   29f4d:	0f 85 2d 01 00 00    	jne    2a080 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x340>
   29f53:	41 80 3c 2e 68       	cmpb   $0x68,(%r14,%rbp,1)
   29f58:	0f 85 22 01 00 00    	jne    2a080 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x340>
   29f5e:	49 83 fd 01          	cmp    $0x1,%r13
   29f62:	0f 84 b5 08 00 00    	je     2a81d <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xadd>
   29f68:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   29f6d:	8a 17                	mov    (%rdi),%dl
   29f6f:	80 fa c0             	cmp    $0xc0,%dl
   29f72:	0f 8c f8 09 00 00    	jl     2a970 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xc30>
   29f78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   29f7f:	00 
   29f80:	48 8d 77 01          	lea    0x1(%rdi),%rsi
   29f84:	84 d2                	test   %dl,%dl
   29f86:	78 18                	js     29fa0 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x260>
   29f88:	0f b6 ca             	movzbl %dl,%ecx
   29f8b:	48 89 f7             	mov    %rsi,%rdi
   29f8e:	e9 9d 00 00 00       	jmpq   2a030 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x2f0>
   29f93:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   29f9a:	00 00 00 
   29f9d:	0f 1f 00             	nopl   (%rax)
   29fa0:	89 d0                	mov    %edx,%eax
   29fa2:	24 1f                	and    $0x1f,%al
   29fa4:	48 39 de             	cmp    %rbx,%rsi
   29fa7:	74 3d                	je     29fe6 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x2a6>
   29fa9:	0f b6 4f 01          	movzbl 0x1(%rdi),%ecx
   29fad:	48 83 c7 02          	add    $0x2,%rdi
   29fb1:	83 e1 3f             	and    $0x3f,%ecx
   29fb4:	0f b6 f0             	movzbl %al,%esi
   29fb7:	80 fa df             	cmp    $0xdf,%dl
   29fba:	76 37                	jbe    29ff3 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x2b3>
   29fbc:	48 39 df             	cmp    %rbx,%rdi
   29fbf:	74 39                	je     29ffa <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x2ba>
   29fc1:	0f b6 07             	movzbl (%rdi),%eax
   29fc4:	48 83 c7 01          	add    $0x1,%rdi
   29fc8:	83 e0 3f             	and    $0x3f,%eax
   29fcb:	c1 e1 06             	shl    $0x6,%ecx
   29fce:	09 c1                	or     %eax,%ecx
   29fd0:	80 fa f0             	cmp    $0xf0,%dl
   29fd3:	72 34                	jb     2a009 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x2c9>
   29fd5:	48 39 df             	cmp    %rbx,%rdi
   29fd8:	74 36                	je     2a010 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x2d0>
   29fda:	0f b6 17             	movzbl (%rdi),%edx
   29fdd:	48 83 c7 01          	add    $0x1,%rdi
   29fe1:	83 e2 3f             	and    $0x3f,%edx
   29fe4:	eb 2f                	jmp    2a015 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x2d5>
   29fe6:	31 c9                	xor    %ecx,%ecx
   29fe8:	48 89 df             	mov    %rbx,%rdi
   29feb:	0f b6 f0             	movzbl %al,%esi
   29fee:	80 fa df             	cmp    $0xdf,%dl
   29ff1:	77 c9                	ja     29fbc <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x27c>
   29ff3:	c1 e6 06             	shl    $0x6,%esi
   29ff6:	09 f1                	or     %esi,%ecx
   29ff8:	eb 36                	jmp    2a030 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x2f0>
   29ffa:	31 c0                	xor    %eax,%eax
   29ffc:	48 89 df             	mov    %rbx,%rdi
   29fff:	c1 e1 06             	shl    $0x6,%ecx
   2a002:	09 c1                	or     %eax,%ecx
   2a004:	80 fa f0             	cmp    $0xf0,%dl
   2a007:	73 cc                	jae    29fd5 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x295>
   2a009:	c1 e6 0c             	shl    $0xc,%esi
   2a00c:	09 f1                	or     %esi,%ecx
   2a00e:	eb 20                	jmp    2a030 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x2f0>
   2a010:	31 d2                	xor    %edx,%edx
   2a012:	48 89 df             	mov    %rbx,%rdi
   2a015:	83 e6 07             	and    $0x7,%esi
   2a018:	c1 e6 12             	shl    $0x12,%esi
   2a01b:	c1 e1 06             	shl    $0x6,%ecx
   2a01e:	09 f1                	or     %esi,%ecx
   2a020:	09 d1                	or     %edx,%ecx
   2a022:	81 f9 00 00 11 00    	cmp    $0x110000,%ecx
   2a028:	0f 84 ef 07 00 00    	je     2a81d <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xadd>
   2a02e:	66 90                	xchg   %ax,%ax
   2a030:	8d 41 d0             	lea    -0x30(%rcx),%eax
   2a033:	83 f8 0a             	cmp    $0xa,%eax
   2a036:	72 21                	jb     2a059 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x319>
   2a038:	8d 51 9f             	lea    -0x61(%rcx),%edx
   2a03b:	b8 a9 ff ff ff       	mov    $0xffffffa9,%eax
   2a040:	83 fa 1a             	cmp    $0x1a,%edx
   2a043:	72 0d                	jb     2a052 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x312>
   2a045:	8d 51 bf             	lea    -0x41(%rcx),%edx
   2a048:	b8 c9 ff ff ff       	mov    $0xffffffc9,%eax
   2a04d:	83 fa 19             	cmp    $0x19,%edx
   2a050:	77 2e                	ja     2a080 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x340>
   2a052:	01 c1                	add    %eax,%ecx
   2a054:	83 f9 0f             	cmp    $0xf,%ecx
   2a057:	77 27                	ja     2a080 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x340>
   2a059:	48 39 df             	cmp    %rbx,%rdi
   2a05c:	0f 84 bb 07 00 00    	je     2a81d <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xadd>
   2a062:	8a 17                	mov    (%rdi),%dl
   2a064:	48 8d 77 01          	lea    0x1(%rdi),%rsi
   2a068:	84 d2                	test   %dl,%dl
   2a06a:	0f 89 18 ff ff ff    	jns    29f88 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x248>
   2a070:	e9 2b ff ff ff       	jmpq   29fa0 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x260>
   2a075:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2a07c:	00 00 00 
   2a07f:	90                   	nop
   2a080:	4d 85 e4             	test   %r12,%r12
   2a083:	74 1f                	je     2a0a4 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x364>
   2a085:	ba 02 00 00 00       	mov    $0x2,%edx
   2a08a:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   2a08f:	48 8d 35 21 f8 00 00 	lea    0xf821(%rip),%rsi        # 398b7 <str.6+0x2597>
   2a096:	ff 15 a4 b9 01 00    	callq  *0x1b9a4(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2a09c:	84 c0                	test   %al,%al
   2a09e:	0f 85 7d 07 00 00    	jne    2a821 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xae1>
   2a0a4:	49 83 fd 02          	cmp    $0x2,%r13
   2a0a8:	73 06                	jae    2a0b0 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x370>
   2a0aa:	4c 89 f9             	mov    %r15,%rcx
   2a0ad:	eb 39                	jmp    2a0e8 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x3a8>
   2a0af:	90                   	nop
   2a0b0:	48 8d 05 02 f8 00 00 	lea    0xf802(%rip),%rax        # 398b9 <str.6+0x2599>
   2a0b7:	4c 29 f0             	sub    %r14,%rax
   2a0ba:	48 39 e8             	cmp    %rbp,%rax
   2a0bd:	4c 89 f9             	mov    %r15,%rcx
   2a0c0:	74 0c                	je     2a0ce <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x38e>
   2a0c2:	41 0f b7 04 2e       	movzwl (%r14,%rbp,1),%eax
   2a0c7:	3d 5f 24 00 00       	cmp    $0x245f,%eax
   2a0cc:	75 1a                	jne    2a0e8 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x3a8>
   2a0ce:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   2a0d3:	80 38 bf             	cmpb   $0xbf,(%rax)
   2a0d6:	0f 8e a5 08 00 00    	jle    2a981 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xc41>
   2a0dc:	49 83 c5 ff          	add    $0xffffffffffffffff,%r13
   2a0e0:	49 8d 0c 2e          	lea    (%r14,%rbp,1),%rcx
   2a0e4:	48 83 c1 01          	add    $0x1,%rcx
   2a0e8:	48 29 6c 24 28       	sub    %rbp,0x28(%rsp)
   2a0ed:	49 89 cf             	mov    %rcx,%r15
   2a0f0:	4d 89 ec             	mov    %r13,%r12
   2a0f3:	4d 85 ed             	test   %r13,%r13
   2a0f6:	0f 84 94 01 00 00    	je     2a290 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x550>
   2a0fc:	41 80 3f 2e          	cmpb   $0x2e,(%r15)
   2a100:	75 6e                	jne    2a170 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x430>
   2a102:	49 8d 6f 01          	lea    0x1(%r15),%rbp
   2a106:	49 83 fc 01          	cmp    $0x1,%r12
   2a10a:	0f 84 d7 02 00 00    	je     2a3e7 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x6a7>
   2a110:	80 7d 00 bf          	cmpb   $0xbf,0x0(%rbp)
   2a114:	0f 8e 53 07 00 00    	jle    2a86d <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xb2d>
   2a11a:	41 0f b6 57 01       	movzbl 0x1(%r15),%edx
   2a11f:	84 d2                	test   %dl,%dl
   2a121:	0f 88 ed 02 00 00    	js     2a414 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x6d4>
   2a127:	89 d0                	mov    %edx,%eax
   2a129:	83 f8 2e             	cmp    $0x2e,%eax
   2a12c:	0f 85 f2 05 00 00    	jne    2a724 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x9e4>
   2a132:	ba 02 00 00 00       	mov    $0x2,%edx
   2a137:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   2a13c:	48 8d 35 74 f7 00 00 	lea    0xf774(%rip),%rsi        # 398b7 <str.6+0x2597>
   2a143:	ff 15 f7 b8 01 00    	callq  *0x1b8f7(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2a149:	84 c0                	test   %al,%al
   2a14b:	0f 85 d0 06 00 00    	jne    2a821 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xae1>
   2a151:	49 8d 4f 02          	lea    0x2(%r15),%rcx
   2a155:	49 83 fc 02          	cmp    $0x2,%r12
   2a159:	74 09                	je     2a164 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x424>
   2a15b:	80 39 bf             	cmpb   $0xbf,(%rcx)
   2a15e:	0f 8e 15 07 00 00    	jle    2a879 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xb39>
   2a164:	49 83 c4 fe          	add    $0xfffffffffffffffe,%r12
   2a168:	4d 89 e5             	mov    %r12,%r13
   2a16b:	e9 7d ff ff ff       	jmpq   2a0ed <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x3ad>
   2a170:	41 80 3f 24          	cmpb   $0x24,(%r15)
   2a174:	0f 85 16 01 00 00    	jne    2a290 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x550>
   2a17a:	49 89 de             	mov    %rbx,%r14
   2a17d:	49 83 fc 01          	cmp    $0x1,%r12
   2a181:	74 0b                	je     2a18e <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x44e>
   2a183:	41 80 7f 01 bf       	cmpb   $0xbf,0x1(%r15)
   2a188:	0f 8e f9 06 00 00    	jle    2a887 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xb47>
   2a18e:	49 8d 5f 01          	lea    0x1(%r15),%rbx
   2a192:	49 8d 44 24 ff       	lea    -0x1(%r12),%rax
   2a197:	48 89 5c 24 30       	mov    %rbx,0x30(%rsp)
   2a19c:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   2a1a1:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   2a1a8:	00 00 
   2a1aa:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   2a1af:	48 b8 24 00 00 00 24 	movabs $0x2400000024,%rax
   2a1b6:	00 00 00 
   2a1b9:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   2a1be:	48 c7 44 24 50 01 00 	movq   $0x1,0x50(%rsp)
   2a1c5:	00 00 
   2a1c7:	48 8d 7c 24 60       	lea    0x60(%rsp),%rdi
   2a1cc:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
   2a1d1:	e8 1a fa ff ff       	callq  29bf0 <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match>
   2a1d6:	48 83 7c 24 60 01    	cmpq   $0x1,0x60(%rsp)
   2a1dc:	0f 85 8e fb ff ff    	jne    29d70 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x30>
   2a1e2:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   2a1e7:	48 89 f1             	mov    %rsi,%rcx
   2a1ea:	48 ff c1             	inc    %rcx
   2a1ed:	0f 84 9d 06 00 00    	je     2a890 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xb50>
   2a1f3:	49 83 fc 01          	cmp    $0x1,%r12
   2a1f7:	74 09                	je     2a202 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x4c2>
   2a1f9:	80 3b bf             	cmpb   $0xbf,(%rbx)
   2a1fc:	0f 8e 8e 06 00 00    	jle    2a890 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xb50>
   2a202:	49 39 cc             	cmp    %rcx,%r12
   2a205:	74 11                	je     2a218 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x4d8>
   2a207:	0f 86 83 06 00 00    	jbe    2a890 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xb50>
   2a20d:	41 80 3c 0f bf       	cmpb   $0xbf,(%r15,%rcx,1)
   2a212:	0f 8e 78 06 00 00    	jle    2a890 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xb50>
   2a218:	48 89 f2             	mov    %rsi,%rdx
   2a21b:	48 83 c2 02          	add    $0x2,%rdx
   2a21f:	74 16                	je     2a237 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x4f7>
   2a221:	49 39 d4             	cmp    %rdx,%r12
   2a224:	74 11                	je     2a237 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x4f7>
   2a226:	0f 86 7e 06 00 00    	jbe    2a8aa <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xb6a>
   2a22c:	41 80 3c 17 bf       	cmpb   $0xbf,(%r15,%rdx,1)
   2a231:	0f 8e 73 06 00 00    	jle    2a8aa <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xb6a>
   2a237:	49 8d 04 17          	lea    (%r15,%rdx,1),%rax
   2a23b:	4d 89 e5             	mov    %r12,%r13
   2a23e:	49 29 d5             	sub    %rdx,%r13
   2a241:	48 83 fe 01          	cmp    $0x1,%rsi
   2a245:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   2a24a:	0f 84 6e 03 00 00    	je     2a5be <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x87e>
   2a250:	48 83 fe 02          	cmp    $0x2,%rsi
   2a254:	0f 84 1b 02 00 00    	je     2a475 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x735>
   2a25a:	48 85 f6             	test   %rsi,%rsi
   2a25d:	0f 84 0d fb ff ff    	je     29d70 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x30>
   2a263:	80 3b 75             	cmpb   $0x75,(%rbx)
   2a266:	0f 85 04 fb ff ff    	jne    29d70 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x30>
   2a26c:	48 83 fe 02          	cmp    $0x2,%rsi
   2a270:	0f 82 3d 06 00 00    	jb     2a8b3 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xb73>
   2a276:	41 80 7f 02 bf       	cmpb   $0xbf,0x2(%r15)
   2a27b:	0f 8f 6f 03 00 00    	jg     2a5f0 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x8b0>
   2a281:	e9 2d 06 00 00       	jmpq   2a8b3 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xb73>
   2a286:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2a28d:	00 00 00 
   2a290:	49 89 de             	mov    %rbx,%r14
   2a293:	4f 8d 04 27          	lea    (%r15,%r12,1),%r8
   2a297:	31 c0                	xor    %eax,%eax
   2a299:	4c 89 f9             	mov    %r15,%rcx
   2a29c:	0f 1f 40 00          	nopl   0x0(%rax)
   2a2a0:	49 39 c8             	cmp    %rcx,%r8
   2a2a3:	0f 84 c7 fa ff ff    	je     29d70 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x30>
   2a2a9:	48 89 c3             	mov    %rax,%rbx
   2a2ac:	48 8d 51 01          	lea    0x1(%rcx),%rdx
   2a2b0:	0f b6 39             	movzbl (%rcx),%edi
   2a2b3:	40 84 ff             	test   %dil,%dil
   2a2b6:	78 08                	js     2a2c0 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x580>
   2a2b8:	89 fe                	mov    %edi,%esi
   2a2ba:	e9 a1 00 00 00       	jmpq   2a360 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x620>
   2a2bf:	90                   	nop
   2a2c0:	4c 39 c2             	cmp    %r8,%rdx
   2a2c3:	74 4d                	je     2a312 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x5d2>
   2a2c5:	48 8d 51 02          	lea    0x2(%rcx),%rdx
   2a2c9:	0f b6 71 01          	movzbl 0x1(%rcx),%esi
   2a2cd:	83 e6 3f             	and    $0x3f,%esi
   2a2d0:	48 89 d0             	mov    %rdx,%rax
   2a2d3:	89 fd                	mov    %edi,%ebp
   2a2d5:	83 e5 1f             	and    $0x1f,%ebp
   2a2d8:	40 80 ff df          	cmp    $0xdf,%dil
   2a2dc:	76 44                	jbe    2a322 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x5e2>
   2a2de:	4c 39 c0             	cmp    %r8,%rax
   2a2e1:	74 46                	je     2a329 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x5e9>
   2a2e3:	44 0f b6 08          	movzbl (%rax),%r9d
   2a2e7:	48 83 c0 01          	add    $0x1,%rax
   2a2eb:	41 83 e1 3f          	and    $0x3f,%r9d
   2a2ef:	48 89 c2             	mov    %rax,%rdx
   2a2f2:	c1 e6 06             	shl    $0x6,%esi
   2a2f5:	44 09 ce             	or     %r9d,%esi
   2a2f8:	40 80 ff f0          	cmp    $0xf0,%dil
   2a2fc:	72 3d                	jb     2a33b <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x5fb>
   2a2fe:	4c 39 c0             	cmp    %r8,%rax
   2a301:	74 3f                	je     2a342 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x602>
   2a303:	0f b6 38             	movzbl (%rax),%edi
   2a306:	48 83 c0 01          	add    $0x1,%rax
   2a30a:	83 e7 3f             	and    $0x3f,%edi
   2a30d:	48 89 c2             	mov    %rax,%rdx
   2a310:	eb 32                	jmp    2a344 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x604>
   2a312:	31 f6                	xor    %esi,%esi
   2a314:	4c 89 c0             	mov    %r8,%rax
   2a317:	89 fd                	mov    %edi,%ebp
   2a319:	83 e5 1f             	and    $0x1f,%ebp
   2a31c:	40 80 ff df          	cmp    $0xdf,%dil
   2a320:	77 bc                	ja     2a2de <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x59e>
   2a322:	c1 e5 06             	shl    $0x6,%ebp
   2a325:	09 ee                	or     %ebp,%esi
   2a327:	eb 37                	jmp    2a360 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x620>
   2a329:	45 31 c9             	xor    %r9d,%r9d
   2a32c:	4c 89 c0             	mov    %r8,%rax
   2a32f:	c1 e6 06             	shl    $0x6,%esi
   2a332:	44 09 ce             	or     %r9d,%esi
   2a335:	40 80 ff f0          	cmp    $0xf0,%dil
   2a339:	73 c3                	jae    2a2fe <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x5be>
   2a33b:	c1 e5 0c             	shl    $0xc,%ebp
   2a33e:	09 ee                	or     %ebp,%esi
   2a340:	eb 1e                	jmp    2a360 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x620>
   2a342:	31 ff                	xor    %edi,%edi
   2a344:	83 e5 07             	and    $0x7,%ebp
   2a347:	c1 e5 12             	shl    $0x12,%ebp
   2a34a:	c1 e6 06             	shl    $0x6,%esi
   2a34d:	09 ee                	or     %ebp,%esi
   2a34f:	09 fe                	or     %edi,%esi
   2a351:	81 fe 00 00 11 00    	cmp    $0x110000,%esi
   2a357:	0f 84 13 fa ff ff    	je     29d70 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x30>
   2a35d:	0f 1f 00             	nopl   (%rax)
   2a360:	83 fe 24             	cmp    $0x24,%esi
   2a363:	74 15                	je     2a37a <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x63a>
   2a365:	48 89 d8             	mov    %rbx,%rax
   2a368:	48 29 c8             	sub    %rcx,%rax
   2a36b:	48 01 d0             	add    %rdx,%rax
   2a36e:	48 89 d1             	mov    %rdx,%rcx
   2a371:	83 fe 2e             	cmp    $0x2e,%esi
   2a374:	0f 85 26 ff ff ff    	jne    2a2a0 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x560>
   2a37a:	48 85 db             	test   %rbx,%rbx
   2a37d:	74 3b                	je     2a3ba <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x67a>
   2a37f:	49 39 dc             	cmp    %rbx,%r12
   2a382:	74 36                	je     2a3ba <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x67a>
   2a384:	0f 86 43 05 00 00    	jbe    2a8cd <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xb8d>
   2a38a:	41 80 3c 1f bf       	cmpb   $0xbf,(%r15,%rbx,1)
   2a38f:	0f 8e 38 05 00 00    	jle    2a8cd <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xb8d>
   2a395:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   2a39a:	4c 89 fe             	mov    %r15,%rsi
   2a39d:	48 89 da             	mov    %rbx,%rdx
   2a3a0:	ff 15 9a b6 01 00    	callq  *0x1b69a(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2a3a6:	84 c0                	test   %al,%al
   2a3a8:	0f 85 73 04 00 00    	jne    2a821 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xae1>
   2a3ae:	41 80 3c 1f bf       	cmpb   $0xbf,(%r15,%rbx,1)
   2a3b3:	7f 1e                	jg     2a3d3 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x693>
   2a3b5:	e9 2d 05 00 00       	jmpq   2a8e7 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xba7>
   2a3ba:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   2a3bf:	4c 89 fe             	mov    %r15,%rsi
   2a3c2:	48 89 da             	mov    %rbx,%rdx
   2a3c5:	ff 15 75 b6 01 00    	callq  *0x1b675(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2a3cb:	84 c0                	test   %al,%al
   2a3cd:	0f 85 4e 04 00 00    	jne    2a821 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xae1>
   2a3d3:	49 01 df             	add    %rbx,%r15
   2a3d6:	49 29 dc             	sub    %rbx,%r12
   2a3d9:	4d 89 e5             	mov    %r12,%r13
   2a3dc:	4c 89 f9             	mov    %r15,%rcx
   2a3df:	4c 89 f3             	mov    %r14,%rbx
   2a3e2:	e9 06 fd ff ff       	jmpq   2a0ed <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x3ad>
   2a3e7:	ba 01 00 00 00       	mov    $0x1,%edx
   2a3ec:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   2a3f1:	48 8d 35 c3 f4 00 00 	lea    0xf4c3(%rip),%rsi        # 398bb <str.6+0x259b>
   2a3f8:	ff 15 42 b6 01 00    	callq  *0x1b642(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2a3fe:	48 89 e9             	mov    %rbp,%rcx
   2a401:	41 bd 00 00 00 00    	mov    $0x0,%r13d
   2a407:	84 c0                	test   %al,%al
   2a409:	0f 84 de fc ff ff    	je     2a0ed <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x3ad>
   2a40f:	e9 0d 04 00 00       	jmpq   2a821 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xae1>
   2a414:	4b 8d 34 27          	lea    (%r15,%r12,1),%rsi
   2a418:	31 c0                	xor    %eax,%eax
   2a41a:	48 89 f7             	mov    %rsi,%rdi
   2a41d:	49 83 fc 02          	cmp    $0x2,%r12
   2a421:	74 0c                	je     2a42f <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x6ef>
   2a423:	49 8d 7f 03          	lea    0x3(%r15),%rdi
   2a427:	41 0f b6 47 02       	movzbl 0x2(%r15),%eax
   2a42c:	83 e0 3f             	and    $0x3f,%eax
   2a42f:	89 d1                	mov    %edx,%ecx
   2a431:	83 e1 1f             	and    $0x1f,%ecx
   2a434:	80 fa df             	cmp    $0xdf,%dl
   2a437:	0f 86 d9 02 00 00    	jbe    2a716 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x9d6>
   2a43d:	48 39 f7             	cmp    %rsi,%rdi
   2a440:	0f 84 92 03 00 00    	je     2a7d8 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xa98>
   2a446:	44 0f b6 07          	movzbl (%rdi),%r8d
   2a44a:	48 83 c7 01          	add    $0x1,%rdi
   2a44e:	41 83 e0 3f          	and    $0x3f,%r8d
   2a452:	c1 e0 06             	shl    $0x6,%eax
   2a455:	44 09 c0             	or     %r8d,%eax
   2a458:	80 fa f0             	cmp    $0xf0,%dl
   2a45b:	0f 82 8c 03 00 00    	jb     2a7ed <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xaad>
   2a461:	48 39 f7             	cmp    %rsi,%rdi
   2a464:	0f 84 96 03 00 00    	je     2a800 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xac0>
   2a46a:	0f b6 17             	movzbl (%rdi),%edx
   2a46d:	83 e2 3f             	and    $0x3f,%edx
   2a470:	e9 8d 03 00 00       	jmpq   2a802 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xac2>
   2a475:	48 8d 05 42 f4 00 00 	lea    0xf442(%rip),%rax        # 398be <str.6+0x259e>
   2a47c:	48 8d 0d 39 f4 00 00 	lea    0xf439(%rip),%rcx        # 398bc <str.6+0x259c>
   2a483:	48 39 cb             	cmp    %rcx,%rbx
   2a486:	0f 84 72 02 00 00    	je     2a6fe <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x9be>
   2a48c:	0f b7 0b             	movzwl (%rbx),%ecx
   2a48f:	48 8d 05 28 f4 00 00 	lea    0xf428(%rip),%rax        # 398be <str.6+0x259e>
   2a496:	81 f9 53 50 00 00    	cmp    $0x5053,%ecx
   2a49c:	0f 84 5c 02 00 00    	je     2a6fe <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x9be>
   2a4a2:	48 8d 05 18 f4 00 00 	lea    0xf418(%rip),%rax        # 398c1 <str.6+0x25a1>
   2a4a9:	48 8d 0d 0f f4 00 00 	lea    0xf40f(%rip),%rcx        # 398bf <str.6+0x259f>
   2a4b0:	48 39 cb             	cmp    %rcx,%rbx
   2a4b3:	0f 84 45 02 00 00    	je     2a6fe <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x9be>
   2a4b9:	0f b7 0b             	movzwl (%rbx),%ecx
   2a4bc:	48 8d 05 fe f3 00 00 	lea    0xf3fe(%rip),%rax        # 398c1 <str.6+0x25a1>
   2a4c3:	81 f9 42 50 00 00    	cmp    $0x5042,%ecx
   2a4c9:	0f 84 2f 02 00 00    	je     2a6fe <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x9be>
   2a4cf:	48 8d 05 ee f3 00 00 	lea    0xf3ee(%rip),%rax        # 398c4 <str.6+0x25a4>
   2a4d6:	48 8d 0d e5 f3 00 00 	lea    0xf3e5(%rip),%rcx        # 398c2 <str.6+0x25a2>
   2a4dd:	48 39 cb             	cmp    %rcx,%rbx
   2a4e0:	0f 84 18 02 00 00    	je     2a6fe <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x9be>
   2a4e6:	0f b7 0b             	movzwl (%rbx),%ecx
   2a4e9:	48 8d 05 d4 f3 00 00 	lea    0xf3d4(%rip),%rax        # 398c4 <str.6+0x25a4>
   2a4f0:	81 f9 52 46 00 00    	cmp    $0x4652,%ecx
   2a4f6:	0f 84 02 02 00 00    	je     2a6fe <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x9be>
   2a4fc:	48 8d 05 c4 f3 00 00 	lea    0xf3c4(%rip),%rax        # 398c7 <str.6+0x25a7>
   2a503:	48 8d 0d bb f3 00 00 	lea    0xf3bb(%rip),%rcx        # 398c5 <str.6+0x25a5>
   2a50a:	48 39 cb             	cmp    %rcx,%rbx
   2a50d:	0f 84 eb 01 00 00    	je     2a6fe <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x9be>
   2a513:	0f b7 0b             	movzwl (%rbx),%ecx
   2a516:	48 8d 05 aa f3 00 00 	lea    0xf3aa(%rip),%rax        # 398c7 <str.6+0x25a7>
   2a51d:	81 f9 4c 54 00 00    	cmp    $0x544c,%ecx
   2a523:	0f 84 d5 01 00 00    	je     2a6fe <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x9be>
   2a529:	48 8d 05 9a f3 00 00 	lea    0xf39a(%rip),%rax        # 398ca <str.6+0x25aa>
   2a530:	48 8d 0d 91 f3 00 00 	lea    0xf391(%rip),%rcx        # 398c8 <str.6+0x25a8>
   2a537:	48 39 cb             	cmp    %rcx,%rbx
   2a53a:	0f 84 be 01 00 00    	je     2a6fe <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x9be>
   2a540:	0f b7 0b             	movzwl (%rbx),%ecx
   2a543:	48 8d 05 80 f3 00 00 	lea    0xf380(%rip),%rax        # 398ca <str.6+0x25aa>
   2a54a:	81 f9 47 54 00 00    	cmp    $0x5447,%ecx
   2a550:	0f 84 a8 01 00 00    	je     2a6fe <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x9be>
   2a556:	48 8d 05 70 f3 00 00 	lea    0xf370(%rip),%rax        # 398cd <str.6+0x25ad>
   2a55d:	48 8d 0d 67 f3 00 00 	lea    0xf367(%rip),%rcx        # 398cb <str.6+0x25ab>
   2a564:	48 39 cb             	cmp    %rcx,%rbx
   2a567:	0f 84 91 01 00 00    	je     2a6fe <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x9be>
   2a56d:	0f b7 0b             	movzwl (%rbx),%ecx
   2a570:	48 8d 05 56 f3 00 00 	lea    0xf356(%rip),%rax        # 398cd <str.6+0x25ad>
   2a577:	81 f9 4c 50 00 00    	cmp    $0x504c,%ecx
   2a57d:	0f 84 7b 01 00 00    	je     2a6fe <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x9be>
   2a583:	48 8d 05 46 f3 00 00 	lea    0xf346(%rip),%rax        # 398d0 <str.6+0x25b0>
   2a58a:	48 8d 0d 3d f3 00 00 	lea    0xf33d(%rip),%rcx        # 398ce <str.6+0x25ae>
   2a591:	48 39 cb             	cmp    %rcx,%rbx
   2a594:	0f 84 64 01 00 00    	je     2a6fe <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x9be>
   2a59a:	0f b7 0b             	movzwl (%rbx),%ecx
   2a59d:	48 8d 05 2c f3 00 00 	lea    0xf32c(%rip),%rax        # 398d0 <str.6+0x25b0>
   2a5a4:	81 f9 52 50 00 00    	cmp    $0x5052,%ecx
   2a5aa:	0f 84 4e 01 00 00    	je     2a6fe <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x9be>
   2a5b0:	80 3b 75             	cmpb   $0x75,(%rbx)
   2a5b3:	0f 84 bd fc ff ff    	je     2a276 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x536>
   2a5b9:	e9 b2 f7 ff ff       	jmpq   29d70 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x30>
   2a5be:	48 8d 05 0d f3 00 00 	lea    0xf30d(%rip),%rax        # 398d2 <str.6+0x25b2>
   2a5c5:	48 8d 0d 05 f3 00 00 	lea    0xf305(%rip),%rcx        # 398d1 <str.6+0x25b1>
   2a5cc:	48 39 cb             	cmp    %rcx,%rbx
   2a5cf:	0f 84 29 01 00 00    	je     2a6fe <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x9be>
   2a5d5:	8a 0b                	mov    (%rbx),%cl
   2a5d7:	48 8d 05 f4 f2 00 00 	lea    0xf2f4(%rip),%rax        # 398d2 <str.6+0x25b2>
   2a5de:	80 f9 43             	cmp    $0x43,%cl
   2a5e1:	0f 84 17 01 00 00    	je     2a6fe <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x9be>
   2a5e7:	80 f9 75             	cmp    $0x75,%cl
   2a5ea:	0f 85 80 f7 ff ff    	jne    29d70 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x30>
   2a5f0:	49 8d 7f 02          	lea    0x2(%r15),%rdi
   2a5f4:	4d 8d 04 37          	lea    (%r15,%rsi,1),%r8
   2a5f8:	49 83 c0 01          	add    $0x1,%r8
   2a5fc:	48 83 c6 ff          	add    $0xffffffffffffffff,%rsi
   2a600:	48 89 f9             	mov    %rdi,%rcx
   2a603:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2a60a:	00 00 00 
   2a60d:	0f 1f 00             	nopl   (%rax)
   2a610:	4c 39 c1             	cmp    %r8,%rcx
   2a613:	0f 84 41 01 00 00    	je     2a75a <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xa1a>
   2a619:	48 8d 41 01          	lea    0x1(%rcx),%rax
   2a61d:	0f b6 29             	movzbl (%rcx),%ebp
   2a620:	40 84 ed             	test   %bpl,%bpl
   2a623:	78 0b                	js     2a630 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x8f0>
   2a625:	48 89 c1             	mov    %rax,%rcx
   2a628:	89 ea                	mov    %ebp,%edx
   2a62a:	e9 a1 00 00 00       	jmpq   2a6d0 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x990>
   2a62f:	90                   	nop
   2a630:	4c 39 c0             	cmp    %r8,%rax
   2a633:	74 41                	je     2a676 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x936>
   2a635:	0f b6 51 01          	movzbl 0x1(%rcx),%edx
   2a639:	48 83 c1 02          	add    $0x2,%rcx
   2a63d:	83 e2 3f             	and    $0x3f,%edx
   2a640:	89 eb                	mov    %ebp,%ebx
   2a642:	83 e3 1f             	and    $0x1f,%ebx
   2a645:	40 80 fd df          	cmp    $0xdf,%bpl
   2a649:	76 3b                	jbe    2a686 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x946>
   2a64b:	4c 39 c1             	cmp    %r8,%rcx
   2a64e:	74 3d                	je     2a68d <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x94d>
   2a650:	0f b6 01             	movzbl (%rcx),%eax
   2a653:	48 83 c1 01          	add    $0x1,%rcx
   2a657:	83 e0 3f             	and    $0x3f,%eax
   2a65a:	c1 e2 06             	shl    $0x6,%edx
   2a65d:	09 c2                	or     %eax,%edx
   2a65f:	40 80 fd f0          	cmp    $0xf0,%bpl
   2a663:	72 38                	jb     2a69d <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x95d>
   2a665:	4c 39 c1             	cmp    %r8,%rcx
   2a668:	74 3a                	je     2a6a4 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x964>
   2a66a:	0f b6 29             	movzbl (%rcx),%ebp
   2a66d:	48 83 c1 01          	add    $0x1,%rcx
   2a671:	83 e5 3f             	and    $0x3f,%ebp
   2a674:	eb 33                	jmp    2a6a9 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x969>
   2a676:	31 d2                	xor    %edx,%edx
   2a678:	4c 89 c1             	mov    %r8,%rcx
   2a67b:	89 eb                	mov    %ebp,%ebx
   2a67d:	83 e3 1f             	and    $0x1f,%ebx
   2a680:	40 80 fd df          	cmp    $0xdf,%bpl
   2a684:	77 c5                	ja     2a64b <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x90b>
   2a686:	c1 e3 06             	shl    $0x6,%ebx
   2a689:	09 da                	or     %ebx,%edx
   2a68b:	eb 43                	jmp    2a6d0 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x990>
   2a68d:	31 c0                	xor    %eax,%eax
   2a68f:	4c 89 c1             	mov    %r8,%rcx
   2a692:	c1 e2 06             	shl    $0x6,%edx
   2a695:	09 c2                	or     %eax,%edx
   2a697:	40 80 fd f0          	cmp    $0xf0,%bpl
   2a69b:	73 c8                	jae    2a665 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x925>
   2a69d:	c1 e3 0c             	shl    $0xc,%ebx
   2a6a0:	09 da                	or     %ebx,%edx
   2a6a2:	eb 2c                	jmp    2a6d0 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x990>
   2a6a4:	31 ed                	xor    %ebp,%ebp
   2a6a6:	4c 89 c1             	mov    %r8,%rcx
   2a6a9:	83 e3 07             	and    $0x7,%ebx
   2a6ac:	c1 e3 12             	shl    $0x12,%ebx
   2a6af:	c1 e2 06             	shl    $0x6,%edx
   2a6b2:	09 da                	or     %ebx,%edx
   2a6b4:	09 ea                	or     %ebp,%edx
   2a6b6:	81 fa 00 00 11 00    	cmp    $0x110000,%edx
   2a6bc:	0f 84 98 00 00 00    	je     2a75a <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xa1a>
   2a6c2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2a6c9:	00 00 00 
   2a6cc:	0f 1f 40 00          	nopl   0x0(%rax)
   2a6d0:	8d 42 d0             	lea    -0x30(%rdx),%eax
   2a6d3:	83 f8 0a             	cmp    $0xa,%eax
   2a6d6:	0f 82 34 ff ff ff    	jb     2a610 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x8d0>
   2a6dc:	83 c2 9f             	add    $0xffffff9f,%edx
   2a6df:	83 fa 06             	cmp    $0x6,%edx
   2a6e2:	0f 82 28 ff ff ff    	jb     2a610 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x8d0>
   2a6e8:	b3 01                	mov    $0x1,%bl
   2a6ea:	ba 10 00 00 00       	mov    $0x10,%edx
   2a6ef:	ff 15 e3 b3 01 00    	callq  *0x1b3e3(%rip)        # 45ad8 <_GLOBAL_OFFSET_TABLE_+0x150>
   2a6f5:	a8 01                	test   $0x1,%al
   2a6f7:	74 76                	je     2a76f <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xa2f>
   2a6f9:	e9 72 f6 ff ff       	jmpq   29d70 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x30>
   2a6fe:	ba 01 00 00 00       	mov    $0x1,%edx
   2a703:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   2a708:	48 89 c6             	mov    %rax,%rsi
   2a70b:	ff 15 2f b3 01 00    	callq  *0x1b32f(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2a711:	e9 b0 00 00 00       	jmpq   2a7c6 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xa86>
   2a716:	c1 e1 06             	shl    $0x6,%ecx
   2a719:	09 c8                	or     %ecx,%eax
   2a71b:	83 f8 2e             	cmp    $0x2e,%eax
   2a71e:	0f 84 0e fa ff ff    	je     2a132 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x3f2>
   2a724:	ba 01 00 00 00       	mov    $0x1,%edx
   2a729:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   2a72e:	48 8d 35 86 f1 00 00 	lea    0xf186(%rip),%rsi        # 398bb <str.6+0x259b>
   2a735:	ff 15 05 b3 01 00    	callq  *0x1b305(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2a73b:	84 c0                	test   %al,%al
   2a73d:	0f 85 de 00 00 00    	jne    2a821 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xae1>
   2a743:	4d 8d 6c 24 ff       	lea    -0x1(%r12),%r13
   2a748:	48 89 e9             	mov    %rbp,%rcx
   2a74b:	80 7d 00 bf          	cmpb   $0xbf,0x0(%rbp)
   2a74f:	0f 8f 98 f9 ff ff    	jg     2a0ed <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x3ad>
   2a755:	e9 9f 01 00 00       	jmpq   2a8f9 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xbb9>
   2a75a:	31 db                	xor    %ebx,%ebx
   2a75c:	ba 10 00 00 00       	mov    $0x10,%edx
   2a761:	ff 15 71 b3 01 00    	callq  *0x1b371(%rip)        # 45ad8 <_GLOBAL_OFFSET_TABLE_+0x150>
   2a767:	a8 01                	test   $0x1,%al
   2a769:	0f 85 01 f6 ff ff    	jne    29d70 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x30>
   2a76f:	48 c1 e8 20          	shr    $0x20,%rax
   2a773:	89 c1                	mov    %eax,%ecx
   2a775:	81 e1 00 f8 ff ff    	and    $0xfffff800,%ecx
   2a77b:	81 f9 00 d8 00 00    	cmp    $0xd800,%ecx
   2a781:	89 c7                	mov    %eax,%edi
   2a783:	b9 00 00 11 00       	mov    $0x110000,%ecx
   2a788:	0f 44 f9             	cmove  %ecx,%edi
   2a78b:	3d ff ff 10 00       	cmp    $0x10ffff,%eax
   2a790:	0f 47 f9             	cmova  %ecx,%edi
   2a793:	81 ff 00 00 11 00    	cmp    $0x110000,%edi
   2a799:	0f 94 c0             	sete   %al
   2a79c:	08 c3                	or     %al,%bl
   2a79e:	0f 85 cc f5 ff ff    	jne    29d70 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x30>
   2a7a4:	89 7c 24 30          	mov    %edi,0x30(%rsp)
   2a7a8:	ff 15 3a b6 01 00    	callq  *0x1b63a(%rip)        # 45de8 <_GLOBAL_OFFSET_TABLE_+0x460>
   2a7ae:	84 c0                	test   %al,%al
   2a7b0:	0f 85 ba f5 ff ff    	jne    29d70 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x30>
   2a7b6:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
   2a7bb:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   2a7c0:	ff 15 52 b5 01 00    	callq  *0x1b552(%rip)        # 45d18 <_GLOBAL_OFFSET_TABLE_+0x390>
   2a7c6:	84 c0                	test   %al,%al
   2a7c8:	4c 89 f3             	mov    %r14,%rbx
   2a7cb:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   2a7d0:	0f 84 17 f9 ff ff    	je     2a0ed <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x3ad>
   2a7d6:	eb 49                	jmp    2a821 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xae1>
   2a7d8:	45 31 c0             	xor    %r8d,%r8d
   2a7db:	48 89 f7             	mov    %rsi,%rdi
   2a7de:	c1 e0 06             	shl    $0x6,%eax
   2a7e1:	44 09 c0             	or     %r8d,%eax
   2a7e4:	80 fa f0             	cmp    $0xf0,%dl
   2a7e7:	0f 83 74 fc ff ff    	jae    2a461 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x721>
   2a7ed:	c1 e1 0c             	shl    $0xc,%ecx
   2a7f0:	09 c8                	or     %ecx,%eax
   2a7f2:	83 f8 2e             	cmp    $0x2e,%eax
   2a7f5:	0f 84 37 f9 ff ff    	je     2a132 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x3f2>
   2a7fb:	e9 24 ff ff ff       	jmpq   2a724 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x9e4>
   2a800:	31 d2                	xor    %edx,%edx
   2a802:	83 e1 07             	and    $0x7,%ecx
   2a805:	c1 e1 12             	shl    $0x12,%ecx
   2a808:	c1 e0 06             	shl    $0x6,%eax
   2a80b:	09 c8                	or     %ecx,%eax
   2a80d:	09 d0                	or     %edx,%eax
   2a80f:	83 f8 2e             	cmp    $0x2e,%eax
   2a812:	0f 85 0c ff ff ff    	jne    2a724 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x9e4>
   2a818:	e9 15 f9 ff ff       	jmpq   2a132 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x3f2>
   2a81d:	31 c0                	xor    %eax,%eax
   2a81f:	eb 02                	jmp    2a823 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xae3>
   2a821:	b0 01                	mov    $0x1,%al
   2a823:	48 83 c4 78          	add    $0x78,%rsp
   2a827:	5b                   	pop    %rbx
   2a828:	41 5c                	pop    %r12
   2a82a:	41 5d                	pop    %r13
   2a82c:	41 5e                	pop    %r14
   2a82e:	41 5f                	pop    %r15
   2a830:	5d                   	pop    %rbp
   2a831:	c3                   	retq   
   2a832:	48 8d 3d a4 ef 00 00 	lea    0xefa4(%rip),%rdi        # 397dd <str.6+0x24bd>
   2a839:	48 8d 15 10 a6 01 00 	lea    0x1a610(%rip),%rdx        # 44e50 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1918>
   2a840:	be 2b 00 00 00       	mov    $0x2b,%esi
   2a845:	ff 15 8d b6 01 00    	callq  *0x1b68d(%rip)        # 45ed8 <_GLOBAL_OFFSET_TABLE_+0x550>
   2a84b:	0f 0b                	ud2    
   2a84d:	49 01 ee             	add    %rbp,%r14
   2a850:	48 29 ee             	sub    %rbp,%rsi
   2a853:	4c 8d 05 0e a6 01 00 	lea    0x1a60e(%rip),%r8        # 44e68 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1930>
   2a85a:	ba 01 00 00 00       	mov    $0x1,%edx
   2a85f:	4c 89 f7             	mov    %r14,%rdi
   2a862:	48 89 f1             	mov    %rsi,%rcx
   2a865:	ff 15 c5 b5 01 00    	callq  *0x1b5c5(%rip)        # 45e30 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   2a86b:	0f 0b                	ud2    
   2a86d:	4c 8d 05 6c a6 01 00 	lea    0x1a66c(%rip),%r8        # 44ee0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x19a8>
   2a874:	e9 87 00 00 00       	jmpq   2a900 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xbc0>
   2a879:	4c 8d 05 90 a6 01 00 	lea    0x1a690(%rip),%r8        # 44f10 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x19d8>
   2a880:	ba 02 00 00 00       	mov    $0x2,%edx
   2a885:	eb 7e                	jmp    2a905 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xbc5>
   2a887:	4c 8d 05 9a a6 01 00 	lea    0x1a69a(%rip),%r8        # 44f28 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x19f0>
   2a88e:	eb 70                	jmp    2a900 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xbc0>
   2a890:	4c 8d 05 a9 a6 01 00 	lea    0x1a6a9(%rip),%r8        # 44f40 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1a08>
   2a897:	ba 01 00 00 00       	mov    $0x1,%edx
   2a89c:	4c 89 ff             	mov    %r15,%rdi
   2a89f:	4c 89 e6             	mov    %r12,%rsi
   2a8a2:	ff 15 88 b5 01 00    	callq  *0x1b588(%rip)        # 45e30 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   2a8a8:	0f 0b                	ud2    
   2a8aa:	4c 8d 05 a7 a6 01 00 	lea    0x1a6a7(%rip),%r8        # 44f58 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1a20>
   2a8b1:	eb 52                	jmp    2a905 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xbc5>
   2a8b3:	4c 8d 05 b6 a6 01 00 	lea    0x1a6b6(%rip),%r8        # 44f70 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1a38>
   2a8ba:	ba 01 00 00 00       	mov    $0x1,%edx
   2a8bf:	48 89 df             	mov    %rbx,%rdi
   2a8c2:	48 89 f1             	mov    %rsi,%rcx
   2a8c5:	ff 15 65 b5 01 00    	callq  *0x1b565(%rip)        # 45e30 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   2a8cb:	0f 0b                	ud2    
   2a8cd:	4c 8d 05 b4 a6 01 00 	lea    0x1a6b4(%rip),%r8        # 44f88 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1a50>
   2a8d4:	4c 89 ff             	mov    %r15,%rdi
   2a8d7:	4c 89 e6             	mov    %r12,%rsi
   2a8da:	31 d2                	xor    %edx,%edx
   2a8dc:	48 89 d9             	mov    %rbx,%rcx
   2a8df:	ff 15 4b b5 01 00    	callq  *0x1b54b(%rip)        # 45e30 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   2a8e5:	0f 0b                	ud2    
   2a8e7:	4c 8d 05 b2 a6 01 00 	lea    0x1a6b2(%rip),%r8        # 44fa0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1a68>
   2a8ee:	4c 89 ff             	mov    %r15,%rdi
   2a8f1:	4c 89 e6             	mov    %r12,%rsi
   2a8f4:	48 89 da             	mov    %rbx,%rdx
   2a8f7:	eb 12                	jmp    2a90b <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xbcb>
   2a8f9:	4c 8d 05 f8 a5 01 00 	lea    0x1a5f8(%rip),%r8        # 44ef8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x19c0>
   2a900:	ba 01 00 00 00       	mov    $0x1,%edx
   2a905:	4c 89 ff             	mov    %r15,%rdi
   2a908:	4c 89 e6             	mov    %r12,%rsi
   2a90b:	4c 89 e1             	mov    %r12,%rcx
   2a90e:	ff 15 1c b5 01 00    	callq  *0x1b51c(%rip)        # 45e30 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   2a914:	0f 0b                	ud2    
   2a916:	4c 8d 05 63 a5 01 00 	lea    0x1a563(%rip),%r8        # 44e80 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1948>
   2a91d:	4c 89 f7             	mov    %r14,%rdi
   2a920:	31 d2                	xor    %edx,%edx
   2a922:	48 89 e9             	mov    %rbp,%rcx
   2a925:	ff 15 05 b5 01 00    	callq  *0x1b505(%rip)        # 45e30 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   2a92b:	0f 0b                	ud2    
   2a92d:	4c 8d 05 7c a5 01 00 	lea    0x1a57c(%rip),%r8        # 44eb0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1978>
   2a934:	4c 89 fe             	mov    %r15,%rsi
   2a937:	4c 89 ea             	mov    %r13,%rdx
   2a93a:	4c 89 f9             	mov    %r15,%rcx
   2a93d:	ff 15 ed b4 01 00    	callq  *0x1b4ed(%rip)        # 45e30 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   2a943:	0f 0b                	ud2    
   2a945:	88 64 24 30          	mov    %ah,0x30(%rsp)
   2a949:	48 8d 3d b8 ee 00 00 	lea    0xeeb8(%rip),%rdi        # 39808 <str.6+0x24e8>
   2a950:	48 8d 0d 49 a4 01 00 	lea    0x1a449(%rip),%rcx        # 44da0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1868>
   2a957:	4c 8d 05 3a a5 01 00 	lea    0x1a53a(%rip),%r8        # 44e98 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1960>
   2a95e:	48 8d 54 24 30       	lea    0x30(%rsp),%rdx
   2a963:	be 2b 00 00 00       	mov    $0x2b,%esi
   2a968:	ff 15 72 b2 01 00    	callq  *0x1b272(%rip)        # 45be0 <_GLOBAL_OFFSET_TABLE_+0x258>
   2a96e:	0f 0b                	ud2    
   2a970:	4c 8d 05 c1 a4 01 00 	lea    0x1a4c1(%rip),%r8        # 44e38 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1900>
   2a977:	ba 01 00 00 00       	mov    $0x1,%edx
   2a97c:	4c 89 ff             	mov    %r15,%rdi
   2a97f:	eb 0f                	jmp    2a990 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xc50>
   2a981:	48 89 cf             	mov    %rcx,%rdi
   2a984:	4c 8d 05 3d a5 01 00 	lea    0x1a53d(%rip),%r8        # 44ec8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1990>
   2a98b:	ba 01 00 00 00       	mov    $0x1,%edx
   2a990:	4c 89 ee             	mov    %r13,%rsi
   2a993:	4c 89 e9             	mov    %r13,%rcx
   2a996:	ff 15 94 b4 01 00    	callq  *0x1b494(%rip)        # 45e30 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   2a99c:	0f 0b                	ud2    
   2a99e:	66 90                	xchg   %ax,%ax

000000000002a9a0 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt>:
   2a9a0:	55                   	push   %rbp
   2a9a1:	41 57                	push   %r15
   2a9a3:	41 56                	push   %r14
   2a9a5:	41 55                	push   %r13
   2a9a7:	41 54                	push   %r12
   2a9a9:	53                   	push   %rbx
   2a9aa:	48 81 ec 48 02 00 00 	sub    $0x248,%rsp
   2a9b1:	48 89 f3             	mov    %rsi,%rbx
   2a9b4:	48 89 fd             	mov    %rdi,%rbp
   2a9b7:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
   2a9bc:	ba 00 02 00 00       	mov    $0x200,%edx
   2a9c1:	31 f6                	xor    %esi,%esi
   2a9c3:	ff 15 3f b2 01 00    	callq  *0x1b23f(%rip)        # 45c08 <memset@GLIBC_2.2.5>
   2a9c9:	4c 8b 6d 18          	mov    0x18(%rbp),%r13
   2a9cd:	4d 85 ed             	test   %r13,%r13
   2a9d0:	0f 84 0a 01 00 00    	je     2aae0 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x140>
   2a9d6:	48 89 5c 24 30       	mov    %rbx,0x30(%rsp)
   2a9db:	48 8b 45 10          	mov    0x10(%rbp),%rax
   2a9df:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   2a9e4:	44 8a 20             	mov    (%rax),%r12b
   2a9e7:	48 8b 4d 00          	mov    0x0(%rbp),%rcx
   2a9eb:	48 8b 45 08          	mov    0x8(%rbp),%rax
   2a9ef:	48 85 c0             	test   %rax,%rax
   2a9f2:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   2a9f7:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   2a9fc:	0f 84 f6 00 00 00    	je     2aaf8 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x158>
   2aa02:	48 01 c8             	add    %rcx,%rax
   2aa05:	31 ff                	xor    %edi,%edi
   2aa07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2aa0e:	00 00 
   2aa10:	48 8d 71 01          	lea    0x1(%rcx),%rsi
   2aa14:	0f b6 11             	movzbl (%rcx),%edx
   2aa17:	84 d2                	test   %dl,%dl
   2aa19:	78 15                	js     2aa30 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x90>
   2aa1b:	89 d5                	mov    %edx,%ebp
   2aa1d:	48 89 f1             	mov    %rsi,%rcx
   2aa20:	e9 9b 00 00 00       	jmpq   2aac0 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x120>
   2aa25:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2aa2c:	00 00 00 
   2aa2f:	90                   	nop
   2aa30:	48 39 c6             	cmp    %rax,%rsi
   2aa33:	74 3f                	je     2aa74 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0xd4>
   2aa35:	0f b6 69 01          	movzbl 0x1(%rcx),%ebp
   2aa39:	48 83 c1 02          	add    $0x2,%rcx
   2aa3d:	83 e5 3f             	and    $0x3f,%ebp
   2aa40:	89 d6                	mov    %edx,%esi
   2aa42:	83 e6 1f             	and    $0x1f,%esi
   2aa45:	80 fa df             	cmp    $0xdf,%dl
   2aa48:	76 39                	jbe    2aa83 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0xe3>
   2aa4a:	48 39 c1             	cmp    %rax,%rcx
   2aa4d:	74 3b                	je     2aa8a <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0xea>
   2aa4f:	0f b6 19             	movzbl (%rcx),%ebx
   2aa52:	48 83 c1 01          	add    $0x1,%rcx
   2aa56:	83 e3 3f             	and    $0x3f,%ebx
   2aa59:	c1 e5 06             	shl    $0x6,%ebp
   2aa5c:	09 dd                	or     %ebx,%ebp
   2aa5e:	80 fa f0             	cmp    $0xf0,%dl
   2aa61:	72 36                	jb     2aa99 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0xf9>
   2aa63:	48 39 c1             	cmp    %rax,%rcx
   2aa66:	74 38                	je     2aaa0 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x100>
   2aa68:	0f b6 11             	movzbl (%rcx),%edx
   2aa6b:	48 83 c1 01          	add    $0x1,%rcx
   2aa6f:	83 e2 3f             	and    $0x3f,%edx
   2aa72:	eb 31                	jmp    2aaa5 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x105>
   2aa74:	31 ed                	xor    %ebp,%ebp
   2aa76:	48 89 c1             	mov    %rax,%rcx
   2aa79:	89 d6                	mov    %edx,%esi
   2aa7b:	83 e6 1f             	and    $0x1f,%esi
   2aa7e:	80 fa df             	cmp    $0xdf,%dl
   2aa81:	77 c7                	ja     2aa4a <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0xaa>
   2aa83:	c1 e6 06             	shl    $0x6,%esi
   2aa86:	09 f5                	or     %esi,%ebp
   2aa88:	eb 36                	jmp    2aac0 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x120>
   2aa8a:	31 db                	xor    %ebx,%ebx
   2aa8c:	48 89 c1             	mov    %rax,%rcx
   2aa8f:	c1 e5 06             	shl    $0x6,%ebp
   2aa92:	09 dd                	or     %ebx,%ebp
   2aa94:	80 fa f0             	cmp    $0xf0,%dl
   2aa97:	73 ca                	jae    2aa63 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0xc3>
   2aa99:	c1 e6 0c             	shl    $0xc,%esi
   2aa9c:	09 f5                	or     %esi,%ebp
   2aa9e:	eb 20                	jmp    2aac0 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x120>
   2aaa0:	31 d2                	xor    %edx,%edx
   2aaa2:	48 89 c1             	mov    %rax,%rcx
   2aaa5:	83 e6 07             	and    $0x7,%esi
   2aaa8:	c1 e6 12             	shl    $0x12,%esi
   2aaab:	c1 e5 06             	shl    $0x6,%ebp
   2aaae:	09 f5                	or     %esi,%ebp
   2aab0:	09 d5                	or     %edx,%ebp
   2aab2:	81 fd 00 00 11 00    	cmp    $0x110000,%ebp
   2aab8:	0f 84 3c 00 00 00    	je     2aafa <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x15a>
   2aabe:	66 90                	xchg   %ax,%ax
   2aac0:	48 81 ff 80 00 00 00 	cmp    $0x80,%rdi
   2aac7:	0f 84 c9 02 00 00    	je     2ad96 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x3f6>
   2aacd:	89 6c bc 48          	mov    %ebp,0x48(%rsp,%rdi,4)
   2aad1:	48 83 c7 01          	add    $0x1,%rdi
   2aad5:	48 39 c1             	cmp    %rax,%rcx
   2aad8:	0f 85 32 ff ff ff    	jne    2aa10 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x70>
   2aade:	eb 1a                	jmp    2aafa <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x15a>
   2aae0:	48 8b 75 00          	mov    0x0(%rbp),%rsi
   2aae4:	48 8b 55 08          	mov    0x8(%rbp),%rdx
   2aae8:	48 89 df             	mov    %rbx,%rdi
   2aaeb:	ff 15 4f af 01 00    	callq  *0x1af4f(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2aaf1:	89 c5                	mov    %eax,%ebp
   2aaf3:	e9 09 03 00 00       	jmpq   2ae01 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x461>
   2aaf8:	31 ff                	xor    %edi,%edi
   2aafa:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   2aaff:	4e 8d 04 28          	lea    (%rax,%r13,1),%r8
   2ab03:	48 8d 48 01          	lea    0x1(%rax),%rcx
   2ab07:	48 8d 04 bd 04 00 00 	lea    0x4(,%rdi,4),%rax
   2ab0e:	00 
   2ab0f:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   2ab14:	b8 bc 02 00 00       	mov    $0x2bc,%eax
   2ab19:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   2ab1e:	41 bf 48 00 00 00    	mov    $0x48,%r15d
   2ab24:	b8 80 00 00 00       	mov    $0x80,%eax
   2ab29:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   2ab2e:	41 bb 01 00 00 00    	mov    $0x1,%r11d
   2ab34:	41 ba 1a 00 00 00    	mov    $0x1a,%r10d
   2ab3a:	45 31 c9             	xor    %r9d,%r9d
   2ab3d:	41 0f b6 d4          	movzbl %r12b,%edx
   2ab41:	c1 e2 08             	shl    $0x8,%edx
   2ab44:	83 ca 01             	or     $0x1,%edx
   2ab47:	41 bc 24 00 00 00    	mov    $0x24,%r12d
   2ab4d:	31 f6                	xor    %esi,%esi
   2ab4f:	bd 01 00 00 00       	mov    $0x1,%ebp
   2ab54:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2ab5b:	00 00 00 
   2ab5e:	66 90                	xchg   %ax,%ax
   2ab60:	4c 89 e0             	mov    %r12,%rax
   2ab63:	4c 29 f8             	sub    %r15,%rax
   2ab66:	41 be 00 00 00 00    	mov    $0x0,%r14d
   2ab6c:	4c 0f 43 f0          	cmovae %rax,%r14
   2ab70:	49 83 fe 01          	cmp    $0x1,%r14
   2ab74:	4d 0f 46 f3          	cmovbe %r11,%r14
   2ab78:	49 83 fe 1a          	cmp    $0x1a,%r14
   2ab7c:	4d 0f 43 f2          	cmovae %r10,%r14
   2ab80:	80 fa 02             	cmp    $0x2,%dl
   2ab83:	75 1b                	jne    2aba0 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x200>
   2ab85:	4c 39 c1             	cmp    %r8,%rcx
   2ab88:	0f 84 08 02 00 00    	je     2ad96 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x3f6>
   2ab8e:	0f b6 11             	movzbl (%rcx),%edx
   2ab91:	48 83 c1 01          	add    $0x1,%rcx
   2ab95:	8d 42 9f             	lea    -0x61(%rdx),%eax
   2ab98:	3c 1a                	cmp    $0x1a,%al
   2ab9a:	73 17                	jae    2abb3 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x213>
   2ab9c:	eb 25                	jmp    2abc3 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x223>
   2ab9e:	66 90                	xchg   %ax,%ax
   2aba0:	f6 c2 01             	test   $0x1,%dl
   2aba3:	0f 84 ed 01 00 00    	je     2ad96 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x3f6>
   2aba9:	c1 ea 08             	shr    $0x8,%edx
   2abac:	8d 42 9f             	lea    -0x61(%rdx),%eax
   2abaf:	3c 1a                	cmp    $0x1a,%al
   2abb1:	72 10                	jb     2abc3 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x223>
   2abb3:	8d 42 d0             	lea    -0x30(%rdx),%eax
   2abb6:	3c 09                	cmp    $0x9,%al
   2abb8:	0f 87 d8 01 00 00    	ja     2ad96 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x3f6>
   2abbe:	80 c2 ea             	add    $0xea,%dl
   2abc1:	89 d0                	mov    %edx,%eax
   2abc3:	0f b6 d8             	movzbl %al,%ebx
   2abc6:	48 89 d8             	mov    %rbx,%rax
   2abc9:	48 f7 e5             	mul    %rbp
   2abcc:	0f 80 c4 01 00 00    	jo     2ad96 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x3f6>
   2abd2:	48 01 c6             	add    %rax,%rsi
   2abd5:	0f 82 bb 01 00 00    	jb     2ad96 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x3f6>
   2abdb:	49 39 de             	cmp    %rbx,%r14
   2abde:	77 24                	ja     2ac04 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x264>
   2abe0:	bb 24 00 00 00       	mov    $0x24,%ebx
   2abe5:	4c 29 f3             	sub    %r14,%rbx
   2abe8:	49 83 c4 24          	add    $0x24,%r12
   2abec:	48 89 e8             	mov    %rbp,%rax
   2abef:	48 f7 e3             	mul    %rbx
   2abf2:	66 ba 02 00          	mov    $0x2,%dx
   2abf6:	48 89 c5             	mov    %rax,%rbp
   2abf9:	0f 81 61 ff ff ff    	jno    2ab60 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x1c0>
   2abff:	e9 92 01 00 00       	jmpq   2ad96 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x3f6>
   2ac04:	49 01 f1             	add    %rsi,%r9
   2ac07:	0f 82 89 01 00 00    	jb     2ad96 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x3f6>
   2ac0d:	4c 8d 77 01          	lea    0x1(%rdi),%r14
   2ac11:	4c 89 c8             	mov    %r9,%rax
   2ac14:	4c 09 f0             	or     %r14,%rax
   2ac17:	48 c1 e8 20          	shr    $0x20,%rax
   2ac1b:	74 17                	je     2ac34 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x294>
   2ac1d:	4c 89 c8             	mov    %r9,%rax
   2ac20:	31 d2                	xor    %edx,%edx
   2ac22:	49 f7 f6             	div    %r14
   2ac25:	49 89 d1             	mov    %rdx,%r9
   2ac28:	48 01 44 24 08       	add    %rax,0x8(%rsp)
   2ac2d:	73 1b                	jae    2ac4a <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x2aa>
   2ac2f:	e9 62 01 00 00       	jmpq   2ad96 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x3f6>
   2ac34:	44 89 c8             	mov    %r9d,%eax
   2ac37:	31 d2                	xor    %edx,%edx
   2ac39:	41 f7 f6             	div    %r14d
   2ac3c:	41 89 d1             	mov    %edx,%r9d
   2ac3f:	48 01 44 24 08       	add    %rax,0x8(%rsp)
   2ac44:	0f 82 4c 01 00 00    	jb     2ad96 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x3f6>
   2ac4a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   2ac4f:	48 c1 e8 20          	shr    $0x20,%rax
   2ac53:	0f 85 3d 01 00 00    	jne    2ad96 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x3f6>
   2ac59:	48 83 ff 7f          	cmp    $0x7f,%rdi
   2ac5d:	0f 87 33 01 00 00    	ja     2ad96 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x3f6>
   2ac63:	81 7c 24 08 ff ff 10 	cmpl   $0x10ffff,0x8(%rsp)
   2ac6a:	00 
   2ac6b:	0f 87 25 01 00 00    	ja     2ad96 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x3f6>
   2ac71:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   2ac76:	25 00 f8 ff ff       	and    $0xfffff800,%eax
   2ac7b:	3d 00 d8 00 00       	cmp    $0xd800,%eax
   2ac80:	0f 84 10 01 00 00    	je     2ad96 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x3f6>
   2ac86:	4c 39 cf             	cmp    %r9,%rdi
   2ac89:	48 8d 6c 24 48       	lea    0x48(%rsp),%rbp
   2ac8e:	76 1e                	jbe    2acae <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x30e>
   2ac90:	48 8d 47 ff          	lea    -0x1(%rdi),%rax
   2ac94:	48 83 f8 7f          	cmp    $0x7f,%rax
   2ac98:	0f 87 c8 01 00 00    	ja     2ae66 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x4c6>
   2ac9e:	8b 54 bc 44          	mov    0x44(%rsp,%rdi,4),%edx
   2aca2:	89 54 bc 48          	mov    %edx,0x48(%rsp,%rdi,4)
   2aca6:	48 89 c7             	mov    %rax,%rdi
   2aca9:	4c 39 c8             	cmp    %r9,%rax
   2acac:	77 e2                	ja     2ac90 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x2f0>
   2acae:	49 81 f9 80 00 00 00 	cmp    $0x80,%r9
   2acb5:	0f 83 c3 01 00 00    	jae    2ae7e <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x4de>
   2acbb:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   2acc0:	42 89 44 8c 48       	mov    %eax,0x48(%rsp,%r9,4)
   2acc5:	4c 39 c1             	cmp    %r8,%rcx
   2acc8:	0f 84 58 01 00 00    	je     2ae26 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x486>
   2acce:	44 8a 21             	mov    (%rcx),%r12b
   2acd1:	48 89 f0             	mov    %rsi,%rax
   2acd4:	48 c1 e8 20          	shr    $0x20,%rax
   2acd8:	74 0f                	je     2ace9 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x349>
   2acda:	48 89 f0             	mov    %rsi,%rax
   2acdd:	31 d2                	xor    %edx,%edx
   2acdf:	48 f7 74 24 10       	divq   0x10(%rsp)
   2ace4:	48 89 c7             	mov    %rax,%rdi
   2ace7:	eb 0a                	jmp    2acf3 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x353>
   2ace9:	89 f0                	mov    %esi,%eax
   2aceb:	31 d2                	xor    %edx,%edx
   2aced:	f7 74 24 10          	divl   0x10(%rsp)
   2acf1:	89 c7                	mov    %eax,%edi
   2acf3:	48 bb 0f ea a0 0e ea 	movabs $0xea0ea0ea0ea0ea0f,%rbx
   2acfa:	a0 0e ea 
   2acfd:	48 89 f8             	mov    %rdi,%rax
   2ad00:	4c 09 f0             	or     %r14,%rax
   2ad03:	48 c1 e8 20          	shr    $0x20,%rax
   2ad07:	74 1b                	je     2ad24 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x384>
   2ad09:	48 89 f8             	mov    %rdi,%rax
   2ad0c:	31 d2                	xor    %edx,%edx
   2ad0e:	49 f7 f6             	div    %r14
   2ad11:	48 89 c6             	mov    %rax,%rsi
   2ad14:	48 01 fe             	add    %rdi,%rsi
   2ad17:	31 ed                	xor    %ebp,%ebp
   2ad19:	48 81 fe c8 01 00 00 	cmp    $0x1c8,%rsi
   2ad20:	73 19                	jae    2ad3b <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x39b>
   2ad22:	eb 39                	jmp    2ad5d <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x3bd>
   2ad24:	89 f8                	mov    %edi,%eax
   2ad26:	31 d2                	xor    %edx,%edx
   2ad28:	41 f7 f6             	div    %r14d
   2ad2b:	89 c6                	mov    %eax,%esi
   2ad2d:	48 01 fe             	add    %rdi,%rsi
   2ad30:	31 ed                	xor    %ebp,%ebp
   2ad32:	48 81 fe c8 01 00 00 	cmp    $0x1c8,%rsi
   2ad39:	72 22                	jb     2ad5d <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x3bd>
   2ad3b:	48 89 f7             	mov    %rsi,%rdi
   2ad3e:	66 90                	xchg   %ax,%ax
   2ad40:	48 89 f8             	mov    %rdi,%rax
   2ad43:	48 f7 e3             	mul    %rbx
   2ad46:	48 89 d6             	mov    %rdx,%rsi
   2ad49:	48 c1 ee 05          	shr    $0x5,%rsi
   2ad4d:	48 83 c5 24          	add    $0x24,%rbp
   2ad51:	48 81 ff 57 3e 00 00 	cmp    $0x3e57,%rdi
   2ad58:	48 89 f7             	mov    %rsi,%rdi
   2ad5b:	77 e3                	ja     2ad40 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x3a0>
   2ad5d:	49 83 c1 01          	add    $0x1,%r9
   2ad61:	48 83 c1 01          	add    $0x1,%rcx
   2ad65:	8d 04 b5 00 00 00 00 	lea    0x0(,%rsi,4),%eax
   2ad6c:	8d 04 c0             	lea    (%rax,%rax,8),%eax
   2ad6f:	83 c6 26             	add    $0x26,%esi
   2ad72:	31 d2                	xor    %edx,%edx
   2ad74:	66 f7 f6             	div    %si
   2ad77:	44 0f b7 f8          	movzwl %ax,%r15d
   2ad7b:	49 01 ef             	add    %rbp,%r15
   2ad7e:	48 83 44 24 20 04    	addq   $0x4,0x20(%rsp)
   2ad84:	b8 02 00 00 00       	mov    $0x2,%eax
   2ad89:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   2ad8e:	4c 89 f7             	mov    %r14,%rdi
   2ad91:	e9 a7 fd ff ff       	jmpq   2ab3d <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x19d>
   2ad96:	48 8d 35 8b eb 00 00 	lea    0xeb8b(%rip),%rsi        # 39928 <str.6+0x2608>
   2ad9d:	ba 09 00 00 00       	mov    $0x9,%edx
   2ada2:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
   2ada7:	48 89 df             	mov    %rbx,%rdi
   2adaa:	ff 15 90 ac 01 00    	callq  *0x1ac90(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2adb0:	40 b5 01             	mov    $0x1,%bpl
   2adb3:	84 c0                	test   %al,%al
   2adb5:	75 4a                	jne    2ae01 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x461>
   2adb7:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   2adbc:	48 85 d2             	test   %rdx,%rdx
   2adbf:	74 2b                	je     2adec <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x44c>
   2adc1:	48 89 df             	mov    %rbx,%rdi
   2adc4:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
   2adc9:	ff 15 71 ac 01 00    	callq  *0x1ac71(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2adcf:	84 c0                	test   %al,%al
   2add1:	75 2e                	jne    2ae01 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x461>
   2add3:	48 8d 35 57 eb 00 00 	lea    0xeb57(%rip),%rsi        # 39931 <str.6+0x2611>
   2adda:	ba 01 00 00 00       	mov    $0x1,%edx
   2addf:	48 89 df             	mov    %rbx,%rdi
   2ade2:	ff 15 58 ac 01 00    	callq  *0x1ac58(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2ade8:	84 c0                	test   %al,%al
   2adea:	75 15                	jne    2ae01 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x461>
   2adec:	48 89 df             	mov    %rbx,%rdi
   2adef:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
   2adf4:	4c 89 ea             	mov    %r13,%rdx
   2adf7:	ff 15 43 ac 01 00    	callq  *0x1ac43(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2adfd:	84 c0                	test   %al,%al
   2adff:	74 14                	je     2ae15 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x475>
   2ae01:	89 e8                	mov    %ebp,%eax
   2ae03:	48 81 c4 48 02 00 00 	add    $0x248,%rsp
   2ae0a:	5b                   	pop    %rbx
   2ae0b:	41 5c                	pop    %r12
   2ae0d:	41 5d                	pop    %r13
   2ae0f:	41 5e                	pop    %r14
   2ae11:	41 5f                	pop    %r15
   2ae13:	5d                   	pop    %rbp
   2ae14:	c3                   	retq   
   2ae15:	48 8d 35 16 eb 00 00 	lea    0xeb16(%rip),%rsi        # 39932 <str.6+0x2612>
   2ae1c:	ba 01 00 00 00       	mov    $0x1,%edx
   2ae21:	e9 c2 fc ff ff       	jmpq   2aae8 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x148>
   2ae26:	4c 8d 74 24 1c       	lea    0x1c(%rsp),%r14
   2ae2b:	4c 8d 3d fe 74 00 00 	lea    0x74fe(%rip),%r15        # 32330 <<char as core::fmt::Display>::fmt>
   2ae32:	4c 8b 64 24 30       	mov    0x30(%rsp),%r12
   2ae37:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
   2ae3c:	48 85 db             	test   %rbx,%rbx
   2ae3f:	74 21                	je     2ae62 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x4c2>
   2ae41:	8b 45 00             	mov    0x0(%rbp),%eax
   2ae44:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
   2ae48:	4c 89 f7             	mov    %r14,%rdi
   2ae4b:	4c 89 e6             	mov    %r12,%rsi
   2ae4e:	41 ff d7             	callq  *%r15
   2ae51:	48 83 c5 04          	add    $0x4,%rbp
   2ae55:	48 83 c3 fc          	add    $0xfffffffffffffffc,%rbx
   2ae59:	84 c0                	test   %al,%al
   2ae5b:	74 df                	je     2ae3c <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x49c>
   2ae5d:	40 b5 01             	mov    $0x1,%bpl
   2ae60:	eb 9f                	jmp    2ae01 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x461>
   2ae62:	31 ed                	xor    %ebp,%ebp
   2ae64:	eb 9b                	jmp    2ae01 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x461>
   2ae66:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   2ae6a:	48 8d 15 a7 a1 01 00 	lea    0x1a1a7(%rip),%rdx        # 45018 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1ae0>
   2ae71:	be 80 00 00 00       	mov    $0x80,%esi
   2ae76:	ff 15 14 ae 01 00    	callq  *0x1ae14(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   2ae7c:	0f 0b                	ud2    
   2ae7e:	48 8d 15 ab a1 01 00 	lea    0x1a1ab(%rip),%rdx        # 45030 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1af8>
   2ae85:	be 80 00 00 00       	mov    $0x80,%esi
   2ae8a:	4c 89 cf             	mov    %r9,%rdi
   2ae8d:	ff 15 fd ad 01 00    	callq  *0x1adfd(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   2ae93:	0f 0b                	ud2    
   2ae95:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2ae9c:	00 00 00 
   2ae9f:	90                   	nop

000000000002aea0 <rustc_demangle::v0::Parser::ident>:
   2aea0:	41 57                	push   %r15
   2aea2:	41 56                	push   %r14
   2aea4:	41 54                	push   %r12
   2aea6:	53                   	push   %rbx
   2aea7:	50                   	push   %rax
   2aea8:	49 89 f1             	mov    %rsi,%r9
   2aeab:	48 8b 76 08          	mov    0x8(%rsi),%rsi
   2aeaf:	4d 8b 51 10          	mov    0x10(%r9),%r10
   2aeb3:	4c 39 d6             	cmp    %r10,%rsi
   2aeb6:	76 1c                	jbe    2aed4 <rustc_demangle::v0::Parser::ident+0x34>
   2aeb8:	49 8b 01             	mov    (%r9),%rax
   2aebb:	42 80 3c 10 75       	cmpb   $0x75,(%rax,%r10,1)
   2aec0:	75 12                	jne    2aed4 <rustc_demangle::v0::Parser::ident+0x34>
   2aec2:	49 83 c2 01          	add    $0x1,%r10
   2aec6:	4d 89 51 10          	mov    %r10,0x10(%r9)
   2aeca:	41 b0 01             	mov    $0x1,%r8b
   2aecd:	4c 39 d6             	cmp    %r10,%rsi
   2aed0:	77 0a                	ja     2aedc <rustc_demangle::v0::Parser::ident+0x3c>
   2aed2:	eb 7c                	jmp    2af50 <rustc_demangle::v0::Parser::ident+0xb0>
   2aed4:	45 31 c0             	xor    %r8d,%r8d
   2aed7:	4c 39 d6             	cmp    %r10,%rsi
   2aeda:	76 74                	jbe    2af50 <rustc_demangle::v0::Parser::ident+0xb0>
   2aedc:	4d 8b 19             	mov    (%r9),%r11
   2aedf:	43 8a 04 13          	mov    (%r11,%r10,1),%al
   2aee3:	04 d0                	add    $0xd0,%al
   2aee5:	3c 0a                	cmp    $0xa,%al
   2aee7:	73 67                	jae    2af50 <rustc_demangle::v0::Parser::ident+0xb0>
   2aee9:	49 83 c2 01          	add    $0x1,%r10
   2aeed:	4d 89 51 10          	mov    %r10,0x10(%r9)
   2aef1:	84 c0                	test   %al,%al
   2aef3:	74 34                	je     2af29 <rustc_demangle::v0::Parser::ident+0x89>
   2aef5:	0f b6 c0             	movzbl %al,%eax
   2aef8:	b9 0a 00 00 00       	mov    $0xa,%ecx
   2aefd:	0f 1f 00             	nopl   (%rax)
   2af00:	4c 39 d6             	cmp    %r10,%rsi
   2af03:	76 26                	jbe    2af2b <rustc_demangle::v0::Parser::ident+0x8b>
   2af05:	43 0f b6 1c 13       	movzbl (%r11,%r10,1),%ebx
   2af0a:	80 c3 d0             	add    $0xd0,%bl
   2af0d:	80 fb 09             	cmp    $0x9,%bl
   2af10:	77 19                	ja     2af2b <rustc_demangle::v0::Parser::ident+0x8b>
   2af12:	49 83 c2 01          	add    $0x1,%r10
   2af16:	4d 89 51 10          	mov    %r10,0x10(%r9)
   2af1a:	48 f7 e1             	mul    %rcx
   2af1d:	70 31                	jo     2af50 <rustc_demangle::v0::Parser::ident+0xb0>
   2af1f:	0f b6 d3             	movzbl %bl,%edx
   2af22:	48 01 d0             	add    %rdx,%rax
   2af25:	73 d9                	jae    2af00 <rustc_demangle::v0::Parser::ident+0x60>
   2af27:	eb 27                	jmp    2af50 <rustc_demangle::v0::Parser::ident+0xb0>
   2af29:	31 c0                	xor    %eax,%eax
   2af2b:	4c 39 d6             	cmp    %r10,%rsi
   2af2e:	76 0f                	jbe    2af3f <rustc_demangle::v0::Parser::ident+0x9f>
   2af30:	43 80 3c 13 5f       	cmpb   $0x5f,(%r11,%r10,1)
   2af35:	75 08                	jne    2af3f <rustc_demangle::v0::Parser::ident+0x9f>
   2af37:	49 83 c2 01          	add    $0x1,%r10
   2af3b:	4d 89 51 10          	mov    %r10,0x10(%r9)
   2af3f:	4c 89 d1             	mov    %r10,%rcx
   2af42:	48 01 c1             	add    %rax,%rcx
   2af45:	72 09                	jb     2af50 <rustc_demangle::v0::Parser::ident+0xb0>
   2af47:	49 89 49 10          	mov    %rcx,0x10(%r9)
   2af4b:	48 39 f1             	cmp    %rsi,%rcx
   2af4e:	76 13                	jbe    2af63 <rustc_demangle::v0::Parser::ident+0xc3>
   2af50:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   2af57:	48 83 c4 08          	add    $0x8,%rsp
   2af5b:	5b                   	pop    %rbx
   2af5c:	41 5c                	pop    %r12
   2af5e:	41 5e                	pop    %r14
   2af60:	41 5f                	pop    %r15
   2af62:	c3                   	retq   
   2af63:	4c 39 d6             	cmp    %r10,%rsi
   2af66:	74 11                	je     2af79 <rustc_demangle::v0::Parser::ident+0xd9>
   2af68:	0f 86 43 01 00 00    	jbe    2b0b1 <rustc_demangle::v0::Parser::ident+0x211>
   2af6e:	43 80 3c 13 bf       	cmpb   $0xbf,(%r11,%r10,1)
   2af73:	0f 8e 38 01 00 00    	jle    2b0b1 <rustc_demangle::v0::Parser::ident+0x211>
   2af79:	48 85 c9             	test   %rcx,%rcx
   2af7c:	74 16                	je     2af94 <rustc_demangle::v0::Parser::ident+0xf4>
   2af7e:	48 39 ce             	cmp    %rcx,%rsi
   2af81:	74 11                	je     2af94 <rustc_demangle::v0::Parser::ident+0xf4>
   2af83:	0f 86 28 01 00 00    	jbe    2b0b1 <rustc_demangle::v0::Parser::ident+0x211>
   2af89:	41 80 3c 0b bf       	cmpb   $0xbf,(%r11,%rcx,1)
   2af8e:	0f 8e 1d 01 00 00    	jle    2b0b1 <rustc_demangle::v0::Parser::ident+0x211>
   2af94:	4f 8d 0c 13          	lea    (%r11,%r10,1),%r9
   2af98:	48 89 ce             	mov    %rcx,%rsi
   2af9b:	4c 29 d6             	sub    %r10,%rsi
   2af9e:	45 84 c0             	test   %r8b,%r8b
   2afa1:	0f 84 cb 00 00 00    	je     2b072 <rustc_demangle::v0::Parser::ident+0x1d2>
   2afa7:	4d 8d 04 0b          	lea    (%r11,%rcx,1),%r8
   2afab:	4d 8d 3c 0b          	lea    (%r11,%rcx,1),%r15
   2afaf:	49 83 c7 ff          	add    $0xffffffffffffffff,%r15
   2afb3:	48 89 c2             	mov    %rax,%rdx
   2afb6:	48 f7 da             	neg    %rdx
   2afb9:	31 c9                	xor    %ecx,%ecx
   2afbb:	4c 8d 35 9f e9 00 00 	lea    0xe99f(%rip),%r14        # 39961 <str.6+0x2641>
   2afc2:	31 db                	xor    %ebx,%ebx
   2afc4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2afcb:	00 00 00 
   2afce:	66 90                	xchg   %ax,%ax
   2afd0:	48 39 da             	cmp    %rbx,%rdx
   2afd3:	0f 84 b8 00 00 00    	je     2b091 <rustc_demangle::v0::Parser::ident+0x1f1>
   2afd9:	4c 8d 63 ff          	lea    -0x1(%rbx),%r12
   2afdd:	41 80 3c 1f 5f       	cmpb   $0x5f,(%r15,%rbx,1)
   2afe2:	4c 89 e3             	mov    %r12,%rbx
   2afe5:	75 e9                	jne    2afd0 <rustc_demangle::v0::Parser::ident+0x130>
   2afe7:	4c 89 c2             	mov    %r8,%rdx
   2afea:	4c 29 ca             	sub    %r9,%rdx
   2afed:	4a 8d 0c 22          	lea    (%rdx,%r12,1),%rcx
   2aff1:	4c 01 c8             	add    %r9,%rax
   2aff4:	4c 29 c0             	sub    %r8,%rax
   2aff7:	48 85 c9             	test   %rcx,%rcx
   2affa:	74 23                	je     2b01f <rustc_demangle::v0::Parser::ident+0x17f>
   2affc:	4c 39 e0             	cmp    %r12,%rax
   2afff:	74 1e                	je     2b01f <rustc_demangle::v0::Parser::ident+0x17f>
   2b001:	48 39 ce             	cmp    %rcx,%rsi
   2b004:	0f 86 bc 00 00 00    	jbe    2b0c6 <rustc_demangle::v0::Parser::ident+0x226>
   2b00a:	4b 8d 1c 02          	lea    (%r10,%r8,1),%rbx
   2b00e:	4c 29 cb             	sub    %r9,%rbx
   2b011:	4c 01 db             	add    %r11,%rbx
   2b014:	41 80 3c 1c bf       	cmpb   $0xbf,(%r12,%rbx,1)
   2b019:	0f 8e a7 00 00 00    	jle    2b0c6 <rustc_demangle::v0::Parser::ident+0x226>
   2b01f:	4c 01 e2             	add    %r12,%rdx
   2b022:	48 83 c2 01          	add    $0x1,%rdx
   2b026:	48 85 d2             	test   %rdx,%rdx
   2b029:	74 28                	je     2b053 <rustc_demangle::v0::Parser::ident+0x1b3>
   2b02b:	48 8d 58 ff          	lea    -0x1(%rax),%rbx
   2b02f:	4c 39 e3             	cmp    %r12,%rbx
   2b032:	74 1f                	je     2b053 <rustc_demangle::v0::Parser::ident+0x1b3>
   2b034:	48 39 d6             	cmp    %rdx,%rsi
   2b037:	0f 86 9d 00 00 00    	jbe    2b0da <rustc_demangle::v0::Parser::ident+0x23a>
   2b03d:	4b 8d 1c 02          	lea    (%r10,%r8,1),%rbx
   2b041:	4c 29 cb             	sub    %r9,%rbx
   2b044:	4c 01 db             	add    %r11,%rbx
   2b047:	41 80 7c 1c 01 bf    	cmpb   $0xbf,0x1(%r12,%rbx,1)
   2b04d:	0f 8e 87 00 00 00    	jle    2b0da <rustc_demangle::v0::Parser::ident+0x23a>
   2b053:	4c 89 e6             	mov    %r12,%rsi
   2b056:	48 f7 d6             	not    %rsi
   2b059:	48 01 c6             	add    %rax,%rsi
   2b05c:	4d 01 c2             	add    %r8,%r10
   2b05f:	4d 29 ca             	sub    %r9,%r10
   2b062:	4d 01 da             	add    %r11,%r10
   2b065:	4b 8d 04 14          	lea    (%r12,%r10,1),%rax
   2b069:	48 83 c0 01          	add    $0x1,%rax
   2b06d:	4d 89 ce             	mov    %r9,%r14
   2b070:	eb 22                	jmp    2b094 <rustc_demangle::v0::Parser::ident+0x1f4>
   2b072:	4c 89 0f             	mov    %r9,(%rdi)
   2b075:	48 89 77 08          	mov    %rsi,0x8(%rdi)
   2b079:	48 8d 05 e1 e8 00 00 	lea    0xe8e1(%rip),%rax        # 39961 <str.6+0x2641>
   2b080:	48 89 47 10          	mov    %rax,0x10(%rdi)
   2b084:	48 c7 47 18 00 00 00 	movq   $0x0,0x18(%rdi)
   2b08b:	00 
   2b08c:	e9 c6 fe ff ff       	jmpq   2af57 <rustc_demangle::v0::Parser::ident+0xb7>
   2b091:	4c 89 c8             	mov    %r9,%rax
   2b094:	48 85 f6             	test   %rsi,%rsi
   2b097:	0f 84 b3 fe ff ff    	je     2af50 <rustc_demangle::v0::Parser::ident+0xb0>
   2b09d:	4c 89 37             	mov    %r14,(%rdi)
   2b0a0:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
   2b0a4:	48 89 47 10          	mov    %rax,0x10(%rdi)
   2b0a8:	48 89 77 18          	mov    %rsi,0x18(%rdi)
   2b0ac:	e9 a6 fe ff ff       	jmpq   2af57 <rustc_demangle::v0::Parser::ident+0xb7>
   2b0b1:	4c 8d 05 a8 9f 01 00 	lea    0x19fa8(%rip),%r8        # 45060 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1b28>
   2b0b8:	4c 89 df             	mov    %r11,%rdi
   2b0bb:	4c 89 d2             	mov    %r10,%rdx
   2b0be:	ff 15 6c ad 01 00    	callq  *0x1ad6c(%rip)        # 45e30 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   2b0c4:	0f 0b                	ud2    
   2b0c6:	4c 8d 05 ab 9f 01 00 	lea    0x19fab(%rip),%r8        # 45078 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1b40>
   2b0cd:	4c 89 cf             	mov    %r9,%rdi
   2b0d0:	31 d2                	xor    %edx,%edx
   2b0d2:	ff 15 58 ad 01 00    	callq  *0x1ad58(%rip)        # 45e30 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   2b0d8:	0f 0b                	ud2    
   2b0da:	4c 8d 05 af 9f 01 00 	lea    0x19faf(%rip),%r8        # 45090 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1b58>
   2b0e1:	4c 89 cf             	mov    %r9,%rdi
   2b0e4:	48 89 f1             	mov    %rsi,%rcx
   2b0e7:	ff 15 43 ad 01 00    	callq  *0x1ad43(%rip)        # 45e30 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   2b0ed:	0f 0b                	ud2    
   2b0ef:	90                   	nop

000000000002b0f0 <rustc_demangle::v0::Parser::skip_path>:
   2b0f0:	55                   	push   %rbp
   2b0f1:	41 57                	push   %r15
   2b0f3:	41 56                	push   %r14
   2b0f5:	41 54                	push   %r12
   2b0f7:	53                   	push   %rbx
   2b0f8:	48 83 ec 20          	sub    $0x20,%rsp
   2b0fc:	48 89 fb             	mov    %rdi,%rbx
   2b0ff:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   2b103:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   2b107:	41 b6 01             	mov    $0x1,%r14b
   2b10a:	48 39 fe             	cmp    %rdi,%rsi
   2b10d:	0f 86 f2 04 00 00    	jbe    2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b113:	48 8b 0b             	mov    (%rbx),%rcx
   2b116:	8a 14 39             	mov    (%rcx,%rdi,1),%dl
   2b119:	48 8d 47 01          	lea    0x1(%rdi),%rax
   2b11d:	48 89 43 10          	mov    %rax,0x10(%rbx)
   2b121:	80 c2 be             	add    $0xbe,%dl
   2b124:	80 fa 17             	cmp    $0x17,%dl
   2b127:	0f 87 d8 04 00 00    	ja     2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b12d:	4c 8d 63 10          	lea    0x10(%rbx),%r12
   2b131:	0f b6 d2             	movzbl %dl,%edx
   2b134:	48 8d 2d 79 e3 00 00 	lea    0xe379(%rip),%rbp        # 394b4 <str.6+0x2194>
   2b13b:	48 63 54 95 00       	movslq 0x0(%rbp,%rdx,4),%rdx
   2b140:	48 01 ea             	add    %rbp,%rdx
   2b143:	ff e2                	jmpq   *%rdx
   2b145:	48 39 c6             	cmp    %rax,%rsi
   2b148:	0f 86 66 02 00 00    	jbe    2b3b4 <rustc_demangle::v0::Parser::skip_path+0x2c4>
   2b14e:	80 3c 01 5f          	cmpb   $0x5f,(%rcx,%rax,1)
   2b152:	0f 85 5f 02 00 00    	jne    2b3b7 <rustc_demangle::v0::Parser::skip_path+0x2c7>
   2b158:	48 8d 47 02          	lea    0x2(%rdi),%rax
   2b15c:	49 89 04 24          	mov    %rax,(%r12)
   2b160:	31 c0                	xor    %eax,%eax
   2b162:	e9 0c 04 00 00       	jmpq   2b573 <rustc_demangle::v0::Parser::skip_path+0x483>
   2b167:	48 39 c6             	cmp    %rax,%rsi
   2b16a:	0f 86 21 04 00 00    	jbe    2b591 <rustc_demangle::v0::Parser::skip_path+0x4a1>
   2b170:	80 3c 01 73          	cmpb   $0x73,(%rcx,%rax,1)
   2b174:	0f 85 17 04 00 00    	jne    2b591 <rustc_demangle::v0::Parser::skip_path+0x4a1>
   2b17a:	48 8d 6f 02          	lea    0x2(%rdi),%rbp
   2b17e:	49 89 2c 24          	mov    %rbp,(%r12)
   2b182:	48 39 ee             	cmp    %rbp,%rsi
   2b185:	0f 86 a9 02 00 00    	jbe    2b434 <rustc_demangle::v0::Parser::skip_path+0x344>
   2b18b:	80 3c 29 5f          	cmpb   $0x5f,(%rcx,%rbp,1)
   2b18f:	0f 85 9f 02 00 00    	jne    2b434 <rustc_demangle::v0::Parser::skip_path+0x344>
   2b195:	48 83 c7 03          	add    $0x3,%rdi
   2b199:	49 89 3c 24          	mov    %rdi,(%r12)
   2b19d:	e9 ef 03 00 00       	jmpq   2b591 <rustc_demangle::v0::Parser::skip_path+0x4a1>
   2b1a2:	48 89 df             	mov    %rbx,%rdi
   2b1a5:	e8 46 ff ff ff       	callq  2b0f0 <rustc_demangle::v0::Parser::skip_path>
   2b1aa:	84 c0                	test   %al,%al
   2b1ac:	0f 85 53 04 00 00    	jne    2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b1b2:	41 bf 3e 00 00 00    	mov    $0x3e,%r15d
   2b1b8:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
   2b1bc:	48 8b 43 10          	mov    0x10(%rbx),%rax
   2b1c0:	48 39 c1             	cmp    %rax,%rcx
   2b1c3:	77 1d                	ja     2b1e2 <rustc_demangle::v0::Parser::skip_path+0xf2>
   2b1c5:	48 89 df             	mov    %rbx,%rdi
   2b1c8:	e8 e3 04 00 00       	callq  2b6b0 <rustc_demangle::v0::Parser::skip_type>
   2b1cd:	84 c0                	test   %al,%al
   2b1cf:	0f 85 30 04 00 00    	jne    2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b1d5:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
   2b1d9:	48 8b 43 10          	mov    0x10(%rbx),%rax
   2b1dd:	48 39 c1             	cmp    %rax,%rcx
   2b1e0:	76 e3                	jbe    2b1c5 <rustc_demangle::v0::Parser::skip_path+0xd5>
   2b1e2:	48 8b 13             	mov    (%rbx),%rdx
   2b1e5:	80 3c 02 45          	cmpb   $0x45,(%rdx,%rax,1)
   2b1e9:	0f 84 3a 04 00 00    	je     2b629 <rustc_demangle::v0::Parser::skip_path+0x539>
   2b1ef:	48 8b 33             	mov    (%rbx),%rsi
   2b1f2:	80 3c 06 4c          	cmpb   $0x4c,(%rsi,%rax,1)
   2b1f6:	75 2a                	jne    2b222 <rustc_demangle::v0::Parser::skip_path+0x132>
   2b1f8:	48 8d 78 01          	lea    0x1(%rax),%rdi
   2b1fc:	49 89 3c 24          	mov    %rdi,(%r12)
   2b200:	48 39 f9             	cmp    %rdi,%rcx
   2b203:	76 3f                	jbe    2b244 <rustc_demangle::v0::Parser::skip_path+0x154>
   2b205:	80 3c 3e 5f          	cmpb   $0x5f,(%rsi,%rdi,1)
   2b209:	75 39                	jne    2b244 <rustc_demangle::v0::Parser::skip_path+0x154>
   2b20b:	48 83 c0 02          	add    $0x2,%rax
   2b20f:	49 89 04 24          	mov    %rax,(%r12)
   2b213:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
   2b217:	48 8b 43 10          	mov    0x10(%rbx),%rax
   2b21b:	48 39 c1             	cmp    %rax,%rcx
   2b21e:	76 a5                	jbe    2b1c5 <rustc_demangle::v0::Parser::skip_path+0xd5>
   2b220:	eb c0                	jmp    2b1e2 <rustc_demangle::v0::Parser::skip_path+0xf2>
   2b222:	48 8b 0b             	mov    (%rbx),%rcx
   2b225:	80 3c 01 4b          	cmpb   $0x4b,(%rcx,%rax,1)
   2b229:	75 9a                	jne    2b1c5 <rustc_demangle::v0::Parser::skip_path+0xd5>
   2b22b:	48 83 c0 01          	add    $0x1,%rax
   2b22f:	48 89 43 10          	mov    %rax,0x10(%rbx)
   2b233:	48 89 df             	mov    %rbx,%rdi
   2b236:	e8 d5 09 00 00       	callq  2bc10 <rustc_demangle::v0::Parser::skip_const>
   2b23b:	84 c0                	test   %al,%al
   2b23d:	74 96                	je     2b1d5 <rustc_demangle::v0::Parser::skip_path+0xe5>
   2b23f:	e9 c1 03 00 00       	jmpq   2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b244:	31 c0                	xor    %eax,%eax
   2b246:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2b24d:	00 00 00 
   2b250:	48 39 f9             	cmp    %rdi,%rcx
   2b253:	0f 86 ac 03 00 00    	jbe    2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b259:	0f b6 14 3e          	movzbl (%rsi,%rdi,1),%edx
   2b25d:	80 fa 5f             	cmp    $0x5f,%dl
   2b260:	74 48                	je     2b2aa <rustc_demangle::v0::Parser::skip_path+0x1ba>
   2b262:	8d 6a d0             	lea    -0x30(%rdx),%ebp
   2b265:	40 80 fd 0a          	cmp    $0xa,%bpl
   2b269:	72 20                	jb     2b28b <rustc_demangle::v0::Parser::skip_path+0x19b>
   2b26b:	8d 6a 9f             	lea    -0x61(%rdx),%ebp
   2b26e:	40 80 fd 1a          	cmp    $0x1a,%bpl
   2b272:	73 05                	jae    2b279 <rustc_demangle::v0::Parser::skip_path+0x189>
   2b274:	80 c2 a9             	add    $0xa9,%dl
   2b277:	eb 10                	jmp    2b289 <rustc_demangle::v0::Parser::skip_path+0x199>
   2b279:	8d 6a bf             	lea    -0x41(%rdx),%ebp
   2b27c:	40 80 fd 1a          	cmp    $0x1a,%bpl
   2b280:	0f 83 7f 03 00 00    	jae    2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b286:	80 c2 e3             	add    $0xe3,%dl
   2b289:	89 d5                	mov    %edx,%ebp
   2b28b:	48 83 c7 01          	add    $0x1,%rdi
   2b28f:	49 89 3c 24          	mov    %rdi,(%r12)
   2b293:	49 f7 e7             	mul    %r15
   2b296:	0f 80 69 03 00 00    	jo     2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b29c:	40 0f b6 d5          	movzbl %bpl,%edx
   2b2a0:	48 01 d0             	add    %rdx,%rax
   2b2a3:	73 ab                	jae    2b250 <rustc_demangle::v0::Parser::skip_path+0x160>
   2b2a5:	e9 5b 03 00 00       	jmpq   2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b2aa:	48 83 c7 01          	add    $0x1,%rdi
   2b2ae:	49 89 3c 24          	mov    %rdi,(%r12)
   2b2b2:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   2b2b6:	0f 85 19 ff ff ff    	jne    2b1d5 <rustc_demangle::v0::Parser::skip_path+0xe5>
   2b2bc:	e9 44 03 00 00       	jmpq   2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b2c1:	48 39 c6             	cmp    %rax,%rsi
   2b2c4:	0f 86 2f 03 00 00    	jbe    2b5f9 <rustc_demangle::v0::Parser::skip_path+0x509>
   2b2ca:	80 3c 01 73          	cmpb   $0x73,(%rcx,%rax,1)
   2b2ce:	0f 85 25 03 00 00    	jne    2b5f9 <rustc_demangle::v0::Parser::skip_path+0x509>
   2b2d4:	48 8d 6f 02          	lea    0x2(%rdi),%rbp
   2b2d8:	49 89 2c 24          	mov    %rbp,(%r12)
   2b2dc:	48 39 ee             	cmp    %rbp,%rsi
   2b2df:	0f 86 b5 01 00 00    	jbe    2b49a <rustc_demangle::v0::Parser::skip_path+0x3aa>
   2b2e5:	80 3c 29 5f          	cmpb   $0x5f,(%rcx,%rbp,1)
   2b2e9:	0f 85 ab 01 00 00    	jne    2b49a <rustc_demangle::v0::Parser::skip_path+0x3aa>
   2b2ef:	48 83 c7 03          	add    $0x3,%rdi
   2b2f3:	49 89 3c 24          	mov    %rdi,(%r12)
   2b2f7:	e9 fd 02 00 00       	jmpq   2b5f9 <rustc_demangle::v0::Parser::skip_path+0x509>
   2b2fc:	48 39 c6             	cmp    %rax,%rsi
   2b2ff:	0f 86 00 03 00 00    	jbe    2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b305:	8a 44 39 01          	mov    0x1(%rcx,%rdi,1),%al
   2b309:	48 83 c7 02          	add    $0x2,%rdi
   2b30d:	49 89 3c 24          	mov    %rdi,(%r12)
   2b311:	8d 48 bf             	lea    -0x41(%rax),%ecx
   2b314:	80 f9 1a             	cmp    $0x1a,%cl
   2b317:	72 0a                	jb     2b323 <rustc_demangle::v0::Parser::skip_path+0x233>
   2b319:	04 9f                	add    $0x9f,%al
   2b31b:	3c 19                	cmp    $0x19,%al
   2b31d:	0f 87 e2 02 00 00    	ja     2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b323:	48 89 df             	mov    %rbx,%rdi
   2b326:	e8 c5 fd ff ff       	callq  2b0f0 <rustc_demangle::v0::Parser::skip_path>
   2b32b:	84 c0                	test   %al,%al
   2b32d:	0f 85 d2 02 00 00    	jne    2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b333:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
   2b337:	48 8b 43 10          	mov    0x10(%rbx),%rax
   2b33b:	48 39 c1             	cmp    %rax,%rcx
   2b33e:	0f 86 4d 02 00 00    	jbe    2b591 <rustc_demangle::v0::Parser::skip_path+0x4a1>
   2b344:	48 8b 33             	mov    (%rbx),%rsi
   2b347:	80 3c 06 73          	cmpb   $0x73,(%rsi,%rax,1)
   2b34b:	0f 85 40 02 00 00    	jne    2b591 <rustc_demangle::v0::Parser::skip_path+0x4a1>
   2b351:	48 8d 78 01          	lea    0x1(%rax),%rdi
   2b355:	49 89 3c 24          	mov    %rdi,(%r12)
   2b359:	48 39 f9             	cmp    %rdi,%rcx
   2b35c:	0f 86 d4 02 00 00    	jbe    2b636 <rustc_demangle::v0::Parser::skip_path+0x546>
   2b362:	80 3c 3e 5f          	cmpb   $0x5f,(%rsi,%rdi,1)
   2b366:	0f 85 ca 02 00 00    	jne    2b636 <rustc_demangle::v0::Parser::skip_path+0x546>
   2b36c:	48 83 c0 02          	add    $0x2,%rax
   2b370:	49 89 04 24          	mov    %rax,(%r12)
   2b374:	e9 18 02 00 00       	jmpq   2b591 <rustc_demangle::v0::Parser::skip_path+0x4a1>
   2b379:	48 39 c6             	cmp    %rax,%rsi
   2b37c:	0f 86 38 02 00 00    	jbe    2b5ba <rustc_demangle::v0::Parser::skip_path+0x4ca>
   2b382:	80 3c 01 73          	cmpb   $0x73,(%rcx,%rax,1)
   2b386:	0f 85 2e 02 00 00    	jne    2b5ba <rustc_demangle::v0::Parser::skip_path+0x4ca>
   2b38c:	48 8d 6f 02          	lea    0x2(%rdi),%rbp
   2b390:	49 89 2c 24          	mov    %rbp,(%r12)
   2b394:	48 39 ee             	cmp    %rbp,%rsi
   2b397:	0f 86 63 01 00 00    	jbe    2b500 <rustc_demangle::v0::Parser::skip_path+0x410>
   2b39d:	80 3c 29 5f          	cmpb   $0x5f,(%rcx,%rbp,1)
   2b3a1:	0f 85 59 01 00 00    	jne    2b500 <rustc_demangle::v0::Parser::skip_path+0x410>
   2b3a7:	48 83 c7 03          	add    $0x3,%rdi
   2b3ab:	49 89 3c 24          	mov    %rdi,(%r12)
   2b3af:	e9 06 02 00 00       	jmpq   2b5ba <rustc_demangle::v0::Parser::skip_path+0x4ca>
   2b3b4:	48 89 c6             	mov    %rax,%rsi
   2b3b7:	48 8d 6f 02          	lea    0x2(%rdi),%rbp
   2b3bb:	bb 01 00 00 00       	mov    $0x1,%ebx
   2b3c0:	48 29 f3             	sub    %rsi,%rbx
   2b3c3:	31 c0                	xor    %eax,%eax
   2b3c5:	41 b8 3e 00 00 00    	mov    $0x3e,%r8d
   2b3cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   2b3d0:	48 8d 14 2b          	lea    (%rbx,%rbp,1),%rdx
   2b3d4:	48 83 fa 02          	cmp    $0x2,%rdx
   2b3d8:	0f 84 27 02 00 00    	je     2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b3de:	0f b6 54 29 ff       	movzbl -0x1(%rcx,%rbp,1),%edx
   2b3e3:	80 fa 5f             	cmp    $0x5f,%dl
   2b3e6:	0f 84 7a 01 00 00    	je     2b566 <rustc_demangle::v0::Parser::skip_path+0x476>
   2b3ec:	8d 72 d0             	lea    -0x30(%rdx),%esi
   2b3ef:	40 80 fe 0a          	cmp    $0xa,%sil
   2b3f3:	72 20                	jb     2b415 <rustc_demangle::v0::Parser::skip_path+0x325>
   2b3f5:	8d 72 9f             	lea    -0x61(%rdx),%esi
   2b3f8:	40 80 fe 1a          	cmp    $0x1a,%sil
   2b3fc:	73 05                	jae    2b403 <rustc_demangle::v0::Parser::skip_path+0x313>
   2b3fe:	80 c2 a9             	add    $0xa9,%dl
   2b401:	eb 10                	jmp    2b413 <rustc_demangle::v0::Parser::skip_path+0x323>
   2b403:	8d 72 bf             	lea    -0x41(%rdx),%esi
   2b406:	40 80 fe 1a          	cmp    $0x1a,%sil
   2b40a:	0f 83 f5 01 00 00    	jae    2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b410:	80 c2 e3             	add    $0xe3,%dl
   2b413:	89 d6                	mov    %edx,%esi
   2b415:	49 89 2c 24          	mov    %rbp,(%r12)
   2b419:	49 f7 e0             	mul    %r8
   2b41c:	0f 80 e3 01 00 00    	jo     2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b422:	40 0f b6 d6          	movzbl %sil,%edx
   2b426:	48 83 c5 01          	add    $0x1,%rbp
   2b42a:	48 01 d0             	add    %rdx,%rax
   2b42d:	73 a1                	jae    2b3d0 <rustc_demangle::v0::Parser::skip_path+0x2e0>
   2b42f:	e9 d1 01 00 00       	jmpq   2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b434:	31 c0                	xor    %eax,%eax
   2b436:	41 b8 3e 00 00 00    	mov    $0x3e,%r8d
   2b43c:	48 39 ee             	cmp    %rbp,%rsi
   2b43f:	0f 86 c0 01 00 00    	jbe    2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b445:	0f b6 14 29          	movzbl (%rcx,%rbp,1),%edx
   2b449:	80 fa 5f             	cmp    $0x5f,%dl
   2b44c:	0f 84 2c 01 00 00    	je     2b57e <rustc_demangle::v0::Parser::skip_path+0x48e>
   2b452:	8d 7a d0             	lea    -0x30(%rdx),%edi
   2b455:	40 80 ff 0a          	cmp    $0xa,%dil
   2b459:	72 20                	jb     2b47b <rustc_demangle::v0::Parser::skip_path+0x38b>
   2b45b:	8d 7a 9f             	lea    -0x61(%rdx),%edi
   2b45e:	40 80 ff 1a          	cmp    $0x1a,%dil
   2b462:	73 05                	jae    2b469 <rustc_demangle::v0::Parser::skip_path+0x379>
   2b464:	80 c2 a9             	add    $0xa9,%dl
   2b467:	eb 10                	jmp    2b479 <rustc_demangle::v0::Parser::skip_path+0x389>
   2b469:	8d 7a bf             	lea    -0x41(%rdx),%edi
   2b46c:	40 80 ff 1a          	cmp    $0x1a,%dil
   2b470:	0f 83 8f 01 00 00    	jae    2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b476:	80 c2 e3             	add    $0xe3,%dl
   2b479:	89 d7                	mov    %edx,%edi
   2b47b:	48 83 c5 01          	add    $0x1,%rbp
   2b47f:	49 89 2c 24          	mov    %rbp,(%r12)
   2b483:	49 f7 e0             	mul    %r8
   2b486:	0f 80 79 01 00 00    	jo     2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b48c:	40 0f b6 d7          	movzbl %dil,%edx
   2b490:	48 01 d0             	add    %rdx,%rax
   2b493:	73 a7                	jae    2b43c <rustc_demangle::v0::Parser::skip_path+0x34c>
   2b495:	e9 6b 01 00 00       	jmpq   2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b49a:	31 c0                	xor    %eax,%eax
   2b49c:	41 b8 3e 00 00 00    	mov    $0x3e,%r8d
   2b4a2:	48 39 ee             	cmp    %rbp,%rsi
   2b4a5:	0f 86 5a 01 00 00    	jbe    2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b4ab:	0f b6 14 29          	movzbl (%rcx,%rbp,1),%edx
   2b4af:	80 fa 5f             	cmp    $0x5f,%dl
   2b4b2:	0f 84 2e 01 00 00    	je     2b5e6 <rustc_demangle::v0::Parser::skip_path+0x4f6>
   2b4b8:	8d 7a d0             	lea    -0x30(%rdx),%edi
   2b4bb:	40 80 ff 0a          	cmp    $0xa,%dil
   2b4bf:	72 20                	jb     2b4e1 <rustc_demangle::v0::Parser::skip_path+0x3f1>
   2b4c1:	8d 7a 9f             	lea    -0x61(%rdx),%edi
   2b4c4:	40 80 ff 1a          	cmp    $0x1a,%dil
   2b4c8:	73 05                	jae    2b4cf <rustc_demangle::v0::Parser::skip_path+0x3df>
   2b4ca:	80 c2 a9             	add    $0xa9,%dl
   2b4cd:	eb 10                	jmp    2b4df <rustc_demangle::v0::Parser::skip_path+0x3ef>
   2b4cf:	8d 7a bf             	lea    -0x41(%rdx),%edi
   2b4d2:	40 80 ff 1a          	cmp    $0x1a,%dil
   2b4d6:	0f 83 29 01 00 00    	jae    2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b4dc:	80 c2 e3             	add    $0xe3,%dl
   2b4df:	89 d7                	mov    %edx,%edi
   2b4e1:	48 83 c5 01          	add    $0x1,%rbp
   2b4e5:	49 89 2c 24          	mov    %rbp,(%r12)
   2b4e9:	49 f7 e0             	mul    %r8
   2b4ec:	0f 80 13 01 00 00    	jo     2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b4f2:	40 0f b6 d7          	movzbl %dil,%edx
   2b4f6:	48 01 d0             	add    %rdx,%rax
   2b4f9:	73 a7                	jae    2b4a2 <rustc_demangle::v0::Parser::skip_path+0x3b2>
   2b4fb:	e9 05 01 00 00       	jmpq   2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b500:	31 c0                	xor    %eax,%eax
   2b502:	41 b8 3e 00 00 00    	mov    $0x3e,%r8d
   2b508:	48 39 ee             	cmp    %rbp,%rsi
   2b50b:	0f 86 f4 00 00 00    	jbe    2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b511:	0f b6 14 29          	movzbl (%rcx,%rbp,1),%edx
   2b515:	80 fa 5f             	cmp    $0x5f,%dl
   2b518:	0f 84 89 00 00 00    	je     2b5a7 <rustc_demangle::v0::Parser::skip_path+0x4b7>
   2b51e:	8d 7a d0             	lea    -0x30(%rdx),%edi
   2b521:	40 80 ff 0a          	cmp    $0xa,%dil
   2b525:	72 20                	jb     2b547 <rustc_demangle::v0::Parser::skip_path+0x457>
   2b527:	8d 7a 9f             	lea    -0x61(%rdx),%edi
   2b52a:	40 80 ff 1a          	cmp    $0x1a,%dil
   2b52e:	73 05                	jae    2b535 <rustc_demangle::v0::Parser::skip_path+0x445>
   2b530:	80 c2 a9             	add    $0xa9,%dl
   2b533:	eb 10                	jmp    2b545 <rustc_demangle::v0::Parser::skip_path+0x455>
   2b535:	8d 7a bf             	lea    -0x41(%rdx),%edi
   2b538:	40 80 ff 1a          	cmp    $0x1a,%dil
   2b53c:	0f 83 c3 00 00 00    	jae    2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b542:	80 c2 e3             	add    $0xe3,%dl
   2b545:	89 d7                	mov    %edx,%edi
   2b547:	48 83 c5 01          	add    $0x1,%rbp
   2b54b:	49 89 2c 24          	mov    %rbp,(%r12)
   2b54f:	49 f7 e0             	mul    %r8
   2b552:	0f 80 ad 00 00 00    	jo     2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b558:	40 0f b6 d7          	movzbl %dil,%edx
   2b55c:	48 01 d0             	add    %rdx,%rax
   2b55f:	73 a7                	jae    2b508 <rustc_demangle::v0::Parser::skip_path+0x418>
   2b561:	e9 9f 00 00 00       	jmpq   2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b566:	49 89 2c 24          	mov    %rbp,(%r12)
   2b56a:	48 ff c0             	inc    %rax
   2b56d:	0f 84 92 00 00 00    	je     2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b573:	48 39 f8             	cmp    %rdi,%rax
   2b576:	0f 93 c0             	setae  %al
   2b579:	e9 8a 00 00 00       	jmpq   2b608 <rustc_demangle::v0::Parser::skip_path+0x518>
   2b57e:	48 83 c5 01          	add    $0x1,%rbp
   2b582:	49 89 2c 24          	mov    %rbp,(%r12)
   2b586:	48 ff c0             	inc    %rax
   2b589:	74 7a                	je     2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b58b:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   2b58f:	74 74                	je     2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b591:	48 89 e7             	mov    %rsp,%rdi
   2b594:	48 89 de             	mov    %rbx,%rsi
   2b597:	e8 04 f9 ff ff       	callq  2aea0 <rustc_demangle::v0::Parser::ident>
   2b59c:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
   2b5a1:	41 0f 94 c6          	sete   %r14b
   2b5a5:	eb 5e                	jmp    2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b5a7:	48 83 c5 01          	add    $0x1,%rbp
   2b5ab:	49 89 2c 24          	mov    %rbp,(%r12)
   2b5af:	48 ff c0             	inc    %rax
   2b5b2:	74 51                	je     2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b5b4:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   2b5b8:	74 4b                	je     2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b5ba:	48 89 df             	mov    %rbx,%rdi
   2b5bd:	e8 2e fb ff ff       	callq  2b0f0 <rustc_demangle::v0::Parser::skip_path>
   2b5c2:	84 c0                	test   %al,%al
   2b5c4:	75 3f                	jne    2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b5c6:	48 89 df             	mov    %rbx,%rdi
   2b5c9:	e8 e2 00 00 00       	callq  2b6b0 <rustc_demangle::v0::Parser::skip_type>
   2b5ce:	84 c0                	test   %al,%al
   2b5d0:	75 33                	jne    2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b5d2:	48 89 df             	mov    %rbx,%rdi
   2b5d5:	48 83 c4 20          	add    $0x20,%rsp
   2b5d9:	5b                   	pop    %rbx
   2b5da:	41 5c                	pop    %r12
   2b5dc:	41 5e                	pop    %r14
   2b5de:	41 5f                	pop    %r15
   2b5e0:	5d                   	pop    %rbp
   2b5e1:	e9 0a fb ff ff       	jmpq   2b0f0 <rustc_demangle::v0::Parser::skip_path>
   2b5e6:	48 83 c5 01          	add    $0x1,%rbp
   2b5ea:	49 89 2c 24          	mov    %rbp,(%r12)
   2b5ee:	48 ff c0             	inc    %rax
   2b5f1:	74 12                	je     2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b5f3:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   2b5f7:	74 0c                	je     2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b5f9:	48 89 df             	mov    %rbx,%rdi
   2b5fc:	e8 ef fa ff ff       	callq  2b0f0 <rustc_demangle::v0::Parser::skip_path>
   2b601:	84 c0                	test   %al,%al
   2b603:	74 10                	je     2b615 <rustc_demangle::v0::Parser::skip_path+0x525>
   2b605:	44 89 f0             	mov    %r14d,%eax
   2b608:	48 83 c4 20          	add    $0x20,%rsp
   2b60c:	5b                   	pop    %rbx
   2b60d:	41 5c                	pop    %r12
   2b60f:	41 5e                	pop    %r14
   2b611:	41 5f                	pop    %r15
   2b613:	5d                   	pop    %rbp
   2b614:	c3                   	retq   
   2b615:	48 89 df             	mov    %rbx,%rdi
   2b618:	48 83 c4 20          	add    $0x20,%rsp
   2b61c:	5b                   	pop    %rbx
   2b61d:	41 5c                	pop    %r12
   2b61f:	41 5e                	pop    %r14
   2b621:	41 5f                	pop    %r15
   2b623:	5d                   	pop    %rbp
   2b624:	e9 87 00 00 00       	jmpq   2b6b0 <rustc_demangle::v0::Parser::skip_type>
   2b629:	48 83 c0 01          	add    $0x1,%rax
   2b62d:	49 89 04 24          	mov    %rax,(%r12)
   2b631:	45 31 f6             	xor    %r14d,%r14d
   2b634:	eb cf                	jmp    2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b636:	31 c0                	xor    %eax,%eax
   2b638:	41 b8 3e 00 00 00    	mov    $0x3e,%r8d
   2b63e:	48 39 f9             	cmp    %rdi,%rcx
   2b641:	76 c2                	jbe    2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b643:	0f b6 14 3e          	movzbl (%rsi,%rdi,1),%edx
   2b647:	80 fa 5f             	cmp    $0x5f,%dl
   2b64a:	74 40                	je     2b68c <rustc_demangle::v0::Parser::skip_path+0x59c>
   2b64c:	8d 6a d0             	lea    -0x30(%rdx),%ebp
   2b64f:	40 80 fd 0a          	cmp    $0xa,%bpl
   2b653:	72 1c                	jb     2b671 <rustc_demangle::v0::Parser::skip_path+0x581>
   2b655:	8d 6a 9f             	lea    -0x61(%rdx),%ebp
   2b658:	40 80 fd 1a          	cmp    $0x1a,%bpl
   2b65c:	73 05                	jae    2b663 <rustc_demangle::v0::Parser::skip_path+0x573>
   2b65e:	80 c2 a9             	add    $0xa9,%dl
   2b661:	eb 0c                	jmp    2b66f <rustc_demangle::v0::Parser::skip_path+0x57f>
   2b663:	8d 6a bf             	lea    -0x41(%rdx),%ebp
   2b666:	40 80 fd 1a          	cmp    $0x1a,%bpl
   2b66a:	73 99                	jae    2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b66c:	80 c2 e3             	add    $0xe3,%dl
   2b66f:	89 d5                	mov    %edx,%ebp
   2b671:	48 83 c7 01          	add    $0x1,%rdi
   2b675:	49 89 3c 24          	mov    %rdi,(%r12)
   2b679:	49 f7 e0             	mul    %r8
   2b67c:	70 87                	jo     2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b67e:	40 0f b6 d5          	movzbl %bpl,%edx
   2b682:	48 01 d0             	add    %rdx,%rax
   2b685:	73 b7                	jae    2b63e <rustc_demangle::v0::Parser::skip_path+0x54e>
   2b687:	e9 79 ff ff ff       	jmpq   2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b68c:	48 83 c7 01          	add    $0x1,%rdi
   2b690:	49 89 3c 24          	mov    %rdi,(%r12)
   2b694:	48 ff c0             	inc    %rax
   2b697:	0f 85 ee fe ff ff    	jne    2b58b <rustc_demangle::v0::Parser::skip_path+0x49b>
   2b69d:	e9 63 ff ff ff       	jmpq   2b605 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b6a2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2b6a9:	00 00 00 
   2b6ac:	0f 1f 40 00          	nopl   0x0(%rax)

000000000002b6b0 <rustc_demangle::v0::Parser::skip_type>:
   2b6b0:	41 57                	push   %r15
   2b6b2:	41 56                	push   %r14
   2b6b4:	53                   	push   %rbx
   2b6b5:	48 83 ec 20          	sub    $0x20,%rsp
   2b6b9:	4c 8b 5f 08          	mov    0x8(%rdi),%r11
   2b6bd:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
   2b6c1:	49 39 cb             	cmp    %rcx,%r11
   2b6c4:	0f 86 d2 03 00 00    	jbe    2ba9c <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2b6ca:	48 89 fb             	mov    %rdi,%rbx
   2b6cd:	4c 8b 07             	mov    (%rdi),%r8
   2b6d0:	41 8a 14 08          	mov    (%r8,%rcx,1),%dl
   2b6d4:	48 8d 71 01          	lea    0x1(%rcx),%rsi
   2b6d8:	48 89 77 10          	mov    %rsi,0x10(%rdi)
   2b6dc:	80 c2 bf             	add    $0xbf,%dl
   2b6df:	80 fa 39             	cmp    $0x39,%dl
   2b6e2:	0f 87 d3 00 00 00    	ja     2b7bb <rustc_demangle::v0::Parser::skip_type+0x10b>
   2b6e8:	4c 8d 7b 10          	lea    0x10(%rbx),%r15
   2b6ec:	31 c0                	xor    %eax,%eax
   2b6ee:	0f b6 d2             	movzbl %dl,%edx
   2b6f1:	48 8d 3d 1c de 00 00 	lea    0xde1c(%rip),%rdi        # 39514 <str.6+0x21f4>
   2b6f8:	48 63 14 97          	movslq (%rdi,%rdx,4),%rdx
   2b6fc:	48 01 fa             	add    %rdi,%rdx
   2b6ff:	ff e2                	jmpq   *%rdx
   2b701:	49 39 f3             	cmp    %rsi,%r11
   2b704:	0f 86 41 04 00 00    	jbe    2bb4b <rustc_demangle::v0::Parser::skip_type+0x49b>
   2b70a:	41 80 3c 30 4c       	cmpb   $0x4c,(%r8,%rsi,1)
   2b70f:	0f 85 36 04 00 00    	jne    2bb4b <rustc_demangle::v0::Parser::skip_type+0x49b>
   2b715:	48 8d 71 02          	lea    0x2(%rcx),%rsi
   2b719:	49 89 37             	mov    %rsi,(%r15)
   2b71c:	49 39 f3             	cmp    %rsi,%r11
   2b71f:	0f 86 a5 01 00 00    	jbe    2b8ca <rustc_demangle::v0::Parser::skip_type+0x21a>
   2b725:	41 80 3c 30 5f       	cmpb   $0x5f,(%r8,%rsi,1)
   2b72a:	0f 85 9a 01 00 00    	jne    2b8ca <rustc_demangle::v0::Parser::skip_type+0x21a>
   2b730:	48 83 c1 03          	add    $0x3,%rcx
   2b734:	49 89 0f             	mov    %rcx,(%r15)
   2b737:	e9 0f 04 00 00       	jmpq   2bb4b <rustc_demangle::v0::Parser::skip_type+0x49b>
   2b73c:	0f 1f 40 00          	nopl   0x0(%rax)
   2b740:	48 89 df             	mov    %rbx,%rdi
   2b743:	e8 68 ff ff ff       	callq  2b6b0 <rustc_demangle::v0::Parser::skip_type>
   2b748:	84 c0                	test   %al,%al
   2b74a:	0f 85 4c 03 00 00    	jne    2ba9c <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2b750:	4c 8b 5b 08          	mov    0x8(%rbx),%r11
   2b754:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   2b758:	49 39 f3             	cmp    %rsi,%r11
   2b75b:	76 e3                	jbe    2b740 <rustc_demangle::v0::Parser::skip_type+0x90>
   2b75d:	48 8b 03             	mov    (%rbx),%rax
   2b760:	80 3c 30 45          	cmpb   $0x45,(%rax,%rsi,1)
   2b764:	75 da                	jne    2b740 <rustc_demangle::v0::Parser::skip_type+0x90>
   2b766:	48 83 c6 01          	add    $0x1,%rsi
   2b76a:	49 89 37             	mov    %rsi,(%r15)
   2b76d:	31 c0                	xor    %eax,%eax
   2b76f:	e9 2a 03 00 00       	jmpq   2ba9e <rustc_demangle::v0::Parser::skip_type+0x3ee>
   2b774:	48 89 df             	mov    %rbx,%rdi
   2b777:	e8 34 ff ff ff       	callq  2b6b0 <rustc_demangle::v0::Parser::skip_type>
   2b77c:	89 c1                	mov    %eax,%ecx
   2b77e:	b0 01                	mov    $0x1,%al
   2b780:	84 c9                	test   %cl,%cl
   2b782:	0f 85 16 03 00 00    	jne    2ba9e <rustc_demangle::v0::Parser::skip_type+0x3ee>
   2b788:	48 89 df             	mov    %rbx,%rdi
   2b78b:	48 83 c4 20          	add    $0x20,%rsp
   2b78f:	5b                   	pop    %rbx
   2b790:	41 5e                	pop    %r14
   2b792:	41 5f                	pop    %r15
   2b794:	e9 77 04 00 00       	jmpq   2bc10 <rustc_demangle::v0::Parser::skip_const>
   2b799:	49 39 f3             	cmp    %rsi,%r11
   2b79c:	0f 86 aa 00 00 00    	jbe    2b84c <rustc_demangle::v0::Parser::skip_type+0x19c>
   2b7a2:	41 80 3c 30 5f       	cmpb   $0x5f,(%r8,%rsi,1)
   2b7a7:	0f 85 a2 00 00 00    	jne    2b84f <rustc_demangle::v0::Parser::skip_type+0x19f>
   2b7ad:	48 8d 41 02          	lea    0x2(%rcx),%rax
   2b7b1:	49 89 07             	mov    %rax,(%r15)
   2b7b4:	31 d2                	xor    %edx,%edx
   2b7b6:	e9 4a 02 00 00       	jmpq   2ba05 <rustc_demangle::v0::Parser::skip_type+0x355>
   2b7bb:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
   2b7bf:	48 89 df             	mov    %rbx,%rdi
   2b7c2:	48 83 c4 20          	add    $0x20,%rsp
   2b7c6:	5b                   	pop    %rbx
   2b7c7:	41 5e                	pop    %r14
   2b7c9:	41 5f                	pop    %r15
   2b7cb:	e9 20 f9 ff ff       	jmpq   2b0f0 <rustc_demangle::v0::Parser::skip_path>
   2b7d0:	49 39 f3             	cmp    %rsi,%r11
   2b7d3:	0f 86 5e 02 00 00    	jbe    2ba37 <rustc_demangle::v0::Parser::skip_type+0x387>
   2b7d9:	41 80 3c 30 47       	cmpb   $0x47,(%r8,%rsi,1)
   2b7de:	0f 85 53 02 00 00    	jne    2ba37 <rustc_demangle::v0::Parser::skip_type+0x387>
   2b7e4:	48 8d 71 02          	lea    0x2(%rcx),%rsi
   2b7e8:	49 89 37             	mov    %rsi,(%r15)
   2b7eb:	49 39 f3             	cmp    %rsi,%r11
   2b7ee:	0f 86 3f 01 00 00    	jbe    2b933 <rustc_demangle::v0::Parser::skip_type+0x283>
   2b7f4:	41 80 3c 30 5f       	cmpb   $0x5f,(%r8,%rsi,1)
   2b7f9:	0f 85 34 01 00 00    	jne    2b933 <rustc_demangle::v0::Parser::skip_type+0x283>
   2b7ff:	48 83 c1 03          	add    $0x3,%rcx
   2b803:	49 89 0f             	mov    %rcx,(%r15)
   2b806:	48 89 ce             	mov    %rcx,%rsi
   2b809:	e9 29 02 00 00       	jmpq   2ba37 <rustc_demangle::v0::Parser::skip_type+0x387>
   2b80e:	49 39 f3             	cmp    %rsi,%r11
   2b811:	0f 86 a3 02 00 00    	jbe    2baba <rustc_demangle::v0::Parser::skip_type+0x40a>
   2b817:	41 80 3c 30 47       	cmpb   $0x47,(%r8,%rsi,1)
   2b81c:	0f 85 98 02 00 00    	jne    2baba <rustc_demangle::v0::Parser::skip_type+0x40a>
   2b822:	48 8d 71 02          	lea    0x2(%rcx),%rsi
   2b826:	49 89 37             	mov    %rsi,(%r15)
   2b829:	49 39 f3             	cmp    %rsi,%r11
   2b82c:	0f 86 63 01 00 00    	jbe    2b995 <rustc_demangle::v0::Parser::skip_type+0x2e5>
   2b832:	41 80 3c 30 5f       	cmpb   $0x5f,(%r8,%rsi,1)
   2b837:	0f 85 58 01 00 00    	jne    2b995 <rustc_demangle::v0::Parser::skip_type+0x2e5>
   2b83d:	48 83 c1 03          	add    $0x3,%rcx
   2b841:	49 89 0f             	mov    %rcx,(%r15)
   2b844:	48 89 ce             	mov    %rcx,%rsi
   2b847:	e9 6e 02 00 00       	jmpq   2baba <rustc_demangle::v0::Parser::skip_type+0x40a>
   2b84c:	49 89 f3             	mov    %rsi,%r11
   2b84f:	48 8d 71 02          	lea    0x2(%rcx),%rsi
   2b853:	bb 01 00 00 00       	mov    $0x1,%ebx
   2b858:	4c 29 db             	sub    %r11,%rbx
   2b85b:	31 d2                	xor    %edx,%edx
   2b85d:	41 b9 3e 00 00 00    	mov    $0x3e,%r9d
   2b863:	48 8d 04 33          	lea    (%rbx,%rsi,1),%rax
   2b867:	48 83 f8 02          	cmp    $0x2,%rax
   2b86b:	0f 84 2b 02 00 00    	je     2ba9c <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2b871:	41 0f b6 44 30 ff    	movzbl -0x1(%r8,%rsi,1),%eax
   2b877:	3c 5f                	cmp    $0x5f,%al
   2b879:	0f 84 78 01 00 00    	je     2b9f7 <rustc_demangle::v0::Parser::skip_type+0x347>
   2b87f:	8d 78 d0             	lea    -0x30(%rax),%edi
   2b882:	40 80 ff 0a          	cmp    $0xa,%dil
   2b886:	72 1e                	jb     2b8a6 <rustc_demangle::v0::Parser::skip_type+0x1f6>
   2b888:	8d 78 9f             	lea    -0x61(%rax),%edi
   2b88b:	40 80 ff 1a          	cmp    $0x1a,%dil
   2b88f:	73 04                	jae    2b895 <rustc_demangle::v0::Parser::skip_type+0x1e5>
   2b891:	04 a9                	add    $0xa9,%al
   2b893:	eb 0f                	jmp    2b8a4 <rustc_demangle::v0::Parser::skip_type+0x1f4>
   2b895:	8d 78 bf             	lea    -0x41(%rax),%edi
   2b898:	40 80 ff 1a          	cmp    $0x1a,%dil
   2b89c:	0f 83 fa 01 00 00    	jae    2ba9c <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2b8a2:	04 e3                	add    $0xe3,%al
   2b8a4:	89 c7                	mov    %eax,%edi
   2b8a6:	49 89 37             	mov    %rsi,(%r15)
   2b8a9:	48 89 d0             	mov    %rdx,%rax
   2b8ac:	49 f7 e1             	mul    %r9
   2b8af:	0f 80 e7 01 00 00    	jo     2ba9c <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2b8b5:	48 89 c2             	mov    %rax,%rdx
   2b8b8:	40 0f b6 c7          	movzbl %dil,%eax
   2b8bc:	48 83 c6 01          	add    $0x1,%rsi
   2b8c0:	48 01 c2             	add    %rax,%rdx
   2b8c3:	73 9e                	jae    2b863 <rustc_demangle::v0::Parser::skip_type+0x1b3>
   2b8c5:	e9 d2 01 00 00       	jmpq   2ba9c <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2b8ca:	31 c9                	xor    %ecx,%ecx
   2b8cc:	41 b9 3e 00 00 00    	mov    $0x3e,%r9d
   2b8d2:	49 39 f3             	cmp    %rsi,%r11
   2b8d5:	0f 86 c1 01 00 00    	jbe    2ba9c <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2b8db:	41 0f b6 04 30       	movzbl (%r8,%rsi,1),%eax
   2b8e0:	3c 5f                	cmp    $0x5f,%al
   2b8e2:	0f 84 28 01 00 00    	je     2ba10 <rustc_demangle::v0::Parser::skip_type+0x360>
   2b8e8:	44 8d 50 d0          	lea    -0x30(%rax),%r10d
   2b8ec:	41 80 fa 0a          	cmp    $0xa,%r10b
   2b8f0:	72 1d                	jb     2b90f <rustc_demangle::v0::Parser::skip_type+0x25f>
   2b8f2:	8d 50 9f             	lea    -0x61(%rax),%edx
   2b8f5:	80 fa 1a             	cmp    $0x1a,%dl
   2b8f8:	73 04                	jae    2b8fe <rustc_demangle::v0::Parser::skip_type+0x24e>
   2b8fa:	04 a9                	add    $0xa9,%al
   2b8fc:	eb 0e                	jmp    2b90c <rustc_demangle::v0::Parser::skip_type+0x25c>
   2b8fe:	8d 50 bf             	lea    -0x41(%rax),%edx
   2b901:	80 fa 1a             	cmp    $0x1a,%dl
   2b904:	0f 83 92 01 00 00    	jae    2ba9c <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2b90a:	04 e3                	add    $0xe3,%al
   2b90c:	41 89 c2             	mov    %eax,%r10d
   2b90f:	48 83 c6 01          	add    $0x1,%rsi
   2b913:	49 89 37             	mov    %rsi,(%r15)
   2b916:	48 89 c8             	mov    %rcx,%rax
   2b919:	49 f7 e1             	mul    %r9
   2b91c:	0f 80 7a 01 00 00    	jo     2ba9c <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2b922:	48 89 c1             	mov    %rax,%rcx
   2b925:	41 0f b6 c2          	movzbl %r10b,%eax
   2b929:	48 01 c1             	add    %rax,%rcx
   2b92c:	73 a4                	jae    2b8d2 <rustc_demangle::v0::Parser::skip_type+0x222>
   2b92e:	e9 69 01 00 00       	jmpq   2ba9c <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2b933:	31 c0                	xor    %eax,%eax
   2b935:	41 b9 3e 00 00 00    	mov    $0x3e,%r9d
   2b93b:	49 39 f3             	cmp    %rsi,%r11
   2b93e:	0f 86 58 01 00 00    	jbe    2ba9c <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2b944:	41 0f b6 14 30       	movzbl (%r8,%rsi,1),%edx
   2b949:	80 fa 5f             	cmp    $0x5f,%dl
   2b94c:	0f 84 d3 00 00 00    	je     2ba25 <rustc_demangle::v0::Parser::skip_type+0x375>
   2b952:	8d 4a d0             	lea    -0x30(%rdx),%ecx
   2b955:	80 f9 0a             	cmp    $0xa,%cl
   2b958:	72 1e                	jb     2b978 <rustc_demangle::v0::Parser::skip_type+0x2c8>
   2b95a:	8d 4a 9f             	lea    -0x61(%rdx),%ecx
   2b95d:	80 f9 1a             	cmp    $0x1a,%cl
   2b960:	73 05                	jae    2b967 <rustc_demangle::v0::Parser::skip_type+0x2b7>
   2b962:	80 c2 a9             	add    $0xa9,%dl
   2b965:	eb 0f                	jmp    2b976 <rustc_demangle::v0::Parser::skip_type+0x2c6>
   2b967:	8d 4a bf             	lea    -0x41(%rdx),%ecx
   2b96a:	80 f9 1a             	cmp    $0x1a,%cl
   2b96d:	0f 83 29 01 00 00    	jae    2ba9c <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2b973:	80 c2 e3             	add    $0xe3,%dl
   2b976:	89 d1                	mov    %edx,%ecx
   2b978:	48 83 c6 01          	add    $0x1,%rsi
   2b97c:	49 89 37             	mov    %rsi,(%r15)
   2b97f:	49 f7 e1             	mul    %r9
   2b982:	0f 80 14 01 00 00    	jo     2ba9c <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2b988:	0f b6 c9             	movzbl %cl,%ecx
   2b98b:	48 01 c8             	add    %rcx,%rax
   2b98e:	73 ab                	jae    2b93b <rustc_demangle::v0::Parser::skip_type+0x28b>
   2b990:	e9 07 01 00 00       	jmpq   2ba9c <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2b995:	31 c0                	xor    %eax,%eax
   2b997:	41 b9 3e 00 00 00    	mov    $0x3e,%r9d
   2b99d:	49 39 f3             	cmp    %rsi,%r11
   2b9a0:	0f 86 f6 00 00 00    	jbe    2ba9c <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2b9a6:	41 0f b6 14 30       	movzbl (%r8,%rsi,1),%edx
   2b9ab:	80 fa 5f             	cmp    $0x5f,%dl
   2b9ae:	0f 84 f4 00 00 00    	je     2baa8 <rustc_demangle::v0::Parser::skip_type+0x3f8>
   2b9b4:	8d 4a d0             	lea    -0x30(%rdx),%ecx
   2b9b7:	80 f9 0a             	cmp    $0xa,%cl
   2b9ba:	72 1e                	jb     2b9da <rustc_demangle::v0::Parser::skip_type+0x32a>
   2b9bc:	8d 4a 9f             	lea    -0x61(%rdx),%ecx
   2b9bf:	80 f9 1a             	cmp    $0x1a,%cl
   2b9c2:	73 05                	jae    2b9c9 <rustc_demangle::v0::Parser::skip_type+0x319>
   2b9c4:	80 c2 a9             	add    $0xa9,%dl
   2b9c7:	eb 0f                	jmp    2b9d8 <rustc_demangle::v0::Parser::skip_type+0x328>
   2b9c9:	8d 4a bf             	lea    -0x41(%rdx),%ecx
   2b9cc:	80 f9 1a             	cmp    $0x1a,%cl
   2b9cf:	0f 83 c7 00 00 00    	jae    2ba9c <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2b9d5:	80 c2 e3             	add    $0xe3,%dl
   2b9d8:	89 d1                	mov    %edx,%ecx
   2b9da:	48 83 c6 01          	add    $0x1,%rsi
   2b9de:	49 89 37             	mov    %rsi,(%r15)
   2b9e1:	49 f7 e1             	mul    %r9
   2b9e4:	0f 80 b2 00 00 00    	jo     2ba9c <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2b9ea:	0f b6 c9             	movzbl %cl,%ecx
   2b9ed:	48 01 c8             	add    %rcx,%rax
   2b9f0:	73 ab                	jae    2b99d <rustc_demangle::v0::Parser::skip_type+0x2ed>
   2b9f2:	e9 a5 00 00 00       	jmpq   2ba9c <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2b9f7:	49 89 37             	mov    %rsi,(%r15)
   2b9fa:	b0 01                	mov    $0x1,%al
   2b9fc:	48 ff c2             	inc    %rdx
   2b9ff:	0f 84 99 00 00 00    	je     2ba9e <rustc_demangle::v0::Parser::skip_type+0x3ee>
   2ba05:	48 39 ca             	cmp    %rcx,%rdx
   2ba08:	0f 93 c0             	setae  %al
   2ba0b:	e9 8e 00 00 00       	jmpq   2ba9e <rustc_demangle::v0::Parser::skip_type+0x3ee>
   2ba10:	48 83 c6 01          	add    $0x1,%rsi
   2ba14:	49 89 37             	mov    %rsi,(%r15)
   2ba17:	b0 01                	mov    $0x1,%al
   2ba19:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
   2ba1d:	0f 85 28 01 00 00    	jne    2bb4b <rustc_demangle::v0::Parser::skip_type+0x49b>
   2ba23:	eb 79                	jmp    2ba9e <rustc_demangle::v0::Parser::skip_type+0x3ee>
   2ba25:	48 83 c6 01          	add    $0x1,%rsi
   2ba29:	49 89 37             	mov    %rsi,(%r15)
   2ba2c:	48 ff c0             	inc    %rax
   2ba2f:	74 6b                	je     2ba9c <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2ba31:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   2ba35:	74 65                	je     2ba9c <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2ba37:	49 89 e6             	mov    %rsp,%r14
   2ba3a:	49 39 f3             	cmp    %rsi,%r11
   2ba3d:	76 0d                	jbe    2ba4c <rustc_demangle::v0::Parser::skip_type+0x39c>
   2ba3f:	48 8b 0b             	mov    (%rbx),%rcx
   2ba42:	80 3c 31 45          	cmpb   $0x45,(%rcx,%rsi,1)
   2ba46:	0f 84 10 01 00 00    	je     2bb5c <rustc_demangle::v0::Parser::skip_type+0x4ac>
   2ba4c:	48 89 df             	mov    %rbx,%rdi
   2ba4f:	e8 9c f6 ff ff       	callq  2b0f0 <rustc_demangle::v0::Parser::skip_path>
   2ba54:	84 c0                	test   %al,%al
   2ba56:	0f 85 40 00 00 00    	jne    2ba9c <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2ba5c:	0f 1f 40 00          	nopl   0x0(%rax)
   2ba60:	4c 8b 5b 08          	mov    0x8(%rbx),%r11
   2ba64:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   2ba68:	49 39 f3             	cmp    %rsi,%r11
   2ba6b:	76 cd                	jbe    2ba3a <rustc_demangle::v0::Parser::skip_type+0x38a>
   2ba6d:	48 8b 03             	mov    (%rbx),%rax
   2ba70:	80 3c 30 70          	cmpb   $0x70,(%rax,%rsi,1)
   2ba74:	75 c4                	jne    2ba3a <rustc_demangle::v0::Parser::skip_type+0x38a>
   2ba76:	48 83 c6 01          	add    $0x1,%rsi
   2ba7a:	48 89 73 10          	mov    %rsi,0x10(%rbx)
   2ba7e:	4c 89 f7             	mov    %r14,%rdi
   2ba81:	48 89 de             	mov    %rbx,%rsi
   2ba84:	e8 17 f4 ff ff       	callq  2aea0 <rustc_demangle::v0::Parser::ident>
   2ba89:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
   2ba8e:	74 0c                	je     2ba9c <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2ba90:	48 89 df             	mov    %rbx,%rdi
   2ba93:	e8 18 fc ff ff       	callq  2b6b0 <rustc_demangle::v0::Parser::skip_type>
   2ba98:	84 c0                	test   %al,%al
   2ba9a:	74 c4                	je     2ba60 <rustc_demangle::v0::Parser::skip_type+0x3b0>
   2ba9c:	b0 01                	mov    $0x1,%al
   2ba9e:	48 83 c4 20          	add    $0x20,%rsp
   2baa2:	5b                   	pop    %rbx
   2baa3:	41 5e                	pop    %r14
   2baa5:	41 5f                	pop    %r15
   2baa7:	c3                   	retq   
   2baa8:	48 83 c6 01          	add    $0x1,%rsi
   2baac:	49 89 37             	mov    %rsi,(%r15)
   2baaf:	48 ff c0             	inc    %rax
   2bab2:	74 e8                	je     2ba9c <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2bab4:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   2bab8:	74 e2                	je     2ba9c <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2baba:	49 39 f3             	cmp    %rsi,%r11
   2babd:	76 0e                	jbe    2bacd <rustc_demangle::v0::Parser::skip_type+0x41d>
   2babf:	41 80 3c 30 55       	cmpb   $0x55,(%r8,%rsi,1)
   2bac4:	75 07                	jne    2bacd <rustc_demangle::v0::Parser::skip_type+0x41d>
   2bac6:	48 83 c6 01          	add    $0x1,%rsi
   2baca:	49 89 37             	mov    %rsi,(%r15)
   2bacd:	49 39 f3             	cmp    %rsi,%r11
   2bad0:	76 5e                	jbe    2bb30 <rustc_demangle::v0::Parser::skip_type+0x480>
   2bad2:	41 80 3c 30 4b       	cmpb   $0x4b,(%r8,%rsi,1)
   2bad7:	75 57                	jne    2bb30 <rustc_demangle::v0::Parser::skip_type+0x480>
   2bad9:	48 8d 46 01          	lea    0x1(%rsi),%rax
   2badd:	49 89 07             	mov    %rax,(%r15)
   2bae0:	49 39 c3             	cmp    %rax,%r11
   2bae3:	76 10                	jbe    2baf5 <rustc_demangle::v0::Parser::skip_type+0x445>
   2bae5:	41 80 3c 00 43       	cmpb   $0x43,(%r8,%rax,1)
   2baea:	75 09                	jne    2baf5 <rustc_demangle::v0::Parser::skip_type+0x445>
   2baec:	48 83 c6 02          	add    $0x2,%rsi
   2baf0:	49 89 37             	mov    %rsi,(%r15)
   2baf3:	eb 3b                	jmp    2bb30 <rustc_demangle::v0::Parser::skip_type+0x480>
   2baf5:	48 89 e7             	mov    %rsp,%rdi
   2baf8:	48 89 de             	mov    %rbx,%rsi
   2bafb:	e8 a0 f3 ff ff       	callq  2aea0 <rustc_demangle::v0::Parser::ident>
   2bb00:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
   2bb05:	74 95                	je     2ba9c <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2bb07:	48 83 7c 24 08 00    	cmpq   $0x0,0x8(%rsp)
   2bb0d:	74 8d                	je     2ba9c <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2bb0f:	48 83 7c 24 18 00    	cmpq   $0x0,0x18(%rsp)
   2bb15:	75 85                	jne    2ba9c <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2bb17:	eb 17                	jmp    2bb30 <rustc_demangle::v0::Parser::skip_type+0x480>
   2bb19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   2bb20:	48 89 df             	mov    %rbx,%rdi
   2bb23:	e8 88 fb ff ff       	callq  2b6b0 <rustc_demangle::v0::Parser::skip_type>
   2bb28:	84 c0                	test   %al,%al
   2bb2a:	0f 85 6c ff ff ff    	jne    2ba9c <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2bb30:	48 8b 43 10          	mov    0x10(%rbx),%rax
   2bb34:	48 39 43 08          	cmp    %rax,0x8(%rbx)
   2bb38:	76 e6                	jbe    2bb20 <rustc_demangle::v0::Parser::skip_type+0x470>
   2bb3a:	48 8b 0b             	mov    (%rbx),%rcx
   2bb3d:	80 3c 01 45          	cmpb   $0x45,(%rcx,%rax,1)
   2bb41:	75 dd                	jne    2bb20 <rustc_demangle::v0::Parser::skip_type+0x470>
   2bb43:	48 83 c0 01          	add    $0x1,%rax
   2bb47:	48 89 43 10          	mov    %rax,0x10(%rbx)
   2bb4b:	48 89 df             	mov    %rbx,%rdi
   2bb4e:	48 83 c4 20          	add    $0x20,%rsp
   2bb52:	5b                   	pop    %rbx
   2bb53:	41 5e                	pop    %r14
   2bb55:	41 5f                	pop    %r15
   2bb57:	e9 54 fb ff ff       	jmpq   2b6b0 <rustc_demangle::v0::Parser::skip_type>
   2bb5c:	48 8d 46 01          	lea    0x1(%rsi),%rax
   2bb60:	49 89 07             	mov    %rax,(%r15)
   2bb63:	49 39 c3             	cmp    %rax,%r11
   2bb66:	0f 86 30 ff ff ff    	jbe    2ba9c <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2bb6c:	80 3c 01 4c          	cmpb   $0x4c,(%rcx,%rax,1)
   2bb70:	0f 85 26 ff ff ff    	jne    2ba9c <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2bb76:	48 8d 5e 02          	lea    0x2(%rsi),%rbx
   2bb7a:	49 89 1f             	mov    %rbx,(%r15)
   2bb7d:	49 39 db             	cmp    %rbx,%r11
   2bb80:	76 0f                	jbe    2bb91 <rustc_demangle::v0::Parser::skip_type+0x4e1>
   2bb82:	80 3c 19 5f          	cmpb   $0x5f,(%rcx,%rbx,1)
   2bb86:	75 09                	jne    2bb91 <rustc_demangle::v0::Parser::skip_type+0x4e1>
   2bb88:	48 83 c6 03          	add    $0x3,%rsi
   2bb8c:	e9 d9 fb ff ff       	jmpq   2b76a <rustc_demangle::v0::Parser::skip_type+0xba>
   2bb91:	31 c0                	xor    %eax,%eax
   2bb93:	41 b8 3e 00 00 00    	mov    $0x3e,%r8d
   2bb99:	49 39 db             	cmp    %rbx,%r11
   2bb9c:	0f 86 fa fe ff ff    	jbe    2ba9c <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2bba2:	0f b6 14 19          	movzbl (%rcx,%rbx,1),%edx
   2bba6:	80 fa 5f             	cmp    $0x5f,%dl
   2bba9:	74 47                	je     2bbf2 <rustc_demangle::v0::Parser::skip_type+0x542>
   2bbab:	8d 72 d0             	lea    -0x30(%rdx),%esi
   2bbae:	40 80 fe 0a          	cmp    $0xa,%sil
   2bbb2:	72 20                	jb     2bbd4 <rustc_demangle::v0::Parser::skip_type+0x524>
   2bbb4:	8d 72 9f             	lea    -0x61(%rdx),%esi
   2bbb7:	40 80 fe 1a          	cmp    $0x1a,%sil
   2bbbb:	73 05                	jae    2bbc2 <rustc_demangle::v0::Parser::skip_type+0x512>
   2bbbd:	80 c2 a9             	add    $0xa9,%dl
   2bbc0:	eb 10                	jmp    2bbd2 <rustc_demangle::v0::Parser::skip_type+0x522>
   2bbc2:	8d 72 bf             	lea    -0x41(%rdx),%esi
   2bbc5:	40 80 fe 1a          	cmp    $0x1a,%sil
   2bbc9:	0f 83 cd fe ff ff    	jae    2ba9c <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2bbcf:	80 c2 e3             	add    $0xe3,%dl
   2bbd2:	89 d6                	mov    %edx,%esi
   2bbd4:	48 83 c3 01          	add    $0x1,%rbx
   2bbd8:	49 89 1f             	mov    %rbx,(%r15)
   2bbdb:	49 f7 e0             	mul    %r8
   2bbde:	0f 80 b8 fe ff ff    	jo     2ba9c <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2bbe4:	40 0f b6 d6          	movzbl %sil,%edx
   2bbe8:	48 01 d0             	add    %rdx,%rax
   2bbeb:	73 ac                	jae    2bb99 <rustc_demangle::v0::Parser::skip_type+0x4e9>
   2bbed:	e9 aa fe ff ff       	jmpq   2ba9c <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2bbf2:	48 83 c3 01          	add    $0x1,%rbx
   2bbf6:	49 89 1f             	mov    %rbx,(%r15)
   2bbf9:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   2bbfd:	0f 84 99 fe ff ff    	je     2ba9c <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2bc03:	31 c0                	xor    %eax,%eax
   2bc05:	e9 94 fe ff ff       	jmpq   2ba9e <rustc_demangle::v0::Parser::skip_type+0x3ee>
   2bc0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000002bc10 <rustc_demangle::v0::Parser::skip_const>:
   2bc10:	53                   	push   %rbx
   2bc11:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   2bc15:	4c 8b 4f 10          	mov    0x10(%rdi),%r9
   2bc19:	41 b0 01             	mov    $0x1,%r8b
   2bc1c:	4c 39 ce             	cmp    %r9,%rsi
   2bc1f:	0f 86 68 01 00 00    	jbe    2bd8d <rustc_demangle::v0::Parser::skip_const+0x17d>
   2bc25:	4c 8b 17             	mov    (%rdi),%r10
   2bc28:	43 80 3c 0a 42       	cmpb   $0x42,(%r10,%r9,1)
   2bc2d:	75 2b                	jne    2bc5a <rustc_demangle::v0::Parser::skip_const+0x4a>
   2bc2f:	49 8d 41 01          	lea    0x1(%r9),%rax
   2bc33:	48 89 47 10          	mov    %rax,0x10(%rdi)
   2bc37:	48 39 c6             	cmp    %rax,%rsi
   2bc3a:	0f 86 d7 00 00 00    	jbe    2bd17 <rustc_demangle::v0::Parser::skip_const+0x107>
   2bc40:	41 80 3c 02 5f       	cmpb   $0x5f,(%r10,%rax,1)
   2bc45:	0f 85 cf 00 00 00    	jne    2bd1a <rustc_demangle::v0::Parser::skip_const+0x10a>
   2bc4b:	49 8d 41 02          	lea    0x2(%r9),%rax
   2bc4f:	48 89 47 10          	mov    %rax,0x10(%rdi)
   2bc53:	31 c0                	xor    %eax,%eax
   2bc55:	e9 38 01 00 00       	jmpq   2bd92 <rustc_demangle::v0::Parser::skip_const+0x182>
   2bc5a:	4c 8b 17             	mov    (%rdi),%r10
   2bc5d:	43 8a 04 0a          	mov    (%r10,%r9,1),%al
   2bc61:	49 8d 51 01          	lea    0x1(%r9),%rdx
   2bc65:	48 89 57 10          	mov    %rdx,0x10(%rdi)
   2bc69:	04 98                	add    $0x98,%al
   2bc6b:	3c 11                	cmp    $0x11,%al
   2bc6d:	0f 87 1a 01 00 00    	ja     2bd8d <rustc_demangle::v0::Parser::skip_const+0x17d>
   2bc73:	0f b6 c0             	movzbl %al,%eax
   2bc76:	b9 a5 10 02 00       	mov    $0x210a5,%ecx
   2bc7b:	48 0f a3 c1          	bt     %rax,%rcx
   2bc7f:	0f 83 08 01 00 00    	jae    2bd8d <rustc_demangle::v0::Parser::skip_const+0x17d>
   2bc85:	49 89 d3             	mov    %rdx,%r11
   2bc88:	48 39 d6             	cmp    %rdx,%rsi
   2bc8b:	76 14                	jbe    2bca1 <rustc_demangle::v0::Parser::skip_const+0x91>
   2bc8d:	41 80 3c 12 70       	cmpb   $0x70,(%r10,%rdx,1)
   2bc92:	49 89 f3             	mov    %rsi,%r11
   2bc95:	75 0a                	jne    2bca1 <rustc_demangle::v0::Parser::skip_const+0x91>
   2bc97:	49 83 c1 02          	add    $0x2,%r9
   2bc9b:	4c 89 4f 10          	mov    %r9,0x10(%rdi)
   2bc9f:	eb 71                	jmp    2bd12 <rustc_demangle::v0::Parser::skip_const+0x102>
   2bca1:	49 83 c3 ff          	add    $0xffffffffffffffff,%r11
   2bca5:	4c 89 c9             	mov    %r9,%rcx
   2bca8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2bcaf:	00 
   2bcb0:	49 39 cb             	cmp    %rcx,%r11
   2bcb3:	0f 84 d4 00 00 00    	je     2bd8d <rustc_demangle::v0::Parser::skip_const+0x17d>
   2bcb9:	41 0f b6 44 0a 01    	movzbl 0x1(%r10,%rcx,1),%eax
   2bcbf:	48 8d 59 02          	lea    0x2(%rcx),%rbx
   2bcc3:	48 89 5f 10          	mov    %rbx,0x10(%rdi)
   2bcc7:	8d 58 d0             	lea    -0x30(%rax),%ebx
   2bcca:	48 83 c1 01          	add    $0x1,%rcx
   2bcce:	80 fb 0a             	cmp    $0xa,%bl
   2bcd1:	72 dd                	jb     2bcb0 <rustc_demangle::v0::Parser::skip_const+0xa0>
   2bcd3:	8d 58 9f             	lea    -0x61(%rax),%ebx
   2bcd6:	80 fb 06             	cmp    $0x6,%bl
   2bcd9:	72 d5                	jb     2bcb0 <rustc_demangle::v0::Parser::skip_const+0xa0>
   2bcdb:	3c 5f                	cmp    $0x5f,%al
   2bcdd:	0f 85 aa 00 00 00    	jne    2bd8d <rustc_demangle::v0::Parser::skip_const+0x17d>
   2bce3:	4c 39 c9             	cmp    %r9,%rcx
   2bce6:	0f 86 ae 00 00 00    	jbe    2bd9a <rustc_demangle::v0::Parser::skip_const+0x18a>
   2bcec:	48 39 d6             	cmp    %rdx,%rsi
   2bcef:	74 11                	je     2bd02 <rustc_demangle::v0::Parser::skip_const+0xf2>
   2bcf1:	0f 86 a3 00 00 00    	jbe    2bd9a <rustc_demangle::v0::Parser::skip_const+0x18a>
   2bcf7:	41 80 3c 12 bf       	cmpb   $0xbf,(%r10,%rdx,1)
   2bcfc:	0f 8e 98 00 00 00    	jle    2bd9a <rustc_demangle::v0::Parser::skip_const+0x18a>
   2bd02:	48 39 ce             	cmp    %rcx,%rsi
   2bd05:	74 0b                	je     2bd12 <rustc_demangle::v0::Parser::skip_const+0x102>
   2bd07:	41 80 3c 0a bf       	cmpb   $0xbf,(%r10,%rcx,1)
   2bd0c:	0f 8e 88 00 00 00    	jle    2bd9a <rustc_demangle::v0::Parser::skip_const+0x18a>
   2bd12:	45 31 c0             	xor    %r8d,%r8d
   2bd15:	eb 76                	jmp    2bd8d <rustc_demangle::v0::Parser::skip_const+0x17d>
   2bd17:	48 89 c6             	mov    %rax,%rsi
   2bd1a:	49 8d 49 02          	lea    0x2(%r9),%rcx
   2bd1e:	41 bb 01 00 00 00    	mov    $0x1,%r11d
   2bd24:	49 29 f3             	sub    %rsi,%r11
   2bd27:	31 c0                	xor    %eax,%eax
   2bd29:	be 3e 00 00 00       	mov    $0x3e,%esi
   2bd2e:	66 90                	xchg   %ax,%ax
   2bd30:	49 8d 14 0b          	lea    (%r11,%rcx,1),%rdx
   2bd34:	48 83 fa 02          	cmp    $0x2,%rdx
   2bd38:	74 53                	je     2bd8d <rustc_demangle::v0::Parser::skip_const+0x17d>
   2bd3a:	41 0f b6 54 0a ff    	movzbl -0x1(%r10,%rcx,1),%edx
   2bd40:	80 fa 5f             	cmp    $0x5f,%dl
   2bd43:	74 3f                	je     2bd84 <rustc_demangle::v0::Parser::skip_const+0x174>
   2bd45:	8d 5a d0             	lea    -0x30(%rdx),%ebx
   2bd48:	80 fb 0a             	cmp    $0xa,%bl
   2bd4b:	72 20                	jb     2bd6d <rustc_demangle::v0::Parser::skip_const+0x15d>
   2bd4d:	8d 5a 9f             	lea    -0x61(%rdx),%ebx
   2bd50:	80 fb 1a             	cmp    $0x1a,%bl
   2bd53:	73 0b                	jae    2bd60 <rustc_demangle::v0::Parser::skip_const+0x150>
   2bd55:	80 c2 a9             	add    $0xa9,%dl
   2bd58:	e9 0e 00 00 00       	jmpq   2bd6b <rustc_demangle::v0::Parser::skip_const+0x15b>
   2bd5d:	0f 1f 00             	nopl   (%rax)
   2bd60:	8d 5a bf             	lea    -0x41(%rdx),%ebx
   2bd63:	80 fb 1a             	cmp    $0x1a,%bl
   2bd66:	73 25                	jae    2bd8d <rustc_demangle::v0::Parser::skip_const+0x17d>
   2bd68:	80 c2 e3             	add    $0xe3,%dl
   2bd6b:	89 d3                	mov    %edx,%ebx
   2bd6d:	48 89 4f 10          	mov    %rcx,0x10(%rdi)
   2bd71:	48 f7 e6             	mul    %rsi
   2bd74:	70 17                	jo     2bd8d <rustc_demangle::v0::Parser::skip_const+0x17d>
   2bd76:	0f b6 d3             	movzbl %bl,%edx
   2bd79:	48 83 c1 01          	add    $0x1,%rcx
   2bd7d:	48 01 d0             	add    %rdx,%rax
   2bd80:	73 ae                	jae    2bd30 <rustc_demangle::v0::Parser::skip_const+0x120>
   2bd82:	eb 09                	jmp    2bd8d <rustc_demangle::v0::Parser::skip_const+0x17d>
   2bd84:	48 89 4f 10          	mov    %rcx,0x10(%rdi)
   2bd88:	48 ff c0             	inc    %rax
   2bd8b:	75 05                	jne    2bd92 <rustc_demangle::v0::Parser::skip_const+0x182>
   2bd8d:	44 89 c0             	mov    %r8d,%eax
   2bd90:	5b                   	pop    %rbx
   2bd91:	c3                   	retq   
   2bd92:	4c 39 c8             	cmp    %r9,%rax
   2bd95:	0f 93 c0             	setae  %al
   2bd98:	5b                   	pop    %rbx
   2bd99:	c3                   	retq   
   2bd9a:	4c 8d 05 a7 92 01 00 	lea    0x192a7(%rip),%r8        # 45048 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1b10>
   2bda1:	4c 89 d7             	mov    %r10,%rdi
   2bda4:	ff 15 86 a0 01 00    	callq  *0x1a086(%rip)        # 45e30 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   2bdaa:	0f 0b                	ud2    
   2bdac:	0f 1f 40 00          	nopl   0x0(%rax)

000000000002bdb0 <rustc_demangle::v0::Printer::print_lifetime_from_index>:
   2bdb0:	55                   	push   %rbp
   2bdb1:	41 56                	push   %r14
   2bdb3:	53                   	push   %rbx
   2bdb4:	48 83 ec 10          	sub    $0x10,%rsp
   2bdb8:	48 89 f5             	mov    %rsi,%rbp
   2bdbb:	48 89 fb             	mov    %rdi,%rbx
   2bdbe:	48 8b 7f 18          	mov    0x18(%rdi),%rdi
   2bdc2:	48 8d 35 98 db 00 00 	lea    0xdb98(%rip),%rsi        # 39961 <str.6+0x2641>
   2bdc9:	ba 01 00 00 00       	mov    $0x1,%edx
   2bdce:	ff 15 6c 9c 01 00    	callq  *0x19c6c(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2bdd4:	41 b6 01             	mov    $0x1,%r14b
   2bdd7:	84 c0                	test   %al,%al
   2bdd9:	74 0c                	je     2bde7 <rustc_demangle::v0::Printer::print_lifetime_from_index+0x37>
   2bddb:	44 89 f0             	mov    %r14d,%eax
   2bdde:	48 83 c4 10          	add    $0x10,%rsp
   2bde2:	5b                   	pop    %rbx
   2bde3:	41 5e                	pop    %r14
   2bde5:	5d                   	pop    %rbp
   2bde6:	c3                   	retq   
   2bde7:	48 85 ed             	test   %rbp,%rbp
   2bdea:	74 1c                	je     2be08 <rustc_demangle::v0::Printer::print_lifetime_from_index+0x58>
   2bdec:	8b 43 20             	mov    0x20(%rbx),%eax
   2bdef:	48 29 e8             	sub    %rbp,%rax
   2bdf2:	73 32                	jae    2be26 <rustc_demangle::v0::Printer::print_lifetime_from_index+0x76>
   2bdf4:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   2bdfb:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2bdff:	48 8d 35 5c db 00 00 	lea    0xdb5c(%rip),%rsi        # 39962 <str.6+0x2642>
   2be06:	eb 0b                	jmp    2be13 <rustc_demangle::v0::Printer::print_lifetime_from_index+0x63>
   2be08:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2be0c:	48 8d 35 23 db 00 00 	lea    0xdb23(%rip),%rsi        # 39936 <str.6+0x2616>
   2be13:	ba 01 00 00 00       	mov    $0x1,%edx
   2be18:	48 83 c4 10          	add    $0x10,%rsp
   2be1c:	5b                   	pop    %rbx
   2be1d:	41 5e                	pop    %r14
   2be1f:	5d                   	pop    %rbp
   2be20:	ff 25 1a 9c 01 00    	jmpq   *0x19c1a(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2be26:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   2be2b:	48 83 f8 1a          	cmp    $0x1a,%rax
   2be2f:	73 18                	jae    2be49 <rustc_demangle::v0::Printer::print_lifetime_from_index+0x99>
   2be31:	83 c0 61             	add    $0x61,%eax
   2be34:	89 44 24 04          	mov    %eax,0x4(%rsp)
   2be38:	48 8b 73 18          	mov    0x18(%rbx),%rsi
   2be3c:	48 8d 7c 24 04       	lea    0x4(%rsp),%rdi
   2be41:	ff 15 d1 9e 01 00    	callq  *0x19ed1(%rip)        # 45d18 <_GLOBAL_OFFSET_TABLE_+0x390>
   2be47:	eb 2d                	jmp    2be76 <rustc_demangle::v0::Printer::print_lifetime_from_index+0xc6>
   2be49:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2be4d:	48 8d 35 e2 da 00 00 	lea    0xdae2(%rip),%rsi        # 39936 <str.6+0x2616>
   2be54:	ba 01 00 00 00       	mov    $0x1,%edx
   2be59:	ff 15 e1 9b 01 00    	callq  *0x19be1(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2be5f:	84 c0                	test   %al,%al
   2be61:	0f 85 74 ff ff ff    	jne    2bddb <rustc_demangle::v0::Printer::print_lifetime_from_index+0x2b>
   2be67:	48 8b 73 18          	mov    0x18(%rbx),%rsi
   2be6b:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   2be70:	ff 15 22 9d 01 00    	callq  *0x19d22(%rip)        # 45b98 <_GLOBAL_OFFSET_TABLE_+0x210>
   2be76:	41 89 c6             	mov    %eax,%r14d
   2be79:	e9 5d ff ff ff       	jmpq   2bddb <rustc_demangle::v0::Printer::print_lifetime_from_index+0x2b>
   2be7e:	66 90                	xchg   %ax,%ax

000000000002be80 <rustc_demangle::v0::Printer::print_path>:
   2be80:	55                   	push   %rbp
   2be81:	41 57                	push   %r15
   2be83:	41 56                	push   %r14
   2be85:	41 54                	push   %r12
   2be87:	53                   	push   %rbx
   2be88:	48 83 ec 50          	sub    $0x50,%rsp
   2be8c:	48 89 fb             	mov    %rdi,%rbx
   2be8f:	48 8b 07             	mov    (%rdi),%rax
   2be92:	48 85 c0             	test   %rax,%rax
   2be95:	48 0f 45 c7          	cmovne %rdi,%rax
   2be99:	0f 84 29 05 00 00    	je     2c3c8 <rustc_demangle::v0::Printer::print_path+0x548>
   2be9f:	48 8b 48 10          	mov    0x10(%rax),%rcx
   2bea3:	48 39 48 08          	cmp    %rcx,0x8(%rax)
   2bea7:	0f 86 1b 05 00 00    	jbe    2c3c8 <rustc_demangle::v0::Printer::print_path+0x548>
   2bead:	48 8b 10             	mov    (%rax),%rdx
   2beb0:	44 8a 3c 0a          	mov    (%rdx,%rcx,1),%r15b
   2beb4:	48 83 c1 01          	add    $0x1,%rcx
   2beb8:	48 89 48 10          	mov    %rcx,0x10(%rax)
   2bebc:	41 8d 47 be          	lea    -0x42(%r15),%eax
   2bec0:	3c 17                	cmp    $0x17,%al
   2bec2:	0f 87 00 05 00 00    	ja     2c3c8 <rustc_demangle::v0::Printer::print_path+0x548>
   2bec8:	89 f5                	mov    %esi,%ebp
   2beca:	0f b6 c0             	movzbl %al,%eax
   2becd:	48 8d 0d 28 d7 00 00 	lea    0xd728(%rip),%rcx        # 395fc <str.6+0x22dc>
   2bed4:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   2bed8:	48 01 c8             	add    %rcx,%rax
   2bedb:	ff e0                	jmpq   *%rax
   2bedd:	48 8b 0b             	mov    (%rbx),%rcx
   2bee0:	48 85 c9             	test   %rcx,%rcx
   2bee3:	48 0f 45 cb          	cmovne %rbx,%rcx
   2bee7:	0f 84 db 04 00 00    	je     2c3c8 <rustc_demangle::v0::Printer::print_path+0x548>
   2beed:	48 8b 71 08          	mov    0x8(%rcx),%rsi
   2bef1:	48 8b 41 10          	mov    0x10(%rcx),%rax
   2bef5:	48 39 c6             	cmp    %rax,%rsi
   2bef8:	0f 86 b8 04 00 00    	jbe    2c3b6 <rustc_demangle::v0::Printer::print_path+0x536>
   2befe:	4c 8b 09             	mov    (%rcx),%r9
   2bf01:	41 80 3c 01 73       	cmpb   $0x73,(%r9,%rax,1)
   2bf06:	0f 85 aa 04 00 00    	jne    2c3b6 <rustc_demangle::v0::Printer::print_path+0x536>
   2bf0c:	48 8d 68 01          	lea    0x1(%rax),%rbp
   2bf10:	48 89 69 10          	mov    %rbp,0x10(%rcx)
   2bf14:	48 39 ee             	cmp    %rbp,%rsi
   2bf17:	0f 86 14 03 00 00    	jbe    2c231 <rustc_demangle::v0::Printer::print_path+0x3b1>
   2bf1d:	41 80 3c 29 5f       	cmpb   $0x5f,(%r9,%rbp,1)
   2bf22:	0f 85 09 03 00 00    	jne    2c231 <rustc_demangle::v0::Printer::print_path+0x3b1>
   2bf28:	48 83 c0 02          	add    $0x2,%rax
   2bf2c:	48 89 41 10          	mov    %rax,0x10(%rcx)
   2bf30:	e9 81 04 00 00       	jmpq   2c3b6 <rustc_demangle::v0::Printer::print_path+0x536>
   2bf35:	48 8b 33             	mov    (%rbx),%rsi
   2bf38:	48 85 f6             	test   %rsi,%rsi
   2bf3b:	48 0f 45 f3          	cmovne %rbx,%rsi
   2bf3f:	0f 84 c3 03 00 00    	je     2c308 <rustc_demangle::v0::Printer::print_path+0x488>
   2bf45:	4c 8b 56 10          	mov    0x10(%rsi),%r10
   2bf49:	4c 8b 1e             	mov    (%rsi),%r11
   2bf4c:	4c 8b 46 08          	mov    0x8(%rsi),%r8
   2bf50:	4d 89 d7             	mov    %r10,%r15
   2bf53:	4d 39 d0             	cmp    %r10,%r8
   2bf56:	0f 86 f6 01 00 00    	jbe    2c152 <rustc_demangle::v0::Printer::print_path+0x2d2>
   2bf5c:	43 80 3c 13 5f       	cmpb   $0x5f,(%r11,%r10,1)
   2bf61:	4d 89 c7             	mov    %r8,%r15
   2bf64:	0f 85 e8 01 00 00    	jne    2c152 <rustc_demangle::v0::Printer::print_path+0x2d2>
   2bf6a:	49 8d 42 01          	lea    0x1(%r10),%rax
   2bf6e:	48 89 46 10          	mov    %rax,0x10(%rsi)
   2bf72:	31 c0                	xor    %eax,%eax
   2bf74:	e9 94 03 00 00       	jmpq   2c30d <rustc_demangle::v0::Printer::print_path+0x48d>
   2bf79:	48 8b 0b             	mov    (%rbx),%rcx
   2bf7c:	48 85 c9             	test   %rcx,%rcx
   2bf7f:	48 0f 45 cb          	cmovne %rbx,%rcx
   2bf83:	0f 84 6e 06 00 00    	je     2c5f7 <rustc_demangle::v0::Printer::print_path+0x777>
   2bf89:	48 8b 71 08          	mov    0x8(%rcx),%rsi
   2bf8d:	48 8b 41 10          	mov    0x10(%rcx),%rax
   2bf91:	48 39 c6             	cmp    %rax,%rsi
   2bf94:	0f 86 2b 02 00 00    	jbe    2c1c5 <rustc_demangle::v0::Printer::print_path+0x345>
   2bf9a:	4c 8b 09             	mov    (%rcx),%r9
   2bf9d:	41 80 3c 01 73       	cmpb   $0x73,(%r9,%rax,1)
   2bfa2:	0f 85 1d 02 00 00    	jne    2c1c5 <rustc_demangle::v0::Printer::print_path+0x345>
   2bfa8:	48 8d 68 01          	lea    0x1(%rax),%rbp
   2bfac:	48 89 69 10          	mov    %rbp,0x10(%rcx)
   2bfb0:	48 39 ee             	cmp    %rbp,%rsi
   2bfb3:	0f 86 df 02 00 00    	jbe    2c298 <rustc_demangle::v0::Printer::print_path+0x418>
   2bfb9:	41 80 3c 29 5f       	cmpb   $0x5f,(%r9,%rbp,1)
   2bfbe:	0f 85 d4 02 00 00    	jne    2c298 <rustc_demangle::v0::Printer::print_path+0x418>
   2bfc4:	48 83 c0 02          	add    $0x2,%rax
   2bfc8:	48 89 41 10          	mov    %rax,0x10(%rcx)
   2bfcc:	31 c0                	xor    %eax,%eax
   2bfce:	e9 35 05 00 00       	jmpq   2c508 <rustc_demangle::v0::Printer::print_path+0x688>
   2bfd3:	40 0f b6 f5          	movzbl %bpl,%esi
   2bfd7:	48 89 df             	mov    %rbx,%rdi
   2bfda:	e8 a1 fe ff ff       	callq  2be80 <rustc_demangle::v0::Printer::print_path>
   2bfdf:	41 b6 01             	mov    $0x1,%r14b
   2bfe2:	84 c0                	test   %al,%al
   2bfe4:	0f 85 2d 06 00 00    	jne    2c617 <rustc_demangle::v0::Printer::print_path+0x797>
   2bfea:	40 84 ed             	test   %bpl,%bpl
   2bfed:	74 1e                	je     2c00d <rustc_demangle::v0::Printer::print_path+0x18d>
   2bfef:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2bff3:	48 8d 35 bd d8 00 00 	lea    0xd8bd(%rip),%rsi        # 398b7 <str.6+0x2597>
   2bffa:	ba 02 00 00 00       	mov    $0x2,%edx
   2bfff:	ff 15 3b 9a 01 00    	callq  *0x19a3b(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2c005:	84 c0                	test   %al,%al
   2c007:	0f 85 0a 06 00 00    	jne    2c617 <rustc_demangle::v0::Printer::print_path+0x797>
   2c00d:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c011:	48 8d 35 af d8 00 00 	lea    0xd8af(%rip),%rsi        # 398c7 <str.6+0x25a7>
   2c018:	ba 01 00 00 00       	mov    $0x1,%edx
   2c01d:	ff 15 1d 9a 01 00    	callq  *0x19a1d(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2c023:	84 c0                	test   %al,%al
   2c025:	0f 85 ec 05 00 00    	jne    2c617 <rustc_demangle::v0::Printer::print_path+0x797>
   2c02b:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   2c02f:	0f 84 00 05 00 00    	je     2c535 <rustc_demangle::v0::Printer::print_path+0x6b5>
   2c035:	31 ed                	xor    %ebp,%ebp
   2c037:	4c 8d 3d 25 d9 00 00 	lea    0xd925(%rip),%r15        # 39963 <str.6+0x2643>
   2c03e:	4c 8d 25 6b 5a 00 00 	lea    0x5a6b(%rip),%r12        # 31ab0 <core::fmt::Formatter::write_str>
   2c045:	48 8b 43 10          	mov    0x10(%rbx),%rax
   2c049:	48 39 43 08          	cmp    %rax,0x8(%rbx)
   2c04d:	76 0d                	jbe    2c05c <rustc_demangle::v0::Printer::print_path+0x1dc>
   2c04f:	48 8b 0b             	mov    (%rbx),%rcx
   2c052:	80 3c 01 45          	cmpb   $0x45,(%rcx,%rax,1)
   2c056:	0f 84 d1 04 00 00    	je     2c52d <rustc_demangle::v0::Printer::print_path+0x6ad>
   2c05c:	48 85 ed             	test   %rbp,%rbp
   2c05f:	74 17                	je     2c078 <rustc_demangle::v0::Printer::print_path+0x1f8>
   2c061:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c065:	ba 02 00 00 00       	mov    $0x2,%edx
   2c06a:	4c 89 fe             	mov    %r15,%rsi
   2c06d:	41 ff d4             	callq  *%r12
   2c070:	84 c0                	test   %al,%al
   2c072:	0f 85 9f 05 00 00    	jne    2c617 <rustc_demangle::v0::Printer::print_path+0x797>
   2c078:	48 89 df             	mov    %rbx,%rdi
   2c07b:	e8 80 06 00 00       	callq  2c700 <rustc_demangle::v0::Printer::print_generic_arg>
   2c080:	84 c0                	test   %al,%al
   2c082:	0f 85 8f 05 00 00    	jne    2c617 <rustc_demangle::v0::Printer::print_path+0x797>
   2c088:	48 83 c5 ff          	add    $0xffffffffffffffff,%rbp
   2c08c:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   2c090:	75 b3                	jne    2c045 <rustc_demangle::v0::Printer::print_path+0x1c5>
   2c092:	e9 9e 04 00 00       	jmpq   2c535 <rustc_demangle::v0::Printer::print_path+0x6b5>
   2c097:	48 8b 03             	mov    (%rbx),%rax
   2c09a:	48 85 c0             	test   %rax,%rax
   2c09d:	48 0f 45 c3          	cmovne %rbx,%rax
   2c0a1:	0f 84 21 03 00 00    	je     2c3c8 <rustc_demangle::v0::Printer::print_path+0x548>
   2c0a7:	48 8b 48 10          	mov    0x10(%rax),%rcx
   2c0ab:	48 39 48 08          	cmp    %rcx,0x8(%rax)
   2c0af:	0f 86 13 03 00 00    	jbe    2c3c8 <rustc_demangle::v0::Printer::print_path+0x548>
   2c0b5:	48 8b 10             	mov    (%rax),%rdx
   2c0b8:	44 0f b6 3c 0a       	movzbl (%rdx,%rcx,1),%r15d
   2c0bd:	48 83 c1 01          	add    $0x1,%rcx
   2c0c1:	48 89 48 10          	mov    %rcx,0x10(%rax)
   2c0c5:	41 8d 47 bf          	lea    -0x41(%r15),%eax
   2c0c9:	3c 1a                	cmp    $0x1a,%al
   2c0cb:	72 14                	jb     2c0e1 <rustc_demangle::v0::Printer::print_path+0x261>
   2c0cd:	41 80 c7 9f          	add    $0x9f,%r15b
   2c0d1:	41 80 ff 1a          	cmp    $0x1a,%r15b
   2c0d5:	41 bf 00 00 11 00    	mov    $0x110000,%r15d
   2c0db:	0f 83 e7 02 00 00    	jae    2c3c8 <rustc_demangle::v0::Printer::print_path+0x548>
   2c0e1:	40 0f b6 f5          	movzbl %bpl,%esi
   2c0e5:	48 89 df             	mov    %rbx,%rdi
   2c0e8:	e8 93 fd ff ff       	callq  2be80 <rustc_demangle::v0::Printer::print_path>
   2c0ed:	41 b6 01             	mov    $0x1,%r14b
   2c0f0:	84 c0                	test   %al,%al
   2c0f2:	0f 85 1f 05 00 00    	jne    2c617 <rustc_demangle::v0::Printer::print_path+0x797>
   2c0f8:	48 8b 0b             	mov    (%rbx),%rcx
   2c0fb:	48 85 c9             	test   %rcx,%rcx
   2c0fe:	48 0f 45 cb          	cmovne %rbx,%rcx
   2c102:	0f 84 ef 04 00 00    	je     2c5f7 <rustc_demangle::v0::Printer::print_path+0x777>
   2c108:	48 8b 71 08          	mov    0x8(%rcx),%rsi
   2c10c:	48 8b 41 10          	mov    0x10(%rcx),%rax
   2c110:	48 39 c6             	cmp    %rax,%rsi
   2c113:	0f 86 48 03 00 00    	jbe    2c461 <rustc_demangle::v0::Printer::print_path+0x5e1>
   2c119:	4c 8b 09             	mov    (%rcx),%r9
   2c11c:	41 80 3c 01 73       	cmpb   $0x73,(%r9,%rax,1)
   2c121:	0f 85 3a 03 00 00    	jne    2c461 <rustc_demangle::v0::Printer::print_path+0x5e1>
   2c127:	48 8d 68 01          	lea    0x1(%rax),%rbp
   2c12b:	48 89 69 10          	mov    %rbp,0x10(%rcx)
   2c12f:	48 39 ee             	cmp    %rbp,%rsi
   2c132:	0f 86 59 04 00 00    	jbe    2c591 <rustc_demangle::v0::Printer::print_path+0x711>
   2c138:	41 80 3c 29 5f       	cmpb   $0x5f,(%r9,%rbp,1)
   2c13d:	0f 85 4e 04 00 00    	jne    2c591 <rustc_demangle::v0::Printer::print_path+0x711>
   2c143:	48 83 c0 02          	add    $0x2,%rax
   2c147:	48 89 41 10          	mov    %rax,0x10(%rcx)
   2c14b:	31 c0                	xor    %eax,%eax
   2c14d:	e9 a0 04 00 00       	jmpq   2c5f2 <rustc_demangle::v0::Printer::print_path+0x772>
   2c152:	49 8d 7a 01          	lea    0x1(%r10),%rdi
   2c156:	49 f7 df             	neg    %r15
   2c159:	45 31 c9             	xor    %r9d,%r9d
   2c15c:	41 be 3e 00 00 00    	mov    $0x3e,%r14d
   2c162:	31 c0                	xor    %eax,%eax
   2c164:	49 8d 0c 3f          	lea    (%r15,%rdi,1),%rcx
   2c168:	48 83 f9 01          	cmp    $0x1,%rcx
   2c16c:	0f 84 99 01 00 00    	je     2c30b <rustc_demangle::v0::Printer::print_path+0x48b>
   2c172:	41 0f b6 54 3b ff    	movzbl -0x1(%r11,%rdi,1),%edx
   2c178:	80 fa 5f             	cmp    $0x5f,%dl
   2c17b:	0f 84 7e 01 00 00    	je     2c2ff <rustc_demangle::v0::Printer::print_path+0x47f>
   2c181:	8d 4a d0             	lea    -0x30(%rdx),%ecx
   2c184:	80 f9 0a             	cmp    $0xa,%cl
   2c187:	72 1e                	jb     2c1a7 <rustc_demangle::v0::Printer::print_path+0x327>
   2c189:	8d 4a 9f             	lea    -0x61(%rdx),%ecx
   2c18c:	80 f9 1a             	cmp    $0x1a,%cl
   2c18f:	73 05                	jae    2c196 <rustc_demangle::v0::Printer::print_path+0x316>
   2c191:	80 c2 a9             	add    $0xa9,%dl
   2c194:	eb 0f                	jmp    2c1a5 <rustc_demangle::v0::Printer::print_path+0x325>
   2c196:	8d 4a bf             	lea    -0x41(%rdx),%ecx
   2c199:	80 f9 1a             	cmp    $0x1a,%cl
   2c19c:	0f 83 69 01 00 00    	jae    2c30b <rustc_demangle::v0::Printer::print_path+0x48b>
   2c1a2:	80 c2 e3             	add    $0xe3,%dl
   2c1a5:	89 d1                	mov    %edx,%ecx
   2c1a7:	48 89 7e 10          	mov    %rdi,0x10(%rsi)
   2c1ab:	49 f7 e6             	mul    %r14
   2c1ae:	0f 80 57 01 00 00    	jo     2c30b <rustc_demangle::v0::Printer::print_path+0x48b>
   2c1b4:	0f b6 c9             	movzbl %cl,%ecx
   2c1b7:	48 83 c7 01          	add    $0x1,%rdi
   2c1bb:	48 01 c8             	add    %rcx,%rax
   2c1be:	73 a4                	jae    2c164 <rustc_demangle::v0::Printer::print_path+0x2e4>
   2c1c0:	e9 46 01 00 00       	jmpq   2c30b <rustc_demangle::v0::Printer::print_path+0x48b>
   2c1c5:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   2c1cc:	00 
   2c1cd:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
   2c1d2:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   2c1d7:	48 89 de             	mov    %rbx,%rsi
   2c1da:	e8 c1 ec ff ff       	callq  2aea0 <rustc_demangle::v0::Parser::ident>
   2c1df:	48 83 7c 24 08 00    	cmpq   $0x0,0x8(%rsp)
   2c1e5:	0f 84 0c 04 00 00    	je     2c5f7 <rustc_demangle::v0::Printer::print_path+0x777>
   2c1eb:	0f 10 45 00          	movups 0x0(%rbp),%xmm0
   2c1ef:	0f 10 4d 10          	movups 0x10(%rbp),%xmm1
   2c1f3:	0f 29 4c 24 40       	movaps %xmm1,0x40(%rsp)
   2c1f8:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
   2c1fd:	48 8b 73 18          	mov    0x18(%rbx),%rsi
   2c201:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
   2c206:	ff 15 44 99 01 00    	callq  *0x19944(%rip)        # 45b50 <_GLOBAL_OFFSET_TABLE_+0x1c8>
   2c20c:	41 b6 01             	mov    $0x1,%r14b
   2c20f:	84 c0                	test   %al,%al
   2c211:	0f 85 00 04 00 00    	jne    2c617 <rustc_demangle::v0::Printer::print_path+0x797>
   2c217:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c21b:	ff 15 27 98 01 00    	callq  *0x19827(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xc0>
   2c221:	84 c0                	test   %al,%al
   2c223:	0f 84 24 01 00 00    	je     2c34d <rustc_demangle::v0::Printer::print_path+0x4cd>
   2c229:	45 31 f6             	xor    %r14d,%r14d
   2c22c:	e9 e6 03 00 00       	jmpq   2c617 <rustc_demangle::v0::Printer::print_path+0x797>
   2c231:	31 c0                	xor    %eax,%eax
   2c233:	41 b8 3e 00 00 00    	mov    $0x3e,%r8d
   2c239:	48 39 ee             	cmp    %rbp,%rsi
   2c23c:	0f 86 86 01 00 00    	jbe    2c3c8 <rustc_demangle::v0::Printer::print_path+0x548>
   2c242:	41 0f b6 14 29       	movzbl (%r9,%rbp,1),%edx
   2c247:	80 fa 5f             	cmp    $0x5f,%dl
   2c24a:	0f 84 53 01 00 00    	je     2c3a3 <rustc_demangle::v0::Printer::print_path+0x523>
   2c250:	8d 7a d0             	lea    -0x30(%rdx),%edi
   2c253:	40 80 ff 0a          	cmp    $0xa,%dil
   2c257:	72 20                	jb     2c279 <rustc_demangle::v0::Printer::print_path+0x3f9>
   2c259:	8d 7a 9f             	lea    -0x61(%rdx),%edi
   2c25c:	40 80 ff 1a          	cmp    $0x1a,%dil
   2c260:	73 05                	jae    2c267 <rustc_demangle::v0::Printer::print_path+0x3e7>
   2c262:	80 c2 a9             	add    $0xa9,%dl
   2c265:	eb 10                	jmp    2c277 <rustc_demangle::v0::Printer::print_path+0x3f7>
   2c267:	8d 7a bf             	lea    -0x41(%rdx),%edi
   2c26a:	40 80 ff 1a          	cmp    $0x1a,%dil
   2c26e:	0f 83 54 01 00 00    	jae    2c3c8 <rustc_demangle::v0::Printer::print_path+0x548>
   2c274:	80 c2 e3             	add    $0xe3,%dl
   2c277:	89 d7                	mov    %edx,%edi
   2c279:	48 83 c5 01          	add    $0x1,%rbp
   2c27d:	48 89 69 10          	mov    %rbp,0x10(%rcx)
   2c281:	49 f7 e0             	mul    %r8
   2c284:	0f 80 3e 01 00 00    	jo     2c3c8 <rustc_demangle::v0::Printer::print_path+0x548>
   2c28a:	40 0f b6 d7          	movzbl %dil,%edx
   2c28e:	48 01 d0             	add    %rdx,%rax
   2c291:	73 a6                	jae    2c239 <rustc_demangle::v0::Printer::print_path+0x3b9>
   2c293:	e9 30 01 00 00       	jmpq   2c3c8 <rustc_demangle::v0::Printer::print_path+0x548>
   2c298:	31 c0                	xor    %eax,%eax
   2c29a:	41 b8 3e 00 00 00    	mov    $0x3e,%r8d
   2c2a0:	48 39 ee             	cmp    %rbp,%rsi
   2c2a3:	0f 86 4e 03 00 00    	jbe    2c5f7 <rustc_demangle::v0::Printer::print_path+0x777>
   2c2a9:	41 0f b6 14 29       	movzbl (%r9,%rbp,1),%edx
   2c2ae:	80 fa 5f             	cmp    $0x5f,%dl
   2c2b1:	0f 84 40 02 00 00    	je     2c4f7 <rustc_demangle::v0::Printer::print_path+0x677>
   2c2b7:	8d 7a d0             	lea    -0x30(%rdx),%edi
   2c2ba:	40 80 ff 0a          	cmp    $0xa,%dil
   2c2be:	72 20                	jb     2c2e0 <rustc_demangle::v0::Printer::print_path+0x460>
   2c2c0:	8d 7a 9f             	lea    -0x61(%rdx),%edi
   2c2c3:	40 80 ff 1a          	cmp    $0x1a,%dil
   2c2c7:	73 05                	jae    2c2ce <rustc_demangle::v0::Printer::print_path+0x44e>
   2c2c9:	80 c2 a9             	add    $0xa9,%dl
   2c2cc:	eb 10                	jmp    2c2de <rustc_demangle::v0::Printer::print_path+0x45e>
   2c2ce:	8d 7a bf             	lea    -0x41(%rdx),%edi
   2c2d1:	40 80 ff 1a          	cmp    $0x1a,%dil
   2c2d5:	0f 83 1c 03 00 00    	jae    2c5f7 <rustc_demangle::v0::Printer::print_path+0x777>
   2c2db:	80 c2 e3             	add    $0xe3,%dl
   2c2de:	89 d7                	mov    %edx,%edi
   2c2e0:	48 83 c5 01          	add    $0x1,%rbp
   2c2e4:	48 89 69 10          	mov    %rbp,0x10(%rcx)
   2c2e8:	49 f7 e0             	mul    %r8
   2c2eb:	0f 80 06 03 00 00    	jo     2c5f7 <rustc_demangle::v0::Printer::print_path+0x777>
   2c2f1:	40 0f b6 d7          	movzbl %dil,%edx
   2c2f5:	48 01 d0             	add    %rdx,%rax
   2c2f8:	73 a6                	jae    2c2a0 <rustc_demangle::v0::Printer::print_path+0x420>
   2c2fa:	e9 f8 02 00 00       	jmpq   2c5f7 <rustc_demangle::v0::Printer::print_path+0x777>
   2c2ff:	48 89 7e 10          	mov    %rdi,0x10(%rsi)
   2c303:	48 ff c0             	inc    %rax
   2c306:	75 05                	jne    2c30d <rustc_demangle::v0::Printer::print_path+0x48d>
   2c308:	45 31 c9             	xor    %r9d,%r9d
   2c30b:	eb 0e                	jmp    2c31b <rustc_demangle::v0::Printer::print_path+0x49b>
   2c30d:	49 83 c2 ff          	add    $0xffffffffffffffff,%r10
   2c311:	45 31 c9             	xor    %r9d,%r9d
   2c314:	4c 39 d0             	cmp    %r10,%rax
   2c317:	4d 0f 42 cb          	cmovb  %r11,%r9
   2c31b:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
   2c31f:	8b 53 20             	mov    0x20(%rbx),%edx
   2c322:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   2c327:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
   2c32c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2c331:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   2c336:	89 54 24 28          	mov    %edx,0x28(%rsp)
   2c33a:	40 0f b6 f5          	movzbl %bpl,%esi
   2c33e:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   2c343:	e8 38 fb ff ff       	callq  2be80 <rustc_demangle::v0::Printer::print_path>
   2c348:	e9 c7 02 00 00       	jmpq   2c614 <rustc_demangle::v0::Printer::print_path+0x794>
   2c34d:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c351:	48 8d 35 1b d6 00 00 	lea    0xd61b(%rip),%rsi        # 39973 <str.6+0x2653>
   2c358:	ba 01 00 00 00       	mov    $0x1,%edx
   2c35d:	ff 15 dd 96 01 00    	callq  *0x196dd(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2c363:	84 c0                	test   %al,%al
   2c365:	0f 85 84 03 00 00    	jne    2c6ef <rustc_demangle::v0::Printer::print_path+0x86f>
   2c36b:	48 8b 73 18          	mov    0x18(%rbx),%rsi
   2c36f:	48 89 e7             	mov    %rsp,%rdi
   2c372:	ff 15 98 99 01 00    	callq  *0x19998(%rip)        # 45d10 <_GLOBAL_OFFSET_TABLE_+0x388>
   2c378:	84 c0                	test   %al,%al
   2c37a:	0f 85 6f 03 00 00    	jne    2c6ef <rustc_demangle::v0::Printer::print_path+0x86f>
   2c380:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c384:	48 8d 35 e9 d5 00 00 	lea    0xd5e9(%rip),%rsi        # 39974 <str.6+0x2654>
   2c38b:	ba 01 00 00 00       	mov    $0x1,%edx
   2c390:	ff 15 aa 96 01 00    	callq  *0x196aa(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2c396:	84 c0                	test   %al,%al
   2c398:	0f 84 8b fe ff ff    	je     2c229 <rustc_demangle::v0::Printer::print_path+0x3a9>
   2c39e:	e9 4c 03 00 00       	jmpq   2c6ef <rustc_demangle::v0::Printer::print_path+0x86f>
   2c3a3:	48 83 c5 01          	add    $0x1,%rbp
   2c3a7:	48 89 69 10          	mov    %rbp,0x10(%rcx)
   2c3ab:	48 ff c0             	inc    %rax
   2c3ae:	74 18                	je     2c3c8 <rustc_demangle::v0::Printer::print_path+0x548>
   2c3b0:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   2c3b4:	74 12                	je     2c3c8 <rustc_demangle::v0::Printer::print_path+0x548>
   2c3b6:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   2c3ba:	74 0c                	je     2c3c8 <rustc_demangle::v0::Printer::print_path+0x548>
   2c3bc:	48 89 df             	mov    %rbx,%rdi
   2c3bf:	e8 2c ed ff ff       	callq  2b0f0 <rustc_demangle::v0::Parser::skip_path>
   2c3c4:	84 c0                	test   %al,%al
   2c3c6:	74 29                	je     2c3f1 <rustc_demangle::v0::Printer::print_path+0x571>
   2c3c8:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   2c3cf:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c3d3:	48 8d 35 88 d5 00 00 	lea    0xd588(%rip),%rsi        # 39962 <str.6+0x2642>
   2c3da:	ba 01 00 00 00       	mov    $0x1,%edx
   2c3df:	48 83 c4 50          	add    $0x50,%rsp
   2c3e3:	5b                   	pop    %rbx
   2c3e4:	41 5c                	pop    %r12
   2c3e6:	41 5e                	pop    %r14
   2c3e8:	41 5f                	pop    %r15
   2c3ea:	5d                   	pop    %rbp
   2c3eb:	ff 25 4f 96 01 00    	jmpq   *0x1964f(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2c3f1:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c3f5:	48 8d 35 cb d4 00 00 	lea    0xd4cb(%rip),%rsi        # 398c7 <str.6+0x25a7>
   2c3fc:	ba 01 00 00 00       	mov    $0x1,%edx
   2c401:	ff 15 39 96 01 00    	callq  *0x19639(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2c407:	41 b6 01             	mov    $0x1,%r14b
   2c40a:	84 c0                	test   %al,%al
   2c40c:	0f 85 05 02 00 00    	jne    2c617 <rustc_demangle::v0::Printer::print_path+0x797>
   2c412:	48 89 df             	mov    %rbx,%rdi
   2c415:	e8 06 04 00 00       	callq  2c820 <rustc_demangle::v0::Printer::print_type>
   2c41a:	84 c0                	test   %al,%al
   2c41c:	0f 85 f5 01 00 00    	jne    2c617 <rustc_demangle::v0::Printer::print_path+0x797>
   2c422:	41 80 ff 4d          	cmp    $0x4d,%r15b
   2c426:	0f 84 09 01 00 00    	je     2c535 <rustc_demangle::v0::Printer::print_path+0x6b5>
   2c42c:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c430:	48 8d 35 6c d4 00 00 	lea    0xd46c(%rip),%rsi        # 398a3 <str.6+0x2583>
   2c437:	ba 04 00 00 00       	mov    $0x4,%edx
   2c43c:	ff 15 fe 95 01 00    	callq  *0x195fe(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2c442:	84 c0                	test   %al,%al
   2c444:	0f 85 cd 01 00 00    	jne    2c617 <rustc_demangle::v0::Printer::print_path+0x797>
   2c44a:	48 89 df             	mov    %rbx,%rdi
   2c44d:	31 f6                	xor    %esi,%esi
   2c44f:	e8 2c fa ff ff       	callq  2be80 <rustc_demangle::v0::Printer::print_path>
   2c454:	84 c0                	test   %al,%al
   2c456:	0f 84 d9 00 00 00    	je     2c535 <rustc_demangle::v0::Printer::print_path+0x6b5>
   2c45c:	e9 b6 01 00 00       	jmpq   2c617 <rustc_demangle::v0::Printer::print_path+0x797>
   2c461:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   2c468:	00 
   2c469:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
   2c46e:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   2c473:	48 89 de             	mov    %rbx,%rsi
   2c476:	e8 25 ea ff ff       	callq  2aea0 <rustc_demangle::v0::Parser::ident>
   2c47b:	48 83 7c 24 08 00    	cmpq   $0x0,0x8(%rsp)
   2c481:	0f 84 70 01 00 00    	je     2c5f7 <rustc_demangle::v0::Printer::print_path+0x777>
   2c487:	0f 10 45 00          	movups 0x0(%rbp),%xmm0
   2c48b:	0f 10 4d 10          	movups 0x10(%rbp),%xmm1
   2c48f:	0f 29 4c 24 40       	movaps %xmm1,0x40(%rsp)
   2c494:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
   2c499:	41 81 ff 00 00 11 00 	cmp    $0x110000,%r15d
   2c4a0:	0f 85 9f 00 00 00    	jne    2c545 <rustc_demangle::v0::Printer::print_path+0x6c5>
   2c4a6:	48 83 7c 24 38 00    	cmpq   $0x0,0x38(%rsp)
   2c4ac:	75 0c                	jne    2c4ba <rustc_demangle::v0::Printer::print_path+0x63a>
   2c4ae:	48 83 7c 24 48 00    	cmpq   $0x0,0x48(%rsp)
   2c4b4:	0f 84 6f fd ff ff    	je     2c229 <rustc_demangle::v0::Printer::print_path+0x3a9>
   2c4ba:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c4be:	48 8d 35 f2 d3 00 00 	lea    0xd3f2(%rip),%rsi        # 398b7 <str.6+0x2597>
   2c4c5:	ba 02 00 00 00       	mov    $0x2,%edx
   2c4ca:	ff 15 70 95 01 00    	callq  *0x19570(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2c4d0:	41 b6 01             	mov    $0x1,%r14b
   2c4d3:	84 c0                	test   %al,%al
   2c4d5:	0f 85 3c 01 00 00    	jne    2c617 <rustc_demangle::v0::Printer::print_path+0x797>
   2c4db:	48 8b 73 18          	mov    0x18(%rbx),%rsi
   2c4df:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
   2c4e4:	ff 15 66 96 01 00    	callq  *0x19666(%rip)        # 45b50 <_GLOBAL_OFFSET_TABLE_+0x1c8>
   2c4ea:	84 c0                	test   %al,%al
   2c4ec:	0f 84 37 fd ff ff    	je     2c229 <rustc_demangle::v0::Printer::print_path+0x3a9>
   2c4f2:	e9 20 01 00 00       	jmpq   2c617 <rustc_demangle::v0::Printer::print_path+0x797>
   2c4f7:	48 83 c5 01          	add    $0x1,%rbp
   2c4fb:	48 89 69 10          	mov    %rbp,0x10(%rcx)
   2c4ff:	48 ff c0             	inc    %rax
   2c502:	0f 84 ef 00 00 00    	je     2c5f7 <rustc_demangle::v0::Printer::print_path+0x777>
   2c508:	48 ff c0             	inc    %rax
   2c50b:	0f 84 e6 00 00 00    	je     2c5f7 <rustc_demangle::v0::Printer::print_path+0x777>
   2c511:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   2c515:	48 89 04 24          	mov    %rax,(%rsp)
   2c519:	0f 85 ae fc ff ff    	jne    2c1cd <rustc_demangle::v0::Printer::print_path+0x34d>
   2c51f:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   2c526:	00 00 
   2c528:	e9 ca 00 00 00       	jmpq   2c5f7 <rustc_demangle::v0::Printer::print_path+0x777>
   2c52d:	48 83 c0 01          	add    $0x1,%rax
   2c531:	48 89 43 10          	mov    %rax,0x10(%rbx)
   2c535:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c539:	48 8d 35 8a d3 00 00 	lea    0xd38a(%rip),%rsi        # 398ca <str.6+0x25aa>
   2c540:	e9 95 fe ff ff       	jmpq   2c3da <rustc_demangle::v0::Printer::print_path+0x55a>
   2c545:	44 89 7c 24 08       	mov    %r15d,0x8(%rsp)
   2c54a:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c54e:	48 8d 35 12 d4 00 00 	lea    0xd412(%rip),%rsi        # 39967 <str.6+0x2647>
   2c555:	ba 03 00 00 00       	mov    $0x3,%edx
   2c55a:	ff 15 e0 94 01 00    	callq  *0x194e0(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2c560:	84 c0                	test   %al,%al
   2c562:	0f 85 87 01 00 00    	jne    2c6ef <rustc_demangle::v0::Printer::print_path+0x86f>
   2c568:	41 83 ff 43          	cmp    $0x43,%r15d
   2c56c:	0f 84 c8 00 00 00    	je     2c63a <rustc_demangle::v0::Printer::print_path+0x7ba>
   2c572:	41 83 ff 53          	cmp    $0x53,%r15d
   2c576:	0f 85 d6 00 00 00    	jne    2c652 <rustc_demangle::v0::Printer::print_path+0x7d2>
   2c57c:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c580:	48 8d 35 20 d3 00 00 	lea    0xd320(%rip),%rsi        # 398a7 <str.6+0x2587>
   2c587:	ba 04 00 00 00       	mov    $0x4,%edx
   2c58c:	e9 b9 00 00 00       	jmpq   2c64a <rustc_demangle::v0::Printer::print_path+0x7ca>
   2c591:	31 c0                	xor    %eax,%eax
   2c593:	41 b8 3e 00 00 00    	mov    $0x3e,%r8d
   2c599:	48 39 ee             	cmp    %rbp,%rsi
   2c59c:	76 59                	jbe    2c5f7 <rustc_demangle::v0::Printer::print_path+0x777>
   2c59e:	41 0f b6 14 29       	movzbl (%r9,%rbp,1),%edx
   2c5a3:	80 fa 5f             	cmp    $0x5f,%dl
   2c5a6:	74 3d                	je     2c5e5 <rustc_demangle::v0::Printer::print_path+0x765>
   2c5a8:	8d 7a d0             	lea    -0x30(%rdx),%edi
   2c5ab:	40 80 ff 0a          	cmp    $0xa,%dil
   2c5af:	72 1c                	jb     2c5cd <rustc_demangle::v0::Printer::print_path+0x74d>
   2c5b1:	8d 7a 9f             	lea    -0x61(%rdx),%edi
   2c5b4:	40 80 ff 1a          	cmp    $0x1a,%dil
   2c5b8:	73 05                	jae    2c5bf <rustc_demangle::v0::Printer::print_path+0x73f>
   2c5ba:	80 c2 a9             	add    $0xa9,%dl
   2c5bd:	eb 0c                	jmp    2c5cb <rustc_demangle::v0::Printer::print_path+0x74b>
   2c5bf:	8d 7a bf             	lea    -0x41(%rdx),%edi
   2c5c2:	40 80 ff 1a          	cmp    $0x1a,%dil
   2c5c6:	73 2f                	jae    2c5f7 <rustc_demangle::v0::Printer::print_path+0x777>
   2c5c8:	80 c2 e3             	add    $0xe3,%dl
   2c5cb:	89 d7                	mov    %edx,%edi
   2c5cd:	48 83 c5 01          	add    $0x1,%rbp
   2c5d1:	48 89 69 10          	mov    %rbp,0x10(%rcx)
   2c5d5:	49 f7 e0             	mul    %r8
   2c5d8:	70 1d                	jo     2c5f7 <rustc_demangle::v0::Printer::print_path+0x777>
   2c5da:	40 0f b6 d7          	movzbl %dil,%edx
   2c5de:	48 01 d0             	add    %rdx,%rax
   2c5e1:	73 b6                	jae    2c599 <rustc_demangle::v0::Printer::print_path+0x719>
   2c5e3:	eb 12                	jmp    2c5f7 <rustc_demangle::v0::Printer::print_path+0x777>
   2c5e5:	48 83 c5 01          	add    $0x1,%rbp
   2c5e9:	48 89 69 10          	mov    %rbp,0x10(%rcx)
   2c5ed:	48 ff c0             	inc    %rax
   2c5f0:	74 05                	je     2c5f7 <rustc_demangle::v0::Printer::print_path+0x777>
   2c5f2:	48 ff c0             	inc    %rax
   2c5f5:	75 30                	jne    2c627 <rustc_demangle::v0::Printer::print_path+0x7a7>
   2c5f7:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   2c5fe:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c602:	48 8d 35 59 d3 00 00 	lea    0xd359(%rip),%rsi        # 39962 <str.6+0x2642>
   2c609:	ba 01 00 00 00       	mov    $0x1,%edx
   2c60e:	ff 15 2c 94 01 00    	callq  *0x1942c(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2c614:	41 89 c6             	mov    %eax,%r14d
   2c617:	44 89 f0             	mov    %r14d,%eax
   2c61a:	48 83 c4 50          	add    $0x50,%rsp
   2c61e:	5b                   	pop    %rbx
   2c61f:	41 5c                	pop    %r12
   2c621:	41 5e                	pop    %r14
   2c623:	41 5f                	pop    %r15
   2c625:	5d                   	pop    %rbp
   2c626:	c3                   	retq   
   2c627:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   2c62b:	48 89 04 24          	mov    %rax,(%rsp)
   2c62f:	0f 85 34 fe ff ff    	jne    2c469 <rustc_demangle::v0::Printer::print_path+0x5e9>
   2c635:	e9 e5 fe ff ff       	jmpq   2c51f <rustc_demangle::v0::Printer::print_path+0x69f>
   2c63a:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c63e:	48 8d 35 25 d3 00 00 	lea    0xd325(%rip),%rsi        # 3996a <str.6+0x264a>
   2c645:	ba 07 00 00 00       	mov    $0x7,%edx
   2c64a:	ff 15 f0 93 01 00    	callq  *0x193f0(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2c650:	eb 0f                	jmp    2c661 <rustc_demangle::v0::Printer::print_path+0x7e1>
   2c652:	48 8b 73 18          	mov    0x18(%rbx),%rsi
   2c656:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   2c65b:	ff 15 b7 96 01 00    	callq  *0x196b7(%rip)        # 45d18 <_GLOBAL_OFFSET_TABLE_+0x390>
   2c661:	84 c0                	test   %al,%al
   2c663:	0f 85 86 00 00 00    	jne    2c6ef <rustc_demangle::v0::Printer::print_path+0x86f>
   2c669:	48 83 7c 24 38 00    	cmpq   $0x0,0x38(%rsp)
   2c66f:	75 08                	jne    2c679 <rustc_demangle::v0::Printer::print_path+0x7f9>
   2c671:	48 83 7c 24 48 00    	cmpq   $0x0,0x48(%rsp)
   2c677:	74 2d                	je     2c6a6 <rustc_demangle::v0::Printer::print_path+0x826>
   2c679:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c67d:	48 8d 35 ed d2 00 00 	lea    0xd2ed(%rip),%rsi        # 39971 <str.6+0x2651>
   2c684:	ba 01 00 00 00       	mov    $0x1,%edx
   2c689:	ff 15 b1 93 01 00    	callq  *0x193b1(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2c68f:	84 c0                	test   %al,%al
   2c691:	75 5c                	jne    2c6ef <rustc_demangle::v0::Printer::print_path+0x86f>
   2c693:	48 8b 73 18          	mov    0x18(%rbx),%rsi
   2c697:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
   2c69c:	ff 15 ae 94 01 00    	callq  *0x194ae(%rip)        # 45b50 <_GLOBAL_OFFSET_TABLE_+0x1c8>
   2c6a2:	84 c0                	test   %al,%al
   2c6a4:	75 49                	jne    2c6ef <rustc_demangle::v0::Printer::print_path+0x86f>
   2c6a6:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c6aa:	48 8d 35 c1 d2 00 00 	lea    0xd2c1(%rip),%rsi        # 39972 <str.6+0x2652>
   2c6b1:	ba 01 00 00 00       	mov    $0x1,%edx
   2c6b6:	ff 15 84 93 01 00    	callq  *0x19384(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2c6bc:	84 c0                	test   %al,%al
   2c6be:	75 2f                	jne    2c6ef <rustc_demangle::v0::Printer::print_path+0x86f>
   2c6c0:	48 8b 73 18          	mov    0x18(%rbx),%rsi
   2c6c4:	48 89 e7             	mov    %rsp,%rdi
   2c6c7:	ff 15 cb 94 01 00    	callq  *0x194cb(%rip)        # 45b98 <_GLOBAL_OFFSET_TABLE_+0x210>
   2c6cd:	84 c0                	test   %al,%al
   2c6cf:	75 1e                	jne    2c6ef <rustc_demangle::v0::Printer::print_path+0x86f>
   2c6d1:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c6d5:	48 8d 35 56 d2 00 00 	lea    0xd256(%rip),%rsi        # 39932 <str.6+0x2612>
   2c6dc:	ba 01 00 00 00       	mov    $0x1,%edx
   2c6e1:	ff 15 59 93 01 00    	callq  *0x19359(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2c6e7:	84 c0                	test   %al,%al
   2c6e9:	0f 84 3a fb ff ff    	je     2c229 <rustc_demangle::v0::Printer::print_path+0x3a9>
   2c6ef:	41 b6 01             	mov    $0x1,%r14b
   2c6f2:	e9 20 ff ff ff       	jmpq   2c617 <rustc_demangle::v0::Printer::print_path+0x797>
   2c6f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2c6fe:	00 00 

000000000002c700 <rustc_demangle::v0::Printer::print_generic_arg>:
   2c700:	48 8b 07             	mov    (%rdi),%rax
   2c703:	48 89 f9             	mov    %rdi,%rcx
   2c706:	48 85 c0             	test   %rax,%rax
   2c709:	48 0f 44 c8          	cmove  %rax,%rcx
   2c70d:	74 77                	je     2c786 <rustc_demangle::v0::Printer::print_generic_arg+0x86>
   2c70f:	48 8b 51 10          	mov    0x10(%rcx),%rdx
   2c713:	48 39 51 08          	cmp    %rdx,0x8(%rcx)
   2c717:	76 50                	jbe    2c769 <rustc_demangle::v0::Printer::print_generic_arg+0x69>
   2c719:	48 8b 31             	mov    (%rcx),%rsi
   2c71c:	80 3c 16 4c          	cmpb   $0x4c,(%rsi,%rdx,1)
   2c720:	75 47                	jne    2c769 <rustc_demangle::v0::Printer::print_generic_arg+0x69>
   2c722:	48 83 c2 01          	add    $0x1,%rdx
   2c726:	48 89 51 10          	mov    %rdx,0x10(%rcx)
   2c72a:	4c 8b 1f             	mov    (%rdi),%r11
   2c72d:	4d 85 db             	test   %r11,%r11
   2c730:	4c 0f 45 df          	cmovne %rdi,%r11
   2c734:	0f 84 bd 00 00 00    	je     2c7f7 <rustc_demangle::v0::Printer::print_generic_arg+0xf7>
   2c73a:	4d 8b 03             	mov    (%r11),%r8
   2c73d:	49 8b 43 08          	mov    0x8(%r11),%rax
   2c741:	49 8b 73 10          	mov    0x10(%r11),%rsi
   2c745:	49 89 f1             	mov    %rsi,%r9
   2c748:	48 39 f0             	cmp    %rsi,%rax
   2c74b:	76 3e                	jbe    2c78b <rustc_demangle::v0::Printer::print_generic_arg+0x8b>
   2c74d:	41 80 3c 30 5f       	cmpb   $0x5f,(%r8,%rsi,1)
   2c752:	49 89 c1             	mov    %rax,%r9
   2c755:	75 34                	jne    2c78b <rustc_demangle::v0::Printer::print_generic_arg+0x8b>
   2c757:	48 83 c6 01          	add    $0x1,%rsi
   2c75b:	49 89 73 10          	mov    %rsi,0x10(%r11)
   2c75f:	31 c0                	xor    %eax,%eax
   2c761:	48 89 c6             	mov    %rax,%rsi
   2c764:	e9 47 f6 ff ff       	jmpq   2bdb0 <rustc_demangle::v0::Printer::print_lifetime_from_index>
   2c769:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
   2c76d:	48 39 4f 08          	cmp    %rcx,0x8(%rdi)
   2c771:	76 13                	jbe    2c786 <rustc_demangle::v0::Printer::print_generic_arg+0x86>
   2c773:	80 3c 08 4b          	cmpb   $0x4b,(%rax,%rcx,1)
   2c777:	75 0d                	jne    2c786 <rustc_demangle::v0::Printer::print_generic_arg+0x86>
   2c779:	48 83 c1 01          	add    $0x1,%rcx
   2c77d:	48 89 4f 10          	mov    %rcx,0x10(%rdi)
   2c781:	e9 ba 13 00 00       	jmpq   2db40 <rustc_demangle::v0::Printer::print_const>
   2c786:	e9 95 00 00 00       	jmpq   2c820 <rustc_demangle::v0::Printer::print_type>
   2c78b:	48 83 c6 01          	add    $0x1,%rsi
   2c78f:	49 f7 d9             	neg    %r9
   2c792:	31 c0                	xor    %eax,%eax
   2c794:	41 ba 3e 00 00 00    	mov    $0x3e,%r10d
   2c79a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   2c7a0:	49 8d 0c 31          	lea    (%r9,%rsi,1),%rcx
   2c7a4:	48 83 f9 01          	cmp    $0x1,%rcx
   2c7a8:	74 4d                	je     2c7f7 <rustc_demangle::v0::Printer::print_generic_arg+0xf7>
   2c7aa:	41 0f b6 54 30 ff    	movzbl -0x1(%r8,%rsi,1),%edx
   2c7b0:	80 fa 5f             	cmp    $0x5f,%dl
   2c7b3:	74 39                	je     2c7ee <rustc_demangle::v0::Printer::print_generic_arg+0xee>
   2c7b5:	8d 4a d0             	lea    -0x30(%rdx),%ecx
   2c7b8:	80 f9 0a             	cmp    $0xa,%cl
   2c7bb:	72 1a                	jb     2c7d7 <rustc_demangle::v0::Printer::print_generic_arg+0xd7>
   2c7bd:	8d 4a 9f             	lea    -0x61(%rdx),%ecx
   2c7c0:	80 f9 1a             	cmp    $0x1a,%cl
   2c7c3:	73 05                	jae    2c7ca <rustc_demangle::v0::Printer::print_generic_arg+0xca>
   2c7c5:	80 c2 a9             	add    $0xa9,%dl
   2c7c8:	eb 0b                	jmp    2c7d5 <rustc_demangle::v0::Printer::print_generic_arg+0xd5>
   2c7ca:	8d 4a bf             	lea    -0x41(%rdx),%ecx
   2c7cd:	80 f9 1a             	cmp    $0x1a,%cl
   2c7d0:	73 25                	jae    2c7f7 <rustc_demangle::v0::Printer::print_generic_arg+0xf7>
   2c7d2:	80 c2 e3             	add    $0xe3,%dl
   2c7d5:	89 d1                	mov    %edx,%ecx
   2c7d7:	49 89 73 10          	mov    %rsi,0x10(%r11)
   2c7db:	49 f7 e2             	mul    %r10
   2c7de:	70 17                	jo     2c7f7 <rustc_demangle::v0::Printer::print_generic_arg+0xf7>
   2c7e0:	0f b6 c9             	movzbl %cl,%ecx
   2c7e3:	48 83 c6 01          	add    $0x1,%rsi
   2c7e7:	48 01 c8             	add    %rcx,%rax
   2c7ea:	73 b4                	jae    2c7a0 <rustc_demangle::v0::Printer::print_generic_arg+0xa0>
   2c7ec:	eb 09                	jmp    2c7f7 <rustc_demangle::v0::Printer::print_generic_arg+0xf7>
   2c7ee:	49 89 73 10          	mov    %rsi,0x10(%r11)
   2c7f2:	48 ff c0             	inc    %rax
   2c7f5:	75 1d                	jne    2c814 <rustc_demangle::v0::Printer::print_generic_arg+0x114>
   2c7f7:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   2c7fe:	48 8b 7f 18          	mov    0x18(%rdi),%rdi
   2c802:	48 8d 35 59 d1 00 00 	lea    0xd159(%rip),%rsi        # 39962 <str.6+0x2642>
   2c809:	ba 01 00 00 00       	mov    $0x1,%edx
   2c80e:	ff 25 2c 92 01 00    	jmpq   *0x1922c(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2c814:	48 89 c6             	mov    %rax,%rsi
   2c817:	e9 94 f5 ff ff       	jmpq   2bdb0 <rustc_demangle::v0::Printer::print_lifetime_from_index>
   2c81c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000002c820 <rustc_demangle::v0::Printer::print_type>:
   2c820:	55                   	push   %rbp
   2c821:	41 57                	push   %r15
   2c823:	41 56                	push   %r14
   2c825:	41 55                	push   %r13
   2c827:	41 54                	push   %r12
   2c829:	53                   	push   %rbx
   2c82a:	48 83 ec 28          	sub    $0x28,%rsp
   2c82e:	48 89 fb             	mov    %rdi,%rbx
   2c831:	48 8b 07             	mov    (%rdi),%rax
   2c834:	48 85 c0             	test   %rax,%rax
   2c837:	48 0f 45 c7          	cmovne %rdi,%rax
   2c83b:	0f 84 4b 0a 00 00    	je     2d28c <rustc_demangle::v0::Printer::print_type+0xa6c>
   2c841:	48 8b 48 10          	mov    0x10(%rax),%rcx
   2c845:	48 39 48 08          	cmp    %rcx,0x8(%rax)
   2c849:	0f 86 3d 0a 00 00    	jbe    2d28c <rustc_demangle::v0::Printer::print_type+0xa6c>
   2c84f:	48 8b 10             	mov    (%rax),%rdx
   2c852:	40 8a 2c 0a          	mov    (%rdx,%rcx,1),%bpl
   2c856:	48 83 c1 01          	add    $0x1,%rcx
   2c85a:	48 89 48 10          	mov    %rcx,0x10(%rax)
   2c85e:	8d 45 bf             	lea    -0x41(%rbp),%eax
   2c861:	3c 39                	cmp    $0x39,%al
   2c863:	0f 87 d7 01 00 00    	ja     2ca40 <rustc_demangle::v0::Printer::print_type+0x220>
   2c869:	48 8d 35 2b d0 00 00 	lea    0xd02b(%rip),%rsi        # 3989b <str.6+0x257b>
   2c870:	ba 04 00 00 00       	mov    $0x4,%edx
   2c875:	0f b6 c0             	movzbl %al,%eax
   2c878:	48 8d 0d dd cd 00 00 	lea    0xcddd(%rip),%rcx        # 3965c <str.6+0x233c>
   2c87f:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   2c883:	48 01 c8             	add    %rcx,%rax
   2c886:	ff e0                	jmpq   *%rax
   2c888:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c88c:	48 8d 35 e0 d0 00 00 	lea    0xd0e0(%rip),%rsi        # 39973 <str.6+0x2653>
   2c893:	ba 01 00 00 00       	mov    $0x1,%edx
   2c898:	ff 15 a2 91 01 00    	callq  *0x191a2(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2c89e:	41 b4 01             	mov    $0x1,%r12b
   2c8a1:	84 c0                	test   %al,%al
   2c8a3:	0f 85 53 08 00 00    	jne    2d0fc <rustc_demangle::v0::Printer::print_type+0x8dc>
   2c8a9:	48 89 df             	mov    %rbx,%rdi
   2c8ac:	e8 6f ff ff ff       	callq  2c820 <rustc_demangle::v0::Printer::print_type>
   2c8b1:	84 c0                	test   %al,%al
   2c8b3:	0f 85 43 08 00 00    	jne    2d0fc <rustc_demangle::v0::Printer::print_type+0x8dc>
   2c8b9:	40 80 fd 41          	cmp    $0x41,%bpl
   2c8bd:	75 2e                	jne    2c8ed <rustc_demangle::v0::Printer::print_type+0xcd>
   2c8bf:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c8c3:	48 8d 35 ae d0 00 00 	lea    0xd0ae(%rip),%rsi        # 39978 <str.6+0x2658>
   2c8ca:	ba 02 00 00 00       	mov    $0x2,%edx
   2c8cf:	ff 15 6b 91 01 00    	callq  *0x1916b(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2c8d5:	84 c0                	test   %al,%al
   2c8d7:	0f 85 1f 08 00 00    	jne    2d0fc <rustc_demangle::v0::Printer::print_type+0x8dc>
   2c8dd:	48 89 df             	mov    %rbx,%rdi
   2c8e0:	e8 5b 12 00 00       	callq  2db40 <rustc_demangle::v0::Printer::print_const>
   2c8e5:	84 c0                	test   %al,%al
   2c8e7:	0f 85 0f 08 00 00    	jne    2d0fc <rustc_demangle::v0::Printer::print_type+0x8dc>
   2c8ed:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c8f1:	48 8d 35 7c d0 00 00 	lea    0xd07c(%rip),%rsi        # 39974 <str.6+0x2654>
   2c8f8:	e9 a1 09 00 00       	jmpq   2d29e <rustc_demangle::v0::Printer::print_type+0xa7e>
   2c8fd:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c901:	48 8d 35 b9 cf 00 00 	lea    0xcfb9(%rip),%rsi        # 398c1 <str.6+0x25a1>
   2c908:	ba 01 00 00 00       	mov    $0x1,%edx
   2c90d:	ff 15 2d 91 01 00    	callq  *0x1912d(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2c913:	41 b4 01             	mov    $0x1,%r12b
   2c916:	84 c0                	test   %al,%al
   2c918:	0f 85 de 07 00 00    	jne    2d0fc <rustc_demangle::v0::Printer::print_type+0x8dc>
   2c91e:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c922:	40 80 fd 50          	cmp    $0x50,%bpl
   2c926:	0f 85 a0 00 00 00    	jne    2c9cc <rustc_demangle::v0::Printer::print_type+0x1ac>
   2c92c:	48 8d 35 47 d0 00 00 	lea    0xd047(%rip),%rsi        # 3997a <str.6+0x265a>
   2c933:	ba 06 00 00 00       	mov    $0x6,%edx
   2c938:	e9 9b 00 00 00       	jmpq   2c9d8 <rustc_demangle::v0::Printer::print_type+0x1b8>
   2c93d:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c941:	48 8d 35 7c cf 00 00 	lea    0xcf7c(%rip),%rsi        # 398c4 <str.6+0x25a4>
   2c948:	ba 01 00 00 00       	mov    $0x1,%edx
   2c94d:	ff 15 ed 90 01 00    	callq  *0x190ed(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2c953:	41 b4 01             	mov    $0x1,%r12b
   2c956:	84 c0                	test   %al,%al
   2c958:	0f 85 9e 07 00 00    	jne    2d0fc <rustc_demangle::v0::Printer::print_type+0x8dc>
   2c95e:	48 8b 03             	mov    (%rbx),%rax
   2c961:	48 85 c0             	test   %rax,%rax
   2c964:	48 0f 45 c3          	cmovne %rbx,%rax
   2c968:	74 58                	je     2c9c2 <rustc_demangle::v0::Printer::print_type+0x1a2>
   2c96a:	48 8b 48 10          	mov    0x10(%rax),%rcx
   2c96e:	48 39 48 08          	cmp    %rcx,0x8(%rax)
   2c972:	76 4e                	jbe    2c9c2 <rustc_demangle::v0::Printer::print_type+0x1a2>
   2c974:	48 8b 10             	mov    (%rax),%rdx
   2c977:	80 3c 0a 4c          	cmpb   $0x4c,(%rdx,%rcx,1)
   2c97b:	75 45                	jne    2c9c2 <rustc_demangle::v0::Printer::print_type+0x1a2>
   2c97d:	48 83 c1 01          	add    $0x1,%rcx
   2c981:	48 89 48 10          	mov    %rcx,0x10(%rax)
   2c985:	48 8b 0b             	mov    (%rbx),%rcx
   2c988:	48 85 c9             	test   %rcx,%rcx
   2c98b:	48 0f 45 cb          	cmovne %rbx,%rcx
   2c98f:	0f 84 f7 08 00 00    	je     2d28c <rustc_demangle::v0::Printer::print_type+0xa6c>
   2c995:	4c 8b 01             	mov    (%rcx),%r8
   2c998:	48 8b 41 08          	mov    0x8(%rcx),%rax
   2c99c:	48 8b 71 10          	mov    0x10(%rcx),%rsi
   2c9a0:	49 89 f2             	mov    %rsi,%r10
   2c9a3:	48 39 f0             	cmp    %rsi,%rax
   2c9a6:	0f 86 07 05 00 00    	jbe    2ceb3 <rustc_demangle::v0::Printer::print_type+0x693>
   2c9ac:	41 80 3c 30 5f       	cmpb   $0x5f,(%r8,%rsi,1)
   2c9b1:	49 89 c2             	mov    %rax,%r10
   2c9b4:	0f 85 f9 04 00 00    	jne    2ceb3 <rustc_demangle::v0::Printer::print_type+0x693>
   2c9ba:	48 83 c6 01          	add    $0x1,%rsi
   2c9be:	48 89 71 10          	mov    %rsi,0x10(%rcx)
   2c9c2:	40 80 fd 52          	cmp    $0x52,%bpl
   2c9c6:	74 1e                	je     2c9e6 <rustc_demangle::v0::Printer::print_type+0x1c6>
   2c9c8:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c9cc:	48 8d 35 dc ce 00 00 	lea    0xcedc(%rip),%rsi        # 398af <str.6+0x258f>
   2c9d3:	ba 04 00 00 00       	mov    $0x4,%edx
   2c9d8:	ff 15 62 90 01 00    	callq  *0x19062(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2c9de:	84 c0                	test   %al,%al
   2c9e0:	0f 85 16 07 00 00    	jne    2d0fc <rustc_demangle::v0::Printer::print_type+0x8dc>
   2c9e6:	48 89 df             	mov    %rbx,%rdi
   2c9e9:	48 83 c4 28          	add    $0x28,%rsp
   2c9ed:	5b                   	pop    %rbx
   2c9ee:	41 5c                	pop    %r12
   2c9f0:	41 5d                	pop    %r13
   2c9f2:	41 5e                	pop    %r14
   2c9f4:	41 5f                	pop    %r15
   2c9f6:	5d                   	pop    %rbp
   2c9f7:	e9 24 fe ff ff       	jmpq   2c820 <rustc_demangle::v0::Printer::print_type>
   2c9fc:	48 8b 0b             	mov    (%rbx),%rcx
   2c9ff:	48 85 c9             	test   %rcx,%rcx
   2ca02:	48 0f 45 cb          	cmovne %rbx,%rcx
   2ca06:	0f 84 5d 04 00 00    	je     2ce69 <rustc_demangle::v0::Printer::print_type+0x649>
   2ca0c:	4c 8b 51 10          	mov    0x10(%rcx),%r10
   2ca10:	4c 8b 31             	mov    (%rcx),%r14
   2ca13:	4c 8b 41 08          	mov    0x8(%rcx),%r8
   2ca17:	4c 89 d5             	mov    %r10,%rbp
   2ca1a:	4d 39 d0             	cmp    %r10,%r8
   2ca1d:	0f 86 d5 02 00 00    	jbe    2ccf8 <rustc_demangle::v0::Printer::print_type+0x4d8>
   2ca23:	43 80 3c 16 5f       	cmpb   $0x5f,(%r14,%r10,1)
   2ca28:	4c 89 c5             	mov    %r8,%rbp
   2ca2b:	0f 85 c7 02 00 00    	jne    2ccf8 <rustc_demangle::v0::Printer::print_type+0x4d8>
   2ca31:	49 8d 42 01          	lea    0x1(%r10),%rax
   2ca35:	48 89 41 10          	mov    %rax,0x10(%rcx)
   2ca39:	31 c0                	xor    %eax,%eax
   2ca3b:	e9 2e 04 00 00       	jmpq   2ce6e <rustc_demangle::v0::Printer::print_type+0x64e>
   2ca40:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   2ca44:	74 05                	je     2ca4b <rustc_demangle::v0::Printer::print_type+0x22b>
   2ca46:	48 83 43 10 ff       	addq   $0xffffffffffffffff,0x10(%rbx)
   2ca4b:	48 89 df             	mov    %rbx,%rdi
   2ca4e:	31 f6                	xor    %esi,%esi
   2ca50:	48 83 c4 28          	add    $0x28,%rsp
   2ca54:	5b                   	pop    %rbx
   2ca55:	41 5c                	pop    %r12
   2ca57:	41 5d                	pop    %r13
   2ca59:	41 5e                	pop    %r14
   2ca5b:	41 5f                	pop    %r15
   2ca5d:	5d                   	pop    %rbp
   2ca5e:	e9 1d f4 ff ff       	jmpq   2be80 <rustc_demangle::v0::Printer::print_path>
   2ca63:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2ca67:	48 8d 35 3d ce 00 00 	lea    0xce3d(%rip),%rsi        # 398ab <str.6+0x258b>
   2ca6e:	ba 04 00 00 00       	mov    $0x4,%edx
   2ca73:	ff 15 c7 8f 01 00    	callq  *0x18fc7(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2ca79:	41 b4 01             	mov    $0x1,%r12b
   2ca7c:	84 c0                	test   %al,%al
   2ca7e:	0f 85 78 06 00 00    	jne    2d0fc <rustc_demangle::v0::Printer::print_type+0x8dc>
   2ca84:	48 8b 0b             	mov    (%rbx),%rcx
   2ca87:	48 85 c9             	test   %rcx,%rcx
   2ca8a:	48 0f 45 cb          	cmovne %rbx,%rcx
   2ca8e:	0f 84 47 06 00 00    	je     2d0db <rustc_demangle::v0::Printer::print_type+0x8bb>
   2ca94:	48 8b 71 08          	mov    0x8(%rcx),%rsi
   2ca98:	48 8b 41 10          	mov    0x10(%rcx),%rax
   2ca9c:	48 39 c6             	cmp    %rax,%rsi
   2ca9f:	0f 86 e4 02 00 00    	jbe    2cd89 <rustc_demangle::v0::Printer::print_type+0x569>
   2caa5:	4c 8b 09             	mov    (%rcx),%r9
   2caa8:	41 80 3c 01 47       	cmpb   $0x47,(%r9,%rax,1)
   2caad:	0f 85 d6 02 00 00    	jne    2cd89 <rustc_demangle::v0::Printer::print_type+0x569>
   2cab3:	48 8d 68 01          	lea    0x1(%rax),%rbp
   2cab7:	48 89 69 10          	mov    %rbp,0x10(%rcx)
   2cabb:	48 39 ee             	cmp    %rbp,%rsi
   2cabe:	0f 86 63 04 00 00    	jbe    2cf27 <rustc_demangle::v0::Printer::print_type+0x707>
   2cac4:	41 80 3c 29 5f       	cmpb   $0x5f,(%r9,%rbp,1)
   2cac9:	0f 85 58 04 00 00    	jne    2cf27 <rustc_demangle::v0::Printer::print_type+0x707>
   2cacf:	48 83 c0 02          	add    $0x2,%rax
   2cad3:	48 89 41 10          	mov    %rax,0x10(%rcx)
   2cad7:	45 31 f6             	xor    %r14d,%r14d
   2cada:	e9 f3 05 00 00       	jmpq   2d0d2 <rustc_demangle::v0::Printer::print_type+0x8b2>
   2cadf:	48 8b 0b             	mov    (%rbx),%rcx
   2cae2:	48 85 c9             	test   %rcx,%rcx
   2cae5:	48 0f 45 cb          	cmovne %rbx,%rcx
   2cae9:	0f 84 ef 04 00 00    	je     2cfde <rustc_demangle::v0::Printer::print_type+0x7be>
   2caef:	4c 8b 51 08          	mov    0x8(%rcx),%r10
   2caf3:	48 8b 41 10          	mov    0x10(%rcx),%rax
   2caf7:	49 39 c2             	cmp    %rax,%r10
   2cafa:	0f 86 6f 02 00 00    	jbe    2cd6f <rustc_demangle::v0::Printer::print_type+0x54f>
   2cb00:	4c 8b 01             	mov    (%rcx),%r8
   2cb03:	41 80 3c 00 47       	cmpb   $0x47,(%r8,%rax,1)
   2cb08:	0f 85 61 02 00 00    	jne    2cd6f <rustc_demangle::v0::Printer::print_type+0x54f>
   2cb0e:	48 8d 78 01          	lea    0x1(%rax),%rdi
   2cb12:	48 89 79 10          	mov    %rdi,0x10(%rcx)
   2cb16:	49 39 fa             	cmp    %rdi,%r10
   2cb19:	0f 86 d9 02 00 00    	jbe    2cdf8 <rustc_demangle::v0::Printer::print_type+0x5d8>
   2cb1f:	41 80 3c 38 5f       	cmpb   $0x5f,(%r8,%rdi,1)
   2cb24:	0f 85 ce 02 00 00    	jne    2cdf8 <rustc_demangle::v0::Printer::print_type+0x5d8>
   2cb2a:	48 83 c0 02          	add    $0x2,%rax
   2cb2e:	48 89 41 10          	mov    %rax,0x10(%rcx)
   2cb32:	31 ed                	xor    %ebp,%ebp
   2cb34:	e9 a0 04 00 00       	jmpq   2cfd9 <rustc_demangle::v0::Printer::print_type+0x7b9>
   2cb39:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2cb3d:	48 8d 35 89 cd 00 00 	lea    0xcd89(%rip),%rsi        # 398cd <str.6+0x25ad>
   2cb44:	ba 01 00 00 00       	mov    $0x1,%edx
   2cb49:	ff 15 f1 8e 01 00    	callq  *0x18ef1(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2cb4f:	41 b4 01             	mov    $0x1,%r12b
   2cb52:	84 c0                	test   %al,%al
   2cb54:	0f 85 a2 05 00 00    	jne    2d0fc <rustc_demangle::v0::Printer::print_type+0x8dc>
   2cb5a:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   2cb5e:	0f 84 58 04 00 00    	je     2cfbc <rustc_demangle::v0::Printer::print_type+0x79c>
   2cb64:	31 ed                	xor    %ebp,%ebp
   2cb66:	4c 8d 35 f6 cd 00 00 	lea    0xcdf6(%rip),%r14        # 39963 <str.6+0x2643>
   2cb6d:	4c 8d 3d 3c 4f 00 00 	lea    0x4f3c(%rip),%r15        # 31ab0 <core::fmt::Formatter::write_str>
   2cb74:	48 8b 43 10          	mov    0x10(%rbx),%rax
   2cb78:	48 39 43 08          	cmp    %rax,0x8(%rbx)
   2cb7c:	76 0d                	jbe    2cb8b <rustc_demangle::v0::Printer::print_type+0x36b>
   2cb7e:	48 8b 0b             	mov    (%rbx),%rcx
   2cb81:	80 3c 01 45          	cmpb   $0x45,(%rcx,%rax,1)
   2cb85:	0f 84 05 04 00 00    	je     2cf90 <rustc_demangle::v0::Printer::print_type+0x770>
   2cb8b:	48 85 ed             	test   %rbp,%rbp
   2cb8e:	74 17                	je     2cba7 <rustc_demangle::v0::Printer::print_type+0x387>
   2cb90:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2cb94:	ba 02 00 00 00       	mov    $0x2,%edx
   2cb99:	4c 89 f6             	mov    %r14,%rsi
   2cb9c:	41 ff d7             	callq  *%r15
   2cb9f:	84 c0                	test   %al,%al
   2cba1:	0f 85 55 05 00 00    	jne    2d0fc <rustc_demangle::v0::Printer::print_type+0x8dc>
   2cba7:	48 89 df             	mov    %rbx,%rdi
   2cbaa:	e8 71 fc ff ff       	callq  2c820 <rustc_demangle::v0::Printer::print_type>
   2cbaf:	84 c0                	test   %al,%al
   2cbb1:	0f 85 45 05 00 00    	jne    2d0fc <rustc_demangle::v0::Printer::print_type+0x8dc>
   2cbb7:	48 83 c5 01          	add    $0x1,%rbp
   2cbbb:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   2cbbf:	75 b3                	jne    2cb74 <rustc_demangle::v0::Printer::print_type+0x354>
   2cbc1:	e9 d2 03 00 00       	jmpq   2cf98 <rustc_demangle::v0::Printer::print_type+0x778>
   2cbc6:	48 8d 35 8f cd 00 00 	lea    0xcd8f(%rip),%rsi        # 3995c <str.6+0x263c>
   2cbcd:	ba 02 00 00 00       	mov    $0x2,%edx
   2cbd2:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2cbd6:	e9 c8 06 00 00       	jmpq   2d2a3 <rustc_demangle::v0::Printer::print_type+0xa83>
   2cbdb:	48 8d 35 b5 cc 00 00 	lea    0xccb5(%rip),%rsi        # 39897 <str.6+0x2577>
   2cbe2:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2cbe6:	e9 b8 06 00 00       	jmpq   2d2a3 <rustc_demangle::v0::Printer::print_type+0xa83>
   2cbeb:	48 8d 35 46 cd 00 00 	lea    0xcd46(%rip),%rsi        # 39938 <str.6+0x2618>
   2cbf2:	e9 de 00 00 00       	jmpq   2ccd5 <rustc_demangle::v0::Printer::print_type+0x4b5>
   2cbf7:	48 8d 35 60 cd 00 00 	lea    0xcd60(%rip),%rsi        # 3995e <str.6+0x263e>
   2cbfe:	e9 d2 00 00 00       	jmpq   2ccd5 <rustc_demangle::v0::Printer::print_type+0x4b5>
   2cc03:	48 8d 35 31 cd 00 00 	lea    0xcd31(%rip),%rsi        # 3993b <str.6+0x261b>
   2cc0a:	e9 c6 00 00 00       	jmpq   2ccd5 <rustc_demangle::v0::Printer::print_type+0x4b5>
   2cc0f:	48 8d 35 36 cd 00 00 	lea    0xcd36(%rip),%rsi        # 3994c <str.6+0x262c>
   2cc16:	ba 02 00 00 00       	mov    $0x2,%edx
   2cc1b:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2cc1f:	e9 7f 06 00 00       	jmpq   2d2a3 <rustc_demangle::v0::Printer::print_type+0xa83>
   2cc24:	48 8d 35 23 cd 00 00 	lea    0xcd23(%rip),%rsi        # 3994e <str.6+0x262e>
   2cc2b:	ba 05 00 00 00       	mov    $0x5,%edx
   2cc30:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2cc34:	e9 6a 06 00 00       	jmpq   2d2a3 <rustc_demangle::v0::Printer::print_type+0xa83>
   2cc39:	48 8d 35 fe cc 00 00 	lea    0xccfe(%rip),%rsi        # 3993e <str.6+0x261e>
   2cc40:	ba 05 00 00 00       	mov    $0x5,%edx
   2cc45:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2cc49:	e9 55 06 00 00       	jmpq   2d2a3 <rustc_demangle::v0::Printer::print_type+0xa83>
   2cc4e:	48 8d 35 01 cd 00 00 	lea    0xcd01(%rip),%rsi        # 39956 <str.6+0x2636>
   2cc55:	eb 7e                	jmp    2ccd5 <rustc_demangle::v0::Printer::print_type+0x4b5>
   2cc57:	48 8d 35 e8 cc 00 00 	lea    0xcce8(%rip),%rsi        # 39946 <str.6+0x2626>
   2cc5e:	eb 75                	jmp    2ccd5 <rustc_demangle::v0::Printer::print_type+0x4b5>
   2cc60:	48 8d 35 2c cc 00 00 	lea    0xcc2c(%rip),%rsi        # 39893 <str.6+0x2573>
   2cc67:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2cc6b:	e9 33 06 00 00       	jmpq   2d2a3 <rustc_demangle::v0::Printer::print_type+0xa83>
   2cc70:	48 8d 35 18 cc 00 00 	lea    0xcc18(%rip),%rsi        # 3988f <str.6+0x256f>
   2cc77:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2cc7b:	e9 23 06 00 00       	jmpq   2d2a3 <rustc_demangle::v0::Printer::print_type+0xa83>
   2cc80:	48 8d 35 af cc 00 00 	lea    0xccaf(%rip),%rsi        # 39936 <str.6+0x2616>
   2cc87:	ba 01 00 00 00       	mov    $0x1,%edx
   2cc8c:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2cc90:	e9 0e 06 00 00       	jmpq   2d2a3 <rustc_demangle::v0::Printer::print_type+0xa83>
   2cc95:	48 8d 35 bd cc 00 00 	lea    0xccbd(%rip),%rsi        # 39959 <str.6+0x2639>
   2cc9c:	eb 37                	jmp    2ccd5 <rustc_demangle::v0::Printer::print_type+0x4b5>
   2cc9e:	48 8d 35 a4 cc 00 00 	lea    0xcca4(%rip),%rsi        # 39949 <str.6+0x2629>
   2cca5:	eb 2e                	jmp    2ccd5 <rustc_demangle::v0::Printer::print_type+0x4b5>
   2cca7:	48 8d 35 de ca 00 00 	lea    0xcade(%rip),%rsi        # 3978c <str.6+0x246c>
   2ccae:	ba 02 00 00 00       	mov    $0x2,%edx
   2ccb3:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2ccb7:	e9 e7 05 00 00       	jmpq   2d2a3 <rustc_demangle::v0::Printer::print_type+0xa83>
   2ccbc:	48 8d 35 70 cc 00 00 	lea    0xcc70(%rip),%rsi        # 39933 <str.6+0x2613>
   2ccc3:	eb 10                	jmp    2ccd5 <rustc_demangle::v0::Printer::print_type+0x4b5>
   2ccc5:	48 8d 35 87 cc 00 00 	lea    0xcc87(%rip),%rsi        # 39953 <str.6+0x2633>
   2cccc:	eb 07                	jmp    2ccd5 <rustc_demangle::v0::Printer::print_type+0x4b5>
   2ccce:	48 8d 35 6e cc 00 00 	lea    0xcc6e(%rip),%rsi        # 39943 <str.6+0x2623>
   2ccd5:	ba 03 00 00 00       	mov    $0x3,%edx
   2ccda:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2ccde:	e9 c0 05 00 00       	jmpq   2d2a3 <rustc_demangle::v0::Printer::print_type+0xa83>
   2cce3:	48 8d 35 4d cc 00 00 	lea    0xcc4d(%rip),%rsi        # 39937 <str.6+0x2617>
   2ccea:	ba 01 00 00 00       	mov    $0x1,%edx
   2ccef:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2ccf3:	e9 ab 05 00 00       	jmpq   2d2a3 <rustc_demangle::v0::Printer::print_type+0xa83>
   2ccf8:	49 8d 72 01          	lea    0x1(%r10),%rsi
   2ccfc:	48 f7 dd             	neg    %rbp
   2ccff:	45 31 c9             	xor    %r9d,%r9d
   2cd02:	41 bb 3e 00 00 00    	mov    $0x3e,%r11d
   2cd08:	31 c0                	xor    %eax,%eax
   2cd0a:	48 8d 14 2e          	lea    (%rsi,%rbp,1),%rdx
   2cd0e:	48 83 fa 01          	cmp    $0x1,%rdx
   2cd12:	0f 84 54 01 00 00    	je     2ce6c <rustc_demangle::v0::Printer::print_type+0x64c>
   2cd18:	41 0f b6 54 36 ff    	movzbl -0x1(%r14,%rsi,1),%edx
   2cd1e:	80 fa 5f             	cmp    $0x5f,%dl
   2cd21:	0f 84 39 01 00 00    	je     2ce60 <rustc_demangle::v0::Printer::print_type+0x640>
   2cd27:	8d 7a d0             	lea    -0x30(%rdx),%edi
   2cd2a:	40 80 ff 0a          	cmp    $0xa,%dil
   2cd2e:	72 20                	jb     2cd50 <rustc_demangle::v0::Printer::print_type+0x530>
   2cd30:	8d 7a 9f             	lea    -0x61(%rdx),%edi
   2cd33:	40 80 ff 1a          	cmp    $0x1a,%dil
   2cd37:	73 05                	jae    2cd3e <rustc_demangle::v0::Printer::print_type+0x51e>
   2cd39:	80 c2 a9             	add    $0xa9,%dl
   2cd3c:	eb 10                	jmp    2cd4e <rustc_demangle::v0::Printer::print_type+0x52e>
   2cd3e:	8d 7a bf             	lea    -0x41(%rdx),%edi
   2cd41:	40 80 ff 1a          	cmp    $0x1a,%dil
   2cd45:	0f 83 21 01 00 00    	jae    2ce6c <rustc_demangle::v0::Printer::print_type+0x64c>
   2cd4b:	80 c2 e3             	add    $0xe3,%dl
   2cd4e:	89 d7                	mov    %edx,%edi
   2cd50:	48 89 71 10          	mov    %rsi,0x10(%rcx)
   2cd54:	49 f7 e3             	mul    %r11
   2cd57:	0f 80 0f 01 00 00    	jo     2ce6c <rustc_demangle::v0::Printer::print_type+0x64c>
   2cd5d:	40 0f b6 d7          	movzbl %dil,%edx
   2cd61:	48 83 c6 01          	add    $0x1,%rsi
   2cd65:	48 01 d0             	add    %rdx,%rax
   2cd68:	73 a0                	jae    2cd0a <rustc_demangle::v0::Printer::print_type+0x4ea>
   2cd6a:	e9 fd 00 00 00       	jmpq   2ce6c <rustc_demangle::v0::Printer::print_type+0x64c>
   2cd6f:	31 ed                	xor    %ebp,%ebp
   2cd71:	48 89 df             	mov    %rbx,%rdi
   2cd74:	e8 a7 05 00 00       	callq  2d320 <rustc_demangle::v0::Printer::print_type::{{closure}}>
   2cd79:	29 6b 20             	sub    %ebp,0x20(%rbx)
   2cd7c:	84 c0                	test   %al,%al
   2cd7e:	0f 85 7b 02 00 00    	jne    2cfff <rustc_demangle::v0::Printer::print_type+0x7df>
   2cd84:	e9 7e 02 00 00       	jmpq   2d007 <rustc_demangle::v0::Printer::print_type+0x7e7>
   2cd89:	45 31 f6             	xor    %r14d,%r14d
   2cd8c:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   2cd90:	0f 84 ea 02 00 00    	je     2d080 <rustc_demangle::v0::Printer::print_type+0x860>
   2cd96:	31 ed                	xor    %ebp,%ebp
   2cd98:	4c 8d 3d d6 cb 00 00 	lea    0xcbd6(%rip),%r15        # 39975 <str.6+0x2655>
   2cd9f:	4c 8d 2d 0a 4d 00 00 	lea    0x4d0a(%rip),%r13        # 31ab0 <core::fmt::Formatter::write_str>
   2cda6:	48 8b 43 10          	mov    0x10(%rbx),%rax
   2cdaa:	48 39 43 08          	cmp    %rax,0x8(%rbx)
   2cdae:	76 0d                	jbe    2cdbd <rustc_demangle::v0::Printer::print_type+0x59d>
   2cdb0:	48 8b 0b             	mov    (%rbx),%rcx
   2cdb3:	80 3c 01 45          	cmpb   $0x45,(%rcx,%rax,1)
   2cdb7:	0f 84 bb 02 00 00    	je     2d078 <rustc_demangle::v0::Printer::print_type+0x858>
   2cdbd:	48 85 ed             	test   %rbp,%rbp
   2cdc0:	74 17                	je     2cdd9 <rustc_demangle::v0::Printer::print_type+0x5b9>
   2cdc2:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2cdc6:	ba 03 00 00 00       	mov    $0x3,%edx
   2cdcb:	4c 89 fe             	mov    %r15,%rsi
   2cdce:	41 ff d5             	callq  *%r13
   2cdd1:	84 c0                	test   %al,%al
   2cdd3:	0f 85 d1 00 00 00    	jne    2ceaa <rustc_demangle::v0::Printer::print_type+0x68a>
   2cdd9:	48 89 df             	mov    %rbx,%rdi
   2cddc:	e8 ef 0b 00 00       	callq  2d9d0 <rustc_demangle::v0::Printer::print_dyn_trait>
   2cde1:	84 c0                	test   %al,%al
   2cde3:	0f 85 c1 00 00 00    	jne    2ceaa <rustc_demangle::v0::Printer::print_type+0x68a>
   2cde9:	48 83 c5 ff          	add    $0xffffffffffffffff,%rbp
   2cded:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   2cdf1:	75 b3                	jne    2cda6 <rustc_demangle::v0::Printer::print_type+0x586>
   2cdf3:	e9 88 02 00 00       	jmpq   2d080 <rustc_demangle::v0::Printer::print_type+0x860>
   2cdf8:	31 ed                	xor    %ebp,%ebp
   2cdfa:	41 b9 3e 00 00 00    	mov    $0x3e,%r9d
   2ce00:	49 39 fa             	cmp    %rdi,%r10
   2ce03:	0f 86 d5 01 00 00    	jbe    2cfde <rustc_demangle::v0::Printer::print_type+0x7be>
   2ce09:	41 0f b6 04 38       	movzbl (%r8,%rdi,1),%eax
   2ce0e:	3c 5f                	cmp    $0x5f,%al
   2ce10:	0f 84 b6 01 00 00    	je     2cfcc <rustc_demangle::v0::Printer::print_type+0x7ac>
   2ce16:	8d 70 d0             	lea    -0x30(%rax),%esi
   2ce19:	40 80 fe 0a          	cmp    $0xa,%sil
   2ce1d:	72 1c                	jb     2ce3b <rustc_demangle::v0::Printer::print_type+0x61b>
   2ce1f:	8d 50 9f             	lea    -0x61(%rax),%edx
   2ce22:	80 fa 1a             	cmp    $0x1a,%dl
   2ce25:	73 04                	jae    2ce2b <rustc_demangle::v0::Printer::print_type+0x60b>
   2ce27:	04 a9                	add    $0xa9,%al
   2ce29:	eb 0e                	jmp    2ce39 <rustc_demangle::v0::Printer::print_type+0x619>
   2ce2b:	8d 50 bf             	lea    -0x41(%rax),%edx
   2ce2e:	80 fa 1a             	cmp    $0x1a,%dl
   2ce31:	0f 83 a7 01 00 00    	jae    2cfde <rustc_demangle::v0::Printer::print_type+0x7be>
   2ce37:	04 e3                	add    $0xe3,%al
   2ce39:	89 c6                	mov    %eax,%esi
   2ce3b:	48 83 c7 01          	add    $0x1,%rdi
   2ce3f:	48 89 79 10          	mov    %rdi,0x10(%rcx)
   2ce43:	48 89 e8             	mov    %rbp,%rax
   2ce46:	49 f7 e1             	mul    %r9
   2ce49:	0f 80 8f 01 00 00    	jo     2cfde <rustc_demangle::v0::Printer::print_type+0x7be>
   2ce4f:	48 89 c5             	mov    %rax,%rbp
   2ce52:	40 0f b6 c6          	movzbl %sil,%eax
   2ce56:	48 01 c5             	add    %rax,%rbp
   2ce59:	73 a5                	jae    2ce00 <rustc_demangle::v0::Printer::print_type+0x5e0>
   2ce5b:	e9 7e 01 00 00       	jmpq   2cfde <rustc_demangle::v0::Printer::print_type+0x7be>
   2ce60:	48 89 71 10          	mov    %rsi,0x10(%rcx)
   2ce64:	48 ff c0             	inc    %rax
   2ce67:	75 05                	jne    2ce6e <rustc_demangle::v0::Printer::print_type+0x64e>
   2ce69:	45 31 c9             	xor    %r9d,%r9d
   2ce6c:	eb 0e                	jmp    2ce7c <rustc_demangle::v0::Printer::print_type+0x65c>
   2ce6e:	49 83 c2 ff          	add    $0xffffffffffffffff,%r10
   2ce72:	45 31 c9             	xor    %r9d,%r9d
   2ce75:	4c 39 d0             	cmp    %r10,%rax
   2ce78:	4d 0f 42 ce          	cmovb  %r14,%r9
   2ce7c:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
   2ce80:	8b 53 20             	mov    0x20(%rbx),%edx
   2ce83:	4c 89 0c 24          	mov    %r9,(%rsp)
   2ce87:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   2ce8c:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   2ce91:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   2ce96:	89 54 24 20          	mov    %edx,0x20(%rsp)
   2ce9a:	48 89 e7             	mov    %rsp,%rdi
   2ce9d:	e8 7e f9 ff ff       	callq  2c820 <rustc_demangle::v0::Printer::print_type>
   2cea2:	41 89 c4             	mov    %eax,%r12d
   2cea5:	e9 52 02 00 00       	jmpq   2d0fc <rustc_demangle::v0::Printer::print_type+0x8dc>
   2ceaa:	44 29 73 20          	sub    %r14d,0x20(%rbx)
   2ceae:	e9 49 02 00 00       	jmpq   2d0fc <rustc_demangle::v0::Printer::print_type+0x8dc>
   2ceb3:	48 83 c6 01          	add    $0x1,%rsi
   2ceb7:	49 f7 da             	neg    %r10
   2ceba:	31 c0                	xor    %eax,%eax
   2cebc:	41 b9 3e 00 00 00    	mov    $0x3e,%r9d
   2cec2:	49 8d 14 32          	lea    (%r10,%rsi,1),%rdx
   2cec6:	48 83 fa 01          	cmp    $0x1,%rdx
   2ceca:	0f 84 bc 03 00 00    	je     2d28c <rustc_demangle::v0::Printer::print_type+0xa6c>
   2ced0:	41 0f b6 54 30 ff    	movzbl -0x1(%r8,%rsi,1),%edx
   2ced6:	80 fa 5f             	cmp    $0x5f,%dl
   2ced9:	0f 84 aa 01 00 00    	je     2d089 <rustc_demangle::v0::Printer::print_type+0x869>
   2cedf:	8d 7a d0             	lea    -0x30(%rdx),%edi
   2cee2:	40 80 ff 0a          	cmp    $0xa,%dil
   2cee6:	72 20                	jb     2cf08 <rustc_demangle::v0::Printer::print_type+0x6e8>
   2cee8:	8d 7a 9f             	lea    -0x61(%rdx),%edi
   2ceeb:	40 80 ff 1a          	cmp    $0x1a,%dil
   2ceef:	73 05                	jae    2cef6 <rustc_demangle::v0::Printer::print_type+0x6d6>
   2cef1:	80 c2 a9             	add    $0xa9,%dl
   2cef4:	eb 10                	jmp    2cf06 <rustc_demangle::v0::Printer::print_type+0x6e6>
   2cef6:	8d 7a bf             	lea    -0x41(%rdx),%edi
   2cef9:	40 80 ff 1a          	cmp    $0x1a,%dil
   2cefd:	0f 83 89 03 00 00    	jae    2d28c <rustc_demangle::v0::Printer::print_type+0xa6c>
   2cf03:	80 c2 e3             	add    $0xe3,%dl
   2cf06:	89 d7                	mov    %edx,%edi
   2cf08:	48 89 71 10          	mov    %rsi,0x10(%rcx)
   2cf0c:	49 f7 e1             	mul    %r9
   2cf0f:	0f 80 77 03 00 00    	jo     2d28c <rustc_demangle::v0::Printer::print_type+0xa6c>
   2cf15:	40 0f b6 d7          	movzbl %dil,%edx
   2cf19:	48 83 c6 01          	add    $0x1,%rsi
   2cf1d:	48 01 d0             	add    %rdx,%rax
   2cf20:	73 a0                	jae    2cec2 <rustc_demangle::v0::Printer::print_type+0x6a2>
   2cf22:	e9 65 03 00 00       	jmpq   2d28c <rustc_demangle::v0::Printer::print_type+0xa6c>
   2cf27:	45 31 f6             	xor    %r14d,%r14d
   2cf2a:	41 b8 3e 00 00 00    	mov    $0x3e,%r8d
   2cf30:	48 39 ee             	cmp    %rbp,%rsi
   2cf33:	0f 86 a2 01 00 00    	jbe    2d0db <rustc_demangle::v0::Printer::print_type+0x8bb>
   2cf39:	41 0f b6 04 29       	movzbl (%r9,%rbp,1),%eax
   2cf3e:	3c 5f                	cmp    $0x5f,%al
   2cf40:	0f 84 7f 01 00 00    	je     2d0c5 <rustc_demangle::v0::Printer::print_type+0x8a5>
   2cf46:	8d 78 d0             	lea    -0x30(%rax),%edi
   2cf49:	40 80 ff 0a          	cmp    $0xa,%dil
   2cf4d:	72 1c                	jb     2cf6b <rustc_demangle::v0::Printer::print_type+0x74b>
   2cf4f:	8d 50 9f             	lea    -0x61(%rax),%edx
   2cf52:	80 fa 1a             	cmp    $0x1a,%dl
   2cf55:	73 04                	jae    2cf5b <rustc_demangle::v0::Printer::print_type+0x73b>
   2cf57:	04 a9                	add    $0xa9,%al
   2cf59:	eb 0e                	jmp    2cf69 <rustc_demangle::v0::Printer::print_type+0x749>
   2cf5b:	8d 50 bf             	lea    -0x41(%rax),%edx
   2cf5e:	80 fa 1a             	cmp    $0x1a,%dl
   2cf61:	0f 83 74 01 00 00    	jae    2d0db <rustc_demangle::v0::Printer::print_type+0x8bb>
   2cf67:	04 e3                	add    $0xe3,%al
   2cf69:	89 c7                	mov    %eax,%edi
   2cf6b:	48 83 c5 01          	add    $0x1,%rbp
   2cf6f:	48 89 69 10          	mov    %rbp,0x10(%rcx)
   2cf73:	4c 89 f0             	mov    %r14,%rax
   2cf76:	49 f7 e0             	mul    %r8
   2cf79:	0f 80 5c 01 00 00    	jo     2d0db <rustc_demangle::v0::Printer::print_type+0x8bb>
   2cf7f:	49 89 c6             	mov    %rax,%r14
   2cf82:	40 0f b6 c7          	movzbl %dil,%eax
   2cf86:	49 01 c6             	add    %rax,%r14
   2cf89:	73 a5                	jae    2cf30 <rustc_demangle::v0::Printer::print_type+0x710>
   2cf8b:	e9 4b 01 00 00       	jmpq   2d0db <rustc_demangle::v0::Printer::print_type+0x8bb>
   2cf90:	48 83 c0 01          	add    $0x1,%rax
   2cf94:	48 89 43 10          	mov    %rax,0x10(%rbx)
   2cf98:	48 83 fd 01          	cmp    $0x1,%rbp
   2cf9c:	75 1e                	jne    2cfbc <rustc_demangle::v0::Printer::print_type+0x79c>
   2cf9e:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2cfa2:	48 8d 35 29 c9 00 00 	lea    0xc929(%rip),%rsi        # 398d2 <str.6+0x25b2>
   2cfa9:	ba 01 00 00 00       	mov    $0x1,%edx
   2cfae:	ff 15 8c 8a 01 00    	callq  *0x18a8c(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2cfb4:	84 c0                	test   %al,%al
   2cfb6:	0f 85 40 01 00 00    	jne    2d0fc <rustc_demangle::v0::Printer::print_type+0x8dc>
   2cfbc:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2cfc0:	48 8d 35 09 c9 00 00 	lea    0xc909(%rip),%rsi        # 398d0 <str.6+0x25b0>
   2cfc7:	e9 d2 02 00 00       	jmpq   2d29e <rustc_demangle::v0::Printer::print_type+0xa7e>
   2cfcc:	48 83 c7 01          	add    $0x1,%rdi
   2cfd0:	48 89 79 10          	mov    %rdi,0x10(%rcx)
   2cfd4:	48 ff c5             	inc    %rbp
   2cfd7:	74 05                	je     2cfde <rustc_demangle::v0::Printer::print_type+0x7be>
   2cfd9:	48 ff c5             	inc    %rbp
   2cfdc:	75 31                	jne    2d00f <rustc_demangle::v0::Printer::print_type+0x7ef>
   2cfde:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   2cfe5:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2cfe9:	48 8d 35 72 c9 00 00 	lea    0xc972(%rip),%rsi        # 39962 <str.6+0x2642>
   2cff0:	ba 01 00 00 00       	mov    $0x1,%edx
   2cff5:	ff 15 45 8a 01 00    	callq  *0x18a45(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2cffb:	84 c0                	test   %al,%al
   2cffd:	74 08                	je     2d007 <rustc_demangle::v0::Printer::print_type+0x7e7>
   2cfff:	41 b4 01             	mov    $0x1,%r12b
   2d002:	e9 f5 00 00 00       	jmpq   2d0fc <rustc_demangle::v0::Printer::print_type+0x8dc>
   2d007:	45 31 e4             	xor    %r12d,%r12d
   2d00a:	e9 ed 00 00 00       	jmpq   2d0fc <rustc_demangle::v0::Printer::print_type+0x8dc>
   2d00f:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d013:	48 8d 35 85 c8 00 00 	lea    0xc885(%rip),%rsi        # 3989f <str.6+0x257f>
   2d01a:	ba 04 00 00 00       	mov    $0x4,%edx
   2d01f:	ff 15 1b 8a 01 00    	callq  *0x18a1b(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2d025:	84 c0                	test   %al,%al
   2d027:	75 d6                	jne    2cfff <rustc_demangle::v0::Printer::print_type+0x7df>
   2d029:	45 31 ff             	xor    %r15d,%r15d
   2d02c:	4c 8d 35 30 c9 00 00 	lea    0xc930(%rip),%r14        # 39963 <str.6+0x2643>
   2d033:	4c 8d 25 76 4a 00 00 	lea    0x4a76(%rip),%r12        # 31ab0 <core::fmt::Formatter::write_str>
   2d03a:	eb 19                	jmp    2d055 <rustc_demangle::v0::Printer::print_type+0x835>
   2d03c:	49 83 c7 01          	add    $0x1,%r15
   2d040:	83 43 20 01          	addl   $0x1,0x20(%rbx)
   2d044:	be 01 00 00 00       	mov    $0x1,%esi
   2d049:	48 89 df             	mov    %rbx,%rdi
   2d04c:	e8 5f ed ff ff       	callq  2bdb0 <rustc_demangle::v0::Printer::print_lifetime_from_index>
   2d051:	84 c0                	test   %al,%al
   2d053:	75 aa                	jne    2cfff <rustc_demangle::v0::Printer::print_type+0x7df>
   2d055:	4c 39 fd             	cmp    %r15,%rbp
   2d058:	0f 84 02 02 00 00    	je     2d260 <rustc_demangle::v0::Printer::print_type+0xa40>
   2d05e:	4d 85 ff             	test   %r15,%r15
   2d061:	74 d9                	je     2d03c <rustc_demangle::v0::Printer::print_type+0x81c>
   2d063:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d067:	ba 02 00 00 00       	mov    $0x2,%edx
   2d06c:	4c 89 f6             	mov    %r14,%rsi
   2d06f:	41 ff d4             	callq  *%r12
   2d072:	84 c0                	test   %al,%al
   2d074:	74 c6                	je     2d03c <rustc_demangle::v0::Printer::print_type+0x81c>
   2d076:	eb 87                	jmp    2cfff <rustc_demangle::v0::Printer::print_type+0x7df>
   2d078:	48 83 c0 01          	add    $0x1,%rax
   2d07c:	48 89 43 10          	mov    %rax,0x10(%rbx)
   2d080:	44 29 73 20          	sub    %r14d,0x20(%rbx)
   2d084:	e9 85 00 00 00       	jmpq   2d10e <rustc_demangle::v0::Printer::print_type+0x8ee>
   2d089:	48 89 71 10          	mov    %rsi,0x10(%rcx)
   2d08d:	48 ff c0             	inc    %rax
   2d090:	0f 84 f6 01 00 00    	je     2d28c <rustc_demangle::v0::Printer::print_type+0xa6c>
   2d096:	48 89 df             	mov    %rbx,%rdi
   2d099:	48 89 c6             	mov    %rax,%rsi
   2d09c:	e8 0f ed ff ff       	callq  2bdb0 <rustc_demangle::v0::Printer::print_lifetime_from_index>
   2d0a1:	84 c0                	test   %al,%al
   2d0a3:	75 57                	jne    2d0fc <rustc_demangle::v0::Printer::print_type+0x8dc>
   2d0a5:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d0a9:	48 8d 35 d0 c8 00 00 	lea    0xc8d0(%rip),%rsi        # 39980 <str.6+0x2660>
   2d0b0:	ba 01 00 00 00       	mov    $0x1,%edx
   2d0b5:	ff 15 85 89 01 00    	callq  *0x18985(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2d0bb:	84 c0                	test   %al,%al
   2d0bd:	0f 84 ff f8 ff ff    	je     2c9c2 <rustc_demangle::v0::Printer::print_type+0x1a2>
   2d0c3:	eb 37                	jmp    2d0fc <rustc_demangle::v0::Printer::print_type+0x8dc>
   2d0c5:	48 83 c5 01          	add    $0x1,%rbp
   2d0c9:	48 89 69 10          	mov    %rbp,0x10(%rcx)
   2d0cd:	49 ff c6             	inc    %r14
   2d0d0:	74 09                	je     2d0db <rustc_demangle::v0::Printer::print_type+0x8bb>
   2d0d2:	49 ff c6             	inc    %r14
   2d0d5:	0f 85 16 01 00 00    	jne    2d1f1 <rustc_demangle::v0::Printer::print_type+0x9d1>
   2d0db:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   2d0e2:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d0e6:	48 8d 35 75 c8 00 00 	lea    0xc875(%rip),%rsi        # 39962 <str.6+0x2642>
   2d0ed:	ba 01 00 00 00       	mov    $0x1,%edx
   2d0f2:	ff 15 48 89 01 00    	callq  *0x18948(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2d0f8:	84 c0                	test   %al,%al
   2d0fa:	74 12                	je     2d10e <rustc_demangle::v0::Printer::print_type+0x8ee>
   2d0fc:	44 89 e0             	mov    %r12d,%eax
   2d0ff:	48 83 c4 28          	add    $0x28,%rsp
   2d103:	5b                   	pop    %rbx
   2d104:	41 5c                	pop    %r12
   2d106:	41 5d                	pop    %r13
   2d108:	41 5e                	pop    %r14
   2d10a:	41 5f                	pop    %r15
   2d10c:	5d                   	pop    %rbp
   2d10d:	c3                   	retq   
   2d10e:	48 8b 03             	mov    (%rbx),%rax
   2d111:	48 85 c0             	test   %rax,%rax
   2d114:	48 0f 45 c3          	cmovne %rbx,%rax
   2d118:	0f 84 6e 01 00 00    	je     2d28c <rustc_demangle::v0::Printer::print_type+0xa6c>
   2d11e:	48 8b 48 10          	mov    0x10(%rax),%rcx
   2d122:	48 39 48 08          	cmp    %rcx,0x8(%rax)
   2d126:	0f 86 60 01 00 00    	jbe    2d28c <rustc_demangle::v0::Printer::print_type+0xa6c>
   2d12c:	48 8b 10             	mov    (%rax),%rdx
   2d12f:	80 3c 0a 4c          	cmpb   $0x4c,(%rdx,%rcx,1)
   2d133:	0f 85 53 01 00 00    	jne    2d28c <rustc_demangle::v0::Printer::print_type+0xa6c>
   2d139:	48 83 c1 01          	add    $0x1,%rcx
   2d13d:	48 89 48 10          	mov    %rcx,0x10(%rax)
   2d141:	48 8b 0b             	mov    (%rbx),%rcx
   2d144:	48 85 c9             	test   %rcx,%rcx
   2d147:	48 0f 45 cb          	cmovne %rbx,%rcx
   2d14b:	0f 84 3b 01 00 00    	je     2d28c <rustc_demangle::v0::Printer::print_type+0xa6c>
   2d151:	4c 8b 09             	mov    (%rcx),%r9
   2d154:	48 8b 41 08          	mov    0x8(%rcx),%rax
   2d158:	48 8b 71 10          	mov    0x10(%rcx),%rsi
   2d15c:	48 89 f5             	mov    %rsi,%rbp
   2d15f:	48 39 f0             	cmp    %rsi,%rax
   2d162:	76 17                	jbe    2d17b <rustc_demangle::v0::Printer::print_type+0x95b>
   2d164:	41 80 3c 31 5f       	cmpb   $0x5f,(%r9,%rsi,1)
   2d169:	48 89 c5             	mov    %rax,%rbp
   2d16c:	75 0d                	jne    2d17b <rustc_demangle::v0::Printer::print_type+0x95b>
   2d16e:	48 83 c6 01          	add    $0x1,%rsi
   2d172:	48 89 71 10          	mov    %rsi,0x10(%rcx)
   2d176:	45 31 e4             	xor    %r12d,%r12d
   2d179:	eb 81                	jmp    2d0fc <rustc_demangle::v0::Printer::print_type+0x8dc>
   2d17b:	48 83 c6 01          	add    $0x1,%rsi
   2d17f:	48 f7 dd             	neg    %rbp
   2d182:	45 31 f6             	xor    %r14d,%r14d
   2d185:	41 b8 3e 00 00 00    	mov    $0x3e,%r8d
   2d18b:	48 8d 04 2e          	lea    (%rsi,%rbp,1),%rax
   2d18f:	48 83 f8 01          	cmp    $0x1,%rax
   2d193:	0f 84 f3 00 00 00    	je     2d28c <rustc_demangle::v0::Printer::print_type+0xa6c>
   2d199:	41 0f b6 44 31 ff    	movzbl -0x1(%r9,%rsi,1),%eax
   2d19f:	3c 5f                	cmp    $0x5f,%al
   2d1a1:	0f 84 dc 00 00 00    	je     2d283 <rustc_demangle::v0::Printer::print_type+0xa63>
   2d1a7:	8d 78 d0             	lea    -0x30(%rax),%edi
   2d1aa:	40 80 ff 0a          	cmp    $0xa,%dil
   2d1ae:	72 1c                	jb     2d1cc <rustc_demangle::v0::Printer::print_type+0x9ac>
   2d1b0:	8d 50 9f             	lea    -0x61(%rax),%edx
   2d1b3:	80 fa 1a             	cmp    $0x1a,%dl
   2d1b6:	73 04                	jae    2d1bc <rustc_demangle::v0::Printer::print_type+0x99c>
   2d1b8:	04 a9                	add    $0xa9,%al
   2d1ba:	eb 0e                	jmp    2d1ca <rustc_demangle::v0::Printer::print_type+0x9aa>
   2d1bc:	8d 50 bf             	lea    -0x41(%rax),%edx
   2d1bf:	80 fa 1a             	cmp    $0x1a,%dl
   2d1c2:	0f 83 c4 00 00 00    	jae    2d28c <rustc_demangle::v0::Printer::print_type+0xa6c>
   2d1c8:	04 e3                	add    $0xe3,%al
   2d1ca:	89 c7                	mov    %eax,%edi
   2d1cc:	48 89 71 10          	mov    %rsi,0x10(%rcx)
   2d1d0:	4c 89 f0             	mov    %r14,%rax
   2d1d3:	49 f7 e0             	mul    %r8
   2d1d6:	0f 80 b0 00 00 00    	jo     2d28c <rustc_demangle::v0::Printer::print_type+0xa6c>
   2d1dc:	49 89 c6             	mov    %rax,%r14
   2d1df:	40 0f b6 c7          	movzbl %dil,%eax
   2d1e3:	48 83 c6 01          	add    $0x1,%rsi
   2d1e7:	49 01 c6             	add    %rax,%r14
   2d1ea:	73 9f                	jae    2d18b <rustc_demangle::v0::Printer::print_type+0x96b>
   2d1ec:	e9 9b 00 00 00       	jmpq   2d28c <rustc_demangle::v0::Printer::print_type+0xa6c>
   2d1f1:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d1f5:	48 8d 35 a3 c6 00 00 	lea    0xc6a3(%rip),%rsi        # 3989f <str.6+0x257f>
   2d1fc:	ba 04 00 00 00       	mov    $0x4,%edx
   2d201:	ff 15 39 88 01 00    	callq  *0x18839(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2d207:	84 c0                	test   %al,%al
   2d209:	0f 85 ed fe ff ff    	jne    2d0fc <rustc_demangle::v0::Printer::print_type+0x8dc>
   2d20f:	31 ed                	xor    %ebp,%ebp
   2d211:	4c 8d 3d 4b c7 00 00 	lea    0xc74b(%rip),%r15        # 39963 <str.6+0x2643>
   2d218:	4c 8d 2d 91 48 00 00 	lea    0x4891(%rip),%r13        # 31ab0 <core::fmt::Formatter::write_str>
   2d21f:	eb 1d                	jmp    2d23e <rustc_demangle::v0::Printer::print_type+0xa1e>
   2d221:	48 83 c5 01          	add    $0x1,%rbp
   2d225:	83 43 20 01          	addl   $0x1,0x20(%rbx)
   2d229:	be 01 00 00 00       	mov    $0x1,%esi
   2d22e:	48 89 df             	mov    %rbx,%rdi
   2d231:	e8 7a eb ff ff       	callq  2bdb0 <rustc_demangle::v0::Printer::print_lifetime_from_index>
   2d236:	84 c0                	test   %al,%al
   2d238:	0f 85 be fe ff ff    	jne    2d0fc <rustc_demangle::v0::Printer::print_type+0x8dc>
   2d23e:	49 39 ee             	cmp    %rbp,%r14
   2d241:	74 74                	je     2d2b7 <rustc_demangle::v0::Printer::print_type+0xa97>
   2d243:	48 85 ed             	test   %rbp,%rbp
   2d246:	74 d9                	je     2d221 <rustc_demangle::v0::Printer::print_type+0xa01>
   2d248:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d24c:	ba 02 00 00 00       	mov    $0x2,%edx
   2d251:	4c 89 fe             	mov    %r15,%rsi
   2d254:	41 ff d5             	callq  *%r13
   2d257:	84 c0                	test   %al,%al
   2d259:	74 c6                	je     2d221 <rustc_demangle::v0::Printer::print_type+0xa01>
   2d25b:	e9 9c fe ff ff       	jmpq   2d0fc <rustc_demangle::v0::Printer::print_type+0x8dc>
   2d260:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d264:	48 8d 35 fa c6 00 00 	lea    0xc6fa(%rip),%rsi        # 39965 <str.6+0x2645>
   2d26b:	ba 02 00 00 00       	mov    $0x2,%edx
   2d270:	ff 15 ca 87 01 00    	callq  *0x187ca(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2d276:	84 c0                	test   %al,%al
   2d278:	0f 84 f3 fa ff ff    	je     2cd71 <rustc_demangle::v0::Printer::print_type+0x551>
   2d27e:	e9 7c fd ff ff       	jmpq   2cfff <rustc_demangle::v0::Printer::print_type+0x7df>
   2d283:	48 89 71 10          	mov    %rsi,0x10(%rcx)
   2d287:	49 ff c6             	inc    %r14
   2d28a:	75 4e                	jne    2d2da <rustc_demangle::v0::Printer::print_type+0xaba>
   2d28c:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   2d293:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d297:	48 8d 35 c4 c6 00 00 	lea    0xc6c4(%rip),%rsi        # 39962 <str.6+0x2642>
   2d29e:	ba 01 00 00 00       	mov    $0x1,%edx
   2d2a3:	48 83 c4 28          	add    $0x28,%rsp
   2d2a7:	5b                   	pop    %rbx
   2d2a8:	41 5c                	pop    %r12
   2d2aa:	41 5d                	pop    %r13
   2d2ac:	41 5e                	pop    %r14
   2d2ae:	41 5f                	pop    %r15
   2d2b0:	5d                   	pop    %rbp
   2d2b1:	ff 25 89 87 01 00    	jmpq   *0x18789(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2d2b7:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d2bb:	48 8d 35 a3 c6 00 00 	lea    0xc6a3(%rip),%rsi        # 39965 <str.6+0x2645>
   2d2c2:	ba 02 00 00 00       	mov    $0x2,%edx
   2d2c7:	ff 15 73 87 01 00    	callq  *0x18773(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2d2cd:	84 c0                	test   %al,%al
   2d2cf:	0f 84 b7 fa ff ff    	je     2cd8c <rustc_demangle::v0::Printer::print_type+0x56c>
   2d2d5:	e9 22 fe ff ff       	jmpq   2d0fc <rustc_demangle::v0::Printer::print_type+0x8dc>
   2d2da:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d2de:	48 8d 35 90 c6 00 00 	lea    0xc690(%rip),%rsi        # 39975 <str.6+0x2655>
   2d2e5:	ba 03 00 00 00       	mov    $0x3,%edx
   2d2ea:	ff 15 50 87 01 00    	callq  *0x18750(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2d2f0:	84 c0                	test   %al,%al
   2d2f2:	0f 85 04 fe ff ff    	jne    2d0fc <rustc_demangle::v0::Printer::print_type+0x8dc>
   2d2f8:	48 89 df             	mov    %rbx,%rdi
   2d2fb:	4c 89 f6             	mov    %r14,%rsi
   2d2fe:	48 83 c4 28          	add    $0x28,%rsp
   2d302:	5b                   	pop    %rbx
   2d303:	41 5c                	pop    %r12
   2d305:	41 5d                	pop    %r13
   2d307:	41 5e                	pop    %r14
   2d309:	41 5f                	pop    %r15
   2d30b:	5d                   	pop    %rbp
   2d30c:	e9 9f ea ff ff       	jmpq   2bdb0 <rustc_demangle::v0::Printer::print_lifetime_from_index>
   2d311:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2d318:	00 00 00 
   2d31b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000002d320 <rustc_demangle::v0::Printer::print_type::{{closure}}>:
   2d320:	55                   	push   %rbp
   2d321:	41 57                	push   %r15
   2d323:	41 56                	push   %r14
   2d325:	41 55                	push   %r13
   2d327:	41 54                	push   %r12
   2d329:	53                   	push   %rbx
   2d32a:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
   2d331:	48 89 fb             	mov    %rdi,%rbx
   2d334:	48 8b 07             	mov    (%rdi),%rax
   2d337:	48 85 c0             	test   %rax,%rax
   2d33a:	48 0f 45 c7          	cmovne %rdi,%rax
   2d33e:	0f 84 3f 03 00 00    	je     2d683 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x363>
   2d344:	48 8b 48 10          	mov    0x10(%rax),%rcx
   2d348:	48 39 48 08          	cmp    %rcx,0x8(%rax)
   2d34c:	76 1c                	jbe    2d36a <rustc_demangle::v0::Printer::print_type::{{closure}}+0x4a>
   2d34e:	48 8b 10             	mov    (%rax),%rdx
   2d351:	80 3c 0a 55          	cmpb   $0x55,(%rdx,%rcx,1)
   2d355:	75 21                	jne    2d378 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x58>
   2d357:	48 83 c1 01          	add    $0x1,%rcx
   2d35b:	48 89 48 10          	mov    %rcx,0x10(%rax)
   2d35f:	40 b5 01             	mov    $0x1,%bpl
   2d362:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   2d366:	75 04                	jne    2d36c <rustc_demangle::v0::Printer::print_type::{{closure}}+0x4c>
   2d368:	eb 79                	jmp    2d3e3 <rustc_demangle::v0::Printer::print_type::{{closure}}+0xc3>
   2d36a:	31 ed                	xor    %ebp,%ebp
   2d36c:	48 8b 43 10          	mov    0x10(%rbx),%rax
   2d370:	48 39 43 08          	cmp    %rax,0x8(%rbx)
   2d374:	77 0e                	ja     2d384 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x64>
   2d376:	eb 62                	jmp    2d3da <rustc_demangle::v0::Printer::print_type::{{closure}}+0xba>
   2d378:	31 ed                	xor    %ebp,%ebp
   2d37a:	48 8b 43 10          	mov    0x10(%rbx),%rax
   2d37e:	48 39 43 08          	cmp    %rax,0x8(%rbx)
   2d382:	76 56                	jbe    2d3da <rustc_demangle::v0::Printer::print_type::{{closure}}+0xba>
   2d384:	48 8b 0b             	mov    (%rbx),%rcx
   2d387:	80 3c 01 4b          	cmpb   $0x4b,(%rcx,%rax,1)
   2d38b:	75 4d                	jne    2d3da <rustc_demangle::v0::Printer::print_type::{{closure}}+0xba>
   2d38d:	48 83 c0 01          	add    $0x1,%rax
   2d391:	48 89 43 10          	mov    %rax,0x10(%rbx)
   2d395:	48 8b 03             	mov    (%rbx),%rax
   2d398:	48 85 c0             	test   %rax,%rax
   2d39b:	48 0f 45 c3          	cmovne %rbx,%rax
   2d39f:	0f 84 4e 01 00 00    	je     2d4f3 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x1d3>
   2d3a5:	48 8b 48 10          	mov    0x10(%rax),%rcx
   2d3a9:	48 39 48 08          	cmp    %rcx,0x8(%rax)
   2d3ad:	0f 86 0c 01 00 00    	jbe    2d4bf <rustc_demangle::v0::Printer::print_type::{{closure}}+0x19f>
   2d3b3:	48 8b 10             	mov    (%rax),%rdx
   2d3b6:	80 3c 0a 43          	cmpb   $0x43,(%rdx,%rcx,1)
   2d3ba:	0f 85 ff 00 00 00    	jne    2d4bf <rustc_demangle::v0::Printer::print_type::{{closure}}+0x19f>
   2d3c0:	48 83 c1 01          	add    $0x1,%rcx
   2d3c4:	48 89 48 10          	mov    %rcx,0x10(%rax)
   2d3c8:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   2d3ce:	4c 8d 35 fc c4 00 00 	lea    0xc4fc(%rip),%r14        # 398d1 <str.6+0x25b1>
   2d3d5:	e9 0b 01 00 00       	jmpq   2d4e5 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x1c5>
   2d3da:	40 84 ed             	test   %bpl,%bpl
   2d3dd:	0f 84 a0 02 00 00    	je     2d683 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x363>
   2d3e3:	45 31 f6             	xor    %r14d,%r14d
   2d3e6:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d3ea:	48 8d 35 90 c5 00 00 	lea    0xc590(%rip),%rsi        # 39981 <str.6+0x2661>
   2d3f1:	ba 07 00 00 00       	mov    $0x7,%edx
   2d3f6:	ff 15 44 86 01 00    	callq  *0x18644(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2d3fc:	41 b5 01             	mov    $0x1,%r13b
   2d3ff:	84 c0                	test   %al,%al
   2d401:	0f 85 68 03 00 00    	jne    2d76f <rustc_demangle::v0::Printer::print_type::{{closure}}+0x44f>
   2d407:	4d 85 f6             	test   %r14,%r14
   2d40a:	0f 84 73 02 00 00    	je     2d683 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x363>
   2d410:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d414:	48 8d 35 6d c5 00 00 	lea    0xc56d(%rip),%rsi        # 39988 <str.6+0x2668>
   2d41b:	ba 08 00 00 00       	mov    $0x8,%edx
   2d420:	ff 15 1a 86 01 00    	callq  *0x1861a(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2d426:	41 b5 01             	mov    $0x1,%r13b
   2d429:	84 c0                	test   %al,%al
   2d42b:	0f 85 3e 03 00 00    	jne    2d76f <rustc_demangle::v0::Printer::print_type::{{closure}}+0x44f>
   2d431:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
   2d438:	00 00 
   2d43a:	4c 89 7c 24 50       	mov    %r15,0x50(%rsp)
   2d43f:	48 8d 74 24 58       	lea    0x58(%rsp),%rsi
   2d444:	4c 89 74 24 58       	mov    %r14,0x58(%rsp)
   2d449:	4c 89 7c 24 60       	mov    %r15,0x60(%rsp)
   2d44e:	48 c7 44 24 68 00 00 	movq   $0x0,0x68(%rsp)
   2d455:	00 00 
   2d457:	4c 89 7c 24 70       	mov    %r15,0x70(%rsp)
   2d45c:	48 c7 44 24 78 01 00 	movq   $0x1,0x78(%rsp)
   2d463:	00 00 
   2d465:	48 b8 5f 00 00 00 5f 	movabs $0x5f0000005f,%rax
   2d46c:	00 00 00 
   2d46f:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   2d476:	00 
   2d477:	66 c7 84 24 88 00 00 	movw   $0x1,0x88(%rsp)
   2d47e:	00 01 00 
   2d481:	48 8b 6b 18          	mov    0x18(%rbx),%rbp
   2d485:	48 89 e7             	mov    %rsp,%rdi
   2d488:	e8 63 c7 ff ff       	callq  29bf0 <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match>
   2d48d:	83 3c 24 01          	cmpl   $0x1,(%rsp)
   2d491:	0f 85 92 00 00 00    	jne    2d529 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x209>
   2d497:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   2d49c:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   2d4a1:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   2d4a6:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
   2d4ab:	4d 85 f6             	test   %r14,%r14
   2d4ae:	0f 84 da 02 00 00    	je     2d78e <rustc_demangle::v0::Printer::print_type::{{closure}}+0x46e>
   2d4b4:	49 01 c6             	add    %rax,%r14
   2d4b7:	48 29 c2             	sub    %rax,%rdx
   2d4ba:	e9 a5 00 00 00       	jmpq   2d564 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x244>
   2d4bf:	48 89 e7             	mov    %rsp,%rdi
   2d4c2:	48 89 de             	mov    %rbx,%rsi
   2d4c5:	e8 d6 d9 ff ff       	callq  2aea0 <rustc_demangle::v0::Parser::ident>
   2d4ca:	4c 8b 34 24          	mov    (%rsp),%r14
   2d4ce:	4d 85 f6             	test   %r14,%r14
   2d4d1:	74 28                	je     2d4fb <rustc_demangle::v0::Printer::print_type::{{closure}}+0x1db>
   2d4d3:	4c 8b 7c 24 08       	mov    0x8(%rsp),%r15
   2d4d8:	4d 85 ff             	test   %r15,%r15
   2d4db:	74 1e                	je     2d4fb <rustc_demangle::v0::Printer::print_type::{{closure}}+0x1db>
   2d4dd:	48 83 7c 24 18 00    	cmpq   $0x0,0x18(%rsp)
   2d4e3:	75 16                	jne    2d4fb <rustc_demangle::v0::Printer::print_type::{{closure}}+0x1db>
   2d4e5:	40 84 ed             	test   %bpl,%bpl
   2d4e8:	0f 85 f8 fe ff ff    	jne    2d3e6 <rustc_demangle::v0::Printer::print_type::{{closure}}+0xc6>
   2d4ee:	e9 1d ff ff ff       	jmpq   2d410 <rustc_demangle::v0::Printer::print_type::{{closure}}+0xf0>
   2d4f3:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   2d4fa:	00 
   2d4fb:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   2d502:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d506:	48 8d 35 55 c4 00 00 	lea    0xc455(%rip),%rsi        # 39962 <str.6+0x2642>
   2d50d:	ba 01 00 00 00       	mov    $0x1,%edx
   2d512:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
   2d519:	5b                   	pop    %rbx
   2d51a:	41 5c                	pop    %r12
   2d51c:	41 5d                	pop    %r13
   2d51e:	41 5e                	pop    %r14
   2d520:	41 5f                	pop    %r15
   2d522:	5d                   	pop    %rbp
   2d523:	ff 25 17 85 01 00    	jmpq   *0x18517(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2d529:	80 bc 24 89 00 00 00 	cmpb   $0x0,0x89(%rsp)
   2d530:	00 
   2d531:	0f 85 57 02 00 00    	jne    2d78e <rustc_demangle::v0::Printer::print_type::{{closure}}+0x46e>
   2d537:	80 bc 24 88 00 00 00 	cmpb   $0x0,0x88(%rsp)
   2d53e:	00 
   2d53f:	4c 8b 74 24 48       	mov    0x48(%rsp),%r14
   2d544:	48 8b 54 24 50       	mov    0x50(%rsp),%rdx
   2d549:	75 09                	jne    2d554 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x234>
   2d54b:	4c 39 f2             	cmp    %r14,%rdx
   2d54e:	0f 84 3a 02 00 00    	je     2d78e <rustc_demangle::v0::Printer::print_type::{{closure}}+0x46e>
   2d554:	c6 84 24 89 00 00 00 	movb   $0x1,0x89(%rsp)
   2d55b:	01 
   2d55c:	4c 29 f2             	sub    %r14,%rdx
   2d55f:	4c 03 74 24 58       	add    0x58(%rsp),%r14
   2d564:	48 89 ef             	mov    %rbp,%rdi
   2d567:	4c 89 f6             	mov    %r14,%rsi
   2d56a:	ff 15 d0 84 01 00    	callq  *0x184d0(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2d570:	84 c0                	test   %al,%al
   2d572:	0f 85 f7 01 00 00    	jne    2d76f <rustc_demangle::v0::Printer::print_type::{{closure}}+0x44f>
   2d578:	48 8b 84 24 88 00 00 	mov    0x88(%rsp),%rax
   2d57f:	00 
   2d580:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   2d585:	0f 10 44 24 48       	movups 0x48(%rsp),%xmm0
   2d58a:	0f 10 4c 24 58       	movups 0x58(%rsp),%xmm1
   2d58f:	0f 10 54 24 68       	movups 0x68(%rsp),%xmm2
   2d594:	0f 10 5c 24 78       	movups 0x78(%rsp),%xmm3
   2d599:	0f 29 5c 24 30       	movaps %xmm3,0x30(%rsp)
   2d59e:	0f 29 54 24 20       	movaps %xmm2,0x20(%rsp)
   2d5a3:	0f 29 4c 24 10       	movaps %xmm1,0x10(%rsp)
   2d5a8:	0f 29 04 24          	movaps %xmm0,(%rsp)
   2d5ac:	4c 8d bc 24 90 00 00 	lea    0x90(%rsp),%r15
   2d5b3:	00 
   2d5b4:	4c 8d 35 f5 44 00 00 	lea    0x44f5(%rip),%r14        # 31ab0 <core::fmt::Formatter::write_str>
   2d5bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   2d5c0:	80 7c 24 41 00       	cmpb   $0x0,0x41(%rsp)
   2d5c5:	0f 85 9a 00 00 00    	jne    2d665 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x345>
   2d5cb:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
   2d5d0:	4c 89 ff             	mov    %r15,%rdi
   2d5d3:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   2d5d8:	e8 13 c6 ff ff       	callq  29bf0 <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match>
   2d5dd:	83 bc 24 90 00 00 00 	cmpl   $0x1,0x90(%rsp)
   2d5e4:	01 
   2d5e5:	75 20                	jne    2d607 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x2e7>
   2d5e7:	4c 8b a4 24 98 00 00 	mov    0x98(%rsp),%r12
   2d5ee:	00 
   2d5ef:	48 8b 84 24 a0 00 00 	mov    0xa0(%rsp),%rax
   2d5f6:	00 
   2d5f7:	48 8b 0c 24          	mov    (%rsp),%rcx
   2d5fb:	48 01 cd             	add    %rcx,%rbp
   2d5fe:	49 29 cc             	sub    %rcx,%r12
   2d601:	48 89 04 24          	mov    %rax,(%rsp)
   2d605:	eb 29                	jmp    2d630 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x310>
   2d607:	80 7c 24 41 00       	cmpb   $0x0,0x41(%rsp)
   2d60c:	75 57                	jne    2d665 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x345>
   2d60e:	80 7c 24 40 00       	cmpb   $0x0,0x40(%rsp)
   2d613:	48 8b 2c 24          	mov    (%rsp),%rbp
   2d617:	4c 8b 64 24 08       	mov    0x8(%rsp),%r12
   2d61c:	75 05                	jne    2d623 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x303>
   2d61e:	49 39 ec             	cmp    %rbp,%r12
   2d621:	74 42                	je     2d665 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x345>
   2d623:	c6 44 24 41 01       	movb   $0x1,0x41(%rsp)
   2d628:	49 29 ec             	sub    %rbp,%r12
   2d62b:	48 03 6c 24 10       	add    0x10(%rsp),%rbp
   2d630:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d634:	ba 01 00 00 00       	mov    $0x1,%edx
   2d639:	48 8d 35 f1 c2 00 00 	lea    0xc2f1(%rip),%rsi        # 39931 <str.6+0x2611>
   2d640:	41 ff d6             	callq  *%r14
   2d643:	84 c0                	test   %al,%al
   2d645:	0f 85 24 01 00 00    	jne    2d76f <rustc_demangle::v0::Printer::print_type::{{closure}}+0x44f>
   2d64b:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d64f:	48 89 ee             	mov    %rbp,%rsi
   2d652:	4c 89 e2             	mov    %r12,%rdx
   2d655:	41 ff d6             	callq  *%r14
   2d658:	84 c0                	test   %al,%al
   2d65a:	0f 84 60 ff ff ff    	je     2d5c0 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x2a0>
   2d660:	e9 0a 01 00 00       	jmpq   2d76f <rustc_demangle::v0::Printer::print_type::{{closure}}+0x44f>
   2d665:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d669:	48 8d 35 20 c3 00 00 	lea    0xc320(%rip),%rsi        # 39990 <str.6+0x2670>
   2d670:	ba 02 00 00 00       	mov    $0x2,%edx
   2d675:	ff 15 c5 83 01 00    	callq  *0x183c5(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2d67b:	84 c0                	test   %al,%al
   2d67d:	0f 85 ec 00 00 00    	jne    2d76f <rustc_demangle::v0::Printer::print_type::{{closure}}+0x44f>
   2d683:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d687:	48 8d 35 04 c3 00 00 	lea    0xc304(%rip),%rsi        # 39992 <str.6+0x2672>
   2d68e:	ba 03 00 00 00       	mov    $0x3,%edx
   2d693:	ff 15 a7 83 01 00    	callq  *0x183a7(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2d699:	41 b5 01             	mov    $0x1,%r13b
   2d69c:	84 c0                	test   %al,%al
   2d69e:	0f 85 cb 00 00 00    	jne    2d76f <rustc_demangle::v0::Printer::print_type::{{closure}}+0x44f>
   2d6a4:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   2d6a8:	74 65                	je     2d70f <rustc_demangle::v0::Printer::print_type::{{closure}}+0x3ef>
   2d6aa:	31 ed                	xor    %ebp,%ebp
   2d6ac:	4c 8d 35 b0 c2 00 00 	lea    0xc2b0(%rip),%r14        # 39963 <str.6+0x2643>
   2d6b3:	4c 8d 3d f6 43 00 00 	lea    0x43f6(%rip),%r15        # 31ab0 <core::fmt::Formatter::write_str>
   2d6ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   2d6c0:	48 8b 43 10          	mov    0x10(%rbx),%rax
   2d6c4:	48 39 43 08          	cmp    %rax,0x8(%rbx)
   2d6c8:	76 09                	jbe    2d6d3 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x3b3>
   2d6ca:	48 8b 0b             	mov    (%rbx),%rcx
   2d6cd:	80 3c 01 45          	cmpb   $0x45,(%rcx,%rax,1)
   2d6d1:	74 34                	je     2d707 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x3e7>
   2d6d3:	48 85 ed             	test   %rbp,%rbp
   2d6d6:	74 17                	je     2d6ef <rustc_demangle::v0::Printer::print_type::{{closure}}+0x3cf>
   2d6d8:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d6dc:	ba 02 00 00 00       	mov    $0x2,%edx
   2d6e1:	4c 89 f6             	mov    %r14,%rsi
   2d6e4:	41 ff d7             	callq  *%r15
   2d6e7:	84 c0                	test   %al,%al
   2d6e9:	0f 85 80 00 00 00    	jne    2d76f <rustc_demangle::v0::Printer::print_type::{{closure}}+0x44f>
   2d6ef:	48 89 df             	mov    %rbx,%rdi
   2d6f2:	e8 29 f1 ff ff       	callq  2c820 <rustc_demangle::v0::Printer::print_type>
   2d6f7:	84 c0                	test   %al,%al
   2d6f9:	75 74                	jne    2d76f <rustc_demangle::v0::Printer::print_type::{{closure}}+0x44f>
   2d6fb:	48 83 c5 ff          	add    $0xffffffffffffffff,%rbp
   2d6ff:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   2d703:	75 bb                	jne    2d6c0 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x3a0>
   2d705:	eb 08                	jmp    2d70f <rustc_demangle::v0::Printer::print_type::{{closure}}+0x3ef>
   2d707:	48 83 c0 01          	add    $0x1,%rax
   2d70b:	48 89 43 10          	mov    %rax,0x10(%rbx)
   2d70f:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d713:	48 8d 35 b6 c1 00 00 	lea    0xc1b6(%rip),%rsi        # 398d0 <str.6+0x25b0>
   2d71a:	ba 01 00 00 00       	mov    $0x1,%edx
   2d71f:	ff 15 1b 83 01 00    	callq  *0x1831b(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2d725:	84 c0                	test   %al,%al
   2d727:	75 46                	jne    2d76f <rustc_demangle::v0::Printer::print_type::{{closure}}+0x44f>
   2d729:	48 8b 03             	mov    (%rbx),%rax
   2d72c:	48 85 c0             	test   %rax,%rax
   2d72f:	48 0f 45 c3          	cmovne %rbx,%rax
   2d733:	74 20                	je     2d755 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x435>
   2d735:	48 8b 48 10          	mov    0x10(%rax),%rcx
   2d739:	48 39 48 08          	cmp    %rcx,0x8(%rax)
   2d73d:	76 16                	jbe    2d755 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x435>
   2d73f:	48 8b 10             	mov    (%rax),%rdx
   2d742:	80 3c 0a 75          	cmpb   $0x75,(%rdx,%rcx,1)
   2d746:	75 0d                	jne    2d755 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x435>
   2d748:	48 83 c1 01          	add    $0x1,%rcx
   2d74c:	48 89 48 10          	mov    %rcx,0x10(%rax)
   2d750:	45 31 ed             	xor    %r13d,%r13d
   2d753:	eb 1a                	jmp    2d76f <rustc_demangle::v0::Printer::print_type::{{closure}}+0x44f>
   2d755:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d759:	48 8d 35 53 c1 00 00 	lea    0xc153(%rip),%rsi        # 398b3 <str.6+0x2593>
   2d760:	ba 04 00 00 00       	mov    $0x4,%edx
   2d765:	ff 15 d5 82 01 00    	callq  *0x182d5(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2d76b:	84 c0                	test   %al,%al
   2d76d:	74 15                	je     2d784 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x464>
   2d76f:	44 89 e8             	mov    %r13d,%eax
   2d772:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
   2d779:	5b                   	pop    %rbx
   2d77a:	41 5c                	pop    %r12
   2d77c:	41 5d                	pop    %r13
   2d77e:	41 5e                	pop    %r14
   2d780:	41 5f                	pop    %r15
   2d782:	5d                   	pop    %rbp
   2d783:	c3                   	retq   
   2d784:	48 89 df             	mov    %rbx,%rdi
   2d787:	e8 94 f0 ff ff       	callq  2c820 <rustc_demangle::v0::Printer::print_type>
   2d78c:	eb e4                	jmp    2d772 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x452>
   2d78e:	48 8d 3d 48 c0 00 00 	lea    0xc048(%rip),%rdi        # 397dd <str.6+0x24bd>
   2d795:	48 8d 15 0c 79 01 00 	lea    0x1790c(%rip),%rdx        # 450a8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1b70>
   2d79c:	be 2b 00 00 00       	mov    $0x2b,%esi
   2d7a1:	ff 15 31 87 01 00    	callq  *0x18731(%rip)        # 45ed8 <_GLOBAL_OFFSET_TABLE_+0x550>
   2d7a7:	0f 0b                	ud2    
   2d7a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000002d7b0 <rustc_demangle::v0::Printer::print_path_maybe_open_generics>:
   2d7b0:	55                   	push   %rbp
   2d7b1:	41 57                	push   %r15
   2d7b3:	41 56                	push   %r14
   2d7b5:	41 54                	push   %r12
   2d7b7:	53                   	push   %rbx
   2d7b8:	48 83 ec 30          	sub    $0x30,%rsp
   2d7bc:	48 89 fb             	mov    %rdi,%rbx
   2d7bf:	48 8b 07             	mov    (%rdi),%rax
   2d7c2:	48 89 f9             	mov    %rdi,%rcx
   2d7c5:	48 85 c0             	test   %rax,%rax
   2d7c8:	48 0f 44 c8          	cmove  %rax,%rcx
   2d7cc:	0f 84 a3 00 00 00    	je     2d875 <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0xc5>
   2d7d2:	48 8b 51 10          	mov    0x10(%rcx),%rdx
   2d7d6:	48 39 51 08          	cmp    %rdx,0x8(%rcx)
   2d7da:	76 4d                	jbe    2d829 <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x79>
   2d7dc:	48 8b 31             	mov    (%rcx),%rsi
   2d7df:	80 3c 16 42          	cmpb   $0x42,(%rsi,%rdx,1)
   2d7e3:	75 44                	jne    2d829 <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x79>
   2d7e5:	48 83 c2 01          	add    $0x1,%rdx
   2d7e9:	48 89 51 10          	mov    %rdx,0x10(%rcx)
   2d7ed:	48 8b 0b             	mov    (%rbx),%rcx
   2d7f0:	48 85 c9             	test   %rcx,%rcx
   2d7f3:	48 0f 45 cb          	cmovne %rbx,%rcx
   2d7f7:	0f 84 71 01 00 00    	je     2d96e <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x1be>
   2d7fd:	4c 8b 51 10          	mov    0x10(%rcx),%r10
   2d801:	4c 8b 31             	mov    (%rcx),%r14
   2d804:	4c 8b 41 08          	mov    0x8(%rcx),%r8
   2d808:	4c 89 d5             	mov    %r10,%rbp
   2d80b:	4d 39 d0             	cmp    %r10,%r8
   2d80e:	76 76                	jbe    2d886 <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0xd6>
   2d810:	43 80 3c 16 5f       	cmpb   $0x5f,(%r14,%r10,1)
   2d815:	4c 89 c5             	mov    %r8,%rbp
   2d818:	75 6c                	jne    2d886 <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0xd6>
   2d81a:	49 8d 42 01          	lea    0x1(%r10),%rax
   2d81e:	48 89 41 10          	mov    %rax,0x10(%rcx)
   2d822:	31 c0                	xor    %eax,%eax
   2d824:	e9 4a 01 00 00       	jmpq   2d973 <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x1c3>
   2d829:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
   2d82d:	48 39 4b 08          	cmp    %rcx,0x8(%rbx)
   2d831:	76 42                	jbe    2d875 <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0xc5>
   2d833:	80 3c 08 49          	cmpb   $0x49,(%rax,%rcx,1)
   2d837:	75 3c                	jne    2d875 <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0xc5>
   2d839:	48 83 c1 01          	add    $0x1,%rcx
   2d83d:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
   2d841:	48 89 df             	mov    %rbx,%rdi
   2d844:	31 f6                	xor    %esi,%esi
   2d846:	e8 35 e6 ff ff       	callq  2be80 <rustc_demangle::v0::Printer::print_path>
   2d84b:	84 c0                	test   %al,%al
   2d84d:	75 1e                	jne    2d86d <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0xbd>
   2d84f:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d853:	48 8d 35 6d c0 00 00 	lea    0xc06d(%rip),%rsi        # 398c7 <str.6+0x25a7>
   2d85a:	ba 01 00 00 00       	mov    $0x1,%edx
   2d85f:	ff 15 db 81 01 00    	callq  *0x181db(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2d865:	84 c0                	test   %al,%al
   2d867:	0f 84 8c 00 00 00    	je     2d8f9 <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x149>
   2d86d:	41 b7 02             	mov    $0x2,%r15b
   2d870:	e9 38 01 00 00       	jmpq   2d9ad <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x1fd>
   2d875:	48 89 df             	mov    %rbx,%rdi
   2d878:	31 f6                	xor    %esi,%esi
   2d87a:	e8 01 e6 ff ff       	callq  2be80 <rustc_demangle::v0::Printer::print_path>
   2d87f:	00 c0                	add    %al,%al
   2d881:	e9 2a 01 00 00       	jmpq   2d9b0 <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x200>
   2d886:	49 8d 72 01          	lea    0x1(%r10),%rsi
   2d88a:	48 f7 dd             	neg    %rbp
   2d88d:	45 31 c9             	xor    %r9d,%r9d
   2d890:	41 bb 3e 00 00 00    	mov    $0x3e,%r11d
   2d896:	31 c0                	xor    %eax,%eax
   2d898:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2d89f:	00 
   2d8a0:	48 8d 14 2e          	lea    (%rsi,%rbp,1),%rdx
   2d8a4:	48 83 fa 01          	cmp    $0x1,%rdx
   2d8a8:	74 4a                	je     2d8f4 <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x144>
   2d8aa:	41 0f b6 54 36 ff    	movzbl -0x1(%r14,%rsi,1),%edx
   2d8b0:	80 fa 5f             	cmp    $0x5f,%dl
   2d8b3:	0f 84 ac 00 00 00    	je     2d965 <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x1b5>
   2d8b9:	8d 7a d0             	lea    -0x30(%rdx),%edi
   2d8bc:	40 80 ff 0a          	cmp    $0xa,%dil
   2d8c0:	72 1c                	jb     2d8de <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x12e>
   2d8c2:	8d 7a 9f             	lea    -0x61(%rdx),%edi
   2d8c5:	40 80 ff 1a          	cmp    $0x1a,%dil
   2d8c9:	73 05                	jae    2d8d0 <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x120>
   2d8cb:	80 c2 a9             	add    $0xa9,%dl
   2d8ce:	eb 0c                	jmp    2d8dc <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x12c>
   2d8d0:	8d 7a bf             	lea    -0x41(%rdx),%edi
   2d8d3:	40 80 ff 1a          	cmp    $0x1a,%dil
   2d8d7:	73 1b                	jae    2d8f4 <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x144>
   2d8d9:	80 c2 e3             	add    $0xe3,%dl
   2d8dc:	89 d7                	mov    %edx,%edi
   2d8de:	48 89 71 10          	mov    %rsi,0x10(%rcx)
   2d8e2:	49 f7 e3             	mul    %r11
   2d8e5:	70 0d                	jo     2d8f4 <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x144>
   2d8e7:	40 0f b6 d7          	movzbl %dil,%edx
   2d8eb:	48 83 c6 01          	add    $0x1,%rsi
   2d8ef:	48 01 d0             	add    %rdx,%rax
   2d8f2:	73 ac                	jae    2d8a0 <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0xf0>
   2d8f4:	e9 88 00 00 00       	jmpq   2d981 <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x1d1>
   2d8f9:	41 b7 01             	mov    $0x1,%r15b
   2d8fc:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   2d900:	0f 84 a7 00 00 00    	je     2d9ad <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x1fd>
   2d906:	31 ed                	xor    %ebp,%ebp
   2d908:	4c 8d 35 54 c0 00 00 	lea    0xc054(%rip),%r14        # 39963 <str.6+0x2643>
   2d90f:	4c 8d 25 9a 41 00 00 	lea    0x419a(%rip),%r12        # 31ab0 <core::fmt::Formatter::write_str>
   2d916:	48 8b 43 10          	mov    0x10(%rbx),%rax
   2d91a:	48 39 43 08          	cmp    %rax,0x8(%rbx)
   2d91e:	76 0d                	jbe    2d92d <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x17d>
   2d920:	48 8b 0b             	mov    (%rbx),%rcx
   2d923:	80 3c 01 45          	cmpb   $0x45,(%rcx,%rax,1)
   2d927:	0f 84 90 00 00 00    	je     2d9bd <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x20d>
   2d92d:	48 85 ed             	test   %rbp,%rbp
   2d930:	74 17                	je     2d949 <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x199>
   2d932:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d936:	ba 02 00 00 00       	mov    $0x2,%edx
   2d93b:	4c 89 f6             	mov    %r14,%rsi
   2d93e:	41 ff d4             	callq  *%r12
   2d941:	84 c0                	test   %al,%al
   2d943:	0f 85 24 ff ff ff    	jne    2d86d <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0xbd>
   2d949:	48 89 df             	mov    %rbx,%rdi
   2d94c:	e8 af ed ff ff       	callq  2c700 <rustc_demangle::v0::Printer::print_generic_arg>
   2d951:	84 c0                	test   %al,%al
   2d953:	0f 85 14 ff ff ff    	jne    2d86d <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0xbd>
   2d959:	48 83 c5 ff          	add    $0xffffffffffffffff,%rbp
   2d95d:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   2d961:	75 b3                	jne    2d916 <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x166>
   2d963:	eb 48                	jmp    2d9ad <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x1fd>
   2d965:	48 89 71 10          	mov    %rsi,0x10(%rcx)
   2d969:	48 ff c0             	inc    %rax
   2d96c:	75 05                	jne    2d973 <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x1c3>
   2d96e:	45 31 c9             	xor    %r9d,%r9d
   2d971:	eb 0e                	jmp    2d981 <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x1d1>
   2d973:	49 83 c2 ff          	add    $0xffffffffffffffff,%r10
   2d977:	45 31 c9             	xor    %r9d,%r9d
   2d97a:	4c 39 d0             	cmp    %r10,%rax
   2d97d:	4d 0f 42 ce          	cmovb  %r14,%r9
   2d981:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
   2d985:	8b 53 20             	mov    0x20(%rbx),%edx
   2d988:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   2d98d:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
   2d992:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2d997:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   2d99c:	89 54 24 28          	mov    %edx,0x28(%rsp)
   2d9a0:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   2d9a5:	e8 06 fe ff ff       	callq  2d7b0 <rustc_demangle::v0::Printer::print_path_maybe_open_generics>
   2d9aa:	41 89 c7             	mov    %eax,%r15d
   2d9ad:	44 89 f8             	mov    %r15d,%eax
   2d9b0:	48 83 c4 30          	add    $0x30,%rsp
   2d9b4:	5b                   	pop    %rbx
   2d9b5:	41 5c                	pop    %r12
   2d9b7:	41 5e                	pop    %r14
   2d9b9:	41 5f                	pop    %r15
   2d9bb:	5d                   	pop    %rbp
   2d9bc:	c3                   	retq   
   2d9bd:	48 83 c0 01          	add    $0x1,%rax
   2d9c1:	48 89 43 10          	mov    %rax,0x10(%rbx)
   2d9c5:	eb e6                	jmp    2d9ad <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x1fd>
   2d9c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2d9ce:	00 00 

000000000002d9d0 <rustc_demangle::v0::Printer::print_dyn_trait>:
   2d9d0:	55                   	push   %rbp
   2d9d1:	41 57                	push   %r15
   2d9d3:	41 56                	push   %r14
   2d9d5:	41 55                	push   %r13
   2d9d7:	41 54                	push   %r12
   2d9d9:	53                   	push   %rbx
   2d9da:	48 83 ec 48          	sub    $0x48,%rsp
   2d9de:	48 89 fb             	mov    %rdi,%rbx
   2d9e1:	e8 ca fd ff ff       	callq  2d7b0 <rustc_demangle::v0::Printer::print_path_maybe_open_generics>
   2d9e6:	40 b5 01             	mov    $0x1,%bpl
   2d9e9:	3c 02                	cmp    $0x2,%al
   2d9eb:	0f 84 35 01 00 00    	je     2db26 <rustc_demangle::v0::Printer::print_dyn_trait+0x156>
   2d9f1:	41 89 c6             	mov    %eax,%r14d
   2d9f4:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   2d9f8:	0f 84 db 00 00 00    	je     2dad9 <rustc_demangle::v0::Printer::print_dyn_trait+0x109>
   2d9fe:	4c 8d 2d ab 40 00 00 	lea    0x40ab(%rip),%r13        # 31ab0 <core::fmt::Formatter::write_str>
   2da05:	49 89 e4             	mov    %rsp,%r12
   2da08:	41 b7 01             	mov    $0x1,%r15b
   2da0b:	48 8b 43 10          	mov    0x10(%rbx),%rax
   2da0f:	48 39 43 08          	cmp    %rax,0x8(%rbx)
   2da13:	0f 86 c0 00 00 00    	jbe    2dad9 <rustc_demangle::v0::Printer::print_dyn_trait+0x109>
   2da19:	48 8b 0b             	mov    (%rbx),%rcx
   2da1c:	80 3c 01 70          	cmpb   $0x70,(%rcx,%rax,1)
   2da20:	0f 85 b3 00 00 00    	jne    2dad9 <rustc_demangle::v0::Printer::print_dyn_trait+0x109>
   2da26:	48 83 c0 01          	add    $0x1,%rax
   2da2a:	48 89 43 10          	mov    %rax,0x10(%rbx)
   2da2e:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2da32:	41 f6 c6 01          	test   $0x1,%r14b
   2da36:	74 18                	je     2da50 <rustc_demangle::v0::Printer::print_dyn_trait+0x80>
   2da38:	ba 02 00 00 00       	mov    $0x2,%edx
   2da3d:	48 8d 35 1f bf 00 00 	lea    0xbf1f(%rip),%rsi        # 39963 <str.6+0x2643>
   2da44:	41 ff d5             	callq  *%r13
   2da47:	84 c0                	test   %al,%al
   2da49:	74 1f                	je     2da6a <rustc_demangle::v0::Printer::print_dyn_trait+0x9a>
   2da4b:	e9 d6 00 00 00       	jmpq   2db26 <rustc_demangle::v0::Printer::print_dyn_trait+0x156>
   2da50:	ba 01 00 00 00       	mov    $0x1,%edx
   2da55:	48 8d 35 6b be 00 00 	lea    0xbe6b(%rip),%rsi        # 398c7 <str.6+0x25a7>
   2da5c:	41 ff d5             	callq  *%r13
   2da5f:	41 b6 01             	mov    $0x1,%r14b
   2da62:	84 c0                	test   %al,%al
   2da64:	0f 85 cd 00 00 00    	jne    2db37 <rustc_demangle::v0::Printer::print_dyn_trait+0x167>
   2da6a:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   2da6e:	0f 84 87 00 00 00    	je     2dafb <rustc_demangle::v0::Printer::print_dyn_trait+0x12b>
   2da74:	4c 89 e7             	mov    %r12,%rdi
   2da77:	48 89 de             	mov    %rbx,%rsi
   2da7a:	e8 21 d4 ff ff       	callq  2aea0 <rustc_demangle::v0::Parser::ident>
   2da7f:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
   2da84:	74 7d                	je     2db03 <rustc_demangle::v0::Printer::print_dyn_trait+0x133>
   2da86:	0f 10 04 24          	movups (%rsp),%xmm0
   2da8a:	0f 10 4c 24 10       	movups 0x10(%rsp),%xmm1
   2da8f:	0f 29 4c 24 30       	movaps %xmm1,0x30(%rsp)
   2da94:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   2da99:	48 8b 73 18          	mov    0x18(%rbx),%rsi
   2da9d:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   2daa2:	ff 15 a8 80 01 00    	callq  *0x180a8(%rip)        # 45b50 <_GLOBAL_OFFSET_TABLE_+0x1c8>
   2daa8:	84 c0                	test   %al,%al
   2daaa:	75 77                	jne    2db23 <rustc_demangle::v0::Printer::print_dyn_trait+0x153>
   2daac:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2dab0:	ba 03 00 00 00       	mov    $0x3,%edx
   2dab5:	48 8d 35 d9 be 00 00 	lea    0xbed9(%rip),%rsi        # 39995 <str.6+0x2675>
   2dabc:	41 ff d5             	callq  *%r13
   2dabf:	84 c0                	test   %al,%al
   2dac1:	75 60                	jne    2db23 <rustc_demangle::v0::Printer::print_dyn_trait+0x153>
   2dac3:	48 89 df             	mov    %rbx,%rdi
   2dac6:	e8 55 ed ff ff       	callq  2c820 <rustc_demangle::v0::Printer::print_type>
   2dacb:	84 c0                	test   %al,%al
   2dacd:	75 54                	jne    2db23 <rustc_demangle::v0::Printer::print_dyn_trait+0x153>
   2dacf:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   2dad3:	0f 85 32 ff ff ff    	jne    2da0b <rustc_demangle::v0::Printer::print_dyn_trait+0x3b>
   2dad9:	41 f6 c6 01          	test   $0x1,%r14b
   2dadd:	75 04                	jne    2dae3 <rustc_demangle::v0::Printer::print_dyn_trait+0x113>
   2dadf:	31 ed                	xor    %ebp,%ebp
   2dae1:	eb 43                	jmp    2db26 <rustc_demangle::v0::Printer::print_dyn_trait+0x156>
   2dae3:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2dae7:	48 8d 35 dc bd 00 00 	lea    0xbddc(%rip),%rsi        # 398ca <str.6+0x25aa>
   2daee:	ba 01 00 00 00       	mov    $0x1,%edx
   2daf3:	ff 15 47 7f 01 00    	callq  *0x17f47(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2daf9:	eb 2d                	jmp    2db28 <rustc_demangle::v0::Printer::print_dyn_trait+0x158>
   2dafb:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   2db02:	00 
   2db03:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   2db0a:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2db0e:	48 8d 35 4d be 00 00 	lea    0xbe4d(%rip),%rsi        # 39962 <str.6+0x2642>
   2db15:	ba 01 00 00 00       	mov    $0x1,%edx
   2db1a:	ff 15 20 7f 01 00    	callq  *0x17f20(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2db20:	41 89 c7             	mov    %eax,%r15d
   2db23:	44 89 fd             	mov    %r15d,%ebp
   2db26:	89 e8                	mov    %ebp,%eax
   2db28:	48 83 c4 48          	add    $0x48,%rsp
   2db2c:	5b                   	pop    %rbx
   2db2d:	41 5c                	pop    %r12
   2db2f:	41 5d                	pop    %r13
   2db31:	41 5e                	pop    %r14
   2db33:	41 5f                	pop    %r15
   2db35:	5d                   	pop    %rbp
   2db36:	c3                   	retq   
   2db37:	40 b5 01             	mov    $0x1,%bpl
   2db3a:	eb ea                	jmp    2db26 <rustc_demangle::v0::Printer::print_dyn_trait+0x156>
   2db3c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000002db40 <rustc_demangle::v0::Printer::print_const>:
   2db40:	55                   	push   %rbp
   2db41:	41 57                	push   %r15
   2db43:	41 56                	push   %r14
   2db45:	41 55                	push   %r13
   2db47:	41 54                	push   %r12
   2db49:	53                   	push   %rbx
   2db4a:	48 83 ec 28          	sub    $0x28,%rsp
   2db4e:	49 89 ff             	mov    %rdi,%r15
   2db51:	4c 8b 27             	mov    (%rdi),%r12
   2db54:	48 89 f8             	mov    %rdi,%rax
   2db57:	4d 85 e4             	test   %r12,%r12
   2db5a:	49 0f 44 c4          	cmove  %r12,%rax
   2db5e:	0f 84 bc 00 00 00    	je     2dc20 <rustc_demangle::v0::Printer::print_const+0xe0>
   2db64:	48 8b 48 10          	mov    0x10(%rax),%rcx
   2db68:	48 39 48 08          	cmp    %rcx,0x8(%rax)
   2db6c:	76 55                	jbe    2dbc3 <rustc_demangle::v0::Printer::print_const+0x83>
   2db6e:	48 8b 10             	mov    (%rax),%rdx
   2db71:	80 3c 0a 42          	cmpb   $0x42,(%rdx,%rcx,1)
   2db75:	75 4c                	jne    2dbc3 <rustc_demangle::v0::Printer::print_const+0x83>
   2db77:	48 83 c1 01          	add    $0x1,%rcx
   2db7b:	48 89 48 10          	mov    %rcx,0x10(%rax)
   2db7f:	49 8b 0f             	mov    (%r15),%rcx
   2db82:	48 85 c9             	test   %rcx,%rcx
   2db85:	49 0f 45 cf          	cmovne %r15,%rcx
   2db89:	0f 84 1e 03 00 00    	je     2dead <rustc_demangle::v0::Printer::print_const+0x36d>
   2db8f:	4c 8b 51 10          	mov    0x10(%rcx),%r10
   2db93:	4c 8b 31             	mov    (%rcx),%r14
   2db96:	4c 8b 41 08          	mov    0x8(%rcx),%r8
   2db9a:	4c 89 d5             	mov    %r10,%rbp
   2db9d:	4d 39 d0             	cmp    %r10,%r8
   2dba0:	0f 86 a5 00 00 00    	jbe    2dc4b <rustc_demangle::v0::Printer::print_const+0x10b>
   2dba6:	43 80 3c 16 5f       	cmpb   $0x5f,(%r14,%r10,1)
   2dbab:	4c 89 c5             	mov    %r8,%rbp
   2dbae:	0f 85 97 00 00 00    	jne    2dc4b <rustc_demangle::v0::Printer::print_const+0x10b>
   2dbb4:	49 8d 42 01          	lea    0x1(%r10),%rax
   2dbb8:	48 89 41 10          	mov    %rax,0x10(%rcx)
   2dbbc:	31 c0                	xor    %eax,%eax
   2dbbe:	e9 ef 02 00 00       	jmpq   2deb2 <rustc_demangle::v0::Printer::print_const+0x372>
   2dbc3:	49 8b 77 08          	mov    0x8(%r15),%rsi
   2dbc7:	49 8b 6f 10          	mov    0x10(%r15),%rbp
   2dbcb:	48 39 ee             	cmp    %rbp,%rsi
   2dbce:	76 50                	jbe    2dc20 <rustc_demangle::v0::Printer::print_const+0xe0>
   2dbd0:	41 8a 04 2c          	mov    (%r12,%rbp,1),%al
   2dbd4:	48 8d 55 01          	lea    0x1(%rbp),%rdx
   2dbd8:	49 89 57 10          	mov    %rdx,0x10(%r15)
   2dbdc:	04 98                	add    $0x98,%al
   2dbde:	3c 11                	cmp    $0x11,%al
   2dbe0:	77 3e                	ja     2dc20 <rustc_demangle::v0::Printer::print_const+0xe0>
   2dbe2:	4c 8d 2d 63 bd 00 00 	lea    0xbd63(%rip),%r13        # 3994c <str.6+0x262c>
   2dbe9:	41 be 02 00 00 00    	mov    $0x2,%r14d
   2dbef:	0f b6 c0             	movzbl %al,%eax
   2dbf2:	48 8d 0d 4b bb 00 00 	lea    0xbb4b(%rip),%rcx        # 39744 <str.6+0x2424>
   2dbf9:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   2dbfd:	48 01 c8             	add    %rcx,%rax
   2dc00:	ff e0                	jmpq   *%rax
   2dc02:	4c 8d 2d 35 bd 00 00 	lea    0xbd35(%rip),%r13        # 3993e <str.6+0x261e>
   2dc09:	41 be 05 00 00 00    	mov    $0x5,%r14d
   2dc0f:	48 89 d0             	mov    %rdx,%rax
   2dc12:	48 39 d6             	cmp    %rdx,%rsi
   2dc15:	0f 87 e1 00 00 00    	ja     2dcfc <rustc_demangle::v0::Printer::print_const+0x1bc>
   2dc1b:	e9 13 01 00 00       	jmpq   2dd33 <rustc_demangle::v0::Printer::print_const+0x1f3>
   2dc20:	49 c7 07 00 00 00 00 	movq   $0x0,(%r15)
   2dc27:	49 8b 7f 18          	mov    0x18(%r15),%rdi
   2dc2b:	48 8d 35 30 bd 00 00 	lea    0xbd30(%rip),%rsi        # 39962 <str.6+0x2642>
   2dc32:	ba 01 00 00 00       	mov    $0x1,%edx
   2dc37:	48 83 c4 28          	add    $0x28,%rsp
   2dc3b:	5b                   	pop    %rbx
   2dc3c:	41 5c                	pop    %r12
   2dc3e:	41 5d                	pop    %r13
   2dc40:	41 5e                	pop    %r14
   2dc42:	41 5f                	pop    %r15
   2dc44:	5d                   	pop    %rbp
   2dc45:	ff 25 f5 7d 01 00    	jmpq   *0x17df5(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2dc4b:	49 8d 72 01          	lea    0x1(%r10),%rsi
   2dc4f:	48 f7 dd             	neg    %rbp
   2dc52:	45 31 c9             	xor    %r9d,%r9d
   2dc55:	41 bb 3e 00 00 00    	mov    $0x3e,%r11d
   2dc5b:	31 c0                	xor    %eax,%eax
   2dc5d:	0f 1f 00             	nopl   (%rax)
   2dc60:	48 8d 14 2e          	lea    (%rsi,%rbp,1),%rdx
   2dc64:	48 83 fa 01          	cmp    $0x1,%rdx
   2dc68:	74 4a                	je     2dcb4 <rustc_demangle::v0::Printer::print_const+0x174>
   2dc6a:	41 0f b6 54 36 ff    	movzbl -0x1(%r14,%rsi,1),%edx
   2dc70:	80 fa 5f             	cmp    $0x5f,%dl
   2dc73:	0f 84 2b 02 00 00    	je     2dea4 <rustc_demangle::v0::Printer::print_const+0x364>
   2dc79:	8d 7a d0             	lea    -0x30(%rdx),%edi
   2dc7c:	40 80 ff 0a          	cmp    $0xa,%dil
   2dc80:	72 1c                	jb     2dc9e <rustc_demangle::v0::Printer::print_const+0x15e>
   2dc82:	8d 7a 9f             	lea    -0x61(%rdx),%edi
   2dc85:	40 80 ff 1a          	cmp    $0x1a,%dil
   2dc89:	73 05                	jae    2dc90 <rustc_demangle::v0::Printer::print_const+0x150>
   2dc8b:	80 c2 a9             	add    $0xa9,%dl
   2dc8e:	eb 0c                	jmp    2dc9c <rustc_demangle::v0::Printer::print_const+0x15c>
   2dc90:	8d 7a bf             	lea    -0x41(%rdx),%edi
   2dc93:	40 80 ff 1a          	cmp    $0x1a,%dil
   2dc97:	73 1b                	jae    2dcb4 <rustc_demangle::v0::Printer::print_const+0x174>
   2dc99:	80 c2 e3             	add    $0xe3,%dl
   2dc9c:	89 d7                	mov    %edx,%edi
   2dc9e:	48 89 71 10          	mov    %rsi,0x10(%rcx)
   2dca2:	49 f7 e3             	mul    %r11
   2dca5:	70 0d                	jo     2dcb4 <rustc_demangle::v0::Printer::print_const+0x174>
   2dca7:	40 0f b6 d7          	movzbl %dil,%edx
   2dcab:	48 83 c6 01          	add    $0x1,%rsi
   2dcaf:	48 01 d0             	add    %rdx,%rax
   2dcb2:	73 ac                	jae    2dc60 <rustc_demangle::v0::Printer::print_const+0x120>
   2dcb4:	e9 07 02 00 00       	jmpq   2dec0 <rustc_demangle::v0::Printer::print_const+0x380>
   2dcb9:	4c 8d 2d 86 bc 00 00 	lea    0xbc86(%rip),%r13        # 39946 <str.6+0x2626>
   2dcc0:	41 be 03 00 00 00    	mov    $0x3,%r14d
   2dcc6:	48 89 d0             	mov    %rdx,%rax
   2dcc9:	48 39 d6             	cmp    %rdx,%rsi
   2dccc:	77 2e                	ja     2dcfc <rustc_demangle::v0::Printer::print_const+0x1bc>
   2dcce:	eb 63                	jmp    2dd33 <rustc_demangle::v0::Printer::print_const+0x1f3>
   2dcd0:	4c 8d 2d 6c bc 00 00 	lea    0xbc6c(%rip),%r13        # 39943 <str.6+0x2623>
   2dcd7:	41 be 03 00 00 00    	mov    $0x3,%r14d
   2dcdd:	48 89 d0             	mov    %rdx,%rax
   2dce0:	48 39 d6             	cmp    %rdx,%rsi
   2dce3:	77 17                	ja     2dcfc <rustc_demangle::v0::Printer::print_const+0x1bc>
   2dce5:	eb 4c                	jmp    2dd33 <rustc_demangle::v0::Printer::print_const+0x1f3>
   2dce7:	4c 8d 2d a1 bb 00 00 	lea    0xbba1(%rip),%r13        # 3988f <str.6+0x256f>
   2dcee:	41 be 04 00 00 00    	mov    $0x4,%r14d
   2dcf4:	48 89 d0             	mov    %rdx,%rax
   2dcf7:	48 39 d6             	cmp    %rdx,%rsi
   2dcfa:	76 37                	jbe    2dd33 <rustc_demangle::v0::Printer::print_const+0x1f3>
   2dcfc:	41 80 3c 14 70       	cmpb   $0x70,(%r12,%rdx,1)
   2dd01:	48 89 f0             	mov    %rsi,%rax
   2dd04:	75 2d                	jne    2dd33 <rustc_demangle::v0::Printer::print_const+0x1f3>
   2dd06:	48 83 c5 02          	add    $0x2,%rbp
   2dd0a:	49 89 6f 10          	mov    %rbp,0x10(%r15)
   2dd0e:	49 8b 7f 18          	mov    0x18(%r15),%rdi
   2dd12:	48 8d 35 1d bc 00 00 	lea    0xbc1d(%rip),%rsi        # 39936 <str.6+0x2616>
   2dd19:	e9 05 01 00 00       	jmpq   2de23 <rustc_demangle::v0::Printer::print_const+0x2e3>
   2dd1e:	4c 8d 2d 24 bc 00 00 	lea    0xbc24(%rip),%r13        # 39949 <str.6+0x2629>
   2dd25:	41 be 03 00 00 00    	mov    $0x3,%r14d
   2dd2b:	48 89 d0             	mov    %rdx,%rax
   2dd2e:	48 39 d6             	cmp    %rdx,%rsi
   2dd31:	77 c9                	ja     2dcfc <rustc_demangle::v0::Printer::print_const+0x1bc>
   2dd33:	4d 8d 0c 2c          	lea    (%r12,%rbp,1),%r9
   2dd37:	48 89 e9             	mov    %rbp,%rcx
   2dd3a:	48 29 c1             	sub    %rax,%rcx
   2dd3d:	48 83 c1 01          	add    $0x1,%rcx
   2dd41:	31 ff                	xor    %edi,%edi
   2dd43:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2dd4a:	00 00 00 
   2dd4d:	0f 1f 00             	nopl   (%rax)
   2dd50:	48 89 c8             	mov    %rcx,%rax
   2dd53:	48 01 f8             	add    %rdi,%rax
   2dd56:	0f 84 b5 00 00 00    	je     2de11 <rustc_demangle::v0::Printer::print_const+0x2d1>
   2dd5c:	41 0f b6 44 39 01    	movzbl 0x1(%r9,%rdi,1),%eax
   2dd62:	48 8d 1c 2f          	lea    (%rdi,%rbp,1),%rbx
   2dd66:	48 83 c3 02          	add    $0x2,%rbx
   2dd6a:	49 89 5f 10          	mov    %rbx,0x10(%r15)
   2dd6e:	8d 58 d0             	lea    -0x30(%rax),%ebx
   2dd71:	48 83 c7 01          	add    $0x1,%rdi
   2dd75:	80 fb 0a             	cmp    $0xa,%bl
   2dd78:	72 d6                	jb     2dd50 <rustc_demangle::v0::Printer::print_const+0x210>
   2dd7a:	8d 58 9f             	lea    -0x61(%rax),%ebx
   2dd7d:	80 fb 06             	cmp    $0x6,%bl
   2dd80:	72 ce                	jb     2dd50 <rustc_demangle::v0::Printer::print_const+0x210>
   2dd82:	3c 5f                	cmp    $0x5f,%al
   2dd84:	0f 85 87 00 00 00    	jne    2de11 <rustc_demangle::v0::Printer::print_const+0x2d1>
   2dd8a:	48 8d 0c 2f          	lea    (%rdi,%rbp,1),%rcx
   2dd8e:	48 39 e9             	cmp    %rbp,%rcx
   2dd91:	0f 86 a2 02 00 00    	jbe    2e039 <rustc_demangle::v0::Printer::print_const+0x4f9>
   2dd97:	4c 89 eb             	mov    %r13,%rbx
   2dd9a:	48 39 d6             	cmp    %rdx,%rsi
   2dd9d:	74 11                	je     2ddb0 <rustc_demangle::v0::Printer::print_const+0x270>
   2dd9f:	0f 86 94 02 00 00    	jbe    2e039 <rustc_demangle::v0::Printer::print_const+0x4f9>
   2dda5:	41 80 3c 14 bf       	cmpb   $0xbf,(%r12,%rdx,1)
   2ddaa:	0f 8e 89 02 00 00    	jle    2e039 <rustc_demangle::v0::Printer::print_const+0x4f9>
   2ddb0:	48 29 f5             	sub    %rsi,%rbp
   2ddb3:	48 01 fd             	add    %rdi,%rbp
   2ddb6:	74 0b                	je     2ddc3 <rustc_demangle::v0::Printer::print_const+0x283>
   2ddb8:	41 80 3c 39 bf       	cmpb   $0xbf,(%r9,%rdi,1)
   2ddbd:	0f 8e 76 02 00 00    	jle    2e039 <rustc_demangle::v0::Printer::print_const+0x4f9>
   2ddc3:	4c 8d 6f ff          	lea    -0x1(%rdi),%r13
   2ddc7:	49 01 d4             	add    %rdx,%r12
   2ddca:	49 83 fd 10          	cmp    $0x10,%r13
   2ddce:	0f 86 a7 00 00 00    	jbe    2de7b <rustc_demangle::v0::Printer::print_const+0x33b>
   2ddd4:	49 8b 7f 18          	mov    0x18(%r15),%rdi
   2ddd8:	48 8d 35 bb bb 00 00 	lea    0xbbbb(%rip),%rsi        # 3999a <str.6+0x267a>
   2dddf:	ba 02 00 00 00       	mov    $0x2,%edx
   2dde4:	ff 15 56 7c 01 00    	callq  *0x17c56(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2ddea:	40 b5 01             	mov    $0x1,%bpl
   2dded:	84 c0                	test   %al,%al
   2ddef:	0f 85 ab 00 00 00    	jne    2dea0 <rustc_demangle::v0::Printer::print_const+0x360>
   2ddf5:	49 8b 7f 18          	mov    0x18(%r15),%rdi
   2ddf9:	4c 89 e6             	mov    %r12,%rsi
   2ddfc:	4c 89 ea             	mov    %r13,%rdx
   2ddff:	ff 15 3b 7c 01 00    	callq  *0x17c3b(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2de05:	84 c0                	test   %al,%al
   2de07:	49 89 dd             	mov    %rbx,%r13
   2de0a:	74 29                	je     2de35 <rustc_demangle::v0::Printer::print_const+0x2f5>
   2de0c:	e9 8f 00 00 00       	jmpq   2dea0 <rustc_demangle::v0::Printer::print_const+0x360>
   2de11:	49 c7 07 00 00 00 00 	movq   $0x0,(%r15)
   2de18:	49 8b 7f 18          	mov    0x18(%r15),%rdi
   2de1c:	48 8d 35 3f bb 00 00 	lea    0xbb3f(%rip),%rsi        # 39962 <str.6+0x2642>
   2de23:	ba 01 00 00 00       	mov    $0x1,%edx
   2de28:	ff 15 12 7c 01 00    	callq  *0x17c12(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2de2e:	40 b5 01             	mov    $0x1,%bpl
   2de31:	84 c0                	test   %al,%al
   2de33:	75 6b                	jne    2dea0 <rustc_demangle::v0::Printer::print_const+0x360>
   2de35:	49 8b 7f 18          	mov    0x18(%r15),%rdi
   2de39:	ff 15 09 7c 01 00    	callq  *0x17c09(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xc0>
   2de3f:	84 c0                	test   %al,%al
   2de41:	74 09                	je     2de4c <rustc_demangle::v0::Printer::print_const+0x30c>
   2de43:	31 ed                	xor    %ebp,%ebp
   2de45:	89 e8                	mov    %ebp,%eax
   2de47:	e9 9d 00 00 00       	jmpq   2dee9 <rustc_demangle::v0::Printer::print_const+0x3a9>
   2de4c:	49 8b 7f 18          	mov    0x18(%r15),%rdi
   2de50:	48 8d 35 41 bb 00 00 	lea    0xbb41(%rip),%rsi        # 39998 <str.6+0x2678>
   2de57:	ba 02 00 00 00       	mov    $0x2,%edx
   2de5c:	ff 15 de 7b 01 00    	callq  *0x17bde(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2de62:	40 b5 01             	mov    $0x1,%bpl
   2de65:	84 c0                	test   %al,%al
   2de67:	75 37                	jne    2dea0 <rustc_demangle::v0::Printer::print_const+0x360>
   2de69:	49 8b 7f 18          	mov    0x18(%r15),%rdi
   2de6d:	4c 89 ee             	mov    %r13,%rsi
   2de70:	4c 89 f2             	mov    %r14,%rdx
   2de73:	ff 15 c7 7b 01 00    	callq  *0x17bc7(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2de79:	eb 6e                	jmp    2dee9 <rustc_demangle::v0::Printer::print_const+0x3a9>
   2de7b:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   2de82:	00 
   2de83:	48 83 ff 01          	cmp    $0x1,%rdi
   2de87:	49 89 dd             	mov    %rbx,%r13
   2de8a:	75 6c                	jne    2def8 <rustc_demangle::v0::Printer::print_const+0x3b8>
   2de8c:	49 8b 77 18          	mov    0x18(%r15),%rsi
   2de90:	48 89 e7             	mov    %rsp,%rdi
   2de93:	ff 15 ff 7c 01 00    	callq  *0x17cff(%rip)        # 45b98 <_GLOBAL_OFFSET_TABLE_+0x210>
   2de99:	40 b5 01             	mov    $0x1,%bpl
   2de9c:	84 c0                	test   %al,%al
   2de9e:	74 95                	je     2de35 <rustc_demangle::v0::Printer::print_const+0x2f5>
   2dea0:	89 e8                	mov    %ebp,%eax
   2dea2:	eb 45                	jmp    2dee9 <rustc_demangle::v0::Printer::print_const+0x3a9>
   2dea4:	48 89 71 10          	mov    %rsi,0x10(%rcx)
   2dea8:	48 ff c0             	inc    %rax
   2deab:	75 05                	jne    2deb2 <rustc_demangle::v0::Printer::print_const+0x372>
   2dead:	45 31 c9             	xor    %r9d,%r9d
   2deb0:	eb 0e                	jmp    2dec0 <rustc_demangle::v0::Printer::print_const+0x380>
   2deb2:	49 83 c2 ff          	add    $0xffffffffffffffff,%r10
   2deb6:	45 31 c9             	xor    %r9d,%r9d
   2deb9:	4c 39 d0             	cmp    %r10,%rax
   2debc:	4d 0f 42 ce          	cmovb  %r14,%r9
   2dec0:	49 8b 4f 18          	mov    0x18(%r15),%rcx
   2dec4:	41 8b 57 20          	mov    0x20(%r15),%edx
   2dec8:	4c 89 0c 24          	mov    %r9,(%rsp)
   2decc:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   2ded1:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   2ded6:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   2dedb:	89 54 24 20          	mov    %edx,0x20(%rsp)
   2dedf:	48 89 e7             	mov    %rsp,%rdi
   2dee2:	e8 59 fc ff ff       	callq  2db40 <rustc_demangle::v0::Printer::print_const>
   2dee7:	89 c5                	mov    %eax,%ebp
   2dee9:	48 83 c4 28          	add    $0x28,%rsp
   2deed:	5b                   	pop    %rbx
   2deee:	41 5c                	pop    %r12
   2def0:	41 5d                	pop    %r13
   2def2:	41 5e                	pop    %r14
   2def4:	41 5f                	pop    %r15
   2def6:	5d                   	pop    %rbp
   2def7:	c3                   	retq   
   2def8:	4d 8d 04 39          	lea    (%r9,%rdi,1),%r8
   2defc:	49 f7 d9             	neg    %r9
   2deff:	31 d2                	xor    %edx,%edx
   2df01:	eb 27                	jmp    2df2a <rustc_demangle::v0::Printer::print_const+0x3ea>
   2df03:	01 c6                	add    %eax,%esi
   2df05:	89 f0                	mov    %esi,%eax
   2df07:	83 fe 10             	cmp    $0x10,%esi
   2df0a:	0f 83 0e 01 00 00    	jae    2e01e <rustc_demangle::v0::Printer::print_const+0x4de>
   2df10:	4b 8d 0c 0c          	lea    (%r12,%r9,1),%rcx
   2df14:	48 c1 e2 04          	shl    $0x4,%rdx
   2df18:	89 c0                	mov    %eax,%eax
   2df1a:	48 09 c2             	or     %rax,%rdx
   2df1d:	48 89 14 24          	mov    %rdx,(%rsp)
   2df21:	48 39 f9             	cmp    %rdi,%rcx
   2df24:	0f 84 62 ff ff ff    	je     2de8c <rustc_demangle::v0::Printer::print_const+0x34c>
   2df2a:	41 0f b6 2c 24       	movzbl (%r12),%ebp
   2df2f:	40 84 ed             	test   %bpl,%bpl
   2df32:	78 0b                	js     2df3f <rustc_demangle::v0::Printer::print_const+0x3ff>
   2df34:	49 83 c4 01          	add    $0x1,%r12
   2df38:	89 ee                	mov    %ebp,%esi
   2df3a:	e9 b1 00 00 00       	jmpq   2dff0 <rustc_demangle::v0::Printer::print_const+0x4b0>
   2df3f:	4b 8d 04 0c          	lea    (%r12,%r9,1),%rax
   2df43:	48 83 c0 01          	add    $0x1,%rax
   2df47:	48 39 f8             	cmp    %rdi,%rax
   2df4a:	74 4f                	je     2df9b <rustc_demangle::v0::Printer::print_const+0x45b>
   2df4c:	41 0f b6 74 24 01    	movzbl 0x1(%r12),%esi
   2df52:	49 83 c4 02          	add    $0x2,%r12
   2df56:	83 e6 3f             	and    $0x3f,%esi
   2df59:	89 e9                	mov    %ebp,%ecx
   2df5b:	83 e1 1f             	and    $0x1f,%ecx
   2df5e:	40 80 fd df          	cmp    $0xdf,%bpl
   2df62:	76 47                	jbe    2dfab <rustc_demangle::v0::Printer::print_const+0x46b>
   2df64:	4b 8d 04 0c          	lea    (%r12,%r9,1),%rax
   2df68:	48 39 f8             	cmp    %rdi,%rax
   2df6b:	74 45                	je     2dfb2 <rustc_demangle::v0::Printer::print_const+0x472>
   2df6d:	41 0f b6 04 24       	movzbl (%r12),%eax
   2df72:	49 83 c4 01          	add    $0x1,%r12
   2df76:	83 e0 3f             	and    $0x3f,%eax
   2df79:	c1 e6 06             	shl    $0x6,%esi
   2df7c:	09 c6                	or     %eax,%esi
   2df7e:	40 80 fd f0          	cmp    $0xf0,%bpl
   2df82:	72 3e                	jb     2dfc2 <rustc_demangle::v0::Printer::print_const+0x482>
   2df84:	4b 8d 04 0c          	lea    (%r12,%r9,1),%rax
   2df88:	48 39 f8             	cmp    %rdi,%rax
   2df8b:	74 3c                	je     2dfc9 <rustc_demangle::v0::Printer::print_const+0x489>
   2df8d:	41 0f b6 04 24       	movzbl (%r12),%eax
   2df92:	49 83 c4 01          	add    $0x1,%r12
   2df96:	83 e0 3f             	and    $0x3f,%eax
   2df99:	eb 30                	jmp    2dfcb <rustc_demangle::v0::Printer::print_const+0x48b>
   2df9b:	31 f6                	xor    %esi,%esi
   2df9d:	4d 89 c4             	mov    %r8,%r12
   2dfa0:	89 e9                	mov    %ebp,%ecx
   2dfa2:	83 e1 1f             	and    $0x1f,%ecx
   2dfa5:	40 80 fd df          	cmp    $0xdf,%bpl
   2dfa9:	77 b9                	ja     2df64 <rustc_demangle::v0::Printer::print_const+0x424>
   2dfab:	c1 e1 06             	shl    $0x6,%ecx
   2dfae:	09 ce                	or     %ecx,%esi
   2dfb0:	eb 3e                	jmp    2dff0 <rustc_demangle::v0::Printer::print_const+0x4b0>
   2dfb2:	31 c0                	xor    %eax,%eax
   2dfb4:	4d 89 c4             	mov    %r8,%r12
   2dfb7:	c1 e6 06             	shl    $0x6,%esi
   2dfba:	09 c6                	or     %eax,%esi
   2dfbc:	40 80 fd f0          	cmp    $0xf0,%bpl
   2dfc0:	73 c2                	jae    2df84 <rustc_demangle::v0::Printer::print_const+0x444>
   2dfc2:	c1 e1 0c             	shl    $0xc,%ecx
   2dfc5:	09 ce                	or     %ecx,%esi
   2dfc7:	eb 27                	jmp    2dff0 <rustc_demangle::v0::Printer::print_const+0x4b0>
   2dfc9:	31 c0                	xor    %eax,%eax
   2dfcb:	83 e1 07             	and    $0x7,%ecx
   2dfce:	c1 e1 12             	shl    $0x12,%ecx
   2dfd1:	c1 e6 06             	shl    $0x6,%esi
   2dfd4:	09 ce                	or     %ecx,%esi
   2dfd6:	09 c6                	or     %eax,%esi
   2dfd8:	81 fe 00 00 11 00    	cmp    $0x110000,%esi
   2dfde:	0f 84 a8 fe ff ff    	je     2de8c <rustc_demangle::v0::Printer::print_const+0x34c>
   2dfe4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2dfeb:	00 00 00 
   2dfee:	66 90                	xchg   %ax,%ax
   2dff0:	8d 46 d0             	lea    -0x30(%rsi),%eax
   2dff3:	83 f8 0a             	cmp    $0xa,%eax
   2dff6:	0f 82 14 ff ff ff    	jb     2df10 <rustc_demangle::v0::Printer::print_const+0x3d0>
   2dffc:	8d 4e 9f             	lea    -0x61(%rsi),%ecx
   2dfff:	b8 a9 ff ff ff       	mov    $0xffffffa9,%eax
   2e004:	83 f9 1a             	cmp    $0x1a,%ecx
   2e007:	0f 82 f6 fe ff ff    	jb     2df03 <rustc_demangle::v0::Printer::print_const+0x3c3>
   2e00d:	8d 4e bf             	lea    -0x41(%rsi),%ecx
   2e010:	b8 c9 ff ff ff       	mov    $0xffffffc9,%eax
   2e015:	83 f9 19             	cmp    $0x19,%ecx
   2e018:	0f 86 e5 fe ff ff    	jbe    2df03 <rustc_demangle::v0::Printer::print_const+0x3c3>
   2e01e:	48 8d 3d b8 b7 00 00 	lea    0xb7b8(%rip),%rdi        # 397dd <str.6+0x24bd>
   2e025:	48 8d 15 94 70 01 00 	lea    0x17094(%rip),%rdx        # 450c0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1b88>
   2e02c:	be 2b 00 00 00       	mov    $0x2b,%esi
   2e031:	ff 15 a1 7e 01 00    	callq  *0x17ea1(%rip)        # 45ed8 <_GLOBAL_OFFSET_TABLE_+0x550>
   2e037:	0f 0b                	ud2    
   2e039:	4c 8d 05 08 70 01 00 	lea    0x17008(%rip),%r8        # 45048 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1b10>
   2e040:	4c 89 e7             	mov    %r12,%rdi
   2e043:	ff 15 e7 7d 01 00    	callq  *0x17de7(%rip)        # 45e30 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   2e049:	0f 0b                	ud2    
   2e04b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000002e050 <rustc_demangle::demangle>:
   2e050:	55                   	push   %rbp
   2e051:	41 57                	push   %r15
   2e053:	41 56                	push   %r14
   2e055:	41 55                	push   %r13
   2e057:	41 54                	push   %r12
   2e059:	53                   	push   %rbx
   2e05a:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
   2e061:	49 89 d4             	mov    %rdx,%r12
   2e064:	48 89 bc 24 90 00 00 	mov    %rdi,0x90(%rsp)
   2e06b:	00 
   2e06c:	48 8d 0d 29 b9 00 00 	lea    0xb929(%rip),%rcx        # 3999c <str.6+0x267c>
   2e073:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   2e078:	41 b8 06 00 00 00    	mov    $0x6,%r8d
   2e07e:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   2e083:	ff 15 c7 7c 01 00    	callq  *0x17cc7(%rip)        # 45d50 <_GLOBAL_OFFSET_TABLE_+0x3c8>
   2e089:	83 7c 24 38 01       	cmpl   $0x1,0x38(%rsp)
   2e08e:	0f 85 56 01 00 00    	jne    2e1ea <rustc_demangle::demangle+0x19a>
   2e094:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   2e099:	4c 8b 7c 24 70       	mov    0x70(%rsp),%r15
   2e09e:	4c 8b 64 24 30       	mov    0x30(%rsp),%r12
   2e0a3:	4d 8d 44 24 ff       	lea    -0x1(%r12),%r8
   2e0a8:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
   2e0ad:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   2e0b2:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
   2e0b7:	48 8b 4c 24 60       	mov    0x60(%rsp),%rcx
   2e0bc:	49 8d 3c 0c          	lea    (%r12,%rcx,1),%rdi
   2e0c0:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   2e0c4:	49 83 ff ff          	cmp    $0xffffffffffffffff,%r15
   2e0c8:	0f 84 5d 02 00 00    	je     2e32b <rustc_demangle::demangle+0x2db>
   2e0ce:	48 39 f7             	cmp    %rsi,%rdi
   2e0d1:	0f 83 77 02 00 00    	jae    2e34e <rustc_demangle::demangle+0x2fe>
   2e0d7:	4c 8b 54 24 58       	mov    0x58(%rsp),%r10
   2e0dc:	4c 8b 5c 24 40       	mov    0x40(%rsp),%r11
   2e0e1:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   2e0e6:	4c 89 e2             	mov    %r12,%rdx
   2e0e9:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
   2e0f0:	00 
   2e0f1:	48 29 c2             	sub    %rax,%rdx
   2e0f4:	48 89 94 24 80 00 00 	mov    %rdx,0x80(%rsp)
   2e0fb:	00 
   2e0fc:	4c 89 d8             	mov    %r11,%rax
   2e0ff:	48 f7 d8             	neg    %rax
   2e102:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2e109:	00 00 00 
   2e10c:	0f 1f 40 00          	nopl   0x0(%rax)
   2e110:	41 0f b6 14 39       	movzbl (%r9,%rdi,1),%edx
   2e115:	49 0f a3 d2          	bt     %rdx,%r10
   2e119:	73 45                	jae    2e160 <rustc_demangle::demangle+0x110>
   2e11b:	4d 39 fb             	cmp    %r15,%r11
   2e11e:	4c 89 ff             	mov    %r15,%rdi
   2e121:	49 0f 47 fb          	cmova  %r11,%rdi
   2e125:	49 8d 1c 09          	lea    (%r9,%rcx,1),%rbx
   2e129:	48 89 fd             	mov    %rdi,%rbp
   2e12c:	0f 1f 40 00          	nopl   0x0(%rax)
   2e130:	4c 39 e5             	cmp    %r12,%rbp
   2e133:	73 4b                	jae    2e180 <rustc_demangle::demangle+0x130>
   2e135:	48 8d 14 29          	lea    (%rcx,%rbp,1),%rdx
   2e139:	48 39 f2             	cmp    %rsi,%rdx
   2e13c:	0f 83 72 0b 00 00    	jae    2ecb4 <rustc_demangle::demangle+0xc64>
   2e142:	4c 8d 6d 01          	lea    0x1(%rbp),%r13
   2e146:	41 0f b6 14 2e       	movzbl (%r14,%rbp,1),%edx
   2e14b:	3a 14 2b             	cmp    (%rbx,%rbp,1),%dl
   2e14e:	4c 89 ed             	mov    %r13,%rbp
   2e151:	74 dd                	je     2e130 <rustc_demangle::demangle+0xe0>
   2e153:	48 01 c1             	add    %rax,%rcx
   2e156:	4c 01 e9             	add    %r13,%rcx
   2e159:	e9 05 00 00 00       	jmpq   2e163 <rustc_demangle::demangle+0x113>
   2e15e:	66 90                	xchg   %ax,%ax
   2e160:	4c 01 e1             	add    %r12,%rcx
   2e163:	45 31 ff             	xor    %r15d,%r15d
   2e166:	4a 8d 3c 01          	lea    (%rcx,%r8,1),%rdi
   2e16a:	48 39 f7             	cmp    %rsi,%rdi
   2e16d:	72 a1                	jb     2e110 <rustc_demangle::demangle+0xc0>
   2e16f:	eb 6a                	jmp    2e1db <rustc_demangle::demangle+0x18b>
   2e171:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2e178:	00 00 00 
   2e17b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   2e180:	4c 89 df             	mov    %r11,%rdi
   2e183:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2e18a:	00 00 00 
   2e18d:	0f 1f 00             	nopl   (%rax)
   2e190:	49 39 ff             	cmp    %rdi,%r15
   2e193:	0f 83 24 03 00 00    	jae    2e4bd <rustc_demangle::demangle+0x46d>
   2e199:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   2e19d:	4c 39 e7             	cmp    %r12,%rdi
   2e1a0:	0f 83 27 0b 00 00    	jae    2eccd <rustc_demangle::demangle+0xc7d>
   2e1a6:	48 8d 1c 0f          	lea    (%rdi,%rcx,1),%rbx
   2e1aa:	48 39 f3             	cmp    %rsi,%rbx
   2e1ad:	0f 83 2c 0b 00 00    	jae    2ecdf <rustc_demangle::demangle+0xc8f>
   2e1b3:	41 0f b6 14 3e       	movzbl (%r14,%rdi,1),%edx
   2e1b8:	41 3a 14 19          	cmp    (%r9,%rbx,1),%dl
   2e1bc:	74 d2                	je     2e190 <rustc_demangle::demangle+0x140>
   2e1be:	48 03 8c 24 88 00 00 	add    0x88(%rsp),%rcx
   2e1c5:	00 
   2e1c6:	4c 8b bc 24 80 00 00 	mov    0x80(%rsp),%r15
   2e1cd:	00 
   2e1ce:	4a 8d 3c 01          	lea    (%rcx,%r8,1),%rdi
   2e1d2:	48 39 f7             	cmp    %rsi,%rdi
   2e1d5:	0f 82 35 ff ff ff    	jb     2e110 <rustc_demangle::demangle+0xc0>
   2e1db:	4c 89 7c 24 70       	mov    %r15,0x70(%rsp)
   2e1e0:	48 89 4c 24 60       	mov    %rcx,0x60(%rsp)
   2e1e5:	e9 64 01 00 00       	jmpq   2e34e <rustc_demangle::demangle+0x2fe>
   2e1ea:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   2e1ef:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   2e1f4:	4c 8d 04 0f          	lea    (%rdi,%rcx,1),%r8
   2e1f8:	44 8a 4c 24 50       	mov    0x50(%rsp),%r9b
   2e1fd:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   2e202:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   2e207:	e9 0a 00 00 00       	jmpq   2e216 <rustc_demangle::demangle+0x1c6>
   2e20c:	0f 1f 40 00          	nopl   0x0(%rax)
   2e210:	48 01 c2             	add    %rax,%rdx
   2e213:	41 b1 01             	mov    $0x1,%r9b
   2e216:	48 85 d2             	test   %rdx,%rdx
   2e219:	74 15                	je     2e230 <rustc_demangle::demangle+0x1e0>
   2e21b:	48 39 d1             	cmp    %rdx,%rcx
   2e21e:	74 10                	je     2e230 <rustc_demangle::demangle+0x1e0>
   2e220:	0f 86 cb 0a 00 00    	jbe    2ecf1 <rustc_demangle::demangle+0xca1>
   2e226:	80 3c 17 bf          	cmpb   $0xbf,(%rdi,%rdx,1)
   2e22a:	0f 8e c1 0a 00 00    	jle    2ecf1 <rustc_demangle::demangle+0xca1>
   2e230:	48 39 d1             	cmp    %rdx,%rcx
   2e233:	0f 84 2d 02 00 00    	je     2e466 <rustc_demangle::demangle+0x416>
   2e239:	48 8d 04 17          	lea    (%rdi,%rdx,1),%rax
   2e23d:	0f b6 28             	movzbl (%rax),%ebp
   2e240:	40 84 ed             	test   %bpl,%bpl
   2e243:	78 0b                	js     2e250 <rustc_demangle::demangle+0x200>
   2e245:	89 ee                	mov    %ebp,%esi
   2e247:	e9 94 00 00 00       	jmpq   2e2e0 <rustc_demangle::demangle+0x290>
   2e24c:	0f 1f 40 00          	nopl   0x0(%rax)
   2e250:	48 8d 70 01          	lea    0x1(%rax),%rsi
   2e254:	4c 39 c6             	cmp    %r8,%rsi
   2e257:	74 40                	je     2e299 <rustc_demangle::demangle+0x249>
   2e259:	0f b6 70 01          	movzbl 0x1(%rax),%esi
   2e25d:	48 83 c0 02          	add    $0x2,%rax
   2e261:	83 e6 3f             	and    $0x3f,%esi
   2e264:	89 eb                	mov    %ebp,%ebx
   2e266:	83 e3 1f             	and    $0x1f,%ebx
   2e269:	40 80 fd df          	cmp    $0xdf,%bpl
   2e26d:	76 3a                	jbe    2e2a9 <rustc_demangle::demangle+0x259>
   2e26f:	4c 39 c0             	cmp    %r8,%rax
   2e272:	74 3c                	je     2e2b0 <rustc_demangle::demangle+0x260>
   2e274:	44 0f b6 10          	movzbl (%rax),%r10d
   2e278:	48 83 c0 01          	add    $0x1,%rax
   2e27c:	41 83 e2 3f          	and    $0x3f,%r10d
   2e280:	c1 e6 06             	shl    $0x6,%esi
   2e283:	44 09 d6             	or     %r10d,%esi
   2e286:	40 80 fd f0          	cmp    $0xf0,%bpl
   2e28a:	72 36                	jb     2e2c2 <rustc_demangle::demangle+0x272>
   2e28c:	4c 39 c0             	cmp    %r8,%rax
   2e28f:	74 38                	je     2e2c9 <rustc_demangle::demangle+0x279>
   2e291:	0f b6 00             	movzbl (%rax),%eax
   2e294:	83 e0 3f             	and    $0x3f,%eax
   2e297:	eb 32                	jmp    2e2cb <rustc_demangle::demangle+0x27b>
   2e299:	31 f6                	xor    %esi,%esi
   2e29b:	4c 89 c0             	mov    %r8,%rax
   2e29e:	89 eb                	mov    %ebp,%ebx
   2e2a0:	83 e3 1f             	and    $0x1f,%ebx
   2e2a3:	40 80 fd df          	cmp    $0xdf,%bpl
   2e2a7:	77 c6                	ja     2e26f <rustc_demangle::demangle+0x21f>
   2e2a9:	c1 e3 06             	shl    $0x6,%ebx
   2e2ac:	09 de                	or     %ebx,%esi
   2e2ae:	eb 30                	jmp    2e2e0 <rustc_demangle::demangle+0x290>
   2e2b0:	45 31 d2             	xor    %r10d,%r10d
   2e2b3:	4c 89 c0             	mov    %r8,%rax
   2e2b6:	c1 e6 06             	shl    $0x6,%esi
   2e2b9:	44 09 d6             	or     %r10d,%esi
   2e2bc:	40 80 fd f0          	cmp    $0xf0,%bpl
   2e2c0:	73 ca                	jae    2e28c <rustc_demangle::demangle+0x23c>
   2e2c2:	c1 e3 0c             	shl    $0xc,%ebx
   2e2c5:	09 de                	or     %ebx,%esi
   2e2c7:	eb 17                	jmp    2e2e0 <rustc_demangle::demangle+0x290>
   2e2c9:	31 c0                	xor    %eax,%eax
   2e2cb:	83 e3 07             	and    $0x7,%ebx
   2e2ce:	c1 e3 12             	shl    $0x12,%ebx
   2e2d1:	c1 e6 06             	shl    $0x6,%esi
   2e2d4:	09 de                	or     %ebx,%esi
   2e2d6:	09 c6                	or     %eax,%esi
   2e2d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2e2df:	00 
   2e2e0:	45 84 c9             	test   %r9b,%r9b
   2e2e3:	0f 85 9f 01 00 00    	jne    2e488 <rustc_demangle::demangle+0x438>
   2e2e9:	81 fe 00 00 11 00    	cmp    $0x110000,%esi
   2e2ef:	0f 84 af 01 00 00    	je     2e4a4 <rustc_demangle::demangle+0x454>
   2e2f5:	b8 01 00 00 00       	mov    $0x1,%eax
   2e2fa:	81 fe 80 00 00 00    	cmp    $0x80,%esi
   2e300:	0f 82 0a ff ff ff    	jb     2e210 <rustc_demangle::demangle+0x1c0>
   2e306:	b8 02 00 00 00       	mov    $0x2,%eax
   2e30b:	81 fe 00 08 00 00    	cmp    $0x800,%esi
   2e311:	0f 82 f9 fe ff ff    	jb     2e210 <rustc_demangle::demangle+0x1c0>
   2e317:	81 fe 00 00 01 00    	cmp    $0x10000,%esi
   2e31d:	b8 04 00 00 00       	mov    $0x4,%eax
   2e322:	48 83 d8 00          	sbb    $0x0,%rax
   2e326:	e9 e5 fe ff ff       	jmpq   2e210 <rustc_demangle::demangle+0x1c0>
   2e32b:	48 39 f7             	cmp    %rsi,%rdi
   2e32e:	73 1e                	jae    2e34e <rustc_demangle::demangle+0x2fe>
   2e330:	4c 8b 54 24 58       	mov    0x58(%rsp),%r10
   2e335:	4c 8b 7c 24 40       	mov    0x40(%rsp),%r15
   2e33a:	4c 8b 5c 24 50       	mov    0x50(%rsp),%r11
   2e33f:	4d 39 e7             	cmp    %r12,%r15
   2e342:	4d 89 e5             	mov    %r12,%r13
   2e345:	4d 0f 47 ef          	cmova  %r15,%r13
   2e349:	e9 82 00 00 00       	jmpq   2e3d0 <rustc_demangle::demangle+0x380>
   2e34e:	48 89 74 24 60       	mov    %rsi,0x60(%rsp)
   2e353:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
   2e358:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   2e35d:	49 83 fc 03          	cmp    $0x3,%r12
   2e361:	0f 82 8b 02 00 00    	jb     2e5f2 <rustc_demangle::demangle+0x5a2>
   2e367:	48 8d 05 c5 b4 00 00 	lea    0xb4c5(%rip),%rax        # 39833 <str.6+0x2513>
   2e36e:	49 39 c3             	cmp    %rax,%r11
   2e371:	74 1a                	je     2e38d <rustc_demangle::demangle+0x33d>
   2e373:	41 0f b7 03          	movzwl (%r11),%eax
   2e377:	35 5f 5a 00 00       	xor    $0x5a5f,%eax
   2e37c:	41 0f b6 4b 02       	movzbl 0x2(%r11),%ecx
   2e381:	83 f1 4e             	xor    $0x4e,%ecx
   2e384:	66 09 c1             	or     %ax,%cx
   2e387:	0f 85 6f 02 00 00    	jne    2e5fc <rustc_demangle::demangle+0x5ac>
   2e38d:	49 c7 c7 fd ff ff ff 	mov    $0xfffffffffffffffd,%r15
   2e394:	41 bd 03 00 00 00    	mov    $0x3,%r13d
   2e39a:	49 83 fc 03          	cmp    $0x3,%r12
   2e39e:	0f 84 db 02 00 00    	je     2e67f <rustc_demangle::demangle+0x62f>
   2e3a4:	41 80 7b 03 bf       	cmpb   $0xbf,0x3(%r11)
   2e3a9:	0f 8f d0 02 00 00    	jg     2e67f <rustc_demangle::demangle+0x62f>
   2e3af:	4c 8d 05 3a 6a 01 00 	lea    0x16a3a(%rip),%r8        # 44df0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x18b8>
   2e3b6:	ba 03 00 00 00       	mov    $0x3,%edx
   2e3bb:	e9 a2 09 00 00       	jmpq   2ed62 <rustc_demangle::demangle+0xd12>
   2e3c0:	4c 01 e1             	add    %r12,%rcx
   2e3c3:	4a 8d 3c 01          	lea    (%rcx,%r8,1),%rdi
   2e3c7:	48 39 f7             	cmp    %rsi,%rdi
   2e3ca:	0f 83 10 fe ff ff    	jae    2e1e0 <rustc_demangle::demangle+0x190>
   2e3d0:	41 0f b6 3c 39       	movzbl (%r9,%rdi,1),%edi
   2e3d5:	49 0f a3 fa          	bt     %rdi,%r10
   2e3d9:	73 e5                	jae    2e3c0 <rustc_demangle::demangle+0x370>
   2e3db:	48 89 cf             	mov    %rcx,%rdi
   2e3de:	48 f7 df             	neg    %rdi
   2e3e1:	49 8d 1c 09          	lea    (%r9,%rcx,1),%rbx
   2e3e5:	4c 89 fd             	mov    %r15,%rbp
   2e3e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2e3ef:	00 
   2e3f0:	49 39 ed             	cmp    %rbp,%r13
   2e3f3:	74 2a                	je     2e41f <rustc_demangle::demangle+0x3cf>
   2e3f5:	48 8d 04 29          	lea    (%rcx,%rbp,1),%rax
   2e3f9:	48 39 f0             	cmp    %rsi,%rax
   2e3fc:	0f 83 01 09 00 00    	jae    2ed03 <rustc_demangle::demangle+0xcb3>
   2e402:	41 0f b6 04 2e       	movzbl (%r14,%rbp,1),%eax
   2e407:	48 8d 55 01          	lea    0x1(%rbp),%rdx
   2e40b:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   2e40f:	3a 04 2b             	cmp    (%rbx,%rbp,1),%al
   2e412:	48 89 d5             	mov    %rdx,%rbp
   2e415:	74 d9                	je     2e3f0 <rustc_demangle::demangle+0x3a0>
   2e417:	48 f7 df             	neg    %rdi
   2e41a:	48 89 f9             	mov    %rdi,%rcx
   2e41d:	eb a4                	jmp    2e3c3 <rustc_demangle::demangle+0x373>
   2e41f:	4c 89 ff             	mov    %r15,%rdi
   2e422:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2e429:	00 00 00 
   2e42c:	0f 1f 40 00          	nopl   0x0(%rax)
   2e430:	48 85 ff             	test   %rdi,%rdi
   2e433:	0f 84 97 00 00 00    	je     2e4d0 <rustc_demangle::demangle+0x480>
   2e439:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   2e43d:	4c 39 e7             	cmp    %r12,%rdi
   2e440:	0f 83 87 08 00 00    	jae    2eccd <rustc_demangle::demangle+0xc7d>
   2e446:	48 8d 1c 0f          	lea    (%rdi,%rcx,1),%rbx
   2e44a:	48 39 f3             	cmp    %rsi,%rbx
   2e44d:	0f 83 8c 08 00 00    	jae    2ecdf <rustc_demangle::demangle+0xc8f>
   2e453:	41 0f b6 04 3e       	movzbl (%r14,%rdi,1),%eax
   2e458:	41 3a 04 19          	cmp    (%r9,%rbx,1),%al
   2e45c:	74 d2                	je     2e430 <rustc_demangle::demangle+0x3e0>
   2e45e:	4c 01 d9             	add    %r11,%rcx
   2e461:	e9 5d ff ff ff       	jmpq   2e3c3 <rustc_demangle::demangle+0x373>
   2e466:	44 89 c8             	mov    %r9d,%eax
   2e469:	34 01                	xor    $0x1,%al
   2e46b:	88 44 24 50          	mov    %al,0x50(%rsp)
   2e46f:	48 89 4c 24 40       	mov    %rcx,0x40(%rsp)
   2e474:	45 84 c9             	test   %r9b,%r9b
   2e477:	0f 84 6b 01 00 00    	je     2e5e8 <rustc_demangle::demangle+0x598>
   2e47d:	48 89 ca             	mov    %rcx,%rdx
   2e480:	48 83 c2 06          	add    $0x6,%rdx
   2e484:	75 65                	jne    2e4eb <rustc_demangle::demangle+0x49b>
   2e486:	eb 79                	jmp    2e501 <rustc_demangle::demangle+0x4b1>
   2e488:	41 80 f1 01          	xor    $0x1,%r9b
   2e48c:	44 88 4c 24 50       	mov    %r9b,0x50(%rsp)
   2e491:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
   2e496:	48 89 d1             	mov    %rdx,%rcx
   2e499:	48 89 ca             	mov    %rcx,%rdx
   2e49c:	48 83 c2 06          	add    $0x6,%rdx
   2e4a0:	75 49                	jne    2e4eb <rustc_demangle::demangle+0x49b>
   2e4a2:	eb 5d                	jmp    2e501 <rustc_demangle::demangle+0x4b1>
   2e4a4:	c6 44 24 50 01       	movb   $0x1,0x50(%rsp)
   2e4a9:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
   2e4ae:	49 83 fc 03          	cmp    $0x3,%r12
   2e4b2:	0f 82 3a 01 00 00    	jb     2e5f2 <rustc_demangle::demangle+0x5a2>
   2e4b8:	e9 aa fe ff ff       	jmpq   2e367 <rustc_demangle::demangle+0x317>
   2e4bd:	49 01 cc             	add    %rcx,%r12
   2e4c0:	4c 89 64 24 60       	mov    %r12,0x60(%rsp)
   2e4c5:	48 c7 44 24 70 00 00 	movq   $0x0,0x70(%rsp)
   2e4cc:	00 00 
   2e4ce:	eb 08                	jmp    2e4d8 <rustc_demangle::demangle+0x488>
   2e4d0:	49 01 cc             	add    %rcx,%r12
   2e4d3:	4c 89 64 24 60       	mov    %r12,0x60(%rsp)
   2e4d8:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
   2e4dd:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   2e4e2:	48 89 ca             	mov    %rcx,%rdx
   2e4e5:	48 83 c2 06          	add    $0x6,%rdx
   2e4e9:	74 16                	je     2e501 <rustc_demangle::demangle+0x4b1>
   2e4eb:	4c 39 e2             	cmp    %r12,%rdx
   2e4ee:	74 11                	je     2e501 <rustc_demangle::demangle+0x4b1>
   2e4f0:	0f 83 29 08 00 00    	jae    2ed1f <rustc_demangle::demangle+0xccf>
   2e4f6:	41 80 3c 13 bf       	cmpb   $0xbf,(%r11,%rdx,1)
   2e4fb:	0f 8e 1e 08 00 00    	jle    2ed1f <rustc_demangle::demangle+0xccf>
   2e501:	4c 01 da             	add    %r11,%rdx
   2e504:	4b 8d 04 23          	lea    (%r11,%r12,1),%rax
   2e508:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2e50f:	00 
   2e510:	48 39 c2             	cmp    %rax,%rdx
   2e513:	0f 84 aa 01 00 00    	je     2e6c3 <rustc_demangle::demangle+0x673>
   2e519:	48 8d 72 01          	lea    0x1(%rdx),%rsi
   2e51d:	0f b6 3a             	movzbl (%rdx),%edi
   2e520:	40 84 ff             	test   %dil,%dil
   2e523:	78 0b                	js     2e530 <rustc_demangle::demangle+0x4e0>
   2e525:	48 89 f2             	mov    %rsi,%rdx
   2e528:	89 fe                	mov    %edi,%esi
   2e52a:	e9 a1 00 00 00       	jmpq   2e5d0 <rustc_demangle::demangle+0x580>
   2e52f:	90                   	nop
   2e530:	48 39 c6             	cmp    %rax,%rsi
   2e533:	74 41                	je     2e576 <rustc_demangle::demangle+0x526>
   2e535:	0f b6 72 01          	movzbl 0x1(%rdx),%esi
   2e539:	48 83 c2 02          	add    $0x2,%rdx
   2e53d:	83 e6 3f             	and    $0x3f,%esi
   2e540:	89 fd                	mov    %edi,%ebp
   2e542:	83 e5 1f             	and    $0x1f,%ebp
   2e545:	40 80 ff df          	cmp    $0xdf,%dil
   2e549:	76 3b                	jbe    2e586 <rustc_demangle::demangle+0x536>
   2e54b:	48 39 c2             	cmp    %rax,%rdx
   2e54e:	74 3d                	je     2e58d <rustc_demangle::demangle+0x53d>
   2e550:	0f b6 1a             	movzbl (%rdx),%ebx
   2e553:	48 83 c2 01          	add    $0x1,%rdx
   2e557:	83 e3 3f             	and    $0x3f,%ebx
   2e55a:	c1 e6 06             	shl    $0x6,%esi
   2e55d:	09 de                	or     %ebx,%esi
   2e55f:	40 80 ff f0          	cmp    $0xf0,%dil
   2e563:	72 38                	jb     2e59d <rustc_demangle::demangle+0x54d>
   2e565:	48 39 c2             	cmp    %rax,%rdx
   2e568:	74 3a                	je     2e5a4 <rustc_demangle::demangle+0x554>
   2e56a:	0f b6 3a             	movzbl (%rdx),%edi
   2e56d:	48 83 c2 01          	add    $0x1,%rdx
   2e571:	83 e7 3f             	and    $0x3f,%edi
   2e574:	eb 33                	jmp    2e5a9 <rustc_demangle::demangle+0x559>
   2e576:	31 f6                	xor    %esi,%esi
   2e578:	48 89 c2             	mov    %rax,%rdx
   2e57b:	89 fd                	mov    %edi,%ebp
   2e57d:	83 e5 1f             	and    $0x1f,%ebp
   2e580:	40 80 ff df          	cmp    $0xdf,%dil
   2e584:	77 c5                	ja     2e54b <rustc_demangle::demangle+0x4fb>
   2e586:	c1 e5 06             	shl    $0x6,%ebp
   2e589:	09 ee                	or     %ebp,%esi
   2e58b:	eb 43                	jmp    2e5d0 <rustc_demangle::demangle+0x580>
   2e58d:	31 db                	xor    %ebx,%ebx
   2e58f:	48 89 c2             	mov    %rax,%rdx
   2e592:	c1 e6 06             	shl    $0x6,%esi
   2e595:	09 de                	or     %ebx,%esi
   2e597:	40 80 ff f0          	cmp    $0xf0,%dil
   2e59b:	73 c8                	jae    2e565 <rustc_demangle::demangle+0x515>
   2e59d:	c1 e5 0c             	shl    $0xc,%ebp
   2e5a0:	09 ee                	or     %ebp,%esi
   2e5a2:	eb 2c                	jmp    2e5d0 <rustc_demangle::demangle+0x580>
   2e5a4:	31 ff                	xor    %edi,%edi
   2e5a6:	48 89 c2             	mov    %rax,%rdx
   2e5a9:	83 e5 07             	and    $0x7,%ebp
   2e5ac:	c1 e5 12             	shl    $0x12,%ebp
   2e5af:	c1 e6 06             	shl    $0x6,%esi
   2e5b2:	09 ee                	or     %ebp,%esi
   2e5b4:	09 fe                	or     %edi,%esi
   2e5b6:	81 fe 00 00 11 00    	cmp    $0x110000,%esi
   2e5bc:	0f 84 01 01 00 00    	je     2e6c3 <rustc_demangle::demangle+0x673>
   2e5c2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2e5c9:	00 00 00 
   2e5cc:	0f 1f 40 00          	nopl   0x0(%rax)
   2e5d0:	8d 7e d0             	lea    -0x30(%rsi),%edi
   2e5d3:	83 ff 0a             	cmp    $0xa,%edi
   2e5d6:	0f 82 34 ff ff ff    	jb     2e510 <rustc_demangle::demangle+0x4c0>
   2e5dc:	83 c6 c0             	add    $0xffffffc0,%esi
   2e5df:	83 fe 07             	cmp    $0x7,%esi
   2e5e2:	0f 82 28 ff ff ff    	jb     2e510 <rustc_demangle::demangle+0x4c0>
   2e5e8:	49 83 fc 03          	cmp    $0x3,%r12
   2e5ec:	0f 83 75 fd ff ff    	jae    2e367 <rustc_demangle::demangle+0x317>
   2e5f2:	49 83 fc 02          	cmp    $0x2,%r12
   2e5f6:	0f 85 27 02 00 00    	jne    2e823 <rustc_demangle::demangle+0x7d3>
   2e5fc:	48 8d 05 86 b2 00 00 	lea    0xb286(%rip),%rax        # 39889 <str.6+0x2569>
   2e603:	49 39 c3             	cmp    %rax,%r11
   2e606:	74 59                	je     2e661 <rustc_demangle::demangle+0x611>
   2e608:	41 0f b7 03          	movzwl (%r11),%eax
   2e60c:	3d 5a 4e 00 00       	cmp    $0x4e5a,%eax
   2e611:	74 4e                	je     2e661 <rustc_demangle::demangle+0x611>
   2e613:	49 83 fc 04          	cmp    $0x4,%r12
   2e617:	0f 82 70 01 00 00    	jb     2e78d <rustc_demangle::demangle+0x73d>
   2e61d:	48 8d 05 67 b2 00 00 	lea    0xb267(%rip),%rax        # 3988b <str.6+0x256b>
   2e624:	49 39 c3             	cmp    %rax,%r11
   2e627:	74 0d                	je     2e636 <rustc_demangle::demangle+0x5e6>
   2e629:	41 81 3b 5f 5f 5a 4e 	cmpl   $0x4e5a5f5f,(%r11)
   2e630:	0f 85 5d 01 00 00    	jne    2e793 <rustc_demangle::demangle+0x743>
   2e636:	49 c7 c7 fc ff ff ff 	mov    $0xfffffffffffffffc,%r15
   2e63d:	41 bd 04 00 00 00    	mov    $0x4,%r13d
   2e643:	49 83 fc 04          	cmp    $0x4,%r12
   2e647:	74 36                	je     2e67f <rustc_demangle::demangle+0x62f>
   2e649:	41 80 7b 04 bf       	cmpb   $0xbf,0x4(%r11)
   2e64e:	7f 2f                	jg     2e67f <rustc_demangle::demangle+0x62f>
   2e650:	4c 8d 05 c9 67 01 00 	lea    0x167c9(%rip),%r8        # 44e20 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x18e8>
   2e657:	ba 04 00 00 00       	mov    $0x4,%edx
   2e65c:	e9 01 07 00 00       	jmpq   2ed62 <rustc_demangle::demangle+0xd12>
   2e661:	49 c7 c7 fe ff ff ff 	mov    $0xfffffffffffffffe,%r15
   2e668:	41 bd 02 00 00 00    	mov    $0x2,%r13d
   2e66e:	49 83 fc 02          	cmp    $0x2,%r12
   2e672:	74 0b                	je     2e67f <rustc_demangle::demangle+0x62f>
   2e674:	41 80 7b 02 bf       	cmpb   $0xbf,0x2(%r11)
   2e679:	0f 8e d7 06 00 00    	jle    2ed56 <rustc_demangle::demangle+0xd06>
   2e67f:	4d 01 dd             	add    %r11,%r13
   2e682:	4d 01 e7             	add    %r12,%r15
   2e685:	4b 8d 0c 2f          	lea    (%r15,%r13,1),%rcx
   2e689:	31 c0                	xor    %eax,%eax
   2e68b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   2e690:	49 39 c7             	cmp    %rax,%r15
   2e693:	74 11                	je     2e6a6 <rustc_demangle::demangle+0x656>
   2e695:	41 80 7c 05 00 00    	cmpb   $0x0,0x0(%r13,%rax,1)
   2e69b:	48 8d 40 01          	lea    0x1(%rax),%rax
   2e69f:	79 ef                	jns    2e690 <rustc_demangle::demangle+0x640>
   2e6a1:	e9 e7 00 00 00       	jmpq   2e78d <rustc_demangle::demangle+0x73d>
   2e6a6:	4d 85 ff             	test   %r15,%r15
   2e6a9:	0f 84 de 00 00 00    	je     2e78d <rustc_demangle::demangle+0x73d>
   2e6af:	49 8d 7d 01          	lea    0x1(%r13),%rdi
   2e6b3:	41 0f b6 55 00       	movzbl 0x0(%r13),%edx
   2e6b8:	84 d2                	test   %dl,%dl
   2e6ba:	78 34                	js     2e6f0 <rustc_demangle::demangle+0x6a0>
   2e6bc:	89 d5                	mov    %edx,%ebp
   2e6be:	e9 b5 00 00 00       	jmpq   2e778 <rustc_demangle::demangle+0x728>
   2e6c3:	48 85 c9             	test   %rcx,%rcx
   2e6c6:	74 16                	je     2e6de <rustc_demangle::demangle+0x68e>
   2e6c8:	4c 39 e1             	cmp    %r12,%rcx
   2e6cb:	74 11                	je     2e6de <rustc_demangle::demangle+0x68e>
   2e6cd:	0f 83 55 06 00 00    	jae    2ed28 <rustc_demangle::demangle+0xcd8>
   2e6d3:	41 80 3c 0b bf       	cmpb   $0xbf,(%r11,%rcx,1)
   2e6d8:	0f 8e 4a 06 00 00    	jle    2ed28 <rustc_demangle::demangle+0xcd8>
   2e6de:	49 89 cc             	mov    %rcx,%r12
   2e6e1:	49 83 fc 03          	cmp    $0x3,%r12
   2e6e5:	0f 83 7c fc ff ff    	jae    2e367 <rustc_demangle::demangle+0x317>
   2e6eb:	e9 02 ff ff ff       	jmpq   2e5f2 <rustc_demangle::demangle+0x5a2>
   2e6f0:	31 ed                	xor    %ebp,%ebp
   2e6f2:	48 89 ce             	mov    %rcx,%rsi
   2e6f5:	49 83 ff 01          	cmp    $0x1,%r15
   2e6f9:	74 12                	je     2e70d <rustc_demangle::demangle+0x6bd>
   2e6fb:	4c 89 ef             	mov    %r13,%rdi
   2e6fe:	48 83 c7 02          	add    $0x2,%rdi
   2e702:	41 0f b6 6d 01       	movzbl 0x1(%r13),%ebp
   2e707:	83 e5 3f             	and    $0x3f,%ebp
   2e70a:	48 89 fe             	mov    %rdi,%rsi
   2e70d:	89 d0                	mov    %edx,%eax
   2e70f:	83 e0 1f             	and    $0x1f,%eax
   2e712:	80 fa df             	cmp    $0xdf,%dl
   2e715:	76 33                	jbe    2e74a <rustc_demangle::demangle+0x6fa>
   2e717:	48 39 ce             	cmp    %rcx,%rsi
   2e71a:	74 35                	je     2e751 <rustc_demangle::demangle+0x701>
   2e71c:	44 0f b6 06          	movzbl (%rsi),%r8d
   2e720:	48 83 c6 01          	add    $0x1,%rsi
   2e724:	41 83 e0 3f          	and    $0x3f,%r8d
   2e728:	48 89 f7             	mov    %rsi,%rdi
   2e72b:	c1 e5 06             	shl    $0x6,%ebp
   2e72e:	44 09 c5             	or     %r8d,%ebp
   2e731:	80 fa f0             	cmp    $0xf0,%dl
   2e734:	72 2c                	jb     2e762 <rustc_demangle::demangle+0x712>
   2e736:	48 39 ce             	cmp    %rcx,%rsi
   2e739:	74 2e                	je     2e769 <rustc_demangle::demangle+0x719>
   2e73b:	0f b6 16             	movzbl (%rsi),%edx
   2e73e:	48 83 c6 01          	add    $0x1,%rsi
   2e742:	83 e2 3f             	and    $0x3f,%edx
   2e745:	48 89 f7             	mov    %rsi,%rdi
   2e748:	eb 21                	jmp    2e76b <rustc_demangle::demangle+0x71b>
   2e74a:	c1 e0 06             	shl    $0x6,%eax
   2e74d:	09 c5                	or     %eax,%ebp
   2e74f:	eb 27                	jmp    2e778 <rustc_demangle::demangle+0x728>
   2e751:	45 31 c0             	xor    %r8d,%r8d
   2e754:	48 89 ce             	mov    %rcx,%rsi
   2e757:	c1 e5 06             	shl    $0x6,%ebp
   2e75a:	44 09 c5             	or     %r8d,%ebp
   2e75d:	80 fa f0             	cmp    $0xf0,%dl
   2e760:	73 d4                	jae    2e736 <rustc_demangle::demangle+0x6e6>
   2e762:	c1 e0 0c             	shl    $0xc,%eax
   2e765:	09 c5                	or     %eax,%ebp
   2e767:	eb 0f                	jmp    2e778 <rustc_demangle::demangle+0x728>
   2e769:	31 d2                	xor    %edx,%edx
   2e76b:	83 e0 07             	and    $0x7,%eax
   2e76e:	c1 e0 12             	shl    $0x12,%eax
   2e771:	c1 e5 06             	shl    $0x6,%ebp
   2e774:	09 c5                	or     %eax,%ebp
   2e776:	09 d5                	or     %edx,%ebp
   2e778:	83 fd 45             	cmp    $0x45,%ebp
   2e77b:	0f 84 6b 01 00 00    	je     2e8ec <rustc_demangle::demangle+0x89c>
   2e781:	81 fd 00 00 11 00    	cmp    $0x110000,%ebp
   2e787:	0f 85 a7 01 00 00    	jne    2e934 <rustc_demangle::demangle+0x8e4>
   2e78d:	49 83 fc 03          	cmp    $0x3,%r12
   2e791:	72 30                	jb     2e7c3 <rustc_demangle::demangle+0x773>
   2e793:	48 8d 05 39 b1 00 00 	lea    0xb139(%rip),%rax        # 398d3 <str.6+0x25b3>
   2e79a:	49 39 c3             	cmp    %rax,%r11
   2e79d:	74 0b                	je     2e7aa <rustc_demangle::demangle+0x75a>
   2e79f:	41 0f b7 03          	movzwl (%r11),%eax
   2e7a3:	3d 5f 52 00 00       	cmp    $0x525f,%eax
   2e7a8:	75 1f                	jne    2e7c9 <rustc_demangle::demangle+0x779>
   2e7aa:	41 8a 43 02          	mov    0x2(%r11),%al
   2e7ae:	3c bf                	cmp    $0xbf,%al
   2e7b0:	0f 8e 89 05 00 00    	jle    2ed3f <rustc_demangle::demangle+0xcef>
   2e7b6:	4d 8d 6b 02          	lea    0x2(%r11),%r13
   2e7ba:	49 c7 c7 fe ff ff ff 	mov    $0xfffffffffffffffe,%r15
   2e7c1:	eb 33                	jmp    2e7f6 <rustc_demangle::demangle+0x7a6>
   2e7c3:	49 83 fc 02          	cmp    $0x2,%r12
   2e7c7:	75 5a                	jne    2e823 <rustc_demangle::demangle+0x7d3>
   2e7c9:	48 8d 05 54 b1 00 00 	lea    0xb154(%rip),%rax        # 39924 <str.6+0x2604>
   2e7d0:	49 39 c3             	cmp    %rax,%r11
   2e7d3:	74 0a                	je     2e7df <rustc_demangle::demangle+0x78f>
   2e7d5:	41 80 3b 52          	cmpb   $0x52,(%r11)
   2e7d9:	0f 85 b9 00 00 00    	jne    2e898 <rustc_demangle::demangle+0x848>
   2e7df:	41 8a 43 01          	mov    0x1(%r11),%al
   2e7e3:	3c bf                	cmp    $0xbf,%al
   2e7e5:	0f 8e 5d 05 00 00    	jle    2ed48 <rustc_demangle::demangle+0xcf8>
   2e7eb:	4d 8d 6b 01          	lea    0x1(%r11),%r13
   2e7ef:	49 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%r15
   2e7f6:	04 bf                	add    $0xbf,%al
   2e7f8:	4c 8d 35 62 b1 00 00 	lea    0xb162(%rip),%r14        # 39961 <str.6+0x2641>
   2e7ff:	bb 02 00 00 00       	mov    $0x2,%ebx
   2e804:	3c 19                	cmp    $0x19,%al
   2e806:	77 27                	ja     2e82f <rustc_demangle::demangle+0x7df>
   2e808:	4d 01 e7             	add    %r12,%r15
   2e80b:	31 c9                	xor    %ecx,%ecx
   2e80d:	31 c0                	xor    %eax,%eax
   2e80f:	90                   	nop
   2e810:	49 39 c7             	cmp    %rax,%r15
   2e813:	74 55                	je     2e86a <rustc_demangle::demangle+0x81a>
   2e815:	41 80 7c 05 00 00    	cmpb   $0x0,0x0(%r13,%rax,1)
   2e81b:	48 8d 40 01          	lea    0x1(%rax),%rax
   2e81f:	79 ef                	jns    2e810 <rustc_demangle::demangle+0x7c0>
   2e821:	eb 0e                	jmp    2e831 <rustc_demangle::demangle+0x7e1>
   2e823:	4c 8d 35 37 b1 00 00 	lea    0xb137(%rip),%r14        # 39961 <str.6+0x2641>
   2e82a:	bb 02 00 00 00       	mov    $0x2,%ebx
   2e82f:	31 c9                	xor    %ecx,%ecx
   2e831:	48 8b 84 24 90 00 00 	mov    0x90(%rsp),%rax
   2e838:	00 
   2e839:	48 89 18             	mov    %rbx,(%rax)
   2e83c:	4c 89 68 08          	mov    %r13,0x8(%rax)
   2e840:	4c 89 78 10          	mov    %r15,0x10(%rax)
   2e844:	4c 89 48 18          	mov    %r9,0x18(%rax)
   2e848:	4c 89 58 20          	mov    %r11,0x20(%rax)
   2e84c:	4c 89 60 28          	mov    %r12,0x28(%rax)
   2e850:	4c 89 70 30          	mov    %r14,0x30(%rax)
   2e854:	48 89 48 38          	mov    %rcx,0x38(%rax)
   2e858:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
   2e85f:	5b                   	pop    %rbx
   2e860:	41 5c                	pop    %r12
   2e862:	41 5d                	pop    %r13
   2e864:	41 5e                	pop    %r14
   2e866:	41 5f                	pop    %r15
   2e868:	5d                   	pop    %rbp
   2e869:	c3                   	retq   
   2e86a:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   2e86f:	4c 89 7c 24 20       	mov    %r15,0x20(%rsp)
   2e874:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   2e87b:	00 00 
   2e87d:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   2e882:	e8 69 c8 ff ff       	callq  2b0f0 <rustc_demangle::v0::Parser::skip_path>
   2e887:	84 c0                	test   %al,%al
   2e889:	0f 84 82 02 00 00    	je     2eb11 <rustc_demangle::demangle+0xac1>
   2e88f:	31 c9                	xor    %ecx,%ecx
   2e891:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   2e896:	eb 99                	jmp    2e831 <rustc_demangle::demangle+0x7e1>
   2e898:	4c 8d 35 c2 b0 00 00 	lea    0xb0c2(%rip),%r14        # 39961 <str.6+0x2641>
   2e89f:	bb 02 00 00 00       	mov    $0x2,%ebx
   2e8a4:	49 83 fc 03          	cmp    $0x3,%r12
   2e8a8:	76 85                	jbe    2e82f <rustc_demangle::demangle+0x7df>
   2e8aa:	48 8d 05 74 b0 00 00 	lea    0xb074(%rip),%rax        # 39925 <str.6+0x2605>
   2e8b1:	49 39 c3             	cmp    %rax,%r11
   2e8b4:	74 1a                	je     2e8d0 <rustc_demangle::demangle+0x880>
   2e8b6:	41 0f b7 03          	movzwl (%r11),%eax
   2e8ba:	35 5f 5f 00 00       	xor    $0x5f5f,%eax
   2e8bf:	41 0f b6 4b 02       	movzbl 0x2(%r11),%ecx
   2e8c4:	83 f1 52             	xor    $0x52,%ecx
   2e8c7:	66 09 c1             	or     %ax,%cx
   2e8ca:	0f 85 5f ff ff ff    	jne    2e82f <rustc_demangle::demangle+0x7df>
   2e8d0:	41 8a 43 03          	mov    0x3(%r11),%al
   2e8d4:	3c bf                	cmp    $0xbf,%al
   2e8d6:	0f 8e a9 04 00 00    	jle    2ed85 <rustc_demangle::demangle+0xd35>
   2e8dc:	4d 8d 6b 03          	lea    0x3(%r11),%r13
   2e8e0:	49 c7 c7 fd ff ff ff 	mov    $0xfffffffffffffffd,%r15
   2e8e7:	e9 0a ff ff ff       	jmpq   2e7f6 <rustc_demangle::demangle+0x7a6>
   2e8ec:	45 31 c9             	xor    %r9d,%r9d
   2e8ef:	48 29 f9             	sub    %rdi,%rcx
   2e8f2:	31 db                	xor    %ebx,%ebx
   2e8f4:	48 85 c9             	test   %rcx,%rcx
   2e8f7:	0f 84 85 02 00 00    	je     2eb82 <rustc_demangle::demangle+0xb32>
   2e8fd:	48 8d 05 b7 af 00 00 	lea    0xafb7(%rip),%rax        # 398bb <str.6+0x259b>
   2e904:	48 39 c7             	cmp    %rax,%rdi
   2e907:	74 09                	je     2e912 <rustc_demangle::demangle+0x8c2>
   2e909:	80 3f 2e             	cmpb   $0x2e,(%rdi)
   2e90c:	0f 85 8f 03 00 00    	jne    2eca1 <rustc_demangle::demangle+0xc51>
   2e912:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   2e917:	4c 8d 14 0f          	lea    (%rdi,%rcx,1),%r10
   2e91b:	4c 8d 35 3f b0 00 00 	lea    0xb03f(%rip),%r14        # 39961 <str.6+0x2641>
   2e922:	49 b8 7f 00 00 00 7e 	movabs $0x7e0000007f,%r8
   2e929:	00 00 00 
   2e92c:	48 89 f8             	mov    %rdi,%rax
   2e92f:	e9 75 02 00 00       	jmpq   2eba9 <rustc_demangle::demangle+0xb59>
   2e934:	45 31 c9             	xor    %r9d,%r9d
   2e937:	41 b8 0a 00 00 00    	mov    $0xa,%r8d
   2e93d:	83 c5 d0             	add    $0xffffffd0,%ebp
   2e940:	83 fd 09             	cmp    $0x9,%ebp
   2e943:	0f 87 44 fe ff ff    	ja     2e78d <rustc_demangle::demangle+0x73d>
   2e949:	31 c0                	xor    %eax,%eax
   2e94b:	e9 11 00 00 00       	jmpq   2e961 <rustc_demangle::demangle+0x911>
   2e950:	89 f2                	mov    %esi,%edx
   2e952:	48 89 ef             	mov    %rbp,%rdi
   2e955:	8d 6a d0             	lea    -0x30(%rdx),%ebp
   2e958:	83 fd 0a             	cmp    $0xa,%ebp
   2e95b:	0f 83 d5 00 00 00    	jae    2ea36 <rustc_demangle::demangle+0x9e6>
   2e961:	49 f7 e0             	mul    %r8
   2e964:	48 89 c2             	mov    %rax,%rdx
   2e967:	89 e8                	mov    %ebp,%eax
   2e969:	0f 90 c3             	seto   %bl
   2e96c:	48 01 d0             	add    %rdx,%rax
   2e96f:	0f 92 c2             	setb   %dl
   2e972:	84 db                	test   %bl,%bl
   2e974:	0f 85 13 fe ff ff    	jne    2e78d <rustc_demangle::demangle+0x73d>
   2e97a:	84 d2                	test   %dl,%dl
   2e97c:	0f 85 0b fe ff ff    	jne    2e78d <rustc_demangle::demangle+0x73d>
   2e982:	48 39 cf             	cmp    %rcx,%rdi
   2e985:	0f 84 02 fe ff ff    	je     2e78d <rustc_demangle::demangle+0x73d>
   2e98b:	48 8d 6f 01          	lea    0x1(%rdi),%rbp
   2e98f:	0f b6 37             	movzbl (%rdi),%esi
   2e992:	40 84 f6             	test   %sil,%sil
   2e995:	79 b9                	jns    2e950 <rustc_demangle::demangle+0x900>
   2e997:	48 39 cd             	cmp    %rcx,%rbp
   2e99a:	74 44                	je     2e9e0 <rustc_demangle::demangle+0x990>
   2e99c:	0f b6 57 01          	movzbl 0x1(%rdi),%edx
   2e9a0:	48 83 c7 02          	add    $0x2,%rdi
   2e9a4:	83 e2 3f             	and    $0x3f,%edx
   2e9a7:	89 f5                	mov    %esi,%ebp
   2e9a9:	83 e5 1f             	and    $0x1f,%ebp
   2e9ac:	40 80 fe df          	cmp    $0xdf,%sil
   2e9b0:	76 3e                	jbe    2e9f0 <rustc_demangle::demangle+0x9a0>
   2e9b2:	48 39 cf             	cmp    %rcx,%rdi
   2e9b5:	74 43                	je     2e9fa <rustc_demangle::demangle+0x9aa>
   2e9b7:	44 0f b6 17          	movzbl (%rdi),%r10d
   2e9bb:	48 83 c7 01          	add    $0x1,%rdi
   2e9bf:	41 83 e2 3f          	and    $0x3f,%r10d
   2e9c3:	c1 e2 06             	shl    $0x6,%edx
   2e9c6:	44 09 d2             	or     %r10d,%edx
   2e9c9:	40 80 fe f0          	cmp    $0xf0,%sil
   2e9cd:	72 3d                	jb     2ea0c <rustc_demangle::demangle+0x9bc>
   2e9cf:	48 39 cf             	cmp    %rcx,%rdi
   2e9d2:	74 42                	je     2ea16 <rustc_demangle::demangle+0x9c6>
   2e9d4:	0f b6 37             	movzbl (%rdi),%esi
   2e9d7:	48 83 c7 01          	add    $0x1,%rdi
   2e9db:	83 e6 3f             	and    $0x3f,%esi
   2e9de:	eb 38                	jmp    2ea18 <rustc_demangle::demangle+0x9c8>
   2e9e0:	31 d2                	xor    %edx,%edx
   2e9e2:	48 89 cf             	mov    %rcx,%rdi
   2e9e5:	89 f5                	mov    %esi,%ebp
   2e9e7:	83 e5 1f             	and    $0x1f,%ebp
   2e9ea:	40 80 fe df          	cmp    $0xdf,%sil
   2e9ee:	77 c2                	ja     2e9b2 <rustc_demangle::demangle+0x962>
   2e9f0:	c1 e5 06             	shl    $0x6,%ebp
   2e9f3:	09 ea                	or     %ebp,%edx
   2e9f5:	e9 5b ff ff ff       	jmpq   2e955 <rustc_demangle::demangle+0x905>
   2e9fa:	45 31 d2             	xor    %r10d,%r10d
   2e9fd:	48 89 cf             	mov    %rcx,%rdi
   2ea00:	c1 e2 06             	shl    $0x6,%edx
   2ea03:	44 09 d2             	or     %r10d,%edx
   2ea06:	40 80 fe f0          	cmp    $0xf0,%sil
   2ea0a:	73 c3                	jae    2e9cf <rustc_demangle::demangle+0x97f>
   2ea0c:	c1 e5 0c             	shl    $0xc,%ebp
   2ea0f:	09 ea                	or     %ebp,%edx
   2ea11:	e9 3f ff ff ff       	jmpq   2e955 <rustc_demangle::demangle+0x905>
   2ea16:	31 f6                	xor    %esi,%esi
   2ea18:	83 e5 07             	and    $0x7,%ebp
   2ea1b:	c1 e5 12             	shl    $0x12,%ebp
   2ea1e:	c1 e2 06             	shl    $0x6,%edx
   2ea21:	09 ea                	or     %ebp,%edx
   2ea23:	09 f2                	or     %esi,%edx
   2ea25:	81 fa 00 00 11 00    	cmp    $0x110000,%edx
   2ea2b:	0f 85 24 ff ff ff    	jne    2e955 <rustc_demangle::demangle+0x905>
   2ea31:	e9 57 fd ff ff       	jmpq   2e78d <rustc_demangle::demangle+0x73d>
   2ea36:	48 85 c0             	test   %rax,%rax
   2ea39:	75 1f                	jne    2ea5a <rustc_demangle::demangle+0xa0a>
   2ea3b:	49 83 c1 01          	add    $0x1,%r9
   2ea3f:	89 d5                	mov    %edx,%ebp
   2ea41:	83 fa 45             	cmp    $0x45,%edx
   2ea44:	0f 85 f3 fe ff ff    	jne    2e93d <rustc_demangle::demangle+0x8ed>
   2ea4a:	e9 a0 fe ff ff       	jmpq   2e8ef <rustc_demangle::demangle+0x89f>
   2ea4f:	89 ea                	mov    %ebp,%edx
   2ea51:	48 89 f7             	mov    %rsi,%rdi
   2ea54:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
   2ea58:	74 e1                	je     2ea3b <rustc_demangle::demangle+0x9eb>
   2ea5a:	48 39 cf             	cmp    %rcx,%rdi
   2ea5d:	0f 84 2a fd ff ff    	je     2e78d <rustc_demangle::demangle+0x73d>
   2ea63:	48 8d 77 01          	lea    0x1(%rdi),%rsi
   2ea67:	0f b6 2f             	movzbl (%rdi),%ebp
   2ea6a:	40 84 ed             	test   %bpl,%bpl
   2ea6d:	79 e0                	jns    2ea4f <rustc_demangle::demangle+0x9ff>
   2ea6f:	48 39 ce             	cmp    %rcx,%rsi
   2ea72:	74 47                	je     2eabb <rustc_demangle::demangle+0xa6b>
   2ea74:	0f b6 57 01          	movzbl 0x1(%rdi),%edx
   2ea78:	48 83 c7 02          	add    $0x2,%rdi
   2ea7c:	83 e2 3f             	and    $0x3f,%edx
   2ea7f:	48 89 fe             	mov    %rdi,%rsi
   2ea82:	89 ef                	mov    %ebp,%edi
   2ea84:	83 e7 1f             	and    $0x1f,%edi
   2ea87:	40 80 fd df          	cmp    $0xdf,%bpl
   2ea8b:	76 3e                	jbe    2eacb <rustc_demangle::demangle+0xa7b>
   2ea8d:	48 39 ce             	cmp    %rcx,%rsi
   2ea90:	74 43                	je     2ead5 <rustc_demangle::demangle+0xa85>
   2ea92:	44 0f b6 16          	movzbl (%rsi),%r10d
   2ea96:	48 83 c6 01          	add    $0x1,%rsi
   2ea9a:	41 83 e2 3f          	and    $0x3f,%r10d
   2ea9e:	c1 e2 06             	shl    $0x6,%edx
   2eaa1:	44 09 d2             	or     %r10d,%edx
   2eaa4:	40 80 fd f0          	cmp    $0xf0,%bpl
   2eaa8:	72 3d                	jb     2eae7 <rustc_demangle::demangle+0xa97>
   2eaaa:	48 39 ce             	cmp    %rcx,%rsi
   2eaad:	74 42                	je     2eaf1 <rustc_demangle::demangle+0xaa1>
   2eaaf:	0f b6 2e             	movzbl (%rsi),%ebp
   2eab2:	48 83 c6 01          	add    $0x1,%rsi
   2eab6:	83 e5 3f             	and    $0x3f,%ebp
   2eab9:	eb 38                	jmp    2eaf3 <rustc_demangle::demangle+0xaa3>
   2eabb:	31 d2                	xor    %edx,%edx
   2eabd:	48 89 ce             	mov    %rcx,%rsi
   2eac0:	89 ef                	mov    %ebp,%edi
   2eac2:	83 e7 1f             	and    $0x1f,%edi
   2eac5:	40 80 fd df          	cmp    $0xdf,%bpl
   2eac9:	77 c2                	ja     2ea8d <rustc_demangle::demangle+0xa3d>
   2eacb:	c1 e7 06             	shl    $0x6,%edi
   2eace:	09 fa                	or     %edi,%edx
   2ead0:	e9 7c ff ff ff       	jmpq   2ea51 <rustc_demangle::demangle+0xa01>
   2ead5:	45 31 d2             	xor    %r10d,%r10d
   2ead8:	48 89 ce             	mov    %rcx,%rsi
   2eadb:	c1 e2 06             	shl    $0x6,%edx
   2eade:	44 09 d2             	or     %r10d,%edx
   2eae1:	40 80 fd f0          	cmp    $0xf0,%bpl
   2eae5:	73 c3                	jae    2eaaa <rustc_demangle::demangle+0xa5a>
   2eae7:	c1 e7 0c             	shl    $0xc,%edi
   2eaea:	09 fa                	or     %edi,%edx
   2eaec:	e9 60 ff ff ff       	jmpq   2ea51 <rustc_demangle::demangle+0xa01>
   2eaf1:	31 ed                	xor    %ebp,%ebp
   2eaf3:	83 e7 07             	and    $0x7,%edi
   2eaf6:	c1 e7 12             	shl    $0x12,%edi
   2eaf9:	c1 e2 06             	shl    $0x6,%edx
   2eafc:	09 fa                	or     %edi,%edx
   2eafe:	09 ea                	or     %ebp,%edx
   2eb00:	81 fa 00 00 11 00    	cmp    $0x110000,%edx
   2eb06:	0f 85 45 ff ff ff    	jne    2ea51 <rustc_demangle::demangle+0xa01>
   2eb0c:	e9 7c fc ff ff       	jmpq   2e78d <rustc_demangle::demangle+0x73d>
   2eb11:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   2eb16:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   2eb1b:	48 39 d1             	cmp    %rdx,%rcx
   2eb1e:	76 2a                	jbe    2eb4a <rustc_demangle::demangle+0xafa>
   2eb20:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   2eb25:	8a 04 10             	mov    (%rax,%rdx,1),%al
   2eb28:	04 bf                	add    $0xbf,%al
   2eb2a:	3c 19                	cmp    $0x19,%al
   2eb2c:	77 1c                	ja     2eb4a <rustc_demangle::demangle+0xafa>
   2eb2e:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   2eb33:	e8 b8 c5 ff ff       	callq  2b0f0 <rustc_demangle::v0::Parser::skip_path>
   2eb38:	84 c0                	test   %al,%al
   2eb3a:	0f 85 4f fd ff ff    	jne    2e88f <rustc_demangle::demangle+0x83f>
   2eb40:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   2eb45:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   2eb4a:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   2eb4f:	48 85 d2             	test   %rdx,%rdx
   2eb52:	74 15                	je     2eb69 <rustc_demangle::demangle+0xb19>
   2eb54:	48 39 d1             	cmp    %rdx,%rcx
   2eb57:	74 10                	je     2eb69 <rustc_demangle::demangle+0xb19>
   2eb59:	0f 86 14 02 00 00    	jbe    2ed73 <rustc_demangle::demangle+0xd23>
   2eb5f:	80 3c 17 bf          	cmpb   $0xbf,(%rdi,%rdx,1)
   2eb63:	0f 8e 0a 02 00 00    	jle    2ed73 <rustc_demangle::demangle+0xd23>
   2eb69:	48 01 d7             	add    %rdx,%rdi
   2eb6c:	48 29 d1             	sub    %rdx,%rcx
   2eb6f:	bb 01 00 00 00       	mov    $0x1,%ebx
   2eb74:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   2eb79:	48 85 c9             	test   %rcx,%rcx
   2eb7c:	0f 85 7b fd ff ff    	jne    2e8fd <rustc_demangle::demangle+0x8ad>
   2eb82:	31 c9                	xor    %ecx,%ecx
   2eb84:	49 89 fe             	mov    %rdi,%r14
   2eb87:	e9 a5 fc ff ff       	jmpq   2e831 <rustc_demangle::demangle+0x7e1>
   2eb8c:	83 c2 85             	add    $0xffffff85,%edx
   2eb8f:	83 fa 03             	cmp    $0x3,%edx
   2eb92:	0f 87 10 01 00 00    	ja     2eca8 <rustc_demangle::demangle+0xc58>
   2eb98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2eb9f:	00 
   2eba0:	4c 39 d0             	cmp    %r10,%rax
   2eba3:	0f 84 eb 00 00 00    	je     2ec94 <rustc_demangle::demangle+0xc44>
   2eba9:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2ebad:	0f b6 28             	movzbl (%rax),%ebp
   2ebb0:	40 84 ed             	test   %bpl,%bpl
   2ebb3:	78 0b                	js     2ebc0 <rustc_demangle::demangle+0xb70>
   2ebb5:	48 89 d0             	mov    %rdx,%rax
   2ebb8:	89 ea                	mov    %ebp,%edx
   2ebba:	e9 91 00 00 00       	jmpq   2ec50 <rustc_demangle::demangle+0xc00>
   2ebbf:	90                   	nop
   2ebc0:	4c 39 d2             	cmp    %r10,%rdx
   2ebc3:	74 41                	je     2ec06 <rustc_demangle::demangle+0xbb6>
   2ebc5:	0f b6 50 01          	movzbl 0x1(%rax),%edx
   2ebc9:	48 83 c0 02          	add    $0x2,%rax
   2ebcd:	83 e2 3f             	and    $0x3f,%edx
   2ebd0:	89 ee                	mov    %ebp,%esi
   2ebd2:	83 e6 1f             	and    $0x1f,%esi
   2ebd5:	40 80 fd df          	cmp    $0xdf,%bpl
   2ebd9:	76 3b                	jbe    2ec16 <rustc_demangle::demangle+0xbc6>
   2ebdb:	4c 39 d0             	cmp    %r10,%rax
   2ebde:	74 3d                	je     2ec1d <rustc_demangle::demangle+0xbcd>
   2ebe0:	0f b6 18             	movzbl (%rax),%ebx
   2ebe3:	48 83 c0 01          	add    $0x1,%rax
   2ebe7:	83 e3 3f             	and    $0x3f,%ebx
   2ebea:	c1 e2 06             	shl    $0x6,%edx
   2ebed:	09 da                	or     %ebx,%edx
   2ebef:	40 80 fd f0          	cmp    $0xf0,%bpl
   2ebf3:	72 38                	jb     2ec2d <rustc_demangle::demangle+0xbdd>
   2ebf5:	4c 39 d0             	cmp    %r10,%rax
   2ebf8:	74 3a                	je     2ec34 <rustc_demangle::demangle+0xbe4>
   2ebfa:	0f b6 28             	movzbl (%rax),%ebp
   2ebfd:	48 83 c0 01          	add    $0x1,%rax
   2ec01:	83 e5 3f             	and    $0x3f,%ebp
   2ec04:	eb 33                	jmp    2ec39 <rustc_demangle::demangle+0xbe9>
   2ec06:	31 d2                	xor    %edx,%edx
   2ec08:	4c 89 d0             	mov    %r10,%rax
   2ec0b:	89 ee                	mov    %ebp,%esi
   2ec0d:	83 e6 1f             	and    $0x1f,%esi
   2ec10:	40 80 fd df          	cmp    $0xdf,%bpl
   2ec14:	77 c5                	ja     2ebdb <rustc_demangle::demangle+0xb8b>
   2ec16:	c1 e6 06             	shl    $0x6,%esi
   2ec19:	09 f2                	or     %esi,%edx
   2ec1b:	eb 33                	jmp    2ec50 <rustc_demangle::demangle+0xc00>
   2ec1d:	31 db                	xor    %ebx,%ebx
   2ec1f:	4c 89 d0             	mov    %r10,%rax
   2ec22:	c1 e2 06             	shl    $0x6,%edx
   2ec25:	09 da                	or     %ebx,%edx
   2ec27:	40 80 fd f0          	cmp    $0xf0,%bpl
   2ec2b:	73 c8                	jae    2ebf5 <rustc_demangle::demangle+0xba5>
   2ec2d:	c1 e6 0c             	shl    $0xc,%esi
   2ec30:	09 f2                	or     %esi,%edx
   2ec32:	eb 1c                	jmp    2ec50 <rustc_demangle::demangle+0xc00>
   2ec34:	31 ed                	xor    %ebp,%ebp
   2ec36:	4c 89 d0             	mov    %r10,%rax
   2ec39:	83 e6 07             	and    $0x7,%esi
   2ec3c:	c1 e6 12             	shl    $0x12,%esi
   2ec3f:	c1 e2 06             	shl    $0x6,%edx
   2ec42:	09 f2                	or     %esi,%edx
   2ec44:	09 ea                	or     %ebp,%edx
   2ec46:	81 fa 00 00 11 00    	cmp    $0x110000,%edx
   2ec4c:	74 46                	je     2ec94 <rustc_demangle::demangle+0xc44>
   2ec4e:	66 90                	xchg   %ax,%ax
   2ec50:	8d 72 df             	lea    -0x21(%rdx),%esi
   2ec53:	83 fe 0f             	cmp    $0xf,%esi
   2ec56:	0f 82 44 ff ff ff    	jb     2eba0 <rustc_demangle::demangle+0xb50>
   2ec5c:	8d 72 d0             	lea    -0x30(%rdx),%esi
   2ec5f:	83 fe 0a             	cmp    $0xa,%esi
   2ec62:	0f 82 38 ff ff ff    	jb     2eba0 <rustc_demangle::demangle+0xb50>
   2ec68:	89 d6                	mov    %edx,%esi
   2ec6a:	83 e6 df             	and    $0xffffffdf,%esi
   2ec6d:	83 c6 bf             	add    $0xffffffbf,%esi
   2ec70:	83 fe 1a             	cmp    $0x1a,%esi
   2ec73:	0f 82 27 ff ff ff    	jb     2eba0 <rustc_demangle::demangle+0xb50>
   2ec79:	8d 72 c6             	lea    -0x3a(%rdx),%esi
   2ec7c:	83 fe 26             	cmp    $0x26,%esi
   2ec7f:	0f 87 07 ff ff ff    	ja     2eb8c <rustc_demangle::demangle+0xb3c>
   2ec85:	49 0f a3 f0          	bt     %rsi,%r8
   2ec89:	0f 82 11 ff ff ff    	jb     2eba0 <rustc_demangle::demangle+0xb50>
   2ec8f:	e9 f8 fe ff ff       	jmpq   2eb8c <rustc_demangle::demangle+0xb3c>
   2ec94:	49 89 fe             	mov    %rdi,%r14
   2ec97:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   2ec9c:	e9 90 fb ff ff       	jmpq   2e831 <rustc_demangle::demangle+0x7e1>
   2eca1:	4c 8d 35 b9 ac 00 00 	lea    0xacb9(%rip),%r14        # 39961 <str.6+0x2641>
   2eca8:	bb 02 00 00 00       	mov    $0x2,%ebx
   2ecad:	31 c9                	xor    %ecx,%ecx
   2ecaf:	e9 7d fb ff ff       	jmpq   2e831 <rustc_demangle::demangle+0x7e1>
   2ecb4:	48 01 cf             	add    %rcx,%rdi
   2ecb7:	48 39 f7             	cmp    %rsi,%rdi
   2ecba:	48 0f 42 fe          	cmovb  %rsi,%rdi
   2ecbe:	48 8d 15 93 60 01 00 	lea    0x16093(%rip),%rdx        # 44d58 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1820>
   2ecc5:	ff 15 c5 6f 01 00    	callq  *0x16fc5(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   2eccb:	0f 0b                	ud2    
   2eccd:	48 8d 15 9c 60 01 00 	lea    0x1609c(%rip),%rdx        # 44d70 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1838>
   2ecd4:	4c 89 e6             	mov    %r12,%rsi
   2ecd7:	ff 15 b3 6f 01 00    	callq  *0x16fb3(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   2ecdd:	0f 0b                	ud2    
   2ecdf:	48 8d 15 a2 60 01 00 	lea    0x160a2(%rip),%rdx        # 44d88 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1850>
   2ece6:	48 89 df             	mov    %rbx,%rdi
   2ece9:	ff 15 a1 6f 01 00    	callq  *0x16fa1(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   2ecef:	0f 0b                	ud2    
   2ecf1:	4c 8d 05 c8 60 01 00 	lea    0x160c8(%rip),%r8        # 44dc0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1888>
   2ecf8:	48 89 ce             	mov    %rcx,%rsi
   2ecfb:	ff 15 2f 71 01 00    	callq  *0x1712f(%rip)        # 45e30 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   2ed01:	0f 0b                	ud2    
   2ed03:	4c 01 f9             	add    %r15,%rcx
   2ed06:	48 39 f1             	cmp    %rsi,%rcx
   2ed09:	48 0f 42 ce          	cmovb  %rsi,%rcx
   2ed0d:	48 8d 15 44 60 01 00 	lea    0x16044(%rip),%rdx        # 44d58 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1820>
   2ed14:	48 89 cf             	mov    %rcx,%rdi
   2ed17:	ff 15 73 6f 01 00    	callq  *0x16f73(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   2ed1d:	0f 0b                	ud2    
   2ed1f:	4c 8d 05 b2 63 01 00 	lea    0x163b2(%rip),%r8        # 450d8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1ba0>
   2ed26:	eb 3a                	jmp    2ed62 <rustc_demangle::demangle+0xd12>
   2ed28:	4c 8d 05 c1 63 01 00 	lea    0x163c1(%rip),%r8        # 450f0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1bb8>
   2ed2f:	4c 89 df             	mov    %r11,%rdi
   2ed32:	4c 89 e6             	mov    %r12,%rsi
   2ed35:	31 d2                	xor    %edx,%edx
   2ed37:	ff 15 f3 70 01 00    	callq  *0x170f3(%rip)        # 45e30 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   2ed3d:	0f 0b                	ud2    
   2ed3f:	4c 8d 05 72 62 01 00 	lea    0x16272(%rip),%r8        # 44fb8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1a80>
   2ed46:	eb 15                	jmp    2ed5d <rustc_demangle::demangle+0xd0d>
   2ed48:	4c 8d 05 81 62 01 00 	lea    0x16281(%rip),%r8        # 44fd0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1a98>
   2ed4f:	ba 01 00 00 00       	mov    $0x1,%edx
   2ed54:	eb 0c                	jmp    2ed62 <rustc_demangle::demangle+0xd12>
   2ed56:	4c 8d 05 ab 60 01 00 	lea    0x160ab(%rip),%r8        # 44e08 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x18d0>
   2ed5d:	ba 02 00 00 00       	mov    $0x2,%edx
   2ed62:	4c 89 df             	mov    %r11,%rdi
   2ed65:	4c 89 e6             	mov    %r12,%rsi
   2ed68:	4c 89 e1             	mov    %r12,%rcx
   2ed6b:	ff 15 bf 70 01 00    	callq  *0x170bf(%rip)        # 45e30 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   2ed71:	0f 0b                	ud2    
   2ed73:	4c 8d 05 86 62 01 00 	lea    0x16286(%rip),%r8        # 45000 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1ac8>
   2ed7a:	48 89 ce             	mov    %rcx,%rsi
   2ed7d:	ff 15 ad 70 01 00    	callq  *0x170ad(%rip)        # 45e30 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   2ed83:	0f 0b                	ud2    
   2ed85:	4c 8d 05 5c 62 01 00 	lea    0x1625c(%rip),%r8        # 44fe8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1ab0>
   2ed8c:	ba 03 00 00 00       	mov    $0x3,%edx
   2ed91:	eb cf                	jmp    2ed62 <rustc_demangle::demangle+0xd12>
   2ed93:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2ed9a:	00 00 00 
   2ed9d:	0f 1f 00             	nopl   (%rax)

000000000002eda0 <rustc_demangle::try_demangle>:
   2eda0:	53                   	push   %rbx
   2eda1:	48 83 ec 40          	sub    $0x40,%rsp
   2eda5:	48 89 fb             	mov    %rdi,%rbx
   2eda8:	48 89 e7             	mov    %rsp,%rdi
   2edab:	ff 15 1f 70 01 00    	callq  *0x1701f(%rip)        # 45dd0 <_GLOBAL_OFFSET_TABLE_+0x448>
   2edb1:	48 83 3c 24 02       	cmpq   $0x2,(%rsp)
   2edb6:	75 10                	jne    2edc8 <rustc_demangle::try_demangle+0x28>
   2edb8:	48 c7 03 03 00 00 00 	movq   $0x3,(%rbx)
   2edbf:	48 89 d8             	mov    %rbx,%rax
   2edc2:	48 83 c4 40          	add    $0x40,%rsp
   2edc6:	5b                   	pop    %rbx
   2edc7:	c3                   	retq   
   2edc8:	0f 10 04 24          	movups (%rsp),%xmm0
   2edcc:	0f 10 4c 24 10       	movups 0x10(%rsp),%xmm1
   2edd1:	0f 10 54 24 20       	movups 0x20(%rsp),%xmm2
   2edd6:	0f 10 5c 24 30       	movups 0x30(%rsp),%xmm3
   2eddb:	0f 11 5b 30          	movups %xmm3,0x30(%rbx)
   2eddf:	0f 11 53 20          	movups %xmm2,0x20(%rbx)
   2ede3:	0f 11 4b 10          	movups %xmm1,0x10(%rbx)
   2ede7:	0f 11 03             	movups %xmm0,(%rbx)
   2edea:	48 89 d8             	mov    %rbx,%rax
   2eded:	48 83 c4 40          	add    $0x40,%rsp
   2edf1:	5b                   	pop    %rbx
   2edf2:	c3                   	retq   
   2edf3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2edfa:	00 00 00 
   2edfd:	0f 1f 00             	nopl   (%rax)

000000000002ee00 <rustc_demangle::Demangle::as_str>:
   2ee00:	48 8b 47 20          	mov    0x20(%rdi),%rax
   2ee04:	48 8b 57 28          	mov    0x28(%rdi),%rdx
   2ee08:	c3                   	retq   
   2ee09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000002ee10 <<rustc_demangle::Demangle as core::fmt::Debug>::fmt>:
   2ee10:	41 56                	push   %r14
   2ee12:	53                   	push   %rbx
   2ee13:	48 83 ec 28          	sub    $0x28,%rsp
   2ee17:	49 89 f6             	mov    %rsi,%r14
   2ee1a:	48 89 fb             	mov    %rdi,%rbx
   2ee1d:	48 8b 07             	mov    (%rdi),%rax
   2ee20:	48 83 f8 02          	cmp    $0x2,%rax
   2ee24:	75 1b                	jne    2ee41 <<rustc_demangle::Demangle as core::fmt::Debug>::fmt+0x31>
   2ee26:	48 8b 73 20          	mov    0x20(%rbx),%rsi
   2ee2a:	48 8b 53 28          	mov    0x28(%rbx),%rdx
   2ee2e:	4c 89 f7             	mov    %r14,%rdi
   2ee31:	ff 15 09 6c 01 00    	callq  *0x16c09(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2ee37:	89 c1                	mov    %eax,%ecx
   2ee39:	b0 01                	mov    $0x1,%al
   2ee3b:	84 c9                	test   %cl,%cl
   2ee3d:	74 50                	je     2ee8f <<rustc_demangle::Demangle as core::fmt::Debug>::fmt+0x7f>
   2ee3f:	eb 5f                	jmp    2eea0 <<rustc_demangle::Demangle as core::fmt::Debug>::fmt+0x90>
   2ee41:	48 8d 7b 08          	lea    0x8(%rbx),%rdi
   2ee45:	83 f8 01             	cmp    $0x1,%eax
   2ee48:	75 34                	jne    2ee7e <<rustc_demangle::Demangle as core::fmt::Debug>::fmt+0x6e>
   2ee4a:	0f 10 07             	movups (%rdi),%xmm0
   2ee4d:	0f 29 04 24          	movaps %xmm0,(%rsp)
   2ee51:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   2ee58:	00 00 
   2ee5a:	4c 89 74 24 18       	mov    %r14,0x18(%rsp)
   2ee5f:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%rsp)
   2ee66:	00 
   2ee67:	48 89 e7             	mov    %rsp,%rdi
   2ee6a:	be 01 00 00 00       	mov    $0x1,%esi
   2ee6f:	e8 0c d0 ff ff       	callq  2be80 <rustc_demangle::v0::Printer::print_path>
   2ee74:	89 c1                	mov    %eax,%ecx
   2ee76:	b0 01                	mov    $0x1,%al
   2ee78:	84 c9                	test   %cl,%cl
   2ee7a:	74 13                	je     2ee8f <<rustc_demangle::Demangle as core::fmt::Debug>::fmt+0x7f>
   2ee7c:	eb 22                	jmp    2eea0 <<rustc_demangle::Demangle as core::fmt::Debug>::fmt+0x90>
   2ee7e:	4c 89 f6             	mov    %r14,%rsi
   2ee81:	ff 15 51 6f 01 00    	callq  *0x16f51(%rip)        # 45dd8 <_GLOBAL_OFFSET_TABLE_+0x450>
   2ee87:	89 c1                	mov    %eax,%ecx
   2ee89:	b0 01                	mov    $0x1,%al
   2ee8b:	84 c9                	test   %cl,%cl
   2ee8d:	75 11                	jne    2eea0 <<rustc_demangle::Demangle as core::fmt::Debug>::fmt+0x90>
   2ee8f:	48 8b 73 30          	mov    0x30(%rbx),%rsi
   2ee93:	48 8b 53 38          	mov    0x38(%rbx),%rdx
   2ee97:	4c 89 f7             	mov    %r14,%rdi
   2ee9a:	ff 15 a0 6b 01 00    	callq  *0x16ba0(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2eea0:	48 83 c4 28          	add    $0x28,%rsp
   2eea4:	5b                   	pop    %rbx
   2eea5:	41 5e                	pop    %r14
   2eea7:	c3                   	retq   
   2eea8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2eeaf:	00 

000000000002eeb0 <core::ptr::drop_in_place>:
   2eeb0:	48 89 f8             	mov    %rdi,%rax
   2eeb3:	48 8b 3f             	mov    (%rdi),%rdi
   2eeb6:	48 85 ff             	test   %rdi,%rdi
   2eeb9:	74 14                	je     2eecf <core::ptr::drop_in_place+0x1f>
   2eebb:	48 8b 70 08          	mov    0x8(%rax),%rsi
   2eebf:	48 85 f6             	test   %rsi,%rsi
   2eec2:	74 0b                	je     2eecf <core::ptr::drop_in_place+0x1f>
   2eec4:	ba 01 00 00 00       	mov    $0x1,%edx
   2eec9:	ff 25 29 6d 01 00    	jmpq   *0x16d29(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x270>
   2eecf:	c3                   	retq   

000000000002eed0 <alloc::alloc::handle_alloc_error>:
   2eed0:	50                   	push   %rax
   2eed1:	ff 15 69 6e 01 00    	callq  *0x16e69(%rip)        # 45d40 <_GLOBAL_OFFSET_TABLE_+0x3b8>
   2eed7:	0f 0b                	ud2    
   2eed9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000002eee0 <__rg_oom>:
   2eee0:	50                   	push   %rax
   2eee1:	ff 15 f9 6d 01 00    	callq  *0x16df9(%rip)        # 45ce0 <_GLOBAL_OFFSET_TABLE_+0x358>
   2eee7:	0f 0b                	ud2    
   2eee9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000002eef0 <alloc::collections::btree::node::splitpoint>:
   2eef0:	48 89 f8             	mov    %rdi,%rax
   2eef3:	48 83 fe 05          	cmp    $0x5,%rsi
   2eef7:	73 13                	jae    2ef0c <alloc::collections::btree::node::splitpoint+0x1c>
   2eef9:	ba 04 00 00 00       	mov    $0x4,%edx
   2eefe:	31 c9                	xor    %ecx,%ecx
   2ef00:	48 89 10             	mov    %rdx,(%rax)
   2ef03:	48 89 48 08          	mov    %rcx,0x8(%rax)
   2ef07:	48 89 70 10          	mov    %rsi,0x10(%rax)
   2ef0b:	c3                   	retq   
   2ef0c:	48 83 fe 05          	cmp    $0x5,%rsi
   2ef10:	74 1e                	je     2ef30 <alloc::collections::btree::node::splitpoint+0x40>
   2ef12:	48 83 fe 06          	cmp    $0x6,%rsi
   2ef16:	75 29                	jne    2ef41 <alloc::collections::btree::node::splitpoint+0x51>
   2ef18:	b9 01 00 00 00       	mov    $0x1,%ecx
   2ef1d:	ba 05 00 00 00       	mov    $0x5,%edx
   2ef22:	31 f6                	xor    %esi,%esi
   2ef24:	48 89 10             	mov    %rdx,(%rax)
   2ef27:	48 89 48 08          	mov    %rcx,0x8(%rax)
   2ef2b:	48 89 70 10          	mov    %rsi,0x10(%rax)
   2ef2f:	c3                   	retq   
   2ef30:	31 c9                	xor    %ecx,%ecx
   2ef32:	48 89 f2             	mov    %rsi,%rdx
   2ef35:	48 89 10             	mov    %rdx,(%rax)
   2ef38:	48 89 48 08          	mov    %rcx,0x8(%rax)
   2ef3c:	48 89 70 10          	mov    %rsi,0x10(%rax)
   2ef40:	c3                   	retq   
   2ef41:	48 83 c6 f9          	add    $0xfffffffffffffff9,%rsi
   2ef45:	b9 01 00 00 00       	mov    $0x1,%ecx
   2ef4a:	ba 06 00 00 00       	mov    $0x6,%edx
   2ef4f:	48 89 10             	mov    %rdx,(%rax)
   2ef52:	48 89 48 08          	mov    %rcx,0x8(%rax)
   2ef56:	48 89 70 10          	mov    %rsi,0x10(%rax)
   2ef5a:	c3                   	retq   
   2ef5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000002ef60 <alloc::raw_vec::capacity_overflow>:
   2ef60:	50                   	push   %rax
   2ef61:	48 8d 3d a6 aa 00 00 	lea    0xaaa6(%rip),%rdi        # 39a0e <str.6+0x26ee>
   2ef68:	48 8d 15 99 61 01 00 	lea    0x16199(%rip),%rdx        # 45108 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1bd0>
   2ef6f:	be 11 00 00 00       	mov    $0x11,%esi
   2ef74:	ff 15 5e 6f 01 00    	callq  *0x16f5e(%rip)        # 45ed8 <_GLOBAL_OFFSET_TABLE_+0x550>
   2ef7a:	0f 0b                	ud2    
   2ef7c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000002ef80 <alloc::string::String::from_utf8_lossy>:
   2ef80:	55                   	push   %rbp
   2ef81:	41 57                	push   %r15
   2ef83:	41 56                	push   %r14
   2ef85:	41 55                	push   %r13
   2ef87:	41 54                	push   %r12
   2ef89:	53                   	push   %rbx
   2ef8a:	48 83 ec 78          	sub    $0x78,%rsp
   2ef8e:	49 89 d7             	mov    %rdx,%r15
   2ef91:	48 89 fd             	mov    %rdi,%rbp
   2ef94:	48 89 f7             	mov    %rsi,%rdi
   2ef97:	48 89 d6             	mov    %rdx,%rsi
   2ef9a:	ff 15 f8 6d 01 00    	callq  *0x16df8(%rip)        # 45d98 <_GLOBAL_OFFSET_TABLE_+0x410>
   2efa0:	48 89 c7             	mov    %rax,%rdi
   2efa3:	48 89 d6             	mov    %rdx,%rsi
   2efa6:	ff 15 84 6c 01 00    	callq  *0x16c84(%rip)        # 45c30 <_GLOBAL_OFFSET_TABLE_+0x2a8>
   2efac:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   2efb1:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
   2efb6:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   2efbb:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
   2efc0:	ff 15 f2 6f 01 00    	callq  *0x16ff2(%rip)        # 45fb8 <_GLOBAL_OFFSET_TABLE_+0x630>
   2efc6:	4c 8b 6c 24 40       	mov    0x40(%rsp),%r13
   2efcb:	4d 85 ed             	test   %r13,%r13
   2efce:	74 10                	je     2efe0 <alloc::string::String::from_utf8_lossy+0x60>
   2efd0:	48 8b 5c 24 48       	mov    0x48(%rsp),%rbx
   2efd5:	4c 39 fb             	cmp    %r15,%rbx
   2efd8:	75 25                	jne    2efff <alloc::string::String::from_utf8_lossy+0x7f>
   2efda:	4c 89 6d 08          	mov    %r13,0x8(%rbp)
   2efde:	eb 0e                	jmp    2efee <alloc::string::String::from_utf8_lossy+0x6e>
   2efe0:	48 8d 05 0b aa 00 00 	lea    0xaa0b(%rip),%rax        # 399f2 <str.6+0x26d2>
   2efe7:	48 89 45 08          	mov    %rax,0x8(%rbp)
   2efeb:	45 31 ff             	xor    %r15d,%r15d
   2efee:	4c 89 7d 10          	mov    %r15,0x10(%rbp)
   2eff2:	48 c7 45 00 00 00 00 	movq   $0x0,0x0(%rbp)
   2eff9:	00 
   2effa:	e9 39 03 00 00       	jmpq   2f338 <alloc::string::String::from_utf8_lossy+0x3b8>
   2efff:	48 89 6c 24 30       	mov    %rbp,0x30(%rsp)
   2f004:	4c 8b 64 24 58       	mov    0x58(%rsp),%r12
   2f009:	4d 85 ff             	test   %r15,%r15
   2f00c:	74 1c                	je     2f02a <alloc::string::String::from_utf8_lossy+0xaa>
   2f00e:	be 01 00 00 00       	mov    $0x1,%esi
   2f013:	4c 89 ff             	mov    %r15,%rdi
   2f016:	ff 15 64 6b 01 00    	callq  *0x16b64(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   2f01c:	48 85 c0             	test   %rax,%rax
   2f01f:	0f 84 45 03 00 00    	je     2f36a <alloc::string::String::from_utf8_lossy+0x3ea>
   2f025:	48 89 c7             	mov    %rax,%rdi
   2f028:	eb 08                	jmp    2f032 <alloc::string::String::from_utf8_lossy+0xb2>
   2f02a:	bf 01 00 00 00       	mov    $0x1,%edi
   2f02f:	45 31 ff             	xor    %r15d,%r15d
   2f032:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   2f037:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
   2f03c:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   2f043:	00 00 
   2f045:	49 39 df             	cmp    %rbx,%r15
   2f048:	73 5a                	jae    2f0a4 <alloc::string::String::from_utf8_lossy+0x124>
   2f04a:	4b 8d 04 3f          	lea    (%r15,%r15,1),%rax
   2f04e:	48 39 d8             	cmp    %rbx,%rax
   2f051:	48 0f 46 c3          	cmovbe %rbx,%rax
   2f055:	48 83 f8 08          	cmp    $0x8,%rax
   2f059:	41 be 08 00 00 00    	mov    $0x8,%r14d
   2f05f:	4c 0f 47 f0          	cmova  %rax,%r14
   2f063:	4d 85 ff             	test   %r15,%r15
   2f066:	74 18                	je     2f080 <alloc::string::String::from_utf8_lossy+0x100>
   2f068:	48 85 ff             	test   %rdi,%rdi
   2f06b:	74 13                	je     2f080 <alloc::string::String::from_utf8_lossy+0x100>
   2f06d:	ba 01 00 00 00       	mov    $0x1,%edx
   2f072:	4c 89 fe             	mov    %r15,%rsi
   2f075:	4c 89 f1             	mov    %r14,%rcx
   2f078:	ff 15 fa 6e 01 00    	callq  *0x16efa(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
   2f07e:	eb 0e                	jmp    2f08e <alloc::string::String::from_utf8_lossy+0x10e>
   2f080:	be 01 00 00 00       	mov    $0x1,%esi
   2f085:	4c 89 f7             	mov    %r14,%rdi
   2f088:	ff 15 f2 6a 01 00    	callq  *0x16af2(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   2f08e:	48 89 c7             	mov    %rax,%rdi
   2f091:	48 85 c0             	test   %rax,%rax
   2f094:	0f 84 e0 02 00 00    	je     2f37a <alloc::string::String::from_utf8_lossy+0x3fa>
   2f09a:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   2f09f:	4c 89 74 24 10       	mov    %r14,0x10(%rsp)
   2f0a4:	4c 89 ee             	mov    %r13,%rsi
   2f0a7:	48 89 da             	mov    %rbx,%rdx
   2f0aa:	ff 15 48 6c 01 00    	callq  *0x16c48(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
   2f0b0:	48 03 5c 24 18       	add    0x18(%rsp),%rbx
   2f0b5:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   2f0ba:	4d 85 e4             	test   %r12,%r12
   2f0bd:	0f 84 a0 00 00 00    	je     2f163 <alloc::string::String::from_utf8_lossy+0x1e3>
   2f0c3:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   2f0c8:	48 89 f0             	mov    %rsi,%rax
   2f0cb:	48 29 d8             	sub    %rbx,%rax
   2f0ce:	48 83 f8 03          	cmp    $0x3,%rax
   2f0d2:	73 44                	jae    2f118 <alloc::string::String::from_utf8_lossy+0x198>
   2f0d4:	48 89 d8             	mov    %rbx,%rax
   2f0d7:	48 83 c0 03          	add    $0x3,%rax
   2f0db:	0f 82 a9 02 00 00    	jb     2f38a <alloc::string::String::from_utf8_lossy+0x40a>
   2f0e1:	48 8d 0c 36          	lea    (%rsi,%rsi,1),%rcx
   2f0e5:	48 39 c1             	cmp    %rax,%rcx
   2f0e8:	48 0f 47 c1          	cmova  %rcx,%rax
   2f0ec:	48 83 f8 08          	cmp    $0x8,%rax
   2f0f0:	bd 08 00 00 00       	mov    $0x8,%ebp
   2f0f5:	48 0f 47 e8          	cmova  %rax,%rbp
   2f0f9:	48 85 f6             	test   %rsi,%rsi
   2f0fc:	74 21                	je     2f11f <alloc::string::String::from_utf8_lossy+0x19f>
   2f0fe:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   2f103:	48 85 ff             	test   %rdi,%rdi
   2f106:	74 17                	je     2f11f <alloc::string::String::from_utf8_lossy+0x19f>
   2f108:	ba 01 00 00 00       	mov    $0x1,%edx
   2f10d:	48 89 e9             	mov    %rbp,%rcx
   2f110:	ff 15 62 6e 01 00    	callq  *0x16e62(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
   2f116:	eb 15                	jmp    2f12d <alloc::string::String::from_utf8_lossy+0x1ad>
   2f118:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   2f11d:	eb 21                	jmp    2f140 <alloc::string::String::from_utf8_lossy+0x1c0>
   2f11f:	be 01 00 00 00       	mov    $0x1,%esi
   2f124:	48 89 ef             	mov    %rbp,%rdi
   2f127:	ff 15 53 6a 01 00    	callq  *0x16a53(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   2f12d:	48 85 c0             	test   %rax,%rax
   2f130:	0f 84 5c 02 00 00    	je     2f392 <alloc::string::String::from_utf8_lossy+0x412>
   2f136:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   2f13b:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
   2f140:	8a 0d db a8 00 00    	mov    0xa8db(%rip),%cl        # 39a21 <str.6+0x2701>
   2f146:	88 4c 18 02          	mov    %cl,0x2(%rax,%rbx,1)
   2f14a:	0f b7 0d ce a8 00 00 	movzwl 0xa8ce(%rip),%ecx        # 39a1f <str.6+0x26ff>
   2f151:	66 89 0c 18          	mov    %cx,(%rax,%rbx,1)
   2f155:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   2f15a:	48 83 c3 03          	add    $0x3,%rbx
   2f15e:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   2f163:	0f 28 44 24 20       	movaps 0x20(%rsp),%xmm0
   2f168:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
   2f16d:	4c 8d 6c 24 40       	lea    0x40(%rsp),%r13
   2f172:	4c 8d 64 24 60       	lea    0x60(%rsp),%r12
   2f177:	4c 8d 3d 82 41 00 00 	lea    0x4182(%rip),%r15        # 33300 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next>
   2f17e:	eb 2b                	jmp    2f1ab <alloc::string::String::from_utf8_lossy+0x22b>
   2f180:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   2f185:	0f b6 0d 95 a8 00 00 	movzbl 0xa895(%rip),%ecx        # 39a21 <str.6+0x2701>
   2f18c:	42 88 4c 30 02       	mov    %cl,0x2(%rax,%r14,1)
   2f191:	0f b7 0d 87 a8 00 00 	movzwl 0xa887(%rip),%ecx        # 39a1f <str.6+0x26ff>
   2f198:	66 42 89 0c 30       	mov    %cx,(%rax,%r14,1)
   2f19d:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   2f1a2:	48 83 c3 03          	add    $0x3,%rbx
   2f1a6:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   2f1ab:	4c 89 ef             	mov    %r13,%rdi
   2f1ae:	4c 89 e6             	mov    %r12,%rsi
   2f1b1:	41 ff d7             	callq  *%r15
   2f1b4:	48 8b 6c 24 40       	mov    0x40(%rsp),%rbp
   2f1b9:	48 85 ed             	test   %rbp,%rbp
   2f1bc:	0f 84 57 01 00 00    	je     2f319 <alloc::string::String::from_utf8_lossy+0x399>
   2f1c2:	4c 8b 74 24 48       	mov    0x48(%rsp),%r14
   2f1c7:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
   2f1cc:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   2f1d1:	48 89 f0             	mov    %rsi,%rax
   2f1d4:	48 29 d8             	sub    %rbx,%rax
   2f1d7:	4c 39 f0             	cmp    %r14,%rax
   2f1da:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   2f1df:	73 4f                	jae    2f230 <alloc::string::String::from_utf8_lossy+0x2b0>
   2f1e1:	49 89 df             	mov    %rbx,%r15
   2f1e4:	4c 01 f3             	add    %r14,%rbx
   2f1e7:	0f 82 6d 01 00 00    	jb     2f35a <alloc::string::String::from_utf8_lossy+0x3da>
   2f1ed:	4d 89 ec             	mov    %r13,%r12
   2f1f0:	48 8d 04 36          	lea    (%rsi,%rsi,1),%rax
   2f1f4:	48 39 d8             	cmp    %rbx,%rax
   2f1f7:	48 0f 47 d8          	cmova  %rax,%rbx
   2f1fb:	48 83 fb 08          	cmp    $0x8,%rbx
   2f1ff:	b8 08 00 00 00       	mov    $0x8,%eax
   2f204:	48 0f 46 d8          	cmovbe %rax,%rbx
   2f208:	48 85 f6             	test   %rsi,%rsi
   2f20b:	74 33                	je     2f240 <alloc::string::String::from_utf8_lossy+0x2c0>
   2f20d:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   2f212:	48 85 ff             	test   %rdi,%rdi
   2f215:	74 29                	je     2f240 <alloc::string::String::from_utf8_lossy+0x2c0>
   2f217:	ba 01 00 00 00       	mov    $0x1,%edx
   2f21c:	48 89 d9             	mov    %rbx,%rcx
   2f21f:	ff 15 53 6d 01 00    	callq  *0x16d53(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
   2f225:	eb 27                	jmp    2f24e <alloc::string::String::from_utf8_lossy+0x2ce>
   2f227:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2f22e:	00 00 
   2f230:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   2f235:	eb 3f                	jmp    2f276 <alloc::string::String::from_utf8_lossy+0x2f6>
   2f237:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2f23e:	00 00 
   2f240:	be 01 00 00 00       	mov    $0x1,%esi
   2f245:	48 89 df             	mov    %rbx,%rdi
   2f248:	ff 15 32 69 01 00    	callq  *0x16932(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   2f24e:	48 89 c7             	mov    %rax,%rdi
   2f251:	48 85 c0             	test   %rax,%rax
   2f254:	0f 84 f0 00 00 00    	je     2f34a <alloc::string::String::from_utf8_lossy+0x3ca>
   2f25a:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   2f25f:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
   2f264:	4d 89 e5             	mov    %r12,%r13
   2f267:	4c 8d 64 24 60       	lea    0x60(%rsp),%r12
   2f26c:	4c 89 fb             	mov    %r15,%rbx
   2f26f:	4c 8d 3d 8a 40 00 00 	lea    0x408a(%rip),%r15        # 33300 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next>
   2f276:	48 01 df             	add    %rbx,%rdi
   2f279:	48 89 ee             	mov    %rbp,%rsi
   2f27c:	4c 89 f2             	mov    %r14,%rdx
   2f27f:	ff 15 73 6a 01 00    	callq  *0x16a73(%rip)        # 45cf8 <memcpy@GLIBC_2.14>
   2f285:	4c 03 74 24 18       	add    0x18(%rsp),%r14
   2f28a:	4c 89 74 24 18       	mov    %r14,0x18(%rsp)
   2f28f:	4c 89 f3             	mov    %r14,%rbx
   2f292:	48 83 7c 24 38 00    	cmpq   $0x0,0x38(%rsp)
   2f298:	0f 84 0d ff ff ff    	je     2f1ab <alloc::string::String::from_utf8_lossy+0x22b>
   2f29e:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   2f2a3:	48 89 f0             	mov    %rsi,%rax
   2f2a6:	4c 29 f0             	sub    %r14,%rax
   2f2a9:	48 83 f8 03          	cmp    $0x3,%rax
   2f2ad:	0f 83 cd fe ff ff    	jae    2f180 <alloc::string::String::from_utf8_lossy+0x200>
   2f2b3:	4c 89 f3             	mov    %r14,%rbx
   2f2b6:	48 83 c3 03          	add    $0x3,%rbx
   2f2ba:	0f 82 a2 00 00 00    	jb     2f362 <alloc::string::String::from_utf8_lossy+0x3e2>
   2f2c0:	48 8d 04 36          	lea    (%rsi,%rsi,1),%rax
   2f2c4:	48 39 d8             	cmp    %rbx,%rax
   2f2c7:	48 0f 47 d8          	cmova  %rax,%rbx
   2f2cb:	48 83 fb 08          	cmp    $0x8,%rbx
   2f2cf:	b8 08 00 00 00       	mov    $0x8,%eax
   2f2d4:	48 0f 46 d8          	cmovbe %rax,%rbx
   2f2d8:	48 85 f6             	test   %rsi,%rsi
   2f2db:	74 1a                	je     2f2f7 <alloc::string::String::from_utf8_lossy+0x377>
   2f2dd:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   2f2e2:	48 85 ff             	test   %rdi,%rdi
   2f2e5:	74 10                	je     2f2f7 <alloc::string::String::from_utf8_lossy+0x377>
   2f2e7:	ba 01 00 00 00       	mov    $0x1,%edx
   2f2ec:	48 89 d9             	mov    %rbx,%rcx
   2f2ef:	ff 15 83 6c 01 00    	callq  *0x16c83(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5f0>
   2f2f5:	eb 0e                	jmp    2f305 <alloc::string::String::from_utf8_lossy+0x385>
   2f2f7:	be 01 00 00 00       	mov    $0x1,%esi
   2f2fc:	48 89 df             	mov    %rbx,%rdi
   2f2ff:	ff 15 7b 68 01 00    	callq  *0x1687b(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   2f305:	48 85 c0             	test   %rax,%rax
   2f308:	74 40                	je     2f34a <alloc::string::String::from_utf8_lossy+0x3ca>
   2f30a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   2f30f:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
   2f314:	e9 6c fe ff ff       	jmpq   2f185 <alloc::string::String::from_utf8_lossy+0x205>
   2f319:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   2f31e:	48 8b 6c 24 30       	mov    0x30(%rsp),%rbp
   2f323:	48 89 45 18          	mov    %rax,0x18(%rbp)
   2f327:	0f 10 44 24 08       	movups 0x8(%rsp),%xmm0
   2f32c:	0f 11 45 08          	movups %xmm0,0x8(%rbp)
   2f330:	48 c7 45 00 01 00 00 	movq   $0x1,0x0(%rbp)
   2f337:	00 
   2f338:	48 89 e8             	mov    %rbp,%rax
   2f33b:	48 83 c4 78          	add    $0x78,%rsp
   2f33f:	5b                   	pop    %rbx
   2f340:	41 5c                	pop    %r12
   2f342:	41 5d                	pop    %r13
   2f344:	41 5e                	pop    %r14
   2f346:	41 5f                	pop    %r15
   2f348:	5d                   	pop    %rbp
   2f349:	c3                   	retq   
   2f34a:	be 01 00 00 00       	mov    $0x1,%esi
   2f34f:	48 89 df             	mov    %rbx,%rdi
   2f352:	ff 15 c8 67 01 00    	callq  *0x167c8(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   2f358:	0f 0b                	ud2    
   2f35a:	ff 15 80 67 01 00    	callq  *0x16780(%rip)        # 45ae0 <_GLOBAL_OFFSET_TABLE_+0x158>
   2f360:	eb 06                	jmp    2f368 <alloc::string::String::from_utf8_lossy+0x3e8>
   2f362:	ff 15 78 67 01 00    	callq  *0x16778(%rip)        # 45ae0 <_GLOBAL_OFFSET_TABLE_+0x158>
   2f368:	0f 0b                	ud2    
   2f36a:	be 01 00 00 00       	mov    $0x1,%esi
   2f36f:	4c 89 ff             	mov    %r15,%rdi
   2f372:	ff 15 a8 67 01 00    	callq  *0x167a8(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   2f378:	0f 0b                	ud2    
   2f37a:	be 01 00 00 00       	mov    $0x1,%esi
   2f37f:	4c 89 f7             	mov    %r14,%rdi
   2f382:	ff 15 98 67 01 00    	callq  *0x16798(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   2f388:	0f 0b                	ud2    
   2f38a:	ff 15 50 67 01 00    	callq  *0x16750(%rip)        # 45ae0 <_GLOBAL_OFFSET_TABLE_+0x158>
   2f390:	eb d6                	jmp    2f368 <alloc::string::String::from_utf8_lossy+0x3e8>
   2f392:	be 01 00 00 00       	mov    $0x1,%esi
   2f397:	48 89 ef             	mov    %rbp,%rdi
   2f39a:	ff 15 80 67 01 00    	callq  *0x16780(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x198>
   2f3a0:	0f 0b                	ud2    
   2f3a2:	eb 00                	jmp    2f3a4 <alloc::string::String::from_utf8_lossy+0x424>
   2f3a4:	48 89 c3             	mov    %rax,%rbx
   2f3a7:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   2f3ac:	e8 ff fa ff ff       	callq  2eeb0 <core::ptr::drop_in_place>
   2f3b1:	48 89 df             	mov    %rbx,%rdi
   2f3b4:	e8 97 5c fd ff       	callq  5050 <_Unwind_Resume@plt>
   2f3b9:	0f 0b                	ud2    
   2f3bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000002f3c0 <alloc::string::<impl core::convert::From<alloc::string::String> for alloc::vec::Vec<u8>>::from>:
   2f3c0:	48 89 f8             	mov    %rdi,%rax
   2f3c3:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
   2f3c7:	48 89 4f 10          	mov    %rcx,0x10(%rdi)
   2f3cb:	0f 10 06             	movups (%rsi),%xmm0
   2f3ce:	0f 11 07             	movups %xmm0,(%rdi)
   2f3d1:	c3                   	retq   
   2f3d2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2f3d9:	00 00 00 
   2f3dc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000002f3e0 <core::ops::function::FnOnce::call_once>:
   2f3e0:	48 8b 07             	mov    (%rdi),%rax
   2f3e3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2f3ea:	00 00 00 
   2f3ed:	0f 1f 00             	nopl   (%rax)
   2f3f0:	eb fe                	jmp    2f3f0 <core::ops::function::FnOnce::call_once+0x10>
   2f3f2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2f3f9:	00 00 00 
   2f3fc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000002f400 <core::ptr::drop_in_place>:
   2f400:	c3                   	retq   
   2f401:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2f408:	00 00 00 
   2f40b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000002f410 <core::num::from_str_radix>:
   2f410:	53                   	push   %rbx
   2f411:	48 83 ec 50          	sub    $0x50,%rsp
   2f415:	41 89 d2             	mov    %edx,%r10d
   2f418:	89 54 24 0c          	mov    %edx,0xc(%rsp)
   2f41c:	41 8d 42 fe          	lea    -0x2(%r10),%eax
   2f420:	83 f8 22             	cmp    $0x22,%eax
   2f423:	0f 87 f1 00 00 00    	ja     2f51a <core::num::from_str_radix+0x10a>
   2f429:	41 b9 01 00 00 00    	mov    $0x1,%r9d
   2f42f:	48 85 f6             	test   %rsi,%rsi
   2f432:	74 68                	je     2f49c <core::num::from_str_radix+0x8c>
   2f434:	80 3f 2b             	cmpb   $0x2b,(%rdi)
   2f437:	75 0a                	jne    2f443 <core::num::from_str_radix+0x33>
   2f439:	48 83 c6 ff          	add    $0xffffffffffffffff,%rsi
   2f43d:	74 5d                	je     2f49c <core::num::from_str_radix+0x8c>
   2f43f:	48 83 c7 01          	add    $0x1,%rdi
   2f443:	45 31 c0             	xor    %r8d,%r8d
   2f446:	41 83 fa 0b          	cmp    $0xb,%r10d
   2f44a:	73 57                	jae    2f4a3 <core::num::from_str_radix+0x93>
   2f44c:	45 31 db             	xor    %r11d,%r11d
   2f44f:	31 c0                	xor    %eax,%eax
   2f451:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2f458:	00 00 00 
   2f45b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   2f460:	4c 39 de             	cmp    %r11,%rsi
   2f463:	0f 84 8f 00 00 00    	je     2f4f8 <core::num::from_str_radix+0xe8>
   2f469:	42 0f b6 0c 1f       	movzbl (%rdi,%r11,1),%ecx
   2f46e:	83 c1 d0             	add    $0xffffffd0,%ecx
   2f471:	ba 00 01 00 00       	mov    $0x100,%edx
   2f476:	83 f9 09             	cmp    $0x9,%ecx
   2f479:	0f 87 8c 00 00 00    	ja     2f50b <core::num::from_str_radix+0xfb>
   2f47f:	44 39 d1             	cmp    %r10d,%ecx
   2f482:	0f 83 83 00 00 00    	jae    2f50b <core::num::from_str_radix+0xfb>
   2f488:	41 f7 e2             	mul    %r10d
   2f48b:	ba 00 02 00 00       	mov    $0x200,%edx
   2f490:	70 79                	jo     2f50b <core::num::from_str_radix+0xfb>
   2f492:	49 83 c3 01          	add    $0x1,%r11
   2f496:	01 c8                	add    %ecx,%eax
   2f498:	73 c6                	jae    2f460 <core::num::from_str_radix+0x50>
   2f49a:	eb 6f                	jmp    2f50b <core::num::from_str_radix+0xfb>
   2f49c:	45 31 c0             	xor    %r8d,%r8d
   2f49f:	31 d2                	xor    %edx,%edx
   2f4a1:	eb 68                	jmp    2f50b <core::num::from_str_radix+0xfb>
   2f4a3:	31 c9                	xor    %ecx,%ecx
   2f4a5:	31 c0                	xor    %eax,%eax
   2f4a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2f4ae:	00 00 
   2f4b0:	48 39 ce             	cmp    %rcx,%rsi
   2f4b3:	74 43                	je     2f4f8 <core::num::from_str_radix+0xe8>
   2f4b5:	0f b6 1c 0f          	movzbl (%rdi,%rcx,1),%ebx
   2f4b9:	44 8d 5b d0          	lea    -0x30(%rbx),%r11d
   2f4bd:	41 83 fb 0a          	cmp    $0xa,%r11d
   2f4c1:	72 1b                	jb     2f4de <core::num::from_str_radix+0xce>
   2f4c3:	8d 53 9f             	lea    -0x61(%rbx),%edx
   2f4c6:	83 fa 1a             	cmp    $0x1a,%edx
   2f4c9:	73 05                	jae    2f4d0 <core::num::from_str_radix+0xc0>
   2f4cb:	83 c3 a9             	add    $0xffffffa9,%ebx
   2f4ce:	eb 0b                	jmp    2f4db <core::num::from_str_radix+0xcb>
   2f4d0:	8d 53 bf             	lea    -0x41(%rbx),%edx
   2f4d3:	83 fa 1a             	cmp    $0x1a,%edx
   2f4d6:	73 2e                	jae    2f506 <core::num::from_str_radix+0xf6>
   2f4d8:	83 c3 c9             	add    $0xffffffc9,%ebx
   2f4db:	41 89 db             	mov    %ebx,%r11d
   2f4de:	45 39 d3             	cmp    %r10d,%r11d
   2f4e1:	73 23                	jae    2f506 <core::num::from_str_radix+0xf6>
   2f4e3:	41 f7 e2             	mul    %r10d
   2f4e6:	ba 00 02 00 00       	mov    $0x200,%edx
   2f4eb:	70 1e                	jo     2f50b <core::num::from_str_radix+0xfb>
   2f4ed:	48 83 c1 01          	add    $0x1,%rcx
   2f4f1:	44 01 d8             	add    %r11d,%eax
   2f4f4:	73 ba                	jae    2f4b0 <core::num::from_str_radix+0xa0>
   2f4f6:	eb 13                	jmp    2f50b <core::num::from_str_radix+0xfb>
   2f4f8:	48 c1 e0 20          	shl    $0x20,%rax
   2f4fc:	31 d2                	xor    %edx,%edx
   2f4fe:	49 89 c0             	mov    %rax,%r8
   2f501:	45 31 c9             	xor    %r9d,%r9d
   2f504:	eb 05                	jmp    2f50b <core::num::from_str_radix+0xfb>
   2f506:	ba 00 01 00 00       	mov    $0x100,%edx
   2f50b:	4d 09 c8             	or     %r9,%r8
   2f50e:	49 09 d0             	or     %rdx,%r8
   2f511:	4c 89 c0             	mov    %r8,%rax
   2f514:	48 83 c4 50          	add    $0x50,%rsp
   2f518:	5b                   	pop    %rbx
   2f519:	c3                   	retq   
   2f51a:	48 8d 44 24 0c       	lea    0xc(%rsp),%rax
   2f51f:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   2f524:	48 8d 05 05 57 00 00 	lea    0x5705(%rip),%rax        # 34c30 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt>
   2f52b:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2f530:	48 8d 05 e9 5b 01 00 	lea    0x15be9(%rip),%rax        # 45120 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1be8>
   2f537:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   2f53c:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
   2f543:	00 00 
   2f545:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   2f54c:	00 00 
   2f54e:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   2f553:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   2f558:	48 c7 44 24 48 01 00 	movq   $0x1,0x48(%rsp)
   2f55f:	00 00 
   2f561:	48 8d 35 c8 5b 01 00 	lea    0x15bc8(%rip),%rsi        # 45130 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1bf8>
   2f568:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   2f56d:	ff 15 d5 66 01 00    	callq  *0x166d5(%rip)        # 45c48 <_GLOBAL_OFFSET_TABLE_+0x2c0>
   2f573:	0f 0b                	ud2    
   2f575:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2f57c:	00 00 00 
   2f57f:	90                   	nop

000000000002f580 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt>:
   2f580:	41 56                	push   %r14
   2f582:	53                   	push   %rbx
   2f583:	48 83 ec 38          	sub    $0x38,%rsp
   2f587:	48 89 f3             	mov    %rsi,%rbx
   2f58a:	49 89 fe             	mov    %rdi,%r14
   2f58d:	e8 be 52 00 00       	callq  34850 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt>
   2f592:	84 c0                	test   %al,%al
   2f594:	75 4a                	jne    2f5e0 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt+0x60>
   2f596:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   2f59a:	48 8b 73 28          	mov    0x28(%rbx),%rsi
   2f59e:	48 8d 05 a3 5b 01 00 	lea    0x15ba3(%rip),%rax        # 45148 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1c10>
   2f5a5:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   2f5aa:	48 c7 44 24 10 01 00 	movq   $0x1,0x10(%rsp)
   2f5b1:	00 00 
   2f5b3:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   2f5ba:	00 00 
   2f5bc:	48 8d 05 6d a8 00 00 	lea    0xa86d(%rip),%rax        # 39e30 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x2e0>
   2f5c3:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   2f5c8:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   2f5cf:	00 00 
   2f5d1:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   2f5d6:	ff 15 1c 68 01 00    	callq  *0x1681c(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x470>
   2f5dc:	84 c0                	test   %al,%al
   2f5de:	74 0a                	je     2f5ea <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt+0x6a>
   2f5e0:	b0 01                	mov    $0x1,%al
   2f5e2:	48 83 c4 38          	add    $0x38,%rsp
   2f5e6:	5b                   	pop    %rbx
   2f5e7:	41 5e                	pop    %r14
   2f5e9:	c3                   	retq   
   2f5ea:	49 83 c6 08          	add    $0x8,%r14
   2f5ee:	4c 89 f7             	mov    %r14,%rdi
   2f5f1:	48 89 de             	mov    %rbx,%rsi
   2f5f4:	48 83 c4 38          	add    $0x38,%rsp
   2f5f8:	5b                   	pop    %rbx
   2f5f9:	41 5e                	pop    %r14
   2f5fb:	e9 50 52 00 00       	jmpq   34850 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt>

000000000002f600 <<T as core::any::Any>::type_id>:
   2f600:	48 b8 06 bb 17 03 a1 	movabs $0x39682a10317bb06,%rax
   2f607:	82 96 03 
   2f60a:	c3                   	retq   
   2f60b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000002f610 <<core::cell::BorrowError as core::fmt::Debug>::fmt>:
   2f610:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
   2f614:	48 8b 46 28          	mov    0x28(%rsi),%rax
   2f618:	48 8b 40 18          	mov    0x18(%rax),%rax
   2f61c:	48 8d 35 91 a8 00 00 	lea    0xa891(%rip),%rsi        # 39eb4 <str.1+0x74>
   2f623:	ba 0b 00 00 00       	mov    $0xb,%edx
   2f628:	ff e0                	jmpq   *%rax
   2f62a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000002f630 <<core::cell::BorrowMutError as core::fmt::Debug>::fmt>:
   2f630:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
   2f634:	48 8b 46 28          	mov    0x28(%rsi),%rax
   2f638:	48 8b 40 18          	mov    0x18(%rax),%rax
   2f63c:	48 8d 35 7c a8 00 00 	lea    0xa87c(%rip),%rsi        # 39ebf <str.1+0x7f>
   2f643:	ba 0e 00 00 00       	mov    $0xe,%edx
   2f648:	ff e0                	jmpq   *%rax
   2f64a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000002f650 <<core::char::EscapeDebug as core::iter::traits::iterator::Iterator>::next>:
   2f650:	8b 0f                	mov    (%rdi),%ecx
   2f652:	b8 00 00 11 00       	mov    $0x110000,%eax
   2f657:	48 8d 15 1a a6 00 00 	lea    0xa61a(%rip),%rdx        # 39c78 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x128>
   2f65e:	48 63 0c 8a          	movslq (%rdx,%rcx,4),%rcx
   2f662:	48 01 d1             	add    %rdx,%rcx
   2f665:	ff e1                	jmpq   *%rcx
   2f667:	8b 47 04             	mov    0x4(%rdi),%eax
   2f66a:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
   2f670:	c3                   	retq   
   2f671:	c7 07 01 00 00 00    	movl   $0x1,(%rdi)
   2f677:	b8 5c 00 00 00       	mov    $0x5c,%eax
   2f67c:	c3                   	retq   
   2f67d:	0f b6 4f 14          	movzbl 0x14(%rdi),%ecx
   2f681:	48 8d 15 00 a6 00 00 	lea    0xa600(%rip),%rdx        # 39c88 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x138>
   2f688:	48 63 0c 8a          	movslq (%rdx,%rcx,4),%rcx
   2f68c:	48 01 d1             	add    %rdx,%rcx
   2f68f:	ff e1                	jmpq   *%rcx
   2f691:	c6 47 14 00          	movb   $0x0,0x14(%rdi)
   2f695:	b8 7d 00 00 00       	mov    $0x7d,%eax
   2f69a:	c3                   	retq   
   2f69b:	8b 77 10             	mov    0x10(%rdi),%esi
   2f69e:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   2f6a2:	8d 0c 95 00 00 00 00 	lea    0x0(,%rdx,4),%ecx
   2f6a9:	d3 ee                	shr    %cl,%esi
   2f6ab:	83 e6 0f             	and    $0xf,%esi
   2f6ae:	40 80 fe 0a          	cmp    $0xa,%sil
   2f6b2:	b9 30 00 00 00       	mov    $0x30,%ecx
   2f6b7:	b8 57 00 00 00       	mov    $0x57,%eax
   2f6bc:	0f 42 c1             	cmovb  %ecx,%eax
   2f6bf:	01 f0                	add    %esi,%eax
   2f6c1:	48 85 d2             	test   %rdx,%rdx
   2f6c4:	74 27                	je     2f6ed <<core::char::EscapeDebug as core::iter::traits::iterator::Iterator>::next+0x9d>
   2f6c6:	48 83 c2 ff          	add    $0xffffffffffffffff,%rdx
   2f6ca:	48 89 57 08          	mov    %rdx,0x8(%rdi)
   2f6ce:	c3                   	retq   
   2f6cf:	c6 47 14 02          	movb   $0x2,0x14(%rdi)
   2f6d3:	b8 7b 00 00 00       	mov    $0x7b,%eax
   2f6d8:	c3                   	retq   
   2f6d9:	c6 47 14 03          	movb   $0x3,0x14(%rdi)
   2f6dd:	b8 75 00 00 00       	mov    $0x75,%eax
   2f6e2:	c3                   	retq   
   2f6e3:	c6 47 14 04          	movb   $0x4,0x14(%rdi)
   2f6e7:	b8 5c 00 00 00       	mov    $0x5c,%eax
   2f6ec:	c3                   	retq   
   2f6ed:	c6 47 14 01          	movb   $0x1,0x14(%rdi)
   2f6f1:	c3                   	retq   
   2f6f2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2f6f9:	00 00 00 
   2f6fc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000002f700 <core::option::expect_failed>:
   2f700:	48 83 ec 58          	sub    $0x58,%rsp
   2f704:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   2f709:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   2f70e:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   2f713:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2f718:	48 8d 05 a1 5a 00 00 	lea    0x5aa1(%rip),%rax        # 351c0 <<&T as core::fmt::Display>::fmt>
   2f71f:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   2f724:	48 8d 05 2d 5a 01 00 	lea    0x15a2d(%rip),%rax        # 45158 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1c20>
   2f72b:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   2f730:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
   2f737:	00 00 
   2f739:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   2f740:	00 00 
   2f742:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
   2f747:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   2f74c:	48 c7 44 24 50 01 00 	movq   $0x1,0x50(%rsp)
   2f753:	00 00 
   2f755:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
   2f75a:	48 89 d6             	mov    %rdx,%rsi
   2f75d:	ff 15 e5 64 01 00    	callq  *0x164e5(%rip)        # 45c48 <_GLOBAL_OFFSET_TABLE_+0x2c0>
   2f763:	0f 0b                	ud2    
   2f765:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2f76c:	00 00 00 
   2f76f:	90                   	nop

000000000002f770 <core::option::expect_none_failed>:
   2f770:	48 83 ec 78          	sub    $0x78,%rsp
   2f774:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   2f779:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   2f77e:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   2f783:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   2f788:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   2f78d:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   2f792:	48 8d 05 27 5a 00 00 	lea    0x5a27(%rip),%rax        # 351c0 <<&T as core::fmt::Display>::fmt>
   2f799:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   2f79e:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
   2f7a3:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   2f7a8:	48 8d 05 01 59 00 00 	lea    0x5901(%rip),%rax        # 350b0 <<&T as core::fmt::Debug>::fmt>
   2f7af:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   2f7b4:	48 8d 05 ad 59 01 00 	lea    0x159ad(%rip),%rax        # 45168 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1c30>
   2f7bb:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   2f7c0:	48 c7 44 24 50 02 00 	movq   $0x2,0x50(%rsp)
   2f7c7:	00 00 
   2f7c9:	48 c7 44 24 58 00 00 	movq   $0x0,0x58(%rsp)
   2f7d0:	00 00 
   2f7d2:	48 8d 44 24 28       	lea    0x28(%rsp),%rax
   2f7d7:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   2f7dc:	48 c7 44 24 70 02 00 	movq   $0x2,0x70(%rsp)
   2f7e3:	00 00 
   2f7e5:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
   2f7ea:	4c 89 c6             	mov    %r8,%rsi
   2f7ed:	ff 15 55 64 01 00    	callq  *0x16455(%rip)        # 45c48 <_GLOBAL_OFFSET_TABLE_+0x2c0>
   2f7f3:	0f 0b                	ud2    
   2f7f5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2f7fc:	00 00 00 
   2f7ff:	90                   	nop

000000000002f800 <core::panic::PanicInfo::payload>:
   2f800:	48 8b 07             	mov    (%rdi),%rax
   2f803:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   2f807:	c3                   	retq   
   2f808:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2f80f:	00 

000000000002f810 <core::panic::PanicInfo::message>:
   2f810:	48 8b 47 10          	mov    0x10(%rdi),%rax
   2f814:	c3                   	retq   
   2f815:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2f81c:	00 00 00 
   2f81f:	90                   	nop

000000000002f820 <core::panic::PanicInfo::location>:
   2f820:	48 8b 47 18          	mov    0x18(%rdi),%rax
   2f824:	c3                   	retq   
   2f825:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2f82c:	00 00 00 
   2f82f:	90                   	nop

000000000002f830 <core::panic::Location::caller>:
   2f830:	48 89 f8             	mov    %rdi,%rax
   2f833:	c3                   	retq   
   2f834:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2f83b:	00 00 00 
   2f83e:	66 90                	xchg   %ax,%ax

000000000002f840 <<core::panic::Location as core::fmt::Display>::fmt>:
   2f840:	48 83 ec 68          	sub    $0x68,%rsp
   2f844:	48 8d 47 10          	lea    0x10(%rdi),%rax
   2f848:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   2f84d:	48 83 c7 14          	add    $0x14,%rdi
   2f851:	48 8d 0d 68 59 00 00 	lea    0x5968(%rip),%rcx        # 351c0 <<&T as core::fmt::Display>::fmt>
   2f858:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   2f85d:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2f862:	48 8d 05 c7 53 00 00 	lea    0x53c7(%rip),%rax        # 34c30 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt>
   2f869:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   2f86e:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
   2f873:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   2f878:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
   2f87c:	48 8b 76 28          	mov    0x28(%rsi),%rsi
   2f880:	48 8d 05 21 59 01 00 	lea    0x15921(%rip),%rax        # 451a8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1c70>
   2f887:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   2f88c:	48 c7 44 24 40 03 00 	movq   $0x3,0x40(%rsp)
   2f893:	00 00 
   2f895:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
   2f89c:	00 00 
   2f89e:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   2f8a3:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   2f8a8:	48 c7 44 24 60 03 00 	movq   $0x3,0x60(%rsp)
   2f8af:	00 00 
   2f8b1:	48 8d 54 24 38       	lea    0x38(%rsp),%rdx
   2f8b6:	ff 15 3c 65 01 00    	callq  *0x1653c(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x470>
   2f8bc:	48 83 c4 68          	add    $0x68,%rsp
   2f8c0:	c3                   	retq   
   2f8c1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2f8c8:	00 00 00 
   2f8cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000002f8d0 <core::panicking::panic>:
   2f8d0:	48 83 ec 48          	sub    $0x48,%rsp
   2f8d4:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   2f8d9:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   2f8de:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   2f8e3:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2f8e8:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
   2f8ef:	00 00 
   2f8f1:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   2f8f8:	00 00 
   2f8fa:	48 8d 05 2f a5 00 00 	lea    0xa52f(%rip),%rax        # 39e30 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x2e0>
   2f901:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   2f906:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   2f90d:	00 00 
   2f90f:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   2f914:	48 89 d6             	mov    %rdx,%rsi
   2f917:	ff 15 2b 63 01 00    	callq  *0x1632b(%rip)        # 45c48 <_GLOBAL_OFFSET_TABLE_+0x2c0>
   2f91d:	0f 0b                	ud2    
   2f91f:	90                   	nop

000000000002f920 <core::panicking::panic_bounds_check>:
   2f920:	48 83 ec 68          	sub    $0x68,%rsp
   2f924:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   2f929:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   2f92e:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   2f933:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2f938:	48 8d 05 21 54 00 00 	lea    0x5421(%rip),%rax        # 34d60 <core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt>
   2f93f:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   2f944:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
   2f949:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   2f94e:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   2f953:	48 8d 05 7e 58 01 00 	lea    0x1587e(%rip),%rax        # 451d8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1ca0>
   2f95a:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   2f95f:	48 c7 44 24 40 02 00 	movq   $0x2,0x40(%rsp)
   2f966:	00 00 
   2f968:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
   2f96f:	00 00 
   2f971:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
   2f976:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   2f97b:	48 c7 44 24 60 02 00 	movq   $0x2,0x60(%rsp)
   2f982:	00 00 
   2f984:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
   2f989:	48 89 d6             	mov    %rdx,%rsi
   2f98c:	ff 15 b6 62 01 00    	callq  *0x162b6(%rip)        # 45c48 <_GLOBAL_OFFSET_TABLE_+0x2c0>
   2f992:	0f 0b                	ud2    
   2f994:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2f99b:	00 00 00 
   2f99e:	66 90                	xchg   %ax,%ax

000000000002f9a0 <core::panicking::panic_fmt>:
   2f9a0:	48 83 ec 28          	sub    $0x28,%rsp
   2f9a4:	48 8d 05 85 a4 00 00 	lea    0xa485(%rip),%rax        # 39e30 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x2e0>
   2f9ab:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   2f9b0:	48 8d 05 d1 57 01 00 	lea    0x157d1(%rip),%rax        # 45188 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1c50>
   2f9b7:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   2f9bc:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
   2f9c1:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
   2f9c6:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   2f9cb:	ff 15 df 61 01 00    	callq  *0x161df(%rip)        # 45bb0 <_GLOBAL_OFFSET_TABLE_+0x228>
   2f9d1:	0f 0b                	ud2    
   2f9d3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2f9da:	00 00 00 
   2f9dd:	0f 1f 00             	nopl   (%rax)

000000000002f9e0 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str>:
   2f9e0:	41 57                	push   %r15
   2f9e2:	41 56                	push   %r14
   2f9e4:	41 55                	push   %r13
   2f9e6:	41 54                	push   %r12
   2f9e8:	53                   	push   %rbx
   2f9e9:	48 85 d2             	test   %rdx,%rdx
   2f9ec:	0f 84 a0 02 00 00    	je     2fc92 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x2b2>
   2f9f2:	49 89 d5             	mov    %rdx,%r13
   2f9f5:	49 89 f6             	mov    %rsi,%r14
   2f9f8:	49 89 ff             	mov    %rdi,%r15
   2f9fb:	66 0f 6f 15 2d a0 00 	movdqa 0xa02d(%rip),%xmm2        # 39a30 <str.6+0x2710>
   2fa02:	00 
   2fa03:	66 0f 6f 1d 35 a0 00 	movdqa 0xa035(%rip),%xmm3        # 39a40 <str.6+0x2720>
   2fa0a:	00 
   2fa0b:	66 0f 6f 25 3d a0 00 	movdqa 0xa03d(%rip),%xmm4        # 39a50 <str.6+0x2730>
   2fa12:	00 
   2fa13:	66 0f ef ed          	pxor   %xmm5,%xmm5
   2fa17:	4c 8d 25 46 a1 00 00 	lea    0xa146(%rip),%r12        # 39b64 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x14>
   2fa1e:	eb 39                	jmp    2fa59 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x79>
   2fa20:	4c 89 f6             	mov    %r14,%rsi
   2fa23:	48 89 da             	mov    %rbx,%rdx
   2fa26:	ff 51 18             	callq  *0x18(%rcx)
   2fa29:	84 c0                	test   %al,%al
   2fa2b:	0f 85 65 02 00 00    	jne    2fc96 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x2b6>
   2fa31:	49 01 de             	add    %rbx,%r14
   2fa34:	49 29 dd             	sub    %rbx,%r13
   2fa37:	66 0f 6f 15 f1 9f 00 	movdqa 0x9ff1(%rip),%xmm2        # 39a30 <str.6+0x2710>
   2fa3e:	00 
   2fa3f:	66 0f 6f 1d f9 9f 00 	movdqa 0x9ff9(%rip),%xmm3        # 39a40 <str.6+0x2720>
   2fa46:	00 
   2fa47:	66 0f 6f 25 01 a0 00 	movdqa 0xa001(%rip),%xmm4        # 39a50 <str.6+0x2730>
   2fa4e:	00 
   2fa4f:	66 0f ef ed          	pxor   %xmm5,%xmm5
   2fa53:	0f 84 39 02 00 00    	je     2fc92 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x2b2>
   2fa59:	49 8b 47 10          	mov    0x10(%r15),%rax
   2fa5d:	80 38 00             	cmpb   $0x0,(%rax)
   2fa60:	74 36                	je     2fa98 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0xb8>
   2fa62:	49 8b 3f             	mov    (%r15),%rdi
   2fa65:	49 8b 47 08          	mov    0x8(%r15),%rax
   2fa69:	ba 04 00 00 00       	mov    $0x4,%edx
   2fa6e:	4c 89 e6             	mov    %r12,%rsi
   2fa71:	ff 50 18             	callq  *0x18(%rax)
   2fa74:	66 0f ef ed          	pxor   %xmm5,%xmm5
   2fa78:	66 0f 6f 25 d0 9f 00 	movdqa 0x9fd0(%rip),%xmm4        # 39a50 <str.6+0x2730>
   2fa7f:	00 
   2fa80:	66 0f 6f 1d b8 9f 00 	movdqa 0x9fb8(%rip),%xmm3        # 39a40 <str.6+0x2720>
   2fa87:	00 
   2fa88:	66 0f 6f 15 a0 9f 00 	movdqa 0x9fa0(%rip),%xmm2        # 39a30 <str.6+0x2710>
   2fa8f:	00 
   2fa90:	84 c0                	test   %al,%al
   2fa92:	0f 85 fe 01 00 00    	jne    2fc96 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x2b6>
   2fa98:	4c 89 ee             	mov    %r13,%rsi
   2fa9b:	31 db                	xor    %ebx,%ebx
   2fa9d:	eb 0d                	jmp    2faac <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0xcc>
   2fa9f:	90                   	nop
   2faa0:	4c 89 ee             	mov    %r13,%rsi
   2faa3:	48 29 de             	sub    %rbx,%rsi
   2faa6:	0f 82 a4 01 00 00    	jb     2fc50 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x270>
   2faac:	49 8d 04 1e          	lea    (%r14,%rbx,1),%rax
   2fab0:	48 83 fe 10          	cmp    $0x10,%rsi
   2fab4:	73 3a                	jae    2faf0 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x110>
   2fab6:	48 85 f6             	test   %rsi,%rsi
   2fab9:	0f 84 91 01 00 00    	je     2fc50 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x270>
   2fabf:	4c 89 ea             	mov    %r13,%rdx
   2fac2:	48 29 da             	sub    %rbx,%rdx
   2fac5:	31 c9                	xor    %ecx,%ecx
   2fac7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2face:	00 00 
   2fad0:	80 3c 08 0a          	cmpb   $0xa,(%rax,%rcx,1)
   2fad4:	0f 84 d0 00 00 00    	je     2fbaa <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x1ca>
   2fada:	48 83 c1 01          	add    $0x1,%rcx
   2fade:	48 39 ca             	cmp    %rcx,%rdx
   2fae1:	75 ed                	jne    2fad0 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0xf0>
   2fae3:	e9 68 01 00 00       	jmpq   2fc50 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x270>
   2fae8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2faef:	00 
   2faf0:	89 c7                	mov    %eax,%edi
   2faf2:	f7 df                	neg    %edi
   2faf4:	48 83 e7 07          	and    $0x7,%rdi
   2faf8:	74 26                	je     2fb20 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x140>
   2fafa:	48 39 f7             	cmp    %rsi,%rdi
   2fafd:	48 0f 47 fe          	cmova  %rsi,%rdi
   2fb01:	48 85 ff             	test   %rdi,%rdi
   2fb04:	74 1a                	je     2fb20 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x140>
   2fb06:	80 38 0a             	cmpb   $0xa,(%rax)
   2fb09:	0f 85 bf 00 00 00    	jne    2fbce <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x1ee>
   2fb0f:	31 c9                	xor    %ecx,%ecx
   2fb11:	e9 94 00 00 00       	jmpq   2fbaa <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x1ca>
   2fb16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2fb1d:	00 00 00 
   2fb20:	48 8d 4e f0          	lea    -0x10(%rsi),%rcx
   2fb24:	31 ff                	xor    %edi,%edi
   2fb26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2fb2d:	00 00 00 
   2fb30:	f3 0f 6f 04 38       	movdqu (%rax,%rdi,1),%xmm0
   2fb35:	66 0f 6f c8          	movdqa %xmm0,%xmm1
   2fb39:	66 0f ef ca          	pxor   %xmm2,%xmm1
   2fb3d:	66 0f d4 cb          	paddq  %xmm3,%xmm1
   2fb41:	66 0f df c1          	pandn  %xmm1,%xmm0
   2fb45:	66 0f db c4          	pand   %xmm4,%xmm0
   2fb49:	66 0f 74 c5          	pcmpeqb %xmm5,%xmm0
   2fb4d:	66 0f d7 d0          	pmovmskb %xmm0,%edx
   2fb51:	81 fa ff ff 00 00    	cmp    $0xffff,%edx
   2fb57:	75 09                	jne    2fb62 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x182>
   2fb59:	48 83 c7 10          	add    $0x10,%rdi
   2fb5d:	48 39 cf             	cmp    %rcx,%rdi
   2fb60:	76 ce                	jbe    2fb30 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x150>
   2fb62:	48 39 f7             	cmp    %rsi,%rdi
   2fb65:	0f 87 37 01 00 00    	ja     2fca2 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x2c2>
   2fb6b:	48 39 f7             	cmp    %rsi,%rdi
   2fb6e:	0f 84 dc 00 00 00    	je     2fc50 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x270>
   2fb74:	48 8d 14 1f          	lea    (%rdi,%rbx,1),%rdx
   2fb78:	49 8d 04 16          	lea    (%r14,%rdx,1),%rax
   2fb7c:	4c 89 e9             	mov    %r13,%rcx
   2fb7f:	48 29 d1             	sub    %rdx,%rcx
   2fb82:	31 d2                	xor    %edx,%edx
   2fb84:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2fb8b:	00 00 00 
   2fb8e:	66 90                	xchg   %ax,%ax
   2fb90:	80 3c 10 0a          	cmpb   $0xa,(%rax,%rdx,1)
   2fb94:	74 0e                	je     2fba4 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x1c4>
   2fb96:	48 83 c2 01          	add    $0x1,%rdx
   2fb9a:	48 39 d1             	cmp    %rdx,%rcx
   2fb9d:	75 f1                	jne    2fb90 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x1b0>
   2fb9f:	e9 ac 00 00 00       	jmpq   2fc50 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x270>
   2fba4:	48 01 d7             	add    %rdx,%rdi
   2fba7:	48 89 f9             	mov    %rdi,%rcx
   2fbaa:	48 8d 04 19          	lea    (%rcx,%rbx,1),%rax
   2fbae:	48 01 cb             	add    %rcx,%rbx
   2fbb1:	48 83 c3 01          	add    $0x1,%rbx
   2fbb5:	4c 39 e8             	cmp    %r13,%rax
   2fbb8:	0f 83 e2 fe ff ff    	jae    2faa0 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0xc0>
   2fbbe:	41 80 3c 06 0a       	cmpb   $0xa,(%r14,%rax,1)
   2fbc3:	0f 85 d7 fe ff ff    	jne    2faa0 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0xc0>
   2fbc9:	e9 c0 00 00 00       	jmpq   2fc8e <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x2ae>
   2fbce:	48 83 ff 01          	cmp    $0x1,%rdi
   2fbd2:	75 0f                	jne    2fbe3 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x203>
   2fbd4:	48 8d 4e f0          	lea    -0x10(%rsi),%rcx
   2fbd8:	48 39 cf             	cmp    %rcx,%rdi
   2fbdb:	0f 86 4f ff ff ff    	jbe    2fb30 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x150>
   2fbe1:	eb 88                	jmp    2fb6b <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x18b>
   2fbe3:	b9 01 00 00 00       	mov    $0x1,%ecx
   2fbe8:	80 78 01 0a          	cmpb   $0xa,0x1(%rax)
   2fbec:	74 bc                	je     2fbaa <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x1ca>
   2fbee:	48 83 ff 02          	cmp    $0x2,%rdi
   2fbf2:	74 e0                	je     2fbd4 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x1f4>
   2fbf4:	b9 02 00 00 00       	mov    $0x2,%ecx
   2fbf9:	80 78 02 0a          	cmpb   $0xa,0x2(%rax)
   2fbfd:	74 ab                	je     2fbaa <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x1ca>
   2fbff:	48 83 ff 03          	cmp    $0x3,%rdi
   2fc03:	74 cf                	je     2fbd4 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x1f4>
   2fc05:	b9 03 00 00 00       	mov    $0x3,%ecx
   2fc0a:	80 78 03 0a          	cmpb   $0xa,0x3(%rax)
   2fc0e:	74 9a                	je     2fbaa <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x1ca>
   2fc10:	48 83 ff 04          	cmp    $0x4,%rdi
   2fc14:	74 be                	je     2fbd4 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x1f4>
   2fc16:	b9 04 00 00 00       	mov    $0x4,%ecx
   2fc1b:	80 78 04 0a          	cmpb   $0xa,0x4(%rax)
   2fc1f:	74 89                	je     2fbaa <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x1ca>
   2fc21:	48 83 ff 05          	cmp    $0x5,%rdi
   2fc25:	74 ad                	je     2fbd4 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x1f4>
   2fc27:	b9 05 00 00 00       	mov    $0x5,%ecx
   2fc2c:	80 78 05 0a          	cmpb   $0xa,0x5(%rax)
   2fc30:	0f 84 74 ff ff ff    	je     2fbaa <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x1ca>
   2fc36:	48 83 ff 06          	cmp    $0x6,%rdi
   2fc3a:	74 98                	je     2fbd4 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x1f4>
   2fc3c:	b9 06 00 00 00       	mov    $0x6,%ecx
   2fc41:	80 78 06 0a          	cmpb   $0xa,0x6(%rax)
   2fc45:	0f 84 5f ff ff ff    	je     2fbaa <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x1ca>
   2fc4b:	eb 87                	jmp    2fbd4 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x1f4>
   2fc4d:	0f 1f 00             	nopl   (%rax)
   2fc50:	31 c0                	xor    %eax,%eax
   2fc52:	4c 89 eb             	mov    %r13,%rbx
   2fc55:	49 8b 4f 10          	mov    0x10(%r15),%rcx
   2fc59:	88 01                	mov    %al,(%rcx)
   2fc5b:	49 8b 3f             	mov    (%r15),%rdi
   2fc5e:	49 8b 4f 08          	mov    0x8(%r15),%rcx
   2fc62:	49 39 dd             	cmp    %rbx,%r13
   2fc65:	0f 84 b5 fd ff ff    	je     2fa20 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x40>
   2fc6b:	76 44                	jbe    2fcb1 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x2d1>
   2fc6d:	41 80 3c 1e bf       	cmpb   $0xbf,(%r14,%rbx,1)
   2fc72:	7e 3d                	jle    2fcb1 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x2d1>
   2fc74:	4c 89 f6             	mov    %r14,%rsi
   2fc77:	48 89 da             	mov    %rbx,%rdx
   2fc7a:	ff 51 18             	callq  *0x18(%rcx)
   2fc7d:	84 c0                	test   %al,%al
   2fc7f:	75 15                	jne    2fc96 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x2b6>
   2fc81:	41 80 3c 1e bf       	cmpb   $0xbf,(%r14,%rbx,1)
   2fc86:	0f 8f a5 fd ff ff    	jg     2fa31 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x51>
   2fc8c:	eb 3d                	jmp    2fccb <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x2eb>
   2fc8e:	b0 01                	mov    $0x1,%al
   2fc90:	eb c3                	jmp    2fc55 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x275>
   2fc92:	31 c0                	xor    %eax,%eax
   2fc94:	eb 02                	jmp    2fc98 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x2b8>
   2fc96:	b0 01                	mov    $0x1,%al
   2fc98:	5b                   	pop    %rbx
   2fc99:	41 5c                	pop    %r12
   2fc9b:	41 5d                	pop    %r13
   2fc9d:	41 5e                	pop    %r14
   2fc9f:	41 5f                	pop    %r15
   2fca1:	c3                   	retq   
   2fca2:	48 8d 15 8f 56 01 00 	lea    0x1568f(%rip),%rdx        # 45338 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1e00>
   2fca9:	ff 15 41 61 01 00    	callq  *0x16141(%rip)        # 45df0 <_GLOBAL_OFFSET_TABLE_+0x468>
   2fcaf:	0f 0b                	ud2    
   2fcb1:	4c 8d 05 70 55 01 00 	lea    0x15570(%rip),%r8        # 45228 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1cf0>
   2fcb8:	4c 89 f7             	mov    %r14,%rdi
   2fcbb:	4c 89 ee             	mov    %r13,%rsi
   2fcbe:	31 d2                	xor    %edx,%edx
   2fcc0:	48 89 d9             	mov    %rbx,%rcx
   2fcc3:	ff 15 67 61 01 00    	callq  *0x16167(%rip)        # 45e30 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   2fcc9:	0f 0b                	ud2    
   2fccb:	4c 8d 05 6e 55 01 00 	lea    0x1556e(%rip),%r8        # 45240 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1d08>
   2fcd2:	4c 89 f7             	mov    %r14,%rdi
   2fcd5:	4c 89 ee             	mov    %r13,%rsi
   2fcd8:	48 89 da             	mov    %rbx,%rdx
   2fcdb:	4c 89 e9             	mov    %r13,%rcx
   2fcde:	ff 15 4c 61 01 00    	callq  *0x1614c(%rip)        # 45e30 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   2fce4:	0f 0b                	ud2    
   2fce6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2fced:	00 00 00 

000000000002fcf0 <core::fmt::builders::DebugStruct::field>:
   2fcf0:	55                   	push   %rbp
   2fcf1:	41 57                	push   %r15
   2fcf3:	41 56                	push   %r14
   2fcf5:	41 55                	push   %r13
   2fcf7:	41 54                	push   %r12
   2fcf9:	53                   	push   %rbx
   2fcfa:	48 83 ec 68          	sub    $0x68,%rsp
   2fcfe:	48 89 fb             	mov    %rdi,%rbx
   2fd01:	41 b5 01             	mov    $0x1,%r13b
   2fd04:	80 7f 08 00          	cmpb   $0x0,0x8(%rdi)
   2fd08:	74 1a                	je     2fd24 <core::fmt::builders::DebugStruct::field+0x34>
   2fd0a:	44 88 6b 08          	mov    %r13b,0x8(%rbx)
   2fd0e:	c6 43 09 01          	movb   $0x1,0x9(%rbx)
   2fd12:	48 89 d8             	mov    %rbx,%rax
   2fd15:	48 83 c4 68          	add    $0x68,%rsp
   2fd19:	5b                   	pop    %rbx
   2fd1a:	41 5c                	pop    %r12
   2fd1c:	41 5d                	pop    %r13
   2fd1e:	41 5e                	pop    %r14
   2fd20:	41 5f                	pop    %r15
   2fd22:	5d                   	pop    %rbp
   2fd23:	c3                   	retq   
   2fd24:	4d 89 c6             	mov    %r8,%r14
   2fd27:	49 89 cf             	mov    %rcx,%r15
   2fd2a:	49 89 d4             	mov    %rdx,%r12
   2fd2d:	48 89 f5             	mov    %rsi,%rbp
   2fd30:	48 8b 03             	mov    (%rbx),%rax
   2fd33:	8b 50 30             	mov    0x30(%rax),%edx
   2fd36:	8a 4b 09             	mov    0x9(%rbx),%cl
   2fd39:	f6 c2 04             	test   $0x4,%dl
   2fd3c:	75 75                	jne    2fdb3 <core::fmt::builders::DebugStruct::field+0xc3>
   2fd3e:	31 d2                	xor    %edx,%edx
   2fd40:	84 c9                	test   %cl,%cl
   2fd42:	48 8d 0d 0b a2 00 00 	lea    0xa20b(%rip),%rcx        # 39f54 <str.1+0x114>
   2fd49:	48 8d 35 02 a2 00 00 	lea    0xa202(%rip),%rsi        # 39f52 <str.1+0x112>
   2fd50:	48 0f 44 f1          	cmove  %rcx,%rsi
   2fd54:	0f 94 c2             	sete   %dl
   2fd57:	48 83 ca 02          	or     $0x2,%rdx
   2fd5b:	48 8b 78 20          	mov    0x20(%rax),%rdi
   2fd5f:	48 8b 40 28          	mov    0x28(%rax),%rax
   2fd63:	ff 50 18             	callq  *0x18(%rax)
   2fd66:	84 c0                	test   %al,%al
   2fd68:	75 a0                	jne    2fd0a <core::fmt::builders::DebugStruct::field+0x1a>
   2fd6a:	48 8b 03             	mov    (%rbx),%rax
   2fd6d:	48 8b 78 20          	mov    0x20(%rax),%rdi
   2fd71:	48 8b 40 28          	mov    0x28(%rax),%rax
   2fd75:	48 89 ee             	mov    %rbp,%rsi
   2fd78:	4c 89 e2             	mov    %r12,%rdx
   2fd7b:	ff 50 18             	callq  *0x18(%rax)
   2fd7e:	84 c0                	test   %al,%al
   2fd80:	75 88                	jne    2fd0a <core::fmt::builders::DebugStruct::field+0x1a>
   2fd82:	48 8b 03             	mov    (%rbx),%rax
   2fd85:	48 8b 78 20          	mov    0x20(%rax),%rdi
   2fd89:	48 8b 40 28          	mov    0x28(%rax),%rax
   2fd8d:	48 8d 35 64 a1 00 00 	lea    0xa164(%rip),%rsi        # 39ef8 <str.1+0xb8>
   2fd94:	ba 02 00 00 00       	mov    $0x2,%edx
   2fd99:	ff 50 18             	callq  *0x18(%rax)
   2fd9c:	84 c0                	test   %al,%al
   2fd9e:	0f 85 66 ff ff ff    	jne    2fd0a <core::fmt::builders::DebugStruct::field+0x1a>
   2fda4:	48 8b 33             	mov    (%rbx),%rsi
   2fda7:	4c 89 ff             	mov    %r15,%rdi
   2fdaa:	41 ff 56 18          	callq  *0x18(%r14)
   2fdae:	e9 dc 00 00 00       	jmpq   2fe8f <core::fmt::builders::DebugStruct::field+0x19f>
   2fdb3:	84 c9                	test   %cl,%cl
   2fdb5:	75 25                	jne    2fddc <core::fmt::builders::DebugStruct::field+0xec>
   2fdb7:	48 8b 78 20          	mov    0x20(%rax),%rdi
   2fdbb:	48 8b 40 28          	mov    0x28(%rax),%rax
   2fdbf:	48 8d 35 87 a1 00 00 	lea    0xa187(%rip),%rsi        # 39f4d <str.1+0x10d>
   2fdc6:	ba 03 00 00 00       	mov    $0x3,%edx
   2fdcb:	ff 50 18             	callq  *0x18(%rax)
   2fdce:	84 c0                	test   %al,%al
   2fdd0:	0f 85 34 ff ff ff    	jne    2fd0a <core::fmt::builders::DebugStruct::field+0x1a>
   2fdd6:	48 8b 03             	mov    (%rbx),%rax
   2fdd9:	8b 50 30             	mov    0x30(%rax),%edx
   2fddc:	c6 44 24 0f 01       	movb   $0x1,0xf(%rsp)
   2fde1:	0f 10 40 20          	movups 0x20(%rax),%xmm0
   2fde5:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   2fdea:	48 8d 4c 24 0f       	lea    0xf(%rsp),%rcx
   2fdef:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   2fdf4:	8b 48 34             	mov    0x34(%rax),%ecx
   2fdf7:	40 8a 70 38          	mov    0x38(%rax),%sil
   2fdfb:	0f 10 00             	movups (%rax),%xmm0
   2fdfe:	0f 10 48 10          	movups 0x10(%rax),%xmm1
   2fe02:	89 54 24 58          	mov    %edx,0x58(%rsp)
   2fe06:	89 4c 24 5c          	mov    %ecx,0x5c(%rsp)
   2fe0a:	40 88 74 24 60       	mov    %sil,0x60(%rsp)
   2fe0f:	0f 11 44 24 28       	movups %xmm0,0x28(%rsp)
   2fe14:	0f 11 4c 24 38       	movups %xmm1,0x38(%rsp)
   2fe19:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   2fe1e:	48 89 7c 24 48       	mov    %rdi,0x48(%rsp)
   2fe23:	48 8d 05 ce 53 01 00 	lea    0x153ce(%rip),%rax        # 451f8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1cc0>
   2fe2a:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   2fe2f:	48 89 ee             	mov    %rbp,%rsi
   2fe32:	4c 89 e2             	mov    %r12,%rdx
   2fe35:	ff 15 ed 5e 01 00    	callq  *0x15eed(%rip)        # 45d28 <_GLOBAL_OFFSET_TABLE_+0x3a0>
   2fe3b:	84 c0                	test   %al,%al
   2fe3d:	0f 85 c7 fe ff ff    	jne    2fd0a <core::fmt::builders::DebugStruct::field+0x1a>
   2fe43:	48 8d 35 ae a0 00 00 	lea    0xa0ae(%rip),%rsi        # 39ef8 <str.1+0xb8>
   2fe4a:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   2fe4f:	ba 02 00 00 00       	mov    $0x2,%edx
   2fe54:	ff 15 ce 5e 01 00    	callq  *0x15ece(%rip)        # 45d28 <_GLOBAL_OFFSET_TABLE_+0x3a0>
   2fe5a:	84 c0                	test   %al,%al
   2fe5c:	0f 85 a8 fe ff ff    	jne    2fd0a <core::fmt::builders::DebugStruct::field+0x1a>
   2fe62:	48 8d 74 24 28       	lea    0x28(%rsp),%rsi
   2fe67:	4c 89 ff             	mov    %r15,%rdi
   2fe6a:	41 ff 56 18          	callq  *0x18(%r14)
   2fe6e:	84 c0                	test   %al,%al
   2fe70:	0f 85 94 fe ff ff    	jne    2fd0a <core::fmt::builders::DebugStruct::field+0x1a>
   2fe76:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
   2fe7b:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   2fe80:	48 8d 35 c9 a0 00 00 	lea    0xa0c9(%rip),%rsi        # 39f50 <str.1+0x110>
   2fe87:	ba 02 00 00 00       	mov    $0x2,%edx
   2fe8c:	ff 50 18             	callq  *0x18(%rax)
   2fe8f:	41 89 c5             	mov    %eax,%r13d
   2fe92:	e9 73 fe ff ff       	jmpq   2fd0a <core::fmt::builders::DebugStruct::field+0x1a>
   2fe97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2fe9e:	00 00 

000000000002fea0 <core::fmt::builders::DebugStruct::finish>:
   2fea0:	53                   	push   %rbx
   2fea1:	80 7f 09 00          	cmpb   $0x0,0x9(%rdi)
   2fea5:	8a 47 08             	mov    0x8(%rdi),%al
   2fea8:	74 3d                	je     2fee7 <core::fmt::builders::DebugStruct::finish+0x47>
   2feaa:	48 89 fb             	mov    %rdi,%rbx
   2fead:	84 c0                	test   %al,%al
   2feaf:	b0 01                	mov    $0x1,%al
   2feb1:	75 31                	jne    2fee4 <core::fmt::builders::DebugStruct::finish+0x44>
   2feb3:	48 8b 03             	mov    (%rbx),%rax
   2feb6:	f6 40 30 04          	testb  $0x4,0x30(%rax)
   2feba:	48 8b 78 20          	mov    0x20(%rax),%rdi
   2febe:	48 8b 40 28          	mov    0x28(%rax),%rax
   2fec2:	48 8b 40 18          	mov    0x18(%rax),%rax
   2fec6:	75 0e                	jne    2fed6 <core::fmt::builders::DebugStruct::finish+0x36>
   2fec8:	48 8d 35 89 a0 00 00 	lea    0xa089(%rip),%rsi        # 39f58 <str.1+0x118>
   2fecf:	ba 02 00 00 00       	mov    $0x2,%edx
   2fed4:	eb 0c                	jmp    2fee2 <core::fmt::builders::DebugStruct::finish+0x42>
   2fed6:	48 8d 35 7a a0 00 00 	lea    0xa07a(%rip),%rsi        # 39f57 <str.1+0x117>
   2fedd:	ba 01 00 00 00       	mov    $0x1,%edx
   2fee2:	ff d0                	callq  *%rax
   2fee4:	88 43 08             	mov    %al,0x8(%rbx)
   2fee7:	5b                   	pop    %rbx
   2fee8:	c3                   	retq   
   2fee9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000002fef0 <core::fmt::builders::DebugTuple::field>:
   2fef0:	55                   	push   %rbp
   2fef1:	41 57                	push   %r15
   2fef3:	41 56                	push   %r14
   2fef5:	53                   	push   %rbx
   2fef6:	48 83 ec 68          	sub    $0x68,%rsp
   2fefa:	48 89 fb             	mov    %rdi,%rbx
   2fefd:	40 b5 01             	mov    $0x1,%bpl
   2ff00:	80 7f 10 00          	cmpb   $0x0,0x10(%rdi)
   2ff04:	0f 85 01 01 00 00    	jne    3000b <core::fmt::builders::DebugTuple::field+0x11b>
   2ff0a:	49 89 d6             	mov    %rdx,%r14
   2ff0d:	49 89 f7             	mov    %rsi,%r15
   2ff10:	48 8b 03             	mov    (%rbx),%rax
   2ff13:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   2ff17:	8b 48 30             	mov    0x30(%rax),%ecx
   2ff1a:	f6 c1 04             	test   $0x4,%cl
   2ff1d:	75 44                	jne    2ff63 <core::fmt::builders::DebugTuple::field+0x73>
   2ff1f:	31 c9                	xor    %ecx,%ecx
   2ff21:	48 85 d2             	test   %rdx,%rdx
   2ff24:	0f 94 c1             	sete   %cl
   2ff27:	48 8d 15 2e a0 00 00 	lea    0xa02e(%rip),%rdx        # 39f5c <str.1+0x11c>
   2ff2e:	48 8d 35 1d a0 00 00 	lea    0xa01d(%rip),%rsi        # 39f52 <str.1+0x112>
   2ff35:	48 0f 44 f2          	cmove  %rdx,%rsi
   2ff39:	ba 02 00 00 00       	mov    $0x2,%edx
   2ff3e:	48 29 ca             	sub    %rcx,%rdx
   2ff41:	48 8b 78 20          	mov    0x20(%rax),%rdi
   2ff45:	48 8b 40 28          	mov    0x28(%rax),%rax
   2ff49:	ff 50 18             	callq  *0x18(%rax)
   2ff4c:	84 c0                	test   %al,%al
   2ff4e:	0f 85 b7 00 00 00    	jne    3000b <core::fmt::builders::DebugTuple::field+0x11b>
   2ff54:	48 8b 33             	mov    (%rbx),%rsi
   2ff57:	4c 89 ff             	mov    %r15,%rdi
   2ff5a:	41 ff 56 18          	callq  *0x18(%r14)
   2ff5e:	e9 a6 00 00 00       	jmpq   30009 <core::fmt::builders::DebugTuple::field+0x119>
   2ff63:	48 85 d2             	test   %rdx,%rdx
   2ff66:	75 25                	jne    2ff8d <core::fmt::builders::DebugTuple::field+0x9d>
   2ff68:	48 8b 78 20          	mov    0x20(%rax),%rdi
   2ff6c:	48 8b 40 28          	mov    0x28(%rax),%rax
   2ff70:	48 8d 35 e3 9f 00 00 	lea    0x9fe3(%rip),%rsi        # 39f5a <str.1+0x11a>
   2ff77:	ba 02 00 00 00       	mov    $0x2,%edx
   2ff7c:	ff 50 18             	callq  *0x18(%rax)
   2ff7f:	84 c0                	test   %al,%al
   2ff81:	0f 85 84 00 00 00    	jne    3000b <core::fmt::builders::DebugTuple::field+0x11b>
   2ff87:	48 8b 03             	mov    (%rbx),%rax
   2ff8a:	8b 48 30             	mov    0x30(%rax),%ecx
   2ff8d:	c6 44 24 0f 01       	movb   $0x1,0xf(%rsp)
   2ff92:	0f 10 40 20          	movups 0x20(%rax),%xmm0
   2ff96:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   2ff9b:	48 8d 54 24 0f       	lea    0xf(%rsp),%rdx
   2ffa0:	48 89 54 24 60       	mov    %rdx,0x60(%rsp)
   2ffa5:	8b 50 34             	mov    0x34(%rax),%edx
   2ffa8:	40 8a 70 38          	mov    0x38(%rax),%sil
   2ffac:	0f 10 00             	movups (%rax),%xmm0
   2ffaf:	0f 10 48 10          	movups 0x10(%rax),%xmm1
   2ffb3:	89 4c 24 40          	mov    %ecx,0x40(%rsp)
   2ffb7:	89 54 24 44          	mov    %edx,0x44(%rsp)
   2ffbb:	40 88 74 24 48       	mov    %sil,0x48(%rsp)
   2ffc0:	0f 11 44 24 10       	movups %xmm0,0x10(%rsp)
   2ffc5:	0f 11 4c 24 20       	movups %xmm1,0x20(%rsp)
   2ffca:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
   2ffcf:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   2ffd4:	48 8d 05 1d 52 01 00 	lea    0x1521d(%rip),%rax        # 451f8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1cc0>
   2ffdb:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   2ffe0:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   2ffe5:	4c 89 ff             	mov    %r15,%rdi
   2ffe8:	41 ff 56 18          	callq  *0x18(%r14)
   2ffec:	84 c0                	test   %al,%al
   2ffee:	75 1b                	jne    3000b <core::fmt::builders::DebugTuple::field+0x11b>
   2fff0:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   2fff5:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   2fffa:	48 8d 35 4f 9f 00 00 	lea    0x9f4f(%rip),%rsi        # 39f50 <str.1+0x110>
   30001:	ba 02 00 00 00       	mov    $0x2,%edx
   30006:	ff 50 18             	callq  *0x18(%rax)
   30009:	89 c5                	mov    %eax,%ebp
   3000b:	40 88 6b 10          	mov    %bpl,0x10(%rbx)
   3000f:	48 83 43 08 01       	addq   $0x1,0x8(%rbx)
   30014:	48 89 d8             	mov    %rbx,%rax
   30017:	48 83 c4 68          	add    $0x68,%rsp
   3001b:	5b                   	pop    %rbx
   3001c:	41 5e                	pop    %r14
   3001e:	41 5f                	pop    %r15
   30020:	5d                   	pop    %rbp
   30021:	c3                   	retq   
   30022:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   30029:	00 00 00 
   3002c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000030030 <core::fmt::builders::DebugTuple::finish>:
   30030:	55                   	push   %rbp
   30031:	53                   	push   %rbx
   30032:	50                   	push   %rax
   30033:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
   30037:	8a 47 10             	mov    0x10(%rdi),%al
   3003a:	48 85 c9             	test   %rcx,%rcx
   3003d:	74 5c                	je     3009b <core::fmt::builders::DebugTuple::finish+0x6b>
   3003f:	48 89 fb             	mov    %rdi,%rbx
   30042:	40 b5 01             	mov    $0x1,%bpl
   30045:	84 c0                	test   %al,%al
   30047:	75 4c                	jne    30095 <core::fmt::builders::DebugTuple::finish+0x65>
   30049:	48 83 f9 01          	cmp    $0x1,%rcx
   3004d:	75 2a                	jne    30079 <core::fmt::builders::DebugTuple::finish+0x49>
   3004f:	80 7b 11 00          	cmpb   $0x0,0x11(%rbx)
   30053:	74 24                	je     30079 <core::fmt::builders::DebugTuple::finish+0x49>
   30055:	48 8b 03             	mov    (%rbx),%rax
   30058:	f6 40 30 04          	testb  $0x4,0x30(%rax)
   3005c:	75 1b                	jne    30079 <core::fmt::builders::DebugTuple::finish+0x49>
   3005e:	48 8b 78 20          	mov    0x20(%rax),%rdi
   30062:	48 8b 40 28          	mov    0x28(%rax),%rax
   30066:	48 8d 35 f0 9e 00 00 	lea    0x9ef0(%rip),%rsi        # 39f5d <str.1+0x11d>
   3006d:	ba 01 00 00 00       	mov    $0x1,%edx
   30072:	ff 50 18             	callq  *0x18(%rax)
   30075:	84 c0                	test   %al,%al
   30077:	75 1c                	jne    30095 <core::fmt::builders::DebugTuple::finish+0x65>
   30079:	48 8b 03             	mov    (%rbx),%rax
   3007c:	48 8b 78 20          	mov    0x20(%rax),%rdi
   30080:	48 8b 40 28          	mov    0x28(%rax),%rax
   30084:	48 8d 35 d3 9e 00 00 	lea    0x9ed3(%rip),%rsi        # 39f5e <str.1+0x11e>
   3008b:	ba 01 00 00 00       	mov    $0x1,%edx
   30090:	ff 50 18             	callq  *0x18(%rax)
   30093:	89 c5                	mov    %eax,%ebp
   30095:	40 88 6b 10          	mov    %bpl,0x10(%rbx)
   30099:	89 e8                	mov    %ebp,%eax
   3009b:	48 83 c4 08          	add    $0x8,%rsp
   3009f:	5b                   	pop    %rbx
   300a0:	5d                   	pop    %rbp
   300a1:	c3                   	retq   
   300a2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   300a9:	00 00 00 
   300ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000300b0 <core::fmt::builders::DebugInner::entry>:
   300b0:	55                   	push   %rbp
   300b1:	41 57                	push   %r15
   300b3:	41 56                	push   %r14
   300b5:	53                   	push   %rbx
   300b6:	48 83 ec 68          	sub    $0x68,%rsp
   300ba:	48 89 fb             	mov    %rdi,%rbx
   300bd:	40 b5 01             	mov    $0x1,%bpl
   300c0:	80 7f 08 00          	cmpb   $0x0,0x8(%rdi)
   300c4:	0f 85 ea 00 00 00    	jne    301b4 <core::fmt::builders::DebugInner::entry+0x104>
   300ca:	49 89 d6             	mov    %rdx,%r14
   300cd:	49 89 f7             	mov    %rsi,%r15
   300d0:	48 8b 33             	mov    (%rbx),%rsi
   300d3:	8b 46 30             	mov    0x30(%rsi),%eax
   300d6:	8a 4b 09             	mov    0x9(%rbx),%cl
   300d9:	a8 04                	test   $0x4,%al
   300db:	75 32                	jne    3010f <core::fmt::builders::DebugInner::entry+0x5f>
   300dd:	84 c9                	test   %cl,%cl
   300df:	74 22                	je     30103 <core::fmt::builders::DebugInner::entry+0x53>
   300e1:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
   300e5:	48 8b 46 28          	mov    0x28(%rsi),%rax
   300e9:	48 8d 35 62 9e 00 00 	lea    0x9e62(%rip),%rsi        # 39f52 <str.1+0x112>
   300f0:	ba 02 00 00 00       	mov    $0x2,%edx
   300f5:	ff 50 18             	callq  *0x18(%rax)
   300f8:	84 c0                	test   %al,%al
   300fa:	0f 85 b4 00 00 00    	jne    301b4 <core::fmt::builders::DebugInner::entry+0x104>
   30100:	48 8b 33             	mov    (%rbx),%rsi
   30103:	4c 89 ff             	mov    %r15,%rdi
   30106:	41 ff 56 18          	callq  *0x18(%r14)
   3010a:	e9 a3 00 00 00       	jmpq   301b2 <core::fmt::builders::DebugInner::entry+0x102>
   3010f:	84 c9                	test   %cl,%cl
   30111:	75 25                	jne    30138 <core::fmt::builders::DebugInner::entry+0x88>
   30113:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
   30117:	48 8b 46 28          	mov    0x28(%rsi),%rax
   3011b:	48 8d 35 3d 9e 00 00 	lea    0x9e3d(%rip),%rsi        # 39f5f <str.1+0x11f>
   30122:	ba 01 00 00 00       	mov    $0x1,%edx
   30127:	ff 50 18             	callq  *0x18(%rax)
   3012a:	84 c0                	test   %al,%al
   3012c:	0f 85 82 00 00 00    	jne    301b4 <core::fmt::builders::DebugInner::entry+0x104>
   30132:	48 8b 33             	mov    (%rbx),%rsi
   30135:	8b 46 30             	mov    0x30(%rsi),%eax
   30138:	c6 44 24 0f 01       	movb   $0x1,0xf(%rsp)
   3013d:	0f 10 46 20          	movups 0x20(%rsi),%xmm0
   30141:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   30146:	48 8d 4c 24 0f       	lea    0xf(%rsp),%rcx
   3014b:	48 89 4c 24 60       	mov    %rcx,0x60(%rsp)
   30150:	8b 4e 34             	mov    0x34(%rsi),%ecx
   30153:	8a 56 38             	mov    0x38(%rsi),%dl
   30156:	0f 10 06             	movups (%rsi),%xmm0
   30159:	0f 10 4e 10          	movups 0x10(%rsi),%xmm1
   3015d:	89 44 24 40          	mov    %eax,0x40(%rsp)
   30161:	89 4c 24 44          	mov    %ecx,0x44(%rsp)
   30165:	88 54 24 48          	mov    %dl,0x48(%rsp)
   30169:	0f 11 44 24 10       	movups %xmm0,0x10(%rsp)
   3016e:	0f 11 4c 24 20       	movups %xmm1,0x20(%rsp)
   30173:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
   30178:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   3017d:	48 8d 05 74 50 01 00 	lea    0x15074(%rip),%rax        # 451f8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1cc0>
   30184:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   30189:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   3018e:	4c 89 ff             	mov    %r15,%rdi
   30191:	41 ff 56 18          	callq  *0x18(%r14)
   30195:	84 c0                	test   %al,%al
   30197:	75 1b                	jne    301b4 <core::fmt::builders::DebugInner::entry+0x104>
   30199:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   3019e:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   301a3:	48 8d 35 a6 9d 00 00 	lea    0x9da6(%rip),%rsi        # 39f50 <str.1+0x110>
   301aa:	ba 02 00 00 00       	mov    $0x2,%edx
   301af:	ff 50 18             	callq  *0x18(%rax)
   301b2:	89 c5                	mov    %eax,%ebp
   301b4:	40 88 6b 08          	mov    %bpl,0x8(%rbx)
   301b8:	c6 43 09 01          	movb   $0x1,0x9(%rbx)
   301bc:	48 83 c4 68          	add    $0x68,%rsp
   301c0:	5b                   	pop    %rbx
   301c1:	41 5e                	pop    %r14
   301c3:	41 5f                	pop    %r15
   301c5:	5d                   	pop    %rbp
   301c6:	c3                   	retq   
   301c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   301ce:	00 00 

00000000000301d0 <core::fmt::builders::DebugSet::entry>:
   301d0:	53                   	push   %rbx
   301d1:	48 89 fb             	mov    %rdi,%rbx
   301d4:	e8 d7 fe ff ff       	callq  300b0 <core::fmt::builders::DebugInner::entry>
   301d9:	48 89 d8             	mov    %rbx,%rax
   301dc:	5b                   	pop    %rbx
   301dd:	c3                   	retq   
   301de:	66 90                	xchg   %ax,%ax

00000000000301e0 <core::fmt::builders::DebugList::finish>:
   301e0:	80 7f 08 00          	cmpb   $0x0,0x8(%rdi)
   301e4:	74 03                	je     301e9 <core::fmt::builders::DebugList::finish+0x9>
   301e6:	b0 01                	mov    $0x1,%al
   301e8:	c3                   	retq   
   301e9:	48 8b 07             	mov    (%rdi),%rax
   301ec:	48 8b 78 20          	mov    0x20(%rax),%rdi
   301f0:	48 8b 40 28          	mov    0x28(%rax),%rax
   301f4:	48 8b 40 18          	mov    0x18(%rax),%rax
   301f8:	48 8d 35 62 9d 00 00 	lea    0x9d62(%rip),%rsi        # 39f61 <str.1+0x121>
   301ff:	ba 01 00 00 00       	mov    $0x1,%edx
   30204:	ff e0                	jmpq   *%rax
   30206:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3020d:	00 00 00 

0000000000030210 <core::fmt::num::parse_u64_into>:
   30210:	55                   	push   %rbp
   30211:	41 57                	push   %r15
   30213:	41 56                	push   %r14
   30215:	41 55                	push   %r13
   30217:	41 54                	push   %r12
   30219:	53                   	push   %rbx
   3021a:	50                   	push   %rax
   3021b:	4c 8b 2a             	mov    (%rdx),%r13
   3021e:	49 83 fd 14          	cmp    $0x14,%r13
   30222:	0f 8c d9 03 00 00    	jl     30601 <core::fmt::num::parse_u64_into+0x3f1>
   30228:	49 89 d1             	mov    %rdx,%r9
   3022b:	48 b8 ff ff c0 6f f2 	movabs $0x2386f26fc0ffff,%rax
   30232:	86 23 00 
   30235:	48 39 c7             	cmp    %rax,%rdi
   30238:	0f 86 ce 01 00 00    	jbe    3040c <core::fmt::num::parse_u64_into+0x1fc>
   3023e:	48 b9 57 78 13 b1 2f 	movabs $0x39a5652fb1137857,%rcx
   30245:	65 a5 39 
   30248:	48 89 f8             	mov    %rdi,%rax
   3024b:	48 f7 e1             	mul    %rcx
   3024e:	49 89 d0             	mov    %rdx,%r8
   30251:	49 c1 e8 33          	shr    $0x33,%r8
   30255:	48 b8 00 00 c1 6f f2 	movabs $0x2386f26fc10000,%rax
   3025c:	86 23 00 
   3025f:	49 0f af c0          	imul   %r8,%rax
   30263:	48 29 c7             	sub    %rax,%rdi
   30266:	48 b9 81 cd 95 50 c3 	movabs $0xb424dc35095cd81,%rcx
   3026d:	4d 42 0b 
   30270:	48 89 f8             	mov    %rdi,%rax
   30273:	48 f7 e1             	mul    %rcx
   30276:	48 c1 ea 2a          	shr    $0x2a,%rdx
   3027a:	8d 04 92             	lea    (%rdx,%rdx,4),%eax
   3027d:	8d 04 c2             	lea    (%rdx,%rax,8),%eax
   30280:	0f b7 c0             	movzwl %ax,%eax
   30283:	c1 e8 0c             	shr    $0xc,%eax
   30286:	6b c0 64             	imul   $0x64,%eax,%eax
   30289:	28 c2                	sub    %al,%dl
   3028b:	0f b6 c2             	movzbl %dl,%eax
   3028e:	48 89 04 24          	mov    %rax,(%rsp)
   30292:	48 b9 33 22 d4 5b 02 	movabs $0x232f33025bd42233,%rcx
   30299:	33 2f 23 
   3029c:	48 89 f8             	mov    %rdi,%rax
   3029f:	48 f7 e1             	mul    %rcx
   302a2:	48 c1 ea 25          	shr    $0x25,%rdx
   302a6:	0f b7 c2             	movzwl %dx,%eax
   302a9:	c1 e8 02             	shr    $0x2,%eax
   302ac:	69 c0 7b 14 00 00    	imul   $0x147b,%eax,%eax
   302b2:	c1 e8 11             	shr    $0x11,%eax
   302b5:	6b c0 64             	imul   $0x64,%eax,%eax
   302b8:	29 c2                	sub    %eax,%edx
   302ba:	0f b7 ea             	movzwl %dx,%ebp
   302bd:	48 b9 bf d5 ed bd ce 	movabs $0xdbe6fecebdedd5bf,%rcx
   302c4:	fe e6 db 
   302c7:	48 89 f8             	mov    %rdi,%rax
   302ca:	48 f7 e1             	mul    %rcx
   302cd:	49 89 d2             	mov    %rdx,%r10
   302d0:	49 c1 ea 21          	shr    $0x21,%r10
   302d4:	49 69 c2 1f 85 eb 51 	imul   $0x51eb851f,%r10,%rax
   302db:	48 c1 e8 25          	shr    $0x25,%rax
   302df:	6b c0 64             	imul   $0x64,%eax,%eax
   302e2:	41 29 c2             	sub    %eax,%r10d
   302e5:	48 b9 fd ce 61 84 11 	movabs $0xabcc77118461cefd,%rcx
   302ec:	77 cc ab 
   302ef:	48 89 f8             	mov    %rdi,%rax
   302f2:	48 f7 e1             	mul    %rcx
   302f5:	49 89 d3             	mov    %rdx,%r11
   302f8:	49 c1 eb 1a          	shr    $0x1a,%r11
   302fc:	49 69 c3 1f 85 eb 51 	imul   $0x51eb851f,%r11,%rax
   30303:	48 c1 e8 25          	shr    $0x25,%rax
   30307:	6b c0 64             	imul   $0x64,%eax,%eax
   3030a:	41 29 c3             	sub    %eax,%r11d
   3030d:	48 b9 db 34 b6 d7 82 	movabs $0x431bde82d7b634db,%rcx
   30314:	de 1b 43 
   30317:	48 89 f8             	mov    %rdi,%rax
   3031a:	48 f7 e1             	mul    %rcx
   3031d:	48 89 d0             	mov    %rdx,%rax
   30320:	49 89 d7             	mov    %rdx,%r15
   30323:	49 c1 ef 12          	shr    $0x12,%r15
   30327:	48 c1 e8 14          	shr    $0x14,%rax
   3032b:	48 bb c3 f5 28 5c 8f 	movabs $0x28f5c28f5c28f5c3,%rbx
   30332:	c2 f5 28 
   30335:	48 f7 e3             	mul    %rbx
   30338:	48 c1 ea 02          	shr    $0x2,%rdx
   3033c:	48 6b c2 64          	imul   $0x64,%rdx,%rax
   30340:	49 29 c7             	sub    %rax,%r15
   30343:	4d 01 ff             	add    %r15,%r15
   30346:	48 b9 4b 59 86 38 d6 	movabs $0x346dc5d63886594b,%rcx
   3034d:	c5 6d 34 
   30350:	48 89 f8             	mov    %rdi,%rax
   30353:	48 f7 e1             	mul    %rcx
   30356:	48 89 d0             	mov    %rdx,%rax
   30359:	49 89 d4             	mov    %rdx,%r12
   3035c:	49 c1 ec 0b          	shr    $0xb,%r12
   30360:	48 c1 e8 0d          	shr    $0xd,%rax
   30364:	48 f7 e3             	mul    %rbx
   30367:	48 c1 ea 02          	shr    $0x2,%rdx
   3036b:	4c 6b f2 64          	imul   $0x64,%rdx,%r14
   3036f:	48 89 f8             	mov    %rdi,%rax
   30372:	48 c1 e8 02          	shr    $0x2,%rax
   30376:	48 f7 e3             	mul    %rbx
   30379:	48 89 d1             	mov    %rdx,%rcx
   3037c:	4d 29 f4             	sub    %r14,%r12
   3037f:	48 89 d0             	mov    %rdx,%rax
   30382:	48 c1 e8 04          	shr    $0x4,%rax
   30386:	48 f7 e3             	mul    %rbx
   30389:	4d 01 e4             	add    %r12,%r12
   3038c:	48 c1 ea 02          	shr    $0x2,%rdx
   30390:	48 6b c2 64          	imul   $0x64,%rdx,%rax
   30394:	48 c1 e9 02          	shr    $0x2,%rcx
   30398:	48 6b d1 64          	imul   $0x64,%rcx,%rdx
   3039c:	48 29 c1             	sub    %rax,%rcx
   3039f:	48 01 c9             	add    %rcx,%rcx
   303a2:	48 29 d7             	sub    %rdx,%rdi
   303a5:	48 01 ff             	add    %rdi,%rdi
   303a8:	49 8d 45 f0          	lea    -0x10(%r13),%rax
   303ac:	49 89 01             	mov    %rax,(%r9)
   303af:	48 8d 05 c9 9b 00 00 	lea    0x9bc9(%rip),%rax        # 39f7f <str.1+0x13f>
   303b6:	48 8b 14 24          	mov    (%rsp),%rdx
   303ba:	0f b7 14 50          	movzwl (%rax,%rdx,2),%edx
   303be:	66 42 89 54 2e f0    	mov    %dx,-0x10(%rsi,%r13,1)
   303c4:	49 8b 11             	mov    (%r9),%rdx
   303c7:	0f b7 1c 68          	movzwl (%rax,%rbp,2),%ebx
   303cb:	66 89 5c 32 02       	mov    %bx,0x2(%rdx,%rsi,1)
   303d0:	49 8b 11             	mov    (%r9),%rdx
   303d3:	42 0f b7 2c 50       	movzwl (%rax,%r10,2),%ebp
   303d8:	66 89 6c 32 04       	mov    %bp,0x4(%rdx,%rsi,1)
   303dd:	49 8b 11             	mov    (%r9),%rdx
   303e0:	42 0f b7 04 58       	movzwl (%rax,%r11,2),%eax
   303e5:	66 89 44 32 06       	mov    %ax,0x6(%rdx,%rsi,1)
   303ea:	4d 8b 29             	mov    (%r9),%r13
   303ed:	49 83 c5 08          	add    $0x8,%r13
   303f1:	41 bb 0e 00 00 00    	mov    $0xe,%r11d
   303f7:	bb 0c 00 00 00       	mov    $0xc,%ebx
   303fc:	bd 0a 00 00 00       	mov    $0xa,%ebp
   30401:	49 89 fa             	mov    %rdi,%r10
   30404:	4c 89 c7             	mov    %r8,%rdi
   30407:	e9 e9 00 00 00       	jmpq   304f5 <core::fmt::num::parse_u64_into+0x2e5>
   3040c:	48 81 ff 00 e1 f5 05 	cmp    $0x5f5e100,%rdi
   30413:	73 38                	jae    3044d <core::fmt::num::parse_u64_into+0x23d>
   30415:	81 ff 10 27 00 00    	cmp    $0x2710,%edi
   3041b:	0f 83 15 01 00 00    	jae    30536 <core::fmt::num::parse_u64_into+0x326>
   30421:	66 83 ff 64          	cmp    $0x64,%di
   30425:	0f 83 6d 01 00 00    	jae    30598 <core::fmt::num::parse_u64_into+0x388>
   3042b:	66 83 ff 0a          	cmp    $0xa,%di
   3042f:	0f 83 a0 01 00 00    	jae    305d5 <core::fmt::num::parse_u64_into+0x3c5>
   30435:	49 8b 01             	mov    (%r9),%rax
   30438:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   3043c:	49 89 09             	mov    %rcx,(%r9)
   3043f:	40 80 c7 30          	add    $0x30,%dil
   30443:	40 88 7c 06 ff       	mov    %dil,-0x1(%rsi,%rax,1)
   30448:	e9 a5 01 00 00       	jmpq   305f2 <core::fmt::num::parse_u64_into+0x3e2>
   3044d:	48 b9 fd ce 61 84 11 	movabs $0xabcc77118461cefd,%rcx
   30454:	77 cc ab 
   30457:	48 89 f8             	mov    %rdi,%rax
   3045a:	48 f7 e1             	mul    %rcx
   3045d:	48 c1 ea 1a          	shr    $0x1a,%rdx
   30461:	48 69 c2 00 e1 f5 05 	imul   $0x5f5e100,%rdx,%rax
   30468:	48 29 c7             	sub    %rax,%rdi
   3046b:	48 69 c7 83 de 1b 43 	imul   $0x431bde83,%rdi,%rax
   30472:	48 c1 e8 32          	shr    $0x32,%rax
   30476:	8d 0c 80             	lea    (%rax,%rax,4),%ecx
   30479:	8d 0c c8             	lea    (%rax,%rcx,8),%ecx
   3047c:	0f b7 c9             	movzwl %cx,%ecx
   3047f:	c1 e9 0c             	shr    $0xc,%ecx
   30482:	6b c9 64             	imul   $0x64,%ecx,%ecx
   30485:	28 c8                	sub    %cl,%al
   30487:	00 c0                	add    %al,%al
   30489:	44 0f b6 f8          	movzbl %al,%r15d
   3048d:	b8 59 17 b7 d1       	mov    $0xd1b71759,%eax
   30492:	48 0f af c7          	imul   %rdi,%rax
   30496:	48 c1 e8 2d          	shr    $0x2d,%rax
   3049a:	0f b7 c8             	movzwl %ax,%ecx
   3049d:	c1 e9 02             	shr    $0x2,%ecx
   304a0:	69 c9 7b 14 00 00    	imul   $0x147b,%ecx,%ecx
   304a6:	c1 e9 11             	shr    $0x11,%ecx
   304a9:	6b c9 64             	imul   $0x64,%ecx,%ecx
   304ac:	29 c8                	sub    %ecx,%eax
   304ae:	01 c0                	add    %eax,%eax
   304b0:	44 0f b7 e0          	movzwl %ax,%r12d
   304b4:	48 69 cf 1f 85 eb 51 	imul   $0x51eb851f,%rdi,%rcx
   304bb:	48 c1 e9 25          	shr    $0x25,%rcx
   304bf:	48 69 c1 1f 85 eb 51 	imul   $0x51eb851f,%rcx,%rax
   304c6:	48 c1 e8 25          	shr    $0x25,%rax
   304ca:	6b c0 64             	imul   $0x64,%eax,%eax
   304cd:	6b e9 64             	imul   $0x64,%ecx,%ebp
   304d0:	29 c1                	sub    %eax,%ecx
   304d2:	01 c9                	add    %ecx,%ecx
   304d4:	29 ef                	sub    %ebp,%edi
   304d6:	01 ff                	add    %edi,%edi
   304d8:	49 83 c5 f8          	add    $0xfffffffffffffff8,%r13
   304dc:	4d 89 29             	mov    %r13,(%r9)
   304df:	41 bb 06 00 00 00    	mov    $0x6,%r11d
   304e5:	bb 04 00 00 00       	mov    $0x4,%ebx
   304ea:	bd 02 00 00 00       	mov    $0x2,%ebp
   304ef:	49 89 fa             	mov    %rdi,%r10
   304f2:	48 89 d7             	mov    %rdx,%rdi
   304f5:	48 8d 15 83 9a 00 00 	lea    0x9a83(%rip),%rdx        # 39f7f <str.1+0x13f>
   304fc:	41 0f b7 04 17       	movzwl (%r15,%rdx,1),%eax
   30501:	66 42 89 04 2e       	mov    %ax,(%rsi,%r13,1)
   30506:	49 03 29             	add    (%r9),%rbp
   30509:	41 0f b7 04 14       	movzwl (%r12,%rdx,1),%eax
   3050e:	66 89 04 2e          	mov    %ax,(%rsi,%rbp,1)
   30512:	49 03 19             	add    (%r9),%rbx
   30515:	0f b7 04 11          	movzwl (%rcx,%rdx,1),%eax
   30519:	66 89 04 1e          	mov    %ax,(%rsi,%rbx,1)
   3051d:	4d 03 19             	add    (%r9),%r11
   30520:	41 0f b7 04 12       	movzwl (%r10,%rdx,1),%eax
   30525:	66 42 89 04 1e       	mov    %ax,(%rsi,%r11,1)
   3052a:	81 ff 10 27 00 00    	cmp    $0x2710,%edi
   30530:	0f 82 eb fe ff ff    	jb     30421 <core::fmt::num::parse_u64_into+0x211>
   30536:	89 f9                	mov    %edi,%ecx
   30538:	b8 59 17 b7 d1       	mov    $0xd1b71759,%eax
   3053d:	48 0f af c1          	imul   %rcx,%rax
   30541:	48 c1 e8 2d          	shr    $0x2d,%rax
   30545:	69 c8 10 27 00 00    	imul   $0x2710,%eax,%ecx
   3054b:	29 cf                	sub    %ecx,%edi
   3054d:	0f b7 cf             	movzwl %di,%ecx
   30550:	c1 e9 02             	shr    $0x2,%ecx
   30553:	69 c9 7b 14 00 00    	imul   $0x147b,%ecx,%ecx
   30559:	c1 e9 11             	shr    $0x11,%ecx
   3055c:	6b d1 64             	imul   $0x64,%ecx,%edx
   3055f:	29 d7                	sub    %edx,%edi
   30561:	0f b7 d7             	movzwl %di,%edx
   30564:	49 8b 39             	mov    (%r9),%rdi
   30567:	48 8d 6f fc          	lea    -0x4(%rdi),%rbp
   3056b:	49 89 29             	mov    %rbp,(%r9)
   3056e:	48 8d 2d 0a 9a 00 00 	lea    0x9a0a(%rip),%rbp        # 39f7f <str.1+0x13f>
   30575:	0f b7 4c 4d 00       	movzwl 0x0(%rbp,%rcx,2),%ecx
   3057a:	66 89 4c 3e fc       	mov    %cx,-0x4(%rsi,%rdi,1)
   3057f:	49 8b 09             	mov    (%r9),%rcx
   30582:	0f b7 54 55 00       	movzwl 0x0(%rbp,%rdx,2),%edx
   30587:	66 89 54 31 02       	mov    %dx,0x2(%rcx,%rsi,1)
   3058c:	89 c7                	mov    %eax,%edi
   3058e:	66 83 ff 64          	cmp    $0x64,%di
   30592:	0f 82 93 fe ff ff    	jb     3042b <core::fmt::num::parse_u64_into+0x21b>
   30598:	0f b7 c7             	movzwl %di,%eax
   3059b:	89 c1                	mov    %eax,%ecx
   3059d:	c1 e9 02             	shr    $0x2,%ecx
   305a0:	69 f9 7b 14 00 00    	imul   $0x147b,%ecx,%edi
   305a6:	c1 ef 11             	shr    $0x11,%edi
   305a9:	6b cf 64             	imul   $0x64,%edi,%ecx
   305ac:	29 c8                	sub    %ecx,%eax
   305ae:	0f b7 c0             	movzwl %ax,%eax
   305b1:	49 8b 09             	mov    (%r9),%rcx
   305b4:	48 8d 51 fe          	lea    -0x2(%rcx),%rdx
   305b8:	49 89 11             	mov    %rdx,(%r9)
   305bb:	48 8d 15 bd 99 00 00 	lea    0x99bd(%rip),%rdx        # 39f7f <str.1+0x13f>
   305c2:	0f b7 04 42          	movzwl (%rdx,%rax,2),%eax
   305c6:	66 89 44 0e fe       	mov    %ax,-0x2(%rsi,%rcx,1)
   305cb:	66 83 ff 0a          	cmp    $0xa,%di
   305cf:	0f 82 60 fe ff ff    	jb     30435 <core::fmt::num::parse_u64_into+0x225>
   305d5:	0f b7 c7             	movzwl %di,%eax
   305d8:	49 8b 09             	mov    (%r9),%rcx
   305db:	48 8d 51 fe          	lea    -0x2(%rcx),%rdx
   305df:	49 89 11             	mov    %rdx,(%r9)
   305e2:	48 8d 15 96 99 00 00 	lea    0x9996(%rip),%rdx        # 39f7f <str.1+0x13f>
   305e9:	0f b7 04 42          	movzwl (%rdx,%rax,2),%eax
   305ed:	66 89 44 0e fe       	mov    %ax,-0x2(%rsi,%rcx,1)
   305f2:	48 83 c4 08          	add    $0x8,%rsp
   305f6:	5b                   	pop    %rbx
   305f7:	41 5c                	pop    %r12
   305f9:	41 5d                	pop    %r13
   305fb:	41 5e                	pop    %r14
   305fd:	41 5f                	pop    %r15
   305ff:	5d                   	pop    %rbp
   30600:	c3                   	retq   
   30601:	48 8d 3d 3f 9a 00 00 	lea    0x9a3f(%rip),%rdi        # 3a047 <str.1+0x207>
   30608:	48 8d 15 81 4c 01 00 	lea    0x14c81(%rip),%rdx        # 45290 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1d58>
   3060f:	be 1c 00 00 00       	mov    $0x1c,%esi
   30614:	ff 15 be 58 01 00    	callq  *0x158be(%rip)        # 45ed8 <_GLOBAL_OFFSET_TABLE_+0x550>
   3061a:	0f 0b                	ud2    
   3061c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000030620 <core::fmt::num::<impl core::fmt::Display for u128>::fmt>:
   30620:	48 89 f1             	mov    %rsi,%rcx
   30623:	48 8b 07             	mov    (%rdi),%rax
   30626:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   3062a:	48 89 c7             	mov    %rax,%rdi
   3062d:	ba 01 00 00 00       	mov    $0x1,%edx
   30632:	e9 09 00 00 00       	jmpq   30640 <core::fmt::num::fmt_u128>
   30637:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3063e:	00 00 

0000000000030640 <core::fmt::num::fmt_u128>:
   30640:	55                   	push   %rbp
   30641:	41 57                	push   %r15
   30643:	41 56                	push   %r14
   30645:	41 54                	push   %r12
   30647:	53                   	push   %rbx
   30648:	48 83 ec 30          	sub    $0x30,%rsp
   3064c:	49 89 ce             	mov    %rcx,%r14
   3064f:	41 89 d7             	mov    %edx,%r15d
   30652:	48 c7 04 24 27 00 00 	movq   $0x27,(%rsp)
   30659:	00 
   3065a:	48 85 f6             	test   %rsi,%rsi
   3065d:	0f 84 1b 01 00 00    	je     3077e <core::fmt::num::fmt_u128+0x13e>
   30663:	48 0f bd ce          	bsr    %rsi,%rcx
   30667:	48 83 f1 3f          	xor    $0x3f,%rcx
   3066b:	41 b8 41 00 00 00    	mov    $0x41,%r8d
   30671:	41 29 c8             	sub    %ecx,%r8d
   30674:	80 c1 3f             	add    $0x3f,%cl
   30677:	48 89 f5             	mov    %rsi,%rbp
   3067a:	48 0f a5 fd          	shld   %cl,%rdi,%rbp
   3067e:	48 89 fa             	mov    %rdi,%rdx
   30681:	48 d3 e2             	shl    %cl,%rdx
   30684:	31 db                	xor    %ebx,%ebx
   30686:	f6 c1 40             	test   $0x40,%cl
   30689:	48 0f 45 ea          	cmovne %rdx,%rbp
   3068d:	48 0f 45 d3          	cmovne %rbx,%rdx
   30691:	44 89 c1             	mov    %r8d,%ecx
   30694:	48 0f ad f7          	shrd   %cl,%rsi,%rdi
   30698:	48 d3 ee             	shr    %cl,%rsi
   3069b:	41 f6 c0 40          	test   $0x40,%r8b
   3069f:	48 0f 45 fe          	cmovne %rsi,%rdi
   306a3:	48 0f 45 f3          	cmovne %rbx,%rsi
   306a7:	45 85 c0             	test   %r8d,%r8d
   306aa:	0f 84 c3 00 00 00    	je     30773 <core::fmt::num::fmt_u128+0x133>
   306b0:	49 b9 ff ff e7 89 04 	movabs $0x8ac7230489e7ffff,%r9
   306b7:	23 c7 8a 
   306ba:	31 db                	xor    %ebx,%ebx
   306bc:	45 89 c3             	mov    %r8d,%r11d
   306bf:	41 83 e3 fe          	and    $0xfffffffe,%r11d
   306c3:	41 f7 db             	neg    %r11d
   306c6:	49 ba 00 00 e8 89 04 	movabs $0x8ac7230489e80000,%r10
   306cd:	23 c7 8a 
   306d0:	48 0f a4 fe 01       	shld   $0x1,%rdi,%rsi
   306d5:	48 0f a4 ef 01       	shld   $0x1,%rbp,%rdi
   306da:	49 39 f9             	cmp    %rdi,%r9
   306dd:	b8 00 00 00 00       	mov    $0x0,%eax
   306e2:	48 19 f0             	sbb    %rsi,%rax
   306e5:	48 c1 f8 3f          	sar    $0x3f,%rax
   306e9:	48 89 c1             	mov    %rax,%rcx
   306ec:	4c 21 d1             	and    %r10,%rcx
   306ef:	48 29 cf             	sub    %rcx,%rdi
   306f2:	48 83 de 00          	sbb    $0x0,%rsi
   306f6:	48 0f a4 fe 01       	shld   $0x1,%rdi,%rsi
   306fb:	48 89 e9             	mov    %rbp,%rcx
   306fe:	48 c1 e9 3e          	shr    $0x3e,%rcx
   30702:	83 e1 01             	and    $0x1,%ecx
   30705:	48 8d 3c 79          	lea    (%rcx,%rdi,2),%rdi
   30709:	48 0f a4 d5 02       	shld   $0x2,%rdx,%rbp
   3070e:	48 c1 e2 02          	shl    $0x2,%rdx
   30712:	48 01 db             	add    %rbx,%rbx
   30715:	48 09 da             	or     %rbx,%rdx
   30718:	48 29 c2             	sub    %rax,%rdx
   3071b:	48 19 c5             	sbb    %rax,%rbp
   3071e:	49 39 f9             	cmp    %rdi,%r9
   30721:	b8 00 00 00 00       	mov    $0x0,%eax
   30726:	48 19 f0             	sbb    %rsi,%rax
   30729:	48 c1 f8 3f          	sar    $0x3f,%rax
   3072d:	89 c3                	mov    %eax,%ebx
   3072f:	83 e3 01             	and    $0x1,%ebx
   30732:	4c 21 d0             	and    %r10,%rax
   30735:	48 29 c7             	sub    %rax,%rdi
   30738:	48 83 de 00          	sbb    $0x0,%rsi
   3073c:	41 83 c3 02          	add    $0x2,%r11d
   30740:	75 8e                	jne    306d0 <core::fmt::num::fmt_u128+0x90>
   30742:	41 f6 c0 01          	test   $0x1,%r8b
   30746:	74 2b                	je     30773 <core::fmt::num::fmt_u128+0x133>
   30748:	48 0f a4 fe 01       	shld   $0x1,%rdi,%rsi
   3074d:	48 0f a4 ef 01       	shld   $0x1,%rbp,%rdi
   30752:	31 c0                	xor    %eax,%eax
   30754:	49 39 f9             	cmp    %rdi,%r9
   30757:	48 19 f0             	sbb    %rsi,%rax
   3075a:	48 c1 f8 3f          	sar    $0x3f,%rax
   3075e:	49 21 c2             	and    %rax,%r10
   30761:	4c 29 d7             	sub    %r10,%rdi
   30764:	83 e0 01             	and    $0x1,%eax
   30767:	48 0f a4 d5 01       	shld   $0x1,%rdx,%rbp
   3076c:	48 8d 14 53          	lea    (%rbx,%rdx,2),%rdx
   30770:	48 89 c3             	mov    %rax,%rbx
   30773:	48 0f a4 d5 01       	shld   $0x1,%rdx,%rbp
   30778:	48 8d 1c 53          	lea    (%rbx,%rdx,2),%rbx
   3077c:	eb 2c                	jmp    307aa <core::fmt::num::fmt_u128+0x16a>
   3077e:	48 b8 ff ff e7 89 04 	movabs $0x8ac7230489e7ffff,%rax
   30785:	23 c7 8a 
   30788:	31 db                	xor    %ebx,%ebx
   3078a:	48 39 c7             	cmp    %rax,%rdi
   3078d:	0f 97 c3             	seta   %bl
   30790:	31 ed                	xor    %ebp,%ebp
   30792:	48 83 c0 01          	add    $0x1,%rax
   30796:	48 b9 00 00 18 76 fb 	movabs $0x7538dcfb76180000,%rcx
   3079d:	dc 38 75 
   307a0:	48 01 f9             	add    %rdi,%rcx
   307a3:	48 39 c7             	cmp    %rax,%rdi
   307a6:	48 0f 43 f9          	cmovae %rcx,%rdi
   307aa:	48 8d 74 24 09       	lea    0x9(%rsp),%rsi
   307af:	48 89 e2             	mov    %rsp,%rdx
   307b2:	e8 59 fa ff ff       	callq  30210 <core::fmt::num::parse_u64_into>
   307b7:	48 89 d8             	mov    %rbx,%rax
   307ba:	48 09 e8             	or     %rbp,%rax
   307bd:	0f 84 b6 01 00 00    	je     30979 <core::fmt::num::fmt_u128+0x339>
   307c3:	48 8d 7c 24 1d       	lea    0x1d(%rsp),%rdi
   307c8:	48 8b 14 24          	mov    (%rsp),%rdx
   307cc:	48 83 c2 ec          	add    $0xffffffffffffffec,%rdx
   307d0:	be 30 00 00 00       	mov    $0x30,%esi
   307d5:	ff 15 2d 54 01 00    	callq  *0x1542d(%rip)        # 45c08 <memset@GLIBC_2.2.5>
   307db:	48 c7 04 24 14 00 00 	movq   $0x14,(%rsp)
   307e2:	00 
   307e3:	48 85 ed             	test   %rbp,%rbp
   307e6:	0f 84 21 01 00 00    	je     3090d <core::fmt::num::fmt_u128+0x2cd>
   307ec:	48 0f bd cd          	bsr    %rbp,%rcx
   307f0:	48 83 f1 3f          	xor    $0x3f,%rcx
   307f4:	41 b8 41 00 00 00    	mov    $0x41,%r8d
   307fa:	41 29 c8             	sub    %ecx,%r8d
   307fd:	80 c1 3f             	add    $0x3f,%cl
   30800:	49 89 ec             	mov    %rbp,%r12
   30803:	49 0f a5 dc          	shld   %cl,%rbx,%r12
   30807:	48 89 da             	mov    %rbx,%rdx
   3080a:	48 d3 e2             	shl    %cl,%rdx
   3080d:	31 f6                	xor    %esi,%esi
   3080f:	f6 c1 40             	test   $0x40,%cl
   30812:	4c 0f 45 e2          	cmovne %rdx,%r12
   30816:	48 0f 45 d6          	cmovne %rsi,%rdx
   3081a:	44 89 c1             	mov    %r8d,%ecx
   3081d:	48 0f ad eb          	shrd   %cl,%rbp,%rbx
   30821:	48 d3 ed             	shr    %cl,%rbp
   30824:	41 f6 c0 40          	test   $0x40,%r8b
   30828:	48 0f 45 dd          	cmovne %rbp,%rbx
   3082c:	48 0f 45 ee          	cmovne %rsi,%rbp
   30830:	45 85 c0             	test   %r8d,%r8d
   30833:	0f 84 c9 00 00 00    	je     30902 <core::fmt::num::fmt_u128+0x2c2>
   30839:	49 b9 ff ff e7 89 04 	movabs $0x8ac7230489e7ffff,%r9
   30840:	23 c7 8a 
   30843:	31 f6                	xor    %esi,%esi
   30845:	44 89 c0             	mov    %r8d,%eax
   30848:	83 e0 fe             	and    $0xfffffffe,%eax
   3084b:	f7 d8                	neg    %eax
   3084d:	49 ba 00 00 e8 89 04 	movabs $0x8ac7230489e80000,%r10
   30854:	23 c7 8a 
   30857:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3085e:	00 00 
   30860:	48 0f a4 dd 01       	shld   $0x1,%rbx,%rbp
   30865:	4c 0f a4 e3 01       	shld   $0x1,%r12,%rbx
   3086a:	49 39 d9             	cmp    %rbx,%r9
   3086d:	b9 00 00 00 00       	mov    $0x0,%ecx
   30872:	48 19 e9             	sbb    %rbp,%rcx
   30875:	48 c1 f9 3f          	sar    $0x3f,%rcx
   30879:	48 89 cf             	mov    %rcx,%rdi
   3087c:	4c 21 d7             	and    %r10,%rdi
   3087f:	48 29 fb             	sub    %rdi,%rbx
   30882:	48 83 dd 00          	sbb    $0x0,%rbp
   30886:	48 0f a4 dd 01       	shld   $0x1,%rbx,%rbp
   3088b:	4c 89 e7             	mov    %r12,%rdi
   3088e:	48 c1 ef 3e          	shr    $0x3e,%rdi
   30892:	83 e7 01             	and    $0x1,%edi
   30895:	48 8d 1c 5f          	lea    (%rdi,%rbx,2),%rbx
   30899:	49 0f a4 d4 02       	shld   $0x2,%rdx,%r12
   3089e:	48 c1 e2 02          	shl    $0x2,%rdx
   308a2:	48 01 f6             	add    %rsi,%rsi
   308a5:	48 09 f2             	or     %rsi,%rdx
   308a8:	48 29 ca             	sub    %rcx,%rdx
   308ab:	49 19 cc             	sbb    %rcx,%r12
   308ae:	49 39 d9             	cmp    %rbx,%r9
   308b1:	b9 00 00 00 00       	mov    $0x0,%ecx
   308b6:	48 19 e9             	sbb    %rbp,%rcx
   308b9:	48 c1 f9 3f          	sar    $0x3f,%rcx
   308bd:	89 ce                	mov    %ecx,%esi
   308bf:	83 e6 01             	and    $0x1,%esi
   308c2:	4c 21 d1             	and    %r10,%rcx
   308c5:	48 29 cb             	sub    %rcx,%rbx
   308c8:	48 83 dd 00          	sbb    $0x0,%rbp
   308cc:	83 c0 02             	add    $0x2,%eax
   308cf:	75 8f                	jne    30860 <core::fmt::num::fmt_u128+0x220>
   308d1:	41 f6 c0 01          	test   $0x1,%r8b
   308d5:	74 2b                	je     30902 <core::fmt::num::fmt_u128+0x2c2>
   308d7:	48 0f a4 dd 01       	shld   $0x1,%rbx,%rbp
   308dc:	4c 0f a4 e3 01       	shld   $0x1,%r12,%rbx
   308e1:	31 c0                	xor    %eax,%eax
   308e3:	49 39 d9             	cmp    %rbx,%r9
   308e6:	48 19 e8             	sbb    %rbp,%rax
   308e9:	48 c1 f8 3f          	sar    $0x3f,%rax
   308ed:	49 21 c2             	and    %rax,%r10
   308f0:	4c 29 d3             	sub    %r10,%rbx
   308f3:	83 e0 01             	and    $0x1,%eax
   308f6:	49 0f a4 d4 01       	shld   $0x1,%rdx,%r12
   308fb:	48 8d 14 56          	lea    (%rsi,%rdx,2),%rdx
   308ff:	48 89 c6             	mov    %rax,%rsi
   30902:	49 0f a4 d4 01       	shld   $0x1,%rdx,%r12
   30907:	48 8d 2c 56          	lea    (%rsi,%rdx,2),%rbp
   3090b:	eb 2e                	jmp    3093b <core::fmt::num::fmt_u128+0x2fb>
   3090d:	48 b8 ff ff e7 89 04 	movabs $0x8ac7230489e7ffff,%rax
   30914:	23 c7 8a 
   30917:	31 ed                	xor    %ebp,%ebp
   30919:	48 39 c3             	cmp    %rax,%rbx
   3091c:	40 0f 97 c5          	seta   %bpl
   30920:	45 31 e4             	xor    %r12d,%r12d
   30923:	48 83 c0 01          	add    $0x1,%rax
   30927:	48 b9 00 00 18 76 fb 	movabs $0x7538dcfb76180000,%rcx
   3092e:	dc 38 75 
   30931:	48 01 d9             	add    %rbx,%rcx
   30934:	48 39 c3             	cmp    %rax,%rbx
   30937:	48 0f 43 d9          	cmovae %rcx,%rbx
   3093b:	48 8d 74 24 09       	lea    0x9(%rsp),%rsi
   30940:	48 89 e2             	mov    %rsp,%rdx
   30943:	48 89 df             	mov    %rbx,%rdi
   30946:	e8 c5 f8 ff ff       	callq  30210 <core::fmt::num::parse_u64_into>
   3094b:	49 09 ec             	or     %rbp,%r12
   3094e:	74 29                	je     30979 <core::fmt::num::fmt_u128+0x339>
   30950:	48 8d 7c 24 0a       	lea    0xa(%rsp),%rdi
   30955:	48 8b 14 24          	mov    (%rsp),%rdx
   30959:	48 83 c2 ff          	add    $0xffffffffffffffff,%rdx
   3095d:	be 30 00 00 00       	mov    $0x30,%esi
   30962:	ff 15 a0 52 01 00    	callq  *0x152a0(%rip)        # 45c08 <memset@GLIBC_2.2.5>
   30968:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   3096f:	00 
   30970:	40 80 c5 30          	add    $0x30,%bpl
   30974:	40 88 6c 24 09       	mov    %bpl,0x9(%rsp)
   30979:	48 8b 04 24          	mov    (%rsp),%rax
   3097d:	4c 8d 04 04          	lea    (%rsp,%rax,1),%r8
   30981:	49 83 c0 09          	add    $0x9,%r8
   30985:	41 b9 27 00 00 00    	mov    $0x27,%r9d
   3098b:	49 29 c1             	sub    %rax,%r9
   3098e:	41 0f b6 f7          	movzbl %r15b,%esi
   30992:	48 8d 15 97 94 00 00 	lea    0x9497(%rip),%rdx        # 39e30 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x2e0>
   30999:	4c 89 f7             	mov    %r14,%rdi
   3099c:	31 c9                	xor    %ecx,%ecx
   3099e:	ff 15 24 50 01 00    	callq  *0x15024(%rip)        # 459c8 <_GLOBAL_OFFSET_TABLE_+0x40>
   309a4:	48 83 c4 30          	add    $0x30,%rsp
   309a8:	5b                   	pop    %rbx
   309a9:	41 5c                	pop    %r12
   309ab:	41 5e                	pop    %r14
   309ad:	41 5f                	pop    %r15
   309af:	5d                   	pop    %rbp
   309b0:	c3                   	retq   
   309b1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   309b8:	00 00 00 
   309bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000309c0 <core::fmt::Write::write_char>:
   309c0:	50                   	push   %rax
   309c1:	89 f0                	mov    %esi,%eax
   309c3:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
   309ca:	00 
   309cb:	81 fe 80 00 00 00    	cmp    $0x80,%esi
   309d1:	73 16                	jae    309e9 <core::fmt::Write::write_char+0x29>
   309d3:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
   309d8:	88 44 24 04          	mov    %al,0x4(%rsp)
   309dc:	ba 01 00 00 00       	mov    $0x1,%edx
   309e1:	ff 15 41 53 01 00    	callq  *0x15341(%rip)        # 45d28 <_GLOBAL_OFFSET_TABLE_+0x3a0>
   309e7:	59                   	pop    %rcx
   309e8:	c3                   	retq   
   309e9:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
   309ee:	89 c1                	mov    %eax,%ecx
   309f0:	3d 00 08 00 00       	cmp    $0x800,%eax
   309f5:	73 1f                	jae    30a16 <core::fmt::Write::write_char+0x56>
   309f7:	c1 e9 06             	shr    $0x6,%ecx
   309fa:	80 c9 c0             	or     $0xc0,%cl
   309fd:	88 4c 24 04          	mov    %cl,0x4(%rsp)
   30a01:	24 3f                	and    $0x3f,%al
   30a03:	0c 80                	or     $0x80,%al
   30a05:	88 44 24 05          	mov    %al,0x5(%rsp)
   30a09:	ba 02 00 00 00       	mov    $0x2,%edx
   30a0e:	ff 15 14 53 01 00    	callq  *0x15314(%rip)        # 45d28 <_GLOBAL_OFFSET_TABLE_+0x3a0>
   30a14:	59                   	pop    %rcx
   30a15:	c3                   	retq   
   30a16:	3d 00 00 01 00       	cmp    $0x10000,%eax
   30a1b:	73 2e                	jae    30a4b <core::fmt::Write::write_char+0x8b>
   30a1d:	c1 e9 0c             	shr    $0xc,%ecx
   30a20:	80 c9 e0             	or     $0xe0,%cl
   30a23:	88 4c 24 04          	mov    %cl,0x4(%rsp)
   30a27:	89 c1                	mov    %eax,%ecx
   30a29:	c1 e9 06             	shr    $0x6,%ecx
   30a2c:	80 e1 3f             	and    $0x3f,%cl
   30a2f:	80 c9 80             	or     $0x80,%cl
   30a32:	88 4c 24 05          	mov    %cl,0x5(%rsp)
   30a36:	24 3f                	and    $0x3f,%al
   30a38:	0c 80                	or     $0x80,%al
   30a3a:	88 44 24 06          	mov    %al,0x6(%rsp)
   30a3e:	ba 03 00 00 00       	mov    $0x3,%edx
   30a43:	ff 15 df 52 01 00    	callq  *0x152df(%rip)        # 45d28 <_GLOBAL_OFFSET_TABLE_+0x3a0>
   30a49:	59                   	pop    %rcx
   30a4a:	c3                   	retq   
   30a4b:	c1 e9 12             	shr    $0x12,%ecx
   30a4e:	80 c9 f0             	or     $0xf0,%cl
   30a51:	88 4c 24 04          	mov    %cl,0x4(%rsp)
   30a55:	89 c1                	mov    %eax,%ecx
   30a57:	c1 e9 0c             	shr    $0xc,%ecx
   30a5a:	80 e1 3f             	and    $0x3f,%cl
   30a5d:	80 c9 80             	or     $0x80,%cl
   30a60:	88 4c 24 05          	mov    %cl,0x5(%rsp)
   30a64:	89 c1                	mov    %eax,%ecx
   30a66:	c1 e9 06             	shr    $0x6,%ecx
   30a69:	80 e1 3f             	and    $0x3f,%cl
   30a6c:	80 c9 80             	or     $0x80,%cl
   30a6f:	88 4c 24 06          	mov    %cl,0x6(%rsp)
   30a73:	24 3f                	and    $0x3f,%al
   30a75:	0c 80                	or     $0x80,%al
   30a77:	88 44 24 07          	mov    %al,0x7(%rsp)
   30a7b:	ba 04 00 00 00       	mov    $0x4,%edx
   30a80:	ff 15 a2 52 01 00    	callq  *0x152a2(%rip)        # 45d28 <_GLOBAL_OFFSET_TABLE_+0x3a0>
   30a86:	59                   	pop    %rcx
   30a87:	c3                   	retq   
   30a88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   30a8f:	00 

0000000000030a90 <core::fmt::Write::write_fmt>:
   30a90:	48 83 ec 48          	sub    $0x48,%rsp
   30a94:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   30a99:	0f 10 06             	movups (%rsi),%xmm0
   30a9c:	0f 10 4e 10          	movups 0x10(%rsi),%xmm1
   30aa0:	0f 10 56 20          	movups 0x20(%rsi),%xmm2
   30aa4:	0f 29 54 24 30       	movaps %xmm2,0x30(%rsp)
   30aa9:	0f 29 4c 24 20       	movaps %xmm1,0x20(%rsp)
   30aae:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   30ab3:	48 8d 35 ee 47 01 00 	lea    0x147ee(%rip),%rsi        # 452a8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1d70>
   30aba:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   30abf:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   30ac4:	ff 15 2e 53 01 00    	callq  *0x1532e(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x470>
   30aca:	48 83 c4 48          	add    $0x48,%rsp
   30ace:	c3                   	retq   
   30acf:	90                   	nop

0000000000030ad0 <<&mut W as core::fmt::Write>::write_str>:
   30ad0:	48 8b 3f             	mov    (%rdi),%rdi
   30ad3:	ff 25 4f 52 01 00    	jmpq   *0x1524f(%rip)        # 45d28 <_GLOBAL_OFFSET_TABLE_+0x3a0>
   30ad9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000030ae0 <<&mut W as core::fmt::Write>::write_char>:
   30ae0:	50                   	push   %rax
   30ae1:	89 f0                	mov    %esi,%eax
   30ae3:	48 8b 3f             	mov    (%rdi),%rdi
   30ae6:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
   30aed:	00 
   30aee:	81 fe 80 00 00 00    	cmp    $0x80,%esi
   30af4:	73 16                	jae    30b0c <<&mut W as core::fmt::Write>::write_char+0x2c>
   30af6:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
   30afb:	88 44 24 04          	mov    %al,0x4(%rsp)
   30aff:	ba 01 00 00 00       	mov    $0x1,%edx
   30b04:	ff 15 1e 52 01 00    	callq  *0x1521e(%rip)        # 45d28 <_GLOBAL_OFFSET_TABLE_+0x3a0>
   30b0a:	59                   	pop    %rcx
   30b0b:	c3                   	retq   
   30b0c:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
   30b11:	89 c1                	mov    %eax,%ecx
   30b13:	3d 00 08 00 00       	cmp    $0x800,%eax
   30b18:	73 1f                	jae    30b39 <<&mut W as core::fmt::Write>::write_char+0x59>
   30b1a:	c1 e9 06             	shr    $0x6,%ecx
   30b1d:	80 c9 c0             	or     $0xc0,%cl
   30b20:	88 4c 24 04          	mov    %cl,0x4(%rsp)
   30b24:	24 3f                	and    $0x3f,%al
   30b26:	0c 80                	or     $0x80,%al
   30b28:	88 44 24 05          	mov    %al,0x5(%rsp)
   30b2c:	ba 02 00 00 00       	mov    $0x2,%edx
   30b31:	ff 15 f1 51 01 00    	callq  *0x151f1(%rip)        # 45d28 <_GLOBAL_OFFSET_TABLE_+0x3a0>
   30b37:	59                   	pop    %rcx
   30b38:	c3                   	retq   
   30b39:	3d 00 00 01 00       	cmp    $0x10000,%eax
   30b3e:	73 2e                	jae    30b6e <<&mut W as core::fmt::Write>::write_char+0x8e>
   30b40:	c1 e9 0c             	shr    $0xc,%ecx
   30b43:	80 c9 e0             	or     $0xe0,%cl
   30b46:	88 4c 24 04          	mov    %cl,0x4(%rsp)
   30b4a:	89 c1                	mov    %eax,%ecx
   30b4c:	c1 e9 06             	shr    $0x6,%ecx
   30b4f:	80 e1 3f             	and    $0x3f,%cl
   30b52:	80 c9 80             	or     $0x80,%cl
   30b55:	88 4c 24 05          	mov    %cl,0x5(%rsp)
   30b59:	24 3f                	and    $0x3f,%al
   30b5b:	0c 80                	or     $0x80,%al
   30b5d:	88 44 24 06          	mov    %al,0x6(%rsp)
   30b61:	ba 03 00 00 00       	mov    $0x3,%edx
   30b66:	ff 15 bc 51 01 00    	callq  *0x151bc(%rip)        # 45d28 <_GLOBAL_OFFSET_TABLE_+0x3a0>
   30b6c:	59                   	pop    %rcx
   30b6d:	c3                   	retq   
   30b6e:	c1 e9 12             	shr    $0x12,%ecx
   30b71:	80 c9 f0             	or     $0xf0,%cl
   30b74:	88 4c 24 04          	mov    %cl,0x4(%rsp)
   30b78:	89 c1                	mov    %eax,%ecx
   30b7a:	c1 e9 0c             	shr    $0xc,%ecx
   30b7d:	80 e1 3f             	and    $0x3f,%cl
   30b80:	80 c9 80             	or     $0x80,%cl
   30b83:	88 4c 24 05          	mov    %cl,0x5(%rsp)
   30b87:	89 c1                	mov    %eax,%ecx
   30b89:	c1 e9 06             	shr    $0x6,%ecx
   30b8c:	80 e1 3f             	and    $0x3f,%cl
   30b8f:	80 c9 80             	or     $0x80,%cl
   30b92:	88 4c 24 06          	mov    %cl,0x6(%rsp)
   30b96:	24 3f                	and    $0x3f,%al
   30b98:	0c 80                	or     $0x80,%al
   30b9a:	88 44 24 07          	mov    %al,0x7(%rsp)
   30b9e:	ba 04 00 00 00       	mov    $0x4,%edx
   30ba3:	ff 15 7f 51 01 00    	callq  *0x1517f(%rip)        # 45d28 <_GLOBAL_OFFSET_TABLE_+0x3a0>
   30ba9:	59                   	pop    %rcx
   30baa:	c3                   	retq   
   30bab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000030bb0 <<&mut W as core::fmt::Write>::write_fmt>:
   30bb0:	48 83 ec 48          	sub    $0x48,%rsp
   30bb4:	48 8b 07             	mov    (%rdi),%rax
   30bb7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   30bbc:	0f 10 06             	movups (%rsi),%xmm0
   30bbf:	0f 10 4e 10          	movups 0x10(%rsi),%xmm1
   30bc3:	0f 10 56 20          	movups 0x20(%rsi),%xmm2
   30bc7:	0f 29 54 24 30       	movaps %xmm2,0x30(%rsp)
   30bcc:	0f 29 4c 24 20       	movaps %xmm1,0x20(%rsp)
   30bd1:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   30bd6:	48 8d 35 cb 46 01 00 	lea    0x146cb(%rip),%rsi        # 452a8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1d70>
   30bdd:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   30be2:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   30be7:	ff 15 0b 52 01 00    	callq  *0x1520b(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x470>
   30bed:	48 83 c4 48          	add    $0x48,%rsp
   30bf1:	c3                   	retq   
   30bf2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   30bf9:	00 00 00 
   30bfc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000030c00 <core::fmt::ArgumentV1::from_usize>:
   30c00:	48 89 f8             	mov    %rdi,%rax
   30c03:	48 8d 15 d6 e7 ff ff 	lea    -0x182a(%rip),%rdx        # 2f3e0 <core::ops::function::FnOnce::call_once>
   30c0a:	c3                   	retq   
   30c0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000030c10 <<core::fmt::Arguments as core::fmt::Debug>::fmt>:
   30c10:	48 83 ec 38          	sub    $0x38,%rsp
   30c14:	48 8b 46 20          	mov    0x20(%rsi),%rax
   30c18:	48 8b 76 28          	mov    0x28(%rsi),%rsi
   30c1c:	0f 10 07             	movups (%rdi),%xmm0
   30c1f:	0f 10 4f 10          	movups 0x10(%rdi),%xmm1
   30c23:	0f 10 57 20          	movups 0x20(%rdi),%xmm2
   30c27:	0f 29 54 24 20       	movaps %xmm2,0x20(%rsp)
   30c2c:	0f 29 4c 24 10       	movaps %xmm1,0x10(%rsp)
   30c31:	0f 29 04 24          	movaps %xmm0,(%rsp)
   30c35:	48 89 e2             	mov    %rsp,%rdx
   30c38:	48 89 c7             	mov    %rax,%rdi
   30c3b:	ff 15 b7 51 01 00    	callq  *0x151b7(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x470>
   30c41:	48 83 c4 38          	add    $0x38,%rsp
   30c45:	c3                   	retq   
   30c46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   30c4d:	00 00 00 

0000000000030c50 <core::fmt::write>:
   30c50:	55                   	push   %rbp
   30c51:	41 57                	push   %r15
   30c53:	41 56                	push   %r14
   30c55:	41 55                	push   %r13
   30c57:	41 54                	push   %r12
   30c59:	53                   	push   %rbx
   30c5a:	48 83 ec 58          	sub    $0x58,%rsp
   30c5e:	48 89 d3             	mov    %rdx,%rbx
   30c61:	48 89 f1             	mov    %rsi,%rcx
   30c64:	48 b8 00 00 00 00 20 	movabs $0x2000000000,%rax
   30c6b:	00 00 00 
   30c6e:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   30c73:	c6 44 24 50 03       	movb   $0x3,0x50(%rsp)
   30c78:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   30c7f:	00 00 
   30c81:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   30c88:	00 00 
   30c8a:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
   30c8f:	48 89 74 24 40       	mov    %rsi,0x40(%rsp)
   30c94:	48 8b 6a 10          	mov    0x10(%rdx),%rbp
   30c98:	48 85 ed             	test   %rbp,%rbp
   30c9b:	0f 84 79 01 00 00    	je     30e1a <core::fmt::write+0x1ca>
   30ca1:	4c 8b 6b 18          	mov    0x18(%rbx),%r13
   30ca5:	48 8b 03             	mov    (%rbx),%rax
   30ca8:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   30cac:	49 39 d5             	cmp    %rdx,%r13
   30caf:	4c 0f 47 ea          	cmova  %rdx,%r13
   30cb3:	4d 85 ed             	test   %r13,%r13
   30cb6:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   30cbb:	0f 84 de 01 00 00    	je     30e9f <core::fmt::write+0x24f>
   30cc1:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   30cc6:	48 8b 30             	mov    (%rax),%rsi
   30cc9:	48 8b 50 08          	mov    0x8(%rax),%rdx
   30ccd:	ff 51 18             	callq  *0x18(%rcx)
   30cd0:	84 c0                	test   %al,%al
   30cd2:	0f 85 fe 01 00 00    	jne    30ed6 <core::fmt::write+0x286>
   30cd8:	4c 8b 73 20          	mov    0x20(%rbx),%r14
   30cdc:	48 8b 43 28          	mov    0x28(%rbx),%rax
   30ce0:	48 89 04 24          	mov    %rax,(%rsp)
   30ce4:	48 83 c5 30          	add    $0x30,%rbp
   30ce8:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   30ced:	48 83 c3 18          	add    $0x18,%rbx
   30cf1:	4d 89 ec             	mov    %r13,%r12
   30cf4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   30cfb:	00 00 00 
   30cfe:	66 90                	xchg   %ax,%ax
   30d00:	8b 45 f8             	mov    -0x8(%rbp),%eax
   30d03:	89 44 24 4c          	mov    %eax,0x4c(%rsp)
   30d07:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
   30d0b:	88 44 24 50          	mov    %al,0x50(%rsp)
   30d0f:	8b 45 fc             	mov    -0x4(%rbp),%eax
   30d12:	89 44 24 48          	mov    %eax,0x48(%rsp)
   30d16:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   30d1a:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
   30d1e:	48 85 c0             	test   %rax,%rax
   30d21:	74 29                	je     30d4c <core::fmt::write+0xfc>
   30d23:	48 83 f8 02          	cmp    $0x2,%rax
   30d27:	74 37                	je     30d60 <core::fmt::write+0x110>
   30d29:	48 3b 3c 24          	cmp    (%rsp),%rdi
   30d2d:	0f 83 c4 01 00 00    	jae    30ef7 <core::fmt::write+0x2a7>
   30d33:	48 c1 e7 04          	shl    $0x4,%rdi
   30d37:	48 8d 05 a2 e6 ff ff 	lea    -0x195e(%rip),%rax        # 2f3e0 <core::ops::function::FnOnce::call_once>
   30d3e:	49 39 44 3e 08       	cmp    %rax,0x8(%r14,%rdi,1)
   30d43:	75 1b                	jne    30d60 <core::fmt::write+0x110>
   30d45:	49 8b 04 3e          	mov    (%r14,%rdi,1),%rax
   30d49:	48 8b 38             	mov    (%rax),%rdi
   30d4c:	b8 01 00 00 00       	mov    $0x1,%eax
   30d51:	e9 0c 00 00 00       	jmpq   30d62 <core::fmt::write+0x112>
   30d56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   30d5d:	00 00 00 
   30d60:	31 c0                	xor    %eax,%eax
   30d62:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   30d67:	48 89 7c 24 20       	mov    %rdi,0x20(%rsp)
   30d6c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   30d70:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
   30d74:	48 85 c0             	test   %rax,%rax
   30d77:	74 29                	je     30da2 <core::fmt::write+0x152>
   30d79:	48 83 f8 02          	cmp    $0x2,%rax
   30d7d:	74 31                	je     30db0 <core::fmt::write+0x160>
   30d7f:	48 3b 3c 24          	cmp    (%rsp),%rdi
   30d83:	0f 83 6e 01 00 00    	jae    30ef7 <core::fmt::write+0x2a7>
   30d89:	48 c1 e7 04          	shl    $0x4,%rdi
   30d8d:	48 8d 05 4c e6 ff ff 	lea    -0x19b4(%rip),%rax        # 2f3e0 <core::ops::function::FnOnce::call_once>
   30d94:	49 39 44 3e 08       	cmp    %rax,0x8(%r14,%rdi,1)
   30d99:	75 15                	jne    30db0 <core::fmt::write+0x160>
   30d9b:	49 8b 04 3e          	mov    (%r14,%rdi,1),%rax
   30d9f:	48 8b 38             	mov    (%rax),%rdi
   30da2:	b8 01 00 00 00       	mov    $0x1,%eax
   30da7:	e9 06 00 00 00       	jmpq   30db2 <core::fmt::write+0x162>
   30dac:	0f 1f 40 00          	nopl   0x0(%rax)
   30db0:	31 c0                	xor    %eax,%eax
   30db2:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   30db7:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
   30dbc:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   30dc0:	48 3b 0c 24          	cmp    (%rsp),%rcx
   30dc4:	0f 83 21 01 00 00    	jae    30eeb <core::fmt::write+0x29b>
   30dca:	48 c1 e1 04          	shl    $0x4,%rcx
   30dce:	49 8b 3c 0e          	mov    (%r14,%rcx,1),%rdi
   30dd2:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   30dd7:	41 ff 54 0e 08       	callq  *0x8(%r14,%rcx,1)
   30ddc:	84 c0                	test   %al,%al
   30dde:	0f 85 f2 00 00 00    	jne    30ed6 <core::fmt::write+0x286>
   30de4:	49 83 c4 ff          	add    $0xffffffffffffffff,%r12
   30de8:	0f 84 bb 00 00 00    	je     30ea9 <core::fmt::write+0x259>
   30dee:	48 83 c5 38          	add    $0x38,%rbp
   30df2:	4c 8d 7b 10          	lea    0x10(%rbx),%r15
   30df6:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
   30dfb:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   30e00:	48 8b 73 f8          	mov    -0x8(%rbx),%rsi
   30e04:	48 8b 13             	mov    (%rbx),%rdx
   30e07:	ff 50 18             	callq  *0x18(%rax)
   30e0a:	4c 89 fb             	mov    %r15,%rbx
   30e0d:	84 c0                	test   %al,%al
   30e0f:	0f 84 eb fe ff ff    	je     30d00 <core::fmt::write+0xb0>
   30e15:	e9 bc 00 00 00       	jmpq   30ed6 <core::fmt::write+0x286>
   30e1a:	4c 8b 6b 28          	mov    0x28(%rbx),%r13
   30e1e:	48 8b 03             	mov    (%rbx),%rax
   30e21:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   30e25:	49 39 d5             	cmp    %rdx,%r13
   30e28:	4c 0f 47 ea          	cmova  %rdx,%r13
   30e2c:	4d 85 ed             	test   %r13,%r13
   30e2f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   30e34:	74 69                	je     30e9f <core::fmt::write+0x24f>
   30e36:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   30e3b:	4c 8b 7b 20          	mov    0x20(%rbx),%r15
   30e3f:	48 8b 30             	mov    (%rax),%rsi
   30e42:	48 8b 50 08          	mov    0x8(%rax),%rdx
   30e46:	ff 51 18             	callq  *0x18(%rcx)
   30e49:	84 c0                	test   %al,%al
   30e4b:	0f 85 85 00 00 00    	jne    30ed6 <core::fmt::write+0x286>
   30e51:	31 ed                	xor    %ebp,%ebp
   30e53:	4c 8d 74 24 18       	lea    0x18(%rsp),%r14
   30e58:	4c 89 eb             	mov    %r13,%rbx
   30e5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   30e60:	49 8b 3c 2f          	mov    (%r15,%rbp,1),%rdi
   30e64:	4c 89 f6             	mov    %r14,%rsi
   30e67:	41 ff 54 2f 08       	callq  *0x8(%r15,%rbp,1)
   30e6c:	84 c0                	test   %al,%al
   30e6e:	75 66                	jne    30ed6 <core::fmt::write+0x286>
   30e70:	48 83 c3 ff          	add    $0xffffffffffffffff,%rbx
   30e74:	74 33                	je     30ea9 <core::fmt::write+0x259>
   30e76:	4c 8d 65 10          	lea    0x10(%rbp),%r12
   30e7a:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
   30e7f:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   30e84:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   30e89:	48 8b 74 29 10       	mov    0x10(%rcx,%rbp,1),%rsi
   30e8e:	48 8b 54 29 18       	mov    0x18(%rcx,%rbp,1),%rdx
   30e93:	ff 50 18             	callq  *0x18(%rax)
   30e96:	4c 89 e5             	mov    %r12,%rbp
   30e99:	84 c0                	test   %al,%al
   30e9b:	74 c3                	je     30e60 <core::fmt::write+0x210>
   30e9d:	eb 37                	jmp    30ed6 <core::fmt::write+0x286>
   30e9f:	45 31 ed             	xor    %r13d,%r13d
   30ea2:	4c 39 ea             	cmp    %r13,%rdx
   30ea5:	77 0c                	ja     30eb3 <core::fmt::write+0x263>
   30ea7:	eb 31                	jmp    30eda <core::fmt::write+0x28a>
   30ea9:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   30eae:	4c 39 ea             	cmp    %r13,%rdx
   30eb1:	76 27                	jbe    30eda <core::fmt::write+0x28a>
   30eb3:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
   30eb8:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   30ebd:	49 c1 e5 04          	shl    $0x4,%r13
   30ec1:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   30ec6:	4a 8b 34 29          	mov    (%rcx,%r13,1),%rsi
   30eca:	4a 8b 54 29 08       	mov    0x8(%rcx,%r13,1),%rdx
   30ecf:	ff 50 18             	callq  *0x18(%rax)
   30ed2:	84 c0                	test   %al,%al
   30ed4:	74 04                	je     30eda <core::fmt::write+0x28a>
   30ed6:	b0 01                	mov    $0x1,%al
   30ed8:	eb 02                	jmp    30edc <core::fmt::write+0x28c>
   30eda:	31 c0                	xor    %eax,%eax
   30edc:	48 83 c4 58          	add    $0x58,%rsp
   30ee0:	5b                   	pop    %rbx
   30ee1:	41 5c                	pop    %r12
   30ee3:	41 5d                	pop    %r13
   30ee5:	41 5e                	pop    %r14
   30ee7:	41 5f                	pop    %r15
   30ee9:	5d                   	pop    %rbp
   30eea:	c3                   	retq   
   30eeb:	48 8d 15 e6 43 01 00 	lea    0x143e6(%rip),%rdx        # 452d8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1da0>
   30ef2:	48 89 cf             	mov    %rcx,%rdi
   30ef5:	eb 07                	jmp    30efe <core::fmt::write+0x2ae>
   30ef7:	48 8d 15 f2 43 01 00 	lea    0x143f2(%rip),%rdx        # 452f0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1db8>
   30efe:	48 8b 34 24          	mov    (%rsp),%rsi
   30f02:	ff 15 88 4d 01 00    	callq  *0x14d88(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   30f08:	0f 0b                	ud2    
   30f0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000030f10 <core::fmt::Formatter::pad_integral>:
   30f10:	55                   	push   %rbp
   30f11:	41 57                	push   %r15
   30f13:	41 56                	push   %r14
   30f15:	41 55                	push   %r13
   30f17:	41 54                	push   %r12
   30f19:	53                   	push   %rbx
   30f1a:	48 83 ec 18          	sub    $0x18,%rsp
   30f1e:	4d 89 cf             	mov    %r9,%r15
   30f21:	4c 89 c5             	mov    %r8,%rbp
   30f24:	49 89 cc             	mov    %rcx,%r12
   30f27:	48 89 d3             	mov    %rdx,%rbx
   30f2a:	49 89 fd             	mov    %rdi,%r13
   30f2d:	40 84 f6             	test   %sil,%sil
   30f30:	74 3c                	je     30f6e <core::fmt::Formatter::pad_integral+0x5e>
   30f32:	45 8b 4d 30          	mov    0x30(%r13),%r9d
   30f36:	44 89 c8             	mov    %r9d,%eax
   30f39:	83 e0 01             	and    $0x1,%eax
   30f3c:	85 c0                	test   %eax,%eax
   30f3e:	ba 00 00 11 00       	mov    $0x110000,%edx
   30f43:	41 be 2b 00 00 00    	mov    $0x2b,%r14d
   30f49:	44 0f 44 f2          	cmove  %edx,%r14d
   30f4d:	4c 01 f8             	add    %r15,%rax
   30f50:	41 f6 c1 04          	test   $0x4,%r9b
   30f54:	74 2c                	je     30f82 <core::fmt::Formatter::pad_integral+0x72>
   30f56:	49 89 ea             	mov    %rbp,%r10
   30f59:	4d 85 e4             	test   %r12,%r12
   30f5c:	74 64                	je     30fc2 <core::fmt::Formatter::pad_integral+0xb2>
   30f5e:	49 83 fc 04          	cmp    $0x4,%r12
   30f62:	73 65                	jae    30fc9 <core::fmt::Formatter::pad_integral+0xb9>
   30f64:	31 f6                	xor    %esi,%esi
   30f66:	48 89 da             	mov    %rbx,%rdx
   30f69:	e9 da 01 00 00       	jmpq   31148 <core::fmt::Formatter::pad_integral+0x238>
   30f6e:	49 8d 47 01          	lea    0x1(%r15),%rax
   30f72:	45 8b 4d 30          	mov    0x30(%r13),%r9d
   30f76:	41 be 2d 00 00 00    	mov    $0x2d,%r14d
   30f7c:	41 f6 c1 04          	test   $0x4,%r9b
   30f80:	75 d4                	jne    30f56 <core::fmt::Formatter::pad_integral+0x46>
   30f82:	31 db                	xor    %ebx,%ebx
   30f84:	41 83 7d 00 01       	cmpl   $0x1,0x0(%r13)
   30f89:	0f 84 f0 01 00 00    	je     3117f <core::fmt::Formatter::pad_integral+0x26f>
   30f8f:	4c 89 ef             	mov    %r13,%rdi
   30f92:	44 89 f6             	mov    %r14d,%esi
   30f95:	48 89 da             	mov    %rbx,%rdx
   30f98:	4c 89 e1             	mov    %r12,%rcx
   30f9b:	e8 40 04 00 00       	callq  313e0 <core::fmt::Formatter::pad_integral::write_prefix>
   30fa0:	41 b4 01             	mov    $0x1,%r12b
   30fa3:	84 c0                	test   %al,%al
   30fa5:	0f 85 1d 04 00 00    	jne    313c8 <core::fmt::Formatter::pad_integral+0x4b8>
   30fab:	49 8b 7d 20          	mov    0x20(%r13),%rdi
   30faf:	49 8b 45 28          	mov    0x28(%r13),%rax
   30fb3:	48 8b 40 18          	mov    0x18(%rax),%rax
   30fb7:	48 89 ee             	mov    %rbp,%rsi
   30fba:	4c 89 fa             	mov    %r15,%rdx
   30fbd:	e9 3d 02 00 00       	jmpq   311ff <core::fmt::Formatter::pad_integral+0x2ef>
   30fc2:	31 f6                	xor    %esi,%esi
   30fc4:	e9 a2 01 00 00       	jmpq   3116b <core::fmt::Formatter::pad_integral+0x25b>
   30fc9:	4c 89 e2             	mov    %r12,%rdx
   30fcc:	48 83 e2 fc          	and    $0xfffffffffffffffc,%rdx
   30fd0:	48 8d 72 fc          	lea    -0x4(%rdx),%rsi
   30fd4:	49 89 f0             	mov    %rsi,%r8
   30fd7:	49 c1 e8 02          	shr    $0x2,%r8
   30fdb:	49 83 c0 01          	add    $0x1,%r8
   30fdf:	48 85 f6             	test   %rsi,%rsi
   30fe2:	0f 84 93 02 00 00    	je     3127b <core::fmt::Formatter::pad_integral+0x36b>
   30fe8:	4c 89 c7             	mov    %r8,%rdi
   30feb:	48 83 e7 fe          	and    $0xfffffffffffffffe,%rdi
   30fef:	48 f7 df             	neg    %rdi
   30ff2:	66 0f ef c0          	pxor   %xmm0,%xmm0
   30ff6:	31 f6                	xor    %esi,%esi
   30ff8:	66 0f 6f 15 60 8a 00 	movdqa 0x8a60(%rip),%xmm2        # 39a60 <str.6+0x2740>
   30fff:	00 
   31000:	66 0f 6f 1d 68 8a 00 	movdqa 0x8a68(%rip),%xmm3        # 39a70 <str.6+0x2750>
   31007:	00 
   31008:	66 0f 6f 25 30 50 00 	movdqa 0x5030(%rip),%xmm4        # 36040 <_fini+0x71c>
   3100f:	00 
   31010:	66 0f ef c9          	pxor   %xmm1,%xmm1
   31014:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3101b:	00 00 00 
   3101e:	66 90                	xchg   %ax,%ax
   31020:	0f b7 2c 33          	movzwl (%rbx,%rsi,1),%ebp
   31024:	66 0f 6e ed          	movd   %ebp,%xmm5
   31028:	0f b7 6c 33 02       	movzwl 0x2(%rbx,%rsi,1),%ebp
   3102d:	66 0f 6e f5          	movd   %ebp,%xmm6
   31031:	66 0f db ea          	pand   %xmm2,%xmm5
   31035:	66 0f db f2          	pand   %xmm2,%xmm6
   31039:	66 0f 74 eb          	pcmpeqb %xmm3,%xmm5
   3103d:	66 0f 60 ed          	punpcklbw %xmm5,%xmm5
   31041:	66 0f 61 ed          	punpcklwd %xmm5,%xmm5
   31045:	66 0f 70 ed d4       	pshufd $0xd4,%xmm5,%xmm5
   3104a:	66 0f db ec          	pand   %xmm4,%xmm5
   3104e:	66 0f d4 e8          	paddq  %xmm0,%xmm5
   31052:	66 0f 74 f3          	pcmpeqb %xmm3,%xmm6
   31056:	66 0f 60 f6          	punpcklbw %xmm6,%xmm6
   3105a:	66 0f 61 f6          	punpcklwd %xmm6,%xmm6
   3105e:	66 0f 70 f6 d4       	pshufd $0xd4,%xmm6,%xmm6
   31063:	66 0f db f4          	pand   %xmm4,%xmm6
   31067:	66 0f d4 f1          	paddq  %xmm1,%xmm6
   3106b:	0f b7 6c 33 04       	movzwl 0x4(%rbx,%rsi,1),%ebp
   31070:	66 0f 6e c5          	movd   %ebp,%xmm0
   31074:	0f b7 6c 33 06       	movzwl 0x6(%rbx,%rsi,1),%ebp
   31079:	66 0f 6e cd          	movd   %ebp,%xmm1
   3107d:	66 0f db c2          	pand   %xmm2,%xmm0
   31081:	66 0f db ca          	pand   %xmm2,%xmm1
   31085:	66 0f 74 c3          	pcmpeqb %xmm3,%xmm0
   31089:	66 0f 60 c0          	punpcklbw %xmm0,%xmm0
   3108d:	66 0f 61 c0          	punpcklwd %xmm0,%xmm0
   31091:	66 0f 70 c0 d4       	pshufd $0xd4,%xmm0,%xmm0
   31096:	66 0f db c4          	pand   %xmm4,%xmm0
   3109a:	66 0f d4 c5          	paddq  %xmm5,%xmm0
   3109e:	66 0f 74 cb          	pcmpeqb %xmm3,%xmm1
   310a2:	66 0f 60 c9          	punpcklbw %xmm1,%xmm1
   310a6:	66 0f 61 c9          	punpcklwd %xmm1,%xmm1
   310aa:	66 0f 70 c9 d4       	pshufd $0xd4,%xmm1,%xmm1
   310af:	66 0f db cc          	pand   %xmm4,%xmm1
   310b3:	66 0f d4 ce          	paddq  %xmm6,%xmm1
   310b7:	48 83 c6 08          	add    $0x8,%rsi
   310bb:	48 83 c7 02          	add    $0x2,%rdi
   310bf:	0f 85 5b ff ff ff    	jne    31020 <core::fmt::Formatter::pad_integral+0x110>
   310c5:	41 f6 c0 01          	test   $0x1,%r8b
   310c9:	74 63                	je     3112e <core::fmt::Formatter::pad_integral+0x21e>
   310cb:	0f b7 7c 33 02       	movzwl 0x2(%rbx,%rsi,1),%edi
   310d0:	66 0f 6e d7          	movd   %edi,%xmm2
   310d4:	66 0f 6f 1d 84 89 00 	movdqa 0x8984(%rip),%xmm3        # 39a60 <str.6+0x2740>
   310db:	00 
   310dc:	66 0f db d3          	pand   %xmm3,%xmm2
   310e0:	66 0f 6f 25 88 89 00 	movdqa 0x8988(%rip),%xmm4        # 39a70 <str.6+0x2750>
   310e7:	00 
   310e8:	66 0f 74 d4          	pcmpeqb %xmm4,%xmm2
   310ec:	66 0f 60 d2          	punpcklbw %xmm2,%xmm2
   310f0:	66 0f 61 d2          	punpcklwd %xmm2,%xmm2
   310f4:	66 0f 70 d2 d4       	pshufd $0xd4,%xmm2,%xmm2
   310f9:	66 0f 6f 2d 3f 4f 00 	movdqa 0x4f3f(%rip),%xmm5        # 36040 <_fini+0x71c>
   31100:	00 
   31101:	66 0f db d5          	pand   %xmm5,%xmm2
   31105:	66 0f d4 ca          	paddq  %xmm2,%xmm1
   31109:	0f b7 34 33          	movzwl (%rbx,%rsi,1),%esi
   3110d:	66 0f 6e d6          	movd   %esi,%xmm2
   31111:	66 0f db d3          	pand   %xmm3,%xmm2
   31115:	66 0f 74 d4          	pcmpeqb %xmm4,%xmm2
   31119:	66 0f 60 d2          	punpcklbw %xmm2,%xmm2
   3111d:	66 0f 61 d2          	punpcklwd %xmm2,%xmm2
   31121:	66 0f 70 d2 d4       	pshufd $0xd4,%xmm2,%xmm2
   31126:	66 0f db d5          	pand   %xmm5,%xmm2
   3112a:	66 0f d4 c2          	paddq  %xmm2,%xmm0
   3112e:	66 0f d4 c1          	paddq  %xmm1,%xmm0
   31132:	66 0f 70 c8 4e       	pshufd $0x4e,%xmm0,%xmm1
   31137:	66 0f d4 c8          	paddq  %xmm0,%xmm1
   3113b:	66 48 0f 7e ce       	movq   %xmm1,%rsi
   31140:	4c 39 e2             	cmp    %r12,%rdx
   31143:	74 26                	je     3116b <core::fmt::Formatter::pad_integral+0x25b>
   31145:	48 01 da             	add    %rbx,%rdx
   31148:	4a 8d 3c 23          	lea    (%rbx,%r12,1),%rdi
   3114c:	0f 1f 40 00          	nopl   0x0(%rax)
   31150:	0f b6 0a             	movzbl (%rdx),%ecx
   31153:	48 83 c2 01          	add    $0x1,%rdx
   31157:	80 e1 c0             	and    $0xc0,%cl
   3115a:	31 ed                	xor    %ebp,%ebp
   3115c:	80 f9 80             	cmp    $0x80,%cl
   3115f:	40 0f 94 c5          	sete   %bpl
   31163:	48 01 ee             	add    %rbp,%rsi
   31166:	48 39 d7             	cmp    %rdx,%rdi
   31169:	75 e5                	jne    31150 <core::fmt::Formatter::pad_integral+0x240>
   3116b:	4c 01 e0             	add    %r12,%rax
   3116e:	48 29 f0             	sub    %rsi,%rax
   31171:	4c 89 d5             	mov    %r10,%rbp
   31174:	41 83 7d 00 01       	cmpl   $0x1,0x0(%r13)
   31179:	0f 85 10 fe ff ff    	jne    30f8f <core::fmt::Formatter::pad_integral+0x7f>
   3117f:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
   31184:	49 8b 55 08          	mov    0x8(%r13),%rdx
   31188:	49 89 d7             	mov    %rdx,%r15
   3118b:	49 29 c7             	sub    %rax,%r15
   3118e:	76 3f                	jbe    311cf <core::fmt::Formatter::pad_integral+0x2bf>
   31190:	41 f6 c1 08          	test   $0x8,%r9b
   31194:	75 79                	jne    3120f <core::fmt::Formatter::pad_integral+0x2ff>
   31196:	48 89 6c 24 08       	mov    %rbp,0x8(%rsp)
   3119b:	48 29 c2             	sub    %rax,%rdx
   3119e:	41 8b 45 38          	mov    0x38(%r13),%eax
   311a2:	3c 03                	cmp    $0x3,%al
   311a4:	b9 01 00 00 00       	mov    $0x1,%ecx
   311a9:	0f 45 c8             	cmovne %eax,%ecx
   311ac:	31 ed                	xor    %ebp,%ebp
   311ae:	0f b6 c1             	movzbl %cl,%eax
   311b1:	48 8d 0d f8 8a 00 00 	lea    0x8af8(%rip),%rcx        # 39cb0 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x160>
   311b8:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   311bc:	48 01 c8             	add    %rcx,%rax
   311bf:	49 89 d7             	mov    %rdx,%r15
   311c2:	ff e0                	jmpq   *%rax
   311c4:	45 31 ff             	xor    %r15d,%r15d
   311c7:	48 89 d5             	mov    %rdx,%rbp
   311ca:	e9 d5 00 00 00       	jmpq   312a4 <core::fmt::Formatter::pad_integral+0x394>
   311cf:	4c 89 ef             	mov    %r13,%rdi
   311d2:	44 89 f6             	mov    %r14d,%esi
   311d5:	48 89 da             	mov    %rbx,%rdx
   311d8:	4c 89 e1             	mov    %r12,%rcx
   311db:	e8 00 02 00 00       	callq  313e0 <core::fmt::Formatter::pad_integral::write_prefix>
   311e0:	41 b4 01             	mov    $0x1,%r12b
   311e3:	84 c0                	test   %al,%al
   311e5:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   311ea:	0f 85 d8 01 00 00    	jne    313c8 <core::fmt::Formatter::pad_integral+0x4b8>
   311f0:	49 8b 7d 20          	mov    0x20(%r13),%rdi
   311f4:	49 8b 45 28          	mov    0x28(%r13),%rax
   311f8:	48 8b 40 18          	mov    0x18(%rax),%rax
   311fc:	48 89 ee             	mov    %rbp,%rsi
   311ff:	48 83 c4 18          	add    $0x18,%rsp
   31203:	5b                   	pop    %rbx
   31204:	41 5c                	pop    %r12
   31206:	41 5d                	pop    %r13
   31208:	41 5e                	pop    %r14
   3120a:	41 5f                	pop    %r15
   3120c:	5d                   	pop    %rbp
   3120d:	ff e0                	jmpq   *%rax
   3120f:	41 8b 45 34          	mov    0x34(%r13),%eax
   31213:	89 44 24 08          	mov    %eax,0x8(%rsp)
   31217:	41 c7 45 34 30 00 00 	movl   $0x30,0x34(%r13)
   3121e:	00 
   3121f:	41 8a 45 38          	mov    0x38(%r13),%al
   31223:	88 44 24 07          	mov    %al,0x7(%rsp)
   31227:	41 c6 45 38 01       	movb   $0x1,0x38(%r13)
   3122c:	4c 89 ef             	mov    %r13,%rdi
   3122f:	44 89 f6             	mov    %r14d,%esi
   31232:	48 89 da             	mov    %rbx,%rdx
   31235:	4c 89 e1             	mov    %r12,%rcx
   31238:	e8 a3 01 00 00       	callq  313e0 <core::fmt::Formatter::pad_integral::write_prefix>
   3123d:	41 b4 01             	mov    $0x1,%r12b
   31240:	84 c0                	test   %al,%al
   31242:	0f 85 80 01 00 00    	jne    313c8 <core::fmt::Formatter::pad_integral+0x4b8>
   31248:	49 89 ee             	mov    %rbp,%r14
   3124b:	41 8b 45 38          	mov    0x38(%r13),%eax
   3124f:	3c 03                	cmp    $0x3,%al
   31251:	b9 01 00 00 00       	mov    $0x1,%ecx
   31256:	0f 45 c8             	cmovne %eax,%ecx
   31259:	31 ed                	xor    %ebp,%ebp
   3125b:	0f b6 c1             	movzbl %cl,%eax
   3125e:	48 8d 0d 3b 8a 00 00 	lea    0x8a3b(%rip),%rcx        # 39ca0 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x150>
   31265:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   31269:	48 01 c8             	add    %rcx,%rax
   3126c:	4c 89 fb             	mov    %r15,%rbx
   3126f:	ff e0                	jmpq   *%rax
   31271:	31 db                	xor    %ebx,%ebx
   31273:	4c 89 fd             	mov    %r15,%rbp
   31276:	e9 d0 00 00 00       	jmpq   3134b <core::fmt::Formatter::pad_integral+0x43b>
   3127b:	66 0f ef c0          	pxor   %xmm0,%xmm0
   3127f:	31 f6                	xor    %esi,%esi
   31281:	66 0f ef c9          	pxor   %xmm1,%xmm1
   31285:	41 f6 c0 01          	test   $0x1,%r8b
   31289:	0f 85 3c fe ff ff    	jne    310cb <core::fmt::Formatter::pad_integral+0x1bb>
   3128f:	e9 9a fe ff ff       	jmpq   3112e <core::fmt::Formatter::pad_integral+0x21e>
   31294:	48 89 d5             	mov    %rdx,%rbp
   31297:	48 d1 ed             	shr    %rbp
   3129a:	48 83 c2 01          	add    $0x1,%rdx
   3129e:	48 d1 ea             	shr    %rdx
   312a1:	49 89 d7             	mov    %rdx,%r15
   312a4:	48 83 c5 01          	add    $0x1,%rbp
   312a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   312af:	00 
   312b0:	48 83 c5 ff          	add    $0xffffffffffffffff,%rbp
   312b4:	74 1b                	je     312d1 <core::fmt::Formatter::pad_integral+0x3c1>
   312b6:	49 8b 7d 20          	mov    0x20(%r13),%rdi
   312ba:	49 8b 45 28          	mov    0x28(%r13),%rax
   312be:	41 8b 75 34          	mov    0x34(%r13),%esi
   312c2:	ff 50 20             	callq  *0x20(%rax)
   312c5:	84 c0                	test   %al,%al
   312c7:	74 e7                	je     312b0 <core::fmt::Formatter::pad_integral+0x3a0>
   312c9:	41 b4 01             	mov    $0x1,%r12b
   312cc:	e9 f7 00 00 00       	jmpq   313c8 <core::fmt::Formatter::pad_integral+0x4b8>
   312d1:	41 8b 6d 34          	mov    0x34(%r13),%ebp
   312d5:	4c 89 ef             	mov    %r13,%rdi
   312d8:	44 89 f6             	mov    %r14d,%esi
   312db:	48 89 da             	mov    %rbx,%rdx
   312de:	4c 89 e1             	mov    %r12,%rcx
   312e1:	e8 fa 00 00 00       	callq  313e0 <core::fmt::Formatter::pad_integral::write_prefix>
   312e6:	41 b4 01             	mov    $0x1,%r12b
   312e9:	84 c0                	test   %al,%al
   312eb:	0f 85 d7 00 00 00    	jne    313c8 <core::fmt::Formatter::pad_integral+0x4b8>
   312f1:	49 8b 7d 20          	mov    0x20(%r13),%rdi
   312f5:	49 8b 45 28          	mov    0x28(%r13),%rax
   312f9:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   312fe:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   31303:	ff 50 18             	callq  *0x18(%rax)
   31306:	84 c0                	test   %al,%al
   31308:	0f 85 ba 00 00 00    	jne    313c8 <core::fmt::Formatter::pad_integral+0x4b8>
   3130e:	4d 8b 75 20          	mov    0x20(%r13),%r14
   31312:	49 8b 5d 28          	mov    0x28(%r13),%rbx
   31316:	49 83 c7 01          	add    $0x1,%r15
   3131a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   31320:	49 83 c7 ff          	add    $0xffffffffffffffff,%r15
   31324:	0f 84 9b 00 00 00    	je     313c5 <core::fmt::Formatter::pad_integral+0x4b5>
   3132a:	4c 89 f7             	mov    %r14,%rdi
   3132d:	89 ee                	mov    %ebp,%esi
   3132f:	ff 53 20             	callq  *0x20(%rbx)
   31332:	84 c0                	test   %al,%al
   31334:	74 ea                	je     31320 <core::fmt::Formatter::pad_integral+0x410>
   31336:	e9 8d 00 00 00       	jmpq   313c8 <core::fmt::Formatter::pad_integral+0x4b8>
   3133b:	4c 89 fd             	mov    %r15,%rbp
   3133e:	48 d1 ed             	shr    %rbp
   31341:	49 83 c7 01          	add    $0x1,%r15
   31345:	49 d1 ef             	shr    %r15
   31348:	4c 89 fb             	mov    %r15,%rbx
   3134b:	48 83 c5 01          	add    $0x1,%rbp
   3134f:	90                   	nop
   31350:	48 83 c5 ff          	add    $0xffffffffffffffff,%rbp
   31354:	74 15                	je     3136b <core::fmt::Formatter::pad_integral+0x45b>
   31356:	49 8b 7d 20          	mov    0x20(%r13),%rdi
   3135a:	49 8b 45 28          	mov    0x28(%r13),%rax
   3135e:	41 8b 75 34          	mov    0x34(%r13),%esi
   31362:	ff 50 20             	callq  *0x20(%rax)
   31365:	84 c0                	test   %al,%al
   31367:	74 e7                	je     31350 <core::fmt::Formatter::pad_integral+0x440>
   31369:	eb 5d                	jmp    313c8 <core::fmt::Formatter::pad_integral+0x4b8>
   3136b:	45 8b 7d 34          	mov    0x34(%r13),%r15d
   3136f:	49 8b 7d 20          	mov    0x20(%r13),%rdi
   31373:	49 8b 45 28          	mov    0x28(%r13),%rax
   31377:	4c 89 f6             	mov    %r14,%rsi
   3137a:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   3137f:	ff 50 18             	callq  *0x18(%rax)
   31382:	84 c0                	test   %al,%al
   31384:	75 42                	jne    313c8 <core::fmt::Formatter::pad_integral+0x4b8>
   31386:	4d 8b 75 20          	mov    0x20(%r13),%r14
   3138a:	49 8b 6d 28          	mov    0x28(%r13),%rbp
   3138e:	48 83 c3 01          	add    $0x1,%rbx
   31392:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   31399:	00 00 00 
   3139c:	0f 1f 40 00          	nopl   0x0(%rax)
   313a0:	48 83 c3 ff          	add    $0xffffffffffffffff,%rbx
   313a4:	74 0f                	je     313b5 <core::fmt::Formatter::pad_integral+0x4a5>
   313a6:	4c 89 f7             	mov    %r14,%rdi
   313a9:	44 89 fe             	mov    %r15d,%esi
   313ac:	ff 55 20             	callq  *0x20(%rbp)
   313af:	84 c0                	test   %al,%al
   313b1:	74 ed                	je     313a0 <core::fmt::Formatter::pad_integral+0x490>
   313b3:	eb 13                	jmp    313c8 <core::fmt::Formatter::pad_integral+0x4b8>
   313b5:	8b 44 24 08          	mov    0x8(%rsp),%eax
   313b9:	41 89 45 34          	mov    %eax,0x34(%r13)
   313bd:	8a 44 24 07          	mov    0x7(%rsp),%al
   313c1:	41 88 45 38          	mov    %al,0x38(%r13)
   313c5:	45 31 e4             	xor    %r12d,%r12d
   313c8:	44 89 e0             	mov    %r12d,%eax
   313cb:	48 83 c4 18          	add    $0x18,%rsp
   313cf:	5b                   	pop    %rbx
   313d0:	41 5c                	pop    %r12
   313d2:	41 5d                	pop    %r13
   313d4:	41 5e                	pop    %r14
   313d6:	41 5f                	pop    %r15
   313d8:	5d                   	pop    %rbp
   313d9:	c3                   	retq   
   313da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000313e0 <core::fmt::Formatter::pad_integral::write_prefix>:
   313e0:	41 57                	push   %r15
   313e2:	41 56                	push   %r14
   313e4:	53                   	push   %rbx
   313e5:	49 89 ce             	mov    %rcx,%r14
   313e8:	49 89 d7             	mov    %rdx,%r15
   313eb:	48 89 fb             	mov    %rdi,%rbx
   313ee:	81 fe 00 00 11 00    	cmp    $0x110000,%esi
   313f4:	74 13                	je     31409 <core::fmt::Formatter::pad_integral::write_prefix+0x29>
   313f6:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   313fa:	48 8b 43 28          	mov    0x28(%rbx),%rax
   313fe:	ff 50 20             	callq  *0x20(%rax)
   31401:	89 c1                	mov    %eax,%ecx
   31403:	b0 01                	mov    $0x1,%al
   31405:	84 c9                	test   %cl,%cl
   31407:	75 20                	jne    31429 <core::fmt::Formatter::pad_integral::write_prefix+0x49>
   31409:	4d 85 ff             	test   %r15,%r15
   3140c:	74 19                	je     31427 <core::fmt::Formatter::pad_integral::write_prefix+0x47>
   3140e:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   31412:	48 8b 43 28          	mov    0x28(%rbx),%rax
   31416:	48 8b 40 18          	mov    0x18(%rax),%rax
   3141a:	4c 89 fe             	mov    %r15,%rsi
   3141d:	4c 89 f2             	mov    %r14,%rdx
   31420:	5b                   	pop    %rbx
   31421:	41 5e                	pop    %r14
   31423:	41 5f                	pop    %r15
   31425:	ff e0                	jmpq   *%rax
   31427:	31 c0                	xor    %eax,%eax
   31429:	5b                   	pop    %rbx
   3142a:	41 5e                	pop    %r14
   3142c:	41 5f                	pop    %r15
   3142e:	c3                   	retq   
   3142f:	90                   	nop

0000000000031430 <core::fmt::Formatter::pad>:
   31430:	55                   	push   %rbp
   31431:	41 57                	push   %r15
   31433:	41 56                	push   %r14
   31435:	41 55                	push   %r13
   31437:	41 54                	push   %r12
   31439:	53                   	push   %rbx
   3143a:	50                   	push   %rax
   3143b:	49 89 d6             	mov    %rdx,%r14
   3143e:	49 89 f5             	mov    %rsi,%r13
   31441:	49 89 ff             	mov    %rdi,%r15
   31444:	4c 8b 07             	mov    (%rdi),%r8
   31447:	48 8b 47 10          	mov    0x10(%rdi),%rax
   3144b:	49 83 f8 01          	cmp    $0x1,%r8
   3144f:	75 0b                	jne    3145c <core::fmt::Formatter::pad+0x2c>
   31451:	48 83 f8 01          	cmp    $0x1,%rax
   31455:	74 0f                	je     31466 <core::fmt::Formatter::pad+0x36>
   31457:	e9 39 01 00 00       	jmpq   31595 <core::fmt::Formatter::pad+0x165>
   3145c:	48 83 f8 01          	cmp    $0x1,%rax
   31460:	0f 85 24 03 00 00    	jne    3178a <core::fmt::Formatter::pad+0x35a>
   31466:	49 8b 7f 18          	mov    0x18(%r15),%rdi
   3146a:	4f 8d 0c 2e          	lea    (%r14,%r13,1),%r9
   3146e:	31 c9                	xor    %ecx,%ecx
   31470:	48 85 ff             	test   %rdi,%rdi
   31473:	0f 84 b5 00 00 00    	je     3152e <core::fmt::Formatter::pad+0xfe>
   31479:	4c 89 ee             	mov    %r13,%rsi
   3147c:	eb 44                	jmp    314c2 <core::fmt::Formatter::pad+0x92>
   3147e:	44 0f b6 5d 00       	movzbl 0x0(%rbp),%r11d
   31483:	48 83 c5 01          	add    $0x1,%rbp
   31487:	41 83 e3 3f          	and    $0x3f,%r11d
   3148b:	48 89 eb             	mov    %rbp,%rbx
   3148e:	83 e0 07             	and    $0x7,%eax
   31491:	c1 e0 12             	shl    $0x12,%eax
   31494:	41 c1 e2 0c          	shl    $0xc,%r10d
   31498:	41 09 c2             	or     %eax,%r10d
   3149b:	c1 e2 06             	shl    $0x6,%edx
   3149e:	44 09 d2             	or     %r10d,%edx
   314a1:	44 09 da             	or     %r11d,%edx
   314a4:	81 fa 00 00 11 00    	cmp    $0x110000,%edx
   314aa:	0f 84 db 00 00 00    	je     3158b <core::fmt::Formatter::pad+0x15b>
   314b0:	48 89 d8             	mov    %rbx,%rax
   314b3:	48 29 f0             	sub    %rsi,%rax
   314b6:	48 01 c1             	add    %rax,%rcx
   314b9:	48 89 de             	mov    %rbx,%rsi
   314bc:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   314c0:	74 6f                	je     31531 <core::fmt::Formatter::pad+0x101>
   314c2:	49 39 f1             	cmp    %rsi,%r9
   314c5:	0f 84 c0 00 00 00    	je     3158b <core::fmt::Formatter::pad+0x15b>
   314cb:	48 8d 5e 01          	lea    0x1(%rsi),%rbx
   314cf:	0f b6 06             	movzbl (%rsi),%eax
   314d2:	84 c0                	test   %al,%al
   314d4:	79 da                	jns    314b0 <core::fmt::Formatter::pad+0x80>
   314d6:	4c 39 cb             	cmp    %r9,%rbx
   314d9:	74 16                	je     314f1 <core::fmt::Formatter::pad+0xc1>
   314db:	48 8d 5e 02          	lea    0x2(%rsi),%rbx
   314df:	44 0f b6 56 01       	movzbl 0x1(%rsi),%r10d
   314e4:	41 83 e2 3f          	and    $0x3f,%r10d
   314e8:	48 89 dd             	mov    %rbx,%rbp
   314eb:	3c e0                	cmp    $0xe0,%al
   314ed:	72 c1                	jb     314b0 <core::fmt::Formatter::pad+0x80>
   314ef:	eb 0a                	jmp    314fb <core::fmt::Formatter::pad+0xcb>
   314f1:	45 31 d2             	xor    %r10d,%r10d
   314f4:	4c 89 cd             	mov    %r9,%rbp
   314f7:	3c e0                	cmp    $0xe0,%al
   314f9:	72 b5                	jb     314b0 <core::fmt::Formatter::pad+0x80>
   314fb:	4c 39 cd             	cmp    %r9,%rbp
   314fe:	74 14                	je     31514 <core::fmt::Formatter::pad+0xe4>
   31500:	0f b6 55 00          	movzbl 0x0(%rbp),%edx
   31504:	48 83 c5 01          	add    $0x1,%rbp
   31508:	83 e2 3f             	and    $0x3f,%edx
   3150b:	48 89 eb             	mov    %rbp,%rbx
   3150e:	3c f0                	cmp    $0xf0,%al
   31510:	72 9e                	jb     314b0 <core::fmt::Formatter::pad+0x80>
   31512:	eb 09                	jmp    3151d <core::fmt::Formatter::pad+0xed>
   31514:	31 d2                	xor    %edx,%edx
   31516:	4c 89 cd             	mov    %r9,%rbp
   31519:	3c f0                	cmp    $0xf0,%al
   3151b:	72 93                	jb     314b0 <core::fmt::Formatter::pad+0x80>
   3151d:	4c 39 cd             	cmp    %r9,%rbp
   31520:	0f 85 58 ff ff ff    	jne    3147e <core::fmt::Formatter::pad+0x4e>
   31526:	45 31 db             	xor    %r11d,%r11d
   31529:	e9 60 ff ff ff       	jmpq   3148e <core::fmt::Formatter::pad+0x5e>
   3152e:	4c 89 eb             	mov    %r13,%rbx
   31531:	49 39 d9             	cmp    %rbx,%r9
   31534:	74 55                	je     3158b <core::fmt::Formatter::pad+0x15b>
   31536:	0f b6 03             	movzbl (%rbx),%eax
   31539:	84 c0                	test   %al,%al
   3153b:	78 1c                	js     31559 <core::fmt::Formatter::pad+0x129>
   3153d:	48 85 c9             	test   %rcx,%rcx
   31540:	74 12                	je     31554 <core::fmt::Formatter::pad+0x124>
   31542:	4c 39 f1             	cmp    %r14,%rcx
   31545:	74 0d                	je     31554 <core::fmt::Formatter::pad+0x124>
   31547:	4c 39 f1             	cmp    %r14,%rcx
   3154a:	73 32                	jae    3157e <core::fmt::Formatter::pad+0x14e>
   3154c:	41 80 7c 0d 00 c0    	cmpb   $0xc0,0x0(%r13,%rcx,1)
   31552:	7c 2a                	jl     3157e <core::fmt::Formatter::pad+0x14e>
   31554:	4c 89 e8             	mov    %r13,%rax
   31557:	eb 27                	jmp    31580 <core::fmt::Formatter::pad+0x150>
   31559:	48 8d 53 01          	lea    0x1(%rbx),%rdx
   3155d:	4c 39 ca             	cmp    %r9,%rdx
   31560:	0f 84 cc 04 00 00    	je     31a32 <core::fmt::Formatter::pad+0x602>
   31566:	0f b6 53 01          	movzbl 0x1(%rbx),%edx
   3156a:	48 83 c3 02          	add    $0x2,%rbx
   3156e:	83 e2 3f             	and    $0x3f,%edx
   31571:	c1 e2 06             	shl    $0x6,%edx
   31574:	3c e0                	cmp    $0xe0,%al
   31576:	0f 83 c3 04 00 00    	jae    31a3f <core::fmt::Formatter::pad+0x60f>
   3157c:	eb bf                	jmp    3153d <core::fmt::Formatter::pad+0x10d>
   3157e:	31 c0                	xor    %eax,%eax
   31580:	48 85 c0             	test   %rax,%rax
   31583:	4c 0f 45 e8          	cmovne %rax,%r13
   31587:	4c 0f 45 f1          	cmovne %rcx,%r14
   3158b:	49 83 f8 01          	cmp    $0x1,%r8
   3158f:	0f 85 f5 01 00 00    	jne    3178a <core::fmt::Formatter::pad+0x35a>
   31595:	4d 85 f6             	test   %r14,%r14
   31598:	74 10                	je     315aa <core::fmt::Formatter::pad+0x17a>
   3159a:	49 83 fe 04          	cmp    $0x4,%r14
   3159e:	73 1e                	jae    315be <core::fmt::Formatter::pad+0x18e>
   315a0:	31 c9                	xor    %ecx,%ecx
   315a2:	4c 89 e8             	mov    %r13,%rax
   315a5:	e9 95 01 00 00       	jmpq   3173f <core::fmt::Formatter::pad+0x30f>
   315aa:	49 8b 47 08          	mov    0x8(%r15),%rax
   315ae:	48 85 c0             	test   %rax,%rax
   315b1:	0f 84 d3 01 00 00    	je     3178a <core::fmt::Formatter::pad+0x35a>
   315b7:	31 d2                	xor    %edx,%edx
   315b9:	e9 9d 03 00 00       	jmpq   3195b <core::fmt::Formatter::pad+0x52b>
   315be:	4c 89 f0             	mov    %r14,%rax
   315c1:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
   315c5:	48 8d 48 fc          	lea    -0x4(%rax),%rcx
   315c9:	48 89 ca             	mov    %rcx,%rdx
   315cc:	48 c1 ea 02          	shr    $0x2,%rdx
   315d0:	48 83 c2 01          	add    $0x1,%rdx
   315d4:	48 85 c9             	test   %rcx,%rcx
   315d7:	0f 84 28 04 00 00    	je     31a05 <core::fmt::Formatter::pad+0x5d5>
   315dd:	48 89 d6             	mov    %rdx,%rsi
   315e0:	48 83 e6 fe          	and    $0xfffffffffffffffe,%rsi
   315e4:	48 f7 de             	neg    %rsi
   315e7:	66 0f ef c0          	pxor   %xmm0,%xmm0
   315eb:	31 c9                	xor    %ecx,%ecx
   315ed:	66 0f 6f 15 6b 84 00 	movdqa 0x846b(%rip),%xmm2        # 39a60 <str.6+0x2740>
   315f4:	00 
   315f5:	66 0f 6f 1d 73 84 00 	movdqa 0x8473(%rip),%xmm3        # 39a70 <str.6+0x2750>
   315fc:	00 
   315fd:	66 0f 6f 25 3b 4a 00 	movdqa 0x4a3b(%rip),%xmm4        # 36040 <_fini+0x71c>
   31604:	00 
   31605:	66 0f ef c9          	pxor   %xmm1,%xmm1
   31609:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   31610:	41 0f b7 7c 0d 00    	movzwl 0x0(%r13,%rcx,1),%edi
   31616:	66 0f 6e ef          	movd   %edi,%xmm5
   3161a:	41 0f b7 7c 0d 02    	movzwl 0x2(%r13,%rcx,1),%edi
   31620:	66 0f 6e f7          	movd   %edi,%xmm6
   31624:	66 0f db ea          	pand   %xmm2,%xmm5
   31628:	66 0f db f2          	pand   %xmm2,%xmm6
   3162c:	66 0f 74 eb          	pcmpeqb %xmm3,%xmm5
   31630:	66 0f 60 ed          	punpcklbw %xmm5,%xmm5
   31634:	66 0f 61 ed          	punpcklwd %xmm5,%xmm5
   31638:	66 0f 70 ed d4       	pshufd $0xd4,%xmm5,%xmm5
   3163d:	66 0f db ec          	pand   %xmm4,%xmm5
   31641:	66 0f d4 e8          	paddq  %xmm0,%xmm5
   31645:	66 0f 74 f3          	pcmpeqb %xmm3,%xmm6
   31649:	66 0f 60 f6          	punpcklbw %xmm6,%xmm6
   3164d:	66 0f 61 f6          	punpcklwd %xmm6,%xmm6
   31651:	66 0f 70 f6 d4       	pshufd $0xd4,%xmm6,%xmm6
   31656:	66 0f db f4          	pand   %xmm4,%xmm6
   3165a:	66 0f d4 f1          	paddq  %xmm1,%xmm6
   3165e:	41 0f b7 7c 0d 04    	movzwl 0x4(%r13,%rcx,1),%edi
   31664:	66 0f 6e c7          	movd   %edi,%xmm0
   31668:	41 0f b7 7c 0d 06    	movzwl 0x6(%r13,%rcx,1),%edi
   3166e:	66 0f 6e cf          	movd   %edi,%xmm1
   31672:	66 0f db c2          	pand   %xmm2,%xmm0
   31676:	66 0f db ca          	pand   %xmm2,%xmm1
   3167a:	66 0f 74 c3          	pcmpeqb %xmm3,%xmm0
   3167e:	66 0f 60 c0          	punpcklbw %xmm0,%xmm0
   31682:	66 0f 61 c0          	punpcklwd %xmm0,%xmm0
   31686:	66 0f 70 c0 d4       	pshufd $0xd4,%xmm0,%xmm0
   3168b:	66 0f db c4          	pand   %xmm4,%xmm0
   3168f:	66 0f d4 c5          	paddq  %xmm5,%xmm0
   31693:	66 0f 74 cb          	pcmpeqb %xmm3,%xmm1
   31697:	66 0f 60 c9          	punpcklbw %xmm1,%xmm1
   3169b:	66 0f 61 c9          	punpcklwd %xmm1,%xmm1
   3169f:	66 0f 70 c9 d4       	pshufd $0xd4,%xmm1,%xmm1
   316a4:	66 0f db cc          	pand   %xmm4,%xmm1
   316a8:	66 0f d4 ce          	paddq  %xmm6,%xmm1
   316ac:	48 83 c1 08          	add    $0x8,%rcx
   316b0:	48 83 c6 02          	add    $0x2,%rsi
   316b4:	0f 85 56 ff ff ff    	jne    31610 <core::fmt::Formatter::pad+0x1e0>
   316ba:	f6 c2 01             	test   $0x1,%dl
   316bd:	74 66                	je     31725 <core::fmt::Formatter::pad+0x2f5>
   316bf:	41 0f b7 54 0d 02    	movzwl 0x2(%r13,%rcx,1),%edx
   316c5:	66 0f 6e d2          	movd   %edx,%xmm2
   316c9:	66 0f 6f 1d 8f 83 00 	movdqa 0x838f(%rip),%xmm3        # 39a60 <str.6+0x2740>
   316d0:	00 
   316d1:	66 0f db d3          	pand   %xmm3,%xmm2
   316d5:	66 0f 6f 25 93 83 00 	movdqa 0x8393(%rip),%xmm4        # 39a70 <str.6+0x2750>
   316dc:	00 
   316dd:	66 0f 74 d4          	pcmpeqb %xmm4,%xmm2
   316e1:	66 0f 60 d2          	punpcklbw %xmm2,%xmm2
   316e5:	66 0f 61 d2          	punpcklwd %xmm2,%xmm2
   316e9:	66 0f 70 d2 d4       	pshufd $0xd4,%xmm2,%xmm2
   316ee:	66 0f 6f 2d 4a 49 00 	movdqa 0x494a(%rip),%xmm5        # 36040 <_fini+0x71c>
   316f5:	00 
   316f6:	66 0f db d5          	pand   %xmm5,%xmm2
   316fa:	66 0f d4 ca          	paddq  %xmm2,%xmm1
   316fe:	41 0f b7 4c 0d 00    	movzwl 0x0(%r13,%rcx,1),%ecx
   31704:	66 0f 6e d1          	movd   %ecx,%xmm2
   31708:	66 0f db d3          	pand   %xmm3,%xmm2
   3170c:	66 0f 74 d4          	pcmpeqb %xmm4,%xmm2
   31710:	66 0f 60 d2          	punpcklbw %xmm2,%xmm2
   31714:	66 0f 61 d2          	punpcklwd %xmm2,%xmm2
   31718:	66 0f 70 d2 d4       	pshufd $0xd4,%xmm2,%xmm2
   3171d:	66 0f db d5          	pand   %xmm5,%xmm2
   31721:	66 0f d4 c2          	paddq  %xmm2,%xmm0
   31725:	66 0f d4 c1          	paddq  %xmm1,%xmm0
   31729:	66 0f 70 c8 4e       	pshufd $0x4e,%xmm0,%xmm1
   3172e:	66 0f d4 c8          	paddq  %xmm0,%xmm1
   31732:	66 48 0f 7e c9       	movq   %xmm1,%rcx
   31737:	49 39 c6             	cmp    %rax,%r14
   3173a:	74 2f                	je     3176b <core::fmt::Formatter::pad+0x33b>
   3173c:	4c 01 e8             	add    %r13,%rax
   3173f:	4b 8d 14 2e          	lea    (%r14,%r13,1),%rdx
   31743:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3174a:	00 00 00 
   3174d:	0f 1f 00             	nopl   (%rax)
   31750:	0f b6 18             	movzbl (%rax),%ebx
   31753:	48 83 c0 01          	add    $0x1,%rax
   31757:	80 e3 c0             	and    $0xc0,%bl
   3175a:	31 f6                	xor    %esi,%esi
   3175c:	80 fb 80             	cmp    $0x80,%bl
   3175f:	40 0f 94 c6          	sete   %sil
   31763:	48 01 f1             	add    %rsi,%rcx
   31766:	48 39 c2             	cmp    %rax,%rdx
   31769:	75 e5                	jne    31750 <core::fmt::Formatter::pad+0x320>
   3176b:	4c 89 f2             	mov    %r14,%rdx
   3176e:	48 29 ca             	sub    %rcx,%rdx
   31771:	49 8b 47 08          	mov    0x8(%r15),%rax
   31775:	48 39 c2             	cmp    %rax,%rdx
   31778:	73 10                	jae    3178a <core::fmt::Formatter::pad+0x35a>
   3177a:	49 83 fe 03          	cmp    $0x3,%r14
   3177e:	77 2c                	ja     317ac <core::fmt::Formatter::pad+0x37c>
   31780:	31 d2                	xor    %edx,%edx
   31782:	4c 89 e9             	mov    %r13,%rcx
   31785:	e9 a6 01 00 00       	jmpq   31930 <core::fmt::Formatter::pad+0x500>
   3178a:	49 8b 7f 20          	mov    0x20(%r15),%rdi
   3178e:	49 8b 47 28          	mov    0x28(%r15),%rax
   31792:	48 8b 40 18          	mov    0x18(%rax),%rax
   31796:	4c 89 ee             	mov    %r13,%rsi
   31799:	4c 89 f2             	mov    %r14,%rdx
   3179c:	48 83 c4 08          	add    $0x8,%rsp
   317a0:	5b                   	pop    %rbx
   317a1:	41 5c                	pop    %r12
   317a3:	41 5d                	pop    %r13
   317a5:	41 5e                	pop    %r14
   317a7:	41 5f                	pop    %r15
   317a9:	5d                   	pop    %rbp
   317aa:	ff e0                	jmpq   *%rax
   317ac:	4c 89 f1             	mov    %r14,%rcx
   317af:	48 83 e1 fc          	and    $0xfffffffffffffffc,%rcx
   317b3:	48 8d 51 fc          	lea    -0x4(%rcx),%rdx
   317b7:	48 89 d6             	mov    %rdx,%rsi
   317ba:	48 c1 ee 02          	shr    $0x2,%rsi
   317be:	48 83 c6 01          	add    $0x1,%rsi
   317c2:	48 85 d2             	test   %rdx,%rdx
   317c5:	0f 84 8c 02 00 00    	je     31a57 <core::fmt::Formatter::pad+0x627>
   317cb:	48 89 f7             	mov    %rsi,%rdi
   317ce:	48 83 e7 fe          	and    $0xfffffffffffffffe,%rdi
   317d2:	48 f7 df             	neg    %rdi
   317d5:	66 0f ef c0          	pxor   %xmm0,%xmm0
   317d9:	31 d2                	xor    %edx,%edx
   317db:	66 0f 6f 15 7d 82 00 	movdqa 0x827d(%rip),%xmm2        # 39a60 <str.6+0x2740>
   317e2:	00 
   317e3:	66 0f 6f 1d 85 82 00 	movdqa 0x8285(%rip),%xmm3        # 39a70 <str.6+0x2750>
   317ea:	00 
   317eb:	66 0f 6f 25 4d 48 00 	movdqa 0x484d(%rip),%xmm4        # 36040 <_fini+0x71c>
   317f2:	00 
   317f3:	66 0f ef c9          	pxor   %xmm1,%xmm1
   317f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   317fe:	00 00 
   31800:	41 0f b7 6c 15 00    	movzwl 0x0(%r13,%rdx,1),%ebp
   31806:	66 0f 6e ed          	movd   %ebp,%xmm5
   3180a:	41 0f b7 6c 15 02    	movzwl 0x2(%r13,%rdx,1),%ebp
   31810:	66 0f 6e f5          	movd   %ebp,%xmm6
   31814:	66 0f db ea          	pand   %xmm2,%xmm5
   31818:	66 0f db f2          	pand   %xmm2,%xmm6
   3181c:	66 0f 74 eb          	pcmpeqb %xmm3,%xmm5
   31820:	66 0f 60 ed          	punpcklbw %xmm5,%xmm5
   31824:	66 0f 61 ed          	punpcklwd %xmm5,%xmm5
   31828:	66 0f 70 ed d4       	pshufd $0xd4,%xmm5,%xmm5
   3182d:	66 0f db ec          	pand   %xmm4,%xmm5
   31831:	66 0f d4 e8          	paddq  %xmm0,%xmm5
   31835:	66 0f 74 f3          	pcmpeqb %xmm3,%xmm6
   31839:	66 0f 60 f6          	punpcklbw %xmm6,%xmm6
   3183d:	66 0f 61 f6          	punpcklwd %xmm6,%xmm6
   31841:	66 0f 70 f6 d4       	pshufd $0xd4,%xmm6,%xmm6
   31846:	66 0f db f4          	pand   %xmm4,%xmm6
   3184a:	66 0f d4 f1          	paddq  %xmm1,%xmm6
   3184e:	41 0f b7 6c 15 04    	movzwl 0x4(%r13,%rdx,1),%ebp
   31854:	66 0f 6e c5          	movd   %ebp,%xmm0
   31858:	41 0f b7 6c 15 06    	movzwl 0x6(%r13,%rdx,1),%ebp
   3185e:	66 0f 6e cd          	movd   %ebp,%xmm1
   31862:	66 0f db c2          	pand   %xmm2,%xmm0
   31866:	66 0f db ca          	pand   %xmm2,%xmm1
   3186a:	66 0f 74 c3          	pcmpeqb %xmm3,%xmm0
   3186e:	66 0f 60 c0          	punpcklbw %xmm0,%xmm0
   31872:	66 0f 61 c0          	punpcklwd %xmm0,%xmm0
   31876:	66 0f 70 c0 d4       	pshufd $0xd4,%xmm0,%xmm0
   3187b:	66 0f db c4          	pand   %xmm4,%xmm0
   3187f:	66 0f d4 c5          	paddq  %xmm5,%xmm0
   31883:	66 0f 74 cb          	pcmpeqb %xmm3,%xmm1
   31887:	66 0f 60 c9          	punpcklbw %xmm1,%xmm1
   3188b:	66 0f 61 c9          	punpcklwd %xmm1,%xmm1
   3188f:	66 0f 70 c9 d4       	pshufd $0xd4,%xmm1,%xmm1
   31894:	66 0f db cc          	pand   %xmm4,%xmm1
   31898:	66 0f d4 ce          	paddq  %xmm6,%xmm1
   3189c:	48 83 c2 08          	add    $0x8,%rdx
   318a0:	48 83 c7 02          	add    $0x2,%rdi
   318a4:	0f 85 56 ff ff ff    	jne    31800 <core::fmt::Formatter::pad+0x3d0>
   318aa:	40 f6 c6 01          	test   $0x1,%sil
   318ae:	74 66                	je     31916 <core::fmt::Formatter::pad+0x4e6>
   318b0:	41 0f b7 74 15 02    	movzwl 0x2(%r13,%rdx,1),%esi
   318b6:	66 0f 6e d6          	movd   %esi,%xmm2
   318ba:	66 0f 6f 1d 9e 81 00 	movdqa 0x819e(%rip),%xmm3        # 39a60 <str.6+0x2740>
   318c1:	00 
   318c2:	66 0f db d3          	pand   %xmm3,%xmm2
   318c6:	66 0f 6f 25 a2 81 00 	movdqa 0x81a2(%rip),%xmm4        # 39a70 <str.6+0x2750>
   318cd:	00 
   318ce:	66 0f 74 d4          	pcmpeqb %xmm4,%xmm2
   318d2:	66 0f 60 d2          	punpcklbw %xmm2,%xmm2
   318d6:	66 0f 61 d2          	punpcklwd %xmm2,%xmm2
   318da:	66 0f 70 d2 d4       	pshufd $0xd4,%xmm2,%xmm2
   318df:	66 0f 6f 2d 59 47 00 	movdqa 0x4759(%rip),%xmm5        # 36040 <_fini+0x71c>
   318e6:	00 
   318e7:	66 0f db d5          	pand   %xmm5,%xmm2
   318eb:	66 0f d4 ca          	paddq  %xmm2,%xmm1
   318ef:	41 0f b7 54 15 00    	movzwl 0x0(%r13,%rdx,1),%edx
   318f5:	66 0f 6e d2          	movd   %edx,%xmm2
   318f9:	66 0f db d3          	pand   %xmm3,%xmm2
   318fd:	66 0f 74 d4          	pcmpeqb %xmm4,%xmm2
   31901:	66 0f 60 d2          	punpcklbw %xmm2,%xmm2
   31905:	66 0f 61 d2          	punpcklwd %xmm2,%xmm2
   31909:	66 0f 70 d2 d4       	pshufd $0xd4,%xmm2,%xmm2
   3190e:	66 0f db d5          	pand   %xmm5,%xmm2
   31912:	66 0f d4 c2          	paddq  %xmm2,%xmm0
   31916:	66 0f d4 c1          	paddq  %xmm1,%xmm0
   3191a:	66 0f 70 c8 4e       	pshufd $0x4e,%xmm0,%xmm1
   3191f:	66 0f d4 c8          	paddq  %xmm0,%xmm1
   31923:	66 48 0f 7e ca       	movq   %xmm1,%rdx
   31928:	49 39 ce             	cmp    %rcx,%r14
   3192b:	74 2e                	je     3195b <core::fmt::Formatter::pad+0x52b>
   3192d:	4c 01 e9             	add    %r13,%rcx
   31930:	4b 8d 34 2e          	lea    (%r14,%r13,1),%rsi
   31934:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3193b:	00 00 00 
   3193e:	66 90                	xchg   %ax,%ax
   31940:	0f b6 19             	movzbl (%rcx),%ebx
   31943:	48 83 c1 01          	add    $0x1,%rcx
   31947:	80 e3 c0             	and    $0xc0,%bl
   3194a:	31 ff                	xor    %edi,%edi
   3194c:	80 fb 80             	cmp    $0x80,%bl
   3194f:	40 0f 94 c7          	sete   %dil
   31953:	48 01 fa             	add    %rdi,%rdx
   31956:	48 39 ce             	cmp    %rcx,%rsi
   31959:	75 e5                	jne    31940 <core::fmt::Formatter::pad+0x510>
   3195b:	4c 29 f2             	sub    %r14,%rdx
   3195e:	48 01 c2             	add    %rax,%rdx
   31961:	41 8b 47 38          	mov    0x38(%r15),%eax
   31965:	31 db                	xor    %ebx,%ebx
   31967:	3c 03                	cmp    $0x3,%al
   31969:	0f 44 c3             	cmove  %ebx,%eax
   3196c:	0f b6 c0             	movzbl %al,%eax
   3196f:	48 8d 0d 4a 83 00 00 	lea    0x834a(%rip),%rcx        # 39cc0 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x170>
   31976:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   3197a:	48 01 c8             	add    %rcx,%rax
   3197d:	48 89 d5             	mov    %rdx,%rbp
   31980:	ff e0                	jmpq   *%rax
   31982:	31 ed                	xor    %ebp,%ebp
   31984:	48 89 d3             	mov    %rdx,%rbx
   31987:	eb 10                	jmp    31999 <core::fmt::Formatter::pad+0x569>
   31989:	48 89 d3             	mov    %rdx,%rbx
   3198c:	48 d1 eb             	shr    %rbx
   3198f:	48 83 c2 01          	add    $0x1,%rdx
   31993:	48 d1 ea             	shr    %rdx
   31996:	48 89 d5             	mov    %rdx,%rbp
   31999:	48 83 c3 01          	add    $0x1,%rbx
   3199d:	0f 1f 00             	nopl   (%rax)
   319a0:	48 83 c3 ff          	add    $0xffffffffffffffff,%rbx
   319a4:	74 18                	je     319be <core::fmt::Formatter::pad+0x58e>
   319a6:	49 8b 7f 20          	mov    0x20(%r15),%rdi
   319aa:	49 8b 47 28          	mov    0x28(%r15),%rax
   319ae:	41 8b 77 34          	mov    0x34(%r15),%esi
   319b2:	ff 50 20             	callq  *0x20(%rax)
   319b5:	84 c0                	test   %al,%al
   319b7:	74 e7                	je     319a0 <core::fmt::Formatter::pad+0x570>
   319b9:	41 b6 01             	mov    $0x1,%r14b
   319bc:	eb 62                	jmp    31a20 <core::fmt::Formatter::pad+0x5f0>
   319be:	45 8b 67 34          	mov    0x34(%r15),%r12d
   319c2:	49 8b 7f 20          	mov    0x20(%r15),%rdi
   319c6:	49 8b 47 28          	mov    0x28(%r15),%rax
   319ca:	4c 89 ee             	mov    %r13,%rsi
   319cd:	4c 89 f2             	mov    %r14,%rdx
   319d0:	ff 50 18             	callq  *0x18(%rax)
   319d3:	41 b6 01             	mov    $0x1,%r14b
   319d6:	84 c0                	test   %al,%al
   319d8:	75 46                	jne    31a20 <core::fmt::Formatter::pad+0x5f0>
   319da:	4d 8b 6f 20          	mov    0x20(%r15),%r13
   319de:	49 8b 5f 28          	mov    0x28(%r15),%rbx
   319e2:	48 83 c5 01          	add    $0x1,%rbp
   319e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   319ed:	00 00 00 
   319f0:	48 83 c5 ff          	add    $0xffffffffffffffff,%rbp
   319f4:	74 27                	je     31a1d <core::fmt::Formatter::pad+0x5ed>
   319f6:	4c 89 ef             	mov    %r13,%rdi
   319f9:	44 89 e6             	mov    %r12d,%esi
   319fc:	ff 53 20             	callq  *0x20(%rbx)
   319ff:	84 c0                	test   %al,%al
   31a01:	74 ed                	je     319f0 <core::fmt::Formatter::pad+0x5c0>
   31a03:	eb 1b                	jmp    31a20 <core::fmt::Formatter::pad+0x5f0>
   31a05:	66 0f ef c0          	pxor   %xmm0,%xmm0
   31a09:	31 c9                	xor    %ecx,%ecx
   31a0b:	66 0f ef c9          	pxor   %xmm1,%xmm1
   31a0f:	f6 c2 01             	test   $0x1,%dl
   31a12:	0f 85 a7 fc ff ff    	jne    316bf <core::fmt::Formatter::pad+0x28f>
   31a18:	e9 08 fd ff ff       	jmpq   31725 <core::fmt::Formatter::pad+0x2f5>
   31a1d:	45 31 f6             	xor    %r14d,%r14d
   31a20:	44 89 f0             	mov    %r14d,%eax
   31a23:	48 83 c4 08          	add    $0x8,%rsp
   31a27:	5b                   	pop    %rbx
   31a28:	41 5c                	pop    %r12
   31a2a:	41 5d                	pop    %r13
   31a2c:	41 5e                	pop    %r14
   31a2e:	41 5f                	pop    %r15
   31a30:	5d                   	pop    %rbp
   31a31:	c3                   	retq   
   31a32:	31 d2                	xor    %edx,%edx
   31a34:	4c 89 cb             	mov    %r9,%rbx
   31a37:	3c e0                	cmp    $0xe0,%al
   31a39:	0f 82 fe fa ff ff    	jb     3153d <core::fmt::Formatter::pad+0x10d>
   31a3f:	4c 39 cb             	cmp    %r9,%rbx
   31a42:	74 2c                	je     31a70 <core::fmt::Formatter::pad+0x640>
   31a44:	0f b6 33             	movzbl (%rbx),%esi
   31a47:	48 83 c3 01          	add    $0x1,%rbx
   31a4b:	83 e6 3f             	and    $0x3f,%esi
   31a4e:	3c f0                	cmp    $0xf0,%al
   31a50:	73 2b                	jae    31a7d <core::fmt::Formatter::pad+0x64d>
   31a52:	e9 e6 fa ff ff       	jmpq   3153d <core::fmt::Formatter::pad+0x10d>
   31a57:	66 0f ef c0          	pxor   %xmm0,%xmm0
   31a5b:	31 d2                	xor    %edx,%edx
   31a5d:	66 0f ef c9          	pxor   %xmm1,%xmm1
   31a61:	40 f6 c6 01          	test   $0x1,%sil
   31a65:	0f 85 45 fe ff ff    	jne    318b0 <core::fmt::Formatter::pad+0x480>
   31a6b:	e9 a6 fe ff ff       	jmpq   31916 <core::fmt::Formatter::pad+0x4e6>
   31a70:	31 f6                	xor    %esi,%esi
   31a72:	4c 89 cb             	mov    %r9,%rbx
   31a75:	3c f0                	cmp    $0xf0,%al
   31a77:	0f 82 c0 fa ff ff    	jb     3153d <core::fmt::Formatter::pad+0x10d>
   31a7d:	09 d6                	or     %edx,%esi
   31a7f:	4c 39 cb             	cmp    %r9,%rbx
   31a82:	74 08                	je     31a8c <core::fmt::Formatter::pad+0x65c>
   31a84:	0f b6 13             	movzbl (%rbx),%edx
   31a87:	83 e2 3f             	and    $0x3f,%edx
   31a8a:	eb 02                	jmp    31a8e <core::fmt::Formatter::pad+0x65e>
   31a8c:	31 d2                	xor    %edx,%edx
   31a8e:	83 e0 07             	and    $0x7,%eax
   31a91:	c1 e0 12             	shl    $0x12,%eax
   31a94:	c1 e6 06             	shl    $0x6,%esi
   31a97:	09 c6                	or     %eax,%esi
   31a99:	09 d6                	or     %edx,%esi
   31a9b:	81 fe 00 00 11 00    	cmp    $0x110000,%esi
   31aa1:	0f 84 e4 fa ff ff    	je     3158b <core::fmt::Formatter::pad+0x15b>
   31aa7:	e9 91 fa ff ff       	jmpq   3153d <core::fmt::Formatter::pad+0x10d>
   31aac:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000031ab0 <core::fmt::Formatter::write_str>:
   31ab0:	48 8b 47 20          	mov    0x20(%rdi),%rax
   31ab4:	48 8b 4f 28          	mov    0x28(%rdi),%rcx
   31ab8:	48 8b 49 18          	mov    0x18(%rcx),%rcx
   31abc:	48 89 c7             	mov    %rax,%rdi
   31abf:	ff e1                	jmpq   *%rcx
   31ac1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   31ac8:	00 00 00 
   31acb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000031ad0 <core::fmt::Formatter::write_fmt>:
   31ad0:	48 83 ec 38          	sub    $0x38,%rsp
   31ad4:	48 8b 47 20          	mov    0x20(%rdi),%rax
   31ad8:	48 8b 4f 28          	mov    0x28(%rdi),%rcx
   31adc:	0f 10 06             	movups (%rsi),%xmm0
   31adf:	0f 10 4e 10          	movups 0x10(%rsi),%xmm1
   31ae3:	0f 10 56 20          	movups 0x20(%rsi),%xmm2
   31ae7:	0f 29 54 24 20       	movaps %xmm2,0x20(%rsp)
   31aec:	0f 29 4c 24 10       	movaps %xmm1,0x10(%rsp)
   31af1:	0f 29 04 24          	movaps %xmm0,(%rsp)
   31af5:	48 89 e2             	mov    %rsp,%rdx
   31af8:	48 89 c7             	mov    %rax,%rdi
   31afb:	48 89 ce             	mov    %rcx,%rsi
   31afe:	ff 15 f4 42 01 00    	callq  *0x142f4(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x470>
   31b04:	48 83 c4 38          	add    $0x38,%rsp
   31b08:	c3                   	retq   
   31b09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000031b10 <core::fmt::Formatter::alternate>:
   31b10:	8a 47 30             	mov    0x30(%rdi),%al
   31b13:	24 04                	and    $0x4,%al
   31b15:	c0 e8 02             	shr    $0x2,%al
   31b18:	c3                   	retq   
   31b19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000031b20 <core::fmt::Formatter::debug_lower_hex>:
   31b20:	8a 47 30             	mov    0x30(%rdi),%al
   31b23:	24 10                	and    $0x10,%al
   31b25:	c0 e8 04             	shr    $0x4,%al
   31b28:	c3                   	retq   
   31b29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000031b30 <core::fmt::Formatter::debug_upper_hex>:
   31b30:	8a 47 30             	mov    0x30(%rdi),%al
   31b33:	24 20                	and    $0x20,%al
   31b35:	c0 e8 05             	shr    $0x5,%al
   31b38:	c3                   	retq   
   31b39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000031b40 <core::fmt::Formatter::debug_struct>:
   31b40:	53                   	push   %rbx
   31b41:	48 89 fb             	mov    %rdi,%rbx
   31b44:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
   31b48:	48 8b 43 28          	mov    0x28(%rbx),%rax
   31b4c:	ff 50 18             	callq  *0x18(%rax)
   31b4f:	0f b6 d0             	movzbl %al,%edx
   31b52:	48 89 d8             	mov    %rbx,%rax
   31b55:	5b                   	pop    %rbx
   31b56:	c3                   	retq   
   31b57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   31b5e:	00 00 

0000000000031b60 <core::fmt::Formatter::debug_tuple>:
   31b60:	41 57                	push   %r15
   31b62:	41 56                	push   %r14
   31b64:	53                   	push   %rbx
   31b65:	49 89 ce             	mov    %rcx,%r14
   31b68:	49 89 f7             	mov    %rsi,%r15
   31b6b:	48 89 fb             	mov    %rdi,%rbx
   31b6e:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
   31b72:	48 8b 46 28          	mov    0x28(%rsi),%rax
   31b76:	48 89 d6             	mov    %rdx,%rsi
   31b79:	48 89 ca             	mov    %rcx,%rdx
   31b7c:	ff 50 18             	callq  *0x18(%rax)
   31b7f:	4d 85 f6             	test   %r14,%r14
   31b82:	4c 89 3b             	mov    %r15,(%rbx)
   31b85:	88 43 10             	mov    %al,0x10(%rbx)
   31b88:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
   31b8f:	00 
   31b90:	0f 94 43 11          	sete   0x11(%rbx)
   31b94:	48 89 d8             	mov    %rbx,%rax
   31b97:	5b                   	pop    %rbx
   31b98:	41 5e                	pop    %r14
   31b9a:	41 5f                	pop    %r15
   31b9c:	c3                   	retq   
   31b9d:	0f 1f 00             	nopl   (%rax)

0000000000031ba0 <core::fmt::Formatter::debug_list>:
   31ba0:	53                   	push   %rbx
   31ba1:	48 89 fb             	mov    %rdi,%rbx
   31ba4:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
   31ba8:	48 8b 43 28          	mov    0x28(%rbx),%rax
   31bac:	48 8d 35 ad 83 00 00 	lea    0x83ad(%rip),%rsi        # 39f60 <str.1+0x120>
   31bb3:	ba 01 00 00 00       	mov    $0x1,%edx
   31bb8:	ff 50 18             	callq  *0x18(%rax)
   31bbb:	0f b6 d0             	movzbl %al,%edx
   31bbe:	48 89 d8             	mov    %rbx,%rax
   31bc1:	5b                   	pop    %rbx
   31bc2:	c3                   	retq   
   31bc3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   31bca:	00 00 00 
   31bcd:	0f 1f 00             	nopl   (%rax)

0000000000031bd0 <<core::fmt::Formatter as core::fmt::Write>::write_char>:
   31bd0:	48 8b 47 20          	mov    0x20(%rdi),%rax
   31bd4:	48 8b 4f 28          	mov    0x28(%rdi),%rcx
   31bd8:	48 8b 49 20          	mov    0x20(%rcx),%rcx
   31bdc:	48 89 c7             	mov    %rax,%rdi
   31bdf:	ff e1                	jmpq   *%rcx
   31be1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   31be8:	00 00 00 
   31beb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000031bf0 <<str as core::fmt::Debug>::fmt>:
   31bf0:	55                   	push   %rbp
   31bf1:	41 57                	push   %r15
   31bf3:	41 56                	push   %r14
   31bf5:	41 55                	push   %r13
   31bf7:	41 54                	push   %r12
   31bf9:	53                   	push   %rbx
   31bfa:	48 83 ec 38          	sub    $0x38,%rsp
   31bfe:	49 89 d4             	mov    %rdx,%r12
   31c01:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
   31c06:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
   31c0b:	48 8b 7a 20          	mov    0x20(%rdx),%rdi
   31c0f:	48 8b 42 28          	mov    0x28(%rdx),%rax
   31c13:	be 22 00 00 00       	mov    $0x22,%esi
   31c18:	ff 50 20             	callq  *0x20(%rax)
   31c1b:	84 c0                	test   %al,%al
   31c1d:	0f 85 62 04 00 00    	jne    32085 <<str as core::fmt::Debug>::fmt+0x495>
   31c23:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   31c28:	4d 85 c9             	test   %r9,%r9
   31c2b:	0f 84 33 04 00 00    	je     32064 <<str as core::fmt::Debug>::fmt+0x474>
   31c31:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   31c36:	4a 8d 3c 08          	lea    (%rax,%r9,1),%rdi
   31c3a:	31 ed                	xor    %ebp,%ebp
   31c3c:	49 89 c7             	mov    %rax,%r15
   31c3f:	48 89 c6             	mov    %rax,%rsi
   31c42:	31 db                	xor    %ebx,%ebx
   31c44:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
   31c49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   31c50:	49 8d 47 01          	lea    0x1(%r15),%rax
   31c54:	41 0f b6 0f          	movzbl (%r15),%ecx
   31c58:	84 c9                	test   %cl,%cl
   31c5a:	78 14                	js     31c70 <<str as core::fmt::Debug>::fmt+0x80>
   31c5c:	49 89 c7             	mov    %rax,%r15
   31c5f:	41 89 cd             	mov    %ecx,%r13d
   31c62:	e9 b9 00 00 00       	jmpq   31d20 <<str as core::fmt::Debug>::fmt+0x130>
   31c67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   31c6e:	00 00 
   31c70:	48 39 f8             	cmp    %rdi,%rax
   31c73:	74 4e                	je     31cc3 <<str as core::fmt::Debug>::fmt+0xd3>
   31c75:	45 0f b6 6f 01       	movzbl 0x1(%r15),%r13d
   31c7a:	49 83 c7 02          	add    $0x2,%r15
   31c7e:	41 83 e5 3f          	and    $0x3f,%r13d
   31c82:	4c 89 fa             	mov    %r15,%rdx
   31c85:	89 c8                	mov    %ecx,%eax
   31c87:	83 e0 1f             	and    $0x1f,%eax
   31c8a:	80 f9 df             	cmp    $0xdf,%cl
   31c8d:	76 47                	jbe    31cd6 <<str as core::fmt::Debug>::fmt+0xe6>
   31c8f:	48 39 fa             	cmp    %rdi,%rdx
   31c92:	74 4a                	je     31cde <<str as core::fmt::Debug>::fmt+0xee>
   31c94:	44 0f b6 02          	movzbl (%rdx),%r8d
   31c98:	48 83 c2 01          	add    $0x1,%rdx
   31c9c:	41 83 e0 3f          	and    $0x3f,%r8d
   31ca0:	49 89 d7             	mov    %rdx,%r15
   31ca3:	41 c1 e5 06          	shl    $0x6,%r13d
   31ca7:	45 09 c5             	or     %r8d,%r13d
   31caa:	80 f9 f0             	cmp    $0xf0,%cl
   31cad:	72 41                	jb     31cf0 <<str as core::fmt::Debug>::fmt+0x100>
   31caf:	48 39 fa             	cmp    %rdi,%rdx
   31cb2:	74 44                	je     31cf8 <<str as core::fmt::Debug>::fmt+0x108>
   31cb4:	0f b6 0a             	movzbl (%rdx),%ecx
   31cb7:	48 83 c2 01          	add    $0x1,%rdx
   31cbb:	83 e1 3f             	and    $0x3f,%ecx
   31cbe:	49 89 d7             	mov    %rdx,%r15
   31cc1:	eb 37                	jmp    31cfa <<str as core::fmt::Debug>::fmt+0x10a>
   31cc3:	45 31 ed             	xor    %r13d,%r13d
   31cc6:	49 89 c7             	mov    %rax,%r15
   31cc9:	48 89 fa             	mov    %rdi,%rdx
   31ccc:	89 c8                	mov    %ecx,%eax
   31cce:	83 e0 1f             	and    $0x1f,%eax
   31cd1:	80 f9 df             	cmp    $0xdf,%cl
   31cd4:	77 b9                	ja     31c8f <<str as core::fmt::Debug>::fmt+0x9f>
   31cd6:	c1 e0 06             	shl    $0x6,%eax
   31cd9:	41 09 c5             	or     %eax,%r13d
   31cdc:	eb 42                	jmp    31d20 <<str as core::fmt::Debug>::fmt+0x130>
   31cde:	45 31 c0             	xor    %r8d,%r8d
   31ce1:	48 89 fa             	mov    %rdi,%rdx
   31ce4:	41 c1 e5 06          	shl    $0x6,%r13d
   31ce8:	45 09 c5             	or     %r8d,%r13d
   31ceb:	80 f9 f0             	cmp    $0xf0,%cl
   31cee:	73 bf                	jae    31caf <<str as core::fmt::Debug>::fmt+0xbf>
   31cf0:	c1 e0 0c             	shl    $0xc,%eax
   31cf3:	41 09 c5             	or     %eax,%r13d
   31cf6:	eb 28                	jmp    31d20 <<str as core::fmt::Debug>::fmt+0x130>
   31cf8:	31 c9                	xor    %ecx,%ecx
   31cfa:	83 e0 07             	and    $0x7,%eax
   31cfd:	c1 e0 12             	shl    $0x12,%eax
   31d00:	41 c1 e5 06          	shl    $0x6,%r13d
   31d04:	41 09 c5             	or     %eax,%r13d
   31d07:	41 09 cd             	or     %ecx,%r13d
   31d0a:	41 81 fd 00 00 11 00 	cmp    $0x110000,%r13d
   31d11:	0f 84 19 03 00 00    	je     32030 <<str as core::fmt::Debug>::fmt+0x440>
   31d17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   31d1e:	00 00 
   31d20:	48 89 74 24 30       	mov    %rsi,0x30(%rsp)
   31d25:	41 be 02 00 00 00    	mov    $0x2,%r14d
   31d2b:	41 8d 45 f7          	lea    -0x9(%r13),%eax
   31d2f:	83 f8 1e             	cmp    $0x1e,%eax
   31d32:	77 2c                	ja     31d60 <<str as core::fmt::Debug>::fmt+0x170>
   31d34:	c7 44 24 0c 74 00 00 	movl   $0x74,0xc(%rsp)
   31d3b:	00 
   31d3c:	48 8d 0d 8d 7f 00 00 	lea    0x7f8d(%rip),%rcx        # 39cd0 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x180>
   31d43:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   31d47:	48 01 c8             	add    %rcx,%rax
   31d4a:	ff e0                	jmpq   *%rax
   31d4c:	c7 44 24 0c 6e 00 00 	movl   $0x6e,0xc(%rsp)
   31d53:	00 
   31d54:	e9 75 00 00 00       	jmpq   31dce <<str as core::fmt::Debug>::fmt+0x1de>
   31d59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   31d60:	41 83 fd 5c          	cmp    $0x5c,%r13d
   31d64:	75 0a                	jne    31d70 <<str as core::fmt::Debug>::fmt+0x180>
   31d66:	44 89 e8             	mov    %r13d,%eax
   31d69:	44 89 6c 24 0c       	mov    %r13d,0xc(%rsp)
   31d6e:	eb 5e                	jmp    31dce <<str as core::fmt::Debug>::fmt+0x1de>
   31d70:	44 89 ef             	mov    %r13d,%edi
   31d73:	ff 15 87 3f 01 00    	callq  *0x13f87(%rip)        # 45d00 <_GLOBAL_OFFSET_TABLE_+0x378>
   31d79:	84 c0                	test   %al,%al
   31d7b:	75 11                	jne    31d8e <<str as core::fmt::Debug>::fmt+0x19e>
   31d7d:	44 89 ef             	mov    %r13d,%edi
   31d80:	ff 15 5a 3c 01 00    	callq  *0x13c5a(%rip)        # 459e0 <_GLOBAL_OFFSET_TABLE_+0x58>
   31d86:	84 c0                	test   %al,%al
   31d88:	0f 85 81 02 00 00    	jne    3200f <<str as core::fmt::Debug>::fmt+0x41f>
   31d8e:	44 89 e8             	mov    %r13d,%eax
   31d91:	83 c8 01             	or     $0x1,%eax
   31d94:	0f bd c0             	bsr    %eax,%eax
   31d97:	83 f0 1c             	xor    $0x1c,%eax
   31d9a:	c1 e8 02             	shr    $0x2,%eax
   31d9d:	83 f0 07             	xor    $0x7,%eax
   31da0:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   31da5:	44 89 e9             	mov    %r13d,%ecx
   31da8:	48 b8 00 00 00 00 05 	movabs $0x500000000,%rax
   31daf:	00 00 00 
   31db2:	48 09 c1             	or     %rax,%rcx
   31db5:	48 89 0c 24          	mov    %rcx,(%rsp)
   31db9:	41 be 03 00 00 00    	mov    $0x3,%r14d
   31dbf:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   31dc4:	eb 08                	jmp    31dce <<str as core::fmt::Debug>::fmt+0x1de>
   31dc6:	c7 44 24 0c 72 00 00 	movl   $0x72,0xc(%rsp)
   31dcd:	00 
   31dce:	48 89 da             	mov    %rbx,%rdx
   31dd1:	48 29 ea             	sub    %rbp,%rdx
   31dd4:	0f 82 df 02 00 00    	jb     320b9 <<str as core::fmt::Debug>::fmt+0x4c9>
   31dda:	48 85 ed             	test   %rbp,%rbp
   31ddd:	74 1a                	je     31df9 <<str as core::fmt::Debug>::fmt+0x209>
   31ddf:	4c 39 cd             	cmp    %r9,%rbp
   31de2:	74 15                	je     31df9 <<str as core::fmt::Debug>::fmt+0x209>
   31de4:	0f 83 cf 02 00 00    	jae    320b9 <<str as core::fmt::Debug>::fmt+0x4c9>
   31dea:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   31def:	80 3c 28 bf          	cmpb   $0xbf,(%rax,%rbp,1)
   31df3:	0f 8e c0 02 00 00    	jle    320b9 <<str as core::fmt::Debug>::fmt+0x4c9>
   31df9:	48 85 db             	test   %rbx,%rbx
   31dfc:	74 1a                	je     31e18 <<str as core::fmt::Debug>::fmt+0x228>
   31dfe:	4c 39 cb             	cmp    %r9,%rbx
   31e01:	74 15                	je     31e18 <<str as core::fmt::Debug>::fmt+0x228>
   31e03:	0f 83 b0 02 00 00    	jae    320b9 <<str as core::fmt::Debug>::fmt+0x4c9>
   31e09:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   31e0e:	80 3c 18 bf          	cmpb   $0xbf,(%rax,%rbx,1)
   31e12:	0f 8e a1 02 00 00    	jle    320b9 <<str as core::fmt::Debug>::fmt+0x4c9>
   31e18:	48 03 6c 24 10       	add    0x10(%rsp),%rbp
   31e1d:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi
   31e22:	49 8b 44 24 28       	mov    0x28(%r12),%rax
   31e27:	48 89 ee             	mov    %rbp,%rsi
   31e2a:	ff 50 18             	callq  *0x18(%rax)
   31e2d:	84 c0                	test   %al,%al
   31e2f:	48 8d 2d 16 7f 00 00 	lea    0x7f16(%rip),%rbp        # 39d4c <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x1fc>
   31e36:	74 24                	je     31e5c <<str as core::fmt::Debug>::fmt+0x26c>
   31e38:	e9 48 02 00 00       	jmpq   32085 <<str as core::fmt::Debug>::fmt+0x495>
   31e3d:	0f 1f 00             	nopl   (%rax)
   31e40:	45 31 f6             	xor    %r14d,%r14d
   31e43:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   31e47:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi
   31e4c:	49 8b 44 24 28       	mov    0x28(%r12),%rax
   31e51:	ff 50 20             	callq  *0x20(%rax)
   31e54:	84 c0                	test   %al,%al
   31e56:	0f 85 29 02 00 00    	jne    32085 <<str as core::fmt::Debug>::fmt+0x495>
   31e5c:	be 5c 00 00 00       	mov    $0x5c,%esi
   31e61:	44 89 f0             	mov    %r14d,%eax
   31e64:	48 63 44 85 00       	movslq 0x0(%rbp,%rax,4),%rax
   31e69:	48 01 e8             	add    %rbp,%rax
   31e6c:	41 be 01 00 00 00    	mov    $0x1,%r14d
   31e72:	ff e0                	jmpq   *%rax
   31e74:	48 8b 04 24          	mov    (%rsp),%rax
   31e78:	48 c1 e8 20          	shr    $0x20,%rax
   31e7c:	0f b6 c0             	movzbl %al,%eax
   31e7f:	48 8d 0d d6 7e 00 00 	lea    0x7ed6(%rip),%rcx        # 39d5c <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x20c>
   31e86:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   31e8a:	48 01 c8             	add    %rcx,%rax
   31e8d:	ff e0                	jmpq   *%rax
   31e8f:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   31e96:	48 21 44 24 18       	and    %rax,0x18(%rsp)
   31e9b:	48 b8 ff ff ff ff 00 	movabs $0xffffff00ffffffff,%rax
   31ea2:	ff ff ff 
   31ea5:	48 21 04 24          	and    %rax,(%rsp)
   31ea9:	41 be 03 00 00 00    	mov    $0x3,%r14d
   31eaf:	be 7d 00 00 00       	mov    $0x7d,%esi
   31eb4:	eb 91                	jmp    31e47 <<str as core::fmt::Debug>::fmt+0x257>
   31eb6:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   31ebd:	48 21 44 24 18       	and    %rax,0x18(%rsp)
   31ec2:	48 b8 ff ff ff ff 00 	movabs $0xffffff00ffffffff,%rax
   31ec9:	ff ff ff 
   31ecc:	48 8b 0c 24          	mov    (%rsp),%rcx
   31ed0:	48 21 c1             	and    %rax,%rcx
   31ed3:	48 b8 00 00 00 00 03 	movabs $0x300000000,%rax
   31eda:	00 00 00 
   31edd:	48 09 c1             	or     %rax,%rcx
   31ee0:	48 89 0c 24          	mov    %rcx,(%rsp)
   31ee4:	41 be 03 00 00 00    	mov    $0x3,%r14d
   31eea:	be 75 00 00 00       	mov    $0x75,%esi
   31eef:	e9 53 ff ff ff       	jmpq   31e47 <<str as core::fmt::Debug>::fmt+0x257>
   31ef4:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   31ef9:	8d 0c 95 00 00 00 00 	lea    0x0(,%rdx,4),%ecx
   31f00:	48 8b 3c 24          	mov    (%rsp),%rdi
   31f04:	89 f8                	mov    %edi,%eax
   31f06:	d3 e8                	shr    %cl,%eax
   31f08:	83 e0 0f             	and    $0xf,%eax
   31f0b:	3c 0a                	cmp    $0xa,%al
   31f0d:	be 57 00 00 00       	mov    $0x57,%esi
   31f12:	b9 30 00 00 00       	mov    $0x30,%ecx
   31f17:	0f 42 f1             	cmovb  %ecx,%esi
   31f1a:	01 c6                	add    %eax,%esi
   31f1c:	48 85 d2             	test   %rdx,%rdx
   31f1f:	74 7c                	je     31f9d <<str as core::fmt::Debug>::fmt+0x3ad>
   31f21:	48 83 c2 ff          	add    $0xffffffffffffffff,%rdx
   31f25:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   31f2a:	e9 9b 00 00 00       	jmpq   31fca <<str as core::fmt::Debug>::fmt+0x3da>
   31f2f:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   31f36:	48 21 44 24 18       	and    %rax,0x18(%rsp)
   31f3b:	48 b8 ff ff ff ff 00 	movabs $0xffffff00ffffffff,%rax
   31f42:	ff ff ff 
   31f45:	48 8b 0c 24          	mov    (%rsp),%rcx
   31f49:	48 21 c1             	and    %rax,%rcx
   31f4c:	48 b8 00 00 00 00 02 	movabs $0x200000000,%rax
   31f53:	00 00 00 
   31f56:	48 09 c1             	or     %rax,%rcx
   31f59:	48 89 0c 24          	mov    %rcx,(%rsp)
   31f5d:	41 be 03 00 00 00    	mov    $0x3,%r14d
   31f63:	be 7b 00 00 00       	mov    $0x7b,%esi
   31f68:	e9 da fe ff ff       	jmpq   31e47 <<str as core::fmt::Debug>::fmt+0x257>
   31f6d:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   31f74:	48 21 44 24 18       	and    %rax,0x18(%rsp)
   31f79:	48 b8 ff ff ff ff 00 	movabs $0xffffff00ffffffff,%rax
   31f80:	ff ff ff 
   31f83:	48 8b 0c 24          	mov    (%rsp),%rcx
   31f87:	48 21 c1             	and    %rax,%rcx
   31f8a:	48 b8 00 00 00 00 04 	movabs $0x400000000,%rax
   31f91:	00 00 00 
   31f94:	48 09 c1             	or     %rax,%rcx
   31f97:	48 89 0c 24          	mov    %rcx,(%rsp)
   31f9b:	eb 2d                	jmp    31fca <<str as core::fmt::Debug>::fmt+0x3da>
   31f9d:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   31fa4:	48 21 c2             	and    %rax,%rdx
   31fa7:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   31fac:	48 b8 ff ff ff ff 00 	movabs $0xffffff00ffffffff,%rax
   31fb3:	ff ff ff 
   31fb6:	48 21 c7             	and    %rax,%rdi
   31fb9:	48 b8 00 00 00 00 01 	movabs $0x100000000,%rax
   31fc0:	00 00 00 
   31fc3:	48 09 c7             	or     %rax,%rdi
   31fc6:	48 89 3c 24          	mov    %rdi,(%rsp)
   31fca:	41 be 03 00 00 00    	mov    $0x3,%r14d
   31fd0:	e9 72 fe ff ff       	jmpq   31e47 <<str as core::fmt::Debug>::fmt+0x257>
   31fd5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   31fdc:	00 00 00 
   31fdf:	90                   	nop
   31fe0:	bd 01 00 00 00       	mov    $0x1,%ebp
   31fe5:	41 81 fd 80 00 00 00 	cmp    $0x80,%r13d
   31fec:	72 1e                	jb     3200c <<str as core::fmt::Debug>::fmt+0x41c>
   31fee:	bd 02 00 00 00       	mov    $0x2,%ebp
   31ff3:	41 81 fd 00 08 00 00 	cmp    $0x800,%r13d
   31ffa:	72 10                	jb     3200c <<str as core::fmt::Debug>::fmt+0x41c>
   31ffc:	41 81 fd 00 00 01 00 	cmp    $0x10000,%r13d
   32003:	bd 04 00 00 00       	mov    $0x4,%ebp
   32008:	48 83 dd 00          	sbb    $0x0,%rbp
   3200c:	48 01 dd             	add    %rbx,%rbp
   3200f:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   32014:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
   32019:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   3201e:	48 29 c3             	sub    %rax,%rbx
   32021:	4c 01 fb             	add    %r15,%rbx
   32024:	4c 89 fe             	mov    %r15,%rsi
   32027:	4c 39 ff             	cmp    %r15,%rdi
   3202a:	0f 85 20 fc ff ff    	jne    31c50 <<str as core::fmt::Debug>::fmt+0x60>
   32030:	48 85 ed             	test   %rbp,%rbp
   32033:	74 31                	je     32066 <<str as core::fmt::Debug>::fmt+0x476>
   32035:	4c 39 cd             	cmp    %r9,%rbp
   32038:	74 2c                	je     32066 <<str as core::fmt::Debug>::fmt+0x476>
   3203a:	73 0b                	jae    32047 <<str as core::fmt::Debug>::fmt+0x457>
   3203c:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   32041:	80 3c 28 bf          	cmpb   $0xbf,(%rax,%rbp,1)
   32045:	7f 1f                	jg     32066 <<str as core::fmt::Debug>::fmt+0x476>
   32047:	4c 8d 05 d2 32 01 00 	lea    0x132d2(%rip),%r8        # 45320 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1de8>
   3204e:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   32053:	4c 89 ce             	mov    %r9,%rsi
   32056:	48 89 ea             	mov    %rbp,%rdx
   32059:	4c 89 c9             	mov    %r9,%rcx
   3205c:	ff 15 ce 3d 01 00    	callq  *0x13dce(%rip)        # 45e30 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   32062:	0f 0b                	ud2    
   32064:	31 ed                	xor    %ebp,%ebp
   32066:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   3206b:	48 01 ee             	add    %rbp,%rsi
   3206e:	49 29 e9             	sub    %rbp,%r9
   32071:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi
   32076:	49 8b 44 24 28       	mov    0x28(%r12),%rax
   3207b:	4c 89 ca             	mov    %r9,%rdx
   3207e:	ff 50 18             	callq  *0x18(%rax)
   32081:	84 c0                	test   %al,%al
   32083:	74 11                	je     32096 <<str as core::fmt::Debug>::fmt+0x4a6>
   32085:	b0 01                	mov    $0x1,%al
   32087:	48 83 c4 38          	add    $0x38,%rsp
   3208b:	5b                   	pop    %rbx
   3208c:	41 5c                	pop    %r12
   3208e:	41 5d                	pop    %r13
   32090:	41 5e                	pop    %r14
   32092:	41 5f                	pop    %r15
   32094:	5d                   	pop    %rbp
   32095:	c3                   	retq   
   32096:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi
   3209b:	49 8b 44 24 28       	mov    0x28(%r12),%rax
   320a0:	48 8b 40 20          	mov    0x20(%rax),%rax
   320a4:	be 22 00 00 00       	mov    $0x22,%esi
   320a9:	48 83 c4 38          	add    $0x38,%rsp
   320ad:	5b                   	pop    %rbx
   320ae:	41 5c                	pop    %r12
   320b0:	41 5d                	pop    %r13
   320b2:	41 5e                	pop    %r14
   320b4:	41 5f                	pop    %r15
   320b6:	5d                   	pop    %rbp
   320b7:	ff e0                	jmpq   *%rax
   320b9:	4c 8d 05 48 32 01 00 	lea    0x13248(%rip),%r8        # 45308 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1dd0>
   320c0:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   320c5:	4c 89 ce             	mov    %r9,%rsi
   320c8:	48 89 ea             	mov    %rbp,%rdx
   320cb:	48 89 d9             	mov    %rbx,%rcx
   320ce:	ff 15 5c 3d 01 00    	callq  *0x13d5c(%rip)        # 45e30 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   320d4:	0f 0b                	ud2    
   320d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   320dd:	00 00 00 

00000000000320e0 <<str as core::fmt::Display>::fmt>:
   320e0:	48 89 d0             	mov    %rdx,%rax
   320e3:	48 89 f2             	mov    %rsi,%rdx
   320e6:	48 89 fe             	mov    %rdi,%rsi
   320e9:	48 89 c7             	mov    %rax,%rdi
   320ec:	ff 25 16 3c 01 00    	jmpq   *0x13c16(%rip)        # 45d08 <_GLOBAL_OFFSET_TABLE_+0x380>
   320f2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   320f9:	00 00 00 
   320fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000032100 <<char as core::fmt::Debug>::fmt>:
   32100:	55                   	push   %rbp
   32101:	41 57                	push   %r15
   32103:	41 56                	push   %r14
   32105:	41 55                	push   %r13
   32107:	41 54                	push   %r12
   32109:	53                   	push   %rbx
   3210a:	50                   	push   %rax
   3210b:	49 89 f6             	mov    %rsi,%r14
   3210e:	48 89 fb             	mov    %rdi,%rbx
   32111:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
   32115:	48 8b 46 28          	mov    0x28(%rsi),%rax
   32119:	be 27 00 00 00       	mov    $0x27,%esi
   3211e:	ff 50 20             	callq  *0x20(%rax)
   32121:	84 c0                	test   %al,%al
   32123:	74 11                	je     32136 <<char as core::fmt::Debug>::fmt+0x36>
   32125:	b0 01                	mov    $0x1,%al
   32127:	48 83 c4 08          	add    $0x8,%rsp
   3212b:	5b                   	pop    %rbx
   3212c:	41 5c                	pop    %r12
   3212e:	41 5d                	pop    %r13
   32130:	41 5e                	pop    %r14
   32132:	41 5f                	pop    %r15
   32134:	5d                   	pop    %rbp
   32135:	c3                   	retq   
   32136:	8b 1b                	mov    (%rbx),%ebx
   32138:	41 bf 02 00 00 00    	mov    $0x2,%r15d
   3213e:	8d 43 f7             	lea    -0x9(%rbx),%eax
   32141:	83 f8 1e             	cmp    $0x1e,%eax
   32144:	77 1c                	ja     32162 <<char as core::fmt::Debug>::fmt+0x62>
   32146:	bd 74 00 00 00       	mov    $0x74,%ebp
   3214b:	48 8d 0d 22 7c 00 00 	lea    0x7c22(%rip),%rcx        # 39d74 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x224>
   32152:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   32156:	48 01 c8             	add    %rcx,%rax
   32159:	ff e0                	jmpq   *%rax
   3215b:	bd 6e 00 00 00       	mov    $0x6e,%ebp
   32160:	eb 56                	jmp    321b8 <<char as core::fmt::Debug>::fmt+0xb8>
   32162:	83 fb 5c             	cmp    $0x5c,%ebx
   32165:	74 1e                	je     32185 <<char as core::fmt::Debug>::fmt+0x85>
   32167:	89 df                	mov    %ebx,%edi
   32169:	ff 15 91 3b 01 00    	callq  *0x13b91(%rip)        # 45d00 <_GLOBAL_OFFSET_TABLE_+0x378>
   3216f:	84 c0                	test   %al,%al
   32171:	75 1d                	jne    32190 <<char as core::fmt::Debug>::fmt+0x90>
   32173:	89 df                	mov    %ebx,%edi
   32175:	ff 15 65 38 01 00    	callq  *0x13865(%rip)        # 459e0 <_GLOBAL_OFFSET_TABLE_+0x58>
   3217b:	84 c0                	test   %al,%al
   3217d:	74 11                	je     32190 <<char as core::fmt::Debug>::fmt+0x90>
   3217f:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   32185:	89 dd                	mov    %ebx,%ebp
   32187:	eb 2f                	jmp    321b8 <<char as core::fmt::Debug>::fmt+0xb8>
   32189:	bd 72 00 00 00       	mov    $0x72,%ebp
   3218e:	eb 28                	jmp    321b8 <<char as core::fmt::Debug>::fmt+0xb8>
   32190:	89 d8                	mov    %ebx,%eax
   32192:	83 cb 01             	or     $0x1,%ebx
   32195:	0f bd cb             	bsr    %ebx,%ecx
   32198:	83 f1 1c             	xor    $0x1c,%ecx
   3219b:	c1 e9 02             	shr    $0x2,%ecx
   3219e:	83 f1 07             	xor    $0x7,%ecx
   321a1:	48 89 0c 24          	mov    %rcx,(%rsp)
   321a5:	49 bc 00 00 00 00 05 	movabs $0x500000000,%r12
   321ac:	00 00 00 
   321af:	49 09 c4             	or     %rax,%r12
   321b2:	41 bf 03 00 00 00    	mov    $0x3,%r15d
   321b8:	48 8d 1d 31 7c 00 00 	lea    0x7c31(%rip),%rbx        # 39df0 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x2a0>
   321bf:	4c 8d 2d 3a 7c 00 00 	lea    0x7c3a(%rip),%r13        # 39e00 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x2b0>
   321c6:	e9 1d 00 00 00       	jmpq   321e8 <<char as core::fmt::Debug>::fmt+0xe8>
   321cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   321d0:	45 31 ff             	xor    %r15d,%r15d
   321d3:	89 ee                	mov    %ebp,%esi
   321d5:	49 8b 7e 20          	mov    0x20(%r14),%rdi
   321d9:	49 8b 46 28          	mov    0x28(%r14),%rax
   321dd:	ff 50 20             	callq  *0x20(%rax)
   321e0:	84 c0                	test   %al,%al
   321e2:	0f 85 3d ff ff ff    	jne    32125 <<char as core::fmt::Debug>::fmt+0x25>
   321e8:	be 5c 00 00 00       	mov    $0x5c,%esi
   321ed:	44 89 f8             	mov    %r15d,%eax
   321f0:	48 63 04 83          	movslq (%rbx,%rax,4),%rax
   321f4:	48 01 d8             	add    %rbx,%rax
   321f7:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   321fd:	ff e0                	jmpq   *%rax
   321ff:	4c 89 e0             	mov    %r12,%rax
   32202:	48 c1 e8 20          	shr    $0x20,%rax
   32206:	0f b6 c0             	movzbl %al,%eax
   32209:	49 63 44 85 00       	movslq 0x0(%r13,%rax,4),%rax
   3220e:	4c 01 e8             	add    %r13,%rax
   32211:	ff e0                	jmpq   *%rax
   32213:	48 b8 ff ff ff ff 00 	movabs $0xffffff00ffffffff,%rax
   3221a:	ff ff ff 
   3221d:	49 21 c4             	and    %rax,%r12
   32220:	41 bf 03 00 00 00    	mov    $0x3,%r15d
   32226:	be 7d 00 00 00       	mov    $0x7d,%esi
   3222b:	eb a8                	jmp    321d5 <<char as core::fmt::Debug>::fmt+0xd5>
   3222d:	48 8b 14 24          	mov    (%rsp),%rdx
   32231:	8d 0c 95 00 00 00 00 	lea    0x0(,%rdx,4),%ecx
   32238:	44 89 e0             	mov    %r12d,%eax
   3223b:	d3 e8                	shr    %cl,%eax
   3223d:	83 e0 0f             	and    $0xf,%eax
   32240:	3c 0a                	cmp    $0xa,%al
   32242:	be 57 00 00 00       	mov    $0x57,%esi
   32247:	b9 30 00 00 00       	mov    $0x30,%ecx
   3224c:	0f 42 f1             	cmovb  %ecx,%esi
   3224f:	01 c6                	add    %eax,%esi
   32251:	48 85 d2             	test   %rdx,%rdx
   32254:	0f 84 83 00 00 00    	je     322dd <<char as core::fmt::Debug>::fmt+0x1dd>
   3225a:	48 89 d0             	mov    %rdx,%rax
   3225d:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
   32261:	48 89 04 24          	mov    %rax,(%rsp)
   32265:	41 bf 03 00 00 00    	mov    $0x3,%r15d
   3226b:	e9 65 ff ff ff       	jmpq   321d5 <<char as core::fmt::Debug>::fmt+0xd5>
   32270:	48 b8 ff ff ff ff 00 	movabs $0xffffff00ffffffff,%rax
   32277:	ff ff ff 
   3227a:	49 21 c4             	and    %rax,%r12
   3227d:	48 b8 00 00 00 00 02 	movabs $0x200000000,%rax
   32284:	00 00 00 
   32287:	49 09 c4             	or     %rax,%r12
   3228a:	41 bf 03 00 00 00    	mov    $0x3,%r15d
   32290:	be 7b 00 00 00       	mov    $0x7b,%esi
   32295:	e9 3b ff ff ff       	jmpq   321d5 <<char as core::fmt::Debug>::fmt+0xd5>
   3229a:	48 b8 ff ff ff ff 00 	movabs $0xffffff00ffffffff,%rax
   322a1:	ff ff ff 
   322a4:	49 21 c4             	and    %rax,%r12
   322a7:	48 b8 00 00 00 00 03 	movabs $0x300000000,%rax
   322ae:	00 00 00 
   322b1:	49 09 c4             	or     %rax,%r12
   322b4:	41 bf 03 00 00 00    	mov    $0x3,%r15d
   322ba:	be 75 00 00 00       	mov    $0x75,%esi
   322bf:	e9 11 ff ff ff       	jmpq   321d5 <<char as core::fmt::Debug>::fmt+0xd5>
   322c4:	48 b8 ff ff ff ff 00 	movabs $0xffffff00ffffffff,%rax
   322cb:	ff ff ff 
   322ce:	49 21 c4             	and    %rax,%r12
   322d1:	48 b8 00 00 00 00 04 	movabs $0x400000000,%rax
   322d8:	00 00 00 
   322db:	eb 17                	jmp    322f4 <<char as core::fmt::Debug>::fmt+0x1f4>
   322dd:	48 b8 ff ff ff ff 00 	movabs $0xffffff00ffffffff,%rax
   322e4:	ff ff ff 
   322e7:	49 21 c4             	and    %rax,%r12
   322ea:	48 b8 00 00 00 00 01 	movabs $0x100000000,%rax
   322f1:	00 00 00 
   322f4:	49 09 c4             	or     %rax,%r12
   322f7:	41 bf 03 00 00 00    	mov    $0x3,%r15d
   322fd:	e9 d3 fe ff ff       	jmpq   321d5 <<char as core::fmt::Debug>::fmt+0xd5>
   32302:	49 8b 7e 20          	mov    0x20(%r14),%rdi
   32306:	49 8b 46 28          	mov    0x28(%r14),%rax
   3230a:	48 8b 40 20          	mov    0x20(%rax),%rax
   3230e:	be 27 00 00 00       	mov    $0x27,%esi
   32313:	48 83 c4 08          	add    $0x8,%rsp
   32317:	5b                   	pop    %rbx
   32318:	41 5c                	pop    %r12
   3231a:	41 5d                	pop    %r13
   3231c:	41 5e                	pop    %r14
   3231e:	41 5f                	pop    %r15
   32320:	5d                   	pop    %rbp
   32321:	ff e0                	jmpq   *%rax
   32323:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3232a:	00 00 00 
   3232d:	0f 1f 00             	nopl   (%rax)

0000000000032330 <<char as core::fmt::Display>::fmt>:
   32330:	50                   	push   %rax
   32331:	48 83 3e 01          	cmpq   $0x1,(%rsi)
   32335:	75 04                	jne    3233b <<char as core::fmt::Display>::fmt+0xb>
   32337:	8b 07                	mov    (%rdi),%eax
   32339:	eb 09                	jmp    32344 <<char as core::fmt::Display>::fmt+0x14>
   3233b:	48 83 7e 10 01       	cmpq   $0x1,0x10(%rsi)
   32340:	8b 07                	mov    (%rdi),%eax
   32342:	75 44                	jne    32388 <<char as core::fmt::Display>::fmt+0x58>
   32344:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
   3234b:	00 
   3234c:	48 8d 4c 24 04       	lea    0x4(%rsp),%rcx
   32351:	3d 80 00 00 00       	cmp    $0x80,%eax
   32356:	73 0e                	jae    32366 <<char as core::fmt::Display>::fmt+0x36>
   32358:	88 44 24 04          	mov    %al,0x4(%rsp)
   3235c:	ba 01 00 00 00       	mov    $0x1,%edx
   32361:	e9 97 00 00 00       	jmpq   323fd <<char as core::fmt::Display>::fmt+0xcd>
   32366:	89 c2                	mov    %eax,%edx
   32368:	3d 00 08 00 00       	cmp    $0x800,%eax
   3236d:	73 2a                	jae    32399 <<char as core::fmt::Display>::fmt+0x69>
   3236f:	c1 ea 06             	shr    $0x6,%edx
   32372:	80 ca c0             	or     $0xc0,%dl
   32375:	88 54 24 04          	mov    %dl,0x4(%rsp)
   32379:	24 3f                	and    $0x3f,%al
   3237b:	0c 80                	or     $0x80,%al
   3237d:	88 44 24 05          	mov    %al,0x5(%rsp)
   32381:	ba 02 00 00 00       	mov    $0x2,%edx
   32386:	eb 75                	jmp    323fd <<char as core::fmt::Display>::fmt+0xcd>
   32388:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
   3238c:	48 8b 4e 28          	mov    0x28(%rsi),%rcx
   32390:	48 8b 49 20          	mov    0x20(%rcx),%rcx
   32394:	89 c6                	mov    %eax,%esi
   32396:	58                   	pop    %rax
   32397:	ff e1                	jmpq   *%rcx
   32399:	3d 00 00 01 00       	cmp    $0x10000,%eax
   3239e:	73 28                	jae    323c8 <<char as core::fmt::Display>::fmt+0x98>
   323a0:	c1 ea 0c             	shr    $0xc,%edx
   323a3:	80 ca e0             	or     $0xe0,%dl
   323a6:	88 54 24 04          	mov    %dl,0x4(%rsp)
   323aa:	89 c2                	mov    %eax,%edx
   323ac:	c1 ea 06             	shr    $0x6,%edx
   323af:	80 e2 3f             	and    $0x3f,%dl
   323b2:	80 ca 80             	or     $0x80,%dl
   323b5:	88 54 24 05          	mov    %dl,0x5(%rsp)
   323b9:	24 3f                	and    $0x3f,%al
   323bb:	0c 80                	or     $0x80,%al
   323bd:	88 44 24 06          	mov    %al,0x6(%rsp)
   323c1:	ba 03 00 00 00       	mov    $0x3,%edx
   323c6:	eb 35                	jmp    323fd <<char as core::fmt::Display>::fmt+0xcd>
   323c8:	c1 ea 12             	shr    $0x12,%edx
   323cb:	80 ca f0             	or     $0xf0,%dl
   323ce:	88 54 24 04          	mov    %dl,0x4(%rsp)
   323d2:	89 c2                	mov    %eax,%edx
   323d4:	c1 ea 0c             	shr    $0xc,%edx
   323d7:	80 e2 3f             	and    $0x3f,%dl
   323da:	80 ca 80             	or     $0x80,%dl
   323dd:	88 54 24 05          	mov    %dl,0x5(%rsp)
   323e1:	89 c2                	mov    %eax,%edx
   323e3:	c1 ea 06             	shr    $0x6,%edx
   323e6:	80 e2 3f             	and    $0x3f,%dl
   323e9:	80 ca 80             	or     $0x80,%dl
   323ec:	88 54 24 06          	mov    %dl,0x6(%rsp)
   323f0:	24 3f                	and    $0x3f,%al
   323f2:	0c 80                	or     $0x80,%al
   323f4:	88 44 24 07          	mov    %al,0x7(%rsp)
   323f8:	ba 04 00 00 00       	mov    $0x4,%edx
   323fd:	48 89 f7             	mov    %rsi,%rdi
   32400:	48 89 ce             	mov    %rcx,%rsi
   32403:	ff 15 ff 38 01 00    	callq  *0x138ff(%rip)        # 45d08 <_GLOBAL_OFFSET_TABLE_+0x380>
   32409:	59                   	pop    %rcx
   3240a:	c3                   	retq   
   3240b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000032410 <core::slice::memchr::memchr_general_case>:
   32410:	50                   	push   %rax
   32411:	41 89 f9             	mov    %edi,%r9d
   32414:	89 f7                	mov    %esi,%edi
   32416:	f7 df                	neg    %edi
   32418:	48 83 e7 07          	and    $0x7,%rdi
   3241c:	74 22                	je     32440 <core::slice::memchr::memchr_general_case+0x30>
   3241e:	48 39 d7             	cmp    %rdx,%rdi
   32421:	48 0f 47 fa          	cmova  %rdx,%rdi
   32425:	48 85 ff             	test   %rdi,%rdi
   32428:	74 16                	je     32440 <core::slice::memchr::memchr_general_case+0x30>
   3242a:	44 38 0e             	cmp    %r9b,(%rsi)
   3242d:	0f 85 ae 00 00 00    	jne    324e1 <core::slice::memchr::memchr_general_case+0xd1>
   32433:	45 31 c0             	xor    %r8d,%r8d
   32436:	b8 01 00 00 00       	mov    $0x1,%eax
   3243b:	4c 89 c2             	mov    %r8,%rdx
   3243e:	59                   	pop    %rcx
   3243f:	c3                   	retq   
   32440:	48 8d 42 f0          	lea    -0x10(%rdx),%rax
   32444:	31 ff                	xor    %edi,%edi
   32446:	45 0f b6 c1          	movzbl %r9b,%r8d
   3244a:	48 b9 01 01 01 01 01 	movabs $0x101010101010101,%rcx
   32451:	01 01 01 
   32454:	49 0f af c8          	imul   %r8,%rcx
   32458:	66 48 0f 6e c1       	movq   %rcx,%xmm0
   3245d:	66 0f 70 c0 44       	pshufd $0x44,%xmm0,%xmm0
   32462:	66 0f 6f 0d d6 75 00 	movdqa 0x75d6(%rip),%xmm1        # 39a40 <str.6+0x2720>
   32469:	00 
   3246a:	66 0f 6f 15 de 75 00 	movdqa 0x75de(%rip),%xmm2        # 39a50 <str.6+0x2730>
   32471:	00 
   32472:	66 0f ef db          	pxor   %xmm3,%xmm3
   32476:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3247d:	00 00 00 
   32480:	f3 0f 6f 24 3e       	movdqu (%rsi,%rdi,1),%xmm4
   32485:	66 0f ef e0          	pxor   %xmm0,%xmm4
   32489:	66 0f 6f ec          	movdqa %xmm4,%xmm5
   3248d:	66 0f d4 e9          	paddq  %xmm1,%xmm5
   32491:	66 0f df e5          	pandn  %xmm5,%xmm4
   32495:	66 0f db e2          	pand   %xmm2,%xmm4
   32499:	66 0f 74 e3          	pcmpeqb %xmm3,%xmm4
   3249d:	66 0f d7 cc          	pmovmskb %xmm4,%ecx
   324a1:	81 f9 ff ff 00 00    	cmp    $0xffff,%ecx
   324a7:	75 09                	jne    324b2 <core::slice::memchr::memchr_general_case+0xa2>
   324a9:	48 83 c7 10          	add    $0x10,%rdi
   324ad:	48 39 c7             	cmp    %rax,%rdi
   324b0:	76 ce                	jbe    32480 <core::slice::memchr::memchr_general_case+0x70>
   324b2:	48 39 d7             	cmp    %rdx,%rdi
   324b5:	0f 87 d5 00 00 00    	ja     32590 <core::slice::memchr::memchr_general_case+0x180>
   324bb:	48 39 d7             	cmp    %rdx,%rdi
   324be:	75 06                	jne    324c6 <core::slice::memchr::memchr_general_case+0xb6>
   324c0:	31 d2                	xor    %edx,%edx
   324c2:	31 c0                	xor    %eax,%eax
   324c4:	eb 38                	jmp    324fe <core::slice::memchr::memchr_general_case+0xee>
   324c6:	48 29 fa             	sub    %rdi,%rdx
   324c9:	48 01 fe             	add    %rdi,%rsi
   324cc:	31 c0                	xor    %eax,%eax
   324ce:	31 c9                	xor    %ecx,%ecx
   324d0:	44 38 0c 0e          	cmp    %r9b,(%rsi,%rcx,1)
   324d4:	74 20                	je     324f6 <core::slice::memchr::memchr_general_case+0xe6>
   324d6:	48 83 c1 01          	add    $0x1,%rcx
   324da:	48 39 ca             	cmp    %rcx,%rdx
   324dd:	75 f1                	jne    324d0 <core::slice::memchr::memchr_general_case+0xc0>
   324df:	eb 1d                	jmp    324fe <core::slice::memchr::memchr_general_case+0xee>
   324e1:	48 83 ff 01          	cmp    $0x1,%rdi
   324e5:	75 22                	jne    32509 <core::slice::memchr::memchr_general_case+0xf9>
   324e7:	48 8d 42 f0          	lea    -0x10(%rdx),%rax
   324eb:	48 39 c7             	cmp    %rax,%rdi
   324ee:	0f 86 52 ff ff ff    	jbe    32446 <core::slice::memchr::memchr_general_case+0x36>
   324f4:	eb c5                	jmp    324bb <core::slice::memchr::memchr_general_case+0xab>
   324f6:	b8 01 00 00 00       	mov    $0x1,%eax
   324fb:	48 89 ca             	mov    %rcx,%rdx
   324fe:	48 01 fa             	add    %rdi,%rdx
   32501:	49 89 d0             	mov    %rdx,%r8
   32504:	4c 89 c2             	mov    %r8,%rdx
   32507:	59                   	pop    %rcx
   32508:	c3                   	retq   
   32509:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   3250f:	44 38 4e 01          	cmp    %r9b,0x1(%rsi)
   32513:	0f 84 1d ff ff ff    	je     32436 <core::slice::memchr::memchr_general_case+0x26>
   32519:	48 83 ff 02          	cmp    $0x2,%rdi
   3251d:	74 c8                	je     324e7 <core::slice::memchr::memchr_general_case+0xd7>
   3251f:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   32525:	44 38 4e 02          	cmp    %r9b,0x2(%rsi)
   32529:	0f 84 07 ff ff ff    	je     32436 <core::slice::memchr::memchr_general_case+0x26>
   3252f:	48 83 ff 03          	cmp    $0x3,%rdi
   32533:	74 b2                	je     324e7 <core::slice::memchr::memchr_general_case+0xd7>
   32535:	41 b8 03 00 00 00    	mov    $0x3,%r8d
   3253b:	44 38 4e 03          	cmp    %r9b,0x3(%rsi)
   3253f:	0f 84 f1 fe ff ff    	je     32436 <core::slice::memchr::memchr_general_case+0x26>
   32545:	48 83 ff 04          	cmp    $0x4,%rdi
   32549:	74 9c                	je     324e7 <core::slice::memchr::memchr_general_case+0xd7>
   3254b:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   32551:	44 38 4e 04          	cmp    %r9b,0x4(%rsi)
   32555:	0f 84 db fe ff ff    	je     32436 <core::slice::memchr::memchr_general_case+0x26>
   3255b:	48 83 ff 05          	cmp    $0x5,%rdi
   3255f:	74 86                	je     324e7 <core::slice::memchr::memchr_general_case+0xd7>
   32561:	41 b8 05 00 00 00    	mov    $0x5,%r8d
   32567:	44 38 4e 05          	cmp    %r9b,0x5(%rsi)
   3256b:	0f 84 c5 fe ff ff    	je     32436 <core::slice::memchr::memchr_general_case+0x26>
   32571:	48 83 ff 06          	cmp    $0x6,%rdi
   32575:	0f 84 6c ff ff ff    	je     324e7 <core::slice::memchr::memchr_general_case+0xd7>
   3257b:	41 b8 06 00 00 00    	mov    $0x6,%r8d
   32581:	44 38 4e 06          	cmp    %r9b,0x6(%rsi)
   32585:	0f 84 ab fe ff ff    	je     32436 <core::slice::memchr::memchr_general_case+0x26>
   3258b:	e9 57 ff ff ff       	jmpq   324e7 <core::slice::memchr::memchr_general_case+0xd7>
   32590:	48 8d 05 a1 2d 01 00 	lea    0x12da1(%rip),%rax        # 45338 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1e00>
   32597:	48 89 d6             	mov    %rdx,%rsi
   3259a:	48 89 c2             	mov    %rax,%rdx
   3259d:	ff 15 4d 38 01 00    	callq  *0x1384d(%rip)        # 45df0 <_GLOBAL_OFFSET_TABLE_+0x468>
   325a3:	0f 0b                	ud2    
   325a5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   325ac:	00 00 00 
   325af:	90                   	nop

00000000000325b0 <core::slice::index::slice_start_index_len_fail>:
   325b0:	48 83 ec 68          	sub    $0x68,%rsp
   325b4:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   325b9:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   325be:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   325c3:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   325c8:	48 8d 05 91 27 00 00 	lea    0x2791(%rip),%rax        # 34d60 <core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt>
   325cf:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   325d4:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
   325d9:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   325de:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   325e3:	48 8d 05 66 2d 01 00 	lea    0x12d66(%rip),%rax        # 45350 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1e18>
   325ea:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   325ef:	48 c7 44 24 40 02 00 	movq   $0x2,0x40(%rsp)
   325f6:	00 00 
   325f8:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
   325ff:	00 00 
   32601:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
   32606:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   3260b:	48 c7 44 24 60 02 00 	movq   $0x2,0x60(%rsp)
   32612:	00 00 
   32614:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
   32619:	48 89 d6             	mov    %rdx,%rsi
   3261c:	ff 15 26 36 01 00    	callq  *0x13626(%rip)        # 45c48 <_GLOBAL_OFFSET_TABLE_+0x2c0>
   32622:	0f 0b                	ud2    
   32624:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3262b:	00 00 00 
   3262e:	66 90                	xchg   %ax,%ax

0000000000032630 <core::slice::index::slice_end_index_len_fail>:
   32630:	48 83 ec 68          	sub    $0x68,%rsp
   32634:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   32639:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   3263e:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   32643:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   32648:	48 8d 05 11 27 00 00 	lea    0x2711(%rip),%rax        # 34d60 <core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt>
   3264f:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   32654:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
   32659:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   3265e:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   32663:	48 8d 05 06 2d 01 00 	lea    0x12d06(%rip),%rax        # 45370 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1e38>
   3266a:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   3266f:	48 c7 44 24 40 02 00 	movq   $0x2,0x40(%rsp)
   32676:	00 00 
   32678:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
   3267f:	00 00 
   32681:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
   32686:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   3268b:	48 c7 44 24 60 02 00 	movq   $0x2,0x60(%rsp)
   32692:	00 00 
   32694:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
   32699:	48 89 d6             	mov    %rdx,%rsi
   3269c:	ff 15 a6 35 01 00    	callq  *0x135a6(%rip)        # 45c48 <_GLOBAL_OFFSET_TABLE_+0x2c0>
   326a2:	0f 0b                	ud2    
   326a4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   326ab:	00 00 00 
   326ae:	66 90                	xchg   %ax,%ax

00000000000326b0 <core::slice::index::slice_index_order_fail>:
   326b0:	48 83 ec 68          	sub    $0x68,%rsp
   326b4:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   326b9:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   326be:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   326c3:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   326c8:	48 8d 05 91 26 00 00 	lea    0x2691(%rip),%rax        # 34d60 <core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt>
   326cf:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   326d4:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
   326d9:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   326de:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   326e3:	48 8d 05 a6 2c 01 00 	lea    0x12ca6(%rip),%rax        # 45390 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1e58>
   326ea:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   326ef:	48 c7 44 24 40 02 00 	movq   $0x2,0x40(%rsp)
   326f6:	00 00 
   326f8:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
   326ff:	00 00 
   32701:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
   32706:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   3270b:	48 c7 44 24 60 02 00 	movq   $0x2,0x60(%rsp)
   32712:	00 00 
   32714:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
   32719:	48 89 d6             	mov    %rdx,%rsi
   3271c:	ff 15 26 35 01 00    	callq  *0x13526(%rip)        # 45c48 <_GLOBAL_OFFSET_TABLE_+0x2c0>
   32722:	0f 0b                	ud2    
   32724:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3272b:	00 00 00 
   3272e:	66 90                	xchg   %ax,%ax

0000000000032730 <core::slice::<impl [T]>::copy_from_slice::len_mismatch_fail>:
   32730:	48 83 ec 68          	sub    $0x68,%rsp
   32734:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   32739:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   3273e:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   32743:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   32748:	48 8d 05 11 26 00 00 	lea    0x2611(%rip),%rax        # 34d60 <core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt>
   3274f:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   32754:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
   32759:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   3275e:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   32763:	48 8d 05 46 2c 01 00 	lea    0x12c46(%rip),%rax        # 453b0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1e78>
   3276a:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   3276f:	48 c7 44 24 40 03 00 	movq   $0x3,0x40(%rsp)
   32776:	00 00 
   32778:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
   3277f:	00 00 
   32781:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
   32786:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   3278b:	48 c7 44 24 60 02 00 	movq   $0x2,0x60(%rsp)
   32792:	00 00 
   32794:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
   32799:	48 89 d6             	mov    %rdx,%rsi
   3279c:	ff 15 a6 34 01 00    	callq  *0x134a6(%rip)        # 45c48 <_GLOBAL_OFFSET_TABLE_+0x2c0>
   327a2:	0f 0b                	ud2    
   327a4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   327ab:	00 00 00 
   327ae:	66 90                	xchg   %ax,%ax

00000000000327b0 <core::str::converts::from_utf8>:
   327b0:	55                   	push   %rbp
   327b1:	41 56                	push   %r14
   327b3:	53                   	push   %rbx
   327b4:	48 89 f8             	mov    %rdi,%rax
   327b7:	31 ff                	xor    %edi,%edi
   327b9:	48 89 d1             	mov    %rdx,%rcx
   327bc:	48 83 e9 0f          	sub    $0xf,%rcx
   327c0:	48 0f 43 f9          	cmovae %rcx,%rdi
   327c4:	48 85 d2             	test   %rdx,%rdx
   327c7:	0f 84 ef 01 00 00    	je     329bc <core::str::converts::from_utf8+0x20c>
   327cd:	31 c9                	xor    %ecx,%ecx
   327cf:	4c 8d 0d 3f 79 00 00 	lea    0x793f(%rip),%r9        # 3a115 <core::str::validations::UTF8_CHAR_WIDTH>
   327d6:	49 ba 80 80 80 80 80 	movabs $0x8080808080808080,%r10
   327dd:	80 80 80 
   327e0:	41 bb 01 00 00 00    	mov    $0x1,%r11d
   327e6:	e9 15 00 00 00       	jmpq   32800 <core::str::converts::from_utf8+0x50>
   327eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   327f0:	48 83 c5 01          	add    $0x1,%rbp
   327f4:	48 89 e9             	mov    %rbp,%rcx
   327f7:	48 39 d1             	cmp    %rdx,%rcx
   327fa:	0f 83 bc 01 00 00    	jae    329bc <core::str::converts::from_utf8+0x20c>
   32800:	0f b6 1c 0e          	movzbl (%rsi,%rcx,1),%ebx
   32804:	84 db                	test   %bl,%bl
   32806:	78 58                	js     32860 <core::str::converts::from_utf8+0xb0>
   32808:	8d 2c 31             	lea    (%rcx,%rsi,1),%ebp
   3280b:	f7 dd                	neg    %ebp
   3280d:	40 f6 c5 07          	test   $0x7,%bpl
   32811:	74 11                	je     32824 <core::str::converts::from_utf8+0x74>
   32813:	48 83 c1 01          	add    $0x1,%rcx
   32817:	e9 db ff ff ff       	jmpq   327f7 <core::str::converts::from_utf8+0x47>
   3281c:	0f 1f 40 00          	nopl   0x0(%rax)
   32820:	48 83 c1 10          	add    $0x10,%rcx
   32824:	48 39 f9             	cmp    %rdi,%rcx
   32827:	73 0e                	jae    32837 <core::str::converts::from_utf8+0x87>
   32829:	48 8b 6c 0e 08       	mov    0x8(%rsi,%rcx,1),%rbp
   3282e:	48 0b 2c 0e          	or     (%rsi,%rcx,1),%rbp
   32832:	4c 85 d5             	test   %r10,%rbp
   32835:	74 e9                	je     32820 <core::str::converts::from_utf8+0x70>
   32837:	48 39 d1             	cmp    %rdx,%rcx
   3283a:	0f 83 b7 ff ff ff    	jae    327f7 <core::str::converts::from_utf8+0x47>
   32840:	80 3c 0e 00          	cmpb   $0x0,(%rsi,%rcx,1)
   32844:	78 b1                	js     327f7 <core::str::converts::from_utf8+0x47>
   32846:	48 83 c1 01          	add    $0x1,%rcx
   3284a:	48 39 ca             	cmp    %rcx,%rdx
   3284d:	0f 85 ed ff ff ff    	jne    32840 <core::str::converts::from_utf8+0x90>
   32853:	e9 64 01 00 00       	jmpq   329bc <core::str::converts::from_utf8+0x20c>
   32858:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   3285f:	00 
   32860:	42 8a 2c 0b          	mov    (%rbx,%r9,1),%bpl
   32864:	41 b0 01             	mov    $0x1,%r8b
   32867:	40 80 fd 04          	cmp    $0x4,%bpl
   3286b:	74 31                	je     3289e <core::str::converts::from_utf8+0xee>
   3286d:	40 80 fd 03          	cmp    $0x3,%bpl
   32871:	74 55                	je     328c8 <core::str::converts::from_utf8+0x118>
   32873:	40 80 fd 02          	cmp    $0x2,%bpl
   32877:	0f 85 51 01 00 00    	jne    329ce <core::str::converts::from_utf8+0x21e>
   3287d:	48 8d 69 01          	lea    0x1(%rcx),%rbp
   32881:	48 39 d5             	cmp    %rdx,%rbp
   32884:	0f 83 3e 01 00 00    	jae    329c8 <core::str::converts::from_utf8+0x218>
   3288a:	8a 1c 2e             	mov    (%rsi,%rbp,1),%bl
   3288d:	80 e3 c0             	and    $0xc0,%bl
   32890:	80 fb 80             	cmp    $0x80,%bl
   32893:	0f 84 57 ff ff ff    	je     327f0 <core::str::converts::from_utf8+0x40>
   32899:	e9 30 01 00 00       	jmpq   329ce <core::str::converts::from_utf8+0x21e>
   3289e:	48 8d 69 01          	lea    0x1(%rcx),%rbp
   328a2:	48 39 d5             	cmp    %rdx,%rbp
   328a5:	0f 83 1d 01 00 00    	jae    329c8 <core::str::converts::from_utf8+0x218>
   328ab:	40 8a 2c 2e          	mov    (%rsi,%rbp,1),%bpl
   328af:	80 fb f4             	cmp    $0xf4,%bl
   328b2:	74 4a                	je     328fe <core::str::converts::from_utf8+0x14e>
   328b4:	80 fb f0             	cmp    $0xf0,%bl
   328b7:	75 59                	jne    32912 <core::str::converts::from_utf8+0x162>
   328b9:	40 80 c5 70          	add    $0x70,%bpl
   328bd:	40 80 fd 30          	cmp    $0x30,%bpl
   328c1:	72 6e                	jb     32931 <core::str::converts::from_utf8+0x181>
   328c3:	e9 06 01 00 00       	jmpq   329ce <core::str::converts::from_utf8+0x21e>
   328c8:	48 8d 69 01          	lea    0x1(%rcx),%rbp
   328cc:	48 39 d5             	cmp    %rdx,%rbp
   328cf:	0f 83 f3 00 00 00    	jae    329c8 <core::str::converts::from_utf8+0x218>
   328d5:	44 8a 34 2e          	mov    (%rsi,%rbp,1),%r14b
   328d9:	80 fb ed             	cmp    $0xed,%bl
   328dc:	0f 84 84 00 00 00    	je     32966 <core::str::converts::from_utf8+0x1b6>
   328e2:	80 fb e0             	cmp    $0xe0,%bl
   328e5:	0f 85 88 00 00 00    	jne    32973 <core::str::converts::from_utf8+0x1c3>
   328eb:	41 80 e6 e0          	and    $0xe0,%r14b
   328ef:	41 80 fe a0          	cmp    $0xa0,%r14b
   328f3:	0f 84 a3 00 00 00    	je     3299c <core::str::converts::from_utf8+0x1ec>
   328f9:	e9 d0 00 00 00       	jmpq   329ce <core::str::converts::from_utf8+0x21e>
   328fe:	40 84 ed             	test   %bpl,%bpl
   32901:	0f 89 c7 00 00 00    	jns    329ce <core::str::converts::from_utf8+0x21e>
   32907:	40 80 fd 90          	cmp    $0x90,%bpl
   3290b:	72 24                	jb     32931 <core::str::converts::from_utf8+0x181>
   3290d:	e9 bc 00 00 00       	jmpq   329ce <core::str::converts::from_utf8+0x21e>
   32912:	40 80 fd bf          	cmp    $0xbf,%bpl
   32916:	0f 87 b2 00 00 00    	ja     329ce <core::str::converts::from_utf8+0x21e>
   3291c:	80 c3 0f             	add    $0xf,%bl
   3291f:	80 fb 02             	cmp    $0x2,%bl
   32922:	0f 87 a6 00 00 00    	ja     329ce <core::str::converts::from_utf8+0x21e>
   32928:	40 84 ed             	test   %bpl,%bpl
   3292b:	0f 89 9d 00 00 00    	jns    329ce <core::str::converts::from_utf8+0x21e>
   32931:	48 8d 69 02          	lea    0x2(%rcx),%rbp
   32935:	48 39 d5             	cmp    %rdx,%rbp
   32938:	0f 83 8a 00 00 00    	jae    329c8 <core::str::converts::from_utf8+0x218>
   3293e:	8a 1c 2e             	mov    (%rsi,%rbp,1),%bl
   32941:	80 e3 c0             	and    $0xc0,%bl
   32944:	80 fb 80             	cmp    $0x80,%bl
   32947:	75 6b                	jne    329b4 <core::str::converts::from_utf8+0x204>
   32949:	48 8d 69 03          	lea    0x3(%rcx),%rbp
   3294d:	48 39 d5             	cmp    %rdx,%rbp
   32950:	73 76                	jae    329c8 <core::str::converts::from_utf8+0x218>
   32952:	8a 1c 2e             	mov    (%rsi,%rbp,1),%bl
   32955:	80 e3 c0             	and    $0xc0,%bl
   32958:	80 fb 80             	cmp    $0x80,%bl
   3295b:	0f 84 8f fe ff ff    	je     327f0 <core::str::converts::from_utf8+0x40>
   32961:	e9 88 00 00 00       	jmpq   329ee <core::str::converts::from_utf8+0x23e>
   32966:	45 84 f6             	test   %r14b,%r14b
   32969:	79 63                	jns    329ce <core::str::converts::from_utf8+0x21e>
   3296b:	41 80 fe a0          	cmp    $0xa0,%r14b
   3296f:	72 2b                	jb     3299c <core::str::converts::from_utf8+0x1ec>
   32971:	eb 5b                	jmp    329ce <core::str::converts::from_utf8+0x21e>
   32973:	8d 6b 1f             	lea    0x1f(%rbx),%ebp
   32976:	40 80 fd 0b          	cmp    $0xb,%bpl
   3297a:	77 0d                	ja     32989 <core::str::converts::from_utf8+0x1d9>
   3297c:	45 84 f6             	test   %r14b,%r14b
   3297f:	79 4d                	jns    329ce <core::str::converts::from_utf8+0x21e>
   32981:	41 80 fe c0          	cmp    $0xc0,%r14b
   32985:	72 15                	jb     3299c <core::str::converts::from_utf8+0x1ec>
   32987:	eb 45                	jmp    329ce <core::str::converts::from_utf8+0x21e>
   32989:	41 80 fe bf          	cmp    $0xbf,%r14b
   3298d:	77 3f                	ja     329ce <core::str::converts::from_utf8+0x21e>
   3298f:	80 e3 fe             	and    $0xfe,%bl
   32992:	80 fb ee             	cmp    $0xee,%bl
   32995:	75 37                	jne    329ce <core::str::converts::from_utf8+0x21e>
   32997:	45 84 f6             	test   %r14b,%r14b
   3299a:	79 32                	jns    329ce <core::str::converts::from_utf8+0x21e>
   3299c:	48 8d 69 02          	lea    0x2(%rcx),%rbp
   329a0:	48 39 d5             	cmp    %rdx,%rbp
   329a3:	73 23                	jae    329c8 <core::str::converts::from_utf8+0x218>
   329a5:	8a 1c 2e             	mov    (%rsi,%rbp,1),%bl
   329a8:	80 e3 c0             	and    $0xc0,%bl
   329ab:	80 fb 80             	cmp    $0x80,%bl
   329ae:	0f 84 3c fe ff ff    	je     327f0 <core::str::converts::from_utf8+0x40>
   329b4:	41 bb 02 00 00 00    	mov    $0x2,%r11d
   329ba:	eb 12                	jmp    329ce <core::str::converts::from_utf8+0x21e>
   329bc:	48 89 70 08          	mov    %rsi,0x8(%rax)
   329c0:	48 89 50 10          	mov    %rdx,0x10(%rax)
   329c4:	31 c9                	xor    %ecx,%ecx
   329c6:	eb 1e                	jmp    329e6 <core::str::converts::from_utf8+0x236>
   329c8:	45 31 db             	xor    %r11d,%r11d
   329cb:	45 31 c0             	xor    %r8d,%r8d
   329ce:	49 c1 e3 08          	shl    $0x8,%r11
   329d2:	41 0f b6 d0          	movzbl %r8b,%edx
   329d6:	4c 09 da             	or     %r11,%rdx
   329d9:	48 89 48 08          	mov    %rcx,0x8(%rax)
   329dd:	48 89 50 10          	mov    %rdx,0x10(%rax)
   329e1:	b9 01 00 00 00       	mov    $0x1,%ecx
   329e6:	48 89 08             	mov    %rcx,(%rax)
   329e9:	5b                   	pop    %rbx
   329ea:	41 5e                	pop    %r14
   329ec:	5d                   	pop    %rbp
   329ed:	c3                   	retq   
   329ee:	41 bb 03 00 00 00    	mov    $0x3,%r11d
   329f4:	eb d8                	jmp    329ce <core::str::converts::from_utf8+0x21e>
   329f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   329fd:	00 00 00 

0000000000032a00 <core::str::error::Utf8Error::valid_up_to>:
   32a00:	48 8b 07             	mov    (%rdi),%rax
   32a03:	c3                   	retq   
   32a04:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   32a0b:	00 00 00 
   32a0e:	66 90                	xchg   %ax,%ax

0000000000032a10 <core::str::error::Utf8Error::error_len>:
   32a10:	0f b6 47 08          	movzbl 0x8(%rdi),%eax
   32a14:	0f b6 57 09          	movzbl 0x9(%rdi),%edx
   32a18:	c3                   	retq   
   32a19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000032a20 <core::str::pattern::StrSearcher::new>:
   32a20:	55                   	push   %rbp
   32a21:	41 57                	push   %r15
   32a23:	41 56                	push   %r14
   32a25:	41 55                	push   %r13
   32a27:	41 54                	push   %r12
   32a29:	53                   	push   %rbx
   32a2a:	48 83 ec 18          	sub    $0x18,%rsp
   32a2e:	49 89 cc             	mov    %rcx,%r12
   32a31:	48 89 f8             	mov    %rdi,%rax
   32a34:	4d 85 c0             	test   %r8,%r8
   32a37:	0f 84 51 02 00 00    	je     32c8e <core::str::pattern::StrSearcher::new+0x26e>
   32a3d:	4d 89 c6             	mov    %r8,%r14
   32a40:	49 83 f8 01          	cmp    $0x1,%r8
   32a44:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   32a49:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   32a4e:	0f 85 65 02 00 00    	jne    32cb9 <core::str::pattern::StrSearcher::new+0x299>
   32a54:	45 31 c9             	xor    %r9d,%r9d
   32a57:	4d 89 f7             	mov    %r14,%r15
   32a5a:	4c 89 f1             	mov    %r14,%rcx
   32a5d:	45 31 ed             	xor    %r13d,%r13d
   32a60:	4d 39 e9             	cmp    %r13,%r9
   32a63:	4c 0f 46 f9          	cmovbe %rcx,%r15
   32a67:	4d 0f 47 e9          	cmova  %r9,%r13
   32a6b:	4d 39 f5             	cmp    %r14,%r13
   32a6e:	0f 87 2b 08 00 00    	ja     3329f <core::str::pattern::StrSearcher::new+0x87f>
   32a74:	4c 89 fe             	mov    %r15,%rsi
   32a77:	4c 01 ee             	add    %r13,%rsi
   32a7a:	0f 82 2b 08 00 00    	jb     332ab <core::str::pattern::StrSearcher::new+0x88b>
   32a80:	48 89 04 24          	mov    %rax,(%rsp)
   32a84:	4c 39 f6             	cmp    %r14,%rsi
   32a87:	0f 87 30 08 00 00    	ja     332bd <core::str::pattern::StrSearcher::new+0x89d>
   32a8d:	4b 8d 34 3c          	lea    (%r12,%r15,1),%rsi
   32a91:	4d 85 ff             	test   %r15,%r15
   32a94:	74 3b                	je     32ad1 <core::str::pattern::StrSearcher::new+0xb1>
   32a96:	4c 89 e7             	mov    %r12,%rdi
   32a99:	4c 89 ea             	mov    %r13,%rdx
   32a9c:	48 89 f3             	mov    %rsi,%rbx
   32a9f:	ff 15 13 33 01 00    	callq  *0x13313(%rip)        # 45db8 <bcmp@GLIBC_2.2.5>
   32aa5:	48 89 de             	mov    %rbx,%rsi
   32aa8:	85 c0                	test   %eax,%eax
   32aaa:	74 25                	je     32ad1 <core::str::pattern::StrSearcher::new+0xb1>
   32aac:	4d 89 f7             	mov    %r14,%r15
   32aaf:	4d 29 ef             	sub    %r13,%r15
   32ab2:	4d 39 fd             	cmp    %r15,%r13
   32ab5:	4d 0f 47 fd          	cmova  %r13,%r15
   32ab9:	49 83 fe 04          	cmp    $0x4,%r14
   32abd:	0f 83 2c 03 00 00    	jae    32def <core::str::pattern::StrSearcher::new+0x3cf>
   32ac3:	31 d2                	xor    %edx,%edx
   32ac5:	4c 89 e5             	mov    %r12,%rbp
   32ac8:	48 8b 04 24          	mov    (%rsp),%rax
   32acc:	e9 f8 04 00 00       	jmpq   32fc9 <core::str::pattern::StrSearcher::new+0x5a9>
   32ad1:	bb 01 00 00 00       	mov    $0x1,%ebx
   32ad6:	45 31 c0             	xor    %r8d,%r8d
   32ad9:	31 d2                	xor    %edx,%edx
   32adb:	b9 01 00 00 00       	mov    $0x1,%ecx
   32ae0:	45 31 c9             	xor    %r9d,%r9d
   32ae3:	e9 2a 00 00 00       	jmpq   32b12 <core::str::pattern::StrSearcher::new+0xf2>
   32ae8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   32aef:	00 
   32af0:	48 8d 2c 0a          	lea    (%rdx,%rcx,1),%rbp
   32af4:	48 83 c5 01          	add    $0x1,%rbp
   32af8:	48 89 eb             	mov    %rbp,%rbx
   32afb:	4c 29 cb             	sub    %r9,%rbx
   32afe:	31 d2                	xor    %edx,%edx
   32b00:	4c 89 c9             	mov    %r9,%rcx
   32b03:	49 89 c9             	mov    %rcx,%r9
   32b06:	48 89 e9             	mov    %rbp,%rcx
   32b09:	4c 39 fb             	cmp    %r15,%rbx
   32b0c:	0f 84 84 00 00 00    	je     32b96 <core::str::pattern::StrSearcher::new+0x176>
   32b12:	48 8d 04 11          	lea    (%rcx,%rdx,1),%rax
   32b16:	4c 39 f0             	cmp    %r14,%rax
   32b19:	73 7b                	jae    32b96 <core::str::pattern::StrSearcher::new+0x176>
   32b1b:	48 89 c8             	mov    %rcx,%rax
   32b1e:	48 f7 d0             	not    %rax
   32b21:	4c 89 f7             	mov    %r14,%rdi
   32b24:	48 29 d7             	sub    %rdx,%rdi
   32b27:	48 01 c7             	add    %rax,%rdi
   32b2a:	4c 39 f7             	cmp    %r14,%rdi
   32b2d:	0f 83 4e 07 00 00    	jae    33281 <core::str::pattern::StrSearcher::new+0x861>
   32b33:	48 89 d0             	mov    %rdx,%rax
   32b36:	48 f7 d0             	not    %rax
   32b39:	4c 01 f0             	add    %r14,%rax
   32b3c:	4c 29 c8             	sub    %r9,%rax
   32b3f:	4c 39 f0             	cmp    %r14,%rax
   32b42:	0f 83 42 07 00 00    	jae    3328a <core::str::pattern::StrSearcher::new+0x86a>
   32b48:	48 8d 69 01          	lea    0x1(%rcx),%rbp
   32b4c:	41 0f b6 04 04       	movzbl (%r12,%rax,1),%eax
   32b51:	41 38 04 3c          	cmp    %al,(%r12,%rdi,1)
   32b55:	72 99                	jb     32af0 <core::str::pattern::StrSearcher::new+0xd0>
   32b57:	75 27                	jne    32b80 <core::str::pattern::StrSearcher::new+0x160>
   32b59:	48 83 c2 01          	add    $0x1,%rdx
   32b5d:	48 39 da             	cmp    %rbx,%rdx
   32b60:	48 89 d0             	mov    %rdx,%rax
   32b63:	49 0f 44 c0          	cmove  %r8,%rax
   32b67:	49 0f 45 d0          	cmovne %r8,%rdx
   32b6b:	48 89 d5             	mov    %rdx,%rbp
   32b6e:	48 01 cd             	add    %rcx,%rbp
   32b71:	48 89 c2             	mov    %rax,%rdx
   32b74:	e9 87 ff ff ff       	jmpq   32b00 <core::str::pattern::StrSearcher::new+0xe0>
   32b79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   32b80:	bb 01 00 00 00       	mov    $0x1,%ebx
   32b85:	31 d2                	xor    %edx,%edx
   32b87:	49 89 c9             	mov    %rcx,%r9
   32b8a:	48 89 e9             	mov    %rbp,%rcx
   32b8d:	4c 39 fb             	cmp    %r15,%rbx
   32b90:	0f 85 7c ff ff ff    	jne    32b12 <core::str::pattern::StrSearcher::new+0xf2>
   32b96:	41 ba 01 00 00 00    	mov    $0x1,%r10d
   32b9c:	45 31 c0             	xor    %r8d,%r8d
   32b9f:	31 ed                	xor    %ebp,%ebp
   32ba1:	b9 01 00 00 00       	mov    $0x1,%ecx
   32ba6:	31 d2                	xor    %edx,%edx
   32ba8:	e9 25 00 00 00       	jmpq   32bd2 <core::str::pattern::StrSearcher::new+0x1b2>
   32bad:	0f 1f 00             	nopl   (%rax)
   32bb0:	48 8d 1c 29          	lea    (%rcx,%rbp,1),%rbx
   32bb4:	48 83 c3 01          	add    $0x1,%rbx
   32bb8:	49 89 da             	mov    %rbx,%r10
   32bbb:	49 29 d2             	sub    %rdx,%r10
   32bbe:	31 ed                	xor    %ebp,%ebp
   32bc0:	48 89 d1             	mov    %rdx,%rcx
   32bc3:	48 89 ca             	mov    %rcx,%rdx
   32bc6:	48 89 d9             	mov    %rbx,%rcx
   32bc9:	4d 39 fa             	cmp    %r15,%r10
   32bcc:	0f 84 85 00 00 00    	je     32c57 <core::str::pattern::StrSearcher::new+0x237>
   32bd2:	48 8d 04 29          	lea    (%rcx,%rbp,1),%rax
   32bd6:	4c 39 f0             	cmp    %r14,%rax
   32bd9:	73 7c                	jae    32c57 <core::str::pattern::StrSearcher::new+0x237>
   32bdb:	48 89 c8             	mov    %rcx,%rax
   32bde:	48 f7 d0             	not    %rax
   32be1:	4c 89 f7             	mov    %r14,%rdi
   32be4:	48 29 ef             	sub    %rbp,%rdi
   32be7:	48 01 c7             	add    %rax,%rdi
   32bea:	4c 39 f7             	cmp    %r14,%rdi
   32bed:	0f 83 8e 06 00 00    	jae    33281 <core::str::pattern::StrSearcher::new+0x861>
   32bf3:	48 89 e8             	mov    %rbp,%rax
   32bf6:	48 f7 d0             	not    %rax
   32bf9:	4c 01 f0             	add    %r14,%rax
   32bfc:	48 29 d0             	sub    %rdx,%rax
   32bff:	4c 39 f0             	cmp    %r14,%rax
   32c02:	0f 83 82 06 00 00    	jae    3328a <core::str::pattern::StrSearcher::new+0x86a>
   32c08:	48 8d 59 01          	lea    0x1(%rcx),%rbx
   32c0c:	41 0f b6 04 04       	movzbl (%r12,%rax,1),%eax
   32c11:	41 38 04 3c          	cmp    %al,(%r12,%rdi,1)
   32c15:	77 99                	ja     32bb0 <core::str::pattern::StrSearcher::new+0x190>
   32c17:	75 27                	jne    32c40 <core::str::pattern::StrSearcher::new+0x220>
   32c19:	48 83 c5 01          	add    $0x1,%rbp
   32c1d:	4c 39 d5             	cmp    %r10,%rbp
   32c20:	48 89 e8             	mov    %rbp,%rax
   32c23:	49 0f 44 c0          	cmove  %r8,%rax
   32c27:	49 0f 45 e8          	cmovne %r8,%rbp
   32c2b:	48 89 eb             	mov    %rbp,%rbx
   32c2e:	48 01 cb             	add    %rcx,%rbx
   32c31:	48 89 c5             	mov    %rax,%rbp
   32c34:	e9 87 ff ff ff       	jmpq   32bc0 <core::str::pattern::StrSearcher::new+0x1a0>
   32c39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   32c40:	41 ba 01 00 00 00    	mov    $0x1,%r10d
   32c46:	31 ed                	xor    %ebp,%ebp
   32c48:	48 89 ca             	mov    %rcx,%rdx
   32c4b:	48 89 d9             	mov    %rbx,%rcx
   32c4e:	4d 39 fa             	cmp    %r15,%r10
   32c51:	0f 85 7b ff ff ff    	jne    32bd2 <core::str::pattern::StrSearcher::new+0x1b2>
   32c57:	49 39 d1             	cmp    %rdx,%r9
   32c5a:	49 0f 47 d1          	cmova  %r9,%rdx
   32c5e:	4d 39 f7             	cmp    %r14,%r15
   32c61:	0f 87 62 06 00 00    	ja     332c9 <core::str::pattern::StrSearcher::new+0x8a9>
   32c67:	4c 89 f3             	mov    %r14,%rbx
   32c6a:	48 29 d3             	sub    %rdx,%rbx
   32c6d:	4d 85 ff             	test   %r15,%r15
   32c70:	48 8b 04 24          	mov    (%rsp),%rax
   32c74:	0f 84 66 01 00 00    	je     32de0 <core::str::pattern::StrSearcher::new+0x3c0>
   32c7a:	49 83 ff 04          	cmp    $0x4,%r15
   32c7e:	0f 83 77 03 00 00    	jae    32ffb <core::str::pattern::StrSearcher::new+0x5db>
   32c84:	31 d2                	xor    %edx,%edx
   32c86:	4c 89 e1             	mov    %r12,%rcx
   32c89:	e9 50 05 00 00       	jmpq   331de <core::str::pattern::StrSearcher::new+0x7be>
   32c8e:	48 89 30             	mov    %rsi,(%rax)
   32c91:	48 89 50 08          	mov    %rdx,0x8(%rax)
   32c95:	4c 89 60 10          	mov    %r12,0x10(%rax)
   32c99:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
   32c9d:	66 0f 11 40 18       	movupd %xmm0,0x18(%rax)
   32ca2:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
   32ca9:	00 
   32caa:	48 89 50 30          	mov    %rdx,0x30(%rax)
   32cae:	66 c7 40 38 01 01    	movw   $0x101,0x38(%rax)
   32cb4:	e9 7f 05 00 00       	jmpq   33238 <core::str::pattern::StrSearcher::new+0x818>
   32cb9:	bd 01 00 00 00       	mov    $0x1,%ebp
   32cbe:	45 31 c0             	xor    %r8d,%r8d
   32cc1:	45 31 c9             	xor    %r9d,%r9d
   32cc4:	41 ba 01 00 00 00    	mov    $0x1,%r10d
   32cca:	31 c9                	xor    %ecx,%ecx
   32ccc:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   32cd2:	e9 25 00 00 00       	jmpq   32cfc <core::str::pattern::StrSearcher::new+0x2dc>
   32cd7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   32cde:	00 00 
   32ce0:	49 8d 3c 0a          	lea    (%r10,%rcx,1),%rdi
   32ce4:	48 83 c7 01          	add    $0x1,%rdi
   32ce8:	49 89 ff             	mov    %rdi,%r15
   32ceb:	4d 29 cf             	sub    %r9,%r15
   32cee:	31 c9                	xor    %ecx,%ecx
   32cf0:	48 8d 2c 0f          	lea    (%rdi,%rcx,1),%rbp
   32cf4:	49 89 fa             	mov    %rdi,%r10
   32cf7:	4c 39 f5             	cmp    %r14,%rbp
   32cfa:	73 55                	jae    32d51 <core::str::pattern::StrSearcher::new+0x331>
   32cfc:	4a 8d 3c 09          	lea    (%rcx,%r9,1),%rdi
   32d00:	4c 39 f7             	cmp    %r14,%rdi
   32d03:	0f 83 6f 05 00 00    	jae    33278 <core::str::pattern::StrSearcher::new+0x858>
   32d09:	41 0f b6 1c 3c       	movzbl (%r12,%rdi,1),%ebx
   32d0e:	41 38 1c 2c          	cmp    %bl,(%r12,%rbp,1)
   32d12:	72 cc                	jb     32ce0 <core::str::pattern::StrSearcher::new+0x2c0>
   32d14:	75 2a                	jne    32d40 <core::str::pattern::StrSearcher::new+0x320>
   32d16:	48 83 c1 01          	add    $0x1,%rcx
   32d1a:	4c 39 f9             	cmp    %r15,%rcx
   32d1d:	48 89 cd             	mov    %rcx,%rbp
   32d20:	49 0f 44 e8          	cmove  %r8,%rbp
   32d24:	49 0f 45 c8          	cmovne %r8,%rcx
   32d28:	48 89 cf             	mov    %rcx,%rdi
   32d2b:	4c 01 d7             	add    %r10,%rdi
   32d2e:	48 89 e9             	mov    %rbp,%rcx
   32d31:	e9 ba ff ff ff       	jmpq   32cf0 <core::str::pattern::StrSearcher::new+0x2d0>
   32d36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   32d3d:	00 00 00 
   32d40:	49 8d 7a 01          	lea    0x1(%r10),%rdi
   32d44:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   32d4a:	31 c9                	xor    %ecx,%ecx
   32d4c:	4d 89 d1             	mov    %r10,%r9
   32d4f:	eb 9f                	jmp    32cf0 <core::str::pattern::StrSearcher::new+0x2d0>
   32d51:	bb 01 00 00 00       	mov    $0x1,%ebx
   32d56:	45 31 c0             	xor    %r8d,%r8d
   32d59:	45 31 ed             	xor    %r13d,%r13d
   32d5c:	bd 01 00 00 00       	mov    $0x1,%ebp
   32d61:	31 f6                	xor    %esi,%esi
   32d63:	b9 01 00 00 00       	mov    $0x1,%ecx
   32d68:	e9 23 00 00 00       	jmpq   32d90 <core::str::pattern::StrSearcher::new+0x370>
   32d6d:	0f 1f 00             	nopl   (%rax)
   32d70:	48 8d 3c 2e          	lea    (%rsi,%rbp,1),%rdi
   32d74:	48 83 c7 01          	add    $0x1,%rdi
   32d78:	48 89 f9             	mov    %rdi,%rcx
   32d7b:	4c 29 e9             	sub    %r13,%rcx
   32d7e:	31 f6                	xor    %esi,%esi
   32d80:	48 8d 1c 37          	lea    (%rdi,%rsi,1),%rbx
   32d84:	48 89 fd             	mov    %rdi,%rbp
   32d87:	4c 39 f3             	cmp    %r14,%rbx
   32d8a:	0f 83 d0 fc ff ff    	jae    32a60 <core::str::pattern::StrSearcher::new+0x40>
   32d90:	4a 8d 3c 2e          	lea    (%rsi,%r13,1),%rdi
   32d94:	4c 39 f7             	cmp    %r14,%rdi
   32d97:	0f 83 db 04 00 00    	jae    33278 <core::str::pattern::StrSearcher::new+0x858>
   32d9d:	41 0f b6 14 3c       	movzbl (%r12,%rdi,1),%edx
   32da2:	41 38 14 1c          	cmp    %dl,(%r12,%rbx,1)
   32da6:	77 c8                	ja     32d70 <core::str::pattern::StrSearcher::new+0x350>
   32da8:	75 26                	jne    32dd0 <core::str::pattern::StrSearcher::new+0x3b0>
   32daa:	48 83 c6 01          	add    $0x1,%rsi
   32dae:	48 39 ce             	cmp    %rcx,%rsi
   32db1:	48 89 f2             	mov    %rsi,%rdx
   32db4:	49 0f 44 d0          	cmove  %r8,%rdx
   32db8:	49 0f 45 f0          	cmovne %r8,%rsi
   32dbc:	48 89 f7             	mov    %rsi,%rdi
   32dbf:	48 01 ef             	add    %rbp,%rdi
   32dc2:	48 89 d6             	mov    %rdx,%rsi
   32dc5:	e9 b6 ff ff ff       	jmpq   32d80 <core::str::pattern::StrSearcher::new+0x360>
   32dca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   32dd0:	48 8d 7d 01          	lea    0x1(%rbp),%rdi
   32dd4:	b9 01 00 00 00       	mov    $0x1,%ecx
   32dd9:	31 f6                	xor    %esi,%esi
   32ddb:	49 89 ed             	mov    %rbp,%r13
   32dde:	eb a0                	jmp    32d80 <core::str::pattern::StrSearcher::new+0x360>
   32de0:	31 ed                	xor    %ebp,%ebp
   32de2:	4c 89 f1             	mov    %r14,%rcx
   32de5:	31 d2                	xor    %edx,%edx
   32de7:	45 31 ff             	xor    %r15d,%r15d
   32dea:	e9 04 04 00 00       	jmpq   331f3 <core::str::pattern::StrSearcher::new+0x7d3>
   32def:	4c 89 f5             	mov    %r14,%rbp
   32df2:	48 83 e5 fc          	and    $0xfffffffffffffffc,%rbp
   32df6:	48 8d 4d fc          	lea    -0x4(%rbp),%rcx
   32dfa:	48 89 ca             	mov    %rcx,%rdx
   32dfd:	48 c1 ea 02          	shr    $0x2,%rdx
   32e01:	48 83 c2 01          	add    $0x1,%rdx
   32e05:	48 85 c9             	test   %rcx,%rcx
   32e08:	48 8b 04 24          	mov    (%rsp),%rax
   32e0c:	0f 84 35 04 00 00    	je     33247 <core::str::pattern::StrSearcher::new+0x827>
   32e12:	48 89 d6             	mov    %rdx,%rsi
   32e15:	48 83 e6 fe          	and    $0xfffffffffffffffe,%rsi
   32e19:	48 f7 de             	neg    %rsi
   32e1c:	66 0f ef d2          	pxor   %xmm2,%xmm2
   32e20:	31 c9                	xor    %ecx,%ecx
   32e22:	66 44 0f 6f 05 55 6c 	movdqa 0x6c55(%rip),%xmm8        # 39a80 <str.6+0x2760>
   32e29:	00 00 
   32e2b:	66 0f 6f 25 0d 32 00 	movdqa 0x320d(%rip),%xmm4        # 36040 <_fini+0x71c>
   32e32:	00 
   32e33:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
   32e37:	66 0f 57 c9          	xorpd  %xmm1,%xmm1
   32e3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   32e40:	41 0f b7 3c 0c       	movzwl (%r12,%rcx,1),%edi
   32e45:	66 0f 6e ef          	movd   %edi,%xmm5
   32e49:	41 0f b7 7c 0c 02    	movzwl 0x2(%r12,%rcx,1),%edi
   32e4f:	66 0f 6e f7          	movd   %edi,%xmm6
   32e53:	66 41 0f db e8       	pand   %xmm8,%xmm5
   32e58:	66 41 0f db f0       	pand   %xmm8,%xmm6
   32e5d:	66 0f 60 ea          	punpcklbw %xmm2,%xmm5
   32e61:	66 0f 61 ea          	punpcklwd %xmm2,%xmm5
   32e65:	66 0f 62 ea          	punpckldq %xmm2,%xmm5
   32e69:	66 0f 60 f2          	punpcklbw %xmm2,%xmm6
   32e6d:	66 0f 61 f2          	punpcklwd %xmm2,%xmm6
   32e71:	66 0f 62 f2          	punpckldq %xmm2,%xmm6
   32e75:	66 0f 6f fc          	movdqa %xmm4,%xmm7
   32e79:	66 0f f3 fd          	psllq  %xmm5,%xmm7
   32e7d:	66 0f 70 dd 4e       	pshufd $0x4e,%xmm5,%xmm3
   32e82:	66 0f 6f ec          	movdqa %xmm4,%xmm5
   32e86:	66 0f f3 eb          	psllq  %xmm3,%xmm5
   32e8a:	f2 0f 10 ef          	movsd  %xmm7,%xmm5
   32e8e:	66 0f 56 e8          	orpd   %xmm0,%xmm5
   32e92:	66 0f 6f c4          	movdqa %xmm4,%xmm0
   32e96:	66 0f f3 c6          	psllq  %xmm6,%xmm0
   32e9a:	66 0f 70 de 4e       	pshufd $0x4e,%xmm6,%xmm3
   32e9f:	66 0f 6f f4          	movdqa %xmm4,%xmm6
   32ea3:	66 0f f3 f3          	psllq  %xmm3,%xmm6
   32ea7:	f2 0f 10 f0          	movsd  %xmm0,%xmm6
   32eab:	66 0f 56 f1          	orpd   %xmm1,%xmm6
   32eaf:	41 0f b7 7c 0c 04    	movzwl 0x4(%r12,%rcx,1),%edi
   32eb5:	66 0f 6e c7          	movd   %edi,%xmm0
   32eb9:	41 0f b7 7c 0c 06    	movzwl 0x6(%r12,%rcx,1),%edi
   32ebf:	66 0f 6e cf          	movd   %edi,%xmm1
   32ec3:	66 41 0f db c0       	pand   %xmm8,%xmm0
   32ec8:	66 41 0f db c8       	pand   %xmm8,%xmm1
   32ecd:	66 0f 60 c2          	punpcklbw %xmm2,%xmm0
   32ed1:	66 0f 61 c2          	punpcklwd %xmm2,%xmm0
   32ed5:	66 0f 62 c2          	punpckldq %xmm2,%xmm0
   32ed9:	66 0f 60 ca          	punpcklbw %xmm2,%xmm1
   32edd:	66 0f 6f dc          	movdqa %xmm4,%xmm3
   32ee1:	66 0f f3 d8          	psllq  %xmm0,%xmm3
   32ee5:	66 0f 61 ca          	punpcklwd %xmm2,%xmm1
   32ee9:	66 0f 70 f8 4e       	pshufd $0x4e,%xmm0,%xmm7
   32eee:	66 0f 6f c4          	movdqa %xmm4,%xmm0
   32ef2:	66 0f f3 c7          	psllq  %xmm7,%xmm0
   32ef6:	66 0f 62 ca          	punpckldq %xmm2,%xmm1
   32efa:	f2 0f 10 c3          	movsd  %xmm3,%xmm0
   32efe:	66 0f 6f dc          	movdqa %xmm4,%xmm3
   32f02:	66 0f f3 d9          	psllq  %xmm1,%xmm3
   32f06:	66 0f 56 c5          	orpd   %xmm5,%xmm0
   32f0a:	66 0f 70 e9 4e       	pshufd $0x4e,%xmm1,%xmm5
   32f0f:	66 0f 6f cc          	movdqa %xmm4,%xmm1
   32f13:	66 0f f3 cd          	psllq  %xmm5,%xmm1
   32f17:	f2 0f 10 cb          	movsd  %xmm3,%xmm1
   32f1b:	66 0f 56 ce          	orpd   %xmm6,%xmm1
   32f1f:	48 83 c1 08          	add    $0x8,%rcx
   32f23:	48 83 c6 02          	add    $0x2,%rsi
   32f27:	0f 85 13 ff ff ff    	jne    32e40 <core::str::pattern::StrSearcher::new+0x420>
   32f2d:	f6 c2 01             	test   $0x1,%dl
   32f30:	74 7d                	je     32faf <core::str::pattern::StrSearcher::new+0x58f>
   32f32:	41 0f b7 54 0c 02    	movzwl 0x2(%r12,%rcx,1),%edx
   32f38:	66 0f 6e d2          	movd   %edx,%xmm2
   32f3c:	66 0f 6f 1d 3c 6b 00 	movdqa 0x6b3c(%rip),%xmm3        # 39a80 <str.6+0x2760>
   32f43:	00 
   32f44:	66 0f db d3          	pand   %xmm3,%xmm2
   32f48:	66 0f ef e4          	pxor   %xmm4,%xmm4
   32f4c:	66 0f 60 d4          	punpcklbw %xmm4,%xmm2
   32f50:	66 0f 61 d4          	punpcklwd %xmm4,%xmm2
   32f54:	66 0f 62 d4          	punpckldq %xmm4,%xmm2
   32f58:	66 0f 6f 2d e0 30 00 	movdqa 0x30e0(%rip),%xmm5        # 36040 <_fini+0x71c>
   32f5f:	00 
   32f60:	66 0f 6f f5          	movdqa %xmm5,%xmm6
   32f64:	66 0f f3 f2          	psllq  %xmm2,%xmm6
   32f68:	66 0f 70 d2 4e       	pshufd $0x4e,%xmm2,%xmm2
   32f6d:	66 0f 6f fd          	movdqa %xmm5,%xmm7
   32f71:	66 0f f3 fa          	psllq  %xmm2,%xmm7
   32f75:	f2 0f 10 fe          	movsd  %xmm6,%xmm7
   32f79:	66 0f 56 cf          	orpd   %xmm7,%xmm1
   32f7d:	41 0f b7 0c 0c       	movzwl (%r12,%rcx,1),%ecx
   32f82:	66 0f 6e d1          	movd   %ecx,%xmm2
   32f86:	66 0f db d3          	pand   %xmm3,%xmm2
   32f8a:	66 0f 60 d4          	punpcklbw %xmm4,%xmm2
   32f8e:	66 0f 61 d4          	punpcklwd %xmm4,%xmm2
   32f92:	66 0f 62 d4          	punpckldq %xmm4,%xmm2
   32f96:	66 0f 6f dd          	movdqa %xmm5,%xmm3
   32f9a:	66 0f f3 da          	psllq  %xmm2,%xmm3
   32f9e:	66 0f 70 d2 4e       	pshufd $0x4e,%xmm2,%xmm2
   32fa3:	66 0f f3 ea          	psllq  %xmm2,%xmm5
   32fa7:	f2 0f 10 eb          	movsd  %xmm3,%xmm5
   32fab:	66 0f 56 c5          	orpd   %xmm5,%xmm0
   32faf:	66 0f 56 c1          	orpd   %xmm1,%xmm0
   32fb3:	66 0f 70 c8 4e       	pshufd $0x4e,%xmm0,%xmm1
   32fb8:	66 0f eb c8          	por    %xmm0,%xmm1
   32fbc:	66 48 0f 7e ca       	movq   %xmm1,%rdx
   32fc1:	4c 39 f5             	cmp    %r14,%rbp
   32fc4:	74 1b                	je     32fe1 <core::str::pattern::StrSearcher::new+0x5c1>
   32fc6:	4c 01 e5             	add    %r12,%rbp
   32fc9:	4b 8d 0c 34          	lea    (%r12,%r14,1),%rcx
   32fcd:	0f 1f 00             	nopl   (%rax)
   32fd0:	0f b6 75 00          	movzbl 0x0(%rbp),%esi
   32fd4:	48 83 c5 01          	add    $0x1,%rbp
   32fd8:	48 0f ab f2          	bts    %rsi,%rdx
   32fdc:	48 39 e9             	cmp    %rbp,%rcx
   32fdf:	75 ef                	jne    32fd0 <core::str::pattern::StrSearcher::new+0x5b0>
   32fe1:	49 83 c7 01          	add    $0x1,%r15
   32fe5:	48 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%rbp
   32fec:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
   32ff3:	4c 89 eb             	mov    %r13,%rbx
   32ff6:	e9 f8 01 00 00       	jmpq   331f3 <core::str::pattern::StrSearcher::new+0x7d3>
   32ffb:	4c 89 f9             	mov    %r15,%rcx
   32ffe:	48 83 e1 fc          	and    $0xfffffffffffffffc,%rcx
   33002:	48 8d 51 fc          	lea    -0x4(%rcx),%rdx
   33006:	49 89 d0             	mov    %rdx,%r8
   33009:	49 c1 e8 02          	shr    $0x2,%r8
   3300d:	49 83 c0 01          	add    $0x1,%r8
   33011:	48 85 d2             	test   %rdx,%rdx
   33014:	0f 84 45 02 00 00    	je     3325f <core::str::pattern::StrSearcher::new+0x83f>
   3301a:	4c 89 c7             	mov    %r8,%rdi
   3301d:	48 83 e7 fe          	and    $0xfffffffffffffffe,%rdi
   33021:	48 f7 df             	neg    %rdi
   33024:	66 0f ef d2          	pxor   %xmm2,%xmm2
   33028:	31 d2                	xor    %edx,%edx
   3302a:	66 44 0f 6f 05 4d 6a 	movdqa 0x6a4d(%rip),%xmm8        # 39a80 <str.6+0x2760>
   33031:	00 00 
   33033:	66 0f 6f 25 05 30 00 	movdqa 0x3005(%rip),%xmm4        # 36040 <_fini+0x71c>
   3303a:	00 
   3303b:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
   3303f:	66 0f 57 c9          	xorpd  %xmm1,%xmm1
   33043:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3304a:	00 00 00 
   3304d:	0f 1f 00             	nopl   (%rax)
   33050:	41 0f b7 2c 14       	movzwl (%r12,%rdx,1),%ebp
   33055:	66 0f 6e ed          	movd   %ebp,%xmm5
   33059:	41 0f b7 6c 14 02    	movzwl 0x2(%r12,%rdx,1),%ebp
   3305f:	66 0f 6e f5          	movd   %ebp,%xmm6
   33063:	66 41 0f db e8       	pand   %xmm8,%xmm5
   33068:	66 41 0f db f0       	pand   %xmm8,%xmm6
   3306d:	66 0f 60 ea          	punpcklbw %xmm2,%xmm5
   33071:	66 0f 61 ea          	punpcklwd %xmm2,%xmm5
   33075:	66 0f 62 ea          	punpckldq %xmm2,%xmm5
   33079:	66 0f 60 f2          	punpcklbw %xmm2,%xmm6
   3307d:	66 0f 61 f2          	punpcklwd %xmm2,%xmm6
   33081:	66 0f 62 f2          	punpckldq %xmm2,%xmm6
   33085:	66 0f 6f fc          	movdqa %xmm4,%xmm7
   33089:	66 0f f3 fd          	psllq  %xmm5,%xmm7
   3308d:	66 0f 70 dd 4e       	pshufd $0x4e,%xmm5,%xmm3
   33092:	66 0f 6f ec          	movdqa %xmm4,%xmm5
   33096:	66 0f f3 eb          	psllq  %xmm3,%xmm5
   3309a:	f2 0f 10 ef          	movsd  %xmm7,%xmm5
   3309e:	66 0f 56 e8          	orpd   %xmm0,%xmm5
   330a2:	66 0f 6f c4          	movdqa %xmm4,%xmm0
   330a6:	66 0f f3 c6          	psllq  %xmm6,%xmm0
   330aa:	66 0f 70 de 4e       	pshufd $0x4e,%xmm6,%xmm3
   330af:	66 0f 6f f4          	movdqa %xmm4,%xmm6
   330b3:	66 0f f3 f3          	psllq  %xmm3,%xmm6
   330b7:	f2 0f 10 f0          	movsd  %xmm0,%xmm6
   330bb:	66 0f 56 f1          	orpd   %xmm1,%xmm6
   330bf:	41 0f b7 6c 14 04    	movzwl 0x4(%r12,%rdx,1),%ebp
   330c5:	66 0f 6e c5          	movd   %ebp,%xmm0
   330c9:	41 0f b7 6c 14 06    	movzwl 0x6(%r12,%rdx,1),%ebp
   330cf:	66 0f 6e cd          	movd   %ebp,%xmm1
   330d3:	66 41 0f db c0       	pand   %xmm8,%xmm0
   330d8:	66 41 0f db c8       	pand   %xmm8,%xmm1
   330dd:	66 0f 60 c2          	punpcklbw %xmm2,%xmm0
   330e1:	66 0f 61 c2          	punpcklwd %xmm2,%xmm0
   330e5:	66 0f 62 c2          	punpckldq %xmm2,%xmm0
   330e9:	66 0f 60 ca          	punpcklbw %xmm2,%xmm1
   330ed:	66 0f 6f dc          	movdqa %xmm4,%xmm3
   330f1:	66 0f f3 d8          	psllq  %xmm0,%xmm3
   330f5:	66 0f 61 ca          	punpcklwd %xmm2,%xmm1
   330f9:	66 0f 70 f8 4e       	pshufd $0x4e,%xmm0,%xmm7
   330fe:	66 0f 6f c4          	movdqa %xmm4,%xmm0
   33102:	66 0f f3 c7          	psllq  %xmm7,%xmm0
   33106:	66 0f 62 ca          	punpckldq %xmm2,%xmm1
   3310a:	f2 0f 10 c3          	movsd  %xmm3,%xmm0
   3310e:	66 0f 6f dc          	movdqa %xmm4,%xmm3
   33112:	66 0f f3 d9          	psllq  %xmm1,%xmm3
   33116:	66 0f 56 c5          	orpd   %xmm5,%xmm0
   3311a:	66 0f 70 e9 4e       	pshufd $0x4e,%xmm1,%xmm5
   3311f:	66 0f 6f cc          	movdqa %xmm4,%xmm1
   33123:	66 0f f3 cd          	psllq  %xmm5,%xmm1
   33127:	f2 0f 10 cb          	movsd  %xmm3,%xmm1
   3312b:	66 0f 56 ce          	orpd   %xmm6,%xmm1
   3312f:	48 83 c2 08          	add    $0x8,%rdx
   33133:	48 83 c7 02          	add    $0x2,%rdi
   33137:	0f 85 13 ff ff ff    	jne    33050 <core::str::pattern::StrSearcher::new+0x630>
   3313d:	41 f6 c0 01          	test   $0x1,%r8b
   33141:	74 7d                	je     331c0 <core::str::pattern::StrSearcher::new+0x7a0>
   33143:	41 0f b7 7c 14 02    	movzwl 0x2(%r12,%rdx,1),%edi
   33149:	66 0f 6e d7          	movd   %edi,%xmm2
   3314d:	66 0f 6f 1d 2b 69 00 	movdqa 0x692b(%rip),%xmm3        # 39a80 <str.6+0x2760>
   33154:	00 
   33155:	66 0f db d3          	pand   %xmm3,%xmm2
   33159:	66 0f ef e4          	pxor   %xmm4,%xmm4
   3315d:	66 0f 60 d4          	punpcklbw %xmm4,%xmm2
   33161:	66 0f 61 d4          	punpcklwd %xmm4,%xmm2
   33165:	66 0f 62 d4          	punpckldq %xmm4,%xmm2
   33169:	66 0f 6f 2d cf 2e 00 	movdqa 0x2ecf(%rip),%xmm5        # 36040 <_fini+0x71c>
   33170:	00 
   33171:	66 0f 6f f5          	movdqa %xmm5,%xmm6
   33175:	66 0f f3 f2          	psllq  %xmm2,%xmm6
   33179:	66 0f 70 d2 4e       	pshufd $0x4e,%xmm2,%xmm2
   3317e:	66 0f 6f fd          	movdqa %xmm5,%xmm7
   33182:	66 0f f3 fa          	psllq  %xmm2,%xmm7
   33186:	f2 0f 10 fe          	movsd  %xmm6,%xmm7
   3318a:	66 0f 56 cf          	orpd   %xmm7,%xmm1
   3318e:	41 0f b7 14 14       	movzwl (%r12,%rdx,1),%edx
   33193:	66 0f 6e d2          	movd   %edx,%xmm2
   33197:	66 0f db d3          	pand   %xmm3,%xmm2
   3319b:	66 0f 60 d4          	punpcklbw %xmm4,%xmm2
   3319f:	66 0f 61 d4          	punpcklwd %xmm4,%xmm2
   331a3:	66 0f 62 d4          	punpckldq %xmm4,%xmm2
   331a7:	66 0f 6f dd          	movdqa %xmm5,%xmm3
   331ab:	66 0f f3 da          	psllq  %xmm2,%xmm3
   331af:	66 0f 70 d2 4e       	pshufd $0x4e,%xmm2,%xmm2
   331b4:	66 0f f3 ea          	psllq  %xmm2,%xmm5
   331b8:	f2 0f 10 eb          	movsd  %xmm3,%xmm5
   331bc:	66 0f 56 c5          	orpd   %xmm5,%xmm0
   331c0:	66 0f 56 c1          	orpd   %xmm1,%xmm0
   331c4:	66 0f 70 c8 4e       	pshufd $0x4e,%xmm0,%xmm1
   331c9:	66 0f eb c8          	por    %xmm0,%xmm1
   331cd:	66 48 0f 7e ca       	movq   %xmm1,%rdx
   331d2:	49 39 cf             	cmp    %rcx,%r15
   331d5:	75 04                	jne    331db <core::str::pattern::StrSearcher::new+0x7bb>
   331d7:	31 ed                	xor    %ebp,%ebp
   331d9:	eb 15                	jmp    331f0 <core::str::pattern::StrSearcher::new+0x7d0>
   331db:	4c 01 e1             	add    %r12,%rcx
   331de:	31 ed                	xor    %ebp,%ebp
   331e0:	0f b6 39             	movzbl (%rcx),%edi
   331e3:	48 83 c1 01          	add    $0x1,%rcx
   331e7:	48 0f ab fa          	bts    %rdi,%rdx
   331eb:	48 39 ce             	cmp    %rcx,%rsi
   331ee:	75 f0                	jne    331e0 <core::str::pattern::StrSearcher::new+0x7c0>
   331f0:	4c 89 f1             	mov    %r14,%rcx
   331f3:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   331f8:	48 89 38             	mov    %rdi,(%rax)
   331fb:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   33200:	48 89 78 08          	mov    %rdi,0x8(%rax)
   33204:	4c 89 60 10          	mov    %r12,0x10(%rax)
   33208:	4c 89 70 18          	mov    %r14,0x18(%rax)
   3320c:	48 c7 40 20 01 00 00 	movq   $0x1,0x20(%rax)
   33213:	00 
   33214:	4c 89 68 28          	mov    %r13,0x28(%rax)
   33218:	48 89 58 30          	mov    %rbx,0x30(%rax)
   3321c:	4c 89 78 38          	mov    %r15,0x38(%rax)
   33220:	48 89 50 40          	mov    %rdx,0x40(%rax)
   33224:	48 c7 40 48 00 00 00 	movq   $0x0,0x48(%rax)
   3322b:	00 
   3322c:	48 89 78 50          	mov    %rdi,0x50(%rax)
   33230:	48 89 68 58          	mov    %rbp,0x58(%rax)
   33234:	48 89 48 60          	mov    %rcx,0x60(%rax)
   33238:	48 83 c4 18          	add    $0x18,%rsp
   3323c:	5b                   	pop    %rbx
   3323d:	41 5c                	pop    %r12
   3323f:	41 5d                	pop    %r13
   33241:	41 5e                	pop    %r14
   33243:	41 5f                	pop    %r15
   33245:	5d                   	pop    %rbp
   33246:	c3                   	retq   
   33247:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
   3324b:	31 c9                	xor    %ecx,%ecx
   3324d:	66 0f 57 c9          	xorpd  %xmm1,%xmm1
   33251:	f6 c2 01             	test   $0x1,%dl
   33254:	0f 85 d8 fc ff ff    	jne    32f32 <core::str::pattern::StrSearcher::new+0x512>
   3325a:	e9 50 fd ff ff       	jmpq   32faf <core::str::pattern::StrSearcher::new+0x58f>
   3325f:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
   33263:	31 d2                	xor    %edx,%edx
   33265:	66 0f 57 c9          	xorpd  %xmm1,%xmm1
   33269:	41 f6 c0 01          	test   $0x1,%r8b
   3326d:	0f 85 d0 fe ff ff    	jne    33143 <core::str::pattern::StrSearcher::new+0x723>
   33273:	e9 48 ff ff ff       	jmpq   331c0 <core::str::pattern::StrSearcher::new+0x7a0>
   33278:	48 8d 15 a9 21 01 00 	lea    0x121a9(%rip),%rdx        # 45428 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1ef0>
   3327f:	eb 13                	jmp    33294 <core::str::pattern::StrSearcher::new+0x874>
   33281:	48 8d 15 b8 21 01 00 	lea    0x121b8(%rip),%rdx        # 45440 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1f08>
   33288:	eb 0a                	jmp    33294 <core::str::pattern::StrSearcher::new+0x874>
   3328a:	48 8d 15 c7 21 01 00 	lea    0x121c7(%rip),%rdx        # 45458 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1f20>
   33291:	48 89 c7             	mov    %rax,%rdi
   33294:	4c 89 f6             	mov    %r14,%rsi
   33297:	ff 15 f3 29 01 00    	callq  *0x129f3(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   3329d:	0f 0b                	ud2    
   3329f:	48 8d 15 3a 21 01 00 	lea    0x1213a(%rip),%rdx        # 453e0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1ea8>
   332a6:	4c 89 ef             	mov    %r13,%rdi
   332a9:	eb 28                	jmp    332d3 <core::str::pattern::StrSearcher::new+0x8b3>
   332ab:	48 8d 15 46 21 01 00 	lea    0x12146(%rip),%rdx        # 453f8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1ec0>
   332b2:	4c 89 ff             	mov    %r15,%rdi
   332b5:	ff 15 e5 2b 01 00    	callq  *0x12be5(%rip)        # 45ea0 <_GLOBAL_OFFSET_TABLE_+0x518>
   332bb:	0f 0b                	ud2    
   332bd:	48 8d 15 34 21 01 00 	lea    0x12134(%rip),%rdx        # 453f8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1ec0>
   332c4:	48 89 f7             	mov    %rsi,%rdi
   332c7:	eb 0a                	jmp    332d3 <core::str::pattern::StrSearcher::new+0x8b3>
   332c9:	48 8d 15 40 21 01 00 	lea    0x12140(%rip),%rdx        # 45410 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1ed8>
   332d0:	4c 89 ff             	mov    %r15,%rdi
   332d3:	4c 89 f6             	mov    %r14,%rsi
   332d6:	ff 15 4c 27 01 00    	callq  *0x1274c(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   332dc:	0f 0b                	ud2    
   332de:	66 90                	xchg   %ax,%ax

00000000000332e0 <core::str::lossy::Utf8Lossy::from_bytes>:
   332e0:	48 89 f2             	mov    %rsi,%rdx
   332e3:	48 89 f8             	mov    %rdi,%rax
   332e6:	c3                   	retq   
   332e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   332ee:	00 00 

00000000000332f0 <core::str::lossy::Utf8Lossy::chunks>:
   332f0:	48 89 f2             	mov    %rsi,%rdx
   332f3:	48 89 f8             	mov    %rdi,%rax
   332f6:	c3                   	retq   
   332f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   332fe:	00 00 

0000000000033300 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next>:
   33300:	55                   	push   %rbp
   33301:	41 57                	push   %r15
   33303:	41 56                	push   %r14
   33305:	53                   	push   %rbx
   33306:	50                   	push   %rax
   33307:	49 89 f0             	mov    %rsi,%r8
   3330a:	48 89 f8             	mov    %rdi,%rax
   3330d:	48 8b 76 08          	mov    0x8(%rsi),%rsi
   33311:	48 85 f6             	test   %rsi,%rsi
   33314:	0f 84 0b 02 00 00    	je     33525 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x225>
   3331a:	4d 8b 18             	mov    (%r8),%r11
   3331d:	31 ff                	xor    %edi,%edi
   3331f:	4c 8d 0d ef 6d 00 00 	lea    0x6def(%rip),%r9        # 3a115 <core::str::validations::UTF8_CHAR_WIDTH>
   33326:	4c 8d 15 04 6b 00 00 	lea    0x6b04(%rip),%r10        # 39e31 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x2e1>
   3332d:	eb 13                	jmp    33342 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x42>
   3332f:	48 83 c7 04          	add    $0x4,%rdi
   33333:	48 89 f9             	mov    %rdi,%rcx
   33336:	48 89 cf             	mov    %rcx,%rdi
   33339:	48 39 f1             	cmp    %rsi,%rcx
   3333c:	0f 83 ef 01 00 00    	jae    33531 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x231>
   33342:	41 0f b6 14 3b       	movzbl (%r11,%rdi,1),%edx
   33347:	48 8d 4f 01          	lea    0x1(%rdi),%rcx
   3334b:	84 d2                	test   %dl,%dl
   3334d:	79 e7                	jns    33336 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x36>
   3334f:	42 0f b6 1c 0a       	movzbl (%rdx,%r9,1),%ebx
   33354:	80 fb 02             	cmp    $0x2,%bl
   33357:	0f 84 8a 00 00 00    	je     333e7 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0xe7>
   3335d:	80 fb 03             	cmp    $0x3,%bl
   33360:	74 49                	je     333ab <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0xab>
   33362:	80 fb 04             	cmp    $0x4,%bl
   33365:	0f 85 f0 01 00 00    	jne    3355b <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x25b>
   3336b:	4d 8d 34 0b          	lea    (%r11,%rcx,1),%r14
   3336f:	49 89 f7             	mov    %rsi,%r15
   33372:	49 29 cf             	sub    %rcx,%r15
   33375:	bb 00 00 00 00       	mov    $0x0,%ebx
   3337a:	49 0f 47 de          	cmova  %r14,%rbx
   3337e:	48 85 db             	test   %rbx,%rbx
   33381:	49 0f 44 da          	cmove  %r10,%rbx
   33385:	0f b6 1b             	movzbl (%rbx),%ebx
   33388:	80 fa f4             	cmp    $0xf4,%dl
   3338b:	0f 84 88 00 00 00    	je     33419 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x119>
   33391:	80 fa f0             	cmp    $0xf0,%dl
   33394:	0f 85 a7 00 00 00    	jne    33441 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x141>
   3339a:	80 c3 70             	add    $0x70,%bl
   3339d:	80 fb 30             	cmp    $0x30,%bl
   333a0:	0f 82 b8 00 00 00    	jb     3345e <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x15e>
   333a6:	e9 05 02 00 00       	jmpq   335b0 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x2b0>
   333ab:	4d 8d 34 0b          	lea    (%r11,%rcx,1),%r14
   333af:	49 89 f7             	mov    %rsi,%r15
   333b2:	49 29 cf             	sub    %rcx,%r15
   333b5:	bb 00 00 00 00       	mov    $0x0,%ebx
   333ba:	49 0f 47 de          	cmova  %r14,%rbx
   333be:	48 85 db             	test   %rbx,%rbx
   333c1:	49 0f 44 da          	cmove  %r10,%rbx
   333c5:	0f b6 1b             	movzbl (%rbx),%ebx
   333c8:	80 fa ed             	cmp    $0xed,%dl
   333cb:	74 5e                	je     3342b <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x12b>
   333cd:	80 fa e0             	cmp    $0xe0,%dl
   333d0:	0f 85 e3 00 00 00    	jne    334b9 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x1b9>
   333d6:	80 e3 e0             	and    $0xe0,%bl
   333d9:	80 fb a0             	cmp    $0xa0,%bl
   333dc:	0f 84 0f 01 00 00    	je     334f1 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x1f1>
   333e2:	e9 e4 01 00 00       	jmpq   335cb <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x2cb>
   333e7:	4d 8d 34 0b          	lea    (%r11,%rcx,1),%r14
   333eb:	48 89 f3             	mov    %rsi,%rbx
   333ee:	48 29 cb             	sub    %rcx,%rbx
   333f1:	ba 00 00 00 00       	mov    $0x0,%edx
   333f6:	49 0f 47 d6          	cmova  %r14,%rdx
   333fa:	48 85 d2             	test   %rdx,%rdx
   333fd:	49 0f 44 d2          	cmove  %r10,%rdx
   33401:	0f b6 12             	movzbl (%rdx),%edx
   33404:	80 e2 c0             	and    $0xc0,%dl
   33407:	80 fa 80             	cmp    $0x80,%dl
   3340a:	0f 85 6e 01 00 00    	jne    3357e <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x27e>
   33410:	48 83 c7 02          	add    $0x2,%rdi
   33414:	e9 1a ff ff ff       	jmpq   33333 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x33>
   33419:	84 db                	test   %bl,%bl
   3341b:	0f 89 8f 01 00 00    	jns    335b0 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x2b0>
   33421:	80 fb 90             	cmp    $0x90,%bl
   33424:	72 38                	jb     3345e <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x15e>
   33426:	e9 85 01 00 00       	jmpq   335b0 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x2b0>
   3342b:	84 db                	test   %bl,%bl
   3342d:	0f 89 98 01 00 00    	jns    335cb <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x2cb>
   33433:	80 fb a0             	cmp    $0xa0,%bl
   33436:	0f 82 b5 00 00 00    	jb     334f1 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x1f1>
   3343c:	e9 8a 01 00 00       	jmpq   335cb <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x2cb>
   33441:	80 fb bf             	cmp    $0xbf,%bl
   33444:	0f 87 66 01 00 00    	ja     335b0 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x2b0>
   3344a:	80 c2 0f             	add    $0xf,%dl
   3344d:	80 fa 02             	cmp    $0x2,%dl
   33450:	0f 87 5a 01 00 00    	ja     335b0 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x2b0>
   33456:	84 db                	test   %bl,%bl
   33458:	0f 89 52 01 00 00    	jns    335b0 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x2b0>
   3345e:	48 8d 4f 02          	lea    0x2(%rdi),%rcx
   33462:	48 39 ce             	cmp    %rcx,%rsi
   33465:	49 8d 54 3b 02       	lea    0x2(%r11,%rdi,1),%rdx
   3346a:	bb 00 00 00 00       	mov    $0x0,%ebx
   3346f:	48 0f 47 da          	cmova  %rdx,%rbx
   33473:	48 85 db             	test   %rbx,%rbx
   33476:	49 0f 44 da          	cmove  %r10,%rbx
   3347a:	0f b6 1b             	movzbl (%rbx),%ebx
   3347d:	80 e3 c0             	and    $0xc0,%bl
   33480:	80 fb 80             	cmp    $0x80,%bl
   33483:	0f 85 9b 01 00 00    	jne    33624 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x324>
   33489:	48 8d 4f 03          	lea    0x3(%rdi),%rcx
   3348d:	48 39 ce             	cmp    %rcx,%rsi
   33490:	49 8d 54 3b 03       	lea    0x3(%r11,%rdi,1),%rdx
   33495:	bb 00 00 00 00       	mov    $0x0,%ebx
   3349a:	48 0f 47 da          	cmova  %rdx,%rbx
   3349e:	48 85 db             	test   %rbx,%rbx
   334a1:	49 0f 44 da          	cmove  %r10,%rbx
   334a5:	0f b6 1b             	movzbl (%rbx),%ebx
   334a8:	80 e3 c0             	and    $0xc0,%bl
   334ab:	80 fb 80             	cmp    $0x80,%bl
   334ae:	0f 84 7b fe ff ff    	je     3332f <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x2f>
   334b4:	e9 a9 01 00 00       	jmpq   33662 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x362>
   334b9:	8d 6a 1f             	lea    0x1f(%rdx),%ebp
   334bc:	40 80 fd 0b          	cmp    $0xb,%bpl
   334c0:	77 12                	ja     334d4 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x1d4>
   334c2:	84 db                	test   %bl,%bl
   334c4:	0f 89 01 01 00 00    	jns    335cb <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x2cb>
   334ca:	80 fb c0             	cmp    $0xc0,%bl
   334cd:	72 22                	jb     334f1 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x1f1>
   334cf:	e9 f7 00 00 00       	jmpq   335cb <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x2cb>
   334d4:	80 fb bf             	cmp    $0xbf,%bl
   334d7:	0f 87 ee 00 00 00    	ja     335cb <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x2cb>
   334dd:	80 e2 fe             	and    $0xfe,%dl
   334e0:	80 fa ee             	cmp    $0xee,%dl
   334e3:	0f 85 e2 00 00 00    	jne    335cb <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x2cb>
   334e9:	84 db                	test   %bl,%bl
   334eb:	0f 89 da 00 00 00    	jns    335cb <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x2cb>
   334f1:	48 8d 4f 02          	lea    0x2(%rdi),%rcx
   334f5:	48 39 ce             	cmp    %rcx,%rsi
   334f8:	49 8d 54 3b 02       	lea    0x2(%r11,%rdi,1),%rdx
   334fd:	bb 00 00 00 00       	mov    $0x0,%ebx
   33502:	48 0f 47 da          	cmova  %rdx,%rbx
   33506:	48 85 db             	test   %rbx,%rbx
   33509:	49 0f 44 da          	cmove  %r10,%rbx
   3350d:	0f b6 1b             	movzbl (%rbx),%ebx
   33510:	80 e3 c0             	and    $0xc0,%bl
   33513:	80 fb 80             	cmp    $0x80,%bl
   33516:	0f 85 e1 00 00 00    	jne    335fd <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x2fd>
   3351c:	48 83 c7 03          	add    $0x3,%rdi
   33520:	e9 0e fe ff ff       	jmpq   33333 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x33>
   33525:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   3352c:	e9 6d 01 00 00       	jmpq   3369e <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x39e>
   33531:	48 8d 0d f8 68 00 00 	lea    0x68f8(%rip),%rcx        # 39e30 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x2e0>
   33538:	49 89 08             	mov    %rcx,(%r8)
   3353b:	49 c7 40 08 00 00 00 	movq   $0x0,0x8(%r8)
   33542:	00 
   33543:	4c 89 18             	mov    %r11,(%rax)
   33546:	48 89 70 08          	mov    %rsi,0x8(%rax)
   3354a:	48 89 48 10          	mov    %rcx,0x10(%rax)
   3354e:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
   33555:	00 
   33556:	e9 43 01 00 00       	jmpq   3369e <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x39e>
   3355b:	49 8d 14 3b          	lea    (%r11,%rdi,1),%rdx
   3355f:	48 39 fe             	cmp    %rdi,%rsi
   33562:	0f 82 41 01 00 00    	jb     336a9 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x3a9>
   33568:	0f 86 4a 01 00 00    	jbe    336b8 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x3b8>
   3356e:	49 8d 1c 0b          	lea    (%r11,%rcx,1),%rbx
   33572:	48 29 ce             	sub    %rcx,%rsi
   33575:	49 89 18             	mov    %rbx,(%r8)
   33578:	49 89 70 08          	mov    %rsi,0x8(%r8)
   3357c:	eb 67                	jmp    335e5 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x2e5>
   3357e:	4d 8d 0c 3b          	lea    (%r11,%rdi,1),%r9
   33582:	48 39 fe             	cmp    %rdi,%rsi
   33585:	0f 82 39 01 00 00    	jb     336c4 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x3c4>
   3358b:	0f 86 42 01 00 00    	jbe    336d3 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x3d3>
   33591:	4d 89 30             	mov    %r14,(%r8)
   33594:	49 89 58 08          	mov    %rbx,0x8(%r8)
   33598:	4c 89 18             	mov    %r11,(%rax)
   3359b:	48 89 78 08          	mov    %rdi,0x8(%rax)
   3359f:	4c 89 48 10          	mov    %r9,0x10(%rax)
   335a3:	48 c7 40 18 01 00 00 	movq   $0x1,0x18(%rax)
   335aa:	00 
   335ab:	e9 ee 00 00 00       	jmpq   3369e <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x39e>
   335b0:	49 8d 14 3b          	lea    (%r11,%rdi,1),%rdx
   335b4:	48 39 fe             	cmp    %rdi,%rsi
   335b7:	0f 82 22 01 00 00    	jb     336df <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x3df>
   335bd:	77 1f                	ja     335de <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x2de>
   335bf:	48 8d 15 f2 1e 01 00 	lea    0x11ef2(%rip),%rdx        # 454b8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1f80>
   335c6:	e9 9c 01 00 00       	jmpq   33767 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x467>
   335cb:	49 8d 14 3b          	lea    (%r11,%rdi,1),%rdx
   335cf:	48 39 fe             	cmp    %rdi,%rsi
   335d2:	0f 82 16 01 00 00    	jb     336ee <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x3ee>
   335d8:	0f 86 1f 01 00 00    	jbe    336fd <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x3fd>
   335de:	4d 89 30             	mov    %r14,(%r8)
   335e1:	4d 89 78 08          	mov    %r15,0x8(%r8)
   335e5:	4c 89 18             	mov    %r11,(%rax)
   335e8:	48 89 78 08          	mov    %rdi,0x8(%rax)
   335ec:	48 89 50 10          	mov    %rdx,0x10(%rax)
   335f0:	48 c7 40 18 01 00 00 	movq   $0x1,0x18(%rax)
   335f7:	00 
   335f8:	e9 a1 00 00 00       	jmpq   3369e <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x39e>
   335fd:	48 39 fe             	cmp    %rdi,%rsi
   33600:	0f 82 00 01 00 00    	jb     33706 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x406>
   33606:	48 83 ff fd          	cmp    $0xfffffffffffffffd,%rdi
   3360a:	0f 87 05 01 00 00    	ja     33715 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x415>
   33610:	48 89 f3             	mov    %rsi,%rbx
   33613:	48 29 cb             	sub    %rcx,%rbx
   33616:	73 2b                	jae    33643 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x343>
   33618:	48 8d 15 b1 1e 01 00 	lea    0x11eb1(%rip),%rdx        # 454d0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1f98>
   3361f:	e9 43 01 00 00       	jmpq   33767 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x467>
   33624:	48 39 fe             	cmp    %rdi,%rsi
   33627:	0f 82 f1 00 00 00    	jb     3371e <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x41e>
   3362d:	48 83 ff fd          	cmp    $0xfffffffffffffffd,%rdi
   33631:	0f 87 f6 00 00 00    	ja     3372d <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x42d>
   33637:	48 89 f3             	mov    %rsi,%rbx
   3363a:	48 29 cb             	sub    %rcx,%rbx
   3363d:	0f 82 f3 00 00 00    	jb     33736 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x436>
   33643:	49 89 10             	mov    %rdx,(%r8)
   33646:	49 89 58 08          	mov    %rbx,0x8(%r8)
   3364a:	4c 89 18             	mov    %r11,(%rax)
   3364d:	49 01 fb             	add    %rdi,%r11
   33650:	48 89 78 08          	mov    %rdi,0x8(%rax)
   33654:	4c 89 58 10          	mov    %r11,0x10(%rax)
   33658:	48 c7 40 18 02 00 00 	movq   $0x2,0x18(%rax)
   3365f:	00 
   33660:	eb 3c                	jmp    3369e <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x39e>
   33662:	48 39 fe             	cmp    %rdi,%rsi
   33665:	0f 82 d4 00 00 00    	jb     3373f <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x43f>
   3366b:	48 83 ff fc          	cmp    $0xfffffffffffffffc,%rdi
   3366f:	0f 87 d9 00 00 00    	ja     3374e <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x44e>
   33675:	48 89 f3             	mov    %rsi,%rbx
   33678:	48 29 cb             	sub    %rcx,%rbx
   3367b:	0f 82 df 00 00 00    	jb     33760 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x460>
   33681:	49 89 10             	mov    %rdx,(%r8)
   33684:	49 89 58 08          	mov    %rbx,0x8(%r8)
   33688:	4c 89 18             	mov    %r11,(%rax)
   3368b:	49 01 fb             	add    %rdi,%r11
   3368e:	48 89 78 08          	mov    %rdi,0x8(%rax)
   33692:	4c 89 58 10          	mov    %r11,0x10(%rax)
   33696:	48 c7 40 18 03 00 00 	movq   $0x3,0x18(%rax)
   3369d:	00 
   3369e:	48 83 c4 08          	add    $0x8,%rsp
   336a2:	5b                   	pop    %rbx
   336a3:	41 5e                	pop    %r14
   336a5:	41 5f                	pop    %r15
   336a7:	5d                   	pop    %rbp
   336a8:	c3                   	retq   
   336a9:	48 8d 15 c0 1d 01 00 	lea    0x11dc0(%rip),%rdx        # 45470 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1f38>
   336b0:	ff 15 72 23 01 00    	callq  *0x12372(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   336b6:	0f 0b                	ud2    
   336b8:	48 8d 15 b1 1d 01 00 	lea    0x11db1(%rip),%rdx        # 45470 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1f38>
   336bf:	e9 a3 00 00 00       	jmpq   33767 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x467>
   336c4:	48 8d 15 35 1e 01 00 	lea    0x11e35(%rip),%rdx        # 45500 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1fc8>
   336cb:	ff 15 57 23 01 00    	callq  *0x12357(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   336d1:	0f 0b                	ud2    
   336d3:	48 8d 15 26 1e 01 00 	lea    0x11e26(%rip),%rdx        # 45500 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1fc8>
   336da:	e9 88 00 00 00       	jmpq   33767 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x467>
   336df:	48 8d 15 d2 1d 01 00 	lea    0x11dd2(%rip),%rdx        # 454b8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1f80>
   336e6:	ff 15 3c 23 01 00    	callq  *0x1233c(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   336ec:	0f 0b                	ud2    
   336ee:	48 8d 15 f3 1d 01 00 	lea    0x11df3(%rip),%rdx        # 454e8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1fb0>
   336f5:	ff 15 2d 23 01 00    	callq  *0x1232d(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   336fb:	0f 0b                	ud2    
   336fd:	48 8d 15 e4 1d 01 00 	lea    0x11de4(%rip),%rdx        # 454e8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1fb0>
   33704:	eb 61                	jmp    33767 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x467>
   33706:	48 8d 15 c3 1d 01 00 	lea    0x11dc3(%rip),%rdx        # 454d0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1f98>
   3370d:	ff 15 15 23 01 00    	callq  *0x12315(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   33713:	0f 0b                	ud2    
   33715:	48 8d 15 b4 1d 01 00 	lea    0x11db4(%rip),%rdx        # 454d0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1f98>
   3371c:	eb 37                	jmp    33755 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x455>
   3371e:	48 8d 15 63 1d 01 00 	lea    0x11d63(%rip),%rdx        # 45488 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1f50>
   33725:	ff 15 fd 22 01 00    	callq  *0x122fd(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   3372b:	0f 0b                	ud2    
   3372d:	48 8d 15 54 1d 01 00 	lea    0x11d54(%rip),%rdx        # 45488 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1f50>
   33734:	eb 1f                	jmp    33755 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x455>
   33736:	48 8d 15 4b 1d 01 00 	lea    0x11d4b(%rip),%rdx        # 45488 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1f50>
   3373d:	eb 28                	jmp    33767 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x467>
   3373f:	48 8d 15 5a 1d 01 00 	lea    0x11d5a(%rip),%rdx        # 454a0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1f68>
   33746:	ff 15 dc 22 01 00    	callq  *0x122dc(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   3374c:	0f 0b                	ud2    
   3374e:	48 8d 15 4b 1d 01 00 	lea    0x11d4b(%rip),%rdx        # 454a0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1f68>
   33755:	48 89 ce             	mov    %rcx,%rsi
   33758:	ff 15 42 27 01 00    	callq  *0x12742(%rip)        # 45ea0 <_GLOBAL_OFFSET_TABLE_+0x518>
   3375e:	0f 0b                	ud2    
   33760:	48 8d 15 39 1d 01 00 	lea    0x11d39(%rip),%rdx        # 454a0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1f68>
   33767:	48 89 cf             	mov    %rcx,%rdi
   3376a:	ff 15 b8 22 01 00    	callq  *0x122b8(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   33770:	0f 0b                	ud2    
   33772:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   33779:	00 00 00 
   3377c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000033780 <<core::str::lossy::Utf8Lossy as core::fmt::Display>::fmt>:
   33780:	55                   	push   %rbp
   33781:	41 57                	push   %r15
   33783:	41 56                	push   %r14
   33785:	41 55                	push   %r13
   33787:	41 54                	push   %r12
   33789:	53                   	push   %rbx
   3378a:	48 83 ec 38          	sub    $0x38,%rsp
   3378e:	48 89 d3             	mov    %rdx,%rbx
   33791:	48 85 f6             	test   %rsi,%rsi
   33794:	0f 84 97 00 00 00    	je     33831 <<core::str::lossy::Utf8Lossy as core::fmt::Display>::fmt+0xb1>
   3379a:	49 89 f6             	mov    %rsi,%r14
   3379d:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   337a2:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   337a7:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   337ac:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   337b1:	ff 15 01 28 01 00    	callq  *0x12801(%rip)        # 45fb8 <_GLOBAL_OFFSET_TABLE_+0x630>
   337b7:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   337bc:	48 85 f6             	test   %rsi,%rsi
   337bf:	0f 84 8c 00 00 00    	je     33851 <<core::str::lossy::Utf8Lossy as core::fmt::Display>::fmt+0xd1>
   337c5:	4c 8d 64 24 08       	lea    0x8(%rsp),%r12
   337ca:	4c 8d 2d 2f fb ff ff 	lea    -0x4d1(%rip),%r13        # 33300 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next>
   337d1:	e9 1f 00 00 00       	jmpq   337f5 <<core::str::lossy::Utf8Lossy as core::fmt::Display>::fmt+0x75>
   337d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   337dd:	00 00 00 
   337e0:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   337e5:	4c 89 e6             	mov    %r12,%rsi
   337e8:	41 ff d5             	callq  *%r13
   337eb:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   337f0:	48 85 f6             	test   %rsi,%rsi
   337f3:	74 5c                	je     33851 <<core::str::lossy::Utf8Lossy as core::fmt::Display>::fmt+0xd1>
   337f5:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   337fa:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
   337ff:	4c 39 f2             	cmp    %r14,%rdx
   33802:	74 51                	je     33855 <<core::str::lossy::Utf8Lossy as core::fmt::Display>::fmt+0xd5>
   33804:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   33808:	48 8b 43 28          	mov    0x28(%rbx),%rax
   3380c:	ff 50 18             	callq  *0x18(%rax)
   3380f:	40 b5 01             	mov    $0x1,%bpl
   33812:	84 c0                	test   %al,%al
   33814:	75 52                	jne    33868 <<core::str::lossy::Utf8Lossy as core::fmt::Display>::fmt+0xe8>
   33816:	4d 85 ff             	test   %r15,%r15
   33819:	74 c5                	je     337e0 <<core::str::lossy::Utf8Lossy as core::fmt::Display>::fmt+0x60>
   3381b:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   3381f:	48 8b 43 28          	mov    0x28(%rbx),%rax
   33823:	be fd ff 00 00       	mov    $0xfffd,%esi
   33828:	ff 50 20             	callq  *0x20(%rax)
   3382b:	84 c0                	test   %al,%al
   3382d:	74 b1                	je     337e0 <<core::str::lossy::Utf8Lossy as core::fmt::Display>::fmt+0x60>
   3382f:	eb 37                	jmp    33868 <<core::str::lossy::Utf8Lossy as core::fmt::Display>::fmt+0xe8>
   33831:	48 8d 35 f8 65 00 00 	lea    0x65f8(%rip),%rsi        # 39e30 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x2e0>
   33838:	48 89 df             	mov    %rbx,%rdi
   3383b:	31 d2                	xor    %edx,%edx
   3383d:	48 83 c4 38          	add    $0x38,%rsp
   33841:	5b                   	pop    %rbx
   33842:	41 5c                	pop    %r12
   33844:	41 5d                	pop    %r13
   33846:	41 5e                	pop    %r14
   33848:	41 5f                	pop    %r15
   3384a:	5d                   	pop    %rbp
   3384b:	ff 25 b7 24 01 00    	jmpq   *0x124b7(%rip)        # 45d08 <_GLOBAL_OFFSET_TABLE_+0x380>
   33851:	31 ed                	xor    %ebp,%ebp
   33853:	eb 13                	jmp    33868 <<core::str::lossy::Utf8Lossy as core::fmt::Display>::fmt+0xe8>
   33855:	4d 85 ff             	test   %r15,%r15
   33858:	75 1f                	jne    33879 <<core::str::lossy::Utf8Lossy as core::fmt::Display>::fmt+0xf9>
   3385a:	48 89 df             	mov    %rbx,%rdi
   3385d:	4c 89 f2             	mov    %r14,%rdx
   33860:	ff 15 a2 24 01 00    	callq  *0x124a2(%rip)        # 45d08 <_GLOBAL_OFFSET_TABLE_+0x380>
   33866:	89 c5                	mov    %eax,%ebp
   33868:	89 e8                	mov    %ebp,%eax
   3386a:	48 83 c4 38          	add    $0x38,%rsp
   3386e:	5b                   	pop    %rbx
   3386f:	41 5c                	pop    %r12
   33871:	41 5d                	pop    %r13
   33873:	41 5e                	pop    %r14
   33875:	41 5f                	pop    %r15
   33877:	5d                   	pop    %rbp
   33878:	c3                   	retq   
   33879:	48 8d 3d d1 69 00 00 	lea    0x69d1(%rip),%rdi        # 3a251 <core::str::validations::UTF8_CHAR_WIDTH+0x13c>
   33880:	48 8d 15 91 1c 01 00 	lea    0x11c91(%rip),%rdx        # 45518 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1fe0>
   33887:	be 23 00 00 00       	mov    $0x23,%esi
   3388c:	ff 15 46 26 01 00    	callq  *0x12646(%rip)        # 45ed8 <_GLOBAL_OFFSET_TABLE_+0x550>
   33892:	0f 0b                	ud2    
   33894:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3389b:	00 00 00 
   3389e:	66 90                	xchg   %ax,%ax

00000000000338a0 <core::str::slice_error_fail>:
   338a0:	53                   	push   %rbx
   338a1:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
   338a8:	48 89 94 24 b8 00 00 	mov    %rdx,0xb8(%rsp)
   338af:	00 
   338b0:	48 89 8c 24 c0 00 00 	mov    %rcx,0xc0(%rsp)
   338b7:	00 
   338b8:	41 b3 01             	mov    $0x1,%r11b
   338bb:	49 89 f1             	mov    %rsi,%r9
   338be:	48 81 fe 01 01 00 00 	cmp    $0x101,%rsi
   338c5:	72 3c                	jb     33903 <core::str::slice_error_fail+0x63>
   338c7:	41 ba ff 00 00 00    	mov    $0xff,%r10d
   338cd:	49 29 f2             	sub    %rsi,%r10
   338d0:	b8 00 01 00 00       	mov    $0x100,%eax
   338d5:	45 31 db             	xor    %r11d,%r11d
   338d8:	48 39 f0             	cmp    %rsi,%rax
   338db:	73 06                	jae    338e3 <core::str::slice_error_fail+0x43>
   338dd:	80 3c 07 bf          	cmpb   $0xbf,(%rdi,%rax,1)
   338e1:	7f 1a                	jg     338fd <core::str::slice_error_fail+0x5d>
   338e3:	4c 8d 48 ff          	lea    -0x1(%rax),%r9
   338e7:	48 83 f8 01          	cmp    $0x1,%rax
   338eb:	74 16                	je     33903 <core::str::slice_error_fail+0x63>
   338ed:	4c 01 d0             	add    %r10,%rax
   338f0:	48 3d 00 01 00 00    	cmp    $0x100,%rax
   338f6:	4c 89 c8             	mov    %r9,%rax
   338f9:	75 dd                	jne    338d8 <core::str::slice_error_fail+0x38>
   338fb:	eb 06                	jmp    33903 <core::str::slice_error_fail+0x63>
   338fd:	45 31 db             	xor    %r11d,%r11d
   33900:	49 89 c1             	mov    %rax,%r9
   33903:	48 89 bc 24 98 00 00 	mov    %rdi,0x98(%rsp)
   3390a:	00 
   3390b:	4c 89 8c 24 a0 00 00 	mov    %r9,0xa0(%rsp)
   33912:	00 
   33913:	48 8d 05 16 65 00 00 	lea    0x6516(%rip),%rax        # 39e30 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x2e0>
   3391a:	48 8d 1d 53 69 00 00 	lea    0x6953(%rip),%rbx        # 3a274 <core::str::validations::UTF8_CHAR_WIDTH+0x15f>
   33921:	45 84 db             	test   %r11b,%r11b
   33924:	48 0f 45 d8          	cmovne %rax,%rbx
   33928:	41 80 f3 01          	xor    $0x1,%r11b
   3392c:	41 0f b6 c3          	movzbl %r11b,%eax
   33930:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
   33934:	48 89 9c 24 a8 00 00 	mov    %rbx,0xa8(%rsp)
   3393b:	00 
   3393c:	48 89 84 24 b0 00 00 	mov    %rax,0xb0(%rsp)
   33943:	00 
   33944:	48 39 f2             	cmp    %rsi,%rdx
   33947:	0f 87 ac 00 00 00    	ja     339f9 <core::str::slice_error_fail+0x159>
   3394d:	48 39 f1             	cmp    %rsi,%rcx
   33950:	0f 87 a3 00 00 00    	ja     339f9 <core::str::slice_error_fail+0x159>
   33956:	48 39 ca             	cmp    %rcx,%rdx
   33959:	0f 86 28 01 00 00    	jbe    33a87 <core::str::slice_error_fail+0x1e7>
   3395f:	48 8d 84 24 b8 00 00 	lea    0xb8(%rsp),%rax
   33966:	00 
   33967:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   3396c:	48 8d 05 ed 13 00 00 	lea    0x13ed(%rip),%rax        # 34d60 <core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt>
   33973:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   33978:	48 8d 8c 24 c0 00 00 	lea    0xc0(%rsp),%rcx
   3397f:	00 
   33980:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
   33985:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   3398a:	48 8d 84 24 98 00 00 	lea    0x98(%rsp),%rax
   33991:	00 
   33992:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   33997:	48 8d 05 22 18 00 00 	lea    0x1822(%rip),%rax        # 351c0 <<&T as core::fmt::Display>::fmt>
   3399e:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   339a3:	48 8d 8c 24 a8 00 00 	lea    0xa8(%rsp),%rcx
   339aa:	00 
   339ab:	48 89 4c 24 78       	mov    %rcx,0x78(%rsp)
   339b0:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   339b7:	00 
   339b8:	48 8d 05 a1 1b 01 00 	lea    0x11ba1(%rip),%rax        # 45560 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2028>
   339bf:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   339c4:	48 c7 44 24 20 04 00 	movq   $0x4,0x20(%rsp)
   339cb:	00 00 
   339cd:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   339d4:	00 00 
   339d6:	48 8d 44 24 48       	lea    0x48(%rsp),%rax
   339db:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   339e0:	48 c7 44 24 40 04 00 	movq   $0x4,0x40(%rsp)
   339e7:	00 00 
   339e9:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   339ee:	4c 89 c6             	mov    %r8,%rsi
   339f1:	ff 15 51 22 01 00    	callq  *0x12251(%rip)        # 45c48 <_GLOBAL_OFFSET_TABLE_+0x2c0>
   339f7:	0f 0b                	ud2    
   339f9:	48 39 f2             	cmp    %rsi,%rdx
   339fc:	48 0f 47 ca          	cmova  %rdx,%rcx
   33a00:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   33a05:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   33a0a:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   33a0f:	48 8d 05 4a 13 00 00 	lea    0x134a(%rip),%rax        # 34d60 <core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt>
   33a16:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   33a1b:	48 8d 84 24 98 00 00 	lea    0x98(%rsp),%rax
   33a22:	00 
   33a23:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   33a28:	48 8d 05 91 17 00 00 	lea    0x1791(%rip),%rax        # 351c0 <<&T as core::fmt::Display>::fmt>
   33a2f:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   33a34:	48 8d 8c 24 a8 00 00 	lea    0xa8(%rsp),%rcx
   33a3b:	00 
   33a3c:	48 89 4c 24 68       	mov    %rcx,0x68(%rsp)
   33a41:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   33a46:	48 8d 05 e3 1a 01 00 	lea    0x11ae3(%rip),%rax        # 45530 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1ff8>
   33a4d:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   33a52:	48 c7 44 24 20 03 00 	movq   $0x3,0x20(%rsp)
   33a59:	00 00 
   33a5b:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   33a62:	00 00 
   33a64:	48 8d 44 24 48       	lea    0x48(%rsp),%rax
   33a69:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   33a6e:	48 c7 44 24 40 03 00 	movq   $0x3,0x40(%rsp)
   33a75:	00 00 
   33a77:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   33a7c:	4c 89 c6             	mov    %r8,%rsi
   33a7f:	ff 15 c3 21 01 00    	callq  *0x121c3(%rip)        # 45c48 <_GLOBAL_OFFSET_TABLE_+0x2c0>
   33a85:	0f 0b                	ud2    
   33a87:	48 85 d2             	test   %rdx,%rdx
   33a8a:	74 0d                	je     33a99 <core::str::slice_error_fail+0x1f9>
   33a8c:	48 39 d6             	cmp    %rdx,%rsi
   33a8f:	74 08                	je     33a99 <core::str::slice_error_fail+0x1f9>
   33a91:	76 09                	jbe    33a9c <core::str::slice_error_fail+0x1fc>
   33a93:	80 3c 17 c0          	cmpb   $0xc0,(%rdi,%rdx,1)
   33a97:	7c 03                	jl     33a9c <core::str::slice_error_fail+0x1fc>
   33a99:	48 89 ca             	mov    %rcx,%rdx
   33a9c:	48 89 94 24 c8 00 00 	mov    %rdx,0xc8(%rsp)
   33aa3:	00 
   33aa4:	48 85 d2             	test   %rdx,%rdx
   33aa7:	74 38                	je     33ae1 <core::str::slice_error_fail+0x241>
   33aa9:	48 39 f2             	cmp    %rsi,%rdx
   33aac:	74 33                	je     33ae1 <core::str::slice_error_fail+0x241>
   33aae:	48 8d 46 01          	lea    0x1(%rsi),%rax
   33ab2:	48 39 f2             	cmp    %rsi,%rdx
   33ab5:	73 06                	jae    33abd <core::str::slice_error_fail+0x21d>
   33ab7:	80 3c 17 c0          	cmpb   $0xc0,(%rdi,%rdx,1)
   33abb:	7d 39                	jge    33af6 <core::str::slice_error_fail+0x256>
   33abd:	48 8d 4a ff          	lea    -0x1(%rdx),%rcx
   33ac1:	48 83 fa 01          	cmp    $0x1,%rdx
   33ac5:	74 08                	je     33acf <core::str::slice_error_fail+0x22f>
   33ac7:	48 39 d0             	cmp    %rdx,%rax
   33aca:	48 89 ca             	mov    %rcx,%rdx
   33acd:	75 e3                	jne    33ab2 <core::str::slice_error_fail+0x212>
   33acf:	4c 8d 4c 24 04       	lea    0x4(%rsp),%r9
   33ad4:	48 89 ca             	mov    %rcx,%rdx
   33ad7:	48 39 f2             	cmp    %rsi,%rdx
   33ada:	75 28                	jne    33b04 <core::str::slice_error_fail+0x264>
   33adc:	e9 ad 00 00 00       	jmpq   33b8e <core::str::slice_error_fail+0x2ee>
   33ae1:	48 89 d1             	mov    %rdx,%rcx
   33ae4:	4c 8d 4c 24 04       	lea    0x4(%rsp),%r9
   33ae9:	48 89 ca             	mov    %rcx,%rdx
   33aec:	48 39 f2             	cmp    %rsi,%rdx
   33aef:	75 13                	jne    33b04 <core::str::slice_error_fail+0x264>
   33af1:	e9 98 00 00 00       	jmpq   33b8e <core::str::slice_error_fail+0x2ee>
   33af6:	4c 8d 4c 24 04       	lea    0x4(%rsp),%r9
   33afb:	48 39 f2             	cmp    %rsi,%rdx
   33afe:	0f 84 8a 00 00 00    	je     33b8e <core::str::slice_error_fail+0x2ee>
   33b04:	48 8d 0c 17          	lea    (%rdi,%rdx,1),%rcx
   33b08:	0f b6 01             	movzbl (%rcx),%eax
   33b0b:	84 c0                	test   %al,%al
   33b0d:	78 13                	js     33b22 <core::str::slice_error_fail+0x282>
   33b0f:	89 44 24 04          	mov    %eax,0x4(%rsp)
   33b13:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   33b18:	be 01 00 00 00       	mov    $0x1,%esi
   33b1d:	e9 bf 00 00 00       	jmpq   33be1 <core::str::slice_error_fail+0x341>
   33b22:	48 01 f7             	add    %rsi,%rdi
   33b25:	48 8d 71 01          	lea    0x1(%rcx),%rsi
   33b29:	31 db                	xor    %ebx,%ebx
   33b2b:	49 89 fa             	mov    %rdi,%r10
   33b2e:	48 39 fe             	cmp    %rdi,%rsi
   33b31:	74 0e                	je     33b41 <core::str::slice_error_fail+0x2a1>
   33b33:	0f b6 59 01          	movzbl 0x1(%rcx),%ebx
   33b37:	48 83 c1 02          	add    $0x2,%rcx
   33b3b:	83 e3 3f             	and    $0x3f,%ebx
   33b3e:	49 89 ca             	mov    %rcx,%r10
   33b41:	89 c6                	mov    %eax,%esi
   33b43:	83 e6 1f             	and    $0x1f,%esi
   33b46:	3c df                	cmp    $0xdf,%al
   33b48:	76 5b                	jbe    33ba5 <core::str::slice_error_fail+0x305>
   33b4a:	31 c9                	xor    %ecx,%ecx
   33b4c:	49 89 fb             	mov    %rdi,%r11
   33b4f:	49 39 fa             	cmp    %rdi,%r10
   33b52:	74 0e                	je     33b62 <core::str::slice_error_fail+0x2c2>
   33b54:	41 0f b6 0a          	movzbl (%r10),%ecx
   33b58:	49 83 c2 01          	add    $0x1,%r10
   33b5c:	83 e1 3f             	and    $0x3f,%ecx
   33b5f:	4d 89 d3             	mov    %r10,%r11
   33b62:	c1 e3 06             	shl    $0x6,%ebx
   33b65:	09 cb                	or     %ecx,%ebx
   33b67:	3c f0                	cmp    $0xf0,%al
   33b69:	72 3f                	jb     33baa <core::str::slice_error_fail+0x30a>
   33b6b:	31 c0                	xor    %eax,%eax
   33b6d:	49 39 fb             	cmp    %rdi,%r11
   33b70:	74 07                	je     33b79 <core::str::slice_error_fail+0x2d9>
   33b72:	41 0f b6 03          	movzbl (%r11),%eax
   33b76:	83 e0 3f             	and    $0x3f,%eax
   33b79:	83 e6 07             	and    $0x7,%esi
   33b7c:	c1 e6 12             	shl    $0x12,%esi
   33b7f:	c1 e3 06             	shl    $0x6,%ebx
   33b82:	09 f3                	or     %esi,%ebx
   33b84:	09 c3                	or     %eax,%ebx
   33b86:	81 fb 00 00 11 00    	cmp    $0x110000,%ebx
   33b8c:	75 21                	jne    33baf <core::str::slice_error_fail+0x30f>
   33b8e:	48 8d 3d 38 63 00 00 	lea    0x6338(%rip),%rdi        # 39ecd <str.1+0x8d>
   33b95:	be 2b 00 00 00       	mov    $0x2b,%esi
   33b9a:	4c 89 c2             	mov    %r8,%rdx
   33b9d:	ff 15 35 23 01 00    	callq  *0x12335(%rip)        # 45ed8 <_GLOBAL_OFFSET_TABLE_+0x550>
   33ba3:	0f 0b                	ud2    
   33ba5:	c1 e6 06             	shl    $0x6,%esi
   33ba8:	eb 03                	jmp    33bad <core::str::slice_error_fail+0x30d>
   33baa:	c1 e6 0c             	shl    $0xc,%esi
   33bad:	09 f3                	or     %esi,%ebx
   33baf:	89 5c 24 04          	mov    %ebx,0x4(%rsp)
   33bb3:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   33bb8:	be 01 00 00 00       	mov    $0x1,%esi
   33bbd:	81 fb 80 00 00 00    	cmp    $0x80,%ebx
   33bc3:	72 1c                	jb     33be1 <core::str::slice_error_fail+0x341>
   33bc5:	be 02 00 00 00       	mov    $0x2,%esi
   33bca:	81 fb 00 08 00 00    	cmp    $0x800,%ebx
   33bd0:	72 0f                	jb     33be1 <core::str::slice_error_fail+0x341>
   33bd2:	81 fb 00 00 01 00    	cmp    $0x10000,%ebx
   33bd8:	be 04 00 00 00       	mov    $0x4,%esi
   33bdd:	48 83 de 00          	sbb    $0x0,%rsi
   33be1:	48 01 d6             	add    %rdx,%rsi
   33be4:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   33be9:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   33bee:	48 8d 8c 24 c8 00 00 	lea    0xc8(%rsp),%rcx
   33bf5:	00 
   33bf6:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
   33bfb:	48 8d 0d 5e 11 00 00 	lea    0x115e(%rip),%rcx        # 34d60 <core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt>
   33c02:	48 89 4c 24 50       	mov    %rcx,0x50(%rsp)
   33c07:	4c 89 4c 24 58       	mov    %r9,0x58(%rsp)
   33c0c:	48 8d 0d ed e4 ff ff 	lea    -0x1b13(%rip),%rcx        # 32100 <<char as core::fmt::Debug>::fmt>
   33c13:	48 89 4c 24 60       	mov    %rcx,0x60(%rsp)
   33c18:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   33c1d:	48 8d 05 5c b9 ff ff 	lea    -0x46a4(%rip),%rax        # 2f580 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt>
   33c24:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   33c29:	48 8d 84 24 98 00 00 	lea    0x98(%rsp),%rax
   33c30:	00 
   33c31:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   33c36:	48 8d 05 83 15 00 00 	lea    0x1583(%rip),%rax        # 351c0 <<&T as core::fmt::Display>::fmt>
   33c3d:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   33c44:	00 
   33c45:	48 8d 8c 24 a8 00 00 	lea    0xa8(%rsp),%rcx
   33c4c:	00 
   33c4d:	48 89 8c 24 88 00 00 	mov    %rcx,0x88(%rsp)
   33c54:	00 
   33c55:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
   33c5c:	00 
   33c5d:	48 8d 05 3c 19 01 00 	lea    0x1193c(%rip),%rax        # 455a0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2068>
   33c64:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   33c69:	48 c7 44 24 20 05 00 	movq   $0x5,0x20(%rsp)
   33c70:	00 00 
   33c72:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   33c79:	00 00 
   33c7b:	48 8d 44 24 48       	lea    0x48(%rsp),%rax
   33c80:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   33c85:	48 c7 44 24 40 05 00 	movq   $0x5,0x40(%rsp)
   33c8c:	00 00 
   33c8e:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   33c93:	4c 89 c6             	mov    %r8,%rsi
   33c96:	ff 15 ac 1f 01 00    	callq  *0x11fac(%rip)        # 45c48 <_GLOBAL_OFFSET_TABLE_+0x2c0>
   33c9c:	0f 0b                	ud2    
   33c9e:	66 90                	xchg   %ax,%ax

0000000000033ca0 <<core::time::Duration as core::fmt::Debug>::fmt>:
   33ca0:	41 56                	push   %r14
   33ca2:	53                   	push   %rbx
   33ca3:	48 83 ec 38          	sub    $0x38,%rsp
   33ca7:	49 89 f6             	mov    %rsi,%r14
   33caa:	48 89 fb             	mov    %rdi,%rbx
   33cad:	f6 46 30 01          	testb  $0x1,0x30(%rsi)
   33cb1:	74 4e                	je     33d01 <<core::time::Duration as core::fmt::Debug>::fmt+0x61>
   33cb3:	49 8b 7e 20          	mov    0x20(%r14),%rdi
   33cb7:	49 8b 76 28          	mov    0x28(%r14),%rsi
   33cbb:	48 8d 05 2e 19 01 00 	lea    0x1192e(%rip),%rax        # 455f0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x20b8>
   33cc2:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   33cc7:	48 c7 44 24 10 01 00 	movq   $0x1,0x10(%rsp)
   33cce:	00 00 
   33cd0:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   33cd7:	00 00 
   33cd9:	48 8d 05 50 61 00 00 	lea    0x6150(%rip),%rax        # 39e30 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x2e0>
   33ce0:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   33ce5:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   33cec:	00 00 
   33cee:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   33cf3:	ff 15 ff 20 01 00    	callq  *0x120ff(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x470>
   33cf9:	84 c0                	test   %al,%al
   33cfb:	0f 85 e8 00 00 00    	jne    33de9 <<core::time::Duration as core::fmt::Debug>::fmt+0x149>
   33d01:	48 8b 33             	mov    (%rbx),%rsi
   33d04:	8b 53 08             	mov    0x8(%rbx),%edx
   33d07:	48 85 f6             	test   %rsi,%rsi
   33d0a:	74 36                	je     33d42 <<core::time::Duration as core::fmt::Debug>::fmt+0xa2>
   33d0c:	4c 89 f7             	mov    %r14,%rdi
   33d0f:	b9 00 e1 f5 05       	mov    $0x5f5e100,%ecx
   33d14:	e8 07 01 00 00       	callq  33e20 <<core::time::Duration as core::fmt::Debug>::fmt::fmt_decimal>
   33d19:	84 c0                	test   %al,%al
   33d1b:	0f 85 c8 00 00 00    	jne    33de9 <<core::time::Duration as core::fmt::Debug>::fmt+0x149>
   33d21:	49 8b 7e 20          	mov    0x20(%r14),%rdi
   33d25:	49 8b 46 28          	mov    0x28(%r14),%rax
   33d29:	48 8b 40 18          	mov    0x18(%rax),%rax
   33d2d:	48 8d 35 b8 65 00 00 	lea    0x65b8(%rip),%rsi        # 3a2ec <core::str::validations::UTF8_CHAR_WIDTH+0x1d7>
   33d34:	ba 01 00 00 00       	mov    $0x1,%edx
   33d39:	48 83 c4 38          	add    $0x38,%rsp
   33d3d:	5b                   	pop    %rbx
   33d3e:	41 5e                	pop    %r14
   33d40:	ff e0                	jmpq   *%rax
   33d42:	81 fa 3f 42 0f 00    	cmp    $0xf423f,%edx
   33d48:	76 3c                	jbe    33d86 <<core::time::Duration as core::fmt::Debug>::fmt+0xe6>
   33d4a:	48 69 f2 83 de 1b 43 	imul   $0x431bde83,%rdx,%rsi
   33d51:	48 c1 ee 32          	shr    $0x32,%rsi
   33d55:	69 c6 40 42 0f 00    	imul   $0xf4240,%esi,%eax
   33d5b:	29 c2                	sub    %eax,%edx
   33d5d:	4c 89 f7             	mov    %r14,%rdi
   33d60:	b9 a0 86 01 00       	mov    $0x186a0,%ecx
   33d65:	e8 b6 00 00 00       	callq  33e20 <<core::time::Duration as core::fmt::Debug>::fmt::fmt_decimal>
   33d6a:	84 c0                	test   %al,%al
   33d6c:	75 7b                	jne    33de9 <<core::time::Duration as core::fmt::Debug>::fmt+0x149>
   33d6e:	49 8b 7e 20          	mov    0x20(%r14),%rdi
   33d72:	49 8b 46 28          	mov    0x28(%r14),%rax
   33d76:	48 8b 40 18          	mov    0x18(%rax),%rax
   33d7a:	48 8d 35 6c 65 00 00 	lea    0x656c(%rip),%rsi        # 3a2ed <core::str::validations::UTF8_CHAR_WIDTH+0x1d8>
   33d81:	e9 80 00 00 00       	jmpq   33e06 <<core::time::Duration as core::fmt::Debug>::fmt+0x166>
   33d86:	81 fa e7 03 00 00    	cmp    $0x3e7,%edx
   33d8c:	76 45                	jbe    33dd3 <<core::time::Duration as core::fmt::Debug>::fmt+0x133>
   33d8e:	48 69 f2 d3 4d 62 10 	imul   $0x10624dd3,%rdx,%rsi
   33d95:	48 c1 ee 26          	shr    $0x26,%rsi
   33d99:	69 c6 e8 03 00 00    	imul   $0x3e8,%esi,%eax
   33d9f:	29 c2                	sub    %eax,%edx
   33da1:	4c 89 f7             	mov    %r14,%rdi
   33da4:	b9 64 00 00 00       	mov    $0x64,%ecx
   33da9:	e8 72 00 00 00       	callq  33e20 <<core::time::Duration as core::fmt::Debug>::fmt::fmt_decimal>
   33dae:	84 c0                	test   %al,%al
   33db0:	75 37                	jne    33de9 <<core::time::Duration as core::fmt::Debug>::fmt+0x149>
   33db2:	49 8b 7e 20          	mov    0x20(%r14),%rdi
   33db6:	49 8b 46 28          	mov    0x28(%r14),%rax
   33dba:	48 8b 40 18          	mov    0x18(%rax),%rax
   33dbe:	48 8d 35 2a 65 00 00 	lea    0x652a(%rip),%rsi        # 3a2ef <core::str::validations::UTF8_CHAR_WIDTH+0x1da>
   33dc5:	ba 03 00 00 00       	mov    $0x3,%edx
   33dca:	48 83 c4 38          	add    $0x38,%rsp
   33dce:	5b                   	pop    %rbx
   33dcf:	41 5e                	pop    %r14
   33dd1:	ff e0                	jmpq   *%rax
   33dd3:	4c 89 f7             	mov    %r14,%rdi
   33dd6:	48 89 d6             	mov    %rdx,%rsi
   33dd9:	31 d2                	xor    %edx,%edx
   33ddb:	b9 01 00 00 00       	mov    $0x1,%ecx
   33de0:	e8 3b 00 00 00       	callq  33e20 <<core::time::Duration as core::fmt::Debug>::fmt::fmt_decimal>
   33de5:	84 c0                	test   %al,%al
   33de7:	74 0a                	je     33df3 <<core::time::Duration as core::fmt::Debug>::fmt+0x153>
   33de9:	b0 01                	mov    $0x1,%al
   33deb:	48 83 c4 38          	add    $0x38,%rsp
   33def:	5b                   	pop    %rbx
   33df0:	41 5e                	pop    %r14
   33df2:	c3                   	retq   
   33df3:	49 8b 7e 20          	mov    0x20(%r14),%rdi
   33df7:	49 8b 46 28          	mov    0x28(%r14),%rax
   33dfb:	48 8b 40 18          	mov    0x18(%rax),%rax
   33dff:	48 8d 35 ec 64 00 00 	lea    0x64ec(%rip),%rsi        # 3a2f2 <core::str::validations::UTF8_CHAR_WIDTH+0x1dd>
   33e06:	ba 02 00 00 00       	mov    $0x2,%edx
   33e0b:	48 83 c4 38          	add    $0x38,%rsp
   33e0f:	5b                   	pop    %rbx
   33e10:	41 5e                	pop    %r14
   33e12:	ff e0                	jmpq   *%rax
   33e14:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   33e1b:	00 00 00 
   33e1e:	66 90                	xchg   %ax,%ax

0000000000033e20 <<core::time::Duration as core::fmt::Debug>::fmt::fmt_decimal>:
   33e20:	55                   	push   %rbp
   33e21:	53                   	push   %rbx
   33e22:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
   33e29:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
   33e2e:	48 b8 30 30 30 30 30 	movabs $0x3030303030303030,%rax
   33e35:	30 30 30 
   33e38:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   33e3d:	c6 44 24 10 30       	movb   $0x30,0x10(%rsp)
   33e42:	4c 8b 4f 10          	mov    0x10(%rdi),%r9
   33e46:	4c 8b 47 18          	mov    0x18(%rdi),%r8
   33e4a:	85 d2                	test   %edx,%edx
   33e4c:	74 5a                	je     33ea8 <<core::time::Duration as core::fmt::Debug>::fmt::fmt_decimal+0x88>
   33e4e:	4d 85 c9             	test   %r9,%r9
   33e51:	41 ba 09 00 00 00    	mov    $0x9,%r10d
   33e57:	4d 0f 45 d0          	cmovne %r8,%r10
   33e5b:	45 31 db             	xor    %r11d,%r11d
   33e5e:	bb cd cc cc cc       	mov    $0xcccccccd,%ebx
   33e63:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   33e6a:	00 00 00 
   33e6d:	0f 1f 00             	nopl   (%rax)
   33e70:	4d 39 da             	cmp    %r11,%r10
   33e73:	74 38                	je     33ead <<core::time::Duration as core::fmt::Debug>::fmt::fmt_decimal+0x8d>
   33e75:	85 c9                	test   %ecx,%ecx
   33e77:	0f 84 d6 01 00 00    	je     34053 <<core::time::Duration as core::fmt::Debug>::fmt::fmt_decimal+0x233>
   33e7d:	49 83 fb 09          	cmp    $0x9,%r11
   33e81:	0f 84 e7 01 00 00    	je     3406e <<core::time::Duration as core::fmt::Debug>::fmt::fmt_decimal+0x24e>
   33e87:	89 d0                	mov    %edx,%eax
   33e89:	31 d2                	xor    %edx,%edx
   33e8b:	f7 f1                	div    %ecx
   33e8d:	04 30                	add    $0x30,%al
   33e8f:	42 88 44 1c 08       	mov    %al,0x8(%rsp,%r11,1)
   33e94:	89 c9                	mov    %ecx,%ecx
   33e96:	48 0f af cb          	imul   %rbx,%rcx
   33e9a:	48 c1 e9 23          	shr    $0x23,%rcx
   33e9e:	49 83 c3 01          	add    $0x1,%r11
   33ea2:	85 d2                	test   %edx,%edx
   33ea4:	75 ca                	jne    33e70 <<core::time::Duration as core::fmt::Debug>::fmt::fmt_decimal+0x50>
   33ea6:	eb 6d                	jmp    33f15 <<core::time::Duration as core::fmt::Debug>::fmt::fmt_decimal+0xf5>
   33ea8:	45 31 db             	xor    %r11d,%r11d
   33eab:	eb 68                	jmp    33f15 <<core::time::Duration as core::fmt::Debug>::fmt::fmt_decimal+0xf5>
   33ead:	8d 04 89             	lea    (%rcx,%rcx,4),%eax
   33eb0:	39 c2                	cmp    %eax,%edx
   33eb2:	72 5e                	jb     33f12 <<core::time::Duration as core::fmt::Debug>::fmt::fmt_decimal+0xf2>
   33eb4:	4d 85 d2             	test   %r10,%r10
   33eb7:	74 50                	je     33f09 <<core::time::Duration as core::fmt::Debug>::fmt::fmt_decimal+0xe9>
   33eb9:	49 8d 42 ff          	lea    -0x1(%r10),%rax
   33ebd:	b1 01                	mov    $0x1,%cl
   33ebf:	45 31 db             	xor    %r11d,%r11d
   33ec2:	bb 30 00 00 00       	mov    $0x30,%ebx
   33ec7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   33ece:	00 00 
   33ed0:	48 83 f8 08          	cmp    $0x8,%rax
   33ed4:	0f 87 ad 01 00 00    	ja     34087 <<core::time::Duration as core::fmt::Debug>::fmt::fmt_decimal+0x267>
   33eda:	0f b6 54 04 08       	movzbl 0x8(%rsp,%rax,1),%edx
   33edf:	8d 6a 01             	lea    0x1(%rdx),%ebp
   33ee2:	80 fa 39             	cmp    $0x39,%dl
   33ee5:	40 0f b6 d5          	movzbl %bpl,%edx
   33ee9:	0f 43 d3             	cmovae %ebx,%edx
   33eec:	0f b6 c9             	movzbl %cl,%ecx
   33eef:	41 0f 42 cb          	cmovb  %r11d,%ecx
   33ef3:	88 54 04 08          	mov    %dl,0x8(%rsp,%rax,1)
   33ef7:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
   33efb:	73 07                	jae    33f04 <<core::time::Duration as core::fmt::Debug>::fmt::fmt_decimal+0xe4>
   33efd:	89 ca                	mov    %ecx,%edx
   33eff:	80 e2 01             	and    $0x1,%dl
   33f02:	75 cc                	jne    33ed0 <<core::time::Duration as core::fmt::Debug>::fmt::fmt_decimal+0xb0>
   33f04:	f6 c1 01             	test   $0x1,%cl
   33f07:	74 09                	je     33f12 <<core::time::Duration as core::fmt::Debug>::fmt::fmt_decimal+0xf2>
   33f09:	48 83 c6 01          	add    $0x1,%rsi
   33f0d:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
   33f12:	4d 89 d3             	mov    %r10,%r11
   33f15:	49 83 f8 09          	cmp    $0x9,%r8
   33f19:	b8 09 00 00 00       	mov    $0x9,%eax
   33f1e:	49 0f 42 c0          	cmovb  %r8,%rax
   33f22:	4d 85 c9             	test   %r9,%r9
   33f25:	49 0f 44 c3          	cmove  %r11,%rax
   33f29:	48 85 c0             	test   %rax,%rax
   33f2c:	0f 84 ba 00 00 00    	je     33fec <<core::time::Duration as core::fmt::Debug>::fmt::fmt_decimal+0x1cc>
   33f32:	48 83 f8 0a          	cmp    $0xa,%rax
   33f36:	0f 83 62 01 00 00    	jae    3409e <<core::time::Duration as core::fmt::Debug>::fmt::fmt_decimal+0x27e>
   33f3c:	4d 85 c9             	test   %r9,%r9
   33f3f:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
   33f44:	48 89 8c 24 88 00 00 	mov    %rcx,0x88(%rsp)
   33f4b:	00 
   33f4c:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
   33f53:	00 
   33f54:	4d 0f 44 c3          	cmove  %r11,%r8
   33f58:	4c 89 44 24 50       	mov    %r8,0x50(%rsp)
   33f5d:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
   33f62:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   33f67:	48 8d 05 f2 0d 00 00 	lea    0xdf2(%rip),%rax        # 34d60 <core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt>
   33f6e:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   33f73:	48 8d 84 24 88 00 00 	lea    0x88(%rsp),%rax
   33f7a:	00 
   33f7b:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   33f80:	48 8d 05 39 12 00 00 	lea    0x1239(%rip),%rax        # 351c0 <<&T as core::fmt::Display>::fmt>
   33f87:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   33f8c:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
   33f91:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   33f96:	48 8d 05 43 b4 ff ff 	lea    -0x4bbd(%rip),%rax        # 2f3e0 <core::ops::function::FnOnce::call_once>
   33f9d:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   33fa4:	00 
   33fa5:	48 8b 47 20          	mov    0x20(%rdi),%rax
   33fa9:	48 8b 77 28          	mov    0x28(%rdi),%rsi
   33fad:	48 8d 0d ac 16 01 00 	lea    0x116ac(%rip),%rcx        # 45660 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2128>
   33fb4:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   33fb9:	48 c7 44 24 28 02 00 	movq   $0x2,0x28(%rsp)
   33fc0:	00 00 
   33fc2:	48 8d 0d 2f 63 00 00 	lea    0x632f(%rip),%rcx        # 3a2f8 <core::str::validations::UTF8_CHAR_WIDTH+0x1e3>
   33fc9:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   33fce:	48 c7 44 24 38 02 00 	movq   $0x2,0x38(%rsp)
   33fd5:	00 00 
   33fd7:	48 8d 4c 24 58       	lea    0x58(%rsp),%rcx
   33fdc:	48 89 4c 24 40       	mov    %rcx,0x40(%rsp)
   33fe1:	48 c7 44 24 48 03 00 	movq   $0x3,0x48(%rsp)
   33fe8:	00 00 
   33fea:	eb 4f                	jmp    3403b <<core::time::Duration as core::fmt::Debug>::fmt::fmt_decimal+0x21b>
   33fec:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
   33ff1:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   33ff6:	48 8d 05 63 0d 00 00 	lea    0xd63(%rip),%rax        # 34d60 <core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt>
   33ffd:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   34002:	48 8b 47 20          	mov    0x20(%rdi),%rax
   34006:	48 8b 77 28          	mov    0x28(%rdi),%rsi
   3400a:	48 8d 0d 47 11 01 00 	lea    0x11147(%rip),%rcx        # 45158 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1c20>
   34011:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   34016:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
   3401d:	00 00 
   3401f:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   34026:	00 00 
   34028:	48 8d 4c 24 58       	lea    0x58(%rsp),%rcx
   3402d:	48 89 4c 24 40       	mov    %rcx,0x40(%rsp)
   34032:	48 c7 44 24 48 01 00 	movq   $0x1,0x48(%rsp)
   34039:	00 00 
   3403b:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
   34040:	48 89 c7             	mov    %rax,%rdi
   34043:	ff 15 af 1d 01 00    	callq  *0x11daf(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x470>
   34049:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
   34050:	5b                   	pop    %rbx
   34051:	5d                   	pop    %rbp
   34052:	c3                   	retq   
   34053:	48 8d 3d e6 5d 00 00 	lea    0x5de6(%rip),%rdi        # 39e40 <str.1>
   3405a:	48 8d 15 9f 15 01 00 	lea    0x1159f(%rip),%rdx        # 45600 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x20c8>
   34061:	be 19 00 00 00       	mov    $0x19,%esi
   34066:	ff 15 6c 1e 01 00    	callq  *0x11e6c(%rip)        # 45ed8 <_GLOBAL_OFFSET_TABLE_+0x550>
   3406c:	0f 0b                	ud2    
   3406e:	48 8d 15 a3 15 01 00 	lea    0x115a3(%rip),%rdx        # 45618 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x20e0>
   34075:	bf 09 00 00 00       	mov    $0x9,%edi
   3407a:	be 09 00 00 00       	mov    $0x9,%esi
   3407f:	ff 15 0b 1c 01 00    	callq  *0x11c0b(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   34085:	0f 0b                	ud2    
   34087:	48 8d 15 a2 15 01 00 	lea    0x115a2(%rip),%rdx        # 45630 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x20f8>
   3408e:	be 09 00 00 00       	mov    $0x9,%esi
   34093:	48 89 c7             	mov    %rax,%rdi
   34096:	ff 15 f4 1b 01 00    	callq  *0x11bf4(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   3409c:	0f 0b                	ud2    
   3409e:	48 8d 15 a3 15 01 00 	lea    0x115a3(%rip),%rdx        # 45648 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2110>
   340a5:	be 09 00 00 00       	mov    $0x9,%esi
   340aa:	48 89 c7             	mov    %rax,%rdi
   340ad:	ff 15 75 19 01 00    	callq  *0x11975(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   340b3:	0f 0b                	ud2    
   340b5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   340bc:	00 00 00 
   340bf:	90                   	nop

00000000000340c0 <core::unicode::printable::is_printable>:
   340c0:	53                   	push   %rbx
   340c1:	81 ff 00 00 01 00    	cmp    $0x10000,%edi
   340c7:	0f 83 95 00 00 00    	jae    34162 <core::unicode::printable::is_printable+0xa2>
   340cd:	41 89 f9             	mov    %edi,%r9d
   340d0:	41 c1 e9 08          	shr    $0x8,%r9d
   340d4:	4c 8d 15 b2 62 00 00 	lea    0x62b2(%rip),%r10        # 3a38d <core::str::validations::UTF8_CHAR_WIDTH+0x278>
   340db:	31 c0                	xor    %eax,%eax
   340dd:	4c 8d 05 fb 62 00 00 	lea    0x62fb(%rip),%r8        # 3a3df <core::str::validations::UTF8_CHAR_WIDTH+0x2ca>
   340e4:	48 8d 15 f4 62 00 00 	lea    0x62f4(%rip),%rdx        # 3a3df <core::str::validations::UTF8_CHAR_WIDTH+0x2ca>
   340eb:	4c 89 d1             	mov    %r10,%rcx
   340ee:	41 0f b6 72 01       	movzbl 0x1(%r10),%esi
   340f3:	49 83 c2 02          	add    $0x2,%r10
   340f7:	4c 8d 1c 30          	lea    (%rax,%rsi,1),%r11
   340fb:	44 38 09             	cmp    %r9b,(%rcx)
   340fe:	75 40                	jne    34140 <core::unicode::printable::is_printable+0x80>
   34100:	49 39 c3             	cmp    %rax,%r11
   34103:	0f 82 ee 01 00 00    	jb     342f7 <core::unicode::printable::is_printable+0x237>
   34109:	49 81 fb 22 01 00 00 	cmp    $0x122,%r11
   34110:	0f 87 f6 01 00 00    	ja     3430c <core::unicode::printable::is_printable+0x24c>
   34116:	31 c9                	xor    %ecx,%ecx
   34118:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   3411f:	00 
   34120:	48 39 ce             	cmp    %rcx,%rsi
   34123:	74 1d                	je     34142 <core::unicode::printable::is_printable+0x82>
   34125:	48 8d 1c 08          	lea    (%rax,%rcx,1),%rbx
   34129:	48 83 c1 01          	add    $0x1,%rcx
   3412d:	40 38 3c 1a          	cmp    %dil,(%rdx,%rbx,1)
   34131:	0f 85 e9 ff ff ff    	jne    34120 <core::unicode::printable::is_printable+0x60>
   34137:	e9 c6 00 00 00       	jmpq   34202 <core::unicode::printable::is_printable+0x142>
   3413c:	0f 1f 40 00          	nopl   0x0(%rax)
   34140:	77 08                	ja     3414a <core::unicode::printable::is_printable+0x8a>
   34142:	4c 89 d8             	mov    %r11,%rax
   34145:	4d 39 c2             	cmp    %r8,%r10
   34148:	75 a1                	jne    340eb <core::unicode::printable::is_printable+0x2b>
   3414a:	0f b7 cf             	movzwl %di,%ecx
   3414d:	48 8d 15 ad 63 00 00 	lea    0x63ad(%rip),%rdx        # 3a501 <core::str::validations::UTF8_CHAR_WIDTH+0x3ec>
   34154:	b0 01                	mov    $0x1,%al
   34156:	4c 8d 05 d9 64 00 00 	lea    0x64d9(%rip),%r8        # 3a636 <core::str::validations::UTF8_CHAR_WIDTH+0x521>
   3415d:	e9 c4 00 00 00       	jmpq   34226 <core::unicode::printable::is_printable+0x166>
   34162:	81 ff 00 00 02 00    	cmp    $0x20000,%edi
   34168:	0f 83 e6 00 00 00    	jae    34254 <core::unicode::printable::is_printable+0x194>
   3416e:	41 89 f9             	mov    %edi,%r9d
   34171:	41 c1 e9 08          	shr    $0x8,%r9d
   34175:	4c 8d 15 ba 64 00 00 	lea    0x64ba(%rip),%r10        # 3a636 <core::str::validations::UTF8_CHAR_WIDTH+0x521>
   3417c:	31 c0                	xor    %eax,%eax
   3417e:	4c 8d 05 fd 64 00 00 	lea    0x64fd(%rip),%r8        # 3a682 <core::str::validations::UTF8_CHAR_WIDTH+0x56d>
   34185:	48 8d 15 f6 64 00 00 	lea    0x64f6(%rip),%rdx        # 3a682 <core::str::validations::UTF8_CHAR_WIDTH+0x56d>
   3418c:	4c 89 d1             	mov    %r10,%rcx
   3418f:	41 0f b6 72 01       	movzbl 0x1(%r10),%esi
   34194:	49 83 c2 02          	add    $0x2,%r10
   34198:	4c 8d 1c 30          	lea    (%rax,%rsi,1),%r11
   3419c:	44 38 09             	cmp    %r9b,(%rcx)
   3419f:	75 3f                	jne    341e0 <core::unicode::printable::is_printable+0x120>
   341a1:	49 39 c3             	cmp    %rax,%r11
   341a4:	0f 82 4d 01 00 00    	jb     342f7 <core::unicode::printable::is_printable+0x237>
   341aa:	49 81 fb af 00 00 00 	cmp    $0xaf,%r11
   341b1:	0f 87 63 01 00 00    	ja     3431a <core::unicode::printable::is_printable+0x25a>
   341b7:	31 c9                	xor    %ecx,%ecx
   341b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   341c0:	48 39 ce             	cmp    %rcx,%rsi
   341c3:	74 1d                	je     341e2 <core::unicode::printable::is_printable+0x122>
   341c5:	48 8d 1c 08          	lea    (%rax,%rcx,1),%rbx
   341c9:	48 83 c1 01          	add    $0x1,%rcx
   341cd:	40 38 3c 1a          	cmp    %dil,(%rdx,%rbx,1)
   341d1:	0f 85 e9 ff ff ff    	jne    341c0 <core::unicode::printable::is_printable+0x100>
   341d7:	e9 26 00 00 00       	jmpq   34202 <core::unicode::printable::is_printable+0x142>
   341dc:	0f 1f 40 00          	nopl   0x0(%rax)
   341e0:	77 08                	ja     341ea <core::unicode::printable::is_printable+0x12a>
   341e2:	4c 89 d8             	mov    %r11,%rax
   341e5:	4d 39 c2             	cmp    %r8,%r10
   341e8:	75 a2                	jne    3418c <core::unicode::printable::is_printable+0xcc>
   341ea:	0f b7 cf             	movzwl %di,%ecx
   341ed:	48 8d 15 3d 65 00 00 	lea    0x653d(%rip),%rdx        # 3a731 <core::str::validations::UTF8_CHAR_WIDTH+0x61c>
   341f4:	b0 01                	mov    $0x1,%al
   341f6:	4c 8d 05 d7 66 00 00 	lea    0x66d7(%rip),%r8        # 3a8d4 <core::str::validations::UTF8_CHAR_WIDTH+0x7bf>
   341fd:	e9 cc 00 00 00       	jmpq   342ce <core::unicode::printable::is_printable+0x20e>
   34202:	31 c0                	xor    %eax,%eax
   34204:	24 01                	and    $0x1,%al
   34206:	5b                   	pop    %rbx
   34207:	c3                   	retq   
   34208:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   3420f:	00 
   34210:	48 89 f2             	mov    %rsi,%rdx
   34213:	29 f9                	sub    %edi,%ecx
   34215:	0f 88 d8 00 00 00    	js     342f3 <core::unicode::printable::is_printable+0x233>
   3421b:	34 01                	xor    $0x1,%al
   3421d:	4c 39 c2             	cmp    %r8,%rdx
   34220:	0f 84 cd 00 00 00    	je     342f3 <core::unicode::printable::is_printable+0x233>
   34226:	48 8d 72 01          	lea    0x1(%rdx),%rsi
   3422a:	0f b6 3a             	movzbl (%rdx),%edi
   3422d:	40 84 ff             	test   %dil,%dil
   34230:	79 de                	jns    34210 <core::unicode::printable::is_printable+0x150>
   34232:	4c 39 c6             	cmp    %r8,%rsi
   34235:	0f 84 f6 00 00 00    	je     34331 <core::unicode::printable::is_printable+0x271>
   3423b:	83 e7 7f             	and    $0x7f,%edi
   3423e:	c1 e7 08             	shl    $0x8,%edi
   34241:	0f b6 72 01          	movzbl 0x1(%rdx),%esi
   34245:	48 83 c2 02          	add    $0x2,%rdx
   34249:	09 f7                	or     %esi,%edi
   3424b:	29 f9                	sub    %edi,%ecx
   3424d:	79 cc                	jns    3421b <core::unicode::printable::is_printable+0x15b>
   3424f:	e9 9f 00 00 00       	jmpq   342f3 <core::unicode::printable::is_printable+0x233>
   34254:	66 0f 6e c7          	movd   %edi,%xmm0
   34258:	66 0f 70 c0 00       	pshufd $0x0,%xmm0,%xmm0
   3425d:	66 0f fe 05 2b 58 00 	paddd  0x582b(%rip),%xmm0        # 39a90 <str.6+0x2770>
   34264:	00 
   34265:	66 0f ef 05 d3 47 00 	pxor   0x47d3(%rip),%xmm0        # 38a40 <str.6+0x1720>
   3426c:	00 
   3426d:	66 0f 6f 0d 2b 58 00 	movdqa 0x582b(%rip),%xmm1        # 39aa0 <str.6+0x2780>
   34274:	00 
   34275:	66 0f 66 c8          	pcmpgtd %xmm0,%xmm1
   34279:	0f 50 c9             	movmskps %xmm1,%ecx
   3427c:	31 c0                	xor    %eax,%eax
   3427e:	84 c9                	test   %cl,%cl
   34280:	75 71                	jne    342f3 <core::unicode::printable::is_printable+0x233>
   34282:	89 f9                	mov    %edi,%ecx
   34284:	81 e1 fe ff 1f 00    	and    $0x1ffffe,%ecx
   3428a:	81 f9 1e b8 02 00    	cmp    $0x2b81e,%ecx
   34290:	74 61                	je     342f3 <core::unicode::printable::is_printable+0x233>
   34292:	8d 8f 22 59 fd ff    	lea    -0x2a6de(%rdi),%ecx
   34298:	83 f9 22             	cmp    $0x22,%ecx
   3429b:	72 56                	jb     342f3 <core::unicode::printable::is_printable+0x233>
   3429d:	8d 8f cb 48 fd ff    	lea    -0x2b735(%rdi),%ecx
   342a3:	83 f9 0b             	cmp    $0xb,%ecx
   342a6:	72 4b                	jb     342f3 <core::unicode::printable::is_printable+0x233>
   342a8:	81 ff f0 01 0e 00    	cmp    $0xe01f0,%edi
   342ae:	0f 92 c0             	setb   %al
   342b1:	5b                   	pop    %rbx
   342b2:	c3                   	retq   
   342b3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   342ba:	00 00 00 
   342bd:	0f 1f 00             	nopl   (%rax)
   342c0:	48 89 f2             	mov    %rsi,%rdx
   342c3:	29 f9                	sub    %edi,%ecx
   342c5:	78 2c                	js     342f3 <core::unicode::printable::is_printable+0x233>
   342c7:	34 01                	xor    $0x1,%al
   342c9:	4c 39 c2             	cmp    %r8,%rdx
   342cc:	74 25                	je     342f3 <core::unicode::printable::is_printable+0x233>
   342ce:	48 8d 72 01          	lea    0x1(%rdx),%rsi
   342d2:	0f b6 3a             	movzbl (%rdx),%edi
   342d5:	40 84 ff             	test   %dil,%dil
   342d8:	79 e6                	jns    342c0 <core::unicode::printable::is_printable+0x200>
   342da:	4c 39 c6             	cmp    %r8,%rsi
   342dd:	74 52                	je     34331 <core::unicode::printable::is_printable+0x271>
   342df:	83 e7 7f             	and    $0x7f,%edi
   342e2:	c1 e7 08             	shl    $0x8,%edi
   342e5:	0f b6 72 01          	movzbl 0x1(%rdx),%esi
   342e9:	48 83 c2 02          	add    $0x2,%rdx
   342ed:	09 f7                	or     %esi,%edi
   342ef:	29 f9                	sub    %edi,%ecx
   342f1:	79 d4                	jns    342c7 <core::unicode::printable::is_printable+0x207>
   342f3:	24 01                	and    $0x1,%al
   342f5:	5b                   	pop    %rbx
   342f6:	c3                   	retq   
   342f7:	48 8d 15 82 13 01 00 	lea    0x11382(%rip),%rdx        # 45680 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2148>
   342fe:	48 89 c7             	mov    %rax,%rdi
   34301:	4c 89 de             	mov    %r11,%rsi
   34304:	ff 15 96 1b 01 00    	callq  *0x11b96(%rip)        # 45ea0 <_GLOBAL_OFFSET_TABLE_+0x518>
   3430a:	0f 0b                	ud2    
   3430c:	48 8d 15 6d 13 01 00 	lea    0x1136d(%rip),%rdx        # 45680 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2148>
   34313:	be 22 01 00 00       	mov    $0x122,%esi
   34318:	eb 0c                	jmp    34326 <core::unicode::printable::is_printable+0x266>
   3431a:	48 8d 15 5f 13 01 00 	lea    0x1135f(%rip),%rdx        # 45680 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2148>
   34321:	be af 00 00 00       	mov    $0xaf,%esi
   34326:	4c 89 df             	mov    %r11,%rdi
   34329:	ff 15 f9 16 01 00    	callq  *0x116f9(%rip)        # 45a28 <_GLOBAL_OFFSET_TABLE_+0xa0>
   3432f:	0f 0b                	ud2    
   34331:	48 8d 3d 95 5b 00 00 	lea    0x5b95(%rip),%rdi        # 39ecd <str.1+0x8d>
   34338:	48 8d 15 59 13 01 00 	lea    0x11359(%rip),%rdx        # 45698 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2160>
   3433f:	be 2b 00 00 00       	mov    $0x2b,%esi
   34344:	ff 15 8e 1b 01 00    	callq  *0x11b8e(%rip)        # 45ed8 <_GLOBAL_OFFSET_TABLE_+0x550>
   3434a:	0f 0b                	ud2    
   3434c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000034350 <<core::num::error::ParseIntError as core::fmt::Debug>::fmt>:
   34350:	41 56                	push   %r14
   34352:	53                   	push   %rbx
   34353:	48 83 ec 18          	sub    $0x18,%rsp
   34357:	48 89 f3             	mov    %rsi,%rbx
   3435a:	49 89 fe             	mov    %rdi,%r14
   3435d:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
   34361:	48 8b 46 28          	mov    0x28(%rsi),%rax
   34365:	48 8d 35 95 65 00 00 	lea    0x6595(%rip),%rsi        # 3a901 <core::str::validations::UTF8_CHAR_WIDTH+0x7ec>
   3436c:	ba 0d 00 00 00       	mov    $0xd,%edx
   34371:	ff 50 18             	callq  *0x18(%rax)
   34374:	0f b6 c0             	movzbl %al,%eax
   34377:	48 89 1c 24          	mov    %rbx,(%rsp)
   3437b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   34380:	4c 89 74 24 10       	mov    %r14,0x10(%rsp)
   34385:	48 8d 35 ec 33 00 00 	lea    0x33ec(%rip),%rsi        # 37778 <str.6+0x458>
   3438c:	4c 8d 05 85 13 01 00 	lea    0x11385(%rip),%r8        # 45718 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x21e0>
   34393:	48 89 e7             	mov    %rsp,%rdi
   34396:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
   3439b:	ba 04 00 00 00       	mov    $0x4,%edx
   343a0:	ff 15 2a 1c 01 00    	callq  *0x11c2a(%rip)        # 45fd0 <_GLOBAL_OFFSET_TABLE_+0x648>
   343a6:	80 7c 24 09 00       	cmpb   $0x0,0x9(%rsp)
   343ab:	8a 44 24 08          	mov    0x8(%rsp),%al
   343af:	74 3c                	je     343ed <<core::num::error::ParseIntError as core::fmt::Debug>::fmt+0x9d>
   343b1:	84 c0                	test   %al,%al
   343b3:	b0 01                	mov    $0x1,%al
   343b5:	75 32                	jne    343e9 <<core::num::error::ParseIntError as core::fmt::Debug>::fmt+0x99>
   343b7:	48 8b 04 24          	mov    (%rsp),%rax
   343bb:	f6 40 30 04          	testb  $0x4,0x30(%rax)
   343bf:	48 8b 78 20          	mov    0x20(%rax),%rdi
   343c3:	48 8b 40 28          	mov    0x28(%rax),%rax
   343c7:	48 8b 40 18          	mov    0x18(%rax),%rax
   343cb:	75 0e                	jne    343db <<core::num::error::ParseIntError as core::fmt::Debug>::fmt+0x8b>
   343cd:	48 8d 35 84 5b 00 00 	lea    0x5b84(%rip),%rsi        # 39f58 <str.1+0x118>
   343d4:	ba 02 00 00 00       	mov    $0x2,%edx
   343d9:	eb 0c                	jmp    343e7 <<core::num::error::ParseIntError as core::fmt::Debug>::fmt+0x97>
   343db:	48 8d 35 75 5b 00 00 	lea    0x5b75(%rip),%rsi        # 39f57 <str.1+0x117>
   343e2:	ba 01 00 00 00       	mov    $0x1,%edx
   343e7:	ff d0                	callq  *%rax
   343e9:	88 44 24 08          	mov    %al,0x8(%rsp)
   343ed:	48 83 c4 18          	add    $0x18,%rsp
   343f1:	5b                   	pop    %rbx
   343f2:	41 5e                	pop    %r14
   343f4:	c3                   	retq   
   343f5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   343fc:	00 00 00 
   343ff:	90                   	nop

0000000000034400 <core::num::<impl u32>::from_str_radix>:
   34400:	e9 0b b0 ff ff       	jmpq   2f410 <core::num::from_str_radix>
   34405:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3440c:	00 00 00 
   3440f:	90                   	nop

0000000000034410 <core::num::<impl core::str::traits::FromStr for u64>::from_str>:
   34410:	41 b0 01             	mov    $0x1,%r8b
   34413:	48 85 f6             	test   %rsi,%rsi
   34416:	74 57                	je     3446f <core::num::<impl core::str::traits::FromStr for u64>::from_str+0x5f>
   34418:	80 3f 2b             	cmpb   $0x2b,(%rdi)
   3441b:	75 0a                	jne    34427 <core::num::<impl core::str::traits::FromStr for u64>::from_str+0x17>
   3441d:	48 83 c6 ff          	add    $0xffffffffffffffff,%rsi
   34421:	74 4c                	je     3446f <core::num::<impl core::str::traits::FromStr for u64>::from_str+0x5f>
   34423:	48 83 c7 01          	add    $0x1,%rdi
   34427:	45 31 db             	xor    %r11d,%r11d
   3442a:	41 ba 0a 00 00 00    	mov    $0xa,%r10d
   34430:	31 c0                	xor    %eax,%eax
   34432:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   34439:	00 00 00 
   3443c:	0f 1f 40 00          	nopl   0x0(%rax)
   34440:	49 89 c1             	mov    %rax,%r9
   34443:	4c 39 de             	cmp    %r11,%rsi
   34446:	74 2b                	je     34473 <core::num::<impl core::str::traits::FromStr for u64>::from_str+0x63>
   34448:	42 0f b6 0c 1f       	movzbl (%rdi,%r11,1),%ecx
   3444d:	83 c1 d0             	add    $0xffffffd0,%ecx
   34450:	41 b0 01             	mov    $0x1,%r8b
   34453:	83 f9 09             	cmp    $0x9,%ecx
   34456:	77 20                	ja     34478 <core::num::<impl core::str::traits::FromStr for u64>::from_str+0x68>
   34458:	4c 89 c8             	mov    %r9,%rax
   3445b:	49 f7 e2             	mul    %r10
   3445e:	b2 02                	mov    $0x2,%dl
   34460:	70 18                	jo     3447a <core::num::<impl core::str::traits::FromStr for u64>::from_str+0x6a>
   34462:	89 c9                	mov    %ecx,%ecx
   34464:	49 83 c3 01          	add    $0x1,%r11
   34468:	48 01 c8             	add    %rcx,%rax
   3446b:	73 d3                	jae    34440 <core::num::<impl core::str::traits::FromStr for u64>::from_str+0x30>
   3446d:	eb 0b                	jmp    3447a <core::num::<impl core::str::traits::FromStr for u64>::from_str+0x6a>
   3446f:	31 d2                	xor    %edx,%edx
   34471:	eb 07                	jmp    3447a <core::num::<impl core::str::traits::FromStr for u64>::from_str+0x6a>
   34473:	45 31 c0             	xor    %r8d,%r8d
   34476:	eb 02                	jmp    3447a <core::num::<impl core::str::traits::FromStr for u64>::from_str+0x6a>
   34478:	b2 01                	mov    $0x1,%dl
   3447a:	0f b6 ca             	movzbl %dl,%ecx
   3447d:	48 c1 e1 08          	shl    $0x8,%rcx
   34481:	41 0f b6 c0          	movzbl %r8b,%eax
   34485:	48 09 c8             	or     %rcx,%rax
   34488:	4c 89 ca             	mov    %r9,%rdx
   3448b:	c3                   	retq   
   3448c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000034490 <core::fmt::num::<impl core::fmt::LowerHex for i8>::fmt>:
   34490:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   34497:	8a 07                	mov    (%rdi),%al
   34499:	4c 8d 84 24 88 00 00 	lea    0x88(%rsp),%r8
   344a0:	00 
   344a1:	45 31 c9             	xor    %r9d,%r9d
   344a4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   344ab:	00 00 00 
   344ae:	66 90                	xchg   %ax,%ax
   344b0:	89 c1                	mov    %eax,%ecx
   344b2:	80 e1 0f             	and    $0xf,%cl
   344b5:	c0 e8 04             	shr    $0x4,%al
   344b8:	8d 51 30             	lea    0x30(%rcx),%edx
   344bb:	8d 79 57             	lea    0x57(%rcx),%edi
   344be:	80 f9 0a             	cmp    $0xa,%cl
   344c1:	0f b6 ca             	movzbl %dl,%ecx
   344c4:	40 0f b6 d7          	movzbl %dil,%edx
   344c8:	0f 42 d1             	cmovb  %ecx,%edx
   344cb:	41 88 50 ff          	mov    %dl,-0x1(%r8)
   344cf:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   344d3:	49 83 c1 01          	add    $0x1,%r9
   344d7:	84 c0                	test   %al,%al
   344d9:	75 d5                	jne    344b0 <core::fmt::num::<impl core::fmt::LowerHex for i8>::fmt+0x20>
   344db:	bf 80 00 00 00       	mov    $0x80,%edi
   344e0:	4c 29 cf             	sub    %r9,%rdi
   344e3:	48 81 ff 81 00 00 00 	cmp    $0x81,%rdi
   344ea:	73 22                	jae    3450e <core::fmt::num::<impl core::fmt::LowerHex for i8>::fmt+0x7e>
   344ec:	48 8d 15 8a 5a 00 00 	lea    0x5a8a(%rip),%rdx        # 39f7d <str.1+0x13d>
   344f3:	b9 02 00 00 00       	mov    $0x2,%ecx
   344f8:	48 89 f7             	mov    %rsi,%rdi
   344fb:	be 01 00 00 00       	mov    $0x1,%esi
   34500:	ff 15 c2 14 01 00    	callq  *0x114c2(%rip)        # 459c8 <_GLOBAL_OFFSET_TABLE_+0x40>
   34506:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   3450d:	c3                   	retq   
   3450e:	48 8d 15 63 0d 01 00 	lea    0x10d63(%rip),%rdx        # 45278 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1d40>
   34515:	be 80 00 00 00       	mov    $0x80,%esi
   3451a:	ff 15 d0 18 01 00    	callq  *0x118d0(%rip)        # 45df0 <_GLOBAL_OFFSET_TABLE_+0x468>
   34520:	0f 0b                	ud2    
   34522:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   34529:	00 00 00 
   3452c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000034530 <core::fmt::num::<impl core::fmt::UpperHex for i8>::fmt>:
   34530:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   34537:	8a 07                	mov    (%rdi),%al
   34539:	4c 8d 84 24 88 00 00 	lea    0x88(%rsp),%r8
   34540:	00 
   34541:	45 31 c9             	xor    %r9d,%r9d
   34544:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3454b:	00 00 00 
   3454e:	66 90                	xchg   %ax,%ax
   34550:	89 c1                	mov    %eax,%ecx
   34552:	80 e1 0f             	and    $0xf,%cl
   34555:	c0 e8 04             	shr    $0x4,%al
   34558:	8d 51 30             	lea    0x30(%rcx),%edx
   3455b:	8d 79 37             	lea    0x37(%rcx),%edi
   3455e:	80 f9 0a             	cmp    $0xa,%cl
   34561:	0f b6 ca             	movzbl %dl,%ecx
   34564:	40 0f b6 d7          	movzbl %dil,%edx
   34568:	0f 42 d1             	cmovb  %ecx,%edx
   3456b:	41 88 50 ff          	mov    %dl,-0x1(%r8)
   3456f:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   34573:	49 83 c1 01          	add    $0x1,%r9
   34577:	84 c0                	test   %al,%al
   34579:	75 d5                	jne    34550 <core::fmt::num::<impl core::fmt::UpperHex for i8>::fmt+0x20>
   3457b:	bf 80 00 00 00       	mov    $0x80,%edi
   34580:	4c 29 cf             	sub    %r9,%rdi
   34583:	48 81 ff 81 00 00 00 	cmp    $0x81,%rdi
   3458a:	73 22                	jae    345ae <core::fmt::num::<impl core::fmt::UpperHex for i8>::fmt+0x7e>
   3458c:	48 8d 15 ea 59 00 00 	lea    0x59ea(%rip),%rdx        # 39f7d <str.1+0x13d>
   34593:	b9 02 00 00 00       	mov    $0x2,%ecx
   34598:	48 89 f7             	mov    %rsi,%rdi
   3459b:	be 01 00 00 00       	mov    $0x1,%esi
   345a0:	ff 15 22 14 01 00    	callq  *0x11422(%rip)        # 459c8 <_GLOBAL_OFFSET_TABLE_+0x40>
   345a6:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   345ad:	c3                   	retq   
   345ae:	48 8d 15 c3 0c 01 00 	lea    0x10cc3(%rip),%rdx        # 45278 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1d40>
   345b5:	be 80 00 00 00       	mov    $0x80,%esi
   345ba:	ff 15 30 18 01 00    	callq  *0x11830(%rip)        # 45df0 <_GLOBAL_OFFSET_TABLE_+0x468>
   345c0:	0f 0b                	ud2    
   345c2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   345c9:	00 00 00 
   345cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000345d0 <core::fmt::num::<impl core::fmt::LowerHex for i32>::fmt>:
   345d0:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   345d7:	8b 0f                	mov    (%rdi),%ecx
   345d9:	4c 8d 84 24 88 00 00 	lea    0x88(%rsp),%r8
   345e0:	00 
   345e1:	45 31 c9             	xor    %r9d,%r9d
   345e4:	89 c8                	mov    %ecx,%eax
   345e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   345ed:	00 00 00 
   345f0:	c1 e8 04             	shr    $0x4,%eax
   345f3:	80 e1 0f             	and    $0xf,%cl
   345f6:	8d 51 30             	lea    0x30(%rcx),%edx
   345f9:	8d 79 57             	lea    0x57(%rcx),%edi
   345fc:	80 f9 0a             	cmp    $0xa,%cl
   345ff:	0f b6 ca             	movzbl %dl,%ecx
   34602:	40 0f b6 d7          	movzbl %dil,%edx
   34606:	0f 42 d1             	cmovb  %ecx,%edx
   34609:	41 88 50 ff          	mov    %dl,-0x1(%r8)
   3460d:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   34611:	49 83 c1 01          	add    $0x1,%r9
   34615:	89 c1                	mov    %eax,%ecx
   34617:	85 c0                	test   %eax,%eax
   34619:	75 d5                	jne    345f0 <core::fmt::num::<impl core::fmt::LowerHex for i32>::fmt+0x20>
   3461b:	bf 80 00 00 00       	mov    $0x80,%edi
   34620:	4c 29 cf             	sub    %r9,%rdi
   34623:	48 81 ff 81 00 00 00 	cmp    $0x81,%rdi
   3462a:	73 22                	jae    3464e <core::fmt::num::<impl core::fmt::LowerHex for i32>::fmt+0x7e>
   3462c:	48 8d 15 4a 59 00 00 	lea    0x594a(%rip),%rdx        # 39f7d <str.1+0x13d>
   34633:	b9 02 00 00 00       	mov    $0x2,%ecx
   34638:	48 89 f7             	mov    %rsi,%rdi
   3463b:	be 01 00 00 00       	mov    $0x1,%esi
   34640:	ff 15 82 13 01 00    	callq  *0x11382(%rip)        # 459c8 <_GLOBAL_OFFSET_TABLE_+0x40>
   34646:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   3464d:	c3                   	retq   
   3464e:	48 8d 15 23 0c 01 00 	lea    0x10c23(%rip),%rdx        # 45278 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1d40>
   34655:	be 80 00 00 00       	mov    $0x80,%esi
   3465a:	ff 15 90 17 01 00    	callq  *0x11790(%rip)        # 45df0 <_GLOBAL_OFFSET_TABLE_+0x468>
   34660:	0f 0b                	ud2    
   34662:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   34669:	00 00 00 
   3466c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000034670 <core::fmt::num::<impl core::fmt::UpperHex for i32>::fmt>:
   34670:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   34677:	8b 0f                	mov    (%rdi),%ecx
   34679:	4c 8d 84 24 88 00 00 	lea    0x88(%rsp),%r8
   34680:	00 
   34681:	45 31 c9             	xor    %r9d,%r9d
   34684:	89 c8                	mov    %ecx,%eax
   34686:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3468d:	00 00 00 
   34690:	c1 e8 04             	shr    $0x4,%eax
   34693:	80 e1 0f             	and    $0xf,%cl
   34696:	8d 51 30             	lea    0x30(%rcx),%edx
   34699:	8d 79 37             	lea    0x37(%rcx),%edi
   3469c:	80 f9 0a             	cmp    $0xa,%cl
   3469f:	0f b6 ca             	movzbl %dl,%ecx
   346a2:	40 0f b6 d7          	movzbl %dil,%edx
   346a6:	0f 42 d1             	cmovb  %ecx,%edx
   346a9:	41 88 50 ff          	mov    %dl,-0x1(%r8)
   346ad:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   346b1:	49 83 c1 01          	add    $0x1,%r9
   346b5:	89 c1                	mov    %eax,%ecx
   346b7:	85 c0                	test   %eax,%eax
   346b9:	75 d5                	jne    34690 <core::fmt::num::<impl core::fmt::UpperHex for i32>::fmt+0x20>
   346bb:	bf 80 00 00 00       	mov    $0x80,%edi
   346c0:	4c 29 cf             	sub    %r9,%rdi
   346c3:	48 81 ff 81 00 00 00 	cmp    $0x81,%rdi
   346ca:	73 22                	jae    346ee <core::fmt::num::<impl core::fmt::UpperHex for i32>::fmt+0x7e>
   346cc:	48 8d 15 aa 58 00 00 	lea    0x58aa(%rip),%rdx        # 39f7d <str.1+0x13d>
   346d3:	b9 02 00 00 00       	mov    $0x2,%ecx
   346d8:	48 89 f7             	mov    %rsi,%rdi
   346db:	be 01 00 00 00       	mov    $0x1,%esi
   346e0:	ff 15 e2 12 01 00    	callq  *0x112e2(%rip)        # 459c8 <_GLOBAL_OFFSET_TABLE_+0x40>
   346e6:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   346ed:	c3                   	retq   
   346ee:	48 8d 15 83 0b 01 00 	lea    0x10b83(%rip),%rdx        # 45278 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1d40>
   346f5:	be 80 00 00 00       	mov    $0x80,%esi
   346fa:	ff 15 f0 16 01 00    	callq  *0x116f0(%rip)        # 45df0 <_GLOBAL_OFFSET_TABLE_+0x468>
   34700:	0f 0b                	ud2    
   34702:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   34709:	00 00 00 
   3470c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000034710 <core::fmt::num::<impl core::fmt::LowerHex for i64>::fmt>:
   34710:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   34717:	48 8b 0f             	mov    (%rdi),%rcx
   3471a:	4c 8d 84 24 88 00 00 	lea    0x88(%rsp),%r8
   34721:	00 
   34722:	45 31 c9             	xor    %r9d,%r9d
   34725:	48 89 c8             	mov    %rcx,%rax
   34728:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   3472f:	00 
   34730:	48 c1 e8 04          	shr    $0x4,%rax
   34734:	80 e1 0f             	and    $0xf,%cl
   34737:	8d 51 30             	lea    0x30(%rcx),%edx
   3473a:	8d 79 57             	lea    0x57(%rcx),%edi
   3473d:	80 f9 0a             	cmp    $0xa,%cl
   34740:	0f b6 ca             	movzbl %dl,%ecx
   34743:	40 0f b6 d7          	movzbl %dil,%edx
   34747:	0f 42 d1             	cmovb  %ecx,%edx
   3474a:	41 88 50 ff          	mov    %dl,-0x1(%r8)
   3474e:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   34752:	49 83 c1 01          	add    $0x1,%r9
   34756:	48 89 c1             	mov    %rax,%rcx
   34759:	48 85 c0             	test   %rax,%rax
   3475c:	75 d2                	jne    34730 <core::fmt::num::<impl core::fmt::LowerHex for i64>::fmt+0x20>
   3475e:	bf 80 00 00 00       	mov    $0x80,%edi
   34763:	4c 29 cf             	sub    %r9,%rdi
   34766:	48 81 ff 81 00 00 00 	cmp    $0x81,%rdi
   3476d:	73 22                	jae    34791 <core::fmt::num::<impl core::fmt::LowerHex for i64>::fmt+0x81>
   3476f:	48 8d 15 07 58 00 00 	lea    0x5807(%rip),%rdx        # 39f7d <str.1+0x13d>
   34776:	b9 02 00 00 00       	mov    $0x2,%ecx
   3477b:	48 89 f7             	mov    %rsi,%rdi
   3477e:	be 01 00 00 00       	mov    $0x1,%esi
   34783:	ff 15 3f 12 01 00    	callq  *0x1123f(%rip)        # 459c8 <_GLOBAL_OFFSET_TABLE_+0x40>
   34789:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   34790:	c3                   	retq   
   34791:	48 8d 15 e0 0a 01 00 	lea    0x10ae0(%rip),%rdx        # 45278 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1d40>
   34798:	be 80 00 00 00       	mov    $0x80,%esi
   3479d:	ff 15 4d 16 01 00    	callq  *0x1164d(%rip)        # 45df0 <_GLOBAL_OFFSET_TABLE_+0x468>
   347a3:	0f 0b                	ud2    
   347a5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   347ac:	00 00 00 
   347af:	90                   	nop

00000000000347b0 <core::fmt::num::<impl core::fmt::UpperHex for i64>::fmt>:
   347b0:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   347b7:	48 8b 0f             	mov    (%rdi),%rcx
   347ba:	4c 8d 84 24 88 00 00 	lea    0x88(%rsp),%r8
   347c1:	00 
   347c2:	45 31 c9             	xor    %r9d,%r9d
   347c5:	48 89 c8             	mov    %rcx,%rax
   347c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   347cf:	00 
   347d0:	48 c1 e8 04          	shr    $0x4,%rax
   347d4:	80 e1 0f             	and    $0xf,%cl
   347d7:	8d 51 30             	lea    0x30(%rcx),%edx
   347da:	8d 79 37             	lea    0x37(%rcx),%edi
   347dd:	80 f9 0a             	cmp    $0xa,%cl
   347e0:	0f b6 ca             	movzbl %dl,%ecx
   347e3:	40 0f b6 d7          	movzbl %dil,%edx
   347e7:	0f 42 d1             	cmovb  %ecx,%edx
   347ea:	41 88 50 ff          	mov    %dl,-0x1(%r8)
   347ee:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   347f2:	49 83 c1 01          	add    $0x1,%r9
   347f6:	48 89 c1             	mov    %rax,%rcx
   347f9:	48 85 c0             	test   %rax,%rax
   347fc:	75 d2                	jne    347d0 <core::fmt::num::<impl core::fmt::UpperHex for i64>::fmt+0x20>
   347fe:	bf 80 00 00 00       	mov    $0x80,%edi
   34803:	4c 29 cf             	sub    %r9,%rdi
   34806:	48 81 ff 81 00 00 00 	cmp    $0x81,%rdi
   3480d:	73 22                	jae    34831 <core::fmt::num::<impl core::fmt::UpperHex for i64>::fmt+0x81>
   3480f:	48 8d 15 67 57 00 00 	lea    0x5767(%rip),%rdx        # 39f7d <str.1+0x13d>
   34816:	b9 02 00 00 00       	mov    $0x2,%ecx
   3481b:	48 89 f7             	mov    %rsi,%rdi
   3481e:	be 01 00 00 00       	mov    $0x1,%esi
   34823:	ff 15 9f 11 01 00    	callq  *0x1119f(%rip)        # 459c8 <_GLOBAL_OFFSET_TABLE_+0x40>
   34829:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   34830:	c3                   	retq   
   34831:	48 8d 15 40 0a 01 00 	lea    0x10a40(%rip),%rdx        # 45278 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1d40>
   34838:	be 80 00 00 00       	mov    $0x80,%esi
   3483d:	ff 15 ad 15 01 00    	callq  *0x115ad(%rip)        # 45df0 <_GLOBAL_OFFSET_TABLE_+0x468>
   34843:	0f 0b                	ud2    
   34845:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3484c:	00 00 00 
   3484f:	90                   	nop

0000000000034850 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt>:
   34850:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   34857:	49 89 f2             	mov    %rsi,%r10
   3485a:	8b 46 30             	mov    0x30(%rsi),%eax
   3485d:	a8 10                	test   $0x10,%al
   3485f:	0f 85 dd 00 00 00    	jne    34942 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt+0xf2>
   34865:	48 8b 0f             	mov    (%rdi),%rcx
   34868:	a8 20                	test   $0x20,%al
   3486a:	0f 85 20 01 00 00    	jne    34990 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt+0x140>
   34870:	be 27 00 00 00       	mov    $0x27,%esi
   34875:	48 81 f9 10 27 00 00 	cmp    $0x2710,%rcx
   3487c:	0f 82 7f 01 00 00    	jb     34a01 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt+0x1b1>
   34882:	41 bb 27 00 00 00    	mov    $0x27,%r11d
   34888:	49 b8 4b 59 86 38 d6 	movabs $0x346dc5d63886594b,%r8
   3488f:	c5 6d 34 
   34892:	4c 8d 0d e6 56 00 00 	lea    0x56e6(%rip),%r9        # 39f7f <str.1+0x13f>
   34899:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   348a0:	48 89 c8             	mov    %rcx,%rax
   348a3:	49 f7 e0             	mul    %r8
   348a6:	48 c1 ea 0b          	shr    $0xb,%rdx
   348aa:	69 c2 10 27 00 00    	imul   $0x2710,%edx,%eax
   348b0:	89 ce                	mov    %ecx,%esi
   348b2:	29 c6                	sub    %eax,%esi
   348b4:	0f b7 c6             	movzwl %si,%eax
   348b7:	c1 e8 02             	shr    $0x2,%eax
   348ba:	69 c0 7b 14 00 00    	imul   $0x147b,%eax,%eax
   348c0:	c1 e8 11             	shr    $0x11,%eax
   348c3:	6b f8 64             	imul   $0x64,%eax,%edi
   348c6:	29 fe                	sub    %edi,%esi
   348c8:	0f b7 fe             	movzwl %si,%edi
   348cb:	49 8d 73 fc          	lea    -0x4(%r11),%rsi
   348cf:	41 0f b7 04 41       	movzwl (%r9,%rax,2),%eax
   348d4:	66 42 89 44 1c 04    	mov    %ax,0x4(%rsp,%r11,1)
   348da:	41 0f b7 04 79       	movzwl (%r9,%rdi,2),%eax
   348df:	66 42 89 44 1c 06    	mov    %ax,0x6(%rsp,%r11,1)
   348e5:	49 89 f3             	mov    %rsi,%r11
   348e8:	48 81 f9 ff e0 f5 05 	cmp    $0x5f5e0ff,%rcx
   348ef:	48 89 d1             	mov    %rdx,%rcx
   348f2:	77 ac                	ja     348a0 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt+0x50>
   348f4:	48 83 fa 63          	cmp    $0x63,%rdx
   348f8:	7e 2e                	jle    34928 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt+0xd8>
   348fa:	0f b7 c2             	movzwl %dx,%eax
   348fd:	c1 e8 02             	shr    $0x2,%eax
   34900:	69 c0 7b 14 00 00    	imul   $0x147b,%eax,%eax
   34906:	c1 e8 11             	shr    $0x11,%eax
   34909:	6b c8 64             	imul   $0x64,%eax,%ecx
   3490c:	29 ca                	sub    %ecx,%edx
   3490e:	0f b7 ca             	movzwl %dx,%ecx
   34911:	48 8d 15 67 56 00 00 	lea    0x5667(%rip),%rdx        # 39f7f <str.1+0x13f>
   34918:	0f b7 0c 4a          	movzwl (%rdx,%rcx,2),%ecx
   3491c:	66 89 4c 34 06       	mov    %cx,0x6(%rsp,%rsi,1)
   34921:	48 83 c6 fe          	add    $0xfffffffffffffffe,%rsi
   34925:	48 89 c2             	mov    %rax,%rdx
   34928:	48 83 fa 0a          	cmp    $0xa,%rdx
   3492c:	0f 8d e1 00 00 00    	jge    34a13 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt+0x1c3>
   34932:	80 c2 30             	add    $0x30,%dl
   34935:	88 54 34 07          	mov    %dl,0x7(%rsp,%rsi,1)
   34939:	48 83 c6 ff          	add    $0xffffffffffffffff,%rsi
   3493d:	e9 e5 00 00 00       	jmpq   34a27 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt+0x1d7>
   34942:	48 8b 0f             	mov    (%rdi),%rcx
   34945:	4c 8d 84 24 88 00 00 	lea    0x88(%rsp),%r8
   3494c:	00 
   3494d:	45 31 c9             	xor    %r9d,%r9d
   34950:	48 89 c8             	mov    %rcx,%rax
   34953:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3495a:	00 00 00 
   3495d:	0f 1f 00             	nopl   (%rax)
   34960:	48 c1 e8 04          	shr    $0x4,%rax
   34964:	80 e1 0f             	and    $0xf,%cl
   34967:	8d 51 30             	lea    0x30(%rcx),%edx
   3496a:	8d 71 57             	lea    0x57(%rcx),%esi
   3496d:	80 f9 0a             	cmp    $0xa,%cl
   34970:	0f b6 ca             	movzbl %dl,%ecx
   34973:	40 0f b6 d6          	movzbl %sil,%edx
   34977:	0f 42 d1             	cmovb  %ecx,%edx
   3497a:	41 88 50 ff          	mov    %dl,-0x1(%r8)
   3497e:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   34982:	49 83 c1 01          	add    $0x1,%r9
   34986:	48 89 c1             	mov    %rax,%rcx
   34989:	48 85 c0             	test   %rax,%rax
   3498c:	75 d2                	jne    34960 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt+0x110>
   3498e:	eb 3e                	jmp    349ce <core::fmt::num::<impl core::fmt::Debug for usize>::fmt+0x17e>
   34990:	4c 8d 84 24 88 00 00 	lea    0x88(%rsp),%r8
   34997:	00 
   34998:	45 31 c9             	xor    %r9d,%r9d
   3499b:	48 89 c8             	mov    %rcx,%rax
   3499e:	66 90                	xchg   %ax,%ax
   349a0:	48 c1 e8 04          	shr    $0x4,%rax
   349a4:	80 e1 0f             	and    $0xf,%cl
   349a7:	8d 51 30             	lea    0x30(%rcx),%edx
   349aa:	8d 71 37             	lea    0x37(%rcx),%esi
   349ad:	80 f9 0a             	cmp    $0xa,%cl
   349b0:	0f b6 ca             	movzbl %dl,%ecx
   349b3:	40 0f b6 d6          	movzbl %sil,%edx
   349b7:	0f 42 d1             	cmovb  %ecx,%edx
   349ba:	41 88 50 ff          	mov    %dl,-0x1(%r8)
   349be:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   349c2:	49 83 c1 01          	add    $0x1,%r9
   349c6:	48 89 c1             	mov    %rax,%rcx
   349c9:	48 85 c0             	test   %rax,%rax
   349cc:	75 d2                	jne    349a0 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt+0x150>
   349ce:	bf 80 00 00 00       	mov    $0x80,%edi
   349d3:	4c 29 cf             	sub    %r9,%rdi
   349d6:	48 81 ff 81 00 00 00 	cmp    $0x81,%rdi
   349dd:	73 78                	jae    34a57 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt+0x207>
   349df:	48 8d 15 97 55 00 00 	lea    0x5597(%rip),%rdx        # 39f7d <str.1+0x13d>
   349e6:	b9 02 00 00 00       	mov    $0x2,%ecx
   349eb:	4c 89 d7             	mov    %r10,%rdi
   349ee:	be 01 00 00 00       	mov    $0x1,%esi
   349f3:	ff 15 cf 0f 01 00    	callq  *0x10fcf(%rip)        # 459c8 <_GLOBAL_OFFSET_TABLE_+0x40>
   349f9:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   34a00:	c3                   	retq   
   34a01:	48 89 ca             	mov    %rcx,%rdx
   34a04:	48 83 fa 63          	cmp    $0x63,%rdx
   34a08:	0f 8f ec fe ff ff    	jg     348fa <core::fmt::num::<impl core::fmt::Debug for usize>::fmt+0xaa>
   34a0e:	e9 15 ff ff ff       	jmpq   34928 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt+0xd8>
   34a13:	48 8d 05 65 55 00 00 	lea    0x5565(%rip),%rax        # 39f7f <str.1+0x13f>
   34a1a:	0f b7 04 50          	movzwl (%rax,%rdx,2),%eax
   34a1e:	66 89 44 34 06       	mov    %ax,0x6(%rsp,%rsi,1)
   34a23:	48 83 c6 fe          	add    $0xfffffffffffffffe,%rsi
   34a27:	4c 8d 04 34          	lea    (%rsp,%rsi,1),%r8
   34a2b:	49 83 c0 08          	add    $0x8,%r8
   34a2f:	41 b9 27 00 00 00    	mov    $0x27,%r9d
   34a35:	49 29 f1             	sub    %rsi,%r9
   34a38:	48 8d 15 f1 53 00 00 	lea    0x53f1(%rip),%rdx        # 39e30 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x2e0>
   34a3f:	4c 89 d7             	mov    %r10,%rdi
   34a42:	be 01 00 00 00       	mov    $0x1,%esi
   34a47:	31 c9                	xor    %ecx,%ecx
   34a49:	ff 15 79 0f 01 00    	callq  *0x10f79(%rip)        # 459c8 <_GLOBAL_OFFSET_TABLE_+0x40>
   34a4f:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   34a56:	c3                   	retq   
   34a57:	48 8d 15 1a 08 01 00 	lea    0x1081a(%rip),%rdx        # 45278 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1d40>
   34a5e:	be 80 00 00 00       	mov    $0x80,%esi
   34a63:	ff 15 87 13 01 00    	callq  *0x11387(%rip)        # 45df0 <_GLOBAL_OFFSET_TABLE_+0x468>
   34a69:	0f 0b                	ud2    
   34a6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000034a70 <core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt>:
   34a70:	48 83 ec 28          	sub    $0x28,%rsp
   34a74:	0f b6 07             	movzbl (%rdi),%eax
   34a77:	48 83 f8 64          	cmp    $0x64,%rax
   34a7b:	72 2d                	jb     34aaa <core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt+0x3a>
   34a7d:	0f b6 c8             	movzbl %al,%ecx
   34a80:	8d 14 89             	lea    (%rcx,%rcx,4),%edx
   34a83:	8d 14 d1             	lea    (%rcx,%rdx,8),%edx
   34a86:	c1 ea 0c             	shr    $0xc,%edx
   34a89:	6b ca 64             	imul   $0x64,%edx,%ecx
   34a8c:	28 c8                	sub    %cl,%al
   34a8e:	0f b6 c0             	movzbl %al,%eax
   34a91:	48 8d 0d e7 54 00 00 	lea    0x54e7(%rip),%rcx        # 39f7f <str.1+0x13f>
   34a98:	0f b7 04 41          	movzwl (%rcx,%rax,2),%eax
   34a9c:	66 89 44 24 26       	mov    %ax,0x26(%rsp)
   34aa1:	b9 24 00 00 00       	mov    $0x24,%ecx
   34aa6:	89 d0                	mov    %edx,%eax
   34aa8:	eb 09                	jmp    34ab3 <core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt+0x43>
   34aaa:	b9 26 00 00 00       	mov    $0x26,%ecx
   34aaf:	3c 0a                	cmp    $0xa,%al
   34ab1:	73 08                	jae    34abb <core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt+0x4b>
   34ab3:	04 30                	add    $0x30,%al
   34ab5:	88 44 0c 01          	mov    %al,0x1(%rsp,%rcx,1)
   34ab9:	eb 15                	jmp    34ad0 <core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt+0x60>
   34abb:	48 8d 0d bd 54 00 00 	lea    0x54bd(%rip),%rcx        # 39f7f <str.1+0x13f>
   34ac2:	0f b7 04 41          	movzwl (%rcx,%rax,2),%eax
   34ac6:	66 89 44 24 26       	mov    %ax,0x26(%rsp)
   34acb:	b9 25 00 00 00       	mov    $0x25,%ecx
   34ad0:	4c 8d 04 0c          	lea    (%rsp,%rcx,1),%r8
   34ad4:	49 83 c0 01          	add    $0x1,%r8
   34ad8:	41 b9 27 00 00 00    	mov    $0x27,%r9d
   34ade:	49 29 c9             	sub    %rcx,%r9
   34ae1:	48 8d 15 48 53 00 00 	lea    0x5348(%rip),%rdx        # 39e30 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x2e0>
   34ae8:	48 89 f7             	mov    %rsi,%rdi
   34aeb:	be 01 00 00 00       	mov    $0x1,%esi
   34af0:	31 c9                	xor    %ecx,%ecx
   34af2:	ff 15 d0 0e 01 00    	callq  *0x10ed0(%rip)        # 459c8 <_GLOBAL_OFFSET_TABLE_+0x40>
   34af8:	48 83 c4 28          	add    $0x28,%rsp
   34afc:	c3                   	retq   
   34afd:	0f 1f 00             	nopl   (%rax)

0000000000034b00 <core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt>:
   34b00:	53                   	push   %rbx
   34b01:	48 83 ec 30          	sub    $0x30,%rsp
   34b05:	49 89 f2             	mov    %rsi,%r10
   34b08:	48 63 37             	movslq (%rdi),%rsi
   34b0b:	49 89 f3             	mov    %rsi,%r11
   34b0e:	49 f7 db             	neg    %r11
   34b11:	4c 0f 4c de          	cmovl  %rsi,%r11
   34b15:	b8 27 00 00 00       	mov    $0x27,%eax
   34b1a:	49 81 fb 10 27 00 00 	cmp    $0x2710,%r11
   34b21:	0f 82 b3 00 00 00    	jb     34bda <core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt+0xda>
   34b27:	b9 27 00 00 00       	mov    $0x27,%ecx
   34b2c:	49 b8 4b 59 86 38 d6 	movabs $0x346dc5d63886594b,%r8
   34b33:	c5 6d 34 
   34b36:	4c 8d 0d 42 54 00 00 	lea    0x5442(%rip),%r9        # 39f7f <str.1+0x13f>
   34b3d:	0f 1f 00             	nopl   (%rax)
   34b40:	4c 89 d8             	mov    %r11,%rax
   34b43:	49 f7 e0             	mul    %r8
   34b46:	48 c1 ea 0b          	shr    $0xb,%rdx
   34b4a:	69 c2 10 27 00 00    	imul   $0x2710,%edx,%eax
   34b50:	44 89 df             	mov    %r11d,%edi
   34b53:	29 c7                	sub    %eax,%edi
   34b55:	0f b7 c7             	movzwl %di,%eax
   34b58:	c1 e8 02             	shr    $0x2,%eax
   34b5b:	69 d8 7b 14 00 00    	imul   $0x147b,%eax,%ebx
   34b61:	c1 eb 11             	shr    $0x11,%ebx
   34b64:	6b c3 64             	imul   $0x64,%ebx,%eax
   34b67:	29 c7                	sub    %eax,%edi
   34b69:	0f b7 ff             	movzwl %di,%edi
   34b6c:	48 8d 41 fc          	lea    -0x4(%rcx),%rax
   34b70:	41 0f b7 1c 59       	movzwl (%r9,%rbx,2),%ebx
   34b75:	66 89 5c 0c 05       	mov    %bx,0x5(%rsp,%rcx,1)
   34b7a:	41 0f b7 3c 79       	movzwl (%r9,%rdi,2),%edi
   34b7f:	66 89 7c 0c 07       	mov    %di,0x7(%rsp,%rcx,1)
   34b84:	48 89 c1             	mov    %rax,%rcx
   34b87:	49 81 fb ff e0 f5 05 	cmp    $0x5f5e0ff,%r11
   34b8e:	49 89 d3             	mov    %rdx,%r11
   34b91:	77 ad                	ja     34b40 <core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt+0x40>
   34b93:	48 83 fa 63          	cmp    $0x63,%rdx
   34b97:	76 2e                	jbe    34bc7 <core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt+0xc7>
   34b99:	0f b7 ca             	movzwl %dx,%ecx
   34b9c:	c1 e9 02             	shr    $0x2,%ecx
   34b9f:	69 c9 7b 14 00 00    	imul   $0x147b,%ecx,%ecx
   34ba5:	c1 e9 11             	shr    $0x11,%ecx
   34ba8:	6b f9 64             	imul   $0x64,%ecx,%edi
   34bab:	29 fa                	sub    %edi,%edx
   34bad:	0f b7 d2             	movzwl %dx,%edx
   34bb0:	48 8d 3d c8 53 00 00 	lea    0x53c8(%rip),%rdi        # 39f7f <str.1+0x13f>
   34bb7:	0f b7 14 57          	movzwl (%rdi,%rdx,2),%edx
   34bbb:	66 89 54 04 07       	mov    %dx,0x7(%rsp,%rax,1)
   34bc0:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
   34bc4:	48 89 ca             	mov    %rcx,%rdx
   34bc7:	48 83 fa 0a          	cmp    $0xa,%rdx
   34bcb:	7d 18                	jge    34be5 <core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt+0xe5>
   34bcd:	80 c2 30             	add    $0x30,%dl
   34bd0:	88 54 04 08          	mov    %dl,0x8(%rsp,%rax,1)
   34bd4:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
   34bd8:	eb 1f                	jmp    34bf9 <core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt+0xf9>
   34bda:	4c 89 da             	mov    %r11,%rdx
   34bdd:	48 83 fa 63          	cmp    $0x63,%rdx
   34be1:	77 b6                	ja     34b99 <core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt+0x99>
   34be3:	eb e2                	jmp    34bc7 <core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt+0xc7>
   34be5:	48 8d 0d 93 53 00 00 	lea    0x5393(%rip),%rcx        # 39f7f <str.1+0x13f>
   34bec:	0f b7 0c 51          	movzwl (%rcx,%rdx,2),%ecx
   34bf0:	66 89 4c 04 07       	mov    %cx,0x7(%rsp,%rax,1)
   34bf5:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
   34bf9:	4c 8d 04 04          	lea    (%rsp,%rax,1),%r8
   34bfd:	49 83 c0 09          	add    $0x9,%r8
   34c01:	41 b9 27 00 00 00    	mov    $0x27,%r9d
   34c07:	49 29 c1             	sub    %rax,%r9
   34c0a:	f7 d6                	not    %esi
   34c0c:	c1 ee 1f             	shr    $0x1f,%esi
   34c0f:	48 8d 15 1a 52 00 00 	lea    0x521a(%rip),%rdx        # 39e30 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x2e0>
   34c16:	4c 89 d7             	mov    %r10,%rdi
   34c19:	31 c9                	xor    %ecx,%ecx
   34c1b:	ff 15 a7 0d 01 00    	callq  *0x10da7(%rip)        # 459c8 <_GLOBAL_OFFSET_TABLE_+0x40>
   34c21:	48 83 c4 30          	add    $0x30,%rsp
   34c25:	5b                   	pop    %rbx
   34c26:	c3                   	retq   
   34c27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   34c2e:	00 00 

0000000000034c30 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt>:
   34c30:	48 83 ec 28          	sub    $0x28,%rsp
   34c34:	49 89 f2             	mov    %rsi,%r10
   34c37:	44 8b 1f             	mov    (%rdi),%r11d
   34c3a:	b9 27 00 00 00       	mov    $0x27,%ecx
   34c3f:	49 81 fb 10 27 00 00 	cmp    $0x2710,%r11
   34c46:	0f 82 bd 00 00 00    	jb     34d09 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt+0xd9>
   34c4c:	bf 27 00 00 00       	mov    $0x27,%edi
   34c51:	49 b8 4b 59 86 38 d6 	movabs $0x346dc5d63886594b,%r8
   34c58:	c5 6d 34 
   34c5b:	4c 8d 0d 1d 53 00 00 	lea    0x531d(%rip),%r9        # 39f7f <str.1+0x13f>
   34c62:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   34c69:	00 00 00 
   34c6c:	0f 1f 40 00          	nopl   0x0(%rax)
   34c70:	4c 89 d8             	mov    %r11,%rax
   34c73:	49 f7 e0             	mul    %r8
   34c76:	48 c1 ea 0b          	shr    $0xb,%rdx
   34c7a:	69 c2 10 27 00 00    	imul   $0x2710,%edx,%eax
   34c80:	44 89 d9             	mov    %r11d,%ecx
   34c83:	29 c1                	sub    %eax,%ecx
   34c85:	0f b7 c1             	movzwl %cx,%eax
   34c88:	c1 e8 02             	shr    $0x2,%eax
   34c8b:	69 c0 7b 14 00 00    	imul   $0x147b,%eax,%eax
   34c91:	c1 e8 11             	shr    $0x11,%eax
   34c94:	6b f0 64             	imul   $0x64,%eax,%esi
   34c97:	29 f1                	sub    %esi,%ecx
   34c99:	0f b7 f1             	movzwl %cx,%esi
   34c9c:	48 8d 4f fc          	lea    -0x4(%rdi),%rcx
   34ca0:	41 0f b7 04 41       	movzwl (%r9,%rax,2),%eax
   34ca5:	66 89 44 3c fd       	mov    %ax,-0x3(%rsp,%rdi,1)
   34caa:	41 0f b7 04 71       	movzwl (%r9,%rsi,2),%eax
   34caf:	66 89 44 3c ff       	mov    %ax,-0x1(%rsp,%rdi,1)
   34cb4:	48 89 cf             	mov    %rcx,%rdi
   34cb7:	49 81 fb ff e0 f5 05 	cmp    $0x5f5e0ff,%r11
   34cbe:	49 89 d3             	mov    %rdx,%r11
   34cc1:	77 ad                	ja     34c70 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt+0x40>
   34cc3:	48 83 fa 63          	cmp    $0x63,%rdx
   34cc7:	76 2e                	jbe    34cf7 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt+0xc7>
   34cc9:	0f b7 c2             	movzwl %dx,%eax
   34ccc:	c1 e8 02             	shr    $0x2,%eax
   34ccf:	69 c0 7b 14 00 00    	imul   $0x147b,%eax,%eax
   34cd5:	c1 e8 11             	shr    $0x11,%eax
   34cd8:	6b f0 64             	imul   $0x64,%eax,%esi
   34cdb:	29 f2                	sub    %esi,%edx
   34cdd:	0f b7 d2             	movzwl %dx,%edx
   34ce0:	48 8d 35 98 52 00 00 	lea    0x5298(%rip),%rsi        # 39f7f <str.1+0x13f>
   34ce7:	0f b7 14 56          	movzwl (%rsi,%rdx,2),%edx
   34ceb:	66 89 54 0c ff       	mov    %dx,-0x1(%rsp,%rcx,1)
   34cf0:	48 83 c1 fe          	add    $0xfffffffffffffffe,%rcx
   34cf4:	48 89 c2             	mov    %rax,%rdx
   34cf7:	48 83 fa 0a          	cmp    $0xa,%rdx
   34cfb:	7d 17                	jge    34d14 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt+0xe4>
   34cfd:	80 c2 30             	add    $0x30,%dl
   34d00:	88 14 0c             	mov    %dl,(%rsp,%rcx,1)
   34d03:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
   34d07:	eb 1f                	jmp    34d28 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt+0xf8>
   34d09:	4c 89 da             	mov    %r11,%rdx
   34d0c:	48 83 fa 63          	cmp    $0x63,%rdx
   34d10:	77 b7                	ja     34cc9 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt+0x99>
   34d12:	eb e3                	jmp    34cf7 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt+0xc7>
   34d14:	48 8d 05 64 52 00 00 	lea    0x5264(%rip),%rax        # 39f7f <str.1+0x13f>
   34d1b:	0f b7 04 50          	movzwl (%rax,%rdx,2),%eax
   34d1f:	66 89 44 0c ff       	mov    %ax,-0x1(%rsp,%rcx,1)
   34d24:	48 83 c1 fe          	add    $0xfffffffffffffffe,%rcx
   34d28:	4c 8d 04 0c          	lea    (%rsp,%rcx,1),%r8
   34d2c:	49 83 c0 01          	add    $0x1,%r8
   34d30:	41 b9 27 00 00 00    	mov    $0x27,%r9d
   34d36:	49 29 c9             	sub    %rcx,%r9
   34d39:	48 8d 15 f0 50 00 00 	lea    0x50f0(%rip),%rdx        # 39e30 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x2e0>
   34d40:	4c 89 d7             	mov    %r10,%rdi
   34d43:	be 01 00 00 00       	mov    $0x1,%esi
   34d48:	31 c9                	xor    %ecx,%ecx
   34d4a:	ff 15 78 0c 01 00    	callq  *0x10c78(%rip)        # 459c8 <_GLOBAL_OFFSET_TABLE_+0x40>
   34d50:	48 83 c4 28          	add    $0x28,%rsp
   34d54:	c3                   	retq   
   34d55:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   34d5c:	00 00 00 
   34d5f:	90                   	nop

0000000000034d60 <core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt>:
   34d60:	48 83 ec 28          	sub    $0x28,%rsp
   34d64:	49 89 f2             	mov    %rsi,%r10
   34d67:	4c 8b 1f             	mov    (%rdi),%r11
   34d6a:	b9 27 00 00 00       	mov    $0x27,%ecx
   34d6f:	49 81 fb 10 27 00 00 	cmp    $0x2710,%r11
   34d76:	0f 82 bd 00 00 00    	jb     34e39 <core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt+0xd9>
   34d7c:	bf 27 00 00 00       	mov    $0x27,%edi
   34d81:	49 b8 4b 59 86 38 d6 	movabs $0x346dc5d63886594b,%r8
   34d88:	c5 6d 34 
   34d8b:	4c 8d 0d ed 51 00 00 	lea    0x51ed(%rip),%r9        # 39f7f <str.1+0x13f>
   34d92:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   34d99:	00 00 00 
   34d9c:	0f 1f 40 00          	nopl   0x0(%rax)
   34da0:	4c 89 d8             	mov    %r11,%rax
   34da3:	49 f7 e0             	mul    %r8
   34da6:	48 c1 ea 0b          	shr    $0xb,%rdx
   34daa:	69 c2 10 27 00 00    	imul   $0x2710,%edx,%eax
   34db0:	44 89 d9             	mov    %r11d,%ecx
   34db3:	29 c1                	sub    %eax,%ecx
   34db5:	0f b7 c1             	movzwl %cx,%eax
   34db8:	c1 e8 02             	shr    $0x2,%eax
   34dbb:	69 c0 7b 14 00 00    	imul   $0x147b,%eax,%eax
   34dc1:	c1 e8 11             	shr    $0x11,%eax
   34dc4:	6b f0 64             	imul   $0x64,%eax,%esi
   34dc7:	29 f1                	sub    %esi,%ecx
   34dc9:	0f b7 f1             	movzwl %cx,%esi
   34dcc:	48 8d 4f fc          	lea    -0x4(%rdi),%rcx
   34dd0:	41 0f b7 04 41       	movzwl (%r9,%rax,2),%eax
   34dd5:	66 89 44 3c fd       	mov    %ax,-0x3(%rsp,%rdi,1)
   34dda:	41 0f b7 04 71       	movzwl (%r9,%rsi,2),%eax
   34ddf:	66 89 44 3c ff       	mov    %ax,-0x1(%rsp,%rdi,1)
   34de4:	48 89 cf             	mov    %rcx,%rdi
   34de7:	49 81 fb ff e0 f5 05 	cmp    $0x5f5e0ff,%r11
   34dee:	49 89 d3             	mov    %rdx,%r11
   34df1:	77 ad                	ja     34da0 <core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt+0x40>
   34df3:	48 83 fa 63          	cmp    $0x63,%rdx
   34df7:	7e 2e                	jle    34e27 <core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt+0xc7>
   34df9:	0f b7 c2             	movzwl %dx,%eax
   34dfc:	c1 e8 02             	shr    $0x2,%eax
   34dff:	69 c0 7b 14 00 00    	imul   $0x147b,%eax,%eax
   34e05:	c1 e8 11             	shr    $0x11,%eax
   34e08:	6b f0 64             	imul   $0x64,%eax,%esi
   34e0b:	29 f2                	sub    %esi,%edx
   34e0d:	0f b7 d2             	movzwl %dx,%edx
   34e10:	48 8d 35 68 51 00 00 	lea    0x5168(%rip),%rsi        # 39f7f <str.1+0x13f>
   34e17:	0f b7 14 56          	movzwl (%rsi,%rdx,2),%edx
   34e1b:	66 89 54 0c ff       	mov    %dx,-0x1(%rsp,%rcx,1)
   34e20:	48 83 c1 fe          	add    $0xfffffffffffffffe,%rcx
   34e24:	48 89 c2             	mov    %rax,%rdx
   34e27:	48 83 fa 0a          	cmp    $0xa,%rdx
   34e2b:	7d 17                	jge    34e44 <core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt+0xe4>
   34e2d:	80 c2 30             	add    $0x30,%dl
   34e30:	88 14 0c             	mov    %dl,(%rsp,%rcx,1)
   34e33:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
   34e37:	eb 1f                	jmp    34e58 <core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt+0xf8>
   34e39:	4c 89 da             	mov    %r11,%rdx
   34e3c:	48 83 fa 63          	cmp    $0x63,%rdx
   34e40:	7f b7                	jg     34df9 <core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt+0x99>
   34e42:	eb e3                	jmp    34e27 <core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt+0xc7>
   34e44:	48 8d 05 34 51 00 00 	lea    0x5134(%rip),%rax        # 39f7f <str.1+0x13f>
   34e4b:	0f b7 04 50          	movzwl (%rax,%rdx,2),%eax
   34e4f:	66 89 44 0c ff       	mov    %ax,-0x1(%rsp,%rcx,1)
   34e54:	48 83 c1 fe          	add    $0xfffffffffffffffe,%rcx
   34e58:	4c 8d 04 0c          	lea    (%rsp,%rcx,1),%r8
   34e5c:	49 83 c0 01          	add    $0x1,%r8
   34e60:	41 b9 27 00 00 00    	mov    $0x27,%r9d
   34e66:	49 29 c9             	sub    %rcx,%r9
   34e69:	48 8d 15 c0 4f 00 00 	lea    0x4fc0(%rip),%rdx        # 39e30 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x2e0>
   34e70:	4c 89 d7             	mov    %r10,%rdi
   34e73:	be 01 00 00 00       	mov    $0x1,%esi
   34e78:	31 c9                	xor    %ecx,%ecx
   34e7a:	ff 15 48 0b 01 00    	callq  *0x10b48(%rip)        # 459c8 <_GLOBAL_OFFSET_TABLE_+0x40>
   34e80:	48 83 c4 28          	add    $0x28,%rsp
   34e84:	c3                   	retq   
   34e85:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   34e8c:	00 00 00 
   34e8f:	90                   	nop

0000000000034e90 <<&T as core::fmt::Debug>::fmt>:
   34e90:	48 8b 3f             	mov    (%rdi),%rdi
   34e93:	e9 b8 f9 ff ff       	jmpq   34850 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt>
   34e98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   34e9f:	00 

0000000000034ea0 <<&T as core::fmt::Debug>::fmt>:
   34ea0:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   34ea7:	48 8b 07             	mov    (%rdi),%rax
   34eaa:	8b 4e 30             	mov    0x30(%rsi),%ecx
   34ead:	f6 c1 10             	test   $0x10,%cl
   34eb0:	75 40                	jne    34ef2 <<&T as core::fmt::Debug>::fmt+0x52>
   34eb2:	8a 00                	mov    (%rax),%al
   34eb4:	f6 c1 20             	test   $0x20,%cl
   34eb7:	75 74                	jne    34f2d <<&T as core::fmt::Debug>::fmt+0x8d>
   34eb9:	0f b6 d0             	movzbl %al,%edx
   34ebc:	80 fa 64             	cmp    $0x64,%dl
   34ebf:	0f 82 d9 00 00 00    	jb     34f9e <<&T as core::fmt::Debug>::fmt+0xfe>
   34ec5:	8d 0c 92             	lea    (%rdx,%rdx,4),%ecx
   34ec8:	8d 14 ca             	lea    (%rdx,%rcx,8),%edx
   34ecb:	c1 ea 0c             	shr    $0xc,%edx
   34ece:	6b ca 64             	imul   $0x64,%edx,%ecx
   34ed1:	28 c8                	sub    %cl,%al
   34ed3:	0f b6 c0             	movzbl %al,%eax
   34ed6:	48 8d 0d a2 50 00 00 	lea    0x50a2(%rip),%rcx        # 39f7f <str.1+0x13f>
   34edd:	0f b7 04 41          	movzwl (%rcx,%rax,2),%eax
   34ee1:	66 89 44 24 2d       	mov    %ax,0x2d(%rsp)
   34ee6:	b9 24 00 00 00       	mov    $0x24,%ecx
   34eeb:	89 d0                	mov    %edx,%eax
   34eed:	e9 b5 00 00 00       	jmpq   34fa7 <<&T as core::fmt::Debug>::fmt+0x107>
   34ef2:	8a 00                	mov    (%rax),%al
   34ef4:	4c 8d 84 24 88 00 00 	lea    0x88(%rsp),%r8
   34efb:	00 
   34efc:	45 31 c9             	xor    %r9d,%r9d
   34eff:	90                   	nop
   34f00:	89 c1                	mov    %eax,%ecx
   34f02:	80 e1 0f             	and    $0xf,%cl
   34f05:	c0 e8 04             	shr    $0x4,%al
   34f08:	8d 51 30             	lea    0x30(%rcx),%edx
   34f0b:	8d 79 57             	lea    0x57(%rcx),%edi
   34f0e:	80 f9 0a             	cmp    $0xa,%cl
   34f11:	0f b6 ca             	movzbl %dl,%ecx
   34f14:	40 0f b6 d7          	movzbl %dil,%edx
   34f18:	0f 42 d1             	cmovb  %ecx,%edx
   34f1b:	41 88 50 ff          	mov    %dl,-0x1(%r8)
   34f1f:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   34f23:	49 83 c1 01          	add    $0x1,%r9
   34f27:	84 c0                	test   %al,%al
   34f29:	75 d5                	jne    34f00 <<&T as core::fmt::Debug>::fmt+0x60>
   34f2b:	eb 3e                	jmp    34f6b <<&T as core::fmt::Debug>::fmt+0xcb>
   34f2d:	4c 8d 84 24 88 00 00 	lea    0x88(%rsp),%r8
   34f34:	00 
   34f35:	45 31 c9             	xor    %r9d,%r9d
   34f38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   34f3f:	00 
   34f40:	89 c1                	mov    %eax,%ecx
   34f42:	80 e1 0f             	and    $0xf,%cl
   34f45:	c0 e8 04             	shr    $0x4,%al
   34f48:	8d 51 30             	lea    0x30(%rcx),%edx
   34f4b:	8d 79 37             	lea    0x37(%rcx),%edi
   34f4e:	80 f9 0a             	cmp    $0xa,%cl
   34f51:	0f b6 ca             	movzbl %dl,%ecx
   34f54:	40 0f b6 d7          	movzbl %dil,%edx
   34f58:	0f 42 d1             	cmovb  %ecx,%edx
   34f5b:	41 88 50 ff          	mov    %dl,-0x1(%r8)
   34f5f:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   34f63:	49 83 c1 01          	add    $0x1,%r9
   34f67:	84 c0                	test   %al,%al
   34f69:	75 d5                	jne    34f40 <<&T as core::fmt::Debug>::fmt+0xa0>
   34f6b:	bf 80 00 00 00       	mov    $0x80,%edi
   34f70:	4c 29 cf             	sub    %r9,%rdi
   34f73:	48 81 ff 81 00 00 00 	cmp    $0x81,%rdi
   34f7a:	73 78                	jae    34ff4 <<&T as core::fmt::Debug>::fmt+0x154>
   34f7c:	48 8d 15 fa 4f 00 00 	lea    0x4ffa(%rip),%rdx        # 39f7d <str.1+0x13d>
   34f83:	b9 02 00 00 00       	mov    $0x2,%ecx
   34f88:	48 89 f7             	mov    %rsi,%rdi
   34f8b:	be 01 00 00 00       	mov    $0x1,%esi
   34f90:	ff 15 32 0a 01 00    	callq  *0x10a32(%rip)        # 459c8 <_GLOBAL_OFFSET_TABLE_+0x40>
   34f96:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   34f9d:	c3                   	retq   
   34f9e:	b9 26 00 00 00       	mov    $0x26,%ecx
   34fa3:	3c 0a                	cmp    $0xa,%al
   34fa5:	73 08                	jae    34faf <<&T as core::fmt::Debug>::fmt+0x10f>
   34fa7:	04 30                	add    $0x30,%al
   34fa9:	88 44 0c 08          	mov    %al,0x8(%rsp,%rcx,1)
   34fad:	eb 15                	jmp    34fc4 <<&T as core::fmt::Debug>::fmt+0x124>
   34faf:	48 8d 05 c9 4f 00 00 	lea    0x4fc9(%rip),%rax        # 39f7f <str.1+0x13f>
   34fb6:	0f b7 04 50          	movzwl (%rax,%rdx,2),%eax
   34fba:	66 89 44 24 2d       	mov    %ax,0x2d(%rsp)
   34fbf:	b9 25 00 00 00       	mov    $0x25,%ecx
   34fc4:	4c 8d 04 0c          	lea    (%rsp,%rcx,1),%r8
   34fc8:	49 83 c0 08          	add    $0x8,%r8
   34fcc:	41 b9 27 00 00 00    	mov    $0x27,%r9d
   34fd2:	49 29 c9             	sub    %rcx,%r9
   34fd5:	48 8d 15 54 4e 00 00 	lea    0x4e54(%rip),%rdx        # 39e30 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x2e0>
   34fdc:	48 89 f7             	mov    %rsi,%rdi
   34fdf:	be 01 00 00 00       	mov    $0x1,%esi
   34fe4:	31 c9                	xor    %ecx,%ecx
   34fe6:	ff 15 dc 09 01 00    	callq  *0x109dc(%rip)        # 459c8 <_GLOBAL_OFFSET_TABLE_+0x40>
   34fec:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   34ff3:	c3                   	retq   
   34ff4:	48 8d 15 7d 02 01 00 	lea    0x1027d(%rip),%rdx        # 45278 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1d40>
   34ffb:	be 80 00 00 00       	mov    $0x80,%esi
   35000:	ff 15 ea 0d 01 00    	callq  *0x10dea(%rip)        # 45df0 <_GLOBAL_OFFSET_TABLE_+0x468>
   35006:	0f 0b                	ud2    
   35008:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   3500f:	00 

0000000000035010 <<&T as core::fmt::Debug>::fmt>:
   35010:	48 8b 07             	mov    (%rdi),%rax
   35013:	0f b6 00             	movzbl (%rax),%eax
   35016:	48 8d 0d fb 4d 00 00 	lea    0x4dfb(%rip),%rcx        # 39e18 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x2c8>
   3501d:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   35021:	48 01 c8             	add    %rcx,%rax
   35024:	ff e0                	jmpq   *%rax
   35026:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
   3502a:	48 8b 46 28          	mov    0x28(%rsi),%rax
   3502e:	48 8b 40 18          	mov    0x18(%rax),%rax
   35032:	48 8d 35 c3 58 00 00 	lea    0x58c3(%rip),%rsi        # 3a8fc <core::str::validations::UTF8_CHAR_WIDTH+0x7e7>
   35039:	ba 05 00 00 00       	mov    $0x5,%edx
   3503e:	ff e0                	jmpq   *%rax
   35040:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
   35044:	48 8b 46 28          	mov    0x28(%rsi),%rax
   35048:	48 8b 40 18          	mov    0x18(%rax),%rax
   3504c:	48 8d 35 c4 58 00 00 	lea    0x58c4(%rip),%rsi        # 3a917 <core::str::validations::UTF8_CHAR_WIDTH+0x802>
   35053:	ba 0c 00 00 00       	mov    $0xc,%edx
   35058:	ff e0                	jmpq   *%rax
   3505a:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
   3505e:	48 8b 46 28          	mov    0x28(%rsi),%rax
   35062:	48 8b 40 18          	mov    0x18(%rax),%rax
   35066:	48 8d 35 b3 4b 00 00 	lea    0x4bb3(%rip),%rsi        # 39c20 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0xd0>
   3506d:	ba 08 00 00 00       	mov    $0x8,%edx
   35072:	ff e0                	jmpq   *%rax
   35074:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
   35078:	48 8b 46 28          	mov    0x28(%rsi),%rax
   3507c:	48 8b 40 18          	mov    0x18(%rax),%rax
   35080:	48 8d 35 87 58 00 00 	lea    0x5887(%rip),%rsi        # 3a90e <core::str::validations::UTF8_CHAR_WIDTH+0x7f9>
   35087:	ba 09 00 00 00       	mov    $0x9,%edx
   3508c:	ff e0                	jmpq   *%rax
   3508e:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
   35092:	48 8b 46 28          	mov    0x28(%rsi),%rax
   35096:	48 8b 40 18          	mov    0x18(%rax),%rax
   3509a:	48 8d 35 df 4a 00 00 	lea    0x4adf(%rip),%rsi        # 39b80 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x30>
   350a1:	ba 04 00 00 00       	mov    $0x4,%edx
   350a6:	ff e0                	jmpq   *%rax
   350a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   350af:	00 

00000000000350b0 <<&T as core::fmt::Debug>::fmt>:
   350b0:	48 8b 07             	mov    (%rdi),%rax
   350b3:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
   350b7:	48 8b 49 18          	mov    0x18(%rcx),%rcx
   350bb:	48 89 c7             	mov    %rax,%rdi
   350be:	ff e1                	jmpq   *%rcx

00000000000350c0 <<&T as core::fmt::Debug>::fmt>:
   350c0:	41 56                	push   %r14
   350c2:	53                   	push   %rbx
   350c3:	48 83 ec 28          	sub    $0x28,%rsp
   350c7:	48 89 f3             	mov    %rsi,%rbx
   350ca:	4c 8b 37             	mov    (%rdi),%r14
   350cd:	41 80 3e 01          	cmpb   $0x1,(%r14)
   350d1:	0f 85 c1 00 00 00    	jne    35198 <<&T as core::fmt::Debug>::fmt+0xd8>
   350d7:	49 83 c6 01          	add    $0x1,%r14
   350db:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   350df:	48 8b 43 28          	mov    0x28(%rbx),%rax
   350e3:	48 8d 35 72 26 00 00 	lea    0x2672(%rip),%rsi        # 3775c <str.6+0x43c>
   350ea:	ba 04 00 00 00       	mov    $0x4,%edx
   350ef:	ff 50 18             	callq  *0x18(%rax)
   350f2:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   350f7:	88 44 24 18          	mov    %al,0x18(%rsp)
   350fb:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   35102:	00 00 
   35104:	c6 44 24 19 00       	movb   $0x0,0x19(%rsp)
   35109:	4c 89 74 24 20       	mov    %r14,0x20(%rsp)
   3510e:	48 8d 15 43 01 01 00 	lea    0x10143(%rip),%rdx        # 45258 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1d20>
   35115:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   3511a:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
   3511f:	ff 15 0b 0c 01 00    	callq  *0x10c0b(%rip)        # 45d30 <_GLOBAL_OFFSET_TABLE_+0x3a8>
   35125:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   3512a:	8a 44 24 18          	mov    0x18(%rsp),%al
   3512e:	48 85 c9             	test   %rcx,%rcx
   35131:	74 5d                	je     35190 <<&T as core::fmt::Debug>::fmt+0xd0>
   35133:	b3 01                	mov    $0x1,%bl
   35135:	84 c0                	test   %al,%al
   35137:	75 51                	jne    3518a <<&T as core::fmt::Debug>::fmt+0xca>
   35139:	48 83 f9 01          	cmp    $0x1,%rcx
   3513d:	75 2d                	jne    3516c <<&T as core::fmt::Debug>::fmt+0xac>
   3513f:	80 7c 24 19 00       	cmpb   $0x0,0x19(%rsp)
   35144:	74 26                	je     3516c <<&T as core::fmt::Debug>::fmt+0xac>
   35146:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   3514b:	f6 40 30 04          	testb  $0x4,0x30(%rax)
   3514f:	75 1b                	jne    3516c <<&T as core::fmt::Debug>::fmt+0xac>
   35151:	48 8b 78 20          	mov    0x20(%rax),%rdi
   35155:	48 8b 40 28          	mov    0x28(%rax),%rax
   35159:	48 8d 35 fd 4d 00 00 	lea    0x4dfd(%rip),%rsi        # 39f5d <str.1+0x11d>
   35160:	ba 01 00 00 00       	mov    $0x1,%edx
   35165:	ff 50 18             	callq  *0x18(%rax)
   35168:	84 c0                	test   %al,%al
   3516a:	75 1e                	jne    3518a <<&T as core::fmt::Debug>::fmt+0xca>
   3516c:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   35171:	48 8b 78 20          	mov    0x20(%rax),%rdi
   35175:	48 8b 40 28          	mov    0x28(%rax),%rax
   35179:	48 8d 35 de 4d 00 00 	lea    0x4dde(%rip),%rsi        # 39f5e <str.1+0x11e>
   35180:	ba 01 00 00 00       	mov    $0x1,%edx
   35185:	ff 50 18             	callq  *0x18(%rax)
   35188:	89 c3                	mov    %eax,%ebx
   3518a:	88 5c 24 18          	mov    %bl,0x18(%rsp)
   3518e:	89 d8                	mov    %ebx,%eax
   35190:	48 83 c4 28          	add    $0x28,%rsp
   35194:	5b                   	pop    %rbx
   35195:	41 5e                	pop    %r14
   35197:	c3                   	retq   
   35198:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   3519c:	48 8b 43 28          	mov    0x28(%rbx),%rax
   351a0:	48 8b 40 18          	mov    0x18(%rax),%rax
   351a4:	48 8d 35 b5 25 00 00 	lea    0x25b5(%rip),%rsi        # 37760 <str.6+0x440>
   351ab:	ba 04 00 00 00       	mov    $0x4,%edx
   351b0:	48 83 c4 28          	add    $0x28,%rsp
   351b4:	5b                   	pop    %rbx
   351b5:	41 5e                	pop    %r14
   351b7:	ff e0                	jmpq   *%rax
   351b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000351c0 <<&T as core::fmt::Display>::fmt>:
   351c0:	48 89 f0             	mov    %rsi,%rax
   351c3:	48 8b 37             	mov    (%rdi),%rsi
   351c6:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   351ca:	48 89 c7             	mov    %rax,%rdi
   351cd:	ff 25 35 0b 01 00    	jmpq   *0x10b35(%rip)        # 45d08 <_GLOBAL_OFFSET_TABLE_+0x380>
   351d3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   351da:	00 00 00 
   351dd:	0f 1f 00             	nopl   (%rax)

00000000000351e0 <<core::str::error::Utf8Error as core::fmt::Debug>::fmt>:
   351e0:	41 57                	push   %r15
   351e2:	41 56                	push   %r14
   351e4:	53                   	push   %rbx
   351e5:	48 83 ec 20          	sub    $0x20,%rsp
   351e9:	48 89 f3             	mov    %rsi,%rbx
   351ec:	49 89 fe             	mov    %rdi,%r14
   351ef:	4c 8d 7f 08          	lea    0x8(%rdi),%r15
   351f3:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
   351f7:	48 8b 46 28          	mov    0x28(%rsi),%rax
   351fb:	48 8d 35 21 57 00 00 	lea    0x5721(%rip),%rsi        # 3a923 <core::str::validations::UTF8_CHAR_WIDTH+0x80e>
   35202:	ba 09 00 00 00       	mov    $0x9,%edx
   35207:	ff 50 18             	callq  *0x18(%rax)
   3520a:	0f b6 c0             	movzbl %al,%eax
   3520d:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
   35212:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   35217:	4c 89 74 24 08       	mov    %r14,0x8(%rsp)
   3521c:	48 8d 35 09 57 00 00 	lea    0x5709(%rip),%rsi        # 3a92c <core::str::validations::UTF8_CHAR_WIDTH+0x817>
   35223:	4c 8d 05 ce 04 01 00 	lea    0x104ce(%rip),%r8        # 456f8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x21c0>
   3522a:	4c 8d 35 bf aa ff ff 	lea    -0x5541(%rip),%r14        # 2fcf0 <core::fmt::builders::DebugStruct::field>
   35231:	48 8d 5c 24 10       	lea    0x10(%rsp),%rbx
   35236:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
   3523b:	ba 0b 00 00 00       	mov    $0xb,%edx
   35240:	48 89 df             	mov    %rbx,%rdi
   35243:	41 ff d6             	callq  *%r14
   35246:	4c 89 7c 24 08       	mov    %r15,0x8(%rsp)
   3524b:	48 8d 35 e5 56 00 00 	lea    0x56e5(%rip),%rsi        # 3a937 <core::str::validations::UTF8_CHAR_WIDTH+0x822>
   35252:	4c 8d 05 df 04 01 00 	lea    0x104df(%rip),%r8        # 45738 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2200>
   35259:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
   3525e:	ba 09 00 00 00       	mov    $0x9,%edx
   35263:	48 89 df             	mov    %rbx,%rdi
   35266:	41 ff d6             	callq  *%r14
   35269:	80 7c 24 19 00       	cmpb   $0x0,0x19(%rsp)
   3526e:	8a 44 24 18          	mov    0x18(%rsp),%al
   35272:	74 3d                	je     352b1 <<core::str::error::Utf8Error as core::fmt::Debug>::fmt+0xd1>
   35274:	84 c0                	test   %al,%al
   35276:	b0 01                	mov    $0x1,%al
   35278:	75 33                	jne    352ad <<core::str::error::Utf8Error as core::fmt::Debug>::fmt+0xcd>
   3527a:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   3527f:	f6 40 30 04          	testb  $0x4,0x30(%rax)
   35283:	48 8b 78 20          	mov    0x20(%rax),%rdi
   35287:	48 8b 40 28          	mov    0x28(%rax),%rax
   3528b:	48 8b 40 18          	mov    0x18(%rax),%rax
   3528f:	75 0e                	jne    3529f <<core::str::error::Utf8Error as core::fmt::Debug>::fmt+0xbf>
   35291:	48 8d 35 c0 4c 00 00 	lea    0x4cc0(%rip),%rsi        # 39f58 <str.1+0x118>
   35298:	ba 02 00 00 00       	mov    $0x2,%edx
   3529d:	eb 0c                	jmp    352ab <<core::str::error::Utf8Error as core::fmt::Debug>::fmt+0xcb>
   3529f:	48 8d 35 b1 4c 00 00 	lea    0x4cb1(%rip),%rsi        # 39f57 <str.1+0x117>
   352a6:	ba 01 00 00 00       	mov    $0x1,%edx
   352ab:	ff d0                	callq  *%rax
   352ad:	88 44 24 18          	mov    %al,0x18(%rsp)
   352b1:	48 83 c4 20          	add    $0x20,%rsp
   352b5:	5b                   	pop    %rbx
   352b6:	41 5e                	pop    %r14
   352b8:	41 5f                	pop    %r15
   352ba:	c3                   	retq   
   352bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000352c0 <core::unicode::unicode_data::cc::lookup>:
   352c0:	83 ff 20             	cmp    $0x20,%edi
   352c3:	73 03                	jae    352c8 <core::unicode::unicode_data::cc::lookup+0x8>
   352c5:	b0 01                	mov    $0x1,%al
   352c7:	c3                   	retq   
   352c8:	83 c7 81             	add    $0xffffff81,%edi
   352cb:	83 ff 21             	cmp    $0x21,%edi
   352ce:	0f 92 c0             	setb   %al
   352d1:	c3                   	retq   
   352d2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   352d9:	00 00 00 
   352dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000352e0 <core::unicode::unicode_data::grapheme_extend::lookup>:
   352e0:	50                   	push   %rax
   352e1:	89 f9                	mov    %edi,%ecx
   352e3:	c1 e1 0b             	shl    $0xb,%ecx
   352e6:	31 c0                	xor    %eax,%eax
   352e8:	81 ff 24 0d 01 00    	cmp    $0x10d24,%edi
   352ee:	ba 0f 00 00 00       	mov    $0xf,%edx
   352f3:	48 0f 42 d0          	cmovb  %rax,%rdx
   352f7:	48 8d 42 08          	lea    0x8(%rdx),%rax
   352fb:	4c 8d 05 3e 56 00 00 	lea    0x563e(%rip),%r8        # 3a940 <core::unicode::unicode_data::grapheme_extend::SHORT_OFFSET_RUNS>
   35302:	41 8b 74 90 20       	mov    0x20(%r8,%rdx,4),%esi
   35307:	c1 e6 0b             	shl    $0xb,%esi
   3530a:	39 ce                	cmp    %ecx,%esi
   3530c:	48 0f 47 c2          	cmova  %rdx,%rax
   35310:	48 8d 50 04          	lea    0x4(%rax),%rdx
   35314:	41 8b 74 80 10       	mov    0x10(%r8,%rax,4),%esi
   35319:	c1 e6 0b             	shl    $0xb,%esi
   3531c:	39 ce                	cmp    %ecx,%esi
   3531e:	48 0f 47 d0          	cmova  %rax,%rdx
   35322:	48 8d 42 02          	lea    0x2(%rdx),%rax
   35326:	41 8b 74 90 08       	mov    0x8(%r8,%rdx,4),%esi
   3532b:	c1 e6 0b             	shl    $0xb,%esi
   3532e:	39 ce                	cmp    %ecx,%esi
   35330:	48 0f 47 c2          	cmova  %rdx,%rax
   35334:	48 8d 50 01          	lea    0x1(%rax),%rdx
   35338:	41 8b 74 80 04       	mov    0x4(%r8,%rax,4),%esi
   3533d:	c1 e6 0b             	shl    $0xb,%esi
   35340:	39 ce                	cmp    %ecx,%esi
   35342:	48 0f 47 d0          	cmova  %rax,%rdx
   35346:	41 8b 34 90          	mov    (%r8,%rdx,4),%esi
   3534a:	c1 e6 0b             	shl    $0xb,%esi
   3534d:	31 c0                	xor    %eax,%eax
   3534f:	39 ce                	cmp    %ecx,%esi
   35351:	0f 94 c0             	sete   %al
   35354:	48 83 d0 00          	adc    $0x0,%rax
   35358:	48 01 d0             	add    %rdx,%rax
   3535b:	48 83 f8 1e          	cmp    $0x1e,%rax
   3535f:	0f 87 a2 00 00 00    	ja     35407 <core::unicode::unicode_data::grapheme_extend::lookup+0x127>
   35365:	41 b9 b1 02 00 00    	mov    $0x2b1,%r9d
   3536b:	48 83 f8 1e          	cmp    $0x1e,%rax
   3536f:	74 09                	je     3537a <core::unicode::unicode_data::grapheme_extend::lookup+0x9a>
   35371:	45 8b 4c 80 04       	mov    0x4(%r8,%rax,4),%r9d
   35376:	49 c1 e9 15          	shr    $0x15,%r9
   3537a:	31 d2                	xor    %edx,%edx
   3537c:	48 89 c1             	mov    %rax,%rcx
   3537f:	48 83 e9 01          	sub    $0x1,%rcx
   35383:	72 13                	jb     35398 <core::unicode::unicode_data::grapheme_extend::lookup+0xb8>
   35385:	48 83 f9 1f          	cmp    $0x1f,%rcx
   35389:	0f 83 8f 00 00 00    	jae    3541e <core::unicode::unicode_data::grapheme_extend::lookup+0x13e>
   3538f:	ba ff ff 1f 00       	mov    $0x1fffff,%edx
   35394:	41 23 14 88          	and    (%r8,%rcx,4),%edx
   35398:	41 8b 04 80          	mov    (%r8,%rax,4),%eax
   3539c:	48 c1 e8 15          	shr    $0x15,%rax
   353a0:	48 8d 48 01          	lea    0x1(%rax),%rcx
   353a4:	49 39 c9             	cmp    %rcx,%r9
   353a7:	74 43                	je     353ec <core::unicode::unicode_data::grapheme_extend::lookup+0x10c>
   353a9:	29 d7                	sub    %edx,%edi
   353ab:	48 3d b1 02 00 00    	cmp    $0x2b1,%rax
   353b1:	b9 b1 02 00 00       	mov    $0x2b1,%ecx
   353b6:	48 0f 47 c8          	cmova  %rax,%rcx
   353ba:	49 83 c1 ff          	add    $0xffffffffffffffff,%r9
   353be:	31 d2                	xor    %edx,%edx
   353c0:	4c 8d 05 f5 55 00 00 	lea    0x55f5(%rip),%r8        # 3a9bc <core::unicode::unicode_data::grapheme_extend::OFFSETS>
   353c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   353ce:	00 00 
   353d0:	48 39 c1             	cmp    %rax,%rcx
   353d3:	74 1b                	je     353f0 <core::unicode::unicode_data::grapheme_extend::lookup+0x110>
   353d5:	42 0f b6 34 00       	movzbl (%rax,%r8,1),%esi
   353da:	01 f2                	add    %esi,%edx
   353dc:	39 fa                	cmp    %edi,%edx
   353de:	77 0c                	ja     353ec <core::unicode::unicode_data::grapheme_extend::lookup+0x10c>
   353e0:	48 83 c0 01          	add    $0x1,%rax
   353e4:	49 39 c1             	cmp    %rax,%r9
   353e7:	75 e7                	jne    353d0 <core::unicode::unicode_data::grapheme_extend::lookup+0xf0>
   353e9:	4c 89 c8             	mov    %r9,%rax
   353ec:	24 01                	and    $0x1,%al
   353ee:	59                   	pop    %rcx
   353ef:	c3                   	retq   
   353f0:	48 8d 15 d1 02 01 00 	lea    0x102d1(%rip),%rdx        # 456c8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2190>
   353f7:	be b1 02 00 00       	mov    $0x2b1,%esi
   353fc:	48 89 cf             	mov    %rcx,%rdi
   353ff:	ff 15 8b 08 01 00    	callq  *0x1088b(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   35405:	0f 0b                	ud2    
   35407:	48 8d 15 a2 02 01 00 	lea    0x102a2(%rip),%rdx        # 456b0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2178>
   3540e:	be 1f 00 00 00       	mov    $0x1f,%esi
   35413:	48 89 c7             	mov    %rax,%rdi
   35416:	ff 15 74 08 01 00    	callq  *0x10874(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   3541c:	0f 0b                	ud2    
   3541e:	48 8d 15 bb 02 01 00 	lea    0x102bb(%rip),%rdx        # 456e0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x21a8>
   35425:	be 1f 00 00 00       	mov    $0x1f,%esi
   3542a:	48 89 cf             	mov    %rcx,%rdi
   3542d:	ff 15 5d 08 01 00    	callq  *0x1085d(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x308>
   35433:	0f 0b                	ud2    
   35435:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3543c:	00 00 00 
   3543f:	90                   	nop

0000000000035440 <__udivti3>:
   35440:	45 31 c0             	xor    %r8d,%r8d
   35443:	e9 c8 00 00 00       	jmpq   35510 <compiler_builtins::int::udiv::__udivmodti4>
   35448:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   3544f:	00 

0000000000035450 <__divti3>:
   35450:	53                   	push   %rbx
   35451:	48 89 cb             	mov    %rcx,%rbx
   35454:	48 c1 fb 3f          	sar    $0x3f,%rbx
   35458:	48 31 d9             	xor    %rbx,%rcx
   3545b:	48 31 da             	xor    %rbx,%rdx
   3545e:	48 29 da             	sub    %rbx,%rdx
   35461:	48 19 d9             	sbb    %rbx,%rcx
   35464:	48 89 d0             	mov    %rdx,%rax
   35467:	48 09 c8             	or     %rcx,%rax
   3546a:	74 2a                	je     35496 <__divti3+0x46>
   3546c:	48 89 f0             	mov    %rsi,%rax
   3546f:	48 c1 f8 3f          	sar    $0x3f,%rax
   35473:	48 31 c3             	xor    %rax,%rbx
   35476:	48 31 c6             	xor    %rax,%rsi
   35479:	48 31 c7             	xor    %rax,%rdi
   3547c:	48 29 c7             	sub    %rax,%rdi
   3547f:	48 19 c6             	sbb    %rax,%rsi
   35482:	ff 15 10 0b 01 00    	callq  *0x10b10(%rip)        # 45f98 <_GLOBAL_OFFSET_TABLE_+0x610>
   35488:	48 31 da             	xor    %rbx,%rdx
   3548b:	48 31 d8             	xor    %rbx,%rax
   3548e:	48 29 d8             	sub    %rbx,%rax
   35491:	48 19 da             	sbb    %rbx,%rdx
   35494:	5b                   	pop    %rbx
   35495:	c3                   	retq   
   35496:	0f 0b                	ud2    
   35498:	0f 0b                	ud2    

000000000003549a <__rust_probestack>:
   3549a:	55                   	push   %rbp
   3549b:	48 89 e5             	mov    %rsp,%rbp
   3549e:	49 89 c3             	mov    %rax,%r11
   354a1:	49 81 fb 00 10 00 00 	cmp    $0x1000,%r11
   354a8:	76 1c                	jbe    354c6 <__rust_probestack+0x2c>
   354aa:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
   354b1:	48 85 64 24 08       	test   %rsp,0x8(%rsp)
   354b6:	49 81 eb 00 10 00 00 	sub    $0x1000,%r11
   354bd:	49 81 fb 00 10 00 00 	cmp    $0x1000,%r11
   354c4:	77 e4                	ja     354aa <__rust_probestack+0x10>
   354c6:	4c 29 dc             	sub    %r11,%rsp
   354c9:	48 85 64 24 08       	test   %rsp,0x8(%rsp)
   354ce:	48 01 c4             	add    %rax,%rsp
   354d1:	c9                   	leaveq 
   354d2:	c3                   	retq   
   354d3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   354da:	00 00 00 
   354dd:	0f 1f 00             	nopl   (%rax)

00000000000354e0 <__umodti3>:
   354e0:	48 83 ec 18          	sub    $0x18,%rsp
   354e4:	0f 57 c0             	xorps  %xmm0,%xmm0
   354e7:	0f 11 44 24 08       	movups %xmm0,0x8(%rsp)
   354ec:	4c 8d 44 24 08       	lea    0x8(%rsp),%r8
   354f1:	e8 1a 00 00 00       	callq  35510 <compiler_builtins::int::udiv::__udivmodti4>
   354f6:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   354fb:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   35500:	48 83 c4 18          	add    $0x18,%rsp
   35504:	c3                   	retq   
   35505:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3550c:	00 00 00 
   3550f:	90                   	nop

0000000000035510 <compiler_builtins::int::udiv::__udivmodti4>:
   35510:	41 57                	push   %r15
   35512:	41 56                	push   %r14
   35514:	41 54                	push   %r12
   35516:	53                   	push   %rbx
   35517:	49 89 ca             	mov    %rcx,%r10
   3551a:	49 89 d1             	mov    %rdx,%r9
   3551d:	49 89 f3             	mov    %rsi,%r11
   35520:	49 89 ff             	mov    %rdi,%r15
   35523:	48 85 f6             	test   %rsi,%rsi
   35526:	74 2f                	je     35557 <compiler_builtins::int::udiv::__udivmodti4+0x47>
   35528:	4d 85 c9             	test   %r9,%r9
   3552b:	74 62                	je     3558f <compiler_builtins::int::udiv::__udivmodti4+0x7f>
   3552d:	4d 85 d2             	test   %r10,%r10
   35530:	0f 84 a1 00 00 00    	je     355d7 <compiler_builtins::int::udiv::__udivmodti4+0xc7>
   35536:	4d 0f bd f2          	bsr    %r10,%r14
   3553a:	41 83 f6 3f          	xor    $0x3f,%r14d
   3553e:	49 0f bd c3          	bsr    %r11,%rax
   35542:	83 f0 3f             	xor    $0x3f,%eax
   35545:	41 29 c6             	sub    %eax,%r14d
   35548:	41 83 fe 3f          	cmp    $0x3f,%r14d
   3554c:	0f 87 31 01 00 00    	ja     35683 <compiler_builtins::int::udiv::__udivmodti4+0x173>
   35552:	e9 40 01 00 00       	jmpq   35697 <compiler_builtins::int::udiv::__udivmodti4+0x187>
   35557:	4d 85 d2             	test   %r10,%r10
   3555a:	0f 85 23 01 00 00    	jne    35683 <compiler_builtins::int::udiv::__udivmodti4+0x173>
   35560:	4d 85 c0             	test   %r8,%r8
   35563:	0f 84 83 02 00 00    	je     357ec <compiler_builtins::int::udiv::__udivmodti4+0x2dc>
   35569:	4d 85 c9             	test   %r9,%r9
   3556c:	0f 84 0d 03 00 00    	je     3587f <compiler_builtins::int::udiv::__udivmodti4+0x36f>
   35572:	4c 89 f8             	mov    %r15,%rax
   35575:	4c 09 c8             	or     %r9,%rax
   35578:	48 c1 e8 20          	shr    $0x20,%rax
   3557c:	0f 84 8c 02 00 00    	je     3580e <compiler_builtins::int::udiv::__udivmodti4+0x2fe>
   35582:	4c 89 f8             	mov    %r15,%rax
   35585:	31 d2                	xor    %edx,%edx
   35587:	49 f7 f1             	div    %r9
   3558a:	e9 87 02 00 00       	jmpq   35816 <compiler_builtins::int::udiv::__udivmodti4+0x306>
   3558f:	4d 85 d2             	test   %r10,%r10
   35592:	0f 84 e7 02 00 00    	je     3587f <compiler_builtins::int::udiv::__udivmodti4+0x36f>
   35598:	4d 85 ff             	test   %r15,%r15
   3559b:	0f 84 84 00 00 00    	je     35625 <compiler_builtins::int::udiv::__udivmodti4+0x115>
   355a1:	49 8d 42 ff          	lea    -0x1(%r10),%rax
   355a5:	49 85 c2             	test   %rax,%r10
   355a8:	0f 94 c1             	sete   %cl
   355ab:	4d 85 d2             	test   %r10,%r10
   355ae:	0f 95 c2             	setne  %dl
   355b1:	84 ca                	test   %cl,%dl
   355b3:	0f 84 b2 00 00 00    	je     3566b <compiler_builtins::int::udiv::__udivmodti4+0x15b>
   355b9:	4d 85 c0             	test   %r8,%r8
   355bc:	74 0a                	je     355c8 <compiler_builtins::int::udiv::__udivmodti4+0xb8>
   355be:	4c 21 d8             	and    %r11,%rax
   355c1:	4d 89 38             	mov    %r15,(%r8)
   355c4:	49 89 40 08          	mov    %rax,0x8(%r8)
   355c8:	49 0f bc ca          	bsf    %r10,%rcx
   355cc:	49 d3 eb             	shr    %cl,%r11
   355cf:	4d 89 df             	mov    %r11,%r15
   355d2:	e9 97 02 00 00       	jmpq   3586e <compiler_builtins::int::udiv::__udivmodti4+0x35e>
   355d7:	49 8d 41 ff          	lea    -0x1(%r9),%rax
   355db:	49 85 c1             	test   %rax,%r9
   355de:	0f 94 c1             	sete   %cl
   355e1:	4d 85 c9             	test   %r9,%r9
   355e4:	0f 95 c2             	setne  %dl
   355e7:	84 ca                	test   %cl,%dl
   355e9:	74 60                	je     3564b <compiler_builtins::int::udiv::__udivmodti4+0x13b>
   355eb:	4d 85 c0             	test   %r8,%r8
   355ee:	74 0e                	je     355fe <compiler_builtins::int::udiv::__udivmodti4+0xee>
   355f0:	4c 21 f8             	and    %r15,%rax
   355f3:	49 89 00             	mov    %rax,(%r8)
   355f6:	49 c7 40 08 00 00 00 	movq   $0x0,0x8(%r8)
   355fd:	00 
   355fe:	49 83 f9 01          	cmp    $0x1,%r9
   35602:	0f 84 69 02 00 00    	je     35871 <compiler_builtins::int::udiv::__udivmodti4+0x361>
   35608:	49 0f bc c9          	bsf    %r9,%rcx
   3560c:	4d 0f ad df          	shrd   %cl,%r11,%r15
   35610:	49 d3 eb             	shr    %cl,%r11
   35613:	31 c0                	xor    %eax,%eax
   35615:	f6 c1 40             	test   $0x40,%cl
   35618:	4d 0f 45 fb          	cmovne %r11,%r15
   3561c:	4c 0f 45 d8          	cmovne %rax,%r11
   35620:	e9 4c 02 00 00       	jmpq   35871 <compiler_builtins::int::udiv::__udivmodti4+0x361>
   35625:	4d 85 c0             	test   %r8,%r8
   35628:	0f 84 1c 02 00 00    	je     3584a <compiler_builtins::int::udiv::__udivmodti4+0x33a>
   3562e:	4c 89 d8             	mov    %r11,%rax
   35631:	4c 09 d0             	or     %r10,%rax
   35634:	48 c1 e8 20          	shr    $0x20,%rax
   35638:	0f 84 f9 01 00 00    	je     35837 <compiler_builtins::int::udiv::__udivmodti4+0x327>
   3563e:	4c 89 d8             	mov    %r11,%rax
   35641:	31 d2                	xor    %edx,%edx
   35643:	49 f7 f2             	div    %r10
   35646:	e9 f4 01 00 00       	jmpq   3583f <compiler_builtins::int::udiv::__udivmodti4+0x32f>
   3564b:	4d 0f bd f1          	bsr    %r9,%r14
   3564f:	41 83 f6 3f          	xor    $0x3f,%r14d
   35653:	49 0f bd c3          	bsr    %r11,%rax
   35657:	83 f0 3f             	xor    $0x3f,%eax
   3565a:	41 29 c6             	sub    %eax,%r14d
   3565d:	ba bf ff ff ff       	mov    $0xffffffbf,%edx
   35662:	44 29 f2             	sub    %r14d,%edx
   35665:	41 83 c6 41          	add    $0x41,%r14d
   35669:	eb 38                	jmp    356a3 <compiler_builtins::int::udiv::__udivmodti4+0x193>
   3566b:	4d 0f bd f2          	bsr    %r10,%r14
   3566f:	41 83 f6 3f          	xor    $0x3f,%r14d
   35673:	49 0f bd c3          	bsr    %r11,%rax
   35677:	83 f0 3f             	xor    $0x3f,%eax
   3567a:	41 29 c6             	sub    %eax,%r14d
   3567d:	41 83 fe 3e          	cmp    $0x3e,%r14d
   35681:	76 14                	jbe    35697 <compiler_builtins::int::udiv::__udivmodti4+0x187>
   35683:	4d 85 c0             	test   %r8,%r8
   35686:	74 07                	je     3568f <compiler_builtins::int::udiv::__udivmodti4+0x17f>
   35688:	4d 89 38             	mov    %r15,(%r8)
   3568b:	4d 89 58 08          	mov    %r11,0x8(%r8)
   3568f:	45 31 ff             	xor    %r15d,%r15d
   35692:	e9 d7 01 00 00       	jmpq   3586e <compiler_builtins::int::udiv::__udivmodti4+0x35e>
   35697:	ba 7f 00 00 00       	mov    $0x7f,%edx
   3569c:	44 29 f2             	sub    %r14d,%edx
   3569f:	41 83 c6 01          	add    $0x1,%r14d
   356a3:	4c 89 fe             	mov    %r15,%rsi
   356a6:	44 89 f1             	mov    %r14d,%ecx
   356a9:	4c 0f ad de          	shrd   %cl,%r11,%rsi
   356ad:	4c 89 d8             	mov    %r11,%rax
   356b0:	48 d3 e8             	shr    %cl,%rax
   356b3:	45 31 e4             	xor    %r12d,%r12d
   356b6:	41 f6 c6 40          	test   $0x40,%r14b
   356ba:	48 0f 45 f0          	cmovne %rax,%rsi
   356be:	49 0f 45 c4          	cmovne %r12,%rax
   356c2:	89 d1                	mov    %edx,%ecx
   356c4:	4d 0f a5 fb          	shld   %cl,%r15,%r11
   356c8:	49 d3 e7             	shl    %cl,%r15
   356cb:	f6 c2 40             	test   $0x40,%dl
   356ce:	4d 0f 45 df          	cmovne %r15,%r11
   356d2:	4d 0f 45 fc          	cmovne %r12,%r15
   356d6:	45 85 f6             	test   %r14d,%r14d
   356d9:	0f 84 f1 00 00 00    	je     357d0 <compiler_builtins::int::udiv::__udivmodti4+0x2c0>
   356df:	41 83 fe 01          	cmp    $0x1,%r14d
   356e3:	75 08                	jne    356ed <compiler_builtins::int::udiv::__udivmodti4+0x1dd>
   356e5:	45 31 e4             	xor    %r12d,%r12d
   356e8:	e9 a2 00 00 00       	jmpq   3578f <compiler_builtins::int::udiv::__udivmodti4+0x27f>
   356ed:	44 89 f1             	mov    %r14d,%ecx
   356f0:	83 e1 fe             	and    $0xfffffffe,%ecx
   356f3:	f7 d9                	neg    %ecx
   356f5:	45 31 e4             	xor    %r12d,%r12d
   356f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   356ff:	00 
   35700:	48 0f a4 f0 01       	shld   $0x1,%rsi,%rax
   35705:	4c 0f a4 de 01       	shld   $0x1,%r11,%rsi
   3570a:	48 89 c3             	mov    %rax,%rbx
   3570d:	48 f7 d3             	not    %rbx
   35710:	48 89 f7             	mov    %rsi,%rdi
   35713:	48 f7 d7             	not    %rdi
   35716:	4c 01 cf             	add    %r9,%rdi
   35719:	4c 11 d3             	adc    %r10,%rbx
   3571c:	48 c1 fb 3f          	sar    $0x3f,%rbx
   35720:	48 89 df             	mov    %rbx,%rdi
   35723:	4c 21 d7             	and    %r10,%rdi
   35726:	48 89 da             	mov    %rbx,%rdx
   35729:	4c 21 ca             	and    %r9,%rdx
   3572c:	48 29 d6             	sub    %rdx,%rsi
   3572f:	48 19 f8             	sbb    %rdi,%rax
   35732:	48 0f a4 f0 01       	shld   $0x1,%rsi,%rax
   35737:	4c 89 da             	mov    %r11,%rdx
   3573a:	48 c1 ea 3e          	shr    $0x3e,%rdx
   3573e:	83 e2 01             	and    $0x1,%edx
   35741:	4d 0f a4 fb 02       	shld   $0x2,%r15,%r11
   35746:	48 8d 34 72          	lea    (%rdx,%rsi,2),%rsi
   3574a:	49 c1 e7 02          	shl    $0x2,%r15
   3574e:	4d 01 e4             	add    %r12,%r12
   35751:	4d 09 e7             	or     %r12,%r15
   35754:	49 29 df             	sub    %rbx,%r15
   35757:	49 19 db             	sbb    %rbx,%r11
   3575a:	48 89 c2             	mov    %rax,%rdx
   3575d:	48 f7 d2             	not    %rdx
   35760:	48 89 f7             	mov    %rsi,%rdi
   35763:	48 f7 d7             	not    %rdi
   35766:	4c 01 cf             	add    %r9,%rdi
   35769:	4c 11 d2             	adc    %r10,%rdx
   3576c:	48 c1 fa 3f          	sar    $0x3f,%rdx
   35770:	41 89 d4             	mov    %edx,%r12d
   35773:	41 83 e4 01          	and    $0x1,%r12d
   35777:	48 89 d7             	mov    %rdx,%rdi
   3577a:	4c 21 d7             	and    %r10,%rdi
   3577d:	4c 21 ca             	and    %r9,%rdx
   35780:	48 29 d6             	sub    %rdx,%rsi
   35783:	48 19 f8             	sbb    %rdi,%rax
   35786:	83 c1 02             	add    $0x2,%ecx
   35789:	0f 85 71 ff ff ff    	jne    35700 <compiler_builtins::int::udiv::__udivmodti4+0x1f0>
   3578f:	41 f6 c6 01          	test   $0x1,%r14b
   35793:	74 3b                	je     357d0 <compiler_builtins::int::udiv::__udivmodti4+0x2c0>
   35795:	48 0f a4 f0 01       	shld   $0x1,%rsi,%rax
   3579a:	4c 0f a4 de 01       	shld   $0x1,%r11,%rsi
   3579f:	48 89 c1             	mov    %rax,%rcx
   357a2:	48 f7 d1             	not    %rcx
   357a5:	48 89 f2             	mov    %rsi,%rdx
   357a8:	48 f7 d2             	not    %rdx
   357ab:	4c 01 ca             	add    %r9,%rdx
   357ae:	4c 11 d1             	adc    %r10,%rcx
   357b1:	48 c1 f9 3f          	sar    $0x3f,%rcx
   357b5:	49 21 ca             	and    %rcx,%r10
   357b8:	49 21 c9             	and    %rcx,%r9
   357bb:	4c 29 ce             	sub    %r9,%rsi
   357be:	4c 19 d0             	sbb    %r10,%rax
   357c1:	83 e1 01             	and    $0x1,%ecx
   357c4:	4d 0f a4 fb 01       	shld   $0x1,%r15,%r11
   357c9:	4f 8d 3c 7c          	lea    (%r12,%r15,2),%r15
   357cd:	49 89 cc             	mov    %rcx,%r12
   357d0:	4d 85 c0             	test   %r8,%r8
   357d3:	74 07                	je     357dc <compiler_builtins::int::udiv::__udivmodti4+0x2cc>
   357d5:	49 89 30             	mov    %rsi,(%r8)
   357d8:	49 89 40 08          	mov    %rax,0x8(%r8)
   357dc:	4d 0f a4 fb 01       	shld   $0x1,%r15,%r11
   357e1:	4d 01 ff             	add    %r15,%r15
   357e4:	4d 09 e7             	or     %r12,%r15
   357e7:	e9 85 00 00 00       	jmpq   35871 <compiler_builtins::int::udiv::__udivmodti4+0x361>
   357ec:	4d 85 c9             	test   %r9,%r9
   357ef:	0f 84 8a 00 00 00    	je     3587f <compiler_builtins::int::udiv::__udivmodti4+0x36f>
   357f5:	4c 89 f8             	mov    %r15,%rax
   357f8:	4c 09 c8             	or     %r9,%rax
   357fb:	48 c1 e8 20          	shr    $0x20,%rax
   357ff:	74 2c                	je     3582d <compiler_builtins::int::udiv::__udivmodti4+0x31d>
   35801:	4c 89 f8             	mov    %r15,%rax
   35804:	31 d2                	xor    %edx,%edx
   35806:	49 f7 f1             	div    %r9
   35809:	49 89 c7             	mov    %rax,%r15
   3580c:	eb 60                	jmp    3586e <compiler_builtins::int::udiv::__udivmodti4+0x35e>
   3580e:	44 89 f8             	mov    %r15d,%eax
   35811:	31 d2                	xor    %edx,%edx
   35813:	41 f7 f1             	div    %r9d
   35816:	49 89 10             	mov    %rdx,(%r8)
   35819:	49 c7 40 08 00 00 00 	movq   $0x0,0x8(%r8)
   35820:	00 
   35821:	4c 89 f8             	mov    %r15,%rax
   35824:	4c 09 c8             	or     %r9,%rax
   35827:	48 c1 e8 20          	shr    $0x20,%rax
   3582b:	75 d4                	jne    35801 <compiler_builtins::int::udiv::__udivmodti4+0x2f1>
   3582d:	44 89 f8             	mov    %r15d,%eax
   35830:	31 d2                	xor    %edx,%edx
   35832:	41 f7 f1             	div    %r9d
   35835:	eb 34                	jmp    3586b <compiler_builtins::int::udiv::__udivmodti4+0x35b>
   35837:	44 89 d8             	mov    %r11d,%eax
   3583a:	31 d2                	xor    %edx,%edx
   3583c:	41 f7 f2             	div    %r10d
   3583f:	49 89 50 08          	mov    %rdx,0x8(%r8)
   35843:	49 c7 00 00 00 00 00 	movq   $0x0,(%r8)
   3584a:	4c 89 d8             	mov    %r11,%rax
   3584d:	4c 09 d0             	or     %r10,%rax
   35850:	48 c1 e8 20          	shr    $0x20,%rax
   35854:	74 0d                	je     35863 <compiler_builtins::int::udiv::__udivmodti4+0x353>
   35856:	4c 89 d8             	mov    %r11,%rax
   35859:	31 d2                	xor    %edx,%edx
   3585b:	49 f7 f2             	div    %r10
   3585e:	49 89 c7             	mov    %rax,%r15
   35861:	eb 0b                	jmp    3586e <compiler_builtins::int::udiv::__udivmodti4+0x35e>
   35863:	44 89 d8             	mov    %r11d,%eax
   35866:	31 d2                	xor    %edx,%edx
   35868:	41 f7 f2             	div    %r10d
   3586b:	41 89 c7             	mov    %eax,%r15d
   3586e:	45 31 db             	xor    %r11d,%r11d
   35871:	4c 89 f8             	mov    %r15,%rax
   35874:	4c 89 da             	mov    %r11,%rdx
   35877:	5b                   	pop    %rbx
   35878:	41 5c                	pop    %r12
   3587a:	41 5e                	pop    %r14
   3587c:	41 5f                	pop    %r15
   3587e:	c3                   	retq   
   3587f:	0f 0b                	ud2    
   35881:	0f 0b                	ud2    
   35883:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3588a:	00 00 00 
   3588d:	0f 1f 00             	nopl   (%rax)

0000000000035890 <__libc_csu_init>:
   35890:	f3 0f 1e fa          	endbr64 
   35894:	41 57                	push   %r15
   35896:	4c 8d 3d 03 dc 00 00 	lea    0xdc03(%rip),%r15        # 434a0 <std::sys::unix::args::imp::ARGV_INIT_ARRAY>
   3589d:	41 56                	push   %r14
   3589f:	49 89 d6             	mov    %rdx,%r14
   358a2:	41 55                	push   %r13
   358a4:	49 89 f5             	mov    %rsi,%r13
   358a7:	41 54                	push   %r12
   358a9:	41 89 fc             	mov    %edi,%r12d
   358ac:	55                   	push   %rbp
   358ad:	48 8d 2d fc db 00 00 	lea    0xdbfc(%rip),%rbp        # 434b0 <__do_global_dtors_aux_fini_array_entry>
   358b4:	53                   	push   %rbx
   358b5:	4c 29 fd             	sub    %r15,%rbp
   358b8:	48 83 ec 08          	sub    $0x8,%rsp
   358bc:	e8 3f f7 fc ff       	callq  5000 <_init>
   358c1:	48 c1 fd 03          	sar    $0x3,%rbp
   358c5:	74 1f                	je     358e6 <__libc_csu_init+0x56>
   358c7:	31 db                	xor    %ebx,%ebx
   358c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   358d0:	4c 89 f2             	mov    %r14,%rdx
   358d3:	4c 89 ee             	mov    %r13,%rsi
   358d6:	44 89 e7             	mov    %r12d,%edi
   358d9:	41 ff 14 df          	callq  *(%r15,%rbx,8)
   358dd:	48 83 c3 01          	add    $0x1,%rbx
   358e1:	48 39 dd             	cmp    %rbx,%rbp
   358e4:	75 ea                	jne    358d0 <__libc_csu_init+0x40>
   358e6:	48 83 c4 08          	add    $0x8,%rsp
   358ea:	5b                   	pop    %rbx
   358eb:	5d                   	pop    %rbp
   358ec:	41 5c                	pop    %r12
   358ee:	41 5d                	pop    %r13
   358f0:	41 5e                	pop    %r14
   358f2:	41 5f                	pop    %r15
   358f4:	c3                   	retq   
   358f5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   358fc:	00 00 00 00 

0000000000035900 <__libc_csu_fini>:
   35900:	f3 0f 1e fa          	endbr64 
   35904:	c3                   	retq   
   35905:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3590c:	00 00 00 
   3590f:	90                   	nop

0000000000035910 <fstat64>:
   35910:	f3 0f 1e fa          	endbr64 
   35914:	48 89 f2             	mov    %rsi,%rdx
   35917:	89 fe                	mov    %edi,%esi
   35919:	bf 01 00 00 00       	mov    $0x1,%edi
   3591e:	e9 1d f7 fc ff       	jmpq   5040 <__fxstat64@plt>

Disassembly of section .fini:

0000000000035924 <_fini>:
   35924:	f3 0f 1e fa          	endbr64 
   35928:	48 83 ec 08          	sub    $0x8,%rsp
   3592c:	48 83 c4 08          	add    $0x8,%rsp
   35930:	c3                   	retq   
