
./target/release/rust_linz:     file format elf64-x86-64


Disassembly of section .init:

0000000000005000 <_init>:
    5000:	f3 0f 1e fa          	endbr64 
    5004:	48 83 ec 08          	sub    $0x8,%rsp
    5008:	48 8b 05 d1 0c 04 00 	mov    0x40cd1(%rip),%rax        # 45ce0 <__gmon_start__>
    500f:	48 85 c0             	test   %rax,%rax
    5012:	74 02                	je     5016 <_init+0x16>
    5014:	ff d0                	callq  *%rax
    5016:	48 83 c4 08          	add    $0x8,%rsp
    501a:	c3                   	retq   

Disassembly of section .plt:

0000000000005020 <.plt>:
    5020:	ff 35 72 09 04 00    	pushq  0x40972(%rip)        # 45998 <_GLOBAL_OFFSET_TABLE_+0x8>
    5026:	ff 25 74 09 04 00    	jmpq   *0x40974(%rip)        # 459a0 <_GLOBAL_OFFSET_TABLE_+0x10>
    502c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005030 <__tls_get_addr@plt>:
    5030:	ff 25 72 09 04 00    	jmpq   *0x40972(%rip)        # 459a8 <__tls_get_addr@GLIBC_2.3>
    5036:	68 00 00 00 00       	pushq  $0x0
    503b:	e9 e0 ff ff ff       	jmpq   5020 <.plt>

0000000000005040 <__fxstat64@plt>:
    5040:	ff 25 6a 09 04 00    	jmpq   *0x4096a(%rip)        # 459b0 <__fxstat64@GLIBC_2.2.5>
    5046:	68 01 00 00 00       	pushq  $0x1
    504b:	e9 d0 ff ff ff       	jmpq   5020 <.plt>

0000000000005050 <_Unwind_Resume@plt>:
    5050:	ff 25 62 09 04 00    	jmpq   *0x40962(%rip)        # 459b8 <_Unwind_Resume@GCC_3.0>
    5056:	68 02 00 00 00       	pushq  $0x2
    505b:	e9 c0 ff ff ff       	jmpq   5020 <.plt>

Disassembly of section .plt.got:

0000000000005060 <__cxa_finalize@plt>:
    5060:	ff 25 4a 0f 04 00    	jmpq   *0x40f4a(%rip)        # 45fb0 <__cxa_finalize@GLIBC_2.2.5>
    5066:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000005070 <_start>:
    5070:	f3 0f 1e fa          	endbr64 
    5074:	31 ed                	xor    %ebp,%ebp
    5076:	49 89 d1             	mov    %rdx,%r9
    5079:	5e                   	pop    %rsi
    507a:	48 89 e2             	mov    %rsp,%rdx
    507d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    5081:	50                   	push   %rax
    5082:	54                   	push   %rsp
    5083:	4c 8d 05 d6 ff 02 00 	lea    0x2ffd6(%rip),%r8        # 35060 <__libc_csu_fini>
    508a:	48 8d 0d 5f ff 02 00 	lea    0x2ff5f(%rip),%rcx        # 34ff0 <__libc_csu_init>
    5091:	48 8d 3d 38 02 00 00 	lea    0x238(%rip),%rdi        # 52d0 <main>
    5098:	ff 15 e2 0b 04 00    	callq  *0x40be2(%rip)        # 45c80 <__libc_start_main@GLIBC_2.2.5>
    509e:	f4                   	hlt    
    509f:	90                   	nop

00000000000050a0 <deregister_tm_clones>:
    50a0:	48 8d 3d 91 0f 04 00 	lea    0x40f91(%rip),%rdi        # 46038 <__TMC_END__>
    50a7:	48 8d 05 8a 0f 04 00 	lea    0x40f8a(%rip),%rax        # 46038 <__TMC_END__>
    50ae:	48 39 f8             	cmp    %rdi,%rax
    50b1:	74 15                	je     50c8 <deregister_tm_clones+0x28>
    50b3:	48 8b 05 7e 09 04 00 	mov    0x4097e(%rip),%rax        # 45a38 <_ITM_deregisterTMCloneTable>
    50ba:	48 85 c0             	test   %rax,%rax
    50bd:	74 09                	je     50c8 <deregister_tm_clones+0x28>
    50bf:	ff e0                	jmpq   *%rax
    50c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    50c8:	c3                   	retq   
    50c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000050d0 <register_tm_clones>:
    50d0:	48 8d 3d 61 0f 04 00 	lea    0x40f61(%rip),%rdi        # 46038 <__TMC_END__>
    50d7:	48 8d 35 5a 0f 04 00 	lea    0x40f5a(%rip),%rsi        # 46038 <__TMC_END__>
    50de:	48 29 fe             	sub    %rdi,%rsi
    50e1:	48 89 f0             	mov    %rsi,%rax
    50e4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    50e8:	48 c1 f8 03          	sar    $0x3,%rax
    50ec:	48 01 c6             	add    %rax,%rsi
    50ef:	48 d1 fe             	sar    %rsi
    50f2:	74 14                	je     5108 <register_tm_clones+0x38>
    50f4:	48 8b 05 55 0e 04 00 	mov    0x40e55(%rip),%rax        # 45f50 <_ITM_registerTMCloneTable>
    50fb:	48 85 c0             	test   %rax,%rax
    50fe:	74 08                	je     5108 <register_tm_clones+0x38>
    5100:	ff e0                	jmpq   *%rax
    5102:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5108:	c3                   	retq   
    5109:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005110 <__do_global_dtors_aux>:
    5110:	f3 0f 1e fa          	endbr64 
    5114:	80 3d 1d 0f 04 00 00 	cmpb   $0x0,0x40f1d(%rip)        # 46038 <__TMC_END__>
    511b:	75 2b                	jne    5148 <__do_global_dtors_aux+0x38>
    511d:	55                   	push   %rbp
    511e:	48 83 3d 8a 0e 04 00 	cmpq   $0x0,0x40e8a(%rip)        # 45fb0 <__cxa_finalize@GLIBC_2.2.5>
    5125:	00 
    5126:	48 89 e5             	mov    %rsp,%rbp
    5129:	74 0c                	je     5137 <__do_global_dtors_aux+0x27>
    512b:	48 8b 3d ce 0e 04 00 	mov    0x40ece(%rip),%rdi        # 46000 <__dso_handle>
    5132:	e8 29 ff ff ff       	callq  5060 <__cxa_finalize@plt>
    5137:	e8 64 ff ff ff       	callq  50a0 <deregister_tm_clones>
    513c:	c6 05 f5 0e 04 00 01 	movb   $0x1,0x40ef5(%rip)        # 46038 <__TMC_END__>
    5143:	5d                   	pop    %rbp
    5144:	c3                   	retq   
    5145:	0f 1f 00             	nopl   (%rax)
    5148:	c3                   	retq   
    5149:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005150 <frame_dummy>:
    5150:	f3 0f 1e fa          	endbr64 
    5154:	e9 77 ff ff ff       	jmpq   50d0 <register_tm_clones>
    5159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005160 <core::ptr::drop_in_place>:
    5160:	c3                   	retq   
    5161:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5168:	00 00 00 
    516b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000005170 <rust_linz::main>:
    5170:	41 57                	push   %r15
    5172:	41 56                	push   %r14
    5174:	53                   	push   %rbx
    5175:	48 81 ec 80 00 00 00 	sub    $0x80,%rsp
    517c:	4c 8d 3d 5d 2a 01 00 	lea    0x12a5d(%rip),%r15        # 17be0 <std::time::SystemTime::now>
    5183:	41 ff d7             	callq  *%r15
    5186:	48 89 c3             	mov    %rax,%rbx
    5189:	49 89 d6             	mov    %rdx,%r14
    518c:	41 ff d7             	callq  *%r15
    518f:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
    5194:	48 89 54 24 68       	mov    %rdx,0x68(%rsp)
    5199:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    519e:	48 8d 74 24 60       	lea    0x60(%rsp),%rsi
    51a3:	48 89 da             	mov    %rbx,%rdx
    51a6:	4c 89 f1             	mov    %r14,%rcx
    51a9:	ff 15 e1 09 04 00    	callq  *0x409e1(%rip)        # 45b90 <_GLOBAL_OFFSET_TABLE_+0x200>
    51af:	83 7c 24 20 01       	cmpl   $0x1,0x20(%rsp)
    51b4:	0f 84 b6 00 00 00    	je     5270 <rust_linz::main+0x100>
    51ba:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    51bf:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
    51c4:	41 ff d7             	callq  *%r15
    51c7:	48 89 c3             	mov    %rax,%rbx
    51ca:	49 89 d6             	mov    %rdx,%r14
    51cd:	41 ff d7             	callq  *%r15
    51d0:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
    51d5:	48 89 54 24 78       	mov    %rdx,0x78(%rsp)
    51da:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    51df:	48 8d 74 24 70       	lea    0x70(%rsp),%rsi
    51e4:	48 89 da             	mov    %rbx,%rdx
    51e7:	4c 89 f1             	mov    %r14,%rcx
    51ea:	ff 15 a0 09 04 00    	callq  *0x409a0(%rip)        # 45b90 <_GLOBAL_OFFSET_TABLE_+0x200>
    51f0:	83 7c 24 20 01       	cmpl   $0x1,0x20(%rsp)
    51f5:	0f 84 9d 00 00 00    	je     5298 <rust_linz::main+0x128>
    51fb:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    5200:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    5205:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
    520a:	48 89 04 24          	mov    %rax,(%rsp)
    520e:	48 8d 05 ab f2 02 00 	lea    0x2f2ab(%rip),%rax        # 344c0 <core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt>
    5215:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    521a:	48 8d 4c 24 58       	lea    0x58(%rsp),%rcx
    521f:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    5224:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    5229:	48 8d 05 f8 e2 03 00 	lea    0x3e2f8(%rip),%rax        # 43528 <__do_global_dtors_aux_fini_array_entry+0x58>
    5230:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    5235:	48 c7 44 24 28 03 00 	movq   $0x3,0x28(%rsp)
    523c:	00 00 
    523e:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
    5245:	00 00 
    5247:	48 89 e0             	mov    %rsp,%rax
    524a:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    524f:	48 c7 44 24 48 02 00 	movq   $0x2,0x48(%rsp)
    5256:	00 00 
    5258:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    525d:	ff 15 75 07 04 00    	callq  *0x40775(%rip)        # 459d8 <_GLOBAL_OFFSET_TABLE_+0x48>
    5263:	48 81 c4 80 00 00 00 	add    $0x80,%rsp
    526a:	5b                   	pop    %rbx
    526b:	41 5e                	pop    %r14
    526d:	41 5f                	pop    %r15
    526f:	c3                   	retq   
    5270:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    5275:	8b 4c 24 30          	mov    0x30(%rsp),%ecx
    5279:	48 89 04 24          	mov    %rax,(%rsp)
    527d:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
    5281:	48 8d 3d 78 0d 03 00 	lea    0x30d78(%rip),%rdi        # 36000 <_fini+0xf7c>
    5288:	48 8d 0d 49 e2 03 00 	lea    0x3e249(%rip),%rcx        # 434d8 <__do_global_dtors_aux_fini_array_entry+0x8>
    528f:	4c 8d 05 62 e2 03 00 	lea    0x3e262(%rip),%r8        # 434f8 <__do_global_dtors_aux_fini_array_entry+0x28>
    5296:	eb 26                	jmp    52be <rust_linz::main+0x14e>
    5298:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    529d:	8b 4c 24 30          	mov    0x30(%rsp),%ecx
    52a1:	48 89 04 24          	mov    %rax,(%rsp)
    52a5:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
    52a9:	48 8d 3d 50 0d 03 00 	lea    0x30d50(%rip),%rdi        # 36000 <_fini+0xf7c>
    52b0:	48 8d 0d 21 e2 03 00 	lea    0x3e221(%rip),%rcx        # 434d8 <__do_global_dtors_aux_fini_array_entry+0x8>
    52b7:	4c 8d 05 52 e2 03 00 	lea    0x3e252(%rip),%r8        # 43510 <__do_global_dtors_aux_fini_array_entry+0x40>
    52be:	48 89 e2             	mov    %rsp,%rdx
    52c1:	be 02 00 00 00       	mov    $0x2,%esi
    52c6:	ff 15 1c 09 04 00    	callq  *0x4091c(%rip)        # 45be8 <_GLOBAL_OFFSET_TABLE_+0x258>
    52cc:	0f 0b                	ud2    
    52ce:	66 90                	xchg   %ax,%ax

00000000000052d0 <main>:
    52d0:	50                   	push   %rax
    52d1:	48 89 f1             	mov    %rsi,%rcx
    52d4:	48 63 d7             	movslq %edi,%rdx
    52d7:	48 8d 05 92 fe ff ff 	lea    -0x16e(%rip),%rax        # 5170 <rust_linz::main>
    52de:	48 89 04 24          	mov    %rax,(%rsp)
    52e2:	48 8d 35 6f e2 03 00 	lea    0x3e26f(%rip),%rsi        # 43558 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066>
    52e9:	48 89 e7             	mov    %rsp,%rdi
    52ec:	ff 15 3e 08 04 00    	callq  *0x4083e(%rip)        # 45b30 <_GLOBAL_OFFSET_TABLE_+0x1a0>
    52f2:	59                   	pop    %rcx
    52f3:	c3                   	retq   
    52f4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    52fb:	00 00 00 
    52fe:	66 90                	xchg   %ax,%ax

0000000000005300 <_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h196ad9335766610eE.llvm.13585541832861257066>:
    5300:	50                   	push   %rax
    5301:	48 8b 3f             	mov    (%rdi),%rdi
    5304:	e8 27 00 00 00       	callq  5330 <std::sys_common::backtrace::__rust_begin_short_backtrace>
    5309:	31 c0                	xor    %eax,%eax
    530b:	59                   	pop    %rcx
    530c:	c3                   	retq   
    530d:	0f 1f 00             	nopl   (%rax)

0000000000005310 <_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h85e9732833bda83aE.llvm.13585541832861257066>:
    5310:	50                   	push   %rax
    5311:	48 8b 3f             	mov    (%rdi),%rdi
    5314:	e8 17 00 00 00       	callq  5330 <std::sys_common::backtrace::__rust_begin_short_backtrace>
    5319:	31 c0                	xor    %eax,%eax
    531b:	59                   	pop    %rcx
    531c:	c3                   	retq   
    531d:	0f 1f 00             	nopl   (%rax)

0000000000005320 <_ZN4core3ptr13drop_in_place17hf45d225946c666c9E.llvm.13585541832861257066>:
    5320:	c3                   	retq   
    5321:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5328:	00 00 00 
    532b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000005330 <std::sys_common::backtrace::__rust_begin_short_backtrace>:
    5330:	50                   	push   %rax
    5331:	ff d7                	callq  *%rdi
    5333:	48 89 e0             	mov    %rsp,%rax
    5336:	58                   	pop    %rax
    5337:	c3                   	retq   
    5338:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    533f:	00 

0000000000005340 <__rust_alloc>:
    5340:	e9 4b 44 01 00       	jmpq   19790 <__rdl_alloc>
    5345:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    534c:	00 00 00 
    534f:	90                   	nop

0000000000005350 <__rust_dealloc>:
    5350:	e9 8b 44 01 00       	jmpq   197e0 <__rdl_dealloc>
    5355:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    535c:	00 00 00 
    535f:	90                   	nop

0000000000005360 <__rust_realloc>:
    5360:	e9 8b 44 01 00       	jmpq   197f0 <__rdl_realloc>
    5365:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    536c:	00 00 00 
    536f:	90                   	nop

0000000000005370 <__rust_alloc_zeroed>:
    5370:	e9 1b 45 01 00       	jmpq   19890 <__rdl_alloc_zeroed>
    5375:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    537c:	00 00 00 
    537f:	90                   	nop

0000000000005380 <__rust_alloc_error_handler>:
    5380:	e9 6b 9a 02 00       	jmpq   2edf0 <__rg_oom>
    5385:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    538c:	00 00 00 
    538f:	90                   	nop

0000000000005390 <<alloc::collections::btree::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::next>:
    5390:	55                   	push   %rbp
    5391:	41 57                	push   %r15
    5393:	41 56                	push   %r14
    5395:	41 55                	push   %r13
    5397:	41 54                	push   %r12
    5399:	53                   	push   %rbx
    539a:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
    53a1:	48 8b 46 30          	mov    0x30(%rsi),%rax
    53a5:	48 85 c0             	test   %rax,%rax
    53a8:	0f 84 45 01 00 00    	je     54f3 <<alloc::collections::btree::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::next+0x163>
    53ae:	49 89 f7             	mov    %rsi,%r15
    53b1:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    53b5:	48 89 46 30          	mov    %rax,0x30(%rsi)
    53b9:	48 8b 46 08          	mov    0x8(%rsi),%rax
    53bd:	48 85 c0             	test   %rax,%rax
    53c0:	4c 0f 44 f8          	cmove  %rax,%r15
    53c4:	0f 84 4d 02 00 00    	je     5617 <<alloc::collections::btree::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::next+0x287>
    53ca:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    53cf:	49 8b 07             	mov    (%r15),%rax
    53d2:	49 8b 7f 08          	mov    0x8(%r15),%rdi
    53d6:	4d 8b 67 10          	mov    0x10(%r15),%r12
    53da:	0f b7 8f 32 05 00 00 	movzwl 0x532(%rdi),%ecx
    53e1:	49 39 cc             	cmp    %rcx,%r12
    53e4:	0f 83 16 01 00 00    	jae    5500 <<alloc::collections::btree::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::next+0x170>
    53ea:	48 89 fb             	mov    %rdi,%rbx
    53ed:	49 89 c5             	mov    %rax,%r13
    53f0:	49 6b cc 70          	imul   $0x70,%r12,%rcx
    53f4:	4a 8b 44 e3 08       	mov    0x8(%rbx,%r12,8),%rax
    53f9:	0f 10 84 0b c0 00 00 	movups 0xc0(%rbx,%rcx,1),%xmm0
    5400:	00 
    5401:	0f 29 84 24 e0 00 00 	movaps %xmm0,0xe0(%rsp)
    5408:	00 
    5409:	0f 10 84 0b b0 00 00 	movups 0xb0(%rbx,%rcx,1),%xmm0
    5410:	00 
    5411:	0f 29 84 24 d0 00 00 	movaps %xmm0,0xd0(%rsp)
    5418:	00 
    5419:	0f 10 84 0b a0 00 00 	movups 0xa0(%rbx,%rcx,1),%xmm0
    5420:	00 
    5421:	0f 29 84 24 c0 00 00 	movaps %xmm0,0xc0(%rsp)
    5428:	00 
    5429:	0f 10 44 0b 60       	movups 0x60(%rbx,%rcx,1),%xmm0
    542e:	0f 10 4c 0b 70       	movups 0x70(%rbx,%rcx,1),%xmm1
    5433:	0f 10 94 0b 80 00 00 	movups 0x80(%rbx,%rcx,1),%xmm2
    543a:	00 
    543b:	0f 10 9c 0b 90 00 00 	movups 0x90(%rbx,%rcx,1),%xmm3
    5442:	00 
    5443:	0f 29 9c 24 b0 00 00 	movaps %xmm3,0xb0(%rsp)
    544a:	00 
    544b:	0f 29 94 24 a0 00 00 	movaps %xmm2,0xa0(%rsp)
    5452:	00 
    5453:	0f 29 8c 24 90 00 00 	movaps %xmm1,0x90(%rsp)
    545a:	00 
    545b:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
    5462:	00 
    5463:	4d 85 ed             	test   %r13,%r13
    5466:	0f 84 e4 00 00 00    	je     5550 <<alloc::collections::btree::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::next+0x1c0>
    546c:	4c 89 e9             	mov    %r13,%rcx
    546f:	4a 8b 9c e3 40 05 00 	mov    0x540(%rbx,%r12,8),%rbx
    5476:	00 
    5477:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
    547b:	74 71                	je     54ee <<alloc::collections::btree::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::next+0x15e>
    547d:	49 83 c5 fe          	add    $0xfffffffffffffffe,%r13
    5481:	48 89 ca             	mov    %rcx,%rdx
    5484:	48 83 e2 07          	and    $0x7,%rdx
    5488:	74 19                	je     54a3 <<alloc::collections::btree::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::next+0x113>
    548a:	31 f6                	xor    %esi,%esi
    548c:	0f 1f 40 00          	nopl   0x0(%rax)
    5490:	48 8b 9b 38 05 00 00 	mov    0x538(%rbx),%rbx
    5497:	48 83 c6 01          	add    $0x1,%rsi
    549b:	48 39 f2             	cmp    %rsi,%rdx
    549e:	75 f0                	jne    5490 <<alloc::collections::btree::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::next+0x100>
    54a0:	48 29 f1             	sub    %rsi,%rcx
    54a3:	49 83 fd 07          	cmp    $0x7,%r13
    54a7:	72 45                	jb     54ee <<alloc::collections::btree::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::next+0x15e>
    54a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    54b0:	48 8b 93 38 05 00 00 	mov    0x538(%rbx),%rdx
    54b7:	48 8b 92 38 05 00 00 	mov    0x538(%rdx),%rdx
    54be:	48 8b 92 38 05 00 00 	mov    0x538(%rdx),%rdx
    54c5:	48 8b 92 38 05 00 00 	mov    0x538(%rdx),%rdx
    54cc:	48 8b 92 38 05 00 00 	mov    0x538(%rdx),%rdx
    54d3:	48 8b 92 38 05 00 00 	mov    0x538(%rdx),%rdx
    54da:	48 8b 92 38 05 00 00 	mov    0x538(%rdx),%rdx
    54e1:	48 8b 9a 38 05 00 00 	mov    0x538(%rdx),%rbx
    54e8:	48 83 c1 f8          	add    $0xfffffffffffffff8,%rcx
    54ec:	75 c2                	jne    54b0 <<alloc::collections::btree::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::next+0x120>
    54ee:	45 31 e4             	xor    %r12d,%r12d
    54f1:	eb 61                	jmp    5554 <<alloc::collections::btree::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::next+0x1c4>
    54f3:	48 c7 47 10 02 00 00 	movq   $0x2,0x10(%rdi)
    54fa:	00 
    54fb:	e9 05 01 00 00       	jmpq   5605 <<alloc::collections::btree::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::next+0x275>
    5500:	bd 38 05 00 00       	mov    $0x538,%ebp
    5505:	4c 8d 35 44 fe ff ff 	lea    -0x1bc(%rip),%r14        # 5350 <__rust_dealloc>
    550c:	eb 2c                	jmp    553a <<alloc::collections::btree::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::next+0x1aa>
    550e:	66 90                	xchg   %ax,%ax
    5510:	48 85 c0             	test   %rax,%rax
    5513:	be 98 05 00 00       	mov    $0x598,%esi
    5518:	48 0f 44 f5          	cmove  %rbp,%rsi
    551c:	ba 08 00 00 00       	mov    $0x8,%edx
    5521:	41 ff d6             	callq  *%r14
    5524:	0f b7 8b 32 05 00 00 	movzwl 0x532(%rbx),%ecx
    552b:	4c 89 e8             	mov    %r13,%rax
    552e:	48 89 df             	mov    %rbx,%rdi
    5531:	49 39 cc             	cmp    %rcx,%r12
    5534:	0f 82 b6 fe ff ff    	jb     53f0 <<alloc::collections::btree::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::next+0x60>
    553a:	48 8b 1f             	mov    (%rdi),%rbx
    553d:	48 85 db             	test   %rbx,%rbx
    5540:	74 ce                	je     5510 <<alloc::collections::btree::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::next+0x180>
    5542:	44 0f b7 a7 30 05 00 	movzwl 0x530(%rdi),%r12d
    5549:	00 
    554a:	4c 8d 68 01          	lea    0x1(%rax),%r13
    554e:	eb c0                	jmp    5510 <<alloc::collections::btree::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::next+0x180>
    5550:	49 83 c4 01          	add    $0x1,%r12
    5554:	0f 28 84 24 e0 00 00 	movaps 0xe0(%rsp),%xmm0
    555b:	00 
    555c:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
    5561:	0f 28 84 24 d0 00 00 	movaps 0xd0(%rsp),%xmm0
    5568:	00 
    5569:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
    556e:	0f 28 84 24 c0 00 00 	movaps 0xc0(%rsp),%xmm0
    5575:	00 
    5576:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    557b:	0f 28 84 24 80 00 00 	movaps 0x80(%rsp),%xmm0
    5582:	00 
    5583:	0f 28 8c 24 90 00 00 	movaps 0x90(%rsp),%xmm1
    558a:	00 
    558b:	0f 28 94 24 a0 00 00 	movaps 0xa0(%rsp),%xmm2
    5592:	00 
    5593:	0f 28 9c 24 b0 00 00 	movaps 0xb0(%rsp),%xmm3
    559a:	00 
    559b:	0f 29 5c 24 40       	movaps %xmm3,0x40(%rsp)
    55a0:	0f 29 54 24 30       	movaps %xmm2,0x30(%rsp)
    55a5:	0f 29 4c 24 20       	movaps %xmm1,0x20(%rsp)
    55aa:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    55af:	49 c7 07 00 00 00 00 	movq   $0x0,(%r15)
    55b6:	49 89 5f 08          	mov    %rbx,0x8(%r15)
    55ba:	4d 89 67 10          	mov    %r12,0x10(%r15)
    55be:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    55c3:	48 89 01             	mov    %rax,(%rcx)
    55c6:	0f 28 44 24 10       	movaps 0x10(%rsp),%xmm0
    55cb:	0f 28 4c 24 20       	movaps 0x20(%rsp),%xmm1
    55d0:	0f 28 54 24 30       	movaps 0x30(%rsp),%xmm2
    55d5:	0f 28 5c 24 40       	movaps 0x40(%rsp),%xmm3
    55da:	0f 11 41 08          	movups %xmm0,0x8(%rcx)
    55de:	0f 11 49 18          	movups %xmm1,0x18(%rcx)
    55e2:	0f 11 51 28          	movups %xmm2,0x28(%rcx)
    55e6:	0f 11 59 38          	movups %xmm3,0x38(%rcx)
    55ea:	0f 28 44 24 50       	movaps 0x50(%rsp),%xmm0
    55ef:	0f 11 41 48          	movups %xmm0,0x48(%rcx)
    55f3:	0f 28 44 24 60       	movaps 0x60(%rsp),%xmm0
    55f8:	0f 11 41 58          	movups %xmm0,0x58(%rcx)
    55fc:	0f 28 44 24 70       	movaps 0x70(%rsp),%xmm0
    5601:	0f 11 41 68          	movups %xmm0,0x68(%rcx)
    5605:	48 81 c4 f8 00 00 00 	add    $0xf8,%rsp
    560c:	5b                   	pop    %rbx
    560d:	41 5c                	pop    %r12
    560f:	41 5d                	pop    %r13
    5611:	41 5e                	pop    %r14
    5613:	41 5f                	pop    %r15
    5615:	5d                   	pop    %rbp
    5616:	c3                   	retq   
    5617:	48 8d 3d dc 1f 03 00 	lea    0x31fdc(%rip),%rdi        # 375fa <str.6+0x2da>
    561e:	48 8d 15 63 df 03 00 	lea    0x3df63(%rip),%rdx        # 43588 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x30>
    5625:	be 2b 00 00 00       	mov    $0x2b,%esi
    562a:	ff 15 b0 08 04 00    	callq  *0x408b0(%rip)        # 45ee0 <_GLOBAL_OFFSET_TABLE_+0x550>
    5630:	0f 0b                	ud2    
    5632:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5639:	00 00 00 
    563c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005640 <<T as core::any::Any>::type_id>:
    5640:	48 b8 0b 38 d0 04 32 	movabs $0x7ebaa3204d0380b,%rax
    5647:	aa eb 07 
    564a:	c3                   	retq   
    564b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000005650 <<T as core::any::Any>::type_id>:
    5650:	48 b8 06 bb 17 03 a1 	movabs $0x39682a10317bb06,%rax
    5657:	82 96 03 
    565a:	c3                   	retq   
    565b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000005660 <<T as core::any::Any>::type_id>:
    5660:	48 b8 f4 bc c7 ec 1e 	movabs $0x7ef2a91eecc7bcf4,%rax
    5667:	a9 f2 7e 
    566a:	c3                   	retq   
    566b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000005670 <<&T as core::fmt::Debug>::fmt>:
    5670:	41 56                	push   %r14
    5672:	53                   	push   %rbx
    5673:	50                   	push   %rax
    5674:	48 89 f3             	mov    %rsi,%rbx
    5677:	4c 8b 37             	mov    (%rdi),%r14
    567a:	48 89 f7             	mov    %rsi,%rdi
    567d:	ff 15 0d 09 04 00    	callq  *0x4090d(%rip)        # 45f90 <_GLOBAL_OFFSET_TABLE_+0x600>
    5683:	84 c0                	test   %al,%al
    5685:	74 13                	je     569a <<&T as core::fmt::Debug>::fmt+0x2a>
    5687:	4c 89 f7             	mov    %r14,%rdi
    568a:	48 89 de             	mov    %rbx,%rsi
    568d:	48 83 c4 08          	add    $0x8,%rsp
    5691:	5b                   	pop    %rbx
    5692:	41 5e                	pop    %r14
    5694:	ff 25 c6 06 04 00    	jmpq   *0x406c6(%rip)        # 45d60 <_GLOBAL_OFFSET_TABLE_+0x3d0>
    569a:	48 89 df             	mov    %rbx,%rdi
    569d:	ff 15 5d 03 04 00    	callq  *0x4035d(%rip)        # 45a00 <_GLOBAL_OFFSET_TABLE_+0x70>
    56a3:	4c 89 f7             	mov    %r14,%rdi
    56a6:	48 89 de             	mov    %rbx,%rsi
    56a9:	48 83 c4 08          	add    $0x8,%rsp
    56ad:	84 c0                	test   %al,%al
    56af:	74 09                	je     56ba <<&T as core::fmt::Debug>::fmt+0x4a>
    56b1:	5b                   	pop    %rbx
    56b2:	41 5e                	pop    %r14
    56b4:	ff 25 4e 07 04 00    	jmpq   *0x4074e(%rip)        # 45e08 <_GLOBAL_OFFSET_TABLE_+0x478>
    56ba:	5b                   	pop    %rbx
    56bb:	41 5e                	pop    %r14
    56bd:	ff 25 55 05 04 00    	jmpq   *0x40555(%rip)        # 45c18 <_GLOBAL_OFFSET_TABLE_+0x288>
    56c3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    56ca:	00 00 00 
    56cd:	0f 1f 00             	nopl   (%rax)

00000000000056d0 <<&T as core::fmt::Debug>::fmt>:
    56d0:	41 56                	push   %r14
    56d2:	53                   	push   %rbx
    56d3:	50                   	push   %rax
    56d4:	48 89 f3             	mov    %rsi,%rbx
    56d7:	4c 8b 37             	mov    (%rdi),%r14
    56da:	48 89 f7             	mov    %rsi,%rdi
    56dd:	ff 15 ad 08 04 00    	callq  *0x408ad(%rip)        # 45f90 <_GLOBAL_OFFSET_TABLE_+0x600>
    56e3:	84 c0                	test   %al,%al
    56e5:	74 13                	je     56fa <<&T as core::fmt::Debug>::fmt+0x2a>
    56e7:	4c 89 f7             	mov    %r14,%rdi
    56ea:	48 89 de             	mov    %rbx,%rsi
    56ed:	48 83 c4 08          	add    $0x8,%rsp
    56f1:	5b                   	pop    %rbx
    56f2:	41 5e                	pop    %r14
    56f4:	ff 25 0e 08 04 00    	jmpq   *0x4080e(%rip)        # 45f08 <_GLOBAL_OFFSET_TABLE_+0x578>
    56fa:	48 89 df             	mov    %rbx,%rdi
    56fd:	ff 15 fd 02 04 00    	callq  *0x402fd(%rip)        # 45a00 <_GLOBAL_OFFSET_TABLE_+0x70>
    5703:	4c 89 f7             	mov    %r14,%rdi
    5706:	48 89 de             	mov    %rbx,%rsi
    5709:	48 83 c4 08          	add    $0x8,%rsp
    570d:	84 c0                	test   %al,%al
    570f:	74 09                	je     571a <<&T as core::fmt::Debug>::fmt+0x4a>
    5711:	5b                   	pop    %rbx
    5712:	41 5e                	pop    %r14
    5714:	ff 25 06 08 04 00    	jmpq   *0x40806(%rip)        # 45f20 <_GLOBAL_OFFSET_TABLE_+0x590>
    571a:	5b                   	pop    %rbx
    571b:	41 5e                	pop    %r14
    571d:	ff 25 c5 06 04 00    	jmpq   *0x406c5(%rip)        # 45de8 <_GLOBAL_OFFSET_TABLE_+0x458>
    5723:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    572a:	00 00 00 
    572d:	0f 1f 00             	nopl   (%rax)

0000000000005730 <<&T as core::fmt::Debug>::fmt>:
    5730:	48 8b 3f             	mov    (%rdi),%rdi
    5733:	ff 25 b7 03 04 00    	jmpq   *0x403b7(%rip)        # 45af0 <_GLOBAL_OFFSET_TABLE_+0x160>
    5739:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005740 <<&T as core::fmt::Debug>::fmt>:
    5740:	55                   	push   %rbp
    5741:	41 57                	push   %r15
    5743:	41 56                	push   %r14
    5745:	41 55                	push   %r13
    5747:	41 54                	push   %r12
    5749:	53                   	push   %rbx
    574a:	48 83 ec 18          	sub    $0x18,%rsp
    574e:	48 8b 07             	mov    (%rdi),%rax
    5751:	48 8b 18             	mov    (%rax),%rbx
    5754:	4c 8b 68 10          	mov    0x10(%rax),%r13
    5758:	48 89 f7             	mov    %rsi,%rdi
    575b:	ff 15 7f 04 04 00    	callq  *0x4047f(%rip)        # 45be0 <_GLOBAL_OFFSET_TABLE_+0x250>
    5761:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    5766:	48 89 04 24          	mov    %rax,(%rsp)
    576a:	4d 85 ed             	test   %r13,%r13
    576d:	74 3b                	je     57aa <<&T as core::fmt::Debug>::fmt+0x6a>
    576f:	4c 8d 35 ca de 03 00 	lea    0x3deca(%rip),%r14        # 43640 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xe8>
    5776:	49 89 e7             	mov    %rsp,%r15
    5779:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
    577e:	48 8d 2d 5b a9 02 00 	lea    0x2a95b(%rip),%rbp        # 300e0 <core::fmt::builders::DebugSet::entry>
    5785:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    578c:	00 00 00 
    578f:	90                   	nop
    5790:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
    5795:	48 83 c3 01          	add    $0x1,%rbx
    5799:	4c 89 ff             	mov    %r15,%rdi
    579c:	4c 89 e6             	mov    %r12,%rsi
    579f:	4c 89 f2             	mov    %r14,%rdx
    57a2:	ff d5                	callq  *%rbp
    57a4:	49 83 c5 ff          	add    $0xffffffffffffffff,%r13
    57a8:	75 e6                	jne    5790 <<&T as core::fmt::Debug>::fmt+0x50>
    57aa:	48 89 e7             	mov    %rsp,%rdi
    57ad:	ff 15 4d 07 04 00    	callq  *0x4074d(%rip)        # 45f00 <_GLOBAL_OFFSET_TABLE_+0x570>
    57b3:	48 83 c4 18          	add    $0x18,%rsp
    57b7:	5b                   	pop    %rbx
    57b8:	41 5c                	pop    %r12
    57ba:	41 5d                	pop    %r13
    57bc:	41 5e                	pop    %r14
    57be:	41 5f                	pop    %r15
    57c0:	5d                   	pop    %rbp
    57c1:	c3                   	retq   
    57c2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    57c9:	00 00 00 
    57cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000057d0 <<&T as core::fmt::Debug>::fmt>:
    57d0:	41 56                	push   %r14
    57d2:	53                   	push   %rbx
    57d3:	50                   	push   %rax
    57d4:	48 89 f3             	mov    %rsi,%rbx
    57d7:	4c 8b 37             	mov    (%rdi),%r14
    57da:	48 89 f7             	mov    %rsi,%rdi
    57dd:	ff 15 ad 07 04 00    	callq  *0x407ad(%rip)        # 45f90 <_GLOBAL_OFFSET_TABLE_+0x600>
    57e3:	84 c0                	test   %al,%al
    57e5:	74 13                	je     57fa <<&T as core::fmt::Debug>::fmt+0x2a>
    57e7:	4c 89 f7             	mov    %r14,%rdi
    57ea:	48 89 de             	mov    %rbx,%rsi
    57ed:	48 83 c4 08          	add    $0x8,%rsp
    57f1:	5b                   	pop    %rbx
    57f2:	41 5e                	pop    %r14
    57f4:	ff 25 46 03 04 00    	jmpq   *0x40346(%rip)        # 45b40 <_GLOBAL_OFFSET_TABLE_+0x1b0>
    57fa:	48 89 df             	mov    %rbx,%rdi
    57fd:	ff 15 fd 01 04 00    	callq  *0x401fd(%rip)        # 45a00 <_GLOBAL_OFFSET_TABLE_+0x70>
    5803:	4c 89 f7             	mov    %r14,%rdi
    5806:	48 89 de             	mov    %rbx,%rsi
    5809:	48 83 c4 08          	add    $0x8,%rsp
    580d:	84 c0                	test   %al,%al
    580f:	74 09                	je     581a <<&T as core::fmt::Debug>::fmt+0x4a>
    5811:	5b                   	pop    %rbx
    5812:	41 5e                	pop    %r14
    5814:	ff 25 5e 03 04 00    	jmpq   *0x4035e(%rip)        # 45b78 <_GLOBAL_OFFSET_TABLE_+0x1e8>
    581a:	5b                   	pop    %rbx
    581b:	41 5e                	pop    %r14
    581d:	ff 25 05 05 04 00    	jmpq   *0x40505(%rip)        # 45d28 <_GLOBAL_OFFSET_TABLE_+0x398>
    5823:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    582a:	00 00 00 
    582d:	0f 1f 00             	nopl   (%rax)

0000000000005830 <<&T as core::fmt::Debug>::fmt>:
    5830:	48 8b 3f             	mov    (%rdi),%rdi
    5833:	ff 25 9f 06 04 00    	jmpq   *0x4069f(%rip)        # 45ed8 <_GLOBAL_OFFSET_TABLE_+0x548>
    5839:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005840 <<&T as core::fmt::Debug>::fmt>:
    5840:	48 8b 07             	mov    (%rdi),%rax
    5843:	48 8b 38             	mov    (%rax),%rdi
    5846:	48 8b 40 08          	mov    0x8(%rax),%rax
    584a:	48 8b 40 48          	mov    0x48(%rax),%rax
    584e:	ff e0                	jmpq   *%rax

0000000000005850 <<&T as core::fmt::Display>::fmt>:
    5850:	48 8b 3f             	mov    (%rdi),%rdi
    5853:	ff 25 77 04 04 00    	jmpq   *0x40477(%rip)        # 45cd0 <_GLOBAL_OFFSET_TABLE_+0x340>
    5859:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005860 <<&T as core::fmt::Display>::fmt>:
    5860:	48 89 f2             	mov    %rsi,%rdx
    5863:	48 8b 07             	mov    (%rdi),%rax
    5866:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    586a:	48 89 c7             	mov    %rax,%rdi
    586d:	ff 25 7d 04 04 00    	jmpq   *0x4047d(%rip)        # 45cf0 <_GLOBAL_OFFSET_TABLE_+0x360>
    5873:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    587a:	00 00 00 
    587d:	0f 1f 00             	nopl   (%rax)

0000000000005880 <<&T as core::fmt::UpperHex>::fmt>:
    5880:	48 8b 3f             	mov    (%rdi),%rdi
    5883:	ff 25 ef 02 04 00    	jmpq   *0x402ef(%rip)        # 45b78 <_GLOBAL_OFFSET_TABLE_+0x1e8>
    5889:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005890 <core::fmt::num::<impl core::fmt::Debug for i32>::fmt>:
    5890:	41 56                	push   %r14
    5892:	53                   	push   %rbx
    5893:	50                   	push   %rax
    5894:	48 89 f3             	mov    %rsi,%rbx
    5897:	49 89 fe             	mov    %rdi,%r14
    589a:	48 89 f7             	mov    %rsi,%rdi
    589d:	ff 15 ed 06 04 00    	callq  *0x406ed(%rip)        # 45f90 <_GLOBAL_OFFSET_TABLE_+0x600>
    58a3:	84 c0                	test   %al,%al
    58a5:	74 13                	je     58ba <core::fmt::num::<impl core::fmt::Debug for i32>::fmt+0x2a>
    58a7:	4c 89 f7             	mov    %r14,%rdi
    58aa:	48 89 de             	mov    %rbx,%rsi
    58ad:	48 83 c4 08          	add    $0x8,%rsp
    58b1:	5b                   	pop    %rbx
    58b2:	41 5e                	pop    %r14
    58b4:	ff 25 4e 06 04 00    	jmpq   *0x4064e(%rip)        # 45f08 <_GLOBAL_OFFSET_TABLE_+0x578>
    58ba:	48 89 df             	mov    %rbx,%rdi
    58bd:	ff 15 3d 01 04 00    	callq  *0x4013d(%rip)        # 45a00 <_GLOBAL_OFFSET_TABLE_+0x70>
    58c3:	4c 89 f7             	mov    %r14,%rdi
    58c6:	48 89 de             	mov    %rbx,%rsi
    58c9:	48 83 c4 08          	add    $0x8,%rsp
    58cd:	84 c0                	test   %al,%al
    58cf:	74 09                	je     58da <core::fmt::num::<impl core::fmt::Debug for i32>::fmt+0x4a>
    58d1:	5b                   	pop    %rbx
    58d2:	41 5e                	pop    %r14
    58d4:	ff 25 46 06 04 00    	jmpq   *0x40646(%rip)        # 45f20 <_GLOBAL_OFFSET_TABLE_+0x590>
    58da:	5b                   	pop    %rbx
    58db:	41 5e                	pop    %r14
    58dd:	ff 25 05 05 04 00    	jmpq   *0x40505(%rip)        # 45de8 <_GLOBAL_OFFSET_TABLE_+0x458>
    58e3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    58ea:	00 00 00 
    58ed:	0f 1f 00             	nopl   (%rax)

00000000000058f0 <core::fmt::Write::write_char>:
    58f0:	50                   	push   %rax
    58f1:	89 f0                	mov    %esi,%eax
    58f3:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    58fa:	00 
    58fb:	81 fe 80 00 00 00    	cmp    $0x80,%esi
    5901:	73 15                	jae    5918 <core::fmt::Write::write_char+0x28>
    5903:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    5908:	88 44 24 04          	mov    %al,0x4(%rsp)
    590c:	ba 01 00 00 00       	mov    $0x1,%edx
    5911:	e8 ea 09 01 00       	callq  16300 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str>
    5916:	59                   	pop    %rcx
    5917:	c3                   	retq   
    5918:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    591d:	89 c1                	mov    %eax,%ecx
    591f:	3d 00 08 00 00       	cmp    $0x800,%eax
    5924:	73 1e                	jae    5944 <core::fmt::Write::write_char+0x54>
    5926:	c1 e9 06             	shr    $0x6,%ecx
    5929:	80 c9 c0             	or     $0xc0,%cl
    592c:	88 4c 24 04          	mov    %cl,0x4(%rsp)
    5930:	24 3f                	and    $0x3f,%al
    5932:	0c 80                	or     $0x80,%al
    5934:	88 44 24 05          	mov    %al,0x5(%rsp)
    5938:	ba 02 00 00 00       	mov    $0x2,%edx
    593d:	e8 be 09 01 00       	callq  16300 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str>
    5942:	59                   	pop    %rcx
    5943:	c3                   	retq   
    5944:	3d 00 00 01 00       	cmp    $0x10000,%eax
    5949:	73 2d                	jae    5978 <core::fmt::Write::write_char+0x88>
    594b:	c1 e9 0c             	shr    $0xc,%ecx
    594e:	80 c9 e0             	or     $0xe0,%cl
    5951:	88 4c 24 04          	mov    %cl,0x4(%rsp)
    5955:	89 c1                	mov    %eax,%ecx
    5957:	c1 e9 06             	shr    $0x6,%ecx
    595a:	80 e1 3f             	and    $0x3f,%cl
    595d:	80 c9 80             	or     $0x80,%cl
    5960:	88 4c 24 05          	mov    %cl,0x5(%rsp)
    5964:	24 3f                	and    $0x3f,%al
    5966:	0c 80                	or     $0x80,%al
    5968:	88 44 24 06          	mov    %al,0x6(%rsp)
    596c:	ba 03 00 00 00       	mov    $0x3,%edx
    5971:	e8 8a 09 01 00       	callq  16300 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str>
    5976:	59                   	pop    %rcx
    5977:	c3                   	retq   
    5978:	c1 e9 12             	shr    $0x12,%ecx
    597b:	80 c9 f0             	or     $0xf0,%cl
    597e:	88 4c 24 04          	mov    %cl,0x4(%rsp)
    5982:	89 c1                	mov    %eax,%ecx
    5984:	c1 e9 0c             	shr    $0xc,%ecx
    5987:	80 e1 3f             	and    $0x3f,%cl
    598a:	80 c9 80             	or     $0x80,%cl
    598d:	88 4c 24 05          	mov    %cl,0x5(%rsp)
    5991:	89 c1                	mov    %eax,%ecx
    5993:	c1 e9 06             	shr    $0x6,%ecx
    5996:	80 e1 3f             	and    $0x3f,%cl
    5999:	80 c9 80             	or     $0x80,%cl
    599c:	88 4c 24 06          	mov    %cl,0x6(%rsp)
    59a0:	24 3f                	and    $0x3f,%al
    59a2:	0c 80                	or     $0x80,%al
    59a4:	88 44 24 07          	mov    %al,0x7(%rsp)
    59a8:	ba 04 00 00 00       	mov    $0x4,%edx
    59ad:	e8 4e 09 01 00       	callq  16300 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str>
    59b2:	59                   	pop    %rcx
    59b3:	c3                   	retq   
    59b4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    59bb:	00 00 00 
    59be:	66 90                	xchg   %ax,%ax

00000000000059c0 <core::fmt::Write::write_char>:
    59c0:	50                   	push   %rax
    59c1:	89 f0                	mov    %esi,%eax
    59c3:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    59ca:	00 
    59cb:	81 fe 80 00 00 00    	cmp    $0x80,%esi
    59d1:	73 15                	jae    59e8 <core::fmt::Write::write_char+0x28>
    59d3:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    59d8:	88 44 24 04          	mov    %al,0x4(%rsp)
    59dc:	ba 01 00 00 00       	mov    $0x1,%edx
    59e1:	e8 2a 08 01 00       	callq  16210 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str>
    59e6:	59                   	pop    %rcx
    59e7:	c3                   	retq   
    59e8:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    59ed:	89 c1                	mov    %eax,%ecx
    59ef:	3d 00 08 00 00       	cmp    $0x800,%eax
    59f4:	73 1e                	jae    5a14 <core::fmt::Write::write_char+0x54>
    59f6:	c1 e9 06             	shr    $0x6,%ecx
    59f9:	80 c9 c0             	or     $0xc0,%cl
    59fc:	88 4c 24 04          	mov    %cl,0x4(%rsp)
    5a00:	24 3f                	and    $0x3f,%al
    5a02:	0c 80                	or     $0x80,%al
    5a04:	88 44 24 05          	mov    %al,0x5(%rsp)
    5a08:	ba 02 00 00 00       	mov    $0x2,%edx
    5a0d:	e8 fe 07 01 00       	callq  16210 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str>
    5a12:	59                   	pop    %rcx
    5a13:	c3                   	retq   
    5a14:	3d 00 00 01 00       	cmp    $0x10000,%eax
    5a19:	73 2d                	jae    5a48 <core::fmt::Write::write_char+0x88>
    5a1b:	c1 e9 0c             	shr    $0xc,%ecx
    5a1e:	80 c9 e0             	or     $0xe0,%cl
    5a21:	88 4c 24 04          	mov    %cl,0x4(%rsp)
    5a25:	89 c1                	mov    %eax,%ecx
    5a27:	c1 e9 06             	shr    $0x6,%ecx
    5a2a:	80 e1 3f             	and    $0x3f,%cl
    5a2d:	80 c9 80             	or     $0x80,%cl
    5a30:	88 4c 24 05          	mov    %cl,0x5(%rsp)
    5a34:	24 3f                	and    $0x3f,%al
    5a36:	0c 80                	or     $0x80,%al
    5a38:	88 44 24 06          	mov    %al,0x6(%rsp)
    5a3c:	ba 03 00 00 00       	mov    $0x3,%edx
    5a41:	e8 ca 07 01 00       	callq  16210 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str>
    5a46:	59                   	pop    %rcx
    5a47:	c3                   	retq   
    5a48:	c1 e9 12             	shr    $0x12,%ecx
    5a4b:	80 c9 f0             	or     $0xf0,%cl
    5a4e:	88 4c 24 04          	mov    %cl,0x4(%rsp)
    5a52:	89 c1                	mov    %eax,%ecx
    5a54:	c1 e9 0c             	shr    $0xc,%ecx
    5a57:	80 e1 3f             	and    $0x3f,%cl
    5a5a:	80 c9 80             	or     $0x80,%cl
    5a5d:	88 4c 24 05          	mov    %cl,0x5(%rsp)
    5a61:	89 c1                	mov    %eax,%ecx
    5a63:	c1 e9 06             	shr    $0x6,%ecx
    5a66:	80 e1 3f             	and    $0x3f,%cl
    5a69:	80 c9 80             	or     $0x80,%cl
    5a6c:	88 4c 24 06          	mov    %cl,0x6(%rsp)
    5a70:	24 3f                	and    $0x3f,%al
    5a72:	0c 80                	or     $0x80,%al
    5a74:	88 44 24 07          	mov    %al,0x7(%rsp)
    5a78:	ba 04 00 00 00       	mov    $0x4,%edx
    5a7d:	e8 8e 07 01 00       	callq  16210 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str>
    5a82:	59                   	pop    %rcx
    5a83:	c3                   	retq   
    5a84:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5a8b:	00 00 00 
    5a8e:	66 90                	xchg   %ax,%ax

0000000000005a90 <core::fmt::Write::write_fmt>:
    5a90:	48 83 ec 48          	sub    $0x48,%rsp
    5a94:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    5a99:	0f 10 06             	movups (%rsi),%xmm0
    5a9c:	0f 10 4e 10          	movups 0x10(%rsi),%xmm1
    5aa0:	0f 10 56 20          	movups 0x20(%rsi),%xmm2
    5aa4:	0f 29 54 24 30       	movaps %xmm2,0x30(%rsp)
    5aa9:	0f 29 4c 24 20       	movaps %xmm1,0x20(%rsp)
    5aae:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    5ab3:	48 8d 35 f6 da 03 00 	lea    0x3daf6(%rip),%rsi        # 435b0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x58>
    5aba:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    5abf:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    5ac4:	ff 15 36 03 04 00    	callq  *0x40336(%rip)        # 45e00 <_GLOBAL_OFFSET_TABLE_+0x470>
    5aca:	48 83 c4 48          	add    $0x48,%rsp
    5ace:	c3                   	retq   
    5acf:	90                   	nop

0000000000005ad0 <core::fmt::Write::write_fmt>:
    5ad0:	48 83 ec 48          	sub    $0x48,%rsp
    5ad4:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    5ad9:	0f 10 06             	movups (%rsi),%xmm0
    5adc:	0f 10 4e 10          	movups 0x10(%rsi),%xmm1
    5ae0:	0f 10 56 20          	movups 0x20(%rsi),%xmm2
    5ae4:	0f 29 54 24 30       	movaps %xmm2,0x30(%rsp)
    5ae9:	0f 29 4c 24 20       	movaps %xmm1,0x20(%rsp)
    5aee:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    5af3:	48 8d 35 16 db 03 00 	lea    0x3db16(%rip),%rsi        # 43610 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xb8>
    5afa:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    5aff:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    5b04:	ff 15 f6 02 04 00    	callq  *0x402f6(%rip)        # 45e00 <_GLOBAL_OFFSET_TABLE_+0x470>
    5b0a:	48 83 c4 48          	add    $0x48,%rsp
    5b0e:	c3                   	retq   
    5b0f:	90                   	nop

0000000000005b10 <core::ops::function::FnOnce::call_once{{vtable-shim}}>:
    5b10:	50                   	push   %rax
    5b11:	48 8b 07             	mov    (%rdi),%rax
    5b14:	48 89 04 24          	mov    %rax,(%rsp)
    5b18:	48 89 e7             	mov    %rsp,%rdi
    5b1b:	e8 00 18 01 00       	callq  17320 <std::sync::once::Once::call_once_force::{{closure}}>
    5b20:	58                   	pop    %rax
    5b21:	c3                   	retq   
    5b22:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5b29:	00 00 00 
    5b2c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005b30 <core::ops::function::FnOnce::call_once{{vtable-shim}}>:
    5b30:	e9 6b 26 01 00       	jmpq   181a0 <std::sys_common::backtrace::_print_fmt::{{closure}}>
    5b35:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5b3c:	00 00 00 
    5b3f:	90                   	nop

0000000000005b40 <core::ops::function::FnOnce::call_once{{vtable-shim}}>:
    5b40:	e9 2b 24 01 00       	jmpq   17f70 <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}>
    5b45:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5b4c:	00 00 00 
    5b4f:	90                   	nop

0000000000005b50 <core::ops::function::FnOnce::call_once{{vtable-shim}}>:
    5b50:	50                   	push   %rax
    5b51:	48 8b 07             	mov    (%rdi),%rax
    5b54:	48 89 04 24          	mov    %rax,(%rsp)
    5b58:	48 89 e7             	mov    %rsp,%rdi
    5b5b:	e8 70 15 01 00       	callq  170d0 <std::sync::once::Once::call_once::{{closure}}>
    5b60:	58                   	pop    %rax
    5b61:	c3                   	retq   
    5b62:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5b69:	00 00 00 
    5b6c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005b70 <core::ops::function::FnOnce::call_once{{vtable-shim}}>:
    5b70:	55                   	push   %rbp
    5b71:	53                   	push   %rbx
    5b72:	48 83 ec 18          	sub    $0x18,%rsp
    5b76:	48 89 f0             	mov    %rsi,%rax
    5b79:	48 89 fb             	mov    %rdi,%rbx
    5b7c:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
    5b80:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    5b85:	0f 10 02             	movups (%rdx),%xmm0
    5b88:	0f 29 04 24          	movaps %xmm0,(%rsp)
    5b8c:	48 8b 0f             	mov    (%rdi),%rcx
    5b8f:	48 85 c9             	test   %rcx,%rcx
    5b92:	48 0f 45 cf          	cmovne %rdi,%rcx
    5b96:	8b 57 18             	mov    0x18(%rdi),%edx
    5b99:	48 89 e6             	mov    %rsp,%rsi
    5b9c:	48 89 c7             	mov    %rax,%rdi
    5b9f:	e8 8c 27 01 00       	callq  18330 <std::sys_common::backtrace::output_filename>
    5ba4:	89 c5                	mov    %eax,%ebp
    5ba6:	48 8b 3b             	mov    (%rbx),%rdi
    5ba9:	48 85 ff             	test   %rdi,%rdi
    5bac:	74 14                	je     5bc2 <core::ops::function::FnOnce::call_once{{vtable-shim}}+0x52>
    5bae:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    5bb2:	48 85 f6             	test   %rsi,%rsi
    5bb5:	74 0b                	je     5bc2 <core::ops::function::FnOnce::call_once{{vtable-shim}}+0x52>
    5bb7:	ba 01 00 00 00       	mov    $0x1,%edx
    5bbc:	ff 15 3e 00 04 00    	callq  *0x4003e(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    5bc2:	89 e8                	mov    %ebp,%eax
    5bc4:	48 83 c4 18          	add    $0x18,%rsp
    5bc8:	5b                   	pop    %rbx
    5bc9:	5d                   	pop    %rbp
    5bca:	c3                   	retq   
    5bcb:	48 89 c5             	mov    %rax,%rbp
    5bce:	48 89 df             	mov    %rbx,%rdi
    5bd1:	e8 1a 0f 00 00       	callq  6af0 <core::ptr::drop_in_place>
    5bd6:	48 89 ef             	mov    %rbp,%rdi
    5bd9:	e8 72 f4 ff ff       	callq  5050 <_Unwind_Resume@plt>
    5bde:	0f 0b                	ud2    

0000000000005be0 <core::ops::function::FnOnce::call_once{{vtable-shim}}>:
    5be0:	53                   	push   %rbx
    5be1:	48 83 ec 30          	sub    $0x30,%rsp
    5be5:	48 8b 05 7c 04 04 00 	mov    0x4047c(%rip),%rax        # 46068 <std::io::stdio::stdout::INSTANCE>
    5bec:	48 83 f8 03          	cmp    $0x3,%rax
    5bf0:	75 14                	jne    5c06 <core::ops::function::FnOnce::call_once{{vtable-shim}}+0x26>
    5bf2:	48 8d 1d 77 04 04 00 	lea    0x40477(%rip),%rbx        # 46070 <std::io::stdio::stdout::INSTANCE+0x8>
    5bf9:	48 89 df             	mov    %rbx,%rdi
    5bfc:	ff 15 c6 03 04 00    	callq  *0x403c6(%rip)        # 45fc8 <pthread_mutex_trylock@GLIBC_2.2.5>
    5c02:	85 c0                	test   %eax,%eax
    5c04:	74 06                	je     5c0c <core::ops::function::FnOnce::call_once{{vtable-shim}}+0x2c>
    5c06:	48 83 c4 30          	add    $0x30,%rsp
    5c0a:	5b                   	pop    %rbx
    5c0b:	c3                   	retq   
    5c0c:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
    5c11:	48 c7 44 24 10 01 00 	movq   $0x1,0x10(%rsp)
    5c18:	00 00 
    5c1a:	0f 57 c0             	xorps  %xmm0,%xmm0
    5c1d:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
    5c22:	66 c7 44 24 28 01 00 	movw   $0x1,0x28(%rsp)
    5c29:	48 83 3d 67 04 04 00 	cmpq   $0x0,0x40467(%rip)        # 46098 <std::io::stdio::stdout::INSTANCE+0x30>
    5c30:	00 
    5c31:	75 4a                	jne    5c7d <core::ops::function::FnOnce::call_once{{vtable-shim}}+0x9d>
    5c33:	48 c7 05 5a 04 04 00 	movq   $0xffffffffffffffff,0x4045a(%rip)        # 46098 <std::io::stdio::stdout::INSTANCE+0x30>
    5c3a:	ff ff ff ff 
    5c3e:	48 8d 3d 5b 04 04 00 	lea    0x4045b(%rip),%rdi        # 460a0 <std::io::stdio::stdout::INSTANCE+0x38>
    5c45:	e8 86 10 00 00       	callq  6cd0 <core::ptr::drop_in_place>
    5c4a:	0f 10 44 24 10       	movups 0x10(%rsp),%xmm0
    5c4f:	0f 10 4c 24 20       	movups 0x20(%rsp),%xmm1
    5c54:	0f 11 0d 55 04 04 00 	movups %xmm1,0x40455(%rip)        # 460b0 <std::io::stdio::stdout::INSTANCE+0x48>
    5c5b:	0f 11 05 3e 04 04 00 	movups %xmm0,0x4043e(%rip)        # 460a0 <std::io::stdio::stdout::INSTANCE+0x38>
    5c62:	48 83 05 2e 04 04 00 	addq   $0x1,0x4042e(%rip)        # 46098 <std::io::stdio::stdout::INSTANCE+0x30>
    5c69:	01 
    5c6a:	48 8d 3d ff 03 04 00 	lea    0x403ff(%rip),%rdi        # 46070 <std::io::stdio::stdout::INSTANCE+0x8>
    5c71:	ff 15 f9 00 04 00    	callq  *0x400f9(%rip)        # 45d70 <pthread_mutex_unlock@GLIBC_2.2.5>
    5c77:	48 83 c4 30          	add    $0x30,%rsp
    5c7b:	5b                   	pop    %rbx
    5c7c:	c3                   	retq   
    5c7d:	48 8d 3d 4c 06 03 00 	lea    0x3064c(%rip),%rdi        # 362d0 <_fini+0x124c>
    5c84:	48 8d 0d 75 db 03 00 	lea    0x3db75(%rip),%rcx        # 43800 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2a8>
    5c8b:	4c 8d 05 4e e0 03 00 	lea    0x3e04e(%rip),%r8        # 43ce0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x788>
    5c92:	48 89 e2             	mov    %rsp,%rdx
    5c95:	be 10 00 00 00       	mov    $0x10,%esi
    5c9a:	ff 15 48 ff 03 00    	callq  *0x3ff48(%rip)        # 45be8 <_GLOBAL_OFFSET_TABLE_+0x258>
    5ca0:	0f 0b                	ud2    
    5ca2:	48 89 c3             	mov    %rax,%rbx
    5ca5:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    5caa:	e8 21 10 00 00       	callq  6cd0 <core::ptr::drop_in_place>
    5caf:	eb 27                	jmp    5cd8 <core::ops::function::FnOnce::call_once{{vtable-shim}}+0xf8>
    5cb1:	48 89 c3             	mov    %rax,%rbx
    5cb4:	0f 10 44 24 10       	movups 0x10(%rsp),%xmm0
    5cb9:	0f 10 4c 24 20       	movups 0x20(%rsp),%xmm1
    5cbe:	0f 11 0d eb 03 04 00 	movups %xmm1,0x403eb(%rip)        # 460b0 <std::io::stdio::stdout::INSTANCE+0x48>
    5cc5:	0f 11 05 d4 03 04 00 	movups %xmm0,0x403d4(%rip)        # 460a0 <std::io::stdio::stdout::INSTANCE+0x38>
    5ccc:	48 8d 3d c5 03 04 00 	lea    0x403c5(%rip),%rdi        # 46098 <std::io::stdio::stdout::INSTANCE+0x30>
    5cd3:	e8 88 00 00 00       	callq  5d60 <core::ptr::drop_in_place>
    5cd8:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    5cdd:	e8 8e 0e 00 00       	callq  6b70 <core::ptr::drop_in_place>
    5ce2:	48 89 df             	mov    %rbx,%rdi
    5ce5:	e8 66 f3 ff ff       	callq  5050 <_Unwind_Resume@plt>
    5cea:	0f 0b                	ud2    
    5cec:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005cf0 <core::ptr::drop_in_place>:
    5cf0:	41 56                	push   %r14
    5cf2:	53                   	push   %rbx
    5cf3:	50                   	push   %rax
    5cf4:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    5cf8:	48 85 f6             	test   %rsi,%rsi
    5cfb:	74 2c                	je     5d29 <core::ptr::drop_in_place+0x39>
    5cfd:	4c 8b 37             	mov    (%rdi),%r14
    5d00:	49 8b 46 10          	mov    0x10(%r14),%rax
    5d04:	48 89 c3             	mov    %rax,%rbx
    5d07:	48 29 f3             	sub    %rsi,%rbx
    5d0a:	72 25                	jb     5d31 <core::ptr::drop_in_place+0x41>
    5d0c:	49 c7 46 10 00 00 00 	movq   $0x0,0x10(%r14)
    5d13:	00 
    5d14:	74 13                	je     5d29 <core::ptr::drop_in_place+0x39>
    5d16:	49 8b 3e             	mov    (%r14),%rdi
    5d19:	48 01 fe             	add    %rdi,%rsi
    5d1c:	48 89 da             	mov    %rbx,%rdx
    5d1f:	ff 15 4b 01 04 00    	callq  *0x4014b(%rip)        # 45e70 <memmove@GLIBC_2.2.5>
    5d25:	49 89 5e 10          	mov    %rbx,0x10(%r14)
    5d29:	48 83 c4 08          	add    $0x8,%rsp
    5d2d:	5b                   	pop    %rbx
    5d2e:	41 5e                	pop    %r14
    5d30:	c3                   	retq   
    5d31:	48 8d 15 88 db 03 00 	lea    0x3db88(%rip),%rdx        # 438c0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x368>
    5d38:	48 89 f7             	mov    %rsi,%rdi
    5d3b:	48 89 c6             	mov    %rax,%rsi
    5d3e:	ff 15 ec fc 03 00    	callq  *0x3fcec(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
    5d44:	0f 0b                	ud2    
    5d46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5d4d:	00 00 00 

0000000000005d50 <core::ptr::drop_in_place>:
    5d50:	c3                   	retq   
    5d51:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5d58:	00 00 00 
    5d5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000005d60 <core::ptr::drop_in_place>:
    5d60:	48 83 07 01          	addq   $0x1,(%rdi)
    5d64:	c3                   	retq   
    5d65:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5d6c:	00 00 00 
    5d6f:	90                   	nop

0000000000005d70 <core::ptr::drop_in_place>:
    5d70:	41 57                	push   %r15
    5d72:	41 56                	push   %r14
    5d74:	41 55                	push   %r13
    5d76:	41 54                	push   %r12
    5d78:	53                   	push   %rbx
    5d79:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
    5d80:	49 89 fe             	mov    %rdi,%r14
    5d83:	4c 8b 27             	mov    (%rdi),%r12
    5d86:	48 8b 47 10          	mov    0x10(%rdi),%rax
    5d8a:	48 85 c0             	test   %rax,%rax
    5d8d:	74 49                	je     5dd8 <core::ptr::drop_in_place+0x68>
    5d8f:	4c 6b f8 70          	imul   $0x70,%rax,%r15
    5d93:	31 db                	xor    %ebx,%ebx
    5d95:	4c 8d 2d b4 f5 ff ff 	lea    -0xa4c(%rip),%r13        # 5350 <__rust_dealloc>
    5d9c:	eb 0b                	jmp    5da9 <core::ptr::drop_in_place+0x39>
    5d9e:	66 90                	xchg   %ax,%ax
    5da0:	48 83 c3 70          	add    $0x70,%rbx
    5da4:	49 39 df             	cmp    %rbx,%r15
    5da7:	74 2c                	je     5dd5 <core::ptr::drop_in_place+0x65>
    5da9:	49 83 7c 1c 08 00    	cmpq   $0x0,0x8(%r12,%rbx,1)
    5daf:	74 ef                	je     5da0 <core::ptr::drop_in_place+0x30>
    5db1:	49 8b 74 1c 18       	mov    0x18(%r12,%rbx,1),%rsi
    5db6:	48 85 f6             	test   %rsi,%rsi
    5db9:	74 e5                	je     5da0 <core::ptr::drop_in_place+0x30>
    5dbb:	49 8b 7c 1c 10       	mov    0x10(%r12,%rbx,1),%rdi
    5dc0:	48 85 ff             	test   %rdi,%rdi
    5dc3:	74 db                	je     5da0 <core::ptr::drop_in_place+0x30>
    5dc5:	48 c1 e6 04          	shl    $0x4,%rsi
    5dc9:	74 d5                	je     5da0 <core::ptr::drop_in_place+0x30>
    5dcb:	ba 08 00 00 00       	mov    $0x8,%edx
    5dd0:	41 ff d5             	callq  *%r13
    5dd3:	eb cb                	jmp    5da0 <core::ptr::drop_in_place+0x30>
    5dd5:	4d 8b 26             	mov    (%r14),%r12
    5dd8:	49 8b 46 08          	mov    0x8(%r14),%rax
    5ddc:	48 85 c0             	test   %rax,%rax
    5ddf:	74 1c                	je     5dfd <core::ptr::drop_in_place+0x8d>
    5de1:	4d 85 e4             	test   %r12,%r12
    5de4:	74 17                	je     5dfd <core::ptr::drop_in_place+0x8d>
    5de6:	48 6b f0 70          	imul   $0x70,%rax,%rsi
    5dea:	48 85 f6             	test   %rsi,%rsi
    5ded:	74 0e                	je     5dfd <core::ptr::drop_in_place+0x8d>
    5def:	ba 08 00 00 00       	mov    $0x8,%edx
    5df4:	4c 89 e7             	mov    %r12,%rdi
    5df7:	ff 15 03 fe 03 00    	callq  *0x3fe03(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    5dfd:	49 8b 4e 18          	mov    0x18(%r14),%rcx
    5e01:	48 85 c9             	test   %rcx,%rcx
    5e04:	0f 84 cc 00 00 00    	je     5ed6 <core::ptr::drop_in_place+0x166>
    5e0a:	49 8b 56 20          	mov    0x20(%r14),%rdx
    5e0e:	4d 8b 4e 28          	mov    0x28(%r14),%r9
    5e12:	0f b7 b1 32 05 00 00 	movzwl 0x532(%rcx),%esi
    5e19:	48 85 d2             	test   %rdx,%rdx
    5e1c:	0f 84 cb 00 00 00    	je     5eed <core::ptr::drop_in_place+0x17d>
    5e22:	4c 8d 42 ff          	lea    -0x1(%rdx),%r8
    5e26:	49 89 d2             	mov    %rdx,%r10
    5e29:	49 83 e2 03          	and    $0x3,%r10
    5e2d:	0f 84 e0 01 00 00    	je     6013 <core::ptr::drop_in_place+0x2a3>
    5e33:	31 c0                	xor    %eax,%eax
    5e35:	48 89 cf             	mov    %rcx,%rdi
    5e38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    5e3f:	00 
    5e40:	48 8b 89 38 05 00 00 	mov    0x538(%rcx),%rcx
    5e47:	48 8b bc f7 38 05 00 	mov    0x538(%rdi,%rsi,8),%rdi
    5e4e:	00 
    5e4f:	0f b7 9f 32 05 00 00 	movzwl 0x532(%rdi),%ebx
    5e56:	0f b7 f3             	movzwl %bx,%esi
    5e59:	48 83 c0 01          	add    $0x1,%rax
    5e5d:	49 39 c2             	cmp    %rax,%r10
    5e60:	75 de                	jne    5e40 <core::ptr::drop_in_place+0xd0>
    5e62:	48 29 c2             	sub    %rax,%rdx
    5e65:	49 83 f8 03          	cmp    $0x3,%r8
    5e69:	0f 82 62 00 00 00    	jb     5ed1 <core::ptr::drop_in_place+0x161>
    5e6f:	90                   	nop
    5e70:	48 8b 81 38 05 00 00 	mov    0x538(%rcx),%rax
    5e77:	48 8b 8c f7 38 05 00 	mov    0x538(%rdi,%rsi,8),%rcx
    5e7e:	00 
    5e7f:	0f b7 b1 32 05 00 00 	movzwl 0x532(%rcx),%esi
    5e86:	48 8b 80 38 05 00 00 	mov    0x538(%rax),%rax
    5e8d:	48 8b 8c f1 38 05 00 	mov    0x538(%rcx,%rsi,8),%rcx
    5e94:	00 
    5e95:	0f b7 b1 32 05 00 00 	movzwl 0x532(%rcx),%esi
    5e9c:	48 8b 80 38 05 00 00 	mov    0x538(%rax),%rax
    5ea3:	48 8b b4 f1 38 05 00 	mov    0x538(%rcx,%rsi,8),%rsi
    5eaa:	00 
    5eab:	0f b7 be 32 05 00 00 	movzwl 0x532(%rsi),%edi
    5eb2:	48 8b 88 38 05 00 00 	mov    0x538(%rax),%rcx
    5eb9:	48 8b bc fe 38 05 00 	mov    0x538(%rsi,%rdi,8),%rdi
    5ec0:	00 
    5ec1:	0f b7 9f 32 05 00 00 	movzwl 0x532(%rdi),%ebx
    5ec8:	0f b7 f3             	movzwl %bx,%esi
    5ecb:	48 83 c2 fc          	add    $0xfffffffffffffffc,%rdx
    5ecf:	75 9f                	jne    5e70 <core::ptr::drop_in_place+0x100>
    5ed1:	0f b7 f3             	movzwl %bx,%esi
    5ed4:	eb 1a                	jmp    5ef0 <core::ptr::drop_in_place+0x180>
    5ed6:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    5edd:	00 00 
    5edf:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    5ee6:	00 00 
    5ee8:	45 31 c9             	xor    %r9d,%r9d
    5eeb:	eb 22                	jmp    5f0f <core::ptr::drop_in_place+0x19f>
    5eed:	48 89 cf             	mov    %rcx,%rdi
    5ef0:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    5ef7:	00 
    5ef8:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    5efd:	0f 57 c0             	xorps  %xmm0,%xmm0
    5f00:	0f 11 44 24 10       	movups %xmm0,0x10(%rsp)
    5f05:	48 89 7c 24 20       	mov    %rdi,0x20(%rsp)
    5f0a:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
    5f0f:	4c 89 4c 24 30       	mov    %r9,0x30(%rsp)
    5f14:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
    5f19:	48 89 e6             	mov    %rsp,%rsi
    5f1c:	e8 6f f4 ff ff       	callq  5390 <<alloc::collections::btree::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::next>
    5f21:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    5f26:	48 83 f8 02          	cmp    $0x2,%rax
    5f2a:	0f 85 83 00 00 00    	jne    5fb3 <core::ptr::drop_in_place+0x243>
    5f30:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    5f35:	48 85 ff             	test   %rdi,%rdi
    5f38:	74 68                	je     5fa2 <core::ptr::drop_in_place+0x232>
    5f3a:	48 8b 1c 24          	mov    (%rsp),%rbx
    5f3e:	4c 8b 37             	mov    (%rdi),%r14
    5f41:	48 85 db             	test   %rbx,%rbx
    5f44:	b8 38 05 00 00       	mov    $0x538,%eax
    5f49:	be 98 05 00 00       	mov    $0x598,%esi
    5f4e:	48 0f 44 f0          	cmove  %rax,%rsi
    5f52:	ba 08 00 00 00       	mov    $0x8,%edx
    5f57:	ff 15 a3 fc 03 00    	callq  *0x3fca3(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    5f5d:	4d 85 f6             	test   %r14,%r14
    5f60:	74 40                	je     5fa2 <core::ptr::drop_in_place+0x232>
    5f62:	48 83 c3 01          	add    $0x1,%rbx
    5f66:	4c 8d 3d e3 f3 ff ff 	lea    -0xc1d(%rip),%r15        # 5350 <__rust_dealloc>
    5f6d:	eb 17                	jmp    5f86 <core::ptr::drop_in_place+0x216>
    5f6f:	90                   	nop
    5f70:	48 01 c3             	add    %rax,%rbx
    5f73:	ba 08 00 00 00       	mov    $0x8,%edx
    5f78:	4c 89 f7             	mov    %r14,%rdi
    5f7b:	41 ff d7             	callq  *%r15
    5f7e:	4d 89 e6             	mov    %r12,%r14
    5f81:	4d 85 e4             	test   %r12,%r12
    5f84:	74 1c                	je     5fa2 <core::ptr::drop_in_place+0x232>
    5f86:	4d 8b 26             	mov    (%r14),%r12
    5f89:	31 c0                	xor    %eax,%eax
    5f8b:	4d 85 e4             	test   %r12,%r12
    5f8e:	0f 95 c0             	setne  %al
    5f91:	be 38 05 00 00       	mov    $0x538,%esi
    5f96:	48 85 db             	test   %rbx,%rbx
    5f99:	74 d5                	je     5f70 <core::ptr::drop_in_place+0x200>
    5f9b:	be 98 05 00 00       	mov    $0x598,%esi
    5fa0:	eb ce                	jmp    5f70 <core::ptr::drop_in_place+0x200>
    5fa2:	48 81 c4 b0 00 00 00 	add    $0xb0,%rsp
    5fa9:	5b                   	pop    %rbx
    5faa:	41 5c                	pop    %r12
    5fac:	41 5d                	pop    %r13
    5fae:	41 5e                	pop    %r14
    5fb0:	41 5f                	pop    %r15
    5fb2:	c3                   	retq   
    5fb3:	4c 8d 74 24 38       	lea    0x38(%rsp),%r14
    5fb8:	48 89 e3             	mov    %rsp,%rbx
    5fbb:	4c 8d 3d 8e f3 ff ff 	lea    -0xc72(%rip),%r15        # 5350 <__rust_dealloc>
    5fc2:	e9 23 00 00 00       	jmpq   5fea <core::ptr::drop_in_place+0x27a>
    5fc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5fce:	00 00 
    5fd0:	4c 89 f7             	mov    %r14,%rdi
    5fd3:	48 89 de             	mov    %rbx,%rsi
    5fd6:	e8 b5 f3 ff ff       	callq  5390 <<alloc::collections::btree::map::IntoIter<K,V> as core::iter::traits::iterator::Iterator>::next>
    5fdb:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    5fe0:	48 83 f8 02          	cmp    $0x2,%rax
    5fe4:	0f 84 46 ff ff ff    	je     5f30 <core::ptr::drop_in_place+0x1c0>
    5fea:	48 85 c0             	test   %rax,%rax
    5fed:	74 e1                	je     5fd0 <core::ptr::drop_in_place+0x260>
    5fef:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
    5ff4:	48 85 f6             	test   %rsi,%rsi
    5ff7:	74 d7                	je     5fd0 <core::ptr::drop_in_place+0x260>
    5ff9:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
    5ffe:	48 85 ff             	test   %rdi,%rdi
    6001:	74 cd                	je     5fd0 <core::ptr::drop_in_place+0x260>
    6003:	48 c1 e6 04          	shl    $0x4,%rsi
    6007:	74 c7                	je     5fd0 <core::ptr::drop_in_place+0x260>
    6009:	ba 08 00 00 00       	mov    $0x8,%edx
    600e:	41 ff d7             	callq  *%r15
    6011:	eb bd                	jmp    5fd0 <core::ptr::drop_in_place+0x260>
    6013:	48 89 cf             	mov    %rcx,%rdi
    6016:	49 83 f8 03          	cmp    $0x3,%r8
    601a:	0f 83 50 fe ff ff    	jae    5e70 <core::ptr::drop_in_place+0x100>
    6020:	e9 ac fe ff ff       	jmpq   5ed1 <core::ptr::drop_in_place+0x161>
    6025:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    602c:	00 00 00 
    602f:	90                   	nop

0000000000006030 <core::ptr::drop_in_place>:
    6030:	48 8b 07             	mov    (%rdi),%rax
    6033:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
    6037:	48 8b 50 10          	mov    0x10(%rax),%rdx
    603b:	48 89 51 10          	mov    %rdx,0x10(%rcx)
    603f:	0f 10 00             	movups (%rax),%xmm0
    6042:	0f 11 01             	movups %xmm0,(%rcx)
    6045:	c3                   	retq   
    6046:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    604d:	00 00 00 

0000000000006050 <core::ptr::drop_in_place>:
    6050:	41 57                	push   %r15
    6052:	41 56                	push   %r14
    6054:	53                   	push   %rbx
    6055:	48 89 fb             	mov    %rdi,%rbx
    6058:	48 83 3f 00          	cmpq   $0x0,(%rdi)
    605c:	74 46                	je     60a4 <core::ptr::drop_in_place+0x54>
    605e:	80 7b 08 02          	cmpb   $0x2,0x8(%rbx)
    6062:	72 62                	jb     60c6 <core::ptr::drop_in_place+0x76>
    6064:	4c 8b 7b 10          	mov    0x10(%rbx),%r15
    6068:	49 8b 3f             	mov    (%r15),%rdi
    606b:	49 8b 47 08          	mov    0x8(%r15),%rax
    606f:	ff 10                	callq  *(%rax)
    6071:	49 8b 47 08          	mov    0x8(%r15),%rax
    6075:	48 8b 70 08          	mov    0x8(%rax),%rsi
    6079:	48 85 f6             	test   %rsi,%rsi
    607c:	74 0d                	je     608b <core::ptr::drop_in_place+0x3b>
    607e:	49 8b 3f             	mov    (%r15),%rdi
    6081:	48 8b 50 10          	mov    0x10(%rax),%rdx
    6085:	ff 15 75 fb 03 00    	callq  *0x3fb75(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    608b:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    608f:	be 18 00 00 00       	mov    $0x18,%esi
    6094:	ba 08 00 00 00       	mov    $0x8,%edx
    6099:	5b                   	pop    %rbx
    609a:	41 5e                	pop    %r14
    609c:	41 5f                	pop    %r15
    609e:	ff 25 5c fb 03 00    	jmpq   *0x3fb5c(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    60a4:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    60a8:	48 85 ff             	test   %rdi,%rdi
    60ab:	74 19                	je     60c6 <core::ptr::drop_in_place+0x76>
    60ad:	48 8b 73 10          	mov    0x10(%rbx),%rsi
    60b1:	48 85 f6             	test   %rsi,%rsi
    60b4:	74 10                	je     60c6 <core::ptr::drop_in_place+0x76>
    60b6:	ba 01 00 00 00       	mov    $0x1,%edx
    60bb:	5b                   	pop    %rbx
    60bc:	41 5e                	pop    %r14
    60be:	41 5f                	pop    %r15
    60c0:	ff 25 3a fb 03 00    	jmpq   *0x3fb3a(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    60c6:	5b                   	pop    %rbx
    60c7:	41 5e                	pop    %r14
    60c9:	41 5f                	pop    %r15
    60cb:	c3                   	retq   
    60cc:	49 89 c6             	mov    %rax,%r14
    60cf:	49 8b 3f             	mov    (%r15),%rdi
    60d2:	49 8b 77 08          	mov    0x8(%r15),%rsi
    60d6:	e8 05 38 00 00       	callq  98e0 <alloc::alloc::box_free>
    60db:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    60df:	e8 1c 38 00 00       	callq  9900 <alloc::alloc::box_free>
    60e4:	4c 89 f7             	mov    %r14,%rdi
    60e7:	e8 64 ef ff ff       	callq  5050 <_Unwind_Resume@plt>
    60ec:	0f 0b                	ud2    
    60ee:	66 90                	xchg   %ax,%ax

00000000000060f0 <core::ptr::drop_in_place>:
    60f0:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    60f4:	48 85 f6             	test   %rsi,%rsi
    60f7:	74 19                	je     6112 <core::ptr::drop_in_place+0x22>
    60f9:	48 8b 3f             	mov    (%rdi),%rdi
    60fc:	48 85 ff             	test   %rdi,%rdi
    60ff:	74 11                	je     6112 <core::ptr::drop_in_place+0x22>
    6101:	48 c1 e6 05          	shl    $0x5,%rsi
    6105:	74 0b                	je     6112 <core::ptr::drop_in_place+0x22>
    6107:	ba 08 00 00 00       	mov    $0x8,%edx
    610c:	ff 25 ee fa 03 00    	jmpq   *0x3faee(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    6112:	c3                   	retq   
    6113:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    611a:	00 00 00 
    611d:	0f 1f 00             	nopl   (%rax)

0000000000006120 <core::ptr::drop_in_place>:
    6120:	83 3f 02             	cmpl   $0x2,(%rdi)
    6123:	74 14                	je     6139 <core::ptr::drop_in_place+0x19>
    6125:	48 8b 47 18          	mov    0x18(%rdi),%rax
    6129:	f0 48 83 28 01       	lock subq $0x1,(%rax)
    612e:	75 09                	jne    6139 <core::ptr::drop_in_place+0x19>
    6130:	48 83 c7 18          	add    $0x18,%rdi
    6134:	e9 57 37 00 00       	jmpq   9890 <alloc::sync::Arc<T>::drop_slow>
    6139:	c3                   	retq   
    613a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000006140 <core::ptr::drop_in_place>:
    6140:	41 56                	push   %r14
    6142:	53                   	push   %rbx
    6143:	50                   	push   %rax
    6144:	48 89 fb             	mov    %rdi,%rbx
    6147:	48 8b 3f             	mov    (%rdi),%rdi
    614a:	48 8b 43 08          	mov    0x8(%rbx),%rax
    614e:	ff 10                	callq  *(%rax)
    6150:	48 8b 43 08          	mov    0x8(%rbx),%rax
    6154:	48 8b 70 08          	mov    0x8(%rax),%rsi
    6158:	48 85 f6             	test   %rsi,%rsi
    615b:	74 14                	je     6171 <core::ptr::drop_in_place+0x31>
    615d:	48 8b 3b             	mov    (%rbx),%rdi
    6160:	48 8b 50 10          	mov    0x10(%rax),%rdx
    6164:	48 83 c4 08          	add    $0x8,%rsp
    6168:	5b                   	pop    %rbx
    6169:	41 5e                	pop    %r14
    616b:	ff 25 8f fa 03 00    	jmpq   *0x3fa8f(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    6171:	48 83 c4 08          	add    $0x8,%rsp
    6175:	5b                   	pop    %rbx
    6176:	41 5e                	pop    %r14
    6178:	c3                   	retq   
    6179:	49 89 c6             	mov    %rax,%r14
    617c:	48 8b 3b             	mov    (%rbx),%rdi
    617f:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    6183:	e8 58 37 00 00       	callq  98e0 <alloc::alloc::box_free>
    6188:	4c 89 f7             	mov    %r14,%rdi
    618b:	e8 c0 ee ff ff       	callq  5050 <_Unwind_Resume@plt>
    6190:	0f 0b                	ud2    
    6192:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6199:	00 00 00 
    619c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000061a0 <core::ptr::drop_in_place>:
    61a0:	41 57                	push   %r15
    61a2:	41 56                	push   %r14
    61a4:	53                   	push   %rbx
    61a5:	48 89 fb             	mov    %rdi,%rbx
    61a8:	8a 47 08             	mov    0x8(%rdi),%al
    61ab:	3c 03                	cmp    $0x3,%al
    61ad:	77 0a                	ja     61b9 <core::ptr::drop_in_place+0x19>
    61af:	3c 02                	cmp    $0x2,%al
    61b1:	74 06                	je     61b9 <core::ptr::drop_in_place+0x19>
    61b3:	5b                   	pop    %rbx
    61b4:	41 5e                	pop    %r14
    61b6:	41 5f                	pop    %r15
    61b8:	c3                   	retq   
    61b9:	4c 8b 7b 10          	mov    0x10(%rbx),%r15
    61bd:	49 8b 3f             	mov    (%r15),%rdi
    61c0:	49 8b 47 08          	mov    0x8(%r15),%rax
    61c4:	ff 10                	callq  *(%rax)
    61c6:	49 8b 47 08          	mov    0x8(%r15),%rax
    61ca:	48 8b 70 08          	mov    0x8(%rax),%rsi
    61ce:	48 85 f6             	test   %rsi,%rsi
    61d1:	74 0d                	je     61e0 <core::ptr::drop_in_place+0x40>
    61d3:	49 8b 3f             	mov    (%r15),%rdi
    61d6:	48 8b 50 10          	mov    0x10(%rax),%rdx
    61da:	ff 15 20 fa 03 00    	callq  *0x3fa20(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    61e0:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    61e4:	be 18 00 00 00       	mov    $0x18,%esi
    61e9:	ba 08 00 00 00       	mov    $0x8,%edx
    61ee:	5b                   	pop    %rbx
    61ef:	41 5e                	pop    %r14
    61f1:	41 5f                	pop    %r15
    61f3:	ff 25 07 fa 03 00    	jmpq   *0x3fa07(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    61f9:	49 89 c6             	mov    %rax,%r14
    61fc:	49 8b 3f             	mov    (%r15),%rdi
    61ff:	49 8b 77 08          	mov    0x8(%r15),%rsi
    6203:	e8 d8 36 00 00       	callq  98e0 <alloc::alloc::box_free>
    6208:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    620c:	e8 ef 36 00 00       	callq  9900 <alloc::alloc::box_free>
    6211:	4c 89 f7             	mov    %r14,%rdi
    6214:	e8 37 ee ff ff       	callq  5050 <_Unwind_Resume@plt>
    6219:	0f 0b                	ud2    
    621b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006220 <core::ptr::drop_in_place>:
    6220:	41 57                	push   %r15
    6222:	41 56                	push   %r14
    6224:	41 55                	push   %r13
    6226:	41 54                	push   %r12
    6228:	53                   	push   %rbx
    6229:	49 89 fe             	mov    %rdi,%r14
    622c:	4c 8b 27             	mov    (%rdi),%r12
    622f:	48 8b 47 10          	mov    0x10(%rdi),%rax
    6233:	48 85 c0             	test   %rax,%rax
    6236:	74 65                	je     629d <core::ptr::drop_in_place+0x7d>
    6238:	48 c1 e0 03          	shl    $0x3,%rax
    623c:	4c 8d 3c c0          	lea    (%rax,%rax,8),%r15
    6240:	31 db                	xor    %ebx,%ebx
    6242:	4c 8d 2d 07 f1 ff ff 	lea    -0xef9(%rip),%r13        # 5350 <__rust_dealloc>
    6249:	eb 0e                	jmp    6259 <core::ptr::drop_in_place+0x39>
    624b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6250:	48 83 c3 48          	add    $0x48,%rbx
    6254:	49 39 df             	cmp    %rbx,%r15
    6257:	74 41                	je     629a <core::ptr::drop_in_place+0x7a>
    6259:	49 83 7c 1c 08 00    	cmpq   $0x0,0x8(%r12,%rbx,1)
    625f:	75 ef                	jne    6250 <core::ptr::drop_in_place+0x30>
    6261:	49 8b 44 1c 30       	mov    0x30(%r12,%rbx,1),%rax
    6266:	48 c1 e0 03          	shl    $0x3,%rax
    626a:	48 8d 34 80          	lea    (%rax,%rax,4),%rsi
    626e:	48 85 f6             	test   %rsi,%rsi
    6271:	74 0d                	je     6280 <core::ptr::drop_in_place+0x60>
    6273:	49 8b 7c 1c 28       	mov    0x28(%r12,%rbx,1),%rdi
    6278:	ba 08 00 00 00       	mov    $0x8,%edx
    627d:	41 ff d5             	callq  *%r13
    6280:	49 8b 74 1c 40       	mov    0x40(%r12,%rbx,1),%rsi
    6285:	48 c1 e6 05          	shl    $0x5,%rsi
    6289:	74 c5                	je     6250 <core::ptr::drop_in_place+0x30>
    628b:	49 8b 7c 1c 38       	mov    0x38(%r12,%rbx,1),%rdi
    6290:	ba 08 00 00 00       	mov    $0x8,%edx
    6295:	41 ff d5             	callq  *%r13
    6298:	eb b6                	jmp    6250 <core::ptr::drop_in_place+0x30>
    629a:	4d 8b 26             	mov    (%r14),%r12
    629d:	49 8b 46 08          	mov    0x8(%r14),%rax
    62a1:	48 85 c0             	test   %rax,%rax
    62a4:	74 29                	je     62cf <core::ptr::drop_in_place+0xaf>
    62a6:	4d 85 e4             	test   %r12,%r12
    62a9:	74 24                	je     62cf <core::ptr::drop_in_place+0xaf>
    62ab:	48 c1 e0 03          	shl    $0x3,%rax
    62af:	48 8d 34 c0          	lea    (%rax,%rax,8),%rsi
    62b3:	48 85 f6             	test   %rsi,%rsi
    62b6:	74 17                	je     62cf <core::ptr::drop_in_place+0xaf>
    62b8:	ba 08 00 00 00       	mov    $0x8,%edx
    62bd:	4c 89 e7             	mov    %r12,%rdi
    62c0:	5b                   	pop    %rbx
    62c1:	41 5c                	pop    %r12
    62c3:	41 5d                	pop    %r13
    62c5:	41 5e                	pop    %r14
    62c7:	41 5f                	pop    %r15
    62c9:	ff 25 31 f9 03 00    	jmpq   *0x3f931(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    62cf:	5b                   	pop    %rbx
    62d0:	41 5c                	pop    %r12
    62d2:	41 5d                	pop    %r13
    62d4:	41 5e                	pop    %r14
    62d6:	41 5f                	pop    %r15
    62d8:	c3                   	retq   
    62d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000062e0 <core::ptr::drop_in_place>:
    62e0:	48 83 3f 00          	cmpq   $0x0,(%rdi)
    62e4:	74 23                	je     6309 <core::ptr::drop_in_place+0x29>
    62e6:	48 8b 77 10          	mov    0x10(%rdi),%rsi
    62ea:	48 85 f6             	test   %rsi,%rsi
    62ed:	74 1a                	je     6309 <core::ptr::drop_in_place+0x29>
    62ef:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    62f3:	48 85 ff             	test   %rdi,%rdi
    62f6:	74 11                	je     6309 <core::ptr::drop_in_place+0x29>
    62f8:	48 c1 e6 04          	shl    $0x4,%rsi
    62fc:	74 0b                	je     6309 <core::ptr::drop_in_place+0x29>
    62fe:	ba 08 00 00 00       	mov    $0x8,%edx
    6303:	ff 25 f7 f8 03 00    	jmpq   *0x3f8f7(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    6309:	c3                   	retq   
    630a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000006310 <core::ptr::drop_in_place>:
    6310:	83 3f 02             	cmpl   $0x2,(%rdi)
    6313:	75 01                	jne    6316 <core::ptr::drop_in_place+0x6>
    6315:	c3                   	retq   
    6316:	e9 55 0d 00 00       	jmpq   7070 <core::ptr::drop_in_place>
    631b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006320 <core::ptr::drop_in_place>:
    6320:	41 57                	push   %r15
    6322:	41 56                	push   %r14
    6324:	41 55                	push   %r13
    6326:	41 54                	push   %r12
    6328:	53                   	push   %rbx
    6329:	48 83 3f 00          	cmpq   $0x0,(%rdi)
    632d:	74 0a                	je     6339 <core::ptr::drop_in_place+0x19>
    632f:	5b                   	pop    %rbx
    6330:	41 5c                	pop    %r12
    6332:	41 5d                	pop    %r13
    6334:	41 5e                	pop    %r14
    6336:	41 5f                	pop    %r15
    6338:	c3                   	retq   
    6339:	49 89 fe             	mov    %rdi,%r14
    633c:	48 8b 47 10          	mov    0x10(%rdi),%rax
    6340:	48 85 c0             	test   %rax,%rax
    6343:	74 5f                	je     63a4 <core::ptr::drop_in_place+0x84>
    6345:	49 8b 5e 08          	mov    0x8(%r14),%rbx
    6349:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    634d:	4c 8d 3c c3          	lea    (%rbx,%rax,8),%r15
    6351:	4c 8d 25 f8 ef ff ff 	lea    -0x1008(%rip),%r12        # 5350 <__rust_dealloc>
    6358:	e9 0c 00 00 00       	jmpq   6369 <core::ptr::drop_in_place+0x49>
    635d:	0f 1f 00             	nopl   (%rax)
    6360:	48 83 c3 18          	add    $0x18,%rbx
    6364:	4c 39 fb             	cmp    %r15,%rbx
    6367:	74 1b                	je     6384 <core::ptr::drop_in_place+0x64>
    6369:	48 8b 3b             	mov    (%rbx),%rdi
    636c:	48 85 ff             	test   %rdi,%rdi
    636f:	74 ef                	je     6360 <core::ptr::drop_in_place+0x40>
    6371:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    6375:	48 85 f6             	test   %rsi,%rsi
    6378:	74 e6                	je     6360 <core::ptr::drop_in_place+0x40>
    637a:	ba 01 00 00 00       	mov    $0x1,%edx
    637f:	41 ff d4             	callq  *%r12
    6382:	eb dc                	jmp    6360 <core::ptr::drop_in_place+0x40>
    6384:	49 8b 46 10          	mov    0x10(%r14),%rax
    6388:	48 c1 e0 03          	shl    $0x3,%rax
    638c:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
    6390:	48 85 f6             	test   %rsi,%rsi
    6393:	74 0f                	je     63a4 <core::ptr::drop_in_place+0x84>
    6395:	49 8b 7e 08          	mov    0x8(%r14),%rdi
    6399:	ba 08 00 00 00       	mov    $0x8,%edx
    639e:	ff 15 5c f8 03 00    	callq  *0x3f85c(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    63a4:	4d 8b 7e 20          	mov    0x20(%r14),%r15
    63a8:	4d 85 ff             	test   %r15,%r15
    63ab:	74 82                	je     632f <core::ptr::drop_in_place+0xf>
    63ad:	4d 8b 66 18          	mov    0x18(%r14),%r12
    63b1:	49 c1 e7 05          	shl    $0x5,%r15
    63b5:	31 db                	xor    %ebx,%ebx
    63b7:	4c 8d 2d 92 ef ff ff 	lea    -0x106e(%rip),%r13        # 5350 <__rust_dealloc>
    63be:	eb 09                	jmp    63c9 <core::ptr::drop_in_place+0xa9>
    63c0:	48 83 c3 20          	add    $0x20,%rbx
    63c4:	49 39 df             	cmp    %rbx,%r15
    63c7:	74 21                	je     63ea <core::ptr::drop_in_place+0xca>
    63c9:	49 8b 44 1c 18       	mov    0x18(%r12,%rbx,1),%rax
    63ce:	48 c1 e0 03          	shl    $0x3,%rax
    63d2:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
    63d6:	48 85 f6             	test   %rsi,%rsi
    63d9:	74 e5                	je     63c0 <core::ptr::drop_in_place+0xa0>
    63db:	49 8b 7c 1c 10       	mov    0x10(%r12,%rbx,1),%rdi
    63e0:	ba 08 00 00 00       	mov    $0x8,%edx
    63e5:	41 ff d5             	callq  *%r13
    63e8:	eb d6                	jmp    63c0 <core::ptr::drop_in_place+0xa0>
    63ea:	49 8b 76 20          	mov    0x20(%r14),%rsi
    63ee:	48 c1 e6 05          	shl    $0x5,%rsi
    63f2:	0f 84 37 ff ff ff    	je     632f <core::ptr::drop_in_place+0xf>
    63f8:	49 8b 7e 18          	mov    0x18(%r14),%rdi
    63fc:	ba 08 00 00 00       	mov    $0x8,%edx
    6401:	5b                   	pop    %rbx
    6402:	41 5c                	pop    %r12
    6404:	41 5d                	pop    %r13
    6406:	41 5e                	pop    %r14
    6408:	41 5f                	pop    %r15
    640a:	ff 25 f0 f7 03 00    	jmpq   *0x3f7f0(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>

0000000000006410 <core::ptr::drop_in_place>:
    6410:	41 56                	push   %r14
    6412:	53                   	push   %rbx
    6413:	50                   	push   %rax
    6414:	48 89 fb             	mov    %rdi,%rbx
    6417:	48 8b 3f             	mov    (%rdi),%rdi
    641a:	48 85 ff             	test   %rdi,%rdi
    641d:	74 27                	je     6446 <core::ptr::drop_in_place+0x36>
    641f:	48 8b 43 08          	mov    0x8(%rbx),%rax
    6423:	ff 10                	callq  *(%rax)
    6425:	48 8b 43 08          	mov    0x8(%rbx),%rax
    6429:	48 8b 70 08          	mov    0x8(%rax),%rsi
    642d:	48 85 f6             	test   %rsi,%rsi
    6430:	74 14                	je     6446 <core::ptr::drop_in_place+0x36>
    6432:	48 8b 3b             	mov    (%rbx),%rdi
    6435:	48 8b 50 10          	mov    0x10(%rax),%rdx
    6439:	48 83 c4 08          	add    $0x8,%rsp
    643d:	5b                   	pop    %rbx
    643e:	41 5e                	pop    %r14
    6440:	ff 25 ba f7 03 00    	jmpq   *0x3f7ba(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    6446:	48 83 c4 08          	add    $0x8,%rsp
    644a:	5b                   	pop    %rbx
    644b:	41 5e                	pop    %r14
    644d:	c3                   	retq   
    644e:	49 89 c6             	mov    %rax,%r14
    6451:	48 8b 3b             	mov    (%rbx),%rdi
    6454:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    6458:	e8 83 34 00 00       	callq  98e0 <alloc::alloc::box_free>
    645d:	4c 89 f7             	mov    %r14,%rdi
    6460:	e8 eb eb ff ff       	callq  5050 <_Unwind_Resume@plt>
    6465:	0f 0b                	ud2    
    6467:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    646e:	00 00 

0000000000006470 <core::ptr::drop_in_place>:
    6470:	ff 25 ca f7 03 00    	jmpq   *0x3f7ca(%rip)        # 45c40 <close@GLIBC_2.2.5>
    6476:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    647d:	00 00 00 

0000000000006480 <core::ptr::drop_in_place>:
    6480:	48 8b 07             	mov    (%rdi),%rax
    6483:	f0 48 83 28 01       	lock subq $0x1,(%rax)
    6488:	75 05                	jne    648f <core::ptr::drop_in_place+0xf>
    648a:	e9 01 34 00 00       	jmpq   9890 <alloc::sync::Arc<T>::drop_slow>
    648f:	c3                   	retq   

0000000000006490 <core::ptr::drop_in_place>:
    6490:	41 57                	push   %r15
    6492:	41 56                	push   %r14
    6494:	41 55                	push   %r13
    6496:	41 54                	push   %r12
    6498:	53                   	push   %rbx
    6499:	49 89 fe             	mov    %rdi,%r14
    649c:	4c 8b 2f             	mov    (%rdi),%r13
    649f:	48 8b 47 10          	mov    0x10(%rdi),%rax
    64a3:	48 85 c0             	test   %rax,%rax
    64a6:	0f 84 a2 00 00 00    	je     654e <core::ptr::drop_in_place+0xbe>
    64ac:	48 89 c1             	mov    %rax,%rcx
    64af:	48 c1 e1 09          	shl    $0x9,%rcx
    64b3:	4c 8d 24 c1          	lea    (%rcx,%rax,8),%r12
    64b7:	31 db                	xor    %ebx,%ebx
    64b9:	eb 11                	jmp    64cc <core::ptr::drop_in_place+0x3c>
    64bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    64c0:	48 81 c3 08 02 00 00 	add    $0x208,%rbx
    64c7:	49 39 dc             	cmp    %rbx,%r12
    64ca:	74 7f                	je     654b <core::ptr::drop_in_place+0xbb>
    64cc:	4a 8d 3c 2b          	lea    (%rbx,%r13,1),%rdi
    64d0:	48 83 c7 40          	add    $0x40,%rdi
    64d4:	e8 97 f8 ff ff       	callq  5d70 <core::ptr::drop_in_place>
    64d9:	41 83 bc 1d 60 01 00 	cmpl   $0x2e,0x160(%r13,%rbx,1)
    64e0:	00 2e 
    64e2:	75 1c                	jne    6500 <core::ptr::drop_in_place+0x70>
    64e4:	41 83 bc 1d b0 01 00 	cmpl   $0x2,0x1b0(%r13,%rbx,1)
    64eb:	00 02 
    64ed:	75 2c                	jne    651b <core::ptr::drop_in_place+0x8b>
    64ef:	41 83 bc 1d d8 01 00 	cmpl   $0x2,0x1d8(%r13,%rbx,1)
    64f6:	00 02 
    64f8:	74 c6                	je     64c0 <core::ptr::drop_in_place+0x30>
    64fa:	eb 3a                	jmp    6536 <core::ptr::drop_in_place+0xa6>
    64fc:	0f 1f 40 00          	nopl   0x0(%rax)
    6500:	4a 8d 3c 2b          	lea    (%rbx,%r13,1),%rdi
    6504:	48 81 c7 b8 00 00 00 	add    $0xb8,%rdi
    650b:	e8 b0 03 00 00       	callq  68c0 <core::ptr::drop_in_place>
    6510:	41 83 bc 1d b0 01 00 	cmpl   $0x2,0x1b0(%r13,%rbx,1)
    6517:	00 02 
    6519:	74 d4                	je     64ef <core::ptr::drop_in_place+0x5f>
    651b:	4a 8d 3c 2b          	lea    (%rbx,%r13,1),%rdi
    651f:	48 81 c7 b0 01 00 00 	add    $0x1b0,%rdi
    6526:	e8 f5 fd ff ff       	callq  6320 <core::ptr::drop_in_place>
    652b:	41 83 bc 1d d8 01 00 	cmpl   $0x2,0x1d8(%r13,%rbx,1)
    6532:	00 02 
    6534:	74 8a                	je     64c0 <core::ptr::drop_in_place+0x30>
    6536:	4a 8d 3c 2b          	lea    (%rbx,%r13,1),%rdi
    653a:	48 81 c7 d8 01 00 00 	add    $0x1d8,%rdi
    6541:	e8 2a 0b 00 00       	callq  7070 <core::ptr::drop_in_place>
    6546:	e9 75 ff ff ff       	jmpq   64c0 <core::ptr::drop_in_place+0x30>
    654b:	4d 8b 2e             	mov    (%r14),%r13
    654e:	49 8b 46 08          	mov    0x8(%r14),%rax
    6552:	48 85 c0             	test   %rax,%rax
    6555:	74 2c                	je     6583 <core::ptr::drop_in_place+0xf3>
    6557:	4d 85 ed             	test   %r13,%r13
    655a:	74 27                	je     6583 <core::ptr::drop_in_place+0xf3>
    655c:	48 89 c1             	mov    %rax,%rcx
    655f:	48 c1 e1 09          	shl    $0x9,%rcx
    6563:	48 8d 34 c1          	lea    (%rcx,%rax,8),%rsi
    6567:	48 85 f6             	test   %rsi,%rsi
    656a:	74 17                	je     6583 <core::ptr::drop_in_place+0xf3>
    656c:	ba 08 00 00 00       	mov    $0x8,%edx
    6571:	4c 89 ef             	mov    %r13,%rdi
    6574:	5b                   	pop    %rbx
    6575:	41 5c                	pop    %r12
    6577:	41 5d                	pop    %r13
    6579:	41 5e                	pop    %r14
    657b:	41 5f                	pop    %r15
    657d:	ff 25 7d f6 03 00    	jmpq   *0x3f67d(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    6583:	5b                   	pop    %rbx
    6584:	41 5c                	pop    %r12
    6586:	41 5d                	pop    %r13
    6588:	41 5e                	pop    %r14
    658a:	41 5f                	pop    %r15
    658c:	c3                   	retq   
    658d:	49 89 c7             	mov    %rax,%r15
    6590:	4a 8d 3c 2b          	lea    (%rbx,%r13,1),%rdi
    6594:	48 81 c7 b8 00 00 00 	add    $0xb8,%rdi
    659b:	e8 10 05 00 00       	callq  6ab0 <core::ptr::drop_in_place>
    65a0:	4a 8d 3c 2b          	lea    (%rbx,%r13,1),%rdi
    65a4:	48 81 c7 b0 01 00 00 	add    $0x1b0,%rdi
    65ab:	e8 b0 03 00 00       	callq  6960 <core::ptr::drop_in_place>
    65b0:	4a 8d 3c 2b          	lea    (%rbx,%r13,1),%rdi
    65b4:	48 81 c7 d8 01 00 00 	add    $0x1d8,%rdi
    65bb:	e8 50 fd ff ff       	callq  6310 <core::ptr::drop_in_place>
    65c0:	49 8d 84 24 f8 fd ff 	lea    -0x208(%r12),%rax
    65c7:	ff 
    65c8:	48 39 d8             	cmp    %rbx,%rax
    65cb:	74 2c                	je     65f9 <core::ptr::drop_in_place+0x169>
    65cd:	49 29 dc             	sub    %rbx,%r12
    65d0:	49 81 c4 f8 fd ff ff 	add    $0xfffffffffffffdf8,%r12
    65d7:	4c 01 eb             	add    %r13,%rbx
    65da:	48 81 c3 08 02 00 00 	add    $0x208,%rbx
    65e1:	48 89 df             	mov    %rbx,%rdi
    65e4:	e8 a7 09 00 00       	callq  6f90 <core::ptr::drop_in_place>
    65e9:	48 81 c3 08 02 00 00 	add    $0x208,%rbx
    65f0:	49 81 c4 f8 fd ff ff 	add    $0xfffffffffffffdf8,%r12
    65f7:	75 e8                	jne    65e1 <core::ptr::drop_in_place+0x151>
    65f9:	49 8b 3e             	mov    (%r14),%rdi
    65fc:	49 8b 76 08          	mov    0x8(%r14),%rsi
    6600:	e8 4b 0d 00 00       	callq  7350 <core::ptr::drop_in_place>
    6605:	4c 89 ff             	mov    %r15,%rdi
    6608:	e8 43 ea ff ff       	callq  5050 <_Unwind_Resume@plt>
    660d:	0f 0b                	ud2    
    660f:	49 89 c7             	mov    %rax,%r15
    6612:	eb e5                	jmp    65f9 <core::ptr::drop_in_place+0x169>
    6614:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    661b:	00 00 00 
    661e:	66 90                	xchg   %ax,%ax

0000000000006620 <core::ptr::drop_in_place>:
    6620:	ff 25 5a f4 03 00    	jmpq   *0x3f45a(%rip)        # 45a80 <_GLOBAL_OFFSET_TABLE_+0xf0>
    6626:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    662d:	00 00 00 

0000000000006630 <core::ptr::drop_in_place>:
    6630:	41 57                	push   %r15
    6632:	41 56                	push   %r14
    6634:	41 54                	push   %r12
    6636:	53                   	push   %rbx
    6637:	50                   	push   %rax
    6638:	49 89 fe             	mov    %rdi,%r14
    663b:	48 8b 1f             	mov    (%rdi),%rbx
    663e:	48 8b 47 10          	mov    0x10(%rdi),%rax
    6642:	48 85 c0             	test   %rax,%rax
    6645:	0f 84 3c 00 00 00    	je     6687 <core::ptr::drop_in_place+0x57>
    664b:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    664f:	4c 8d 3c c3          	lea    (%rbx,%rax,8),%r15
    6653:	4c 8d 25 f6 ec ff ff 	lea    -0x130a(%rip),%r12        # 5350 <__rust_dealloc>
    665a:	e9 0a 00 00 00       	jmpq   6669 <core::ptr::drop_in_place+0x39>
    665f:	90                   	nop
    6660:	48 83 c3 18          	add    $0x18,%rbx
    6664:	4c 39 fb             	cmp    %r15,%rbx
    6667:	74 1b                	je     6684 <core::ptr::drop_in_place+0x54>
    6669:	48 8b 3b             	mov    (%rbx),%rdi
    666c:	48 85 ff             	test   %rdi,%rdi
    666f:	74 ef                	je     6660 <core::ptr::drop_in_place+0x30>
    6671:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    6675:	48 85 f6             	test   %rsi,%rsi
    6678:	74 e6                	je     6660 <core::ptr::drop_in_place+0x30>
    667a:	ba 01 00 00 00       	mov    $0x1,%edx
    667f:	41 ff d4             	callq  *%r12
    6682:	eb dc                	jmp    6660 <core::ptr::drop_in_place+0x30>
    6684:	49 8b 1e             	mov    (%r14),%rbx
    6687:	49 8b 46 08          	mov    0x8(%r14),%rax
    668b:	48 85 c0             	test   %rax,%rax
    668e:	74 2b                	je     66bb <core::ptr::drop_in_place+0x8b>
    6690:	48 85 db             	test   %rbx,%rbx
    6693:	74 26                	je     66bb <core::ptr::drop_in_place+0x8b>
    6695:	48 c1 e0 03          	shl    $0x3,%rax
    6699:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
    669d:	48 85 f6             	test   %rsi,%rsi
    66a0:	74 19                	je     66bb <core::ptr::drop_in_place+0x8b>
    66a2:	ba 08 00 00 00       	mov    $0x8,%edx
    66a7:	48 89 df             	mov    %rbx,%rdi
    66aa:	48 83 c4 08          	add    $0x8,%rsp
    66ae:	5b                   	pop    %rbx
    66af:	41 5c                	pop    %r12
    66b1:	41 5e                	pop    %r14
    66b3:	41 5f                	pop    %r15
    66b5:	ff 25 45 f5 03 00    	jmpq   *0x3f545(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    66bb:	48 83 c4 08          	add    $0x8,%rsp
    66bf:	5b                   	pop    %rbx
    66c0:	41 5c                	pop    %r12
    66c2:	41 5e                	pop    %r14
    66c4:	41 5f                	pop    %r15
    66c6:	c3                   	retq   
    66c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    66ce:	00 00 

00000000000066d0 <core::ptr::drop_in_place>:
    66d0:	e9 eb 01 00 00       	jmpq   68c0 <core::ptr::drop_in_place>
    66d5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    66dc:	00 00 00 
    66df:	90                   	nop

00000000000066e0 <core::ptr::drop_in_place>:
    66e0:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    66e4:	48 85 f6             	test   %rsi,%rsi
    66e7:	74 1c                	je     6705 <core::ptr::drop_in_place+0x25>
    66e9:	48 8b 3f             	mov    (%rdi),%rdi
    66ec:	48 85 ff             	test   %rdi,%rdi
    66ef:	74 14                	je     6705 <core::ptr::drop_in_place+0x25>
    66f1:	48 c1 e6 02          	shl    $0x2,%rsi
    66f5:	48 85 f6             	test   %rsi,%rsi
    66f8:	74 0b                	je     6705 <core::ptr::drop_in_place+0x25>
    66fa:	ba 02 00 00 00       	mov    $0x2,%edx
    66ff:	ff 25 fb f4 03 00    	jmpq   *0x3f4fb(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    6705:	c3                   	retq   
    6706:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    670d:	00 00 00 

0000000000006710 <core::ptr::drop_in_place>:
    6710:	48 8b 07             	mov    (%rdi),%rax
    6713:	48 85 c0             	test   %rax,%rax
    6716:	74 1a                	je     6732 <core::ptr::drop_in_place+0x22>
    6718:	c6 00 00             	movb   $0x0,(%rax)
    671b:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    671f:	48 85 f6             	test   %rsi,%rsi
    6722:	74 0e                	je     6732 <core::ptr::drop_in_place+0x22>
    6724:	48 8b 3f             	mov    (%rdi),%rdi
    6727:	ba 01 00 00 00       	mov    $0x1,%edx
    672c:	ff 25 ce f4 03 00    	jmpq   *0x3f4ce(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    6732:	c3                   	retq   
    6733:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    673a:	00 00 00 
    673d:	0f 1f 00             	nopl   (%rax)

0000000000006740 <core::ptr::drop_in_place>:
    6740:	48 89 f8             	mov    %rdi,%rax
    6743:	48 8b 3f             	mov    (%rdi),%rdi
    6746:	48 85 ff             	test   %rdi,%rdi
    6749:	74 14                	je     675f <core::ptr::drop_in_place+0x1f>
    674b:	48 8b 70 08          	mov    0x8(%rax),%rsi
    674f:	48 85 f6             	test   %rsi,%rsi
    6752:	74 0b                	je     675f <core::ptr::drop_in_place+0x1f>
    6754:	ba 01 00 00 00       	mov    $0x1,%edx
    6759:	ff 25 a1 f4 03 00    	jmpq   *0x3f4a1(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    675f:	c3                   	retq   

0000000000006760 <core::ptr::drop_in_place>:
    6760:	41 57                	push   %r15
    6762:	41 56                	push   %r14
    6764:	41 54                	push   %r12
    6766:	53                   	push   %rbx
    6767:	50                   	push   %rax
    6768:	49 89 fe             	mov    %rdi,%r14
    676b:	48 8b 1f             	mov    (%rdi),%rbx
    676e:	48 8b 47 10          	mov    0x10(%rdi),%rax
    6772:	48 85 c0             	test   %rax,%rax
    6775:	0f 84 3c 00 00 00    	je     67b7 <core::ptr::drop_in_place+0x57>
    677b:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    677f:	4c 8d 3c c3          	lea    (%rbx,%rax,8),%r15
    6783:	4c 8d 25 c6 eb ff ff 	lea    -0x143a(%rip),%r12        # 5350 <__rust_dealloc>
    678a:	e9 0a 00 00 00       	jmpq   6799 <core::ptr::drop_in_place+0x39>
    678f:	90                   	nop
    6790:	48 83 c3 18          	add    $0x18,%rbx
    6794:	4c 39 fb             	cmp    %r15,%rbx
    6797:	74 1b                	je     67b4 <core::ptr::drop_in_place+0x54>
    6799:	48 8b 3b             	mov    (%rbx),%rdi
    679c:	48 85 ff             	test   %rdi,%rdi
    679f:	74 ef                	je     6790 <core::ptr::drop_in_place+0x30>
    67a1:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    67a5:	48 85 f6             	test   %rsi,%rsi
    67a8:	74 e6                	je     6790 <core::ptr::drop_in_place+0x30>
    67aa:	ba 01 00 00 00       	mov    $0x1,%edx
    67af:	41 ff d4             	callq  *%r12
    67b2:	eb dc                	jmp    6790 <core::ptr::drop_in_place+0x30>
    67b4:	49 8b 1e             	mov    (%r14),%rbx
    67b7:	49 8b 46 08          	mov    0x8(%r14),%rax
    67bb:	48 85 c0             	test   %rax,%rax
    67be:	74 2b                	je     67eb <core::ptr::drop_in_place+0x8b>
    67c0:	48 85 db             	test   %rbx,%rbx
    67c3:	74 26                	je     67eb <core::ptr::drop_in_place+0x8b>
    67c5:	48 c1 e0 03          	shl    $0x3,%rax
    67c9:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
    67cd:	48 85 f6             	test   %rsi,%rsi
    67d0:	74 19                	je     67eb <core::ptr::drop_in_place+0x8b>
    67d2:	ba 08 00 00 00       	mov    $0x8,%edx
    67d7:	48 89 df             	mov    %rbx,%rdi
    67da:	48 83 c4 08          	add    $0x8,%rsp
    67de:	5b                   	pop    %rbx
    67df:	41 5c                	pop    %r12
    67e1:	41 5e                	pop    %r14
    67e3:	41 5f                	pop    %r15
    67e5:	ff 25 15 f4 03 00    	jmpq   *0x3f415(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    67eb:	48 83 c4 08          	add    $0x8,%rsp
    67ef:	5b                   	pop    %rbx
    67f0:	41 5c                	pop    %r12
    67f2:	41 5e                	pop    %r14
    67f4:	41 5f                	pop    %r15
    67f6:	c3                   	retq   
    67f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    67fe:	00 00 

0000000000006800 <core::ptr::drop_in_place>:
    6800:	48 8b 47 18          	mov    0x18(%rdi),%rax
    6804:	f0 48 83 28 01       	lock subq $0x1,(%rax)
    6809:	75 09                	jne    6814 <core::ptr::drop_in_place+0x14>
    680b:	48 83 c7 18          	add    $0x18,%rdi
    680f:	e9 7c 30 00 00       	jmpq   9890 <alloc::sync::Arc<T>::drop_slow>
    6814:	c3                   	retq   
    6815:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    681c:	00 00 00 
    681f:	90                   	nop

0000000000006820 <core::ptr::drop_in_place>:
    6820:	83 7f 48 03          	cmpl   $0x3,0x48(%rdi)
    6824:	74 21                	je     6847 <core::ptr::drop_in_place+0x27>
    6826:	48 8b 77 20          	mov    0x20(%rdi),%rsi
    682a:	48 85 f6             	test   %rsi,%rsi
    682d:	74 18                	je     6847 <core::ptr::drop_in_place+0x27>
    682f:	48 c1 e6 03          	shl    $0x3,%rsi
    6833:	48 85 f6             	test   %rsi,%rsi
    6836:	74 0f                	je     6847 <core::ptr::drop_in_place+0x27>
    6838:	48 8b 7f 18          	mov    0x18(%rdi),%rdi
    683c:	ba 08 00 00 00       	mov    $0x8,%edx
    6841:	ff 25 b9 f3 03 00    	jmpq   *0x3f3b9(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    6847:	c3                   	retq   
    6848:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    684f:	00 

0000000000006850 <core::ptr::drop_in_place>:
    6850:	48 83 c7 08          	add    $0x8,%rdi
    6854:	e9 37 05 00 00       	jmpq   6d90 <core::ptr::drop_in_place>
    6859:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000006860 <core::ptr::drop_in_place>:
    6860:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    6864:	48 85 f6             	test   %rsi,%rsi
    6867:	74 1c                	je     6885 <core::ptr::drop_in_place+0x25>
    6869:	48 8b 3f             	mov    (%rdi),%rdi
    686c:	48 85 ff             	test   %rdi,%rdi
    686f:	74 14                	je     6885 <core::ptr::drop_in_place+0x25>
    6871:	48 c1 e6 03          	shl    $0x3,%rsi
    6875:	48 85 f6             	test   %rsi,%rsi
    6878:	74 0b                	je     6885 <core::ptr::drop_in_place+0x25>
    687a:	ba 08 00 00 00       	mov    $0x8,%edx
    687f:	ff 25 7b f3 03 00    	jmpq   *0x3f37b(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    6885:	c3                   	retq   
    6886:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    688d:	00 00 00 

0000000000006890 <core::ptr::drop_in_place>:
    6890:	48 83 3f 00          	cmpq   $0x0,(%rdi)
    6894:	74 20                	je     68b6 <core::ptr::drop_in_place+0x26>
    6896:	48 89 f8             	mov    %rdi,%rax
    6899:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    689d:	48 85 ff             	test   %rdi,%rdi
    68a0:	74 14                	je     68b6 <core::ptr::drop_in_place+0x26>
    68a2:	48 8b 70 10          	mov    0x10(%rax),%rsi
    68a6:	48 85 f6             	test   %rsi,%rsi
    68a9:	74 0b                	je     68b6 <core::ptr::drop_in_place+0x26>
    68ab:	ba 01 00 00 00       	mov    $0x1,%edx
    68b0:	ff 25 4a f3 03 00    	jmpq   *0x3f34a(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    68b6:	c3                   	retq   
    68b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    68be:	00 00 

00000000000068c0 <core::ptr::drop_in_place>:
    68c0:	53                   	push   %rbx
    68c1:	48 89 fb             	mov    %rdi,%rbx
    68c4:	48 8b 77 30          	mov    0x30(%rdi),%rsi
    68c8:	48 85 f6             	test   %rsi,%rsi
    68cb:	74 1d                	je     68ea <core::ptr::drop_in_place+0x2a>
    68cd:	48 8b 7b 28          	mov    0x28(%rbx),%rdi
    68d1:	48 85 ff             	test   %rdi,%rdi
    68d4:	74 14                	je     68ea <core::ptr::drop_in_place+0x2a>
    68d6:	48 c1 e6 02          	shl    $0x2,%rsi
    68da:	48 85 f6             	test   %rsi,%rsi
    68dd:	74 0b                	je     68ea <core::ptr::drop_in_place+0x2a>
    68df:	ba 02 00 00 00       	mov    $0x2,%edx
    68e4:	ff 15 16 f3 03 00    	callq  *0x3f316(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    68ea:	48 8b 43 48          	mov    0x48(%rbx),%rax
    68ee:	48 85 c0             	test   %rax,%rax
    68f1:	74 21                	je     6914 <core::ptr::drop_in_place+0x54>
    68f3:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
    68f7:	48 85 ff             	test   %rdi,%rdi
    68fa:	74 18                	je     6914 <core::ptr::drop_in_place+0x54>
    68fc:	48 c1 e0 03          	shl    $0x3,%rax
    6900:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
    6904:	48 85 f6             	test   %rsi,%rsi
    6907:	74 0b                	je     6914 <core::ptr::drop_in_place+0x54>
    6909:	ba 08 00 00 00       	mov    $0x8,%edx
    690e:	ff 15 ec f2 03 00    	callq  *0x3f2ec(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    6914:	48 8b 73 60          	mov    0x60(%rbx),%rsi
    6918:	48 85 f6             	test   %rsi,%rsi
    691b:	74 1d                	je     693a <core::ptr::drop_in_place+0x7a>
    691d:	48 8b 7b 58          	mov    0x58(%rbx),%rdi
    6921:	48 85 ff             	test   %rdi,%rdi
    6924:	74 14                	je     693a <core::ptr::drop_in_place+0x7a>
    6926:	48 c1 e6 02          	shl    $0x2,%rsi
    692a:	48 85 f6             	test   %rsi,%rsi
    692d:	74 0b                	je     693a <core::ptr::drop_in_place+0x7a>
    692f:	ba 02 00 00 00       	mov    $0x2,%edx
    6934:	ff 15 c6 f2 03 00    	callq  *0x3f2c6(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    693a:	48 8b 73 78          	mov    0x78(%rbx),%rsi
    693e:	48 85 f6             	test   %rsi,%rsi
    6941:	74 1b                	je     695e <core::ptr::drop_in_place+0x9e>
    6943:	48 8b 7b 70          	mov    0x70(%rbx),%rdi
    6947:	48 85 ff             	test   %rdi,%rdi
    694a:	74 12                	je     695e <core::ptr::drop_in_place+0x9e>
    694c:	48 c1 e6 06          	shl    $0x6,%rsi
    6950:	74 0c                	je     695e <core::ptr::drop_in_place+0x9e>
    6952:	ba 08 00 00 00       	mov    $0x8,%edx
    6957:	5b                   	pop    %rbx
    6958:	ff 25 a2 f2 03 00    	jmpq   *0x3f2a2(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    695e:	5b                   	pop    %rbx
    695f:	c3                   	retq   

0000000000006960 <core::ptr::drop_in_place>:
    6960:	83 3f 02             	cmpl   $0x2,(%rdi)
    6963:	75 01                	jne    6966 <core::ptr::drop_in_place+0x6>
    6965:	c3                   	retq   
    6966:	e9 b5 f9 ff ff       	jmpq   6320 <core::ptr::drop_in_place>
    696b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006970 <core::ptr::drop_in_place>:
    6970:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    6974:	48 85 f6             	test   %rsi,%rsi
    6977:	74 14                	je     698d <core::ptr::drop_in_place+0x1d>
    6979:	48 c1 e6 04          	shl    $0x4,%rsi
    697d:	74 0e                	je     698d <core::ptr::drop_in_place+0x1d>
    697f:	48 8b 3f             	mov    (%rdi),%rdi
    6982:	ba 08 00 00 00       	mov    $0x8,%edx
    6987:	ff 25 73 f2 03 00    	jmpq   *0x3f273(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    698d:	c3                   	retq   
    698e:	66 90                	xchg   %ax,%ax

0000000000006990 <core::ptr::drop_in_place>:
    6990:	48 8b 07             	mov    (%rdi),%rax
    6993:	c6 00 00             	movb   $0x0,(%rax)
    6996:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    699a:	48 85 f6             	test   %rsi,%rsi
    699d:	74 0e                	je     69ad <core::ptr::drop_in_place+0x1d>
    699f:	48 8b 3f             	mov    (%rdi),%rdi
    69a2:	ba 01 00 00 00       	mov    $0x1,%edx
    69a7:	ff 25 53 f2 03 00    	jmpq   *0x3f253(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    69ad:	c3                   	retq   
    69ae:	66 90                	xchg   %ax,%ax

00000000000069b0 <core::ptr::drop_in_place>:
    69b0:	48 8b 47 08          	mov    0x8(%rdi),%rax
    69b4:	48 85 c0             	test   %rax,%rax
    69b7:	74 20                	je     69d9 <core::ptr::drop_in_place+0x29>
    69b9:	48 8b 3f             	mov    (%rdi),%rdi
    69bc:	48 85 ff             	test   %rdi,%rdi
    69bf:	74 18                	je     69d9 <core::ptr::drop_in_place+0x29>
    69c1:	48 c1 e0 03          	shl    $0x3,%rax
    69c5:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
    69c9:	48 85 f6             	test   %rsi,%rsi
    69cc:	74 0b                	je     69d9 <core::ptr::drop_in_place+0x29>
    69ce:	ba 08 00 00 00       	mov    $0x8,%edx
    69d3:	ff 25 27 f2 03 00    	jmpq   *0x3f227(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    69d9:	c3                   	retq   
    69da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000069e0 <core::ptr::drop_in_place>:
    69e0:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    69e4:	48 85 f6             	test   %rsi,%rsi
    69e7:	74 19                	je     6a02 <core::ptr::drop_in_place+0x22>
    69e9:	48 8b 3f             	mov    (%rdi),%rdi
    69ec:	48 85 ff             	test   %rdi,%rdi
    69ef:	74 11                	je     6a02 <core::ptr::drop_in_place+0x22>
    69f1:	48 c1 e6 04          	shl    $0x4,%rsi
    69f5:	74 0b                	je     6a02 <core::ptr::drop_in_place+0x22>
    69f7:	ba 08 00 00 00       	mov    $0x8,%edx
    69fc:	ff 25 fe f1 03 00    	jmpq   *0x3f1fe(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    6a02:	c3                   	retq   
    6a03:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6a0a:	00 00 00 
    6a0d:	0f 1f 00             	nopl   (%rax)

0000000000006a10 <core::ptr::drop_in_place>:
    6a10:	41 57                	push   %r15
    6a12:	41 56                	push   %r14
    6a14:	41 55                	push   %r13
    6a16:	41 54                	push   %r12
    6a18:	53                   	push   %rbx
    6a19:	49 89 fe             	mov    %rdi,%r14
    6a1c:	4c 8b 27             	mov    (%rdi),%r12
    6a1f:	4c 8b 7f 10          	mov    0x10(%rdi),%r15
    6a23:	4d 85 ff             	test   %r15,%r15
    6a26:	74 45                	je     6a6d <core::ptr::drop_in_place+0x5d>
    6a28:	49 c1 e7 05          	shl    $0x5,%r15
    6a2c:	31 db                	xor    %ebx,%ebx
    6a2e:	4c 8d 2d 1b e9 ff ff 	lea    -0x16e5(%rip),%r13        # 5350 <__rust_dealloc>
    6a35:	eb 12                	jmp    6a49 <core::ptr::drop_in_place+0x39>
    6a37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6a3e:	00 00 
    6a40:	48 83 c3 20          	add    $0x20,%rbx
    6a44:	49 39 df             	cmp    %rbx,%r15
    6a47:	74 21                	je     6a6a <core::ptr::drop_in_place+0x5a>
    6a49:	49 8b 44 1c 18       	mov    0x18(%r12,%rbx,1),%rax
    6a4e:	48 c1 e0 03          	shl    $0x3,%rax
    6a52:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
    6a56:	48 85 f6             	test   %rsi,%rsi
    6a59:	74 e5                	je     6a40 <core::ptr::drop_in_place+0x30>
    6a5b:	49 8b 7c 1c 10       	mov    0x10(%r12,%rbx,1),%rdi
    6a60:	ba 08 00 00 00       	mov    $0x8,%edx
    6a65:	41 ff d5             	callq  *%r13
    6a68:	eb d6                	jmp    6a40 <core::ptr::drop_in_place+0x30>
    6a6a:	4d 8b 26             	mov    (%r14),%r12
    6a6d:	49 8b 76 08          	mov    0x8(%r14),%rsi
    6a71:	48 85 f6             	test   %rsi,%rsi
    6a74:	74 22                	je     6a98 <core::ptr::drop_in_place+0x88>
    6a76:	4d 85 e4             	test   %r12,%r12
    6a79:	74 1d                	je     6a98 <core::ptr::drop_in_place+0x88>
    6a7b:	48 c1 e6 05          	shl    $0x5,%rsi
    6a7f:	74 17                	je     6a98 <core::ptr::drop_in_place+0x88>
    6a81:	ba 08 00 00 00       	mov    $0x8,%edx
    6a86:	4c 89 e7             	mov    %r12,%rdi
    6a89:	5b                   	pop    %rbx
    6a8a:	41 5c                	pop    %r12
    6a8c:	41 5d                	pop    %r13
    6a8e:	41 5e                	pop    %r14
    6a90:	41 5f                	pop    %r15
    6a92:	ff 25 68 f1 03 00    	jmpq   *0x3f168(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    6a98:	5b                   	pop    %rbx
    6a99:	41 5c                	pop    %r12
    6a9b:	41 5d                	pop    %r13
    6a9d:	41 5e                	pop    %r14
    6a9f:	41 5f                	pop    %r15
    6aa1:	c3                   	retq   
    6aa2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6aa9:	00 00 00 
    6aac:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006ab0 <core::ptr::drop_in_place>:
    6ab0:	83 bf a8 00 00 00 2e 	cmpl   $0x2e,0xa8(%rdi)
    6ab7:	75 01                	jne    6aba <core::ptr::drop_in_place+0xa>
    6ab9:	c3                   	retq   
    6aba:	e9 01 fe ff ff       	jmpq   68c0 <core::ptr::drop_in_place>
    6abf:	90                   	nop

0000000000006ac0 <core::ptr::drop_in_place>:
    6ac0:	48 89 f8             	mov    %rdi,%rax
    6ac3:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    6ac7:	48 85 ff             	test   %rdi,%rdi
    6aca:	74 14                	je     6ae0 <core::ptr::drop_in_place+0x20>
    6acc:	48 8b 70 10          	mov    0x10(%rax),%rsi
    6ad0:	48 85 f6             	test   %rsi,%rsi
    6ad3:	74 0b                	je     6ae0 <core::ptr::drop_in_place+0x20>
    6ad5:	ba 01 00 00 00       	mov    $0x1,%edx
    6ada:	ff 25 20 f1 03 00    	jmpq   *0x3f120(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    6ae0:	c3                   	retq   
    6ae1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6ae8:	00 00 00 
    6aeb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006af0 <core::ptr::drop_in_place>:
    6af0:	48 89 f8             	mov    %rdi,%rax
    6af3:	48 8b 3f             	mov    (%rdi),%rdi
    6af6:	48 85 ff             	test   %rdi,%rdi
    6af9:	74 14                	je     6b0f <core::ptr::drop_in_place+0x1f>
    6afb:	48 8b 70 08          	mov    0x8(%rax),%rsi
    6aff:	48 85 f6             	test   %rsi,%rsi
    6b02:	74 0b                	je     6b0f <core::ptr::drop_in_place+0x1f>
    6b04:	ba 01 00 00 00       	mov    $0x1,%edx
    6b09:	ff 25 f1 f0 03 00    	jmpq   *0x3f0f1(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    6b0f:	c3                   	retq   

0000000000006b10 <core::ptr::drop_in_place>:
    6b10:	41 56                	push   %r14
    6b12:	53                   	push   %rbx
    6b13:	50                   	push   %rax
    6b14:	48 89 fb             	mov    %rdi,%rbx
    6b17:	48 8b 3f             	mov    (%rdi),%rdi
    6b1a:	48 8b 43 08          	mov    0x8(%rbx),%rax
    6b1e:	ff 10                	callq  *(%rax)
    6b20:	48 8b 43 08          	mov    0x8(%rbx),%rax
    6b24:	48 8b 70 08          	mov    0x8(%rax),%rsi
    6b28:	48 85 f6             	test   %rsi,%rsi
    6b2b:	74 14                	je     6b41 <core::ptr::drop_in_place+0x31>
    6b2d:	48 8b 3b             	mov    (%rbx),%rdi
    6b30:	48 8b 50 10          	mov    0x10(%rax),%rdx
    6b34:	48 83 c4 08          	add    $0x8,%rsp
    6b38:	5b                   	pop    %rbx
    6b39:	41 5e                	pop    %r14
    6b3b:	ff 25 bf f0 03 00    	jmpq   *0x3f0bf(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    6b41:	48 83 c4 08          	add    $0x8,%rsp
    6b45:	5b                   	pop    %rbx
    6b46:	41 5e                	pop    %r14
    6b48:	c3                   	retq   
    6b49:	49 89 c6             	mov    %rax,%r14
    6b4c:	48 8b 3b             	mov    (%rbx),%rdi
    6b4f:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    6b53:	e8 88 2d 00 00       	callq  98e0 <alloc::alloc::box_free>
    6b58:	4c 89 f7             	mov    %r14,%rdi
    6b5b:	e8 f0 e4 ff ff       	callq  5050 <_Unwind_Resume@plt>
    6b60:	0f 0b                	ud2    
    6b62:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6b69:	00 00 00 
    6b6c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006b70 <core::ptr::drop_in_place>:
    6b70:	48 8b 3f             	mov    (%rdi),%rdi
    6b73:	ff 25 f7 f1 03 00    	jmpq   *0x3f1f7(%rip)        # 45d70 <pthread_mutex_unlock@GLIBC_2.2.5>
    6b79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000006b80 <core::ptr::drop_in_place>:
    6b80:	48 8d 3d 69 f5 03 00 	lea    0x3f569(%rip),%rdi        # 460f0 <std::sys_common::backtrace::lock::LOCK>
    6b87:	ff 25 e3 f1 03 00    	jmpq   *0x3f1e3(%rip)        # 45d70 <pthread_mutex_unlock@GLIBC_2.2.5>
    6b8d:	0f 1f 00             	nopl   (%rax)

0000000000006b90 <core::ptr::drop_in_place>:
    6b90:	48 89 f8             	mov    %rdi,%rax
    6b93:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    6b97:	48 85 ff             	test   %rdi,%rdi
    6b9a:	74 14                	je     6bb0 <core::ptr::drop_in_place+0x20>
    6b9c:	48 8b 70 10          	mov    0x10(%rax),%rsi
    6ba0:	48 85 f6             	test   %rsi,%rsi
    6ba3:	74 0b                	je     6bb0 <core::ptr::drop_in_place+0x20>
    6ba5:	ba 01 00 00 00       	mov    $0x1,%edx
    6baa:	ff 25 50 f0 03 00    	jmpq   *0x3f050(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    6bb0:	c3                   	retq   
    6bb1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6bb8:	00 00 00 
    6bbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006bc0 <core::ptr::drop_in_place>:
    6bc0:	41 56                	push   %r14
    6bc2:	53                   	push   %rbx
    6bc3:	50                   	push   %rax
    6bc4:	83 3f 00             	cmpl   $0x0,(%rdi)
    6bc7:	74 2f                	je     6bf8 <core::ptr::drop_in_place+0x38>
    6bc9:	48 89 fb             	mov    %rdi,%rbx
    6bcc:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    6bd0:	48 8b 43 10          	mov    0x10(%rbx),%rax
    6bd4:	ff 10                	callq  *(%rax)
    6bd6:	48 8b 43 10          	mov    0x10(%rbx),%rax
    6bda:	48 8b 70 08          	mov    0x8(%rax),%rsi
    6bde:	48 85 f6             	test   %rsi,%rsi
    6be1:	74 15                	je     6bf8 <core::ptr::drop_in_place+0x38>
    6be3:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    6be7:	48 8b 50 10          	mov    0x10(%rax),%rdx
    6beb:	48 83 c4 08          	add    $0x8,%rsp
    6bef:	5b                   	pop    %rbx
    6bf0:	41 5e                	pop    %r14
    6bf2:	ff 25 08 f0 03 00    	jmpq   *0x3f008(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    6bf8:	48 83 c4 08          	add    $0x8,%rsp
    6bfc:	5b                   	pop    %rbx
    6bfd:	41 5e                	pop    %r14
    6bff:	c3                   	retq   
    6c00:	49 89 c6             	mov    %rax,%r14
    6c03:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    6c07:	48 8b 73 10          	mov    0x10(%rbx),%rsi
    6c0b:	e8 d0 2c 00 00       	callq  98e0 <alloc::alloc::box_free>
    6c10:	4c 89 f7             	mov    %r14,%rdi
    6c13:	e8 38 e4 ff ff       	callq  5050 <_Unwind_Resume@plt>
    6c18:	0f 0b                	ud2    
    6c1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000006c20 <core::ptr::drop_in_place>:
    6c20:	48 8b 07             	mov    (%rdi),%rax
    6c23:	48 8b 70 08          	mov    0x8(%rax),%rsi
    6c27:	48 85 f6             	test   %rsi,%rsi
    6c2a:	74 14                	je     6c40 <core::ptr::drop_in_place+0x20>
    6c2c:	48 c1 e6 04          	shl    $0x4,%rsi
    6c30:	74 0e                	je     6c40 <core::ptr::drop_in_place+0x20>
    6c32:	48 8b 38             	mov    (%rax),%rdi
    6c35:	ba 08 00 00 00       	mov    $0x8,%edx
    6c3a:	ff 25 c0 ef 03 00    	jmpq   *0x3efc0(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    6c40:	c3                   	retq   
    6c41:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6c48:	00 00 00 
    6c4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006c50 <core::ptr::drop_in_place>:
    6c50:	48 8b 07             	mov    (%rdi),%rax
    6c53:	48 85 c0             	test   %rax,%rax
    6c56:	74 0c                	je     6c64 <core::ptr::drop_in_place+0x14>
    6c58:	f0 48 83 28 01       	lock subq $0x1,(%rax)
    6c5d:	75 05                	jne    6c64 <core::ptr::drop_in_place+0x14>
    6c5f:	e9 2c 2c 00 00       	jmpq   9890 <alloc::sync::Arc<T>::drop_slow>
    6c64:	c3                   	retq   
    6c65:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6c6c:	00 00 00 
    6c6f:	90                   	nop

0000000000006c70 <core::ptr::drop_in_place>:
    6c70:	53                   	push   %rbx
    6c71:	48 89 fb             	mov    %rdi,%rbx
    6c74:	48 8b 3f             	mov    (%rdi),%rdi
    6c77:	48 85 ff             	test   %rdi,%rdi
    6c7a:	74 14                	je     6c90 <core::ptr::drop_in_place+0x20>
    6c7c:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    6c80:	48 85 f6             	test   %rsi,%rsi
    6c83:	74 0b                	je     6c90 <core::ptr::drop_in_place+0x20>
    6c85:	ba 01 00 00 00       	mov    $0x1,%edx
    6c8a:	ff 15 70 ef 03 00    	callq  *0x3ef70(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    6c90:	48 8b 73 20          	mov    0x20(%rbx),%rsi
    6c94:	48 85 f6             	test   %rsi,%rsi
    6c97:	74 1b                	je     6cb4 <core::ptr::drop_in_place+0x44>
    6c99:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
    6c9d:	48 85 ff             	test   %rdi,%rdi
    6ca0:	74 12                	je     6cb4 <core::ptr::drop_in_place+0x44>
    6ca2:	48 c1 e6 04          	shl    $0x4,%rsi
    6ca6:	74 0c                	je     6cb4 <core::ptr::drop_in_place+0x44>
    6ca8:	ba 08 00 00 00       	mov    $0x8,%edx
    6cad:	5b                   	pop    %rbx
    6cae:	ff 25 4c ef 03 00    	jmpq   *0x3ef4c(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    6cb4:	5b                   	pop    %rbx
    6cb5:	c3                   	retq   
    6cb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6cbd:	00 00 00 

0000000000006cc0 <core::ptr::drop_in_place>:
    6cc0:	ff 25 62 f1 03 00    	jmpq   *0x3f162(%rip)        # 45e28 <munmap@GLIBC_2.2.5>
    6cc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6ccd:	00 00 00 

0000000000006cd0 <core::ptr::drop_in_place>:
    6cd0:	41 57                	push   %r15
    6cd2:	41 56                	push   %r14
    6cd4:	53                   	push   %rbx
    6cd5:	48 89 fb             	mov    %rdi,%rbx
    6cd8:	80 7f 18 00          	cmpb   $0x0,0x18(%rdi)
    6cdc:	74 19                	je     6cf7 <core::ptr::drop_in_place+0x27>
    6cde:	80 7b 19 00          	cmpb   $0x0,0x19(%rbx)
    6ce2:	75 13                	jne    6cf7 <core::ptr::drop_in_place+0x27>
    6ce4:	48 89 df             	mov    %rbx,%rdi
    6ce7:	e8 64 d6 00 00       	callq  14350 <std::io::buffered::BufWriter<W>::flush_buf>
    6cec:	49 89 d6             	mov    %rdx,%r14
    6cef:	3c 03                	cmp    $0x3,%al
    6cf1:	77 25                	ja     6d18 <core::ptr::drop_in_place+0x48>
    6cf3:	3c 02                	cmp    $0x2,%al
    6cf5:	74 21                	je     6d18 <core::ptr::drop_in_place+0x48>
    6cf7:	48 8b 3b             	mov    (%rbx),%rdi
    6cfa:	48 85 ff             	test   %rdi,%rdi
    6cfd:	74 57                	je     6d56 <core::ptr::drop_in_place+0x86>
    6cff:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    6d03:	48 85 f6             	test   %rsi,%rsi
    6d06:	74 4e                	je     6d56 <core::ptr::drop_in_place+0x86>
    6d08:	ba 01 00 00 00       	mov    $0x1,%edx
    6d0d:	5b                   	pop    %rbx
    6d0e:	41 5e                	pop    %r14
    6d10:	41 5f                	pop    %r15
    6d12:	ff 25 e8 ee 03 00    	jmpq   *0x3eee8(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    6d18:	49 8b 3e             	mov    (%r14),%rdi
    6d1b:	49 8b 46 08          	mov    0x8(%r14),%rax
    6d1f:	ff 10                	callq  *(%rax)
    6d21:	49 8b 46 08          	mov    0x8(%r14),%rax
    6d25:	48 8b 70 08          	mov    0x8(%rax),%rsi
    6d29:	48 85 f6             	test   %rsi,%rsi
    6d2c:	74 0d                	je     6d3b <core::ptr::drop_in_place+0x6b>
    6d2e:	49 8b 3e             	mov    (%r14),%rdi
    6d31:	48 8b 50 10          	mov    0x10(%rax),%rdx
    6d35:	ff 15 c5 ee 03 00    	callq  *0x3eec5(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    6d3b:	be 18 00 00 00       	mov    $0x18,%esi
    6d40:	ba 08 00 00 00       	mov    $0x8,%edx
    6d45:	4c 89 f7             	mov    %r14,%rdi
    6d48:	ff 15 b2 ee 03 00    	callq  *0x3eeb2(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    6d4e:	48 8b 3b             	mov    (%rbx),%rdi
    6d51:	48 85 ff             	test   %rdi,%rdi
    6d54:	75 a9                	jne    6cff <core::ptr::drop_in_place+0x2f>
    6d56:	5b                   	pop    %rbx
    6d57:	41 5e                	pop    %r14
    6d59:	41 5f                	pop    %r15
    6d5b:	c3                   	retq   
    6d5c:	49 89 c7             	mov    %rax,%r15
    6d5f:	49 8b 3e             	mov    (%r14),%rdi
    6d62:	49 8b 76 08          	mov    0x8(%r14),%rsi
    6d66:	e8 75 2b 00 00       	callq  98e0 <alloc::alloc::box_free>
    6d6b:	4c 89 f7             	mov    %r14,%rdi
    6d6e:	e8 8d 2b 00 00       	callq  9900 <alloc::alloc::box_free>
    6d73:	eb 03                	jmp    6d78 <core::ptr::drop_in_place+0xa8>
    6d75:	49 89 c7             	mov    %rax,%r15
    6d78:	48 89 df             	mov    %rbx,%rdi
    6d7b:	e8 c0 f9 ff ff       	callq  6740 <core::ptr::drop_in_place>
    6d80:	4c 89 ff             	mov    %r15,%rdi
    6d83:	e8 c8 e2 ff ff       	callq  5050 <_Unwind_Resume@plt>
    6d88:	0f 0b                	ud2    
    6d8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000006d90 <core::ptr::drop_in_place>:
    6d90:	41 57                	push   %r15
    6d92:	41 56                	push   %r14
    6d94:	41 54                	push   %r12
    6d96:	53                   	push   %rbx
    6d97:	50                   	push   %rax
    6d98:	49 89 fe             	mov    %rdi,%r14
    6d9b:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    6d9f:	48 85 f6             	test   %rsi,%rsi
    6da2:	74 19                	je     6dbd <core::ptr::drop_in_place+0x2d>
    6da4:	49 8b 3e             	mov    (%r14),%rdi
    6da7:	48 85 ff             	test   %rdi,%rdi
    6daa:	74 11                	je     6dbd <core::ptr::drop_in_place+0x2d>
    6dac:	48 c1 e6 05          	shl    $0x5,%rsi
    6db0:	74 0b                	je     6dbd <core::ptr::drop_in_place+0x2d>
    6db2:	ba 08 00 00 00       	mov    $0x8,%edx
    6db7:	ff 15 43 ee 03 00    	callq  *0x3ee43(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    6dbd:	49 8d 7e 18          	lea    0x18(%r14),%rdi
    6dc1:	e8 ca f6 ff ff       	callq  6490 <core::ptr::drop_in_place>
    6dc6:	49 8b 86 48 01 00 00 	mov    0x148(%r14),%rax
    6dcd:	48 85 c0             	test   %rax,%rax
    6dd0:	74 24                	je     6df6 <core::ptr::drop_in_place+0x66>
    6dd2:	49 8b be 40 01 00 00 	mov    0x140(%r14),%rdi
    6dd9:	48 85 ff             	test   %rdi,%rdi
    6ddc:	74 18                	je     6df6 <core::ptr::drop_in_place+0x66>
    6dde:	48 c1 e0 03          	shl    $0x3,%rax
    6de2:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
    6de6:	48 85 f6             	test   %rsi,%rsi
    6de9:	74 0b                	je     6df6 <core::ptr::drop_in_place+0x66>
    6deb:	ba 08 00 00 00       	mov    $0x8,%edx
    6df0:	ff 15 0a ee 03 00    	callq  *0x3ee0a(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    6df6:	49 8b be 58 01 00 00 	mov    0x158(%r14),%rdi
    6dfd:	49 8b b6 60 01 00 00 	mov    0x160(%r14),%rsi
    6e04:	ff 15 1e f0 03 00    	callq  *0x3f01e(%rip)        # 45e28 <munmap@GLIBC_2.2.5>
    6e0a:	49 8b 9e 68 01 00 00 	mov    0x168(%r14),%rbx
    6e11:	49 8b 86 78 01 00 00 	mov    0x178(%r14),%rax
    6e18:	48 85 c0             	test   %rax,%rax
    6e1b:	74 3e                	je     6e5b <core::ptr::drop_in_place+0xcb>
    6e1d:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    6e21:	4c 8d 3c c3          	lea    (%rbx,%rax,8),%r15
    6e25:	4c 8d 25 24 e5 ff ff 	lea    -0x1adc(%rip),%r12        # 5350 <__rust_dealloc>
    6e2c:	eb 0b                	jmp    6e39 <core::ptr::drop_in_place+0xa9>
    6e2e:	66 90                	xchg   %ax,%ax
    6e30:	48 83 c3 18          	add    $0x18,%rbx
    6e34:	4c 39 fb             	cmp    %r15,%rbx
    6e37:	74 1b                	je     6e54 <core::ptr::drop_in_place+0xc4>
    6e39:	48 8b 3b             	mov    (%rbx),%rdi
    6e3c:	48 85 ff             	test   %rdi,%rdi
    6e3f:	74 ef                	je     6e30 <core::ptr::drop_in_place+0xa0>
    6e41:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    6e45:	48 85 f6             	test   %rsi,%rsi
    6e48:	74 e6                	je     6e30 <core::ptr::drop_in_place+0xa0>
    6e4a:	ba 01 00 00 00       	mov    $0x1,%edx
    6e4f:	41 ff d4             	callq  *%r12
    6e52:	eb dc                	jmp    6e30 <core::ptr::drop_in_place+0xa0>
    6e54:	49 8b 9e 68 01 00 00 	mov    0x168(%r14),%rbx
    6e5b:	49 8b 86 70 01 00 00 	mov    0x170(%r14),%rax
    6e62:	48 85 c0             	test   %rax,%rax
    6e65:	74 2b                	je     6e92 <core::ptr::drop_in_place+0x102>
    6e67:	48 85 db             	test   %rbx,%rbx
    6e6a:	74 26                	je     6e92 <core::ptr::drop_in_place+0x102>
    6e6c:	48 c1 e0 03          	shl    $0x3,%rax
    6e70:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
    6e74:	48 85 f6             	test   %rsi,%rsi
    6e77:	74 19                	je     6e92 <core::ptr::drop_in_place+0x102>
    6e79:	ba 08 00 00 00       	mov    $0x8,%edx
    6e7e:	48 89 df             	mov    %rbx,%rdi
    6e81:	48 83 c4 08          	add    $0x8,%rsp
    6e85:	5b                   	pop    %rbx
    6e86:	41 5c                	pop    %r12
    6e88:	41 5e                	pop    %r14
    6e8a:	41 5f                	pop    %r15
    6e8c:	ff 25 6e ed 03 00    	jmpq   *0x3ed6e(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    6e92:	48 83 c4 08          	add    $0x8,%rsp
    6e96:	5b                   	pop    %rbx
    6e97:	41 5c                	pop    %r12
    6e99:	41 5e                	pop    %r14
    6e9b:	41 5f                	pop    %r15
    6e9d:	c3                   	retq   
    6e9e:	48 89 c3             	mov    %rax,%rbx
    6ea1:	49 8d be 00 01 00 00 	lea    0x100(%r14),%rdi
    6ea8:	e8 b3 05 00 00       	callq  7460 <core::ptr::drop_in_place>
    6ead:	49 8b be 58 01 00 00 	mov    0x158(%r14),%rdi
    6eb4:	49 8b b6 60 01 00 00 	mov    0x160(%r14),%rsi
    6ebb:	e8 00 fe ff ff       	callq  6cc0 <core::ptr::drop_in_place>
    6ec0:	49 81 c6 68 01 00 00 	add    $0x168,%r14
    6ec7:	4c 89 f7             	mov    %r14,%rdi
    6eca:	e8 61 f7 ff ff       	callq  6630 <core::ptr::drop_in_place>
    6ecf:	48 89 df             	mov    %rbx,%rdi
    6ed2:	e8 79 e1 ff ff       	callq  5050 <_Unwind_Resume@plt>
    6ed7:	0f 0b                	ud2    
    6ed9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000006ee0 <core::ptr::drop_in_place>:
    6ee0:	41 57                	push   %r15
    6ee2:	41 56                	push   %r14
    6ee4:	53                   	push   %rbx
    6ee5:	80 3f 02             	cmpb   $0x2,(%rdi)
    6ee8:	73 06                	jae    6ef0 <core::ptr::drop_in_place+0x10>
    6eea:	5b                   	pop    %rbx
    6eeb:	41 5e                	pop    %r14
    6eed:	41 5f                	pop    %r15
    6eef:	c3                   	retq   
    6ef0:	49 89 ff             	mov    %rdi,%r15
    6ef3:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
    6ef7:	48 8b 3b             	mov    (%rbx),%rdi
    6efa:	48 8b 43 08          	mov    0x8(%rbx),%rax
    6efe:	ff 10                	callq  *(%rax)
    6f00:	48 8b 43 08          	mov    0x8(%rbx),%rax
    6f04:	48 8b 70 08          	mov    0x8(%rax),%rsi
    6f08:	48 85 f6             	test   %rsi,%rsi
    6f0b:	74 0d                	je     6f1a <core::ptr::drop_in_place+0x3a>
    6f0d:	48 8b 3b             	mov    (%rbx),%rdi
    6f10:	48 8b 50 10          	mov    0x10(%rax),%rdx
    6f14:	ff 15 e6 ec 03 00    	callq  *0x3ece6(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    6f1a:	49 8b 7f 08          	mov    0x8(%r15),%rdi
    6f1e:	be 18 00 00 00       	mov    $0x18,%esi
    6f23:	ba 08 00 00 00       	mov    $0x8,%edx
    6f28:	5b                   	pop    %rbx
    6f29:	41 5e                	pop    %r14
    6f2b:	41 5f                	pop    %r15
    6f2d:	ff 25 cd ec 03 00    	jmpq   *0x3eccd(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    6f33:	49 89 c6             	mov    %rax,%r14
    6f36:	48 8b 3b             	mov    (%rbx),%rdi
    6f39:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    6f3d:	e8 9e 29 00 00       	callq  98e0 <alloc::alloc::box_free>
    6f42:	49 8b 7f 08          	mov    0x8(%r15),%rdi
    6f46:	e8 b5 29 00 00       	callq  9900 <alloc::alloc::box_free>
    6f4b:	4c 89 f7             	mov    %r14,%rdi
    6f4e:	e8 fd e0 ff ff       	callq  5050 <_Unwind_Resume@plt>
    6f53:	0f 0b                	ud2    
    6f55:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6f5c:	00 00 00 
    6f5f:	90                   	nop

0000000000006f60 <core::ptr::drop_in_place>:
    6f60:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    6f64:	48 85 f6             	test   %rsi,%rsi
    6f67:	74 19                	je     6f82 <core::ptr::drop_in_place+0x22>
    6f69:	48 8b 3f             	mov    (%rdi),%rdi
    6f6c:	48 85 ff             	test   %rdi,%rdi
    6f6f:	74 11                	je     6f82 <core::ptr::drop_in_place+0x22>
    6f71:	48 c1 e6 06          	shl    $0x6,%rsi
    6f75:	74 0b                	je     6f82 <core::ptr::drop_in_place+0x22>
    6f77:	ba 08 00 00 00       	mov    $0x8,%edx
    6f7c:	ff 25 7e ec 03 00    	jmpq   *0x3ec7e(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    6f82:	c3                   	retq   
    6f83:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6f8a:	00 00 00 
    6f8d:	0f 1f 00             	nopl   (%rax)

0000000000006f90 <core::ptr::drop_in_place>:
    6f90:	41 56                	push   %r14
    6f92:	53                   	push   %rbx
    6f93:	50                   	push   %rax
    6f94:	48 89 fb             	mov    %rdi,%rbx
    6f97:	48 83 c7 40          	add    $0x40,%rdi
    6f9b:	e8 d0 ed ff ff       	callq  5d70 <core::ptr::drop_in_place>
    6fa0:	83 bb 60 01 00 00 2e 	cmpl   $0x2e,0x160(%rbx)
    6fa7:	75 1a                	jne    6fc3 <core::ptr::drop_in_place+0x33>
    6fa9:	83 bb b0 01 00 00 02 	cmpl   $0x2,0x1b0(%rbx)
    6fb0:	75 26                	jne    6fd8 <core::ptr::drop_in_place+0x48>
    6fb2:	83 bb d8 01 00 00 02 	cmpl   $0x2,0x1d8(%rbx)
    6fb9:	75 32                	jne    6fed <core::ptr::drop_in_place+0x5d>
    6fbb:	48 83 c4 08          	add    $0x8,%rsp
    6fbf:	5b                   	pop    %rbx
    6fc0:	41 5e                	pop    %r14
    6fc2:	c3                   	retq   
    6fc3:	48 8d bb b8 00 00 00 	lea    0xb8(%rbx),%rdi
    6fca:	e8 f1 f8 ff ff       	callq  68c0 <core::ptr::drop_in_place>
    6fcf:	83 bb b0 01 00 00 02 	cmpl   $0x2,0x1b0(%rbx)
    6fd6:	74 da                	je     6fb2 <core::ptr::drop_in_place+0x22>
    6fd8:	48 8d bb b0 01 00 00 	lea    0x1b0(%rbx),%rdi
    6fdf:	e8 3c f3 ff ff       	callq  6320 <core::ptr::drop_in_place>
    6fe4:	83 bb d8 01 00 00 02 	cmpl   $0x2,0x1d8(%rbx)
    6feb:	74 ce                	je     6fbb <core::ptr::drop_in_place+0x2b>
    6fed:	48 81 c3 d8 01 00 00 	add    $0x1d8,%rbx
    6ff4:	48 89 df             	mov    %rbx,%rdi
    6ff7:	48 83 c4 08          	add    $0x8,%rsp
    6ffb:	5b                   	pop    %rbx
    6ffc:	41 5e                	pop    %r14
    6ffe:	e9 6d 00 00 00       	jmpq   7070 <core::ptr::drop_in_place>
    7003:	49 89 c6             	mov    %rax,%r14
    7006:	48 8d bb b8 00 00 00 	lea    0xb8(%rbx),%rdi
    700d:	e8 9e fa ff ff       	callq  6ab0 <core::ptr::drop_in_place>
    7012:	48 8d bb b0 01 00 00 	lea    0x1b0(%rbx),%rdi
    7019:	e8 42 f9 ff ff       	callq  6960 <core::ptr::drop_in_place>
    701e:	48 81 c3 d8 01 00 00 	add    $0x1d8,%rbx
    7025:	48 89 df             	mov    %rbx,%rdi
    7028:	e8 e3 f2 ff ff       	callq  6310 <core::ptr::drop_in_place>
    702d:	4c 89 f7             	mov    %r14,%rdi
    7030:	e8 1b e0 ff ff       	callq  5050 <_Unwind_Resume@plt>
    7035:	0f 0b                	ud2    
    7037:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    703e:	00 00 

0000000000007040 <core::ptr::drop_in_place>:
    7040:	50                   	push   %rax
    7041:	40 84 ff             	test   %dil,%dil
    7044:	75 02                	jne    7048 <core::ptr::drop_in_place+0x8>
    7046:	58                   	pop    %rax
    7047:	c3                   	retq   
    7048:	48 8d 3d 9c 11 03 00 	lea    0x3119c(%rip),%rdi        # 381eb <str.6+0xecb>
    704f:	48 8d 15 82 d4 03 00 	lea    0x3d482(%rip),%rdx        # 444d8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xf80>
    7056:	be 2a 00 00 00       	mov    $0x2a,%esi
    705b:	e8 b0 33 01 00       	callq  1a410 <std::panicking::begin_panic>
    7060:	0f 0b                	ud2    
    7062:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7069:	00 00 00 
    706c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007070 <core::ptr::drop_in_place>:
    7070:	41 57                	push   %r15
    7072:	41 56                	push   %r14
    7074:	41 55                	push   %r13
    7076:	41 54                	push   %r12
    7078:	53                   	push   %rbx
    7079:	48 83 3f 00          	cmpq   $0x0,(%rdi)
    707d:	74 0a                	je     7089 <core::ptr::drop_in_place+0x19>
    707f:	5b                   	pop    %rbx
    7080:	41 5c                	pop    %r12
    7082:	41 5d                	pop    %r13
    7084:	41 5e                	pop    %r14
    7086:	41 5f                	pop    %r15
    7088:	c3                   	retq   
    7089:	49 89 fe             	mov    %rdi,%r14
    708c:	48 8b 47 10          	mov    0x10(%rdi),%rax
    7090:	48 85 c0             	test   %rax,%rax
    7093:	0f 84 81 00 00 00    	je     711a <core::ptr::drop_in_place+0xaa>
    7099:	4d 8b 66 08          	mov    0x8(%r14),%r12
    709d:	48 c1 e0 03          	shl    $0x3,%rax
    70a1:	4c 8d 3c c0          	lea    (%rax,%rax,8),%r15
    70a5:	31 db                	xor    %ebx,%ebx
    70a7:	4c 8d 2d a2 e2 ff ff 	lea    -0x1d5e(%rip),%r13        # 5350 <__rust_dealloc>
    70ae:	eb 09                	jmp    70b9 <core::ptr::drop_in_place+0x49>
    70b0:	48 83 c3 48          	add    $0x48,%rbx
    70b4:	49 39 df             	cmp    %rbx,%r15
    70b7:	74 41                	je     70fa <core::ptr::drop_in_place+0x8a>
    70b9:	49 83 7c 1c 08 00    	cmpq   $0x0,0x8(%r12,%rbx,1)
    70bf:	75 ef                	jne    70b0 <core::ptr::drop_in_place+0x40>
    70c1:	49 8b 44 1c 30       	mov    0x30(%r12,%rbx,1),%rax
    70c6:	48 c1 e0 03          	shl    $0x3,%rax
    70ca:	48 8d 34 80          	lea    (%rax,%rax,4),%rsi
    70ce:	48 85 f6             	test   %rsi,%rsi
    70d1:	74 0d                	je     70e0 <core::ptr::drop_in_place+0x70>
    70d3:	49 8b 7c 1c 28       	mov    0x28(%r12,%rbx,1),%rdi
    70d8:	ba 08 00 00 00       	mov    $0x8,%edx
    70dd:	41 ff d5             	callq  *%r13
    70e0:	49 8b 74 1c 40       	mov    0x40(%r12,%rbx,1),%rsi
    70e5:	48 c1 e6 05          	shl    $0x5,%rsi
    70e9:	74 c5                	je     70b0 <core::ptr::drop_in_place+0x40>
    70eb:	49 8b 7c 1c 38       	mov    0x38(%r12,%rbx,1),%rdi
    70f0:	ba 08 00 00 00       	mov    $0x8,%edx
    70f5:	41 ff d5             	callq  *%r13
    70f8:	eb b6                	jmp    70b0 <core::ptr::drop_in_place+0x40>
    70fa:	49 8b 46 10          	mov    0x10(%r14),%rax
    70fe:	48 c1 e0 03          	shl    $0x3,%rax
    7102:	48 8d 34 c0          	lea    (%rax,%rax,8),%rsi
    7106:	48 85 f6             	test   %rsi,%rsi
    7109:	74 0f                	je     711a <core::ptr::drop_in_place+0xaa>
    710b:	49 8b 7e 08          	mov    0x8(%r14),%rdi
    710f:	ba 08 00 00 00       	mov    $0x8,%edx
    7114:	ff 15 e6 ea 03 00    	callq  *0x3eae6(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    711a:	49 8b 46 20          	mov    0x20(%r14),%rax
    711e:	48 c1 e0 03          	shl    $0x3,%rax
    7122:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
    7126:	48 85 f6             	test   %rsi,%rsi
    7129:	0f 84 50 ff ff ff    	je     707f <core::ptr::drop_in_place+0xf>
    712f:	49 8b 7e 18          	mov    0x18(%r14),%rdi
    7133:	ba 08 00 00 00       	mov    $0x8,%edx
    7138:	5b                   	pop    %rbx
    7139:	41 5c                	pop    %r12
    713b:	41 5d                	pop    %r13
    713d:	41 5e                	pop    %r14
    713f:	41 5f                	pop    %r15
    7141:	ff 25 b9 ea 03 00    	jmpq   *0x3eab9(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    7147:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    714e:	00 00 

0000000000007150 <core::ptr::drop_in_place>:
    7150:	48 8b 07             	mov    (%rdi),%rax
    7153:	48 83 40 08 01       	addq   $0x1,0x8(%rax)
    7158:	c3                   	retq   
    7159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000007160 <core::ptr::drop_in_place>:
    7160:	53                   	push   %rbx
    7161:	48 83 7f 08 00       	cmpq   $0x0,0x8(%rdi)
    7166:	74 02                	je     716a <core::ptr::drop_in_place+0xa>
    7168:	5b                   	pop    %rbx
    7169:	c3                   	retq   
    716a:	48 89 fb             	mov    %rdi,%rbx
    716d:	48 8b 47 30          	mov    0x30(%rdi),%rax
    7171:	48 c1 e0 03          	shl    $0x3,%rax
    7175:	48 8d 34 80          	lea    (%rax,%rax,4),%rsi
    7179:	48 85 f6             	test   %rsi,%rsi
    717c:	74 0f                	je     718d <core::ptr::drop_in_place+0x2d>
    717e:	48 8b 7b 28          	mov    0x28(%rbx),%rdi
    7182:	ba 08 00 00 00       	mov    $0x8,%edx
    7187:	ff 15 73 ea 03 00    	callq  *0x3ea73(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    718d:	48 8b 73 40          	mov    0x40(%rbx),%rsi
    7191:	48 c1 e6 05          	shl    $0x5,%rsi
    7195:	74 d1                	je     7168 <core::ptr::drop_in_place+0x8>
    7197:	48 8b 7b 38          	mov    0x38(%rbx),%rdi
    719b:	ba 08 00 00 00       	mov    $0x8,%edx
    71a0:	5b                   	pop    %rbx
    71a1:	ff 25 59 ea 03 00    	jmpq   *0x3ea59(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    71a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    71ae:	00 00 

00000000000071b0 <core::ptr::drop_in_place>:
    71b0:	48 8b 47 08          	mov    0x8(%rdi),%rax
    71b4:	48 85 c0             	test   %rax,%rax
    71b7:	74 20                	je     71d9 <core::ptr::drop_in_place+0x29>
    71b9:	48 8b 3f             	mov    (%rdi),%rdi
    71bc:	48 85 ff             	test   %rdi,%rdi
    71bf:	74 18                	je     71d9 <core::ptr::drop_in_place+0x29>
    71c1:	48 c1 e0 03          	shl    $0x3,%rax
    71c5:	48 8d 34 80          	lea    (%rax,%rax,4),%rsi
    71c9:	48 85 f6             	test   %rsi,%rsi
    71cc:	74 0b                	je     71d9 <core::ptr::drop_in_place+0x29>
    71ce:	ba 08 00 00 00       	mov    $0x8,%edx
    71d3:	ff 25 27 ea 03 00    	jmpq   *0x3ea27(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    71d9:	c3                   	retq   
    71da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000071e0 <core::ptr::drop_in_place>:
    71e0:	55                   	push   %rbp
    71e1:	41 57                	push   %r15
    71e3:	41 56                	push   %r14
    71e5:	41 55                	push   %r13
    71e7:	41 54                	push   %r12
    71e9:	53                   	push   %rbx
    71ea:	50                   	push   %rax
    71eb:	49 89 fe             	mov    %rdi,%r14
    71ee:	48 89 3c 24          	mov    %rdi,(%rsp)
    71f2:	48 8b 5f 10          	mov    0x10(%rdi),%rbx
    71f6:	4c 8b 67 18          	mov    0x18(%rdi),%r12
    71fa:	4d 89 e7             	mov    %r12,%r15
    71fd:	49 29 df             	sub    %rbx,%r15
    7200:	74 57                	je     7259 <core::ptr::drop_in_place+0x79>
    7202:	49 c1 ff 04          	sar    $0x4,%r15
    7206:	49 c1 e7 04          	shl    $0x4,%r15
    720a:	49 83 c7 f0          	add    $0xfffffffffffffff0,%r15
    720e:	48 83 c3 10          	add    $0x10,%rbx
    7212:	4c 8d 2d 37 e1 ff ff 	lea    -0x1ec9(%rip),%r13        # 5350 <__rust_dealloc>
    7219:	eb 16                	jmp    7231 <core::ptr::drop_in_place+0x51>
    721b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7220:	49 83 c7 f0          	add    $0xfffffffffffffff0,%r15
    7224:	48 83 c3 10          	add    $0x10,%rbx
    7228:	48 83 c5 10          	add    $0x10,%rbp
    722c:	4c 39 e5             	cmp    %r12,%rbp
    722f:	74 28                	je     7259 <core::ptr::drop_in_place+0x79>
    7231:	48 8b 7b f0          	mov    -0x10(%rbx),%rdi
    7235:	48 8b 43 f8          	mov    -0x8(%rbx),%rax
    7239:	ff 10                	callq  *(%rax)
    723b:	48 8d 6b f0          	lea    -0x10(%rbx),%rbp
    723f:	48 8b 45 08          	mov    0x8(%rbp),%rax
    7243:	48 8b 70 08          	mov    0x8(%rax),%rsi
    7247:	48 85 f6             	test   %rsi,%rsi
    724a:	74 d4                	je     7220 <core::ptr::drop_in_place+0x40>
    724c:	48 8b 7b f0          	mov    -0x10(%rbx),%rdi
    7250:	48 8b 50 10          	mov    0x10(%rax),%rdx
    7254:	41 ff d5             	callq  *%r13
    7257:	eb c7                	jmp    7220 <core::ptr::drop_in_place+0x40>
    7259:	49 8b 76 08          	mov    0x8(%r14),%rsi
    725d:	48 85 f6             	test   %rsi,%rsi
    7260:	74 14                	je     7276 <core::ptr::drop_in_place+0x96>
    7262:	48 c1 e6 04          	shl    $0x4,%rsi
    7266:	74 0e                	je     7276 <core::ptr::drop_in_place+0x96>
    7268:	49 8b 3e             	mov    (%r14),%rdi
    726b:	ba 08 00 00 00       	mov    $0x8,%edx
    7270:	ff 15 8a e9 03 00    	callq  *0x3e98a(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    7276:	48 83 c4 08          	add    $0x8,%rsp
    727a:	5b                   	pop    %rbx
    727b:	41 5c                	pop    %r12
    727d:	41 5d                	pop    %r13
    727f:	41 5e                	pop    %r14
    7281:	41 5f                	pop    %r15
    7283:	5d                   	pop    %rbp
    7284:	c3                   	retq   
    7285:	49 89 c6             	mov    %rax,%r14
    7288:	48 8b 7b f0          	mov    -0x10(%rbx),%rdi
    728c:	48 8b 73 f8          	mov    -0x8(%rbx),%rsi
    7290:	e8 4b 26 00 00       	callq  98e0 <alloc::alloc::box_free>
    7295:	4d 85 ff             	test   %r15,%r15
    7298:	74 12                	je     72ac <core::ptr::drop_in_place+0xcc>
    729a:	48 89 df             	mov    %rbx,%rdi
    729d:	e8 9e ee ff ff       	callq  6140 <core::ptr::drop_in_place>
    72a2:	48 83 c3 10          	add    $0x10,%rbx
    72a6:	49 83 c7 f0          	add    $0xfffffffffffffff0,%r15
    72aa:	75 ee                	jne    729a <core::ptr::drop_in_place+0xba>
    72ac:	48 89 e7             	mov    %rsp,%rdi
    72af:	e8 6c f9 ff ff       	callq  6c20 <core::ptr::drop_in_place>
    72b4:	4c 89 f7             	mov    %r14,%rdi
    72b7:	e8 94 dd ff ff       	callq  5050 <_Unwind_Resume@plt>
    72bc:	0f 0b                	ud2    
    72be:	49 89 c6             	mov    %rax,%r14
    72c1:	eb e9                	jmp    72ac <core::ptr::drop_in_place+0xcc>
    72c3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    72ca:	00 00 00 
    72cd:	0f 1f 00             	nopl   (%rax)

00000000000072d0 <core::ptr::drop_in_place>:
    72d0:	41 56                	push   %r14
    72d2:	53                   	push   %rbx
    72d3:	50                   	push   %rax
    72d4:	48 89 fb             	mov    %rdi,%rbx
    72d7:	48 83 c7 38          	add    $0x38,%rdi
    72db:	e8 90 ea ff ff       	callq  5d70 <core::ptr::drop_in_place>
    72e0:	83 bb 58 01 00 00 2e 	cmpl   $0x2e,0x158(%rbx)
    72e7:	75 08                	jne    72f1 <core::ptr::drop_in_place+0x21>
    72e9:	48 83 c4 08          	add    $0x8,%rsp
    72ed:	5b                   	pop    %rbx
    72ee:	41 5e                	pop    %r14
    72f0:	c3                   	retq   
    72f1:	48 81 c3 b0 00 00 00 	add    $0xb0,%rbx
    72f8:	48 89 df             	mov    %rbx,%rdi
    72fb:	48 83 c4 08          	add    $0x8,%rsp
    72ff:	5b                   	pop    %rbx
    7300:	41 5e                	pop    %r14
    7302:	e9 b9 f5 ff ff       	jmpq   68c0 <core::ptr::drop_in_place>
    7307:	49 89 c6             	mov    %rax,%r14
    730a:	48 81 c3 b0 00 00 00 	add    $0xb0,%rbx
    7311:	48 89 df             	mov    %rbx,%rdi
    7314:	e8 97 f7 ff ff       	callq  6ab0 <core::ptr::drop_in_place>
    7319:	4c 89 f7             	mov    %r14,%rdi
    731c:	e8 2f dd ff ff       	callq  5050 <_Unwind_Resume@plt>
    7321:	0f 0b                	ud2    
    7323:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    732a:	00 00 00 
    732d:	0f 1f 00             	nopl   (%rax)

0000000000007330 <core::ptr::drop_in_place>:
    7330:	48 8b 07             	mov    (%rdi),%rax
    7333:	48 85 c0             	test   %rax,%rax
    7336:	74 0c                	je     7344 <core::ptr::drop_in_place+0x14>
    7338:	f0 48 83 28 01       	lock subq $0x1,(%rax)
    733d:	75 05                	jne    7344 <core::ptr::drop_in_place+0x14>
    733f:	e9 4c 25 00 00       	jmpq   9890 <alloc::sync::Arc<T>::drop_slow>
    7344:	c3                   	retq   
    7345:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    734c:	00 00 00 
    734f:	90                   	nop

0000000000007350 <core::ptr::drop_in_place>:
    7350:	48 85 f6             	test   %rsi,%rsi
    7353:	74 20                	je     7375 <core::ptr::drop_in_place+0x25>
    7355:	48 85 ff             	test   %rdi,%rdi
    7358:	74 1b                	je     7375 <core::ptr::drop_in_place+0x25>
    735a:	48 89 f0             	mov    %rsi,%rax
    735d:	48 c1 e0 09          	shl    $0x9,%rax
    7361:	48 8d 34 f0          	lea    (%rax,%rsi,8),%rsi
    7365:	48 85 f6             	test   %rsi,%rsi
    7368:	74 0b                	je     7375 <core::ptr::drop_in_place+0x25>
    736a:	ba 08 00 00 00       	mov    $0x8,%edx
    736f:	ff 25 8b e8 03 00    	jmpq   *0x3e88b(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    7375:	c3                   	retq   
    7376:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    737d:	00 00 00 

0000000000007380 <core::ptr::drop_in_place>:
    7380:	41 57                	push   %r15
    7382:	41 56                	push   %r14
    7384:	53                   	push   %rbx
    7385:	48 89 fb             	mov    %rdi,%rbx
    7388:	8a 07                	mov    (%rdi),%al
    738a:	3c 03                	cmp    $0x3,%al
    738c:	77 0a                	ja     7398 <core::ptr::drop_in_place+0x18>
    738e:	3c 02                	cmp    $0x2,%al
    7390:	74 06                	je     7398 <core::ptr::drop_in_place+0x18>
    7392:	5b                   	pop    %rbx
    7393:	41 5e                	pop    %r14
    7395:	41 5f                	pop    %r15
    7397:	c3                   	retq   
    7398:	4c 8b 7b 08          	mov    0x8(%rbx),%r15
    739c:	49 8b 3f             	mov    (%r15),%rdi
    739f:	49 8b 47 08          	mov    0x8(%r15),%rax
    73a3:	ff 10                	callq  *(%rax)
    73a5:	49 8b 47 08          	mov    0x8(%r15),%rax
    73a9:	48 8b 70 08          	mov    0x8(%rax),%rsi
    73ad:	48 85 f6             	test   %rsi,%rsi
    73b0:	74 0d                	je     73bf <core::ptr::drop_in_place+0x3f>
    73b2:	49 8b 3f             	mov    (%r15),%rdi
    73b5:	48 8b 50 10          	mov    0x10(%rax),%rdx
    73b9:	ff 15 41 e8 03 00    	callq  *0x3e841(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    73bf:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    73c3:	be 18 00 00 00       	mov    $0x18,%esi
    73c8:	ba 08 00 00 00       	mov    $0x8,%edx
    73cd:	5b                   	pop    %rbx
    73ce:	41 5e                	pop    %r14
    73d0:	41 5f                	pop    %r15
    73d2:	ff 25 28 e8 03 00    	jmpq   *0x3e828(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    73d8:	49 89 c6             	mov    %rax,%r14
    73db:	49 8b 3f             	mov    (%r15),%rdi
    73de:	49 8b 77 08          	mov    0x8(%r15),%rsi
    73e2:	e8 f9 24 00 00       	callq  98e0 <alloc::alloc::box_free>
    73e7:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    73eb:	e8 10 25 00 00       	callq  9900 <alloc::alloc::box_free>
    73f0:	4c 89 f7             	mov    %r14,%rdi
    73f3:	e8 58 dc ff ff       	callq  5050 <_Unwind_Resume@plt>
    73f8:	0f 0b                	ud2    
    73fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000007400 <core::ptr::drop_in_place>:
    7400:	48 8b 47 18          	mov    0x18(%rdi),%rax
    7404:	48 c1 e0 03          	shl    $0x3,%rax
    7408:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
    740c:	48 85 f6             	test   %rsi,%rsi
    740f:	74 0f                	je     7420 <core::ptr::drop_in_place+0x20>
    7411:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    7415:	ba 08 00 00 00       	mov    $0x8,%edx
    741a:	ff 25 e0 e7 03 00    	jmpq   *0x3e7e0(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    7420:	c3                   	retq   
    7421:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7428:	00 00 00 
    742b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007430 <core::ptr::drop_in_place>:
    7430:	48 85 f6             	test   %rsi,%rsi
    7433:	74 1c                	je     7451 <core::ptr::drop_in_place+0x21>
    7435:	48 85 ff             	test   %rdi,%rdi
    7438:	74 17                	je     7451 <core::ptr::drop_in_place+0x21>
    743a:	48 69 f6 88 01 00 00 	imul   $0x188,%rsi,%rsi
    7441:	48 85 f6             	test   %rsi,%rsi
    7444:	74 0b                	je     7451 <core::ptr::drop_in_place+0x21>
    7446:	ba 08 00 00 00       	mov    $0x8,%edx
    744b:	ff 25 af e7 03 00    	jmpq   *0x3e7af(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    7451:	c3                   	retq   
    7452:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7459:	00 00 00 
    745c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007460 <core::ptr::drop_in_place>:
    7460:	48 8b 47 48          	mov    0x48(%rdi),%rax
    7464:	48 85 c0             	test   %rax,%rax
    7467:	74 21                	je     748a <core::ptr::drop_in_place+0x2a>
    7469:	48 8b 7f 40          	mov    0x40(%rdi),%rdi
    746d:	48 85 ff             	test   %rdi,%rdi
    7470:	74 18                	je     748a <core::ptr::drop_in_place+0x2a>
    7472:	48 c1 e0 03          	shl    $0x3,%rax
    7476:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
    747a:	48 85 f6             	test   %rsi,%rsi
    747d:	74 0b                	je     748a <core::ptr::drop_in_place+0x2a>
    747f:	ba 08 00 00 00       	mov    $0x8,%edx
    7484:	ff 25 76 e7 03 00    	jmpq   *0x3e776(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    748a:	c3                   	retq   
    748b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007490 <core::str::<impl str>::contains>:
    7490:	55                   	push   %rbp
    7491:	41 57                	push   %r15
    7493:	41 56                	push   %r14
    7495:	41 55                	push   %r13
    7497:	41 54                	push   %r12
    7499:	53                   	push   %rbx
    749a:	48 83 ec 78          	sub    $0x78,%rsp
    749e:	49 89 c8             	mov    %rcx,%r8
    74a1:	48 89 d1             	mov    %rdx,%rcx
    74a4:	48 89 f2             	mov    %rsi,%rdx
    74a7:	48 89 fe             	mov    %rdi,%rsi
    74aa:	48 89 e7             	mov    %rsp,%rdi
    74ad:	ff 15 a5 e8 03 00    	callq  *0x3e8a5(%rip)        # 45d58 <_GLOBAL_OFFSET_TABLE_+0x3c8>
    74b3:	83 7c 24 20 01       	cmpl   $0x1,0x20(%rsp)
    74b8:	0f 85 37 01 00 00    	jne    75f5 <core::str::<impl str>::contains+0x165>
    74be:	4c 8b 5c 24 58       	mov    0x58(%rsp),%r11
    74c3:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    74c8:	4d 8d 48 ff          	lea    -0x1(%r8),%r9
    74cc:	4c 8b 14 24          	mov    (%rsp),%r10
    74d0:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    74d5:	4c 8b 6c 24 10       	mov    0x10(%rsp),%r13
    74da:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
    74df:	49 8d 04 38          	lea    (%r8,%rdi,1),%rax
    74e3:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    74e7:	49 83 fb ff          	cmp    $0xffffffffffffffff,%r11
    74eb:	0f 84 36 02 00 00    	je     7727 <core::str::<impl str>::contains+0x297>
    74f1:	48 39 f0             	cmp    %rsi,%rax
    74f4:	0f 83 4d 02 00 00    	jae    7747 <core::str::<impl str>::contains+0x2b7>
    74fa:	4c 8b 74 24 40       	mov    0x40(%rsp),%r14
    74ff:	48 8b 5c 24 28       	mov    0x28(%rsp),%rbx
    7504:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    7509:	4c 89 c2             	mov    %r8,%rdx
    750c:	48 89 4c 24 70       	mov    %rcx,0x70(%rsp)
    7511:	48 29 ca             	sub    %rcx,%rdx
    7514:	48 89 54 24 68       	mov    %rdx,0x68(%rsp)
    7519:	49 89 dc             	mov    %rbx,%r12
    751c:	49 f7 dc             	neg    %r12
    751f:	90                   	nop
    7520:	41 0f b6 04 02       	movzbl (%r10,%rax,1),%eax
    7525:	49 0f a3 c6          	bt     %rax,%r14
    7529:	73 45                	jae    7570 <core::str::<impl str>::contains+0xe0>
    752b:	4c 39 db             	cmp    %r11,%rbx
    752e:	4c 89 d9             	mov    %r11,%rcx
    7531:	48 0f 47 cb          	cmova  %rbx,%rcx
    7535:	49 8d 04 3a          	lea    (%r10,%rdi,1),%rax
    7539:	48 89 cd             	mov    %rcx,%rbp
    753c:	0f 1f 40 00          	nopl   0x0(%rax)
    7540:	4c 39 c5             	cmp    %r8,%rbp
    7543:	73 4b                	jae    7590 <core::str::<impl str>::contains+0x100>
    7545:	48 8d 14 2f          	lea    (%rdi,%rbp,1),%rdx
    7549:	48 39 f2             	cmp    %rsi,%rdx
    754c:	0f 83 02 03 00 00    	jae    7854 <core::str::<impl str>::contains+0x3c4>
    7552:	4c 8d 7d 01          	lea    0x1(%rbp),%r15
    7556:	41 0f b6 54 2d 00    	movzbl 0x0(%r13,%rbp,1),%edx
    755c:	3a 14 28             	cmp    (%rax,%rbp,1),%dl
    755f:	4c 89 fd             	mov    %r15,%rbp
    7562:	74 dc                	je     7540 <core::str::<impl str>::contains+0xb0>
    7564:	4c 01 e7             	add    %r12,%rdi
    7567:	4c 01 ff             	add    %r15,%rdi
    756a:	e9 04 00 00 00       	jmpq   7573 <core::str::<impl str>::contains+0xe3>
    756f:	90                   	nop
    7570:	4c 01 c7             	add    %r8,%rdi
    7573:	45 31 db             	xor    %r11d,%r11d
    7576:	4a 8d 04 0f          	lea    (%rdi,%r9,1),%rax
    757a:	48 39 f0             	cmp    %rsi,%rax
    757d:	72 a1                	jb     7520 <core::str::<impl str>::contains+0x90>
    757f:	eb 65                	jmp    75e6 <core::str::<impl str>::contains+0x156>
    7581:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7588:	00 00 00 
    758b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7590:	48 89 d9             	mov    %rbx,%rcx
    7593:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    759a:	00 00 00 
    759d:	0f 1f 00             	nopl   (%rax)
    75a0:	49 39 cb             	cmp    %rcx,%r11
    75a3:	0f 83 7f 02 00 00    	jae    7828 <core::str::<impl str>::contains+0x398>
    75a9:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
    75ad:	4c 39 c1             	cmp    %r8,%rcx
    75b0:	0f 83 ba 02 00 00    	jae    7870 <core::str::<impl str>::contains+0x3e0>
    75b6:	48 8d 04 39          	lea    (%rcx,%rdi,1),%rax
    75ba:	48 39 f0             	cmp    %rsi,%rax
    75bd:	0f 83 c2 02 00 00    	jae    7885 <core::str::<impl str>::contains+0x3f5>
    75c3:	41 0f b6 54 0d 00    	movzbl 0x0(%r13,%rcx,1),%edx
    75c9:	41 3a 14 02          	cmp    (%r10,%rax,1),%dl
    75cd:	74 d1                	je     75a0 <core::str::<impl str>::contains+0x110>
    75cf:	48 03 7c 24 70       	add    0x70(%rsp),%rdi
    75d4:	4c 8b 5c 24 68       	mov    0x68(%rsp),%r11
    75d9:	4a 8d 04 0f          	lea    (%rdi,%r9,1),%rax
    75dd:	48 39 f0             	cmp    %rsi,%rax
    75e0:	0f 82 3a ff ff ff    	jb     7520 <core::str::<impl str>::contains+0x90>
    75e6:	4c 89 5c 24 58       	mov    %r11,0x58(%rsp)
    75eb:	48 89 7c 24 48       	mov    %rdi,0x48(%rsp)
    75f0:	e9 52 01 00 00       	jmpq   7747 <core::str::<impl str>::contains+0x2b7>
    75f5:	48 8b 3c 24          	mov    (%rsp),%rdi
    75f9:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    75fe:	4c 8d 04 0f          	lea    (%rdi,%rcx,1),%r8
    7602:	44 8a 4c 24 38       	mov    0x38(%rsp),%r9b
    7607:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    760c:	eb 08                	jmp    7616 <core::str::<impl str>::contains+0x186>
    760e:	66 90                	xchg   %ax,%ax
    7610:	48 01 f2             	add    %rsi,%rdx
    7613:	41 b1 01             	mov    $0x1,%r9b
    7616:	48 85 d2             	test   %rdx,%rdx
    7619:	74 15                	je     7630 <core::str::<impl str>::contains+0x1a0>
    761b:	48 39 d1             	cmp    %rdx,%rcx
    761e:	74 10                	je     7630 <core::str::<impl str>::contains+0x1a0>
    7620:	0f 86 71 02 00 00    	jbe    7897 <core::str::<impl str>::contains+0x407>
    7626:	80 3c 17 bf          	cmpb   $0xbf,(%rdi,%rdx,1)
    762a:	0f 8e 67 02 00 00    	jle    7897 <core::str::<impl str>::contains+0x407>
    7630:	48 39 d1             	cmp    %rdx,%rcx
    7633:	0f 84 ba 01 00 00    	je     77f3 <core::str::<impl str>::contains+0x363>
    7639:	48 8d 34 17          	lea    (%rdi,%rdx,1),%rsi
    763d:	0f b6 1e             	movzbl (%rsi),%ebx
    7640:	84 db                	test   %bl,%bl
    7642:	78 0c                	js     7650 <core::str::<impl str>::contains+0x1c0>
    7644:	89 d8                	mov    %ebx,%eax
    7646:	e9 95 00 00 00       	jmpq   76e0 <core::str::<impl str>::contains+0x250>
    764b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7650:	48 8d 46 01          	lea    0x1(%rsi),%rax
    7654:	4c 39 c0             	cmp    %r8,%rax
    7657:	74 40                	je     7699 <core::str::<impl str>::contains+0x209>
    7659:	0f b6 46 01          	movzbl 0x1(%rsi),%eax
    765d:	48 83 c6 02          	add    $0x2,%rsi
    7661:	83 e0 3f             	and    $0x3f,%eax
    7664:	41 89 da             	mov    %ebx,%r10d
    7667:	41 83 e2 1f          	and    $0x1f,%r10d
    766b:	80 fb df             	cmp    $0xdf,%bl
    766e:	76 3a                	jbe    76aa <core::str::<impl str>::contains+0x21a>
    7670:	4c 39 c6             	cmp    %r8,%rsi
    7673:	74 3e                	je     76b3 <core::str::<impl str>::contains+0x223>
    7675:	44 0f b6 1e          	movzbl (%rsi),%r11d
    7679:	48 83 c6 01          	add    $0x1,%rsi
    767d:	41 83 e3 3f          	and    $0x3f,%r11d
    7681:	c1 e0 06             	shl    $0x6,%eax
    7684:	44 09 d8             	or     %r11d,%eax
    7687:	80 fb f0             	cmp    $0xf0,%bl
    768a:	72 38                	jb     76c4 <core::str::<impl str>::contains+0x234>
    768c:	4c 39 c6             	cmp    %r8,%rsi
    768f:	74 3c                	je     76cd <core::str::<impl str>::contains+0x23d>
    7691:	0f b6 36             	movzbl (%rsi),%esi
    7694:	83 e6 3f             	and    $0x3f,%esi
    7697:	eb 36                	jmp    76cf <core::str::<impl str>::contains+0x23f>
    7699:	31 c0                	xor    %eax,%eax
    769b:	4c 89 c6             	mov    %r8,%rsi
    769e:	41 89 da             	mov    %ebx,%r10d
    76a1:	41 83 e2 1f          	and    $0x1f,%r10d
    76a5:	80 fb df             	cmp    $0xdf,%bl
    76a8:	77 c6                	ja     7670 <core::str::<impl str>::contains+0x1e0>
    76aa:	41 c1 e2 06          	shl    $0x6,%r10d
    76ae:	44 09 d0             	or     %r10d,%eax
    76b1:	eb 2d                	jmp    76e0 <core::str::<impl str>::contains+0x250>
    76b3:	45 31 db             	xor    %r11d,%r11d
    76b6:	4c 89 c6             	mov    %r8,%rsi
    76b9:	c1 e0 06             	shl    $0x6,%eax
    76bc:	44 09 d8             	or     %r11d,%eax
    76bf:	80 fb f0             	cmp    $0xf0,%bl
    76c2:	73 c8                	jae    768c <core::str::<impl str>::contains+0x1fc>
    76c4:	41 c1 e2 0c          	shl    $0xc,%r10d
    76c8:	44 09 d0             	or     %r10d,%eax
    76cb:	eb 13                	jmp    76e0 <core::str::<impl str>::contains+0x250>
    76cd:	31 f6                	xor    %esi,%esi
    76cf:	41 83 e2 07          	and    $0x7,%r10d
    76d3:	41 c1 e2 12          	shl    $0x12,%r10d
    76d7:	c1 e0 06             	shl    $0x6,%eax
    76da:	44 09 d0             	or     %r10d,%eax
    76dd:	09 f0                	or     %esi,%eax
    76df:	90                   	nop
    76e0:	45 84 c9             	test   %r9b,%r9b
    76e3:	0f 85 21 01 00 00    	jne    780a <core::str::<impl str>::contains+0x37a>
    76e9:	3d 00 00 11 00       	cmp    $0x110000,%eax
    76ee:	0f 84 26 01 00 00    	je     781a <core::str::<impl str>::contains+0x38a>
    76f4:	be 01 00 00 00       	mov    $0x1,%esi
    76f9:	3d 80 00 00 00       	cmp    $0x80,%eax
    76fe:	0f 82 0c ff ff ff    	jb     7610 <core::str::<impl str>::contains+0x180>
    7704:	be 02 00 00 00       	mov    $0x2,%esi
    7709:	3d 00 08 00 00       	cmp    $0x800,%eax
    770e:	0f 82 fc fe ff ff    	jb     7610 <core::str::<impl str>::contains+0x180>
    7714:	3d 00 00 01 00       	cmp    $0x10000,%eax
    7719:	be 04 00 00 00       	mov    $0x4,%esi
    771e:	48 83 de 00          	sbb    $0x0,%rsi
    7722:	e9 e9 fe ff ff       	jmpq   7610 <core::str::<impl str>::contains+0x180>
    7727:	48 39 f0             	cmp    %rsi,%rax
    772a:	73 1b                	jae    7747 <core::str::<impl str>::contains+0x2b7>
    772c:	4c 8b 5c 24 40       	mov    0x40(%rsp),%r11
    7731:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
    7736:	4c 8b 74 24 38       	mov    0x38(%rsp),%r14
    773b:	4d 39 c7             	cmp    %r8,%r15
    773e:	4d 89 c4             	mov    %r8,%r12
    7741:	4d 0f 47 e7          	cmova  %r15,%r12
    7745:	eb 1a                	jmp    7761 <core::str::<impl str>::contains+0x2d1>
    7747:	48 89 74 24 48       	mov    %rsi,0x48(%rsp)
    774c:	e9 d3 00 00 00       	jmpq   7824 <core::str::<impl str>::contains+0x394>
    7751:	4c 01 c7             	add    %r8,%rdi
    7754:	4a 8d 04 0f          	lea    (%rdi,%r9,1),%rax
    7758:	48 39 f0             	cmp    %rsi,%rax
    775b:	0f 83 8a fe ff ff    	jae    75eb <core::str::<impl str>::contains+0x15b>
    7761:	41 0f b6 04 02       	movzbl (%r10,%rax,1),%eax
    7766:	49 0f a3 c3          	bt     %rax,%r11
    776a:	73 e5                	jae    7751 <core::str::<impl str>::contains+0x2c1>
    776c:	48 89 f8             	mov    %rdi,%rax
    776f:	48 f7 d8             	neg    %rax
    7772:	49 8d 0c 3a          	lea    (%r10,%rdi,1),%rcx
    7776:	4c 89 fb             	mov    %r15,%rbx
    7779:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7780:	49 39 dc             	cmp    %rbx,%r12
    7783:	74 2b                	je     77b0 <core::str::<impl str>::contains+0x320>
    7785:	48 8d 2c 1f          	lea    (%rdi,%rbx,1),%rbp
    7789:	48 39 f5             	cmp    %rsi,%rbp
    778c:	0f 83 17 01 00 00    	jae    78a9 <core::str::<impl str>::contains+0x419>
    7792:	41 0f b6 54 1d 00    	movzbl 0x0(%r13,%rbx,1),%edx
    7798:	48 8d 6b 01          	lea    0x1(%rbx),%rbp
    779c:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    77a0:	3a 14 19             	cmp    (%rcx,%rbx,1),%dl
    77a3:	48 89 eb             	mov    %rbp,%rbx
    77a6:	74 d8                	je     7780 <core::str::<impl str>::contains+0x2f0>
    77a8:	48 f7 d8             	neg    %rax
    77ab:	48 89 c7             	mov    %rax,%rdi
    77ae:	eb a4                	jmp    7754 <core::str::<impl str>::contains+0x2c4>
    77b0:	4c 89 f9             	mov    %r15,%rcx
    77b3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    77ba:	00 00 00 
    77bd:	0f 1f 00             	nopl   (%rax)
    77c0:	48 85 c9             	test   %rcx,%rcx
    77c3:	74 76                	je     783b <core::str::<impl str>::contains+0x3ab>
    77c5:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
    77c9:	4c 39 c1             	cmp    %r8,%rcx
    77cc:	0f 83 9e 00 00 00    	jae    7870 <core::str::<impl str>::contains+0x3e0>
    77d2:	48 8d 04 39          	lea    (%rcx,%rdi,1),%rax
    77d6:	48 39 f0             	cmp    %rsi,%rax
    77d9:	0f 83 a6 00 00 00    	jae    7885 <core::str::<impl str>::contains+0x3f5>
    77df:	41 0f b6 5c 0d 00    	movzbl 0x0(%r13,%rcx,1),%ebx
    77e5:	41 3a 1c 02          	cmp    (%r10,%rax,1),%bl
    77e9:	74 d5                	je     77c0 <core::str::<impl str>::contains+0x330>
    77eb:	4c 01 f7             	add    %r14,%rdi
    77ee:	e9 61 ff ff ff       	jmpq   7754 <core::str::<impl str>::contains+0x2c4>
    77f3:	44 89 c8             	mov    %r9d,%eax
    77f6:	34 01                	xor    $0x1,%al
    77f8:	88 44 24 38          	mov    %al,0x38(%rsp)
    77fc:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
    7801:	b0 01                	mov    $0x1,%al
    7803:	45 84 c9             	test   %r9b,%r9b
    7806:	75 3d                	jne    7845 <core::str::<impl str>::contains+0x3b5>
    7808:	eb 1a                	jmp    7824 <core::str::<impl str>::contains+0x394>
    780a:	41 80 f1 01          	xor    $0x1,%r9b
    780e:	44 88 4c 24 38       	mov    %r9b,0x38(%rsp)
    7813:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
    7818:	eb 29                	jmp    7843 <core::str::<impl str>::contains+0x3b3>
    781a:	c6 44 24 38 01       	movb   $0x1,0x38(%rsp)
    781f:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
    7824:	31 c0                	xor    %eax,%eax
    7826:	eb 1d                	jmp    7845 <core::str::<impl str>::contains+0x3b5>
    7828:	4c 01 c7             	add    %r8,%rdi
    782b:	48 89 7c 24 48       	mov    %rdi,0x48(%rsp)
    7830:	48 c7 44 24 58 00 00 	movq   $0x0,0x58(%rsp)
    7837:	00 00 
    7839:	eb 08                	jmp    7843 <core::str::<impl str>::contains+0x3b3>
    783b:	4c 01 c7             	add    %r8,%rdi
    783e:	48 89 7c 24 48       	mov    %rdi,0x48(%rsp)
    7843:	b0 01                	mov    $0x1,%al
    7845:	48 83 c4 78          	add    $0x78,%rsp
    7849:	5b                   	pop    %rbx
    784a:	41 5c                	pop    %r12
    784c:	41 5d                	pop    %r13
    784e:	41 5e                	pop    %r14
    7850:	41 5f                	pop    %r15
    7852:	5d                   	pop    %rbp
    7853:	c3                   	retq   
    7854:	48 01 f9             	add    %rdi,%rcx
    7857:	48 39 f1             	cmp    %rsi,%rcx
    785a:	48 0f 42 ce          	cmovb  %rsi,%rcx
    785e:	48 8d 15 13 be 03 00 	lea    0x3be13(%rip),%rdx        # 43678 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x120>
    7865:	48 89 cf             	mov    %rcx,%rdi
    7868:	ff 15 2a e4 03 00    	callq  *0x3e42a(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
    786e:	0f 0b                	ud2    
    7870:	48 8d 15 19 be 03 00 	lea    0x3be19(%rip),%rdx        # 43690 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x138>
    7877:	48 89 cf             	mov    %rcx,%rdi
    787a:	4c 89 c6             	mov    %r8,%rsi
    787d:	ff 15 15 e4 03 00    	callq  *0x3e415(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
    7883:	0f 0b                	ud2    
    7885:	48 8d 15 1c be 03 00 	lea    0x3be1c(%rip),%rdx        # 436a8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x150>
    788c:	48 89 c7             	mov    %rax,%rdi
    788f:	ff 15 03 e4 03 00    	callq  *0x3e403(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
    7895:	0f 0b                	ud2    
    7897:	4c 8d 05 4a c1 03 00 	lea    0x3c14a(%rip),%r8        # 439e8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x490>
    789e:	48 89 ce             	mov    %rcx,%rsi
    78a1:	ff 15 91 e5 03 00    	callq  *0x3e591(%rip)        # 45e38 <_GLOBAL_OFFSET_TABLE_+0x4a8>
    78a7:	0f 0b                	ud2    
    78a9:	4c 01 ff             	add    %r15,%rdi
    78ac:	48 39 f7             	cmp    %rsi,%rdi
    78af:	48 0f 42 fe          	cmovb  %rsi,%rdi
    78b3:	48 8d 15 be bd 03 00 	lea    0x3bdbe(%rip),%rdx        # 43678 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x120>
    78ba:	ff 15 d8 e3 03 00    	callq  *0x3e3d8(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
    78c0:	0f 0b                	ud2    
    78c2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    78c9:	00 00 00 
    78cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000078d0 <core::slice::sort::break_patterns>:
    78d0:	48 83 ec 18          	sub    $0x18,%rsp
    78d4:	48 83 fe 08          	cmp    $0x8,%rsi
    78d8:	0f 82 e0 01 00 00    	jb     7abe <core::slice::sort::break_patterns+0x1ee>
    78de:	48 8d 46 ff          	lea    -0x1(%rsi),%rax
    78e2:	48 0f bd c8          	bsr    %rax,%rcx
    78e6:	83 f1 3f             	xor    $0x3f,%ecx
    78e9:	49 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%r8
    78f0:	49 d3 e8             	shr    %cl,%r8
    78f3:	49 89 f2             	mov    %rsi,%r10
    78f6:	49 c1 ea 02          	shr    $0x2,%r10
    78fa:	4f 8d 0c 12          	lea    (%r10,%r10,1),%r9
    78fe:	49 83 c1 ff          	add    $0xffffffffffffffff,%r9
    7902:	89 f0                	mov    %esi,%eax
    7904:	c1 e0 0d             	shl    $0xd,%eax
    7907:	31 f0                	xor    %esi,%eax
    7909:	89 c1                	mov    %eax,%ecx
    790b:	c1 e9 11             	shr    $0x11,%ecx
    790e:	31 c1                	xor    %eax,%ecx
    7910:	89 c8                	mov    %ecx,%eax
    7912:	c1 e0 05             	shl    $0x5,%eax
    7915:	31 c8                	xor    %ecx,%eax
    7917:	89 c1                	mov    %eax,%ecx
    7919:	c1 e1 0d             	shl    $0xd,%ecx
    791c:	31 c1                	xor    %eax,%ecx
    791e:	48 c1 e0 20          	shl    $0x20,%rax
    7922:	89 ca                	mov    %ecx,%edx
    7924:	c1 ea 11             	shr    $0x11,%edx
    7927:	31 ca                	xor    %ecx,%edx
    7929:	41 89 d3             	mov    %edx,%r11d
    792c:	41 c1 e3 05          	shl    $0x5,%r11d
    7930:	41 31 d3             	xor    %edx,%r11d
    7933:	4c 01 d8             	add    %r11,%rax
    7936:	4c 21 c0             	and    %r8,%rax
    7939:	31 d2                	xor    %edx,%edx
    793b:	48 39 f0             	cmp    %rsi,%rax
    793e:	48 0f 43 d6          	cmovae %rsi,%rdx
    7942:	49 39 f1             	cmp    %rsi,%r9
    7945:	0f 83 8d 01 00 00    	jae    7ad8 <core::slice::sort::break_patterns+0x208>
    794b:	48 29 d0             	sub    %rdx,%rax
    794e:	48 39 f0             	cmp    %rsi,%rax
    7951:	0f 83 6c 01 00 00    	jae    7ac3 <core::slice::sort::break_patterns+0x1f3>
    7957:	4d 01 d2             	add    %r10,%r10
    795a:	4b 8d 14 49          	lea    (%r9,%r9,2),%rdx
    795e:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    7962:	48 8b 4c d7 10       	mov    0x10(%rdi,%rdx,8),%rcx
    7967:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    796c:	0f 10 04 d7          	movups (%rdi,%rdx,8),%xmm0
    7970:	0f 29 04 24          	movaps %xmm0,(%rsp)
    7974:	48 8b 4c c7 10       	mov    0x10(%rdi,%rax,8),%rcx
    7979:	0f 10 04 c7          	movups (%rdi,%rax,8),%xmm0
    797d:	0f 11 04 d7          	movups %xmm0,(%rdi,%rdx,8)
    7981:	48 89 4c d7 10       	mov    %rcx,0x10(%rdi,%rdx,8)
    7986:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    798b:	48 89 4c c7 10       	mov    %rcx,0x10(%rdi,%rax,8)
    7990:	0f 28 04 24          	movaps (%rsp),%xmm0
    7994:	0f 11 04 c7          	movups %xmm0,(%rdi,%rax,8)
    7998:	44 89 d8             	mov    %r11d,%eax
    799b:	c1 e0 0d             	shl    $0xd,%eax
    799e:	44 31 d8             	xor    %r11d,%eax
    79a1:	89 c1                	mov    %eax,%ecx
    79a3:	c1 e9 11             	shr    $0x11,%ecx
    79a6:	31 c1                	xor    %eax,%ecx
    79a8:	89 c8                	mov    %ecx,%eax
    79aa:	c1 e0 05             	shl    $0x5,%eax
    79ad:	31 c8                	xor    %ecx,%eax
    79af:	89 c1                	mov    %eax,%ecx
    79b1:	c1 e1 0d             	shl    $0xd,%ecx
    79b4:	31 c1                	xor    %eax,%ecx
    79b6:	48 c1 e0 20          	shl    $0x20,%rax
    79ba:	89 ca                	mov    %ecx,%edx
    79bc:	c1 ea 11             	shr    $0x11,%edx
    79bf:	31 ca                	xor    %ecx,%edx
    79c1:	41 89 d1             	mov    %edx,%r9d
    79c4:	41 c1 e1 05          	shl    $0x5,%r9d
    79c8:	41 31 d1             	xor    %edx,%r9d
    79cb:	4c 01 c8             	add    %r9,%rax
    79ce:	4c 21 c0             	and    %r8,%rax
    79d1:	31 d2                	xor    %edx,%edx
    79d3:	48 39 f0             	cmp    %rsi,%rax
    79d6:	48 0f 43 d6          	cmovae %rsi,%rdx
    79da:	49 39 f2             	cmp    %rsi,%r10
    79dd:	0f 83 f2 00 00 00    	jae    7ad5 <core::slice::sort::break_patterns+0x205>
    79e3:	48 29 d0             	sub    %rdx,%rax
    79e6:	48 39 f0             	cmp    %rsi,%rax
    79e9:	0f 83 d4 00 00 00    	jae    7ac3 <core::slice::sort::break_patterns+0x1f3>
    79ef:	4b 8d 14 52          	lea    (%r10,%r10,2),%rdx
    79f3:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    79f7:	48 8b 4c d7 10       	mov    0x10(%rdi,%rdx,8),%rcx
    79fc:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    7a01:	0f 10 04 d7          	movups (%rdi,%rdx,8),%xmm0
    7a05:	0f 29 04 24          	movaps %xmm0,(%rsp)
    7a09:	48 8b 4c c7 10       	mov    0x10(%rdi,%rax,8),%rcx
    7a0e:	0f 10 04 c7          	movups (%rdi,%rax,8),%xmm0
    7a12:	0f 11 04 d7          	movups %xmm0,(%rdi,%rdx,8)
    7a16:	48 89 4c d7 10       	mov    %rcx,0x10(%rdi,%rdx,8)
    7a1b:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    7a20:	48 89 4c c7 10       	mov    %rcx,0x10(%rdi,%rax,8)
    7a25:	0f 28 04 24          	movaps (%rsp),%xmm0
    7a29:	0f 11 04 c7          	movups %xmm0,(%rdi,%rax,8)
    7a2d:	44 89 c8             	mov    %r9d,%eax
    7a30:	c1 e0 0d             	shl    $0xd,%eax
    7a33:	44 31 c8             	xor    %r9d,%eax
    7a36:	89 c1                	mov    %eax,%ecx
    7a38:	c1 e9 11             	shr    $0x11,%ecx
    7a3b:	31 c1                	xor    %eax,%ecx
    7a3d:	89 c8                	mov    %ecx,%eax
    7a3f:	c1 e0 05             	shl    $0x5,%eax
    7a42:	31 c8                	xor    %ecx,%eax
    7a44:	89 c1                	mov    %eax,%ecx
    7a46:	c1 e1 0d             	shl    $0xd,%ecx
    7a49:	31 c1                	xor    %eax,%ecx
    7a4b:	49 89 c1             	mov    %rax,%r9
    7a4e:	49 c1 e1 20          	shl    $0x20,%r9
    7a52:	89 ca                	mov    %ecx,%edx
    7a54:	c1 ea 11             	shr    $0x11,%edx
    7a57:	31 ca                	xor    %ecx,%edx
    7a59:	89 d0                	mov    %edx,%eax
    7a5b:	c1 e0 05             	shl    $0x5,%eax
    7a5e:	31 d0                	xor    %edx,%eax
    7a60:	4c 09 c8             	or     %r9,%rax
    7a63:	4c 21 c0             	and    %r8,%rax
    7a66:	31 c9                	xor    %ecx,%ecx
    7a68:	48 39 f0             	cmp    %rsi,%rax
    7a6b:	48 0f 43 ce          	cmovae %rsi,%rcx
    7a6f:	49 83 ca 01          	or     $0x1,%r10
    7a73:	49 39 f2             	cmp    %rsi,%r10
    7a76:	73 5d                	jae    7ad5 <core::slice::sort::break_patterns+0x205>
    7a78:	48 29 c8             	sub    %rcx,%rax
    7a7b:	48 39 f0             	cmp    %rsi,%rax
    7a7e:	73 43                	jae    7ac3 <core::slice::sort::break_patterns+0x1f3>
    7a80:	4b 8d 0c 52          	lea    (%r10,%r10,2),%rcx
    7a84:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    7a88:	48 8b 54 cf 10       	mov    0x10(%rdi,%rcx,8),%rdx
    7a8d:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    7a92:	0f 10 04 cf          	movups (%rdi,%rcx,8),%xmm0
    7a96:	0f 29 04 24          	movaps %xmm0,(%rsp)
    7a9a:	48 8b 54 c7 10       	mov    0x10(%rdi,%rax,8),%rdx
    7a9f:	0f 10 04 c7          	movups (%rdi,%rax,8),%xmm0
    7aa3:	0f 11 04 cf          	movups %xmm0,(%rdi,%rcx,8)
    7aa7:	48 89 54 cf 10       	mov    %rdx,0x10(%rdi,%rcx,8)
    7aac:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    7ab1:	48 89 4c c7 10       	mov    %rcx,0x10(%rdi,%rax,8)
    7ab6:	0f 28 04 24          	movaps (%rsp),%xmm0
    7aba:	0f 11 04 c7          	movups %xmm0,(%rdi,%rax,8)
    7abe:	48 83 c4 18          	add    $0x18,%rsp
    7ac2:	c3                   	retq   
    7ac3:	48 8d 15 8e bc 03 00 	lea    0x3bc8e(%rip),%rdx        # 43758 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x200>
    7aca:	48 89 c7             	mov    %rax,%rdi
    7acd:	ff 15 c5 e1 03 00    	callq  *0x3e1c5(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
    7ad3:	0f 0b                	ud2    
    7ad5:	4d 89 d1             	mov    %r10,%r9
    7ad8:	48 8d 15 61 bc 03 00 	lea    0x3bc61(%rip),%rdx        # 43740 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1e8>
    7adf:	4c 89 cf             	mov    %r9,%rdi
    7ae2:	ff 15 b0 e1 03 00    	callq  *0x3e1b0(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
    7ae8:	0f 0b                	ud2    
    7aea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000007af0 <core::slice::sort::partial_insertion_sort>:
    7af0:	41 57                	push   %r15
    7af2:	41 56                	push   %r14
    7af4:	41 55                	push   %r13
    7af6:	41 54                	push   %r12
    7af8:	53                   	push   %rbx
    7af9:	48 83 ec 20          	sub    $0x20,%rsp
    7afd:	4c 8d 76 ff          	lea    -0x1(%rsi),%r14
    7b01:	4c 8d 47 d0          	lea    -0x30(%rdi),%r8
    7b05:	4c 8d 4f 30          	lea    0x30(%rdi),%r9
    7b09:	4c 8d 56 fe          	lea    -0x2(%rsi),%r10
    7b0d:	b9 01 00 00 00       	mov    $0x1,%ecx
    7b12:	45 31 db             	xor    %r11d,%r11d
    7b15:	eb 1e                	jmp    7b35 <core::slice::sort::partial_insertion_sort+0x45>
    7b17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    7b1e:	00 00 
    7b20:	4c 89 3a             	mov    %r15,(%rdx)
    7b23:	0f 28 04 24          	movaps (%rsp),%xmm0
    7b27:	0f 11 42 08          	movups %xmm0,0x8(%rdx)
    7b2b:	49 83 fb 05          	cmp    $0x5,%r11
    7b2f:	0f 84 e6 01 00 00    	je     7d1b <core::slice::sort::partial_insertion_sort+0x22b>
    7b35:	48 39 f1             	cmp    %rsi,%rcx
    7b38:	73 46                	jae    7b80 <core::slice::sort::partial_insertion_sort+0x90>
    7b3a:	48 8d 04 49          	lea    (%rcx,%rcx,2),%rax
    7b3e:	48 8b 1c c7          	mov    (%rdi,%rax,8),%rbx
    7b42:	b2 01                	mov    $0x1,%dl
    7b44:	48 3b 5c c7 e8       	cmp    -0x18(%rdi,%rax,8),%rbx
    7b49:	72 37                	jb     7b82 <core::slice::sort::partial_insertion_sort+0x92>
    7b4b:	48 8d 04 c7          	lea    (%rdi,%rax,8),%rax
    7b4f:	90                   	nop
    7b50:	49 39 ce             	cmp    %rcx,%r14
    7b53:	0f 84 b2 01 00 00    	je     7d0b <core::slice::sort::partial_insertion_sort+0x21b>
    7b59:	48 83 c1 01          	add    $0x1,%rcx
    7b5d:	48 8b 50 18          	mov    0x18(%rax),%rdx
    7b61:	48 8d 58 18          	lea    0x18(%rax),%rbx
    7b65:	48 3b 10             	cmp    (%rax),%rdx
    7b68:	48 89 d8             	mov    %rbx,%rax
    7b6b:	73 e3                	jae    7b50 <core::slice::sort::partial_insertion_sort+0x60>
    7b6d:	48 39 f1             	cmp    %rsi,%rcx
    7b70:	0f 92 c2             	setb   %dl
    7b73:	e9 0a 00 00 00       	jmpq   7b82 <core::slice::sort::partial_insertion_sort+0x92>
    7b78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    7b7f:	00 
    7b80:	31 d2                	xor    %edx,%edx
    7b82:	48 39 f1             	cmp    %rsi,%rcx
    7b85:	0f 94 c0             	sete   %al
    7b88:	0f 84 7f 01 00 00    	je     7d0d <core::slice::sort::partial_insertion_sort+0x21d>
    7b8e:	48 83 fe 32          	cmp    $0x32,%rsi
    7b92:	0f 82 75 01 00 00    	jb     7d0d <core::slice::sort::partial_insertion_sort+0x21d>
    7b98:	48 8d 41 ff          	lea    -0x1(%rcx),%rax
    7b9c:	48 39 f0             	cmp    %rsi,%rax
    7b9f:	0f 83 7a 01 00 00    	jae    7d1f <core::slice::sort::partial_insertion_sort+0x22f>
    7ba5:	84 d2                	test   %dl,%dl
    7ba7:	0f 84 84 01 00 00    	je     7d31 <core::slice::sort::partial_insertion_sort+0x241>
    7bad:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    7bb1:	4c 8d 24 49          	lea    (%rcx,%rcx,2),%r12
    7bb5:	48 8b 54 c7 10       	mov    0x10(%rdi,%rax,8),%rdx
    7bba:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    7bbf:	0f 10 04 c7          	movups (%rdi,%rax,8),%xmm0
    7bc3:	0f 29 04 24          	movaps %xmm0,(%rsp)
    7bc7:	4a 8b 54 e7 10       	mov    0x10(%rdi,%r12,8),%rdx
    7bcc:	48 89 54 c7 10       	mov    %rdx,0x10(%rdi,%rax,8)
    7bd1:	42 0f 10 04 e7       	movups (%rdi,%r12,8),%xmm0
    7bd6:	0f 11 04 c7          	movups %xmm0,(%rdi,%rax,8)
    7bda:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    7bdf:	4a 89 54 e7 10       	mov    %rdx,0x10(%rdi,%r12,8)
    7be4:	0f 28 04 24          	movaps (%rsp),%xmm0
    7be8:	42 0f 11 04 e7       	movups %xmm0,(%rdi,%r12,8)
    7bed:	48 83 f9 02          	cmp    $0x2,%rcx
    7bf1:	0f 82 84 00 00 00    	jb     7c7b <core::slice::sort::partial_insertion_sort+0x18b>
    7bf7:	4c 8d 2c c7          	lea    (%rdi,%rax,8),%r13
    7bfb:	48 8d 51 fe          	lea    -0x2(%rcx),%rdx
    7bff:	48 8d 1c 52          	lea    (%rdx,%rdx,2),%rbx
    7c03:	4d 8b 7d 00          	mov    0x0(%r13),%r15
    7c07:	4c 3b 3c df          	cmp    (%rdi,%rbx,8),%r15
    7c0b:	73 6e                	jae    7c7b <core::slice::sort::partial_insertion_sort+0x18b>
    7c0d:	48 8d 1c df          	lea    (%rdi,%rbx,8),%rbx
    7c11:	0f 10 44 c7 08       	movups 0x8(%rdi,%rax,8),%xmm0
    7c16:	0f 29 04 24          	movaps %xmm0,(%rsp)
    7c1a:	48 8b 43 10          	mov    0x10(%rbx),%rax
    7c1e:	49 89 45 10          	mov    %rax,0x10(%r13)
    7c22:	0f 10 03             	movups (%rbx),%xmm0
    7c25:	41 0f 11 45 00       	movups %xmm0,0x0(%r13)
    7c2a:	48 85 d2             	test   %rdx,%rdx
    7c2d:	74 41                	je     7c70 <core::slice::sort::partial_insertion_sort+0x180>
    7c2f:	4e 3b 7c e7 b8       	cmp    -0x48(%rdi,%r12,8),%r15
    7c34:	73 3a                	jae    7c70 <core::slice::sort::partial_insertion_sort+0x180>
    7c36:	4b 8d 04 e0          	lea    (%r8,%r12,8),%rax
    7c3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7c40:	48 8b 58 f8          	mov    -0x8(%rax),%rbx
    7c44:	48 89 58 10          	mov    %rbx,0x10(%rax)
    7c48:	0f 10 40 e8          	movups -0x18(%rax),%xmm0
    7c4c:	0f 11 00             	movups %xmm0,(%rax)
    7c4f:	48 83 c2 ff          	add    $0xffffffffffffffff,%rdx
    7c53:	74 0f                	je     7c64 <core::slice::sort::partial_insertion_sort+0x174>
    7c55:	48 8d 58 e8          	lea    -0x18(%rax),%rbx
    7c59:	4c 3b 78 d0          	cmp    -0x30(%rax),%r15
    7c5d:	48 89 d8             	mov    %rbx,%rax
    7c60:	72 de                	jb     7c40 <core::slice::sort::partial_insertion_sort+0x150>
    7c62:	eb 0c                	jmp    7c70 <core::slice::sort::partial_insertion_sort+0x180>
    7c64:	48 89 fb             	mov    %rdi,%rbx
    7c67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    7c6e:	00 00 
    7c70:	4c 89 3b             	mov    %r15,(%rbx)
    7c73:	0f 28 04 24          	movaps (%rsp),%xmm0
    7c77:	0f 11 43 08          	movups %xmm0,0x8(%rbx)
    7c7b:	49 83 c3 01          	add    $0x1,%r11
    7c7f:	48 89 f3             	mov    %rsi,%rbx
    7c82:	48 29 cb             	sub    %rcx,%rbx
    7c85:	48 83 fb 02          	cmp    $0x2,%rbx
    7c89:	0f 82 9c fe ff ff    	jb     7b2b <core::slice::sort::partial_insertion_sort+0x3b>
    7c8f:	4e 8d 2c e7          	lea    (%rdi,%r12,8),%r13
    7c93:	4d 8b 7d 00          	mov    0x0(%r13),%r15
    7c97:	4d 39 7d 18          	cmp    %r15,0x18(%r13)
    7c9b:	0f 83 8a fe ff ff    	jae    7b2b <core::slice::sort::partial_insertion_sort+0x3b>
    7ca1:	49 8d 55 18          	lea    0x18(%r13),%rdx
    7ca5:	42 0f 10 44 e7 08    	movups 0x8(%rdi,%r12,8),%xmm0
    7cab:	0f 29 04 24          	movaps %xmm0,(%rsp)
    7caf:	48 8b 42 10          	mov    0x10(%rdx),%rax
    7cb3:	49 89 45 10          	mov    %rax,0x10(%r13)
    7cb7:	0f 10 02             	movups (%rdx),%xmm0
    7cba:	41 0f 11 45 00       	movups %xmm0,0x0(%r13)
    7cbf:	48 83 fb 03          	cmp    $0x3,%rbx
    7cc3:	0f 82 57 fe ff ff    	jb     7b20 <core::slice::sort::partial_insertion_sort+0x30>
    7cc9:	4d 39 7d 30          	cmp    %r15,0x30(%r13)
    7ccd:	0f 83 4d fe ff ff    	jae    7b20 <core::slice::sort::partial_insertion_sort+0x30>
    7cd3:	4b 8d 1c e1          	lea    (%r9,%r12,8),%rbx
    7cd7:	4c 89 d0             	mov    %r10,%rax
    7cda:	48 29 c8             	sub    %rcx,%rax
    7cdd:	0f 1f 00             	nopl   (%rax)
    7ce0:	48 89 da             	mov    %rbx,%rdx
    7ce3:	48 8b 5b 10          	mov    0x10(%rbx),%rbx
    7ce7:	48 89 5a f8          	mov    %rbx,-0x8(%rdx)
    7ceb:	0f 10 02             	movups (%rdx),%xmm0
    7cee:	0f 11 42 e8          	movups %xmm0,-0x18(%rdx)
    7cf2:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    7cf6:	0f 84 24 fe ff ff    	je     7b20 <core::slice::sort::partial_insertion_sort+0x30>
    7cfc:	48 8d 5a 18          	lea    0x18(%rdx),%rbx
    7d00:	4c 39 7a 18          	cmp    %r15,0x18(%rdx)
    7d04:	72 da                	jb     7ce0 <core::slice::sort::partial_insertion_sort+0x1f0>
    7d06:	e9 15 fe ff ff       	jmpq   7b20 <core::slice::sort::partial_insertion_sort+0x30>
    7d0b:	b0 01                	mov    $0x1,%al
    7d0d:	48 83 c4 20          	add    $0x20,%rsp
    7d11:	5b                   	pop    %rbx
    7d12:	41 5c                	pop    %r12
    7d14:	41 5d                	pop    %r13
    7d16:	41 5e                	pop    %r14
    7d18:	41 5f                	pop    %r15
    7d1a:	c3                   	retq   
    7d1b:	31 c0                	xor    %eax,%eax
    7d1d:	eb ee                	jmp    7d0d <core::slice::sort::partial_insertion_sort+0x21d>
    7d1f:	48 8d 15 1a ba 03 00 	lea    0x3ba1a(%rip),%rdx        # 43740 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1e8>
    7d26:	48 89 c7             	mov    %rax,%rdi
    7d29:	ff 15 69 df 03 00    	callq  *0x3df69(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
    7d2f:	0f 0b                	ud2    
    7d31:	48 8d 15 20 ba 03 00 	lea    0x3ba20(%rip),%rdx        # 43758 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x200>
    7d38:	48 89 cf             	mov    %rcx,%rdi
    7d3b:	ff 15 57 df 03 00    	callq  *0x3df57(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
    7d41:	0f 0b                	ud2    
    7d43:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7d4a:	00 00 00 
    7d4d:	0f 1f 00             	nopl   (%rax)

0000000000007d50 <core::slice::sort::recurse>:
    7d50:	55                   	push   %rbp
    7d51:	41 57                	push   %r15
    7d53:	41 56                	push   %r14
    7d55:	41 55                	push   %r13
    7d57:	41 54                	push   %r12
    7d59:	53                   	push   %rbx
    7d5a:	48 81 ec e8 01 00 00 	sub    $0x1e8,%rsp
    7d61:	44 89 44 24 34       	mov    %r8d,0x34(%rsp)
    7d66:	49 89 fe             	mov    %rdi,%r14
    7d69:	48 83 fe 15          	cmp    $0x15,%rsi
    7d6d:	73 08                	jae    7d77 <core::slice::sort::recurse+0x27>
    7d6f:	49 89 f5             	mov    %rsi,%r13
    7d72:	e9 0f 0c 00 00       	jmpq   8986 <core::slice::sort::recurse+0xc36>
    7d77:	49 89 ca             	mov    %rcx,%r10
    7d7a:	48 89 54 24 58       	mov    %rdx,0x58(%rsp)
    7d7f:	41 b3 01             	mov    $0x1,%r11b
    7d82:	41 b7 01             	mov    $0x1,%r15b
    7d85:	45 84 db             	test   %r11b,%r11b
    7d88:	0f 95 c0             	setne  %al
    7d8b:	45 84 ff             	test   %r15b,%r15b
    7d8e:	0f 95 c1             	setne  %cl
    7d91:	20 c1                	and    %al,%cl
    7d93:	88 4c 24 40          	mov    %cl,0x40(%rsp)
    7d97:	49 89 f7             	mov    %rsi,%r15
    7d9a:	4c 89 f3             	mov    %r14,%rbx
    7d9d:	48 89 74 24 60       	mov    %rsi,0x60(%rsp)
    7da2:	4c 89 54 24 38       	mov    %r10,0x38(%rsp)
    7da7:	44 88 5c 24 0f       	mov    %r11b,0xf(%rsp)
    7dac:	4c 89 74 24 68       	mov    %r14,0x68(%rsp)
    7db1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7db8:	00 00 00 
    7dbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7dc0:	83 7c 24 34 00       	cmpl   $0x0,0x34(%rsp)
    7dc5:	0f 84 a3 0b 00 00    	je     896e <core::slice::sort::recurse+0xc1e>
    7dcb:	45 84 db             	test   %r11b,%r11b
    7dce:	0f 84 25 04 00 00    	je     81f9 <core::slice::sort::recurse+0x4a9>
    7dd4:	4d 89 fc             	mov    %r15,%r12
    7dd7:	49 c1 ec 02          	shr    $0x2,%r12
    7ddb:	4b 8d 34 24          	lea    (%r12,%r12,1),%rsi
    7ddf:	4f 8d 2c 64          	lea    (%r12,%r12,2),%r13
    7de3:	49 83 ff 32          	cmp    $0x32,%r15
    7de7:	0f 82 c3 01 00 00    	jb     7fb0 <core::slice::sort::recurse+0x260>
    7ded:	48 8d 56 ff          	lea    -0x1(%rsi),%rdx
    7df1:	48 89 f0             	mov    %rsi,%rax
    7df4:	48 83 c8 01          	or     $0x1,%rax
    7df8:	48 8d 0c 76          	lea    (%rsi,%rsi,2),%rcx
    7dfc:	48 8b 6c cb e8       	mov    -0x18(%rbx,%rcx,8),%rbp
    7e01:	48 8b 3c cb          	mov    (%rbx,%rcx,8),%rdi
    7e05:	48 89 7c 24 70       	mov    %rdi,0x70(%rsp)
    7e0a:	48 89 e9             	mov    %rbp,%rcx
    7e0d:	48 89 6c 24 48       	mov    %rbp,0x48(%rsp)
    7e12:	48 39 ef             	cmp    %rbp,%rdi
    7e15:	49 89 f0             	mov    %rsi,%r8
    7e18:	4c 0f 42 c2          	cmovb  %rdx,%r8
    7e1c:	48 0f 42 d6          	cmovb  %rsi,%rdx
    7e20:	48 89 fd             	mov    %rdi,%rbp
    7e23:	48 0f 42 e9          	cmovb  %rcx,%rbp
    7e27:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
    7e2b:	48 8b 0c f3          	mov    (%rbx,%rsi,8),%rcx
    7e2f:	48 89 8c 24 a8 00 00 	mov    %rcx,0xa8(%rsp)
    7e36:	00 
    7e37:	48 39 e9             	cmp    %rbp,%rcx
    7e3a:	4c 0f 42 c0          	cmovb  %rax,%r8
    7e3e:	4c 89 7c 24 50       	mov    %r15,0x50(%rsp)
    7e43:	48 89 e8             	mov    %rbp,%rax
    7e46:	48 0f 42 c1          	cmovb  %rcx,%rax
    7e4a:	48 89 c7             	mov    %rax,%rdi
    7e4d:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    7e54:	00 
    7e55:	49 8d 45 ff          	lea    -0x1(%r13),%rax
    7e59:	4d 8d 4d 01          	lea    0x1(%r13),%r9
    7e5d:	4f 8d 74 6d 00       	lea    0x0(%r13,%r13,2),%r14
    7e62:	4a 8b 4c f3 e8       	mov    -0x18(%rbx,%r14,8),%rcx
    7e67:	48 89 8c 24 b0 00 00 	mov    %rcx,0xb0(%rsp)
    7e6e:	00 
    7e6f:	4e 8b 1c f3          	mov    (%rbx,%r14,8),%r11
    7e73:	4c 89 9c 24 b8 00 00 	mov    %r11,0xb8(%rsp)
    7e7a:	00 
    7e7b:	49 39 cb             	cmp    %rcx,%r11
    7e7e:	4c 89 ee             	mov    %r13,%rsi
    7e81:	48 0f 42 f0          	cmovb  %rax,%rsi
    7e85:	49 0f 42 c5          	cmovb  %r13,%rax
    7e89:	4c 0f 42 d9          	cmovb  %rcx,%r11
    7e8d:	4a 8b 4c f3 18       	mov    0x18(%rbx,%r14,8),%rcx
    7e92:	48 89 8c 24 a0 00 00 	mov    %rcx,0xa0(%rsp)
    7e99:	00 
    7e9a:	4c 39 d9             	cmp    %r11,%rcx
    7e9d:	49 0f 42 f1          	cmovb  %r9,%rsi
    7ea1:	4d 89 de             	mov    %r11,%r14
    7ea4:	4c 0f 42 f1          	cmovb  %rcx,%r14
    7ea8:	4c 8d 14 40          	lea    (%rax,%rax,2),%r10
    7eac:	4a 8b 0c d3          	mov    (%rbx,%r10,8),%rcx
    7eb0:	48 89 8c 24 98 00 00 	mov    %rcx,0x98(%rsp)
    7eb7:	00 
    7eb8:	49 39 ce             	cmp    %rcx,%r14
    7ebb:	48 0f 42 f0          	cmovb  %rax,%rsi
    7ebf:	48 8d 04 52          	lea    (%rdx,%rdx,2),%rax
    7ec3:	48 8b 04 c3          	mov    (%rbx,%rax,8),%rax
    7ec7:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
    7ece:	00 
    7ecf:	48 39 c7             	cmp    %rax,%rdi
    7ed2:	4c 0f 42 c2          	cmovb  %rdx,%r8
    7ed6:	4a 8b 54 eb e8       	mov    -0x18(%rbx,%r13,8),%rdx
    7edb:	4a 8b 04 eb          	mov    (%rbx,%r13,8),%rax
    7edf:	45 31 c9             	xor    %r9d,%r9d
    7ee2:	48 39 d0             	cmp    %rdx,%rax
    7ee5:	48 0f 42 c2          	cmovb  %rdx,%rax
    7ee9:	49 8d 4c 24 ff       	lea    -0x1(%r12),%rcx
    7eee:	4c 89 e7             	mov    %r12,%rdi
    7ef1:	48 0f 42 f9          	cmovb  %rcx,%rdi
    7ef5:	41 0f 92 c1          	setb   %r9b
    7ef9:	49 0f 42 cc          	cmovb  %r12,%rcx
    7efd:	4e 8b 6c eb 18       	mov    0x18(%rbx,%r13,8),%r13
    7f02:	49 39 c5             	cmp    %rax,%r13
    7f05:	49 8d 51 01          	lea    0x1(%r9),%rdx
    7f09:	49 0f 43 d1          	cmovae %r9,%rdx
    7f0d:	49 89 c1             	mov    %rax,%r9
    7f10:	4d 0f 42 cd          	cmovb  %r13,%r9
    7f14:	4c 8d 14 49          	lea    (%rcx,%rcx,2),%r10
    7f18:	4e 8b 14 d3          	mov    (%rbx,%r10,8),%r10
    7f1c:	4d 39 d1             	cmp    %r10,%r9
    7f1f:	48 83 d2 00          	adc    $0x0,%rdx
    7f23:	4c 8b 7c 24 48       	mov    0x48(%rsp),%r15
    7f28:	4c 39 7c 24 70       	cmp    %r15,0x70(%rsp)
    7f2d:	48 83 d2 00          	adc    $0x0,%rdx
    7f31:	48 39 ac 24 a8 00 00 	cmp    %rbp,0xa8(%rsp)
    7f38:	00 
    7f39:	48 83 d2 00          	adc    $0x0,%rdx
    7f3d:	48 8b ac 24 88 00 00 	mov    0x88(%rsp),%rbp
    7f44:	00 
    7f45:	48 3b ac 24 90 00 00 	cmp    0x90(%rsp),%rbp
    7f4c:	00 
    7f4d:	4c 8b 7c 24 50       	mov    0x50(%rsp),%r15
    7f52:	48 83 d2 00          	adc    $0x0,%rdx
    7f56:	49 83 c4 01          	add    $0x1,%r12
    7f5a:	49 39 c5             	cmp    %rax,%r13
    7f5d:	4c 0f 43 e7          	cmovae %rdi,%r12
    7f61:	4d 39 d1             	cmp    %r10,%r9
    7f64:	4c 8b 54 24 38       	mov    0x38(%rsp),%r10
    7f69:	4c 0f 42 e1          	cmovb  %rcx,%r12
    7f6d:	48 8b 84 24 b0 00 00 	mov    0xb0(%rsp),%rax
    7f74:	00 
    7f75:	48 39 84 24 b8 00 00 	cmp    %rax,0xb8(%rsp)
    7f7c:	00 
    7f7d:	48 83 d2 00          	adc    $0x0,%rdx
    7f81:	4c 39 9c 24 a0 00 00 	cmp    %r11,0xa0(%rsp)
    7f88:	00 
    7f89:	44 8a 5c 24 0f       	mov    0xf(%rsp),%r11b
    7f8e:	48 83 d2 00          	adc    $0x0,%rdx
    7f92:	4c 3b b4 24 98 00 00 	cmp    0x98(%rsp),%r14
    7f99:	00 
    7f9a:	4c 8b 74 24 68       	mov    0x68(%rsp),%r14
    7f9f:	48 83 d2 00          	adc    $0x0,%rdx
    7fa3:	49 89 f5             	mov    %rsi,%r13
    7fa6:	4c 89 c6             	mov    %r8,%rsi
    7fa9:	e9 04 00 00 00       	jmpq   7fb2 <core::slice::sort::recurse+0x262>
    7fae:	66 90                	xchg   %ax,%ax
    7fb0:	31 d2                	xor    %edx,%edx
    7fb2:	48 8d 04 76          	lea    (%rsi,%rsi,2),%rax
    7fb6:	48 8b 0c c3          	mov    (%rbx,%rax,8),%rcx
    7fba:	4b 8d 04 64          	lea    (%r12,%r12,2),%rax
    7fbe:	48 8b 3c c3          	mov    (%rbx,%rax,8),%rdi
    7fc2:	48 39 f9             	cmp    %rdi,%rcx
    7fc5:	48 83 d2 00          	adc    $0x0,%rdx
    7fc9:	48 39 f9             	cmp    %rdi,%rcx
    7fcc:	48 89 f0             	mov    %rsi,%rax
    7fcf:	49 0f 42 c4          	cmovb  %r12,%rax
    7fd3:	4c 0f 42 e6          	cmovb  %rsi,%r12
    7fd7:	48 0f 42 cf          	cmovb  %rdi,%rcx
    7fdb:	4a 8d 34 6d 00 00 00 	lea    0x0(,%r13,2),%rsi
    7fe2:	00 
    7fe3:	4c 01 ee             	add    %r13,%rsi
    7fe6:	48 8b 34 f3          	mov    (%rbx,%rsi,8),%rsi
    7fea:	48 39 ce             	cmp    %rcx,%rsi
    7fed:	48 83 d2 00          	adc    $0x0,%rdx
    7ff1:	48 39 ce             	cmp    %rcx,%rsi
    7ff4:	49 0f 42 c5          	cmovb  %r13,%rax
    7ff8:	48 0f 42 ce          	cmovb  %rsi,%rcx
    7ffc:	4b 8d 34 64          	lea    (%r12,%r12,2),%rsi
    8000:	48 3b 0c f3          	cmp    (%rbx,%rsi,8),%rcx
    8004:	73 1a                	jae    8020 <core::slice::sort::recurse+0x2d0>
    8006:	48 83 fa 0b          	cmp    $0xb,%rdx
    800a:	73 24                	jae    8030 <core::slice::sort::recurse+0x2e0>
    800c:	48 83 c2 01          	add    $0x1,%rdx
    8010:	e9 0e 00 00 00       	jmpq   8023 <core::slice::sort::recurse+0x2d3>
    8015:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    801c:	00 00 00 
    801f:	90                   	nop
    8020:	49 89 c4             	mov    %rax,%r12
    8023:	48 85 d2             	test   %rdx,%rdx
    8026:	0f 94 c0             	sete   %al
    8029:	e9 68 00 00 00       	jmpq   8096 <core::slice::sort::recurse+0x346>
    802e:	66 90                	xchg   %ax,%ax
    8030:	4c 89 f8             	mov    %r15,%rax
    8033:	48 d1 e8             	shr    %rax
    8036:	0f 84 52 00 00 00    	je     808e <core::slice::sort::recurse+0x33e>
    803c:	4b 8d 0c 7f          	lea    (%r15,%r15,2),%rcx
    8040:	48 8d 0c cb          	lea    (%rbx,%rcx,8),%rcx
    8044:	48 83 c1 e8          	add    $0xffffffffffffffe8,%rcx
    8048:	48 89 da             	mov    %rbx,%rdx
    804b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8050:	48 8b 72 10          	mov    0x10(%rdx),%rsi
    8054:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
    8059:	0f 10 02             	movups (%rdx),%xmm0
    805c:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    8061:	48 8b 71 10          	mov    0x10(%rcx),%rsi
    8065:	0f 10 01             	movups (%rcx),%xmm0
    8068:	0f 11 02             	movups %xmm0,(%rdx)
    806b:	48 89 72 10          	mov    %rsi,0x10(%rdx)
    806f:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    8074:	48 89 71 10          	mov    %rsi,0x10(%rcx)
    8078:	0f 28 44 24 10       	movaps 0x10(%rsp),%xmm0
    807d:	0f 11 01             	movups %xmm0,(%rcx)
    8080:	48 83 c1 e8          	add    $0xffffffffffffffe8,%rcx
    8084:	48 83 c2 18          	add    $0x18,%rdx
    8088:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    808c:	75 c2                	jne    8050 <core::slice::sort::recurse+0x300>
    808e:	49 f7 d4             	not    %r12
    8091:	4d 01 fc             	add    %r15,%r12
    8094:	b0 01                	mov    $0x1,%al
    8096:	84 c0                	test   %al,%al
    8098:	0f 94 c0             	sete   %al
    809b:	8a 4c 24 40          	mov    0x40(%rsp),%cl
    809f:	80 f1 01             	xor    $0x1,%cl
    80a2:	08 c1                	or     %al,%cl
    80a4:	0f 84 6e 01 00 00    	je     8218 <core::slice::sort::recurse+0x4c8>
    80aa:	4d 85 d2             	test   %r10,%r10
    80ad:	0f 84 87 01 00 00    	je     823a <core::slice::sort::recurse+0x4ea>
    80b3:	4d 39 fc             	cmp    %r15,%r12
    80b6:	0f 83 90 09 00 00    	jae    8a4c <core::slice::sort::recurse+0xcfc>
    80bc:	4b 8d 04 64          	lea    (%r12,%r12,2),%rax
    80c0:	49 8b 0a             	mov    (%r10),%rcx
    80c3:	48 3b 0c c3          	cmp    (%rbx,%rax,8),%rcx
    80c7:	0f 82 7c 01 00 00    	jb     8249 <core::slice::sort::recurse+0x4f9>
    80cd:	48 8d 04 c3          	lea    (%rbx,%rax,8),%rax
    80d1:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    80d5:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
    80da:	0f 10 03             	movups (%rbx),%xmm0
    80dd:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    80e2:	48 8b 48 10          	mov    0x10(%rax),%rcx
    80e6:	0f 10 00             	movups (%rax),%xmm0
    80e9:	0f 11 03             	movups %xmm0,(%rbx)
    80ec:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
    80f0:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    80f5:	48 89 48 10          	mov    %rcx,0x10(%rax)
    80f9:	0f 28 44 24 10       	movaps 0x10(%rsp),%xmm0
    80fe:	0f 11 00             	movups %xmm0,(%rax)
    8101:	4c 8d 4b 18          	lea    0x18(%rbx),%r9
    8105:	48 8b 0b             	mov    (%rbx),%rcx
    8108:	4c 8d 43 08          	lea    0x8(%rbx),%r8
    810c:	0f 10 43 08          	movups 0x8(%rbx),%xmm0
    8110:	0f 29 84 24 e0 00 00 	movaps %xmm0,0xe0(%rsp)
    8117:	00 
    8118:	4c 89 fe             	mov    %r15,%rsi
    811b:	31 ff                	xor    %edi,%edi
    811d:	48 8d 6e ff          	lea    -0x1(%rsi),%rbp
    8121:	48 39 ef             	cmp    %rbp,%rdi
    8124:	73 1f                	jae    8145 <core::slice::sort::recurse+0x3f5>
    8126:	48 8d 04 7f          	lea    (%rdi,%rdi,2),%rax
    812a:	49 8d 04 c1          	lea    (%r9,%rax,8),%rax
    812e:	66 90                	xchg   %ax,%ax
    8130:	48 3b 08             	cmp    (%rax),%rcx
    8133:	72 10                	jb     8145 <core::slice::sort::recurse+0x3f5>
    8135:	48 83 c7 01          	add    $0x1,%rdi
    8139:	48 83 c0 18          	add    $0x18,%rax
    813d:	48 39 fd             	cmp    %rdi,%rbp
    8140:	75 ee                	jne    8130 <core::slice::sort::recurse+0x3e0>
    8142:	48 89 ef             	mov    %rbp,%rdi
    8145:	48 8d 04 76          	lea    (%rsi,%rsi,2),%rax
    8149:	48 8d 2c c3          	lea    (%rbx,%rax,8),%rbp
    814d:	0f 1f 00             	nopl   (%rax)
    8150:	48 83 c6 ff          	add    $0xffffffffffffffff,%rsi
    8154:	48 39 f7             	cmp    %rsi,%rdi
    8157:	73 67                	jae    81c0 <core::slice::sort::recurse+0x470>
    8159:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    815d:	48 3b 4d e8          	cmp    -0x18(%rbp),%rcx
    8161:	48 89 c5             	mov    %rax,%rbp
    8164:	72 ea                	jb     8150 <core::slice::sort::recurse+0x400>
    8166:	48 8d 2c 7f          	lea    (%rdi,%rdi,2),%rbp
    816a:	49 8b 54 e9 10       	mov    0x10(%r9,%rbp,8),%rdx
    816f:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
    8174:	41 0f 10 04 e9       	movups (%r9,%rbp,8),%xmm0
    8179:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    817e:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8182:	0f 10 00             	movups (%rax),%xmm0
    8185:	41 0f 11 04 e9       	movups %xmm0,(%r9,%rbp,8)
    818a:	49 89 54 e9 10       	mov    %rdx,0x10(%r9,%rbp,8)
    818f:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    8194:	48 89 50 10          	mov    %rdx,0x10(%rax)
    8198:	0f 28 44 24 10       	movaps 0x10(%rsp),%xmm0
    819d:	0f 11 00             	movups %xmm0,(%rax)
    81a0:	48 83 c7 01          	add    $0x1,%rdi
    81a4:	48 8d 6e ff          	lea    -0x1(%rsi),%rbp
    81a8:	48 39 ef             	cmp    %rbp,%rdi
    81ab:	0f 82 75 ff ff ff    	jb     8126 <core::slice::sort::recurse+0x3d6>
    81b1:	e9 8f ff ff ff       	jmpq   8145 <core::slice::sort::recurse+0x3f5>
    81b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    81bd:	00 00 00 
    81c0:	48 83 c7 01          	add    $0x1,%rdi
    81c4:	48 89 0b             	mov    %rcx,(%rbx)
    81c7:	0f 28 84 24 e0 00 00 	movaps 0xe0(%rsp),%xmm0
    81ce:	00 
    81cf:	41 0f 11 00          	movups %xmm0,(%r8)
    81d3:	4d 89 fd             	mov    %r15,%r13
    81d6:	49 29 fd             	sub    %rdi,%r13
    81d9:	0f 82 82 08 00 00    	jb     8a61 <core::slice::sort::recurse+0xd11>
    81df:	48 8d 04 7f          	lea    (%rdi,%rdi,2),%rax
    81e3:	48 8d 1c c3          	lea    (%rbx,%rax,8),%rbx
    81e7:	4d 89 ef             	mov    %r13,%r15
    81ea:	49 83 fd 15          	cmp    $0x15,%r13
    81ee:	0f 83 cc fb ff ff    	jae    7dc0 <core::slice::sort::recurse+0x70>
    81f4:	e9 8a 07 00 00       	jmpq   8983 <core::slice::sort::recurse+0xc33>
    81f9:	48 89 df             	mov    %rbx,%rdi
    81fc:	4c 89 fe             	mov    %r15,%rsi
    81ff:	e8 cc f6 ff ff       	callq  78d0 <core::slice::sort::break_patterns>
    8204:	44 8a 5c 24 0f       	mov    0xf(%rsp),%r11b
    8209:	4c 8b 54 24 38       	mov    0x38(%rsp),%r10
    820e:	83 44 24 34 ff       	addl   $0xffffffff,0x34(%rsp)
    8213:	e9 bc fb ff ff       	jmpq   7dd4 <core::slice::sort::recurse+0x84>
    8218:	48 89 df             	mov    %rbx,%rdi
    821b:	4c 89 fe             	mov    %r15,%rsi
    821e:	e8 cd f8 ff ff       	callq  7af0 <core::slice::sort::partial_insertion_sort>
    8223:	44 8a 5c 24 0f       	mov    0xf(%rsp),%r11b
    8228:	4c 8b 54 24 38       	mov    0x38(%rsp),%r10
    822d:	84 c0                	test   %al,%al
    822f:	0f 84 75 fe ff ff    	je     80aa <core::slice::sort::recurse+0x35a>
    8235:	e9 00 08 00 00       	jmpq   8a3a <core::slice::sort::recurse+0xcea>
    823a:	4c 8b 7c 24 60       	mov    0x60(%rsp),%r15
    823f:	4d 85 ff             	test   %r15,%r15
    8242:	75 08                	jne    824c <core::slice::sort::recurse+0x4fc>
    8244:	e9 2a 08 00 00       	jmpq   8a73 <core::slice::sort::recurse+0xd23>
    8249:	49 89 de             	mov    %rbx,%r14
    824c:	4d 39 fc             	cmp    %r15,%r12
    824f:	0f 83 31 08 00 00    	jae    8a86 <core::slice::sort::recurse+0xd36>
    8255:	4b 8d 04 64          	lea    (%r12,%r12,2),%rax
    8259:	49 8b 4e 10          	mov    0x10(%r14),%rcx
    825d:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
    8262:	41 0f 10 06          	movups (%r14),%xmm0
    8266:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    826b:	49 8b 4c c6 10       	mov    0x10(%r14,%rax,8),%rcx
    8270:	41 0f 10 04 c6       	movups (%r14,%rax,8),%xmm0
    8275:	41 0f 11 06          	movups %xmm0,(%r14)
    8279:	49 89 4e 10          	mov    %rcx,0x10(%r14)
    827d:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    8282:	49 89 4c c6 10       	mov    %rcx,0x10(%r14,%rax,8)
    8287:	0f 28 44 24 10       	movaps 0x10(%rsp),%xmm0
    828c:	41 0f 11 04 c6       	movups %xmm0,(%r14,%rax,8)
    8291:	49 8d 46 18          	lea    0x18(%r14),%rax
    8295:	4c 89 fe             	mov    %r15,%rsi
    8298:	49 8b 4e 10          	mov    0x10(%r14),%rcx
    829c:	48 89 8c 24 d0 00 00 	mov    %rcx,0xd0(%rsp)
    82a3:	00 
    82a4:	41 0f 10 06          	movups (%r14),%xmm0
    82a8:	0f 29 84 24 c0 00 00 	movaps %xmm0,0xc0(%rsp)
    82af:	00 
    82b0:	48 8d 8c 24 c0 00 00 	lea    0xc0(%rsp),%rcx
    82b7:	00 
    82b8:	48 89 4c 24 78       	mov    %rcx,0x78(%rsp)
    82bd:	4c 89 b4 24 80 00 00 	mov    %r14,0x80(%rsp)
    82c4:	00 
    82c5:	4c 8b 9c 24 c0 00 00 	mov    0xc0(%rsp),%r11
    82cc:	00 
    82cd:	48 83 c6 ff          	add    $0xffffffffffffffff,%rsi
    82d1:	74 24                	je     82f7 <core::slice::sort::recurse+0x5a7>
    82d3:	48 89 c1             	mov    %rax,%rcx
    82d6:	31 db                	xor    %ebx,%ebx
    82d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    82df:	00 
    82e0:	4c 39 19             	cmp    %r11,(%rcx)
    82e3:	73 14                	jae    82f9 <core::slice::sort::recurse+0x5a9>
    82e5:	48 83 c3 01          	add    $0x1,%rbx
    82e9:	48 83 c1 18          	add    $0x18,%rcx
    82ed:	48 39 de             	cmp    %rbx,%rsi
    82f0:	75 ee                	jne    82e0 <core::slice::sort::recurse+0x590>
    82f2:	48 89 f3             	mov    %rsi,%rbx
    82f5:	eb 02                	jmp    82f9 <core::slice::sort::recurse+0x5a9>
    82f7:	31 db                	xor    %ebx,%ebx
    82f9:	48 39 f3             	cmp    %rsi,%rbx
    82fc:	48 89 f1             	mov    %rsi,%rcx
    82ff:	48 0f 42 cb          	cmovb  %rbx,%rcx
    8303:	4b 8d 14 7f          	lea    (%r15,%r15,2),%rdx
    8307:	49 8d 14 d6          	lea    (%r14,%rdx,8),%rdx
    830b:	48 83 c2 e8          	add    $0xffffffffffffffe8,%rdx
    830f:	4c 89 fd             	mov    %r15,%rbp
    8312:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    8319:	00 00 00 
    831c:	0f 1f 40 00          	nopl   0x0(%rax)
    8320:	48 83 c5 ff          	add    $0xffffffffffffffff,%rbp
    8324:	48 39 dd             	cmp    %rbx,%rbp
    8327:	76 0e                	jbe    8337 <core::slice::sort::recurse+0x5e7>
    8329:	48 8d 7a e8          	lea    -0x18(%rdx),%rdi
    832d:	4c 39 1a             	cmp    %r11,(%rdx)
    8330:	48 89 fa             	mov    %rdi,%rdx
    8333:	73 eb                	jae    8320 <core::slice::sort::recurse+0x5d0>
    8335:	eb 03                	jmp    833a <core::slice::sort::recurse+0x5ea>
    8337:	48 89 cd             	mov    %rcx,%rbp
    833a:	48 39 dd             	cmp    %rbx,%rbp
    833d:	0f 82 58 07 00 00    	jb     8a9b <core::slice::sort::recurse+0xd4b>
    8343:	4c 89 7c 24 60       	mov    %r15,0x60(%rsp)
    8348:	4c 89 74 24 68       	mov    %r14,0x68(%rsp)
    834d:	48 39 ee             	cmp    %rbp,%rsi
    8350:	48 8d bc 24 68 01 00 	lea    0x168(%rsp),%rdi
    8357:	00 
    8358:	0f 82 52 07 00 00    	jb     8ab0 <core::slice::sort::recurse+0xd60>
    835e:	48 89 5c 24 50       	mov    %rbx,0x50(%rsp)
    8363:	48 8d 0c 5b          	lea    (%rbx,%rbx,2),%rcx
    8367:	4c 8d 04 c8          	lea    (%rax,%rcx,8),%r8
    836b:	48 89 6c 24 70       	mov    %rbp,0x70(%rsp)
    8370:	48 8d 0c 6d 00 00 00 	lea    0x0(,%rbp,2),%rcx
    8377:	00 
    8378:	48 01 e9             	add    %rbp,%rcx
    837b:	4c 8d 2c c8          	lea    (%rax,%rcx,8),%r13
    837f:	41 bf 80 00 00 00    	mov    $0x80,%r15d
    8385:	bb 00 00 00 00       	mov    $0x0,%ebx
    838a:	41 be 00 00 00 00    	mov    $0x0,%r14d
    8390:	31 ed                	xor    %ebp,%ebp
    8392:	45 31 c9             	xor    %r9d,%r9d
    8395:	41 bc 80 00 00 00    	mov    $0x80,%r12d
    839b:	4c 89 44 24 48       	mov    %r8,0x48(%rsp)
    83a0:	e9 42 00 00 00       	jmpq   83e7 <core::slice::sort::recurse+0x697>
    83a5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    83ac:	00 00 00 
    83af:	90                   	nop
    83b0:	4c 8b 64 24 40       	mov    0x40(%rsp),%r12
    83b5:	49 39 e9             	cmp    %rbp,%r9
    83b8:	4b 8d 04 64          	lea    (%r12,%r12,2),%rax
    83bc:	49 8d 04 c0          	lea    (%r8,%rax,8),%rax
    83c0:	4c 0f 44 c0          	cmove  %rax,%r8
    83c4:	4c 89 f8             	mov    %r15,%rax
    83c7:	48 f7 d8             	neg    %rax
    83ca:	49 39 de             	cmp    %rbx,%r14
    83cd:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    83d1:	49 8d 44 c5 00       	lea    0x0(%r13,%rax,8),%rax
    83d6:	4c 0f 44 e8          	cmove  %rax,%r13
    83da:	49 81 fa 17 18 00 00 	cmp    $0x1817,%r10
    83e1:	0f 86 89 03 00 00    	jbe    8770 <core::slice::sort::recurse+0xa20>
    83e7:	4d 89 ea             	mov    %r13,%r10
    83ea:	4d 29 c2             	sub    %r8,%r10
    83ed:	4c 89 d0             	mov    %r10,%rax
    83f0:	48 b9 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rcx
    83f7:	aa aa aa 
    83fa:	48 f7 e1             	mul    %rcx
    83fd:	49 81 fa 17 18 00 00 	cmp    $0x1817,%r10
    8404:	77 3b                	ja     8441 <core::slice::sort::recurse+0x6f1>
    8406:	48 c1 ea 04          	shr    $0x4,%rdx
    840a:	49 39 e9             	cmp    %rbp,%r9
    840d:	0f 92 c0             	setb   %al
    8410:	49 39 de             	cmp    %rbx,%r14
    8413:	40 0f 92 c6          	setb   %sil
    8417:	40 08 c6             	or     %al,%sil
    841a:	48 8d 42 80          	lea    -0x80(%rdx),%rax
    841e:	40 84 f6             	test   %sil,%sil
    8421:	48 0f 44 c2          	cmove  %rdx,%rax
    8425:	49 39 e9             	cmp    %rbp,%r9
    8428:	4c 0f 42 f8          	cmovb  %rax,%r15
    842c:	4c 0f 43 e0          	cmovae %rax,%r12
    8430:	40 84 f6             	test   %sil,%sil
    8433:	75 0c                	jne    8441 <core::slice::sort::recurse+0x6f1>
    8435:	49 89 c4             	mov    %rax,%r12
    8438:	49 d1 ec             	shr    %r12
    843b:	4c 29 e0             	sub    %r12,%rax
    843e:	49 89 c7             	mov    %rax,%r15
    8441:	4c 89 64 24 40       	mov    %r12,0x40(%rsp)
    8446:	4d 89 fc             	mov    %r15,%r12
    8449:	49 39 e9             	cmp    %rbp,%r9
    844c:	0f 84 8e 00 00 00    	je     84e0 <core::slice::sort::recurse+0x790>
    8452:	49 39 de             	cmp    %rbx,%r14
    8455:	4d 89 e7             	mov    %r12,%r15
    8458:	0f 84 d2 00 00 00    	je     8530 <core::slice::sort::recurse+0x7e0>
    845e:	48 89 ea             	mov    %rbp,%rdx
    8461:	4c 29 ca             	sub    %r9,%rdx
    8464:	48 89 d8             	mov    %rbx,%rax
    8467:	4c 29 f0             	sub    %r14,%rax
    846a:	48 39 c2             	cmp    %rax,%rdx
    846d:	48 0f 46 c2          	cmovbe %rdx,%rax
    8471:	48 85 c0             	test   %rax,%rax
    8474:	0f 84 36 ff ff ff    	je     83b0 <core::slice::sort::recurse+0x660>
    847a:	41 0f b6 11          	movzbl (%r9),%edx
    847e:	48 8d 14 52          	lea    (%rdx,%rdx,2),%rdx
    8482:	49 8b 74 d0 10       	mov    0x10(%r8,%rdx,8),%rsi
    8487:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
    848c:	41 0f 10 04 d0       	movups (%r8,%rdx,8),%xmm0
    8491:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    8496:	41 0f b6 16          	movzbl (%r14),%edx
    849a:	48 f7 d2             	not    %rdx
    849d:	48 8d 14 52          	lea    (%rdx,%rdx,2),%rdx
    84a1:	41 0f b6 31          	movzbl (%r9),%esi
    84a5:	48 8d 34 76          	lea    (%rsi,%rsi,2),%rsi
    84a9:	49 8b 7c d5 10       	mov    0x10(%r13,%rdx,8),%rdi
    84ae:	49 89 7c f0 10       	mov    %rdi,0x10(%r8,%rsi,8)
    84b3:	41 0f 10 44 d5 00    	movups 0x0(%r13,%rdx,8),%xmm0
    84b9:	41 0f 11 04 f0       	movups %xmm0,(%r8,%rsi,8)
    84be:	48 83 f8 01          	cmp    $0x1,%rax
    84c2:	4c 8b 64 24 40       	mov    0x40(%rsp),%r12
    84c7:	0f 85 a3 00 00 00    	jne    8570 <core::slice::sort::recurse+0x820>
    84cd:	4c 89 ca             	mov    %r9,%rdx
    84d0:	e9 0f 01 00 00       	jmpq   85e4 <core::slice::sort::recurse+0x894>
    84d5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    84dc:	00 00 00 
    84df:	90                   	nop
    84e0:	48 89 fd             	mov    %rdi,%rbp
    84e3:	49 89 f9             	mov    %rdi,%r9
    84e6:	48 83 7c 24 40 00    	cmpq   $0x0,0x40(%rsp)
    84ec:	0f 84 60 ff ff ff    	je     8452 <core::slice::sort::recurse+0x702>
    84f2:	4c 8b 4c 24 40       	mov    0x40(%rsp),%r9
    84f7:	49 8d 51 ff          	lea    -0x1(%r9),%rdx
    84fb:	44 89 c8             	mov    %r9d,%eax
    84fe:	83 e0 03             	and    $0x3,%eax
    8501:	48 83 fa 03          	cmp    $0x3,%rdx
    8505:	0f 83 11 01 00 00    	jae    861c <core::slice::sort::recurse+0x8cc>
    850b:	48 89 fd             	mov    %rdi,%rbp
    850e:	4c 89 c2             	mov    %r8,%rdx
    8511:	45 31 ff             	xor    %r15d,%r15d
    8514:	49 89 f9             	mov    %rdi,%r9
    8517:	48 85 c0             	test   %rax,%rax
    851a:	0f 85 70 01 00 00    	jne    8690 <core::slice::sort::recurse+0x940>
    8520:	e9 2d ff ff ff       	jmpq   8452 <core::slice::sort::recurse+0x702>
    8525:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    852c:	00 00 00 
    852f:	90                   	nop
    8530:	4c 8d b4 24 e0 00 00 	lea    0xe0(%rsp),%r14
    8537:	00 
    8538:	4c 89 f3             	mov    %r14,%rbx
    853b:	4d 85 ff             	test   %r15,%r15
    853e:	0f 84 1a ff ff ff    	je     845e <core::slice::sort::recurse+0x70e>
    8544:	49 8d 4f ff          	lea    -0x1(%r15),%rcx
    8548:	44 89 f8             	mov    %r15d,%eax
    854b:	83 e0 03             	and    $0x3,%eax
    854e:	48 83 f9 03          	cmp    $0x3,%rcx
    8552:	0f 83 59 01 00 00    	jae    86b1 <core::slice::sort::recurse+0x961>
    8558:	48 8d 9c 24 e0 00 00 	lea    0xe0(%rsp),%rbx
    855f:	00 
    8560:	4c 89 ee             	mov    %r13,%rsi
    8563:	31 d2                	xor    %edx,%edx
    8565:	e9 b1 01 00 00       	jmpq   871b <core::slice::sort::recurse+0x9cb>
    856a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8570:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    8574:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    857b:	00 00 00 
    857e:	66 90                	xchg   %ax,%ax
    8580:	49 8d 51 01          	lea    0x1(%r9),%rdx
    8584:	41 0f b6 71 01       	movzbl 0x1(%r9),%esi
    8589:	48 8d 34 76          	lea    (%rsi,%rsi,2),%rsi
    858d:	41 0f b6 3e          	movzbl (%r14),%edi
    8591:	48 f7 d7             	not    %rdi
    8594:	48 8d 3c 7f          	lea    (%rdi,%rdi,2),%rdi
    8598:	49 8b 4c f0 10       	mov    0x10(%r8,%rsi,8),%rcx
    859d:	49 89 4c fd 10       	mov    %rcx,0x10(%r13,%rdi,8)
    85a2:	41 0f 10 04 f0       	movups (%r8,%rsi,8),%xmm0
    85a7:	41 0f 11 44 fd 00    	movups %xmm0,0x0(%r13,%rdi,8)
    85ad:	41 0f b6 4e 01       	movzbl 0x1(%r14),%ecx
    85b2:	49 83 c6 01          	add    $0x1,%r14
    85b6:	48 f7 d1             	not    %rcx
    85b9:	48 8d 0c 49          	lea    (%rcx,%rcx,2),%rcx
    85bd:	41 0f b6 71 01       	movzbl 0x1(%r9),%esi
    85c2:	48 8d 34 76          	lea    (%rsi,%rsi,2),%rsi
    85c6:	49 8b 7c cd 10       	mov    0x10(%r13,%rcx,8),%rdi
    85cb:	49 89 7c f0 10       	mov    %rdi,0x10(%r8,%rsi,8)
    85d0:	41 0f 10 44 cd 00    	movups 0x0(%r13,%rcx,8),%xmm0
    85d6:	41 0f 11 04 f0       	movups %xmm0,(%r8,%rsi,8)
    85db:	49 89 d1             	mov    %rdx,%r9
    85de:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    85e2:	75 9c                	jne    8580 <core::slice::sort::recurse+0x830>
    85e4:	41 0f b6 06          	movzbl (%r14),%eax
    85e8:	48 f7 d0             	not    %rax
    85eb:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    85ef:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    85f4:	49 89 74 c5 10       	mov    %rsi,0x10(%r13,%rax,8)
    85f9:	0f 28 44 24 10       	movaps 0x10(%rsp),%xmm0
    85fe:	41 0f 11 44 c5 00    	movups %xmm0,0x0(%r13,%rax,8)
    8604:	48 83 c2 01          	add    $0x1,%rdx
    8608:	49 83 c6 01          	add    $0x1,%r14
    860c:	49 89 d1             	mov    %rdx,%r9
    860f:	48 8d bc 24 68 01 00 	lea    0x168(%rsp),%rdi
    8616:	00 
    8617:	e9 99 fd ff ff       	jmpq   83b5 <core::slice::sort::recurse+0x665>
    861c:	49 83 e1 fc          	and    $0xfffffffffffffffc,%r9
    8620:	48 89 fd             	mov    %rdi,%rbp
    8623:	4c 89 c2             	mov    %r8,%rdx
    8626:	45 31 ff             	xor    %r15d,%r15d
    8629:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8630:	44 89 ff             	mov    %r15d,%edi
    8633:	44 88 7d 00          	mov    %r15b,0x0(%rbp)
    8637:	4c 39 1a             	cmp    %r11,(%rdx)
    863a:	48 83 dd ff          	sbb    $0xffffffffffffffff,%rbp
    863e:	8d 77 01             	lea    0x1(%rdi),%esi
    8641:	40 88 75 00          	mov    %sil,0x0(%rbp)
    8645:	4c 39 5a 18          	cmp    %r11,0x18(%rdx)
    8649:	48 83 dd ff          	sbb    $0xffffffffffffffff,%rbp
    864d:	8d 77 02             	lea    0x2(%rdi),%esi
    8650:	40 88 75 00          	mov    %sil,0x0(%rbp)
    8654:	4c 39 5a 30          	cmp    %r11,0x30(%rdx)
    8658:	48 83 dd ff          	sbb    $0xffffffffffffffff,%rbp
    865c:	49 83 c7 04          	add    $0x4,%r15
    8660:	8d 77 03             	lea    0x3(%rdi),%esi
    8663:	40 88 75 00          	mov    %sil,0x0(%rbp)
    8667:	4c 39 5a 48          	cmp    %r11,0x48(%rdx)
    866b:	48 83 dd ff          	sbb    $0xffffffffffffffff,%rbp
    866f:	48 83 c2 60          	add    $0x60,%rdx
    8673:	4d 39 f9             	cmp    %r15,%r9
    8676:	75 b8                	jne    8630 <core::slice::sort::recurse+0x8e0>
    8678:	48 8d bc 24 68 01 00 	lea    0x168(%rsp),%rdi
    867f:	00 
    8680:	49 89 f9             	mov    %rdi,%r9
    8683:	48 85 c0             	test   %rax,%rax
    8686:	0f 84 c6 fd ff ff    	je     8452 <core::slice::sort::recurse+0x702>
    868c:	0f 1f 40 00          	nopl   0x0(%rax)
    8690:	44 88 7d 00          	mov    %r15b,0x0(%rbp)
    8694:	4c 39 1a             	cmp    %r11,(%rdx)
    8697:	48 83 dd ff          	sbb    $0xffffffffffffffff,%rbp
    869b:	48 83 c2 18          	add    $0x18,%rdx
    869f:	41 80 c7 01          	add    $0x1,%r15b
    86a3:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    86a7:	75 e7                	jne    8690 <core::slice::sort::recurse+0x940>
    86a9:	49 89 f9             	mov    %rdi,%r9
    86ac:	e9 a1 fd ff ff       	jmpq   8452 <core::slice::sort::recurse+0x702>
    86b1:	49 83 e7 fc          	and    $0xfffffffffffffffc,%r15
    86b5:	48 8d 9c 24 e0 00 00 	lea    0xe0(%rsp),%rbx
    86bc:	00 
    86bd:	4c 89 e9             	mov    %r13,%rcx
    86c0:	45 31 f6             	xor    %r14d,%r14d
    86c3:	31 d2                	xor    %edx,%edx
    86c5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    86cc:	00 00 00 
    86cf:	90                   	nop
    86d0:	44 88 33             	mov    %r14b,(%rbx)
    86d3:	4c 39 59 e8          	cmp    %r11,-0x18(%rcx)
    86d7:	48 83 d3 00          	adc    $0x0,%rbx
    86db:	41 8d 76 01          	lea    0x1(%r14),%esi
    86df:	40 88 33             	mov    %sil,(%rbx)
    86e2:	4c 39 59 d0          	cmp    %r11,-0x30(%rcx)
    86e6:	48 83 d3 00          	adc    $0x0,%rbx
    86ea:	41 8d 76 02          	lea    0x2(%r14),%esi
    86ee:	40 88 33             	mov    %sil,(%rbx)
    86f1:	4c 39 59 b8          	cmp    %r11,-0x48(%rcx)
    86f5:	48 83 d3 00          	adc    $0x0,%rbx
    86f9:	48 83 c2 04          	add    $0x4,%rdx
    86fd:	41 8d 76 03          	lea    0x3(%r14),%esi
    8701:	40 88 33             	mov    %sil,(%rbx)
    8704:	4c 39 59 a0          	cmp    %r11,-0x60(%rcx)
    8708:	48 8d 71 a0          	lea    -0x60(%rcx),%rsi
    870c:	48 83 d3 00          	adc    $0x0,%rbx
    8710:	48 89 f1             	mov    %rsi,%rcx
    8713:	49 89 d6             	mov    %rdx,%r14
    8716:	49 39 d7             	cmp    %rdx,%r15
    8719:	75 b5                	jne    86d0 <core::slice::sort::recurse+0x980>
    871b:	4c 8d b4 24 e0 00 00 	lea    0xe0(%rsp),%r14
    8722:	00 
    8723:	48 85 c0             	test   %rax,%rax
    8726:	4d 89 e7             	mov    %r12,%r15
    8729:	0f 84 2f fd ff ff    	je     845e <core::slice::sort::recurse+0x70e>
    872f:	48 83 c6 e8          	add    $0xffffffffffffffe8,%rsi
    8733:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    873a:	00 00 00 
    873d:	0f 1f 00             	nopl   (%rax)
    8740:	88 13                	mov    %dl,(%rbx)
    8742:	4c 39 1e             	cmp    %r11,(%rsi)
    8745:	48 83 d3 00          	adc    $0x0,%rbx
    8749:	48 83 c6 e8          	add    $0xffffffffffffffe8,%rsi
    874d:	80 c2 01             	add    $0x1,%dl
    8750:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    8754:	75 ea                	jne    8740 <core::slice::sort::recurse+0x9f0>
    8756:	4c 8d b4 24 e0 00 00 	lea    0xe0(%rsp),%r14
    875d:	00 
    875e:	e9 fb fc ff ff       	jmpq   845e <core::slice::sort::recurse+0x70e>
    8763:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    876a:	00 00 00 
    876d:	0f 1f 00             	nopl   (%rax)
    8770:	49 39 e9             	cmp    %rbp,%r9
    8773:	73 6f                	jae    87e4 <core::slice::sort::recurse+0xa94>
    8775:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    877a:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
    877f:	4c 8b 54 24 48       	mov    0x48(%rsp),%r10
    8784:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    878b:	00 00 00 
    878e:	66 90                	xchg   %ax,%ax
    8790:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    8794:	48 83 c5 ff          	add    $0xffffffffffffffff,%rbp
    8798:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
    879c:	49 8d 45 e8          	lea    -0x18(%r13),%rax
    87a0:	49 8b 54 f0 10       	mov    0x10(%r8,%rsi,8),%rdx
    87a5:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
    87aa:	41 0f 10 04 f0       	movups (%r8,%rsi,8),%xmm0
    87af:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    87b4:	49 8b 55 f8          	mov    -0x8(%r13),%rdx
    87b8:	41 0f 10 45 e8       	movups -0x18(%r13),%xmm0
    87bd:	41 0f 11 04 f0       	movups %xmm0,(%r8,%rsi,8)
    87c2:	49 89 54 f0 10       	mov    %rdx,0x10(%r8,%rsi,8)
    87c7:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    87cc:	49 89 55 f8          	mov    %rdx,-0x8(%r13)
    87d0:	0f 28 44 24 10       	movaps 0x10(%rsp),%xmm0
    87d5:	41 0f 11 45 e8       	movups %xmm0,-0x18(%r13)
    87da:	49 89 c5             	mov    %rax,%r13
    87dd:	49 39 e9             	cmp    %rbp,%r9
    87e0:	72 ae                	jb     8790 <core::slice::sort::recurse+0xa40>
    87e2:	eb 6c                	jmp    8850 <core::slice::sort::recurse+0xb00>
    87e4:	4c 89 c0             	mov    %r8,%rax
    87e7:	49 39 de             	cmp    %rbx,%r14
    87ea:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    87ef:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
    87f4:	4c 8b 54 24 48       	mov    0x48(%rsp),%r10
    87f9:	0f 83 51 00 00 00    	jae    8850 <core::slice::sort::recurse+0xb00>
    87ff:	90                   	nop
    8800:	0f b6 53 ff          	movzbl -0x1(%rbx),%edx
    8804:	48 83 c3 ff          	add    $0xffffffffffffffff,%rbx
    8808:	48 f7 d2             	not    %rdx
    880b:	48 8d 34 52          	lea    (%rdx,%rdx,2),%rsi
    880f:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8813:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
    8818:	0f 10 00             	movups (%rax),%xmm0
    881b:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    8820:	49 8b 54 f5 10       	mov    0x10(%r13,%rsi,8),%rdx
    8825:	41 0f 10 44 f5 00    	movups 0x0(%r13,%rsi,8),%xmm0
    882b:	0f 11 00             	movups %xmm0,(%rax)
    882e:	48 89 50 10          	mov    %rdx,0x10(%rax)
    8832:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    8837:	49 89 54 f5 10       	mov    %rdx,0x10(%r13,%rsi,8)
    883c:	0f 28 44 24 10       	movaps 0x10(%rsp),%xmm0
    8841:	41 0f 11 44 f5 00    	movups %xmm0,0x0(%r13,%rsi,8)
    8847:	48 83 c0 18          	add    $0x18,%rax
    884b:	49 39 de             	cmp    %rbx,%r14
    884e:	72 b0                	jb     8800 <core::slice::sort::recurse+0xab0>
    8850:	4c 29 d0             	sub    %r10,%rax
    8853:	48 ba ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rdx
    885a:	aa aa aa 
    885d:	48 f7 e2             	mul    %rdx
    8860:	49 89 d5             	mov    %rdx,%r13
    8863:	49 c1 ed 04          	shr    $0x4,%r13
    8867:	49 01 fd             	add    %rdi,%r13
    886a:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    886f:	48 8b b4 24 80 00 00 	mov    0x80(%rsp),%rsi
    8876:	00 
    8877:	48 8b 50 10          	mov    0x10(%rax),%rdx
    887b:	48 89 56 10          	mov    %rdx,0x10(%rsi)
    887f:	0f 10 00             	movups (%rax),%xmm0
    8882:	0f 11 06             	movups %xmm0,(%rsi)
    8885:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
    888a:	48 89 f3             	mov    %rsi,%rbx
    888d:	4c 29 eb             	sub    %r13,%rbx
    8890:	0f 86 2c 02 00 00    	jbe    8ac2 <core::slice::sort::recurse+0xd72>
    8896:	48 3b 7c 24 70       	cmp    0x70(%rsp),%rdi
    889b:	41 0f 93 c7          	setae  %r15b
    889f:	4b 8d 44 6d 00       	lea    0x0(%r13,%r13,2),%rax
    88a4:	48 8b 6c 24 68       	mov    0x68(%rsp),%rbp
    88a9:	48 8b 55 10          	mov    0x10(%rbp),%rdx
    88ad:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
    88b2:	0f 10 45 00          	movups 0x0(%rbp),%xmm0
    88b6:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    88bb:	48 8b 54 c5 10       	mov    0x10(%rbp,%rax,8),%rdx
    88c0:	0f 10 44 c5 00       	movups 0x0(%rbp,%rax,8),%xmm0
    88c5:	0f 11 45 00          	movups %xmm0,0x0(%rbp)
    88c9:	48 89 55 10          	mov    %rdx,0x10(%rbp)
    88cd:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    88d2:	48 89 54 c5 10       	mov    %rdx,0x10(%rbp,%rax,8)
    88d7:	0f 28 44 24 10       	movaps 0x10(%rsp),%xmm0
    88dc:	0f 11 44 c5 00       	movups %xmm0,0x0(%rbp,%rax,8)
    88e1:	49 39 dd             	cmp    %rbx,%r13
    88e4:	4c 89 ea             	mov    %r13,%rdx
    88e7:	48 0f 47 d3          	cmova  %rbx,%rdx
    88eb:	48 c1 ee 03          	shr    $0x3,%rsi
    88ef:	48 39 f2             	cmp    %rsi,%rdx
    88f2:	0f 93 c2             	setae  %dl
    88f5:	48 85 db             	test   %rbx,%rbx
    88f8:	0f 84 d6 01 00 00    	je     8ad4 <core::slice::sort::recurse+0xd84>
    88fe:	88 54 24 0f          	mov    %dl,0xf(%rsp)
    8902:	4c 8d 34 c5 00 00 00 	lea    0x0(,%rax,8),%r14
    8909:	00 
    890a:	49 01 ee             	add    %rbp,%r14
    890d:	4d 8d 66 18          	lea    0x18(%r14),%r12
    8911:	48 83 c3 ff          	add    $0xffffffffffffffff,%rbx
    8915:	49 39 dd             	cmp    %rbx,%r13
    8918:	73 20                	jae    893a <core::slice::sort::recurse+0xbea>
    891a:	48 89 ef             	mov    %rbp,%rdi
    891d:	4c 89 ee             	mov    %r13,%rsi
    8920:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
    8925:	44 8b 44 24 34       	mov    0x34(%rsp),%r8d
    892a:	e8 21 f4 ff ff       	callq  7d50 <core::slice::sort::recurse>
    892f:	4d 89 f2             	mov    %r14,%r10
    8932:	49 89 dd             	mov    %rbx,%r13
    8935:	4d 89 e6             	mov    %r12,%r14
    8938:	eb 20                	jmp    895a <core::slice::sort::recurse+0xc0a>
    893a:	4c 89 e7             	mov    %r12,%rdi
    893d:	48 89 de             	mov    %rbx,%rsi
    8940:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
    8945:	4c 89 f1             	mov    %r14,%rcx
    8948:	44 8b 44 24 34       	mov    0x34(%rsp),%r8d
    894d:	e8 fe f3 ff ff       	callq  7d50 <core::slice::sort::recurse>
    8952:	4c 8b 54 24 38       	mov    0x38(%rsp),%r10
    8957:	49 89 ee             	mov    %rbp,%r14
    895a:	4c 89 ee             	mov    %r13,%rsi
    895d:	49 83 fd 15          	cmp    $0x15,%r13
    8961:	44 8a 5c 24 0f       	mov    0xf(%rsp),%r11b
    8966:	0f 83 19 f4 ff ff    	jae    7d85 <core::slice::sort::recurse+0x35>
    896c:	eb 18                	jmp    8986 <core::slice::sort::recurse+0xc36>
    896e:	48 89 df             	mov    %rbx,%rdi
    8971:	4c 89 fe             	mov    %r15,%rsi
    8974:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
    8979:	e8 92 01 00 00       	callq  8b10 <core::slice::sort::heapsort>
    897e:	e9 b7 00 00 00       	jmpq   8a3a <core::slice::sort::recurse+0xcea>
    8983:	49 89 de             	mov    %rbx,%r14
    8986:	49 83 fd 02          	cmp    $0x2,%r13
    898a:	0f 82 aa 00 00 00    	jb     8a3a <core::slice::sort::recurse+0xcea>
    8990:	ba 01 00 00 00       	mov    $0x1,%edx
    8995:	31 c0                	xor    %eax,%eax
    8997:	4c 89 f1             	mov    %r14,%rcx
    899a:	eb 23                	jmp    89bf <core::slice::sort::recurse+0xc6f>
    899c:	4c 89 f3             	mov    %r14,%rbx
    899f:	90                   	nop
    89a0:	48 89 33             	mov    %rsi,(%rbx)
    89a3:	0f 28 84 24 e0 00 00 	movaps 0xe0(%rsp),%xmm0
    89aa:	00 
    89ab:	0f 11 43 08          	movups %xmm0,0x8(%rbx)
    89af:	48 83 c1 18          	add    $0x18,%rcx
    89b3:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    89b7:	4c 89 c2             	mov    %r8,%rdx
    89ba:	4d 39 e8             	cmp    %r13,%r8
    89bd:	74 7b                	je     8a3a <core::slice::sort::recurse+0xcea>
    89bf:	4c 8d 42 01          	lea    0x1(%rdx),%r8
    89c3:	48 8d 2c 52          	lea    (%rdx,%rdx,2),%rbp
    89c7:	49 8b 34 ee          	mov    (%r14,%rbp,8),%rsi
    89cb:	49 3b 74 ee e8       	cmp    -0x18(%r14,%rbp,8),%rsi
    89d0:	73 dd                	jae    89af <core::slice::sort::recurse+0xc5f>
    89d2:	4d 8d 0c ee          	lea    (%r14,%rbp,8),%r9
    89d6:	49 8d 1c ee          	lea    (%r14,%rbp,8),%rbx
    89da:	48 83 c3 e8          	add    $0xffffffffffffffe8,%rbx
    89de:	41 0f 10 44 ee 08    	movups 0x8(%r14,%rbp,8),%xmm0
    89e4:	0f 29 84 24 e0 00 00 	movaps %xmm0,0xe0(%rsp)
    89eb:	00 
    89ec:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    89f0:	49 89 79 10          	mov    %rdi,0x10(%r9)
    89f4:	0f 10 03             	movups (%rbx),%xmm0
    89f7:	41 0f 11 01          	movups %xmm0,(%r9)
    89fb:	48 83 c2 ff          	add    $0xffffffffffffffff,%rdx
    89ff:	74 9f                	je     89a0 <core::slice::sort::recurse+0xc50>
    8a01:	48 89 c2             	mov    %rax,%rdx
    8a04:	48 89 cf             	mov    %rcx,%rdi
    8a07:	49 3b 74 ee d0       	cmp    -0x30(%r14,%rbp,8),%rsi
    8a0c:	73 92                	jae    89a0 <core::slice::sort::recurse+0xc50>
    8a0e:	66 90                	xchg   %ax,%ax
    8a10:	48 8b 6f f8          	mov    -0x8(%rdi),%rbp
    8a14:	48 89 6f 10          	mov    %rbp,0x10(%rdi)
    8a18:	0f 10 47 e8          	movups -0x18(%rdi),%xmm0
    8a1c:	0f 11 07             	movups %xmm0,(%rdi)
    8a1f:	48 ff c2             	inc    %rdx
    8a22:	0f 84 74 ff ff ff    	je     899c <core::slice::sort::recurse+0xc4c>
    8a28:	48 8d 5f e8          	lea    -0x18(%rdi),%rbx
    8a2c:	48 3b 77 d0          	cmp    -0x30(%rdi),%rsi
    8a30:	48 89 df             	mov    %rbx,%rdi
    8a33:	72 db                	jb     8a10 <core::slice::sort::recurse+0xcc0>
    8a35:	e9 66 ff ff ff       	jmpq   89a0 <core::slice::sort::recurse+0xc50>
    8a3a:	48 81 c4 e8 01 00 00 	add    $0x1e8,%rsp
    8a41:	5b                   	pop    %rbx
    8a42:	41 5c                	pop    %r12
    8a44:	41 5d                	pop    %r13
    8a46:	41 5e                	pop    %r14
    8a48:	41 5f                	pop    %r15
    8a4a:	5d                   	pop    %rbp
    8a4b:	c3                   	retq   
    8a4c:	48 8d 15 35 ad 03 00 	lea    0x3ad35(%rip),%rdx        # 43788 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x230>
    8a53:	4c 89 e7             	mov    %r12,%rdi
    8a56:	4c 89 fe             	mov    %r15,%rsi
    8a59:	ff 15 39 d2 03 00    	callq  *0x3d239(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
    8a5f:	0f 0b                	ud2    
    8a61:	48 8d 15 38 ad 03 00 	lea    0x3ad38(%rip),%rdx        # 437a0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x248>
    8a68:	4c 89 fe             	mov    %r15,%rsi
    8a6b:	ff 15 87 d3 03 00    	callq  *0x3d387(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x468>
    8a71:	0f 0b                	ud2    
    8a73:	48 8d 15 c6 ac 03 00 	lea    0x3acc6(%rip),%rdx        # 43740 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1e8>
    8a7a:	31 ff                	xor    %edi,%edi
    8a7c:	31 f6                	xor    %esi,%esi
    8a7e:	ff 15 14 d2 03 00    	callq  *0x3d214(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
    8a84:	0f 0b                	ud2    
    8a86:	48 8d 15 cb ac 03 00 	lea    0x3accb(%rip),%rdx        # 43758 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x200>
    8a8d:	4c 89 e7             	mov    %r12,%rdi
    8a90:	4c 89 fe             	mov    %r15,%rsi
    8a93:	ff 15 ff d1 03 00    	callq  *0x3d1ff(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
    8a99:	0f 0b                	ud2    
    8a9b:	48 8d 15 46 ad 03 00 	lea    0x3ad46(%rip),%rdx        # 437e8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x290>
    8aa2:	48 89 df             	mov    %rbx,%rdi
    8aa5:	48 89 ee             	mov    %rbp,%rsi
    8aa8:	ff 15 fa d3 03 00    	callq  *0x3d3fa(%rip)        # 45ea8 <_GLOBAL_OFFSET_TABLE_+0x518>
    8aae:	eb 10                	jmp    8ac0 <core::slice::sort::recurse+0xd70>
    8ab0:	48 8d 15 31 ad 03 00 	lea    0x3ad31(%rip),%rdx        # 437e8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x290>
    8ab7:	48 89 ef             	mov    %rbp,%rdi
    8aba:	ff 15 70 cf 03 00    	callq  *0x3cf70(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
    8ac0:	0f 0b                	ud2    
    8ac2:	48 8d 15 8f ac 03 00 	lea    0x3ac8f(%rip),%rdx        # 43758 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x200>
    8ac9:	4c 89 ef             	mov    %r13,%rdi
    8acc:	ff 15 c6 d1 03 00    	callq  *0x3d1c6(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
    8ad2:	0f 0b                	ud2    
    8ad4:	48 8d 3d ad ea 02 00 	lea    0x2eaad(%rip),%rdi        # 37588 <str.6+0x268>
    8adb:	48 8d 15 46 ac 03 00 	lea    0x3ac46(%rip),%rdx        # 43728 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1d0>
    8ae2:	be 23 00 00 00       	mov    $0x23,%esi
    8ae7:	ff 15 f3 d3 03 00    	callq  *0x3d3f3(%rip)        # 45ee0 <_GLOBAL_OFFSET_TABLE_+0x550>
    8aed:	0f 0b                	ud2    
    8aef:	48 89 c3             	mov    %rax,%rbx
    8af2:	48 8d 7c 24 78       	lea    0x78(%rsp),%rdi
    8af7:	e8 34 d5 ff ff       	callq  6030 <core::ptr::drop_in_place>
    8afc:	48 89 df             	mov    %rbx,%rdi
    8aff:	e8 4c c5 ff ff       	callq  5050 <_Unwind_Resume@plt>
    8b04:	0f 0b                	ud2    
    8b06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    8b0d:	00 00 00 

0000000000008b10 <core::slice::sort::heapsort>:
    8b10:	48 83 ec 18          	sub    $0x18,%rsp
    8b14:	49 89 f1             	mov    %rsi,%r9
    8b17:	49 d1 e9             	shr    %r9
    8b1a:	75 19                	jne    8b35 <core::slice::sort::heapsort+0x25>
    8b1c:	48 83 fe 02          	cmp    $0x2,%rsi
    8b20:	0f 82 e7 01 00 00    	jb     8d0d <core::slice::sort::heapsort+0x1fd>
    8b26:	49 89 f0             	mov    %rsi,%r8
    8b29:	e9 dc 00 00 00       	jmpq   8c0a <core::slice::sort::heapsort+0xfa>
    8b2e:	66 90                	xchg   %ax,%ax
    8b30:	4d 85 c9             	test   %r9,%r9
    8b33:	74 e7                	je     8b1c <core::slice::sort::heapsort+0xc>
    8b35:	49 83 c1 ff          	add    $0xffffffffffffffff,%r9
    8b39:	4c 89 c9             	mov    %r9,%rcx
    8b3c:	4c 8d 04 09          	lea    (%rcx,%rcx,1),%r8
    8b40:	49 83 c0 01          	add    $0x1,%r8
    8b44:	48 8d 04 09          	lea    (%rcx,%rcx,1),%rax
    8b48:	48 83 c0 02          	add    $0x2,%rax
    8b4c:	48 39 f0             	cmp    %rsi,%rax
    8b4f:	0f 83 2c 00 00 00    	jae    8b81 <core::slice::sort::heapsort+0x71>
    8b55:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    8b5c:	00 00 00 
    8b5f:	90                   	nop
    8b60:	49 39 f0             	cmp    %rsi,%r8
    8b63:	0f 83 c7 01 00 00    	jae    8d30 <core::slice::sort::heapsort+0x220>
    8b69:	4b 8d 14 40          	lea    (%r8,%r8,2),%rdx
    8b6d:	4c 8b 14 d7          	mov    (%rdi,%rdx,8),%r10
    8b71:	48 8d 14 40          	lea    (%rax,%rax,2),%rdx
    8b75:	4c 3b 14 d7          	cmp    (%rdi,%rdx,8),%r10
    8b79:	72 03                	jb     8b7e <core::slice::sort::heapsort+0x6e>
    8b7b:	4c 89 c0             	mov    %r8,%rax
    8b7e:	49 89 c0             	mov    %rax,%r8
    8b81:	49 39 f0             	cmp    %rsi,%r8
    8b84:	73 aa                	jae    8b30 <core::slice::sort::heapsort+0x20>
    8b86:	48 39 f1             	cmp    %rsi,%rcx
    8b89:	0f 83 83 01 00 00    	jae    8d12 <core::slice::sort::heapsort+0x202>
    8b8f:	48 8d 04 49          	lea    (%rcx,%rcx,2),%rax
    8b93:	4b 8d 0c 40          	lea    (%r8,%r8,2),%rcx
    8b97:	48 8b 14 c7          	mov    (%rdi,%rax,8),%rdx
    8b9b:	48 3b 14 cf          	cmp    (%rdi,%rcx,8),%rdx
    8b9f:	73 8f                	jae    8b30 <core::slice::sort::heapsort+0x20>
    8ba1:	48 8d 04 c7          	lea    (%rdi,%rax,8),%rax
    8ba5:	48 8d 0c cf          	lea    (%rdi,%rcx,8),%rcx
    8ba9:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8bad:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    8bb2:	0f 10 00             	movups (%rax),%xmm0
    8bb5:	0f 29 04 24          	movaps %xmm0,(%rsp)
    8bb9:	48 8b 51 10          	mov    0x10(%rcx),%rdx
    8bbd:	0f 10 01             	movups (%rcx),%xmm0
    8bc0:	0f 11 00             	movups %xmm0,(%rax)
    8bc3:	48 89 50 10          	mov    %rdx,0x10(%rax)
    8bc7:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    8bcc:	48 89 41 10          	mov    %rax,0x10(%rcx)
    8bd0:	0f 28 04 24          	movaps (%rsp),%xmm0
    8bd4:	0f 11 01             	movups %xmm0,(%rcx)
    8bd7:	4c 89 c1             	mov    %r8,%rcx
    8bda:	4c 8d 04 09          	lea    (%rcx,%rcx,1),%r8
    8bde:	49 83 c0 01          	add    $0x1,%r8
    8be2:	48 8d 04 09          	lea    (%rcx,%rcx,1),%rax
    8be6:	48 83 c0 02          	add    $0x2,%rax
    8bea:	48 39 f0             	cmp    %rsi,%rax
    8bed:	0f 82 6d ff ff ff    	jb     8b60 <core::slice::sort::heapsort+0x50>
    8bf3:	eb 8c                	jmp    8b81 <core::slice::sort::heapsort+0x71>
    8bf5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    8bfc:	00 00 00 
    8bff:	90                   	nop
    8c00:	49 83 f8 01          	cmp    $0x1,%r8
    8c04:	0f 86 03 01 00 00    	jbe    8d0d <core::slice::sort::heapsort+0x1fd>
    8c0a:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
    8c0e:	49 39 f0             	cmp    %rsi,%r8
    8c11:	0f 83 40 01 00 00    	jae    8d57 <core::slice::sort::heapsort+0x247>
    8c17:	4b 8d 04 40          	lea    (%r8,%r8,2),%rax
    8c1b:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
    8c1f:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    8c24:	0f 10 07             	movups (%rdi),%xmm0
    8c27:	0f 29 04 24          	movaps %xmm0,(%rsp)
    8c2b:	48 8b 4c c7 10       	mov    0x10(%rdi,%rax,8),%rcx
    8c30:	0f 10 04 c7          	movups (%rdi,%rax,8),%xmm0
    8c34:	0f 11 07             	movups %xmm0,(%rdi)
    8c37:	48 89 4f 10          	mov    %rcx,0x10(%rdi)
    8c3b:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    8c40:	48 89 4c c7 10       	mov    %rcx,0x10(%rdi,%rax,8)
    8c45:	0f 28 04 24          	movaps (%rsp),%xmm0
    8c49:	0f 11 04 c7          	movups %xmm0,(%rdi,%rax,8)
    8c4d:	31 c9                	xor    %ecx,%ecx
    8c4f:	4c 8d 0c 09          	lea    (%rcx,%rcx,1),%r9
    8c53:	49 83 c1 01          	add    $0x1,%r9
    8c57:	48 8d 14 09          	lea    (%rcx,%rcx,1),%rdx
    8c5b:	48 83 c2 02          	add    $0x2,%rdx
    8c5f:	4c 39 c2             	cmp    %r8,%rdx
    8c62:	0f 83 29 00 00 00    	jae    8c91 <core::slice::sort::heapsort+0x181>
    8c68:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    8c6f:	00 
    8c70:	4d 39 c1             	cmp    %r8,%r9
    8c73:	0f 83 c9 00 00 00    	jae    8d42 <core::slice::sort::heapsort+0x232>
    8c79:	4b 8d 04 49          	lea    (%r9,%r9,2),%rax
    8c7d:	4c 8b 14 c7          	mov    (%rdi,%rax,8),%r10
    8c81:	48 8d 04 52          	lea    (%rdx,%rdx,2),%rax
    8c85:	4c 3b 14 c7          	cmp    (%rdi,%rax,8),%r10
    8c89:	72 03                	jb     8c8e <core::slice::sort::heapsort+0x17e>
    8c8b:	4c 89 ca             	mov    %r9,%rdx
    8c8e:	49 89 d1             	mov    %rdx,%r9
    8c91:	4d 39 c1             	cmp    %r8,%r9
    8c94:	0f 83 66 ff ff ff    	jae    8c00 <core::slice::sort::heapsort+0xf0>
    8c9a:	4c 39 c1             	cmp    %r8,%rcx
    8c9d:	0f 83 81 00 00 00    	jae    8d24 <core::slice::sort::heapsort+0x214>
    8ca3:	48 8d 0c 49          	lea    (%rcx,%rcx,2),%rcx
    8ca7:	4b 8d 14 49          	lea    (%r9,%r9,2),%rdx
    8cab:	48 8b 04 cf          	mov    (%rdi,%rcx,8),%rax
    8caf:	48 3b 04 d7          	cmp    (%rdi,%rdx,8),%rax
    8cb3:	0f 83 47 ff ff ff    	jae    8c00 <core::slice::sort::heapsort+0xf0>
    8cb9:	48 8d 04 cf          	lea    (%rdi,%rcx,8),%rax
    8cbd:	48 8d 0c d7          	lea    (%rdi,%rdx,8),%rcx
    8cc1:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8cc5:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    8cca:	0f 10 00             	movups (%rax),%xmm0
    8ccd:	0f 29 04 24          	movaps %xmm0,(%rsp)
    8cd1:	48 8b 51 10          	mov    0x10(%rcx),%rdx
    8cd5:	0f 10 01             	movups (%rcx),%xmm0
    8cd8:	0f 11 00             	movups %xmm0,(%rax)
    8cdb:	48 89 50 10          	mov    %rdx,0x10(%rax)
    8cdf:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    8ce4:	48 89 41 10          	mov    %rax,0x10(%rcx)
    8ce8:	0f 28 04 24          	movaps (%rsp),%xmm0
    8cec:	0f 11 01             	movups %xmm0,(%rcx)
    8cef:	4c 89 c9             	mov    %r9,%rcx
    8cf2:	4c 8d 0c 09          	lea    (%rcx,%rcx,1),%r9
    8cf6:	49 83 c1 01          	add    $0x1,%r9
    8cfa:	48 8d 14 09          	lea    (%rcx,%rcx,1),%rdx
    8cfe:	48 83 c2 02          	add    $0x2,%rdx
    8d02:	4c 39 c2             	cmp    %r8,%rdx
    8d05:	0f 82 65 ff ff ff    	jb     8c70 <core::slice::sort::heapsort+0x160>
    8d0b:	eb 84                	jmp    8c91 <core::slice::sort::heapsort+0x181>
    8d0d:	48 83 c4 18          	add    $0x18,%rsp
    8d11:	c3                   	retq   
    8d12:	48 8d 15 b7 aa 03 00 	lea    0x3aab7(%rip),%rdx        # 437d0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x278>
    8d19:	48 89 cf             	mov    %rcx,%rdi
    8d1c:	ff 15 76 cf 03 00    	callq  *0x3cf76(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
    8d22:	0f 0b                	ud2    
    8d24:	48 8d 15 a5 aa 03 00 	lea    0x3aaa5(%rip),%rdx        # 437d0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x278>
    8d2b:	48 89 cf             	mov    %rcx,%rdi
    8d2e:	eb 1c                	jmp    8d4c <core::slice::sort::heapsort+0x23c>
    8d30:	48 8d 15 81 aa 03 00 	lea    0x3aa81(%rip),%rdx        # 437b8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x260>
    8d37:	4c 89 c7             	mov    %r8,%rdi
    8d3a:	ff 15 58 cf 03 00    	callq  *0x3cf58(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
    8d40:	0f 0b                	ud2    
    8d42:	48 8d 15 6f aa 03 00 	lea    0x3aa6f(%rip),%rdx        # 437b8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x260>
    8d49:	4c 89 cf             	mov    %r9,%rdi
    8d4c:	4c 89 c6             	mov    %r8,%rsi
    8d4f:	ff 15 43 cf 03 00    	callq  *0x3cf43(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
    8d55:	0f 0b                	ud2    
    8d57:	48 8d 15 fa a9 03 00 	lea    0x3a9fa(%rip),%rdx        # 43758 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x200>
    8d5e:	4c 89 c7             	mov    %r8,%rdi
    8d61:	ff 15 31 cf 03 00    	callq  *0x3cf31(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
    8d67:	0f 0b                	ud2    
    8d69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000008d70 <core::option::Option<T>::unwrap>:
    8d70:	50                   	push   %rax
    8d71:	48 85 ff             	test   %rdi,%rdi
    8d74:	74 05                	je     8d7b <core::option::Option<T>::unwrap+0xb>
    8d76:	48 89 f8             	mov    %rdi,%rax
    8d79:	59                   	pop    %rcx
    8d7a:	c3                   	retq   
    8d7b:	48 8d 3d 78 e8 02 00 	lea    0x2e878(%rip),%rdi        # 375fa <str.6+0x2da>
    8d82:	48 8d 15 7f b5 03 00 	lea    0x3b57f(%rip),%rdx        # 44308 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xdb0>
    8d89:	be 2b 00 00 00       	mov    $0x2b,%esi
    8d8e:	ff 15 4c d1 03 00    	callq  *0x3d14c(%rip)        # 45ee0 <_GLOBAL_OFFSET_TABLE_+0x550>
    8d94:	0f 0b                	ud2    
    8d96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    8d9d:	00 00 00 

0000000000008da0 <core::option::Option<T>::unwrap>:
    8da0:	50                   	push   %rax
    8da1:	48 85 ff             	test   %rdi,%rdi
    8da4:	74 05                	je     8dab <core::option::Option<T>::unwrap+0xb>
    8da6:	48 89 f8             	mov    %rdi,%rax
    8da9:	59                   	pop    %rcx
    8daa:	c3                   	retq   
    8dab:	48 89 f2             	mov    %rsi,%rdx
    8dae:	48 8d 3d 45 e8 02 00 	lea    0x2e845(%rip),%rdi        # 375fa <str.6+0x2da>
    8db5:	be 2b 00 00 00       	mov    $0x2b,%esi
    8dba:	ff 15 20 d1 03 00    	callq  *0x3d120(%rip)        # 45ee0 <_GLOBAL_OFFSET_TABLE_+0x550>
    8dc0:	0f 0b                	ud2    
    8dc2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    8dc9:	00 00 00 
    8dcc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000008dd0 <<*mut T as core::fmt::Debug>::fmt>:
    8dd0:	55                   	push   %rbp
    8dd1:	41 56                	push   %r14
    8dd3:	53                   	push   %rbx
    8dd4:	48 83 ec 20          	sub    $0x20,%rsp
    8dd8:	48 89 f3             	mov    %rsi,%rbx
    8ddb:	48 8b 2f             	mov    (%rdi),%rbp
    8dde:	0f 10 06             	movups (%rsi),%xmm0
    8de1:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    8de6:	44 8b 76 30          	mov    0x30(%rsi),%r14d
    8dea:	48 89 f7             	mov    %rsi,%rdi
    8ded:	ff 15 5d cc 03 00    	callq  *0x3cc5d(%rip)        # 45a50 <_GLOBAL_OFFSET_TABLE_+0xc0>
    8df3:	8b 4b 30             	mov    0x30(%rbx),%ecx
    8df6:	84 c0                	test   %al,%al
    8df8:	74 16                	je     8e10 <<*mut T as core::fmt::Debug>::fmt+0x40>
    8dfa:	83 c9 08             	or     $0x8,%ecx
    8dfd:	89 4b 30             	mov    %ecx,0x30(%rbx)
    8e00:	48 83 3b 01          	cmpq   $0x1,(%rbx)
    8e04:	74 0a                	je     8e10 <<*mut T as core::fmt::Debug>::fmt+0x40>
    8e06:	0f 28 05 13 d2 02 00 	movaps 0x2d213(%rip),%xmm0        # 36020 <_fini+0xf9c>
    8e0d:	0f 11 03             	movups %xmm0,(%rbx)
    8e10:	83 c9 04             	or     $0x4,%ecx
    8e13:	89 4b 30             	mov    %ecx,0x30(%rbx)
    8e16:	48 89 6c 24 08       	mov    %rbp,0x8(%rsp)
    8e1b:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    8e20:	48 89 de             	mov    %rbx,%rsi
    8e23:	ff 15 37 cf 03 00    	callq  *0x3cf37(%rip)        # 45d60 <_GLOBAL_OFFSET_TABLE_+0x3d0>
    8e29:	0f 28 44 24 10       	movaps 0x10(%rsp),%xmm0
    8e2e:	0f 11 03             	movups %xmm0,(%rbx)
    8e31:	44 89 73 30          	mov    %r14d,0x30(%rbx)
    8e35:	48 83 c4 20          	add    $0x20,%rsp
    8e39:	5b                   	pop    %rbx
    8e3a:	41 5e                	pop    %r14
    8e3c:	5d                   	pop    %rbp
    8e3d:	c3                   	retq   
    8e3e:	66 90                	xchg   %ax,%ax

0000000000008e40 <<&mut W as core::fmt::Write>::write_char>:
    8e40:	50                   	push   %rax
    8e41:	89 f0                	mov    %esi,%eax
    8e43:	48 8b 3f             	mov    (%rdi),%rdi
    8e46:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    8e4d:	00 
    8e4e:	81 fe 80 00 00 00    	cmp    $0x80,%esi
    8e54:	73 15                	jae    8e6b <<&mut W as core::fmt::Write>::write_char+0x2b>
    8e56:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    8e5b:	88 44 24 04          	mov    %al,0x4(%rsp)
    8e5f:	ba 01 00 00 00       	mov    $0x1,%edx
    8e64:	e8 97 d4 00 00       	callq  16300 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str>
    8e69:	59                   	pop    %rcx
    8e6a:	c3                   	retq   
    8e6b:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    8e70:	89 c1                	mov    %eax,%ecx
    8e72:	3d 00 08 00 00       	cmp    $0x800,%eax
    8e77:	73 1e                	jae    8e97 <<&mut W as core::fmt::Write>::write_char+0x57>
    8e79:	c1 e9 06             	shr    $0x6,%ecx
    8e7c:	80 c9 c0             	or     $0xc0,%cl
    8e7f:	88 4c 24 04          	mov    %cl,0x4(%rsp)
    8e83:	24 3f                	and    $0x3f,%al
    8e85:	0c 80                	or     $0x80,%al
    8e87:	88 44 24 05          	mov    %al,0x5(%rsp)
    8e8b:	ba 02 00 00 00       	mov    $0x2,%edx
    8e90:	e8 6b d4 00 00       	callq  16300 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str>
    8e95:	59                   	pop    %rcx
    8e96:	c3                   	retq   
    8e97:	3d 00 00 01 00       	cmp    $0x10000,%eax
    8e9c:	73 2d                	jae    8ecb <<&mut W as core::fmt::Write>::write_char+0x8b>
    8e9e:	c1 e9 0c             	shr    $0xc,%ecx
    8ea1:	80 c9 e0             	or     $0xe0,%cl
    8ea4:	88 4c 24 04          	mov    %cl,0x4(%rsp)
    8ea8:	89 c1                	mov    %eax,%ecx
    8eaa:	c1 e9 06             	shr    $0x6,%ecx
    8ead:	80 e1 3f             	and    $0x3f,%cl
    8eb0:	80 c9 80             	or     $0x80,%cl
    8eb3:	88 4c 24 05          	mov    %cl,0x5(%rsp)
    8eb7:	24 3f                	and    $0x3f,%al
    8eb9:	0c 80                	or     $0x80,%al
    8ebb:	88 44 24 06          	mov    %al,0x6(%rsp)
    8ebf:	ba 03 00 00 00       	mov    $0x3,%edx
    8ec4:	e8 37 d4 00 00       	callq  16300 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str>
    8ec9:	59                   	pop    %rcx
    8eca:	c3                   	retq   
    8ecb:	c1 e9 12             	shr    $0x12,%ecx
    8ece:	80 c9 f0             	or     $0xf0,%cl
    8ed1:	88 4c 24 04          	mov    %cl,0x4(%rsp)
    8ed5:	89 c1                	mov    %eax,%ecx
    8ed7:	c1 e9 0c             	shr    $0xc,%ecx
    8eda:	80 e1 3f             	and    $0x3f,%cl
    8edd:	80 c9 80             	or     $0x80,%cl
    8ee0:	88 4c 24 05          	mov    %cl,0x5(%rsp)
    8ee4:	89 c1                	mov    %eax,%ecx
    8ee6:	c1 e9 06             	shr    $0x6,%ecx
    8ee9:	80 e1 3f             	and    $0x3f,%cl
    8eec:	80 c9 80             	or     $0x80,%cl
    8eef:	88 4c 24 06          	mov    %cl,0x6(%rsp)
    8ef3:	24 3f                	and    $0x3f,%al
    8ef5:	0c 80                	or     $0x80,%al
    8ef7:	88 44 24 07          	mov    %al,0x7(%rsp)
    8efb:	ba 04 00 00 00       	mov    $0x4,%edx
    8f00:	e8 fb d3 00 00       	callq  16300 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str>
    8f05:	59                   	pop    %rcx
    8f06:	c3                   	retq   
    8f07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    8f0e:	00 00 

0000000000008f10 <<&mut W as core::fmt::Write>::write_char>:
    8f10:	50                   	push   %rax
    8f11:	89 f0                	mov    %esi,%eax
    8f13:	48 8b 3f             	mov    (%rdi),%rdi
    8f16:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    8f1d:	00 
    8f1e:	81 fe 80 00 00 00    	cmp    $0x80,%esi
    8f24:	73 15                	jae    8f3b <<&mut W as core::fmt::Write>::write_char+0x2b>
    8f26:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    8f2b:	88 44 24 04          	mov    %al,0x4(%rsp)
    8f2f:	ba 01 00 00 00       	mov    $0x1,%edx
    8f34:	e8 d7 d2 00 00       	callq  16210 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str>
    8f39:	59                   	pop    %rcx
    8f3a:	c3                   	retq   
    8f3b:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    8f40:	89 c1                	mov    %eax,%ecx
    8f42:	3d 00 08 00 00       	cmp    $0x800,%eax
    8f47:	73 1e                	jae    8f67 <<&mut W as core::fmt::Write>::write_char+0x57>
    8f49:	c1 e9 06             	shr    $0x6,%ecx
    8f4c:	80 c9 c0             	or     $0xc0,%cl
    8f4f:	88 4c 24 04          	mov    %cl,0x4(%rsp)
    8f53:	24 3f                	and    $0x3f,%al
    8f55:	0c 80                	or     $0x80,%al
    8f57:	88 44 24 05          	mov    %al,0x5(%rsp)
    8f5b:	ba 02 00 00 00       	mov    $0x2,%edx
    8f60:	e8 ab d2 00 00       	callq  16210 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str>
    8f65:	59                   	pop    %rcx
    8f66:	c3                   	retq   
    8f67:	3d 00 00 01 00       	cmp    $0x10000,%eax
    8f6c:	73 2d                	jae    8f9b <<&mut W as core::fmt::Write>::write_char+0x8b>
    8f6e:	c1 e9 0c             	shr    $0xc,%ecx
    8f71:	80 c9 e0             	or     $0xe0,%cl
    8f74:	88 4c 24 04          	mov    %cl,0x4(%rsp)
    8f78:	89 c1                	mov    %eax,%ecx
    8f7a:	c1 e9 06             	shr    $0x6,%ecx
    8f7d:	80 e1 3f             	and    $0x3f,%cl
    8f80:	80 c9 80             	or     $0x80,%cl
    8f83:	88 4c 24 05          	mov    %cl,0x5(%rsp)
    8f87:	24 3f                	and    $0x3f,%al
    8f89:	0c 80                	or     $0x80,%al
    8f8b:	88 44 24 06          	mov    %al,0x6(%rsp)
    8f8f:	ba 03 00 00 00       	mov    $0x3,%edx
    8f94:	e8 77 d2 00 00       	callq  16210 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str>
    8f99:	59                   	pop    %rcx
    8f9a:	c3                   	retq   
    8f9b:	c1 e9 12             	shr    $0x12,%ecx
    8f9e:	80 c9 f0             	or     $0xf0,%cl
    8fa1:	88 4c 24 04          	mov    %cl,0x4(%rsp)
    8fa5:	89 c1                	mov    %eax,%ecx
    8fa7:	c1 e9 0c             	shr    $0xc,%ecx
    8faa:	80 e1 3f             	and    $0x3f,%cl
    8fad:	80 c9 80             	or     $0x80,%cl
    8fb0:	88 4c 24 05          	mov    %cl,0x5(%rsp)
    8fb4:	89 c1                	mov    %eax,%ecx
    8fb6:	c1 e9 06             	shr    $0x6,%ecx
    8fb9:	80 e1 3f             	and    $0x3f,%cl
    8fbc:	80 c9 80             	or     $0x80,%cl
    8fbf:	88 4c 24 06          	mov    %cl,0x6(%rsp)
    8fc3:	24 3f                	and    $0x3f,%al
    8fc5:	0c 80                	or     $0x80,%al
    8fc7:	88 44 24 07          	mov    %al,0x7(%rsp)
    8fcb:	ba 04 00 00 00       	mov    $0x4,%edx
    8fd0:	e8 3b d2 00 00       	callq  16210 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str>
    8fd5:	59                   	pop    %rcx
    8fd6:	c3                   	retq   
    8fd7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    8fde:	00 00 

0000000000008fe0 <<&mut W as core::fmt::Write>::write_char>:
    8fe0:	55                   	push   %rbp
    8fe1:	41 57                	push   %r15
    8fe3:	41 56                	push   %r14
    8fe5:	53                   	push   %rbx
    8fe6:	50                   	push   %rax
    8fe7:	89 f5                	mov    %esi,%ebp
    8fe9:	48 8b 1f             	mov    (%rdi),%rbx
    8fec:	81 fe 80 00 00 00    	cmp    $0x80,%esi
    8ff2:	73 50                	jae    9044 <<&mut W as core::fmt::Write>::write_char+0x64>
    8ff4:	48 8b 73 10          	mov    0x10(%rbx),%rsi
    8ff8:	48 3b 73 08          	cmp    0x8(%rbx),%rsi
    8ffc:	75 7d                	jne    907b <<&mut W as core::fmt::Write>::write_char+0x9b>
    8ffe:	48 89 f0             	mov    %rsi,%rax
    9001:	48 ff c0             	inc    %rax
    9004:	0f 84 a1 01 00 00    	je     91ab <<&mut W as core::fmt::Write>::write_char+0x1cb>
    900a:	48 8d 0c 36          	lea    (%rsi,%rsi,1),%rcx
    900e:	48 39 c1             	cmp    %rax,%rcx
    9011:	48 0f 47 c1          	cmova  %rcx,%rax
    9015:	48 83 f8 08          	cmp    $0x8,%rax
    9019:	41 be 08 00 00 00    	mov    $0x8,%r14d
    901f:	4c 0f 47 f0          	cmova  %rax,%r14
    9023:	48 85 f6             	test   %rsi,%rsi
    9026:	0f 84 86 00 00 00    	je     90b2 <<&mut W as core::fmt::Write>::write_char+0xd2>
    902c:	48 8b 3b             	mov    (%rbx),%rdi
    902f:	48 85 ff             	test   %rdi,%rdi
    9032:	74 7e                	je     90b2 <<&mut W as core::fmt::Write>::write_char+0xd2>
    9034:	ba 01 00 00 00       	mov    $0x1,%edx
    9039:	4c 89 f1             	mov    %r14,%rcx
    903c:	ff 15 36 cf 03 00    	callq  *0x3cf36(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
    9042:	eb 7c                	jmp    90c0 <<&mut W as core::fmt::Write>::write_char+0xe0>
    9044:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    904b:	00 
    904c:	4c 8d 74 24 04       	lea    0x4(%rsp),%r14
    9051:	89 e8                	mov    %ebp,%eax
    9053:	81 fd 00 08 00 00    	cmp    $0x800,%ebp
    9059:	73 25                	jae    9080 <<&mut W as core::fmt::Write>::write_char+0xa0>
    905b:	c1 e8 06             	shr    $0x6,%eax
    905e:	0c c0                	or     $0xc0,%al
    9060:	88 44 24 04          	mov    %al,0x4(%rsp)
    9064:	40 80 e5 3f          	and    $0x3f,%bpl
    9068:	40 80 cd 80          	or     $0x80,%bpl
    906c:	40 88 6c 24 05       	mov    %bpl,0x5(%rsp)
    9071:	bd 02 00 00 00       	mov    $0x2,%ebp
    9076:	e9 9c 00 00 00       	jmpq   9117 <<&mut W as core::fmt::Write>::write_char+0x137>
    907b:	48 8b 03             	mov    (%rbx),%rax
    907e:	eb 54                	jmp    90d4 <<&mut W as core::fmt::Write>::write_char+0xf4>
    9080:	81 fd 00 00 01 00    	cmp    $0x10000,%ebp
    9086:	73 5a                	jae    90e2 <<&mut W as core::fmt::Write>::write_char+0x102>
    9088:	c1 e8 0c             	shr    $0xc,%eax
    908b:	0c e0                	or     $0xe0,%al
    908d:	88 44 24 04          	mov    %al,0x4(%rsp)
    9091:	89 e8                	mov    %ebp,%eax
    9093:	c1 e8 06             	shr    $0x6,%eax
    9096:	24 3f                	and    $0x3f,%al
    9098:	0c 80                	or     $0x80,%al
    909a:	88 44 24 05          	mov    %al,0x5(%rsp)
    909e:	40 80 e5 3f          	and    $0x3f,%bpl
    90a2:	40 80 cd 80          	or     $0x80,%bpl
    90a6:	40 88 6c 24 06       	mov    %bpl,0x6(%rsp)
    90ab:	bd 03 00 00 00       	mov    $0x3,%ebp
    90b0:	eb 65                	jmp    9117 <<&mut W as core::fmt::Write>::write_char+0x137>
    90b2:	be 01 00 00 00       	mov    $0x1,%esi
    90b7:	4c 89 f7             	mov    %r14,%rdi
    90ba:	ff 15 c8 ca 03 00    	callq  *0x3cac8(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
    90c0:	48 85 c0             	test   %rax,%rax
    90c3:	0f 84 ea 00 00 00    	je     91b3 <<&mut W as core::fmt::Write>::write_char+0x1d3>
    90c9:	48 89 03             	mov    %rax,(%rbx)
    90cc:	4c 89 73 08          	mov    %r14,0x8(%rbx)
    90d0:	48 8b 73 10          	mov    0x10(%rbx),%rsi
    90d4:	40 88 2c 30          	mov    %bpl,(%rax,%rsi,1)
    90d8:	48 83 43 10 01       	addq   $0x1,0x10(%rbx)
    90dd:	e9 bc 00 00 00       	jmpq   919e <<&mut W as core::fmt::Write>::write_char+0x1be>
    90e2:	c1 e8 12             	shr    $0x12,%eax
    90e5:	0c f0                	or     $0xf0,%al
    90e7:	88 44 24 04          	mov    %al,0x4(%rsp)
    90eb:	89 e8                	mov    %ebp,%eax
    90ed:	c1 e8 0c             	shr    $0xc,%eax
    90f0:	24 3f                	and    $0x3f,%al
    90f2:	0c 80                	or     $0x80,%al
    90f4:	88 44 24 05          	mov    %al,0x5(%rsp)
    90f8:	89 e8                	mov    %ebp,%eax
    90fa:	c1 e8 06             	shr    $0x6,%eax
    90fd:	24 3f                	and    $0x3f,%al
    90ff:	0c 80                	or     $0x80,%al
    9101:	88 44 24 06          	mov    %al,0x6(%rsp)
    9105:	40 80 e5 3f          	and    $0x3f,%bpl
    9109:	40 80 cd 80          	or     $0x80,%bpl
    910d:	40 88 6c 24 07       	mov    %bpl,0x7(%rsp)
    9112:	bd 04 00 00 00       	mov    $0x4,%ebp
    9117:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    911b:	48 8b 43 10          	mov    0x10(%rbx),%rax
    911f:	48 89 f1             	mov    %rsi,%rcx
    9122:	48 29 c1             	sub    %rax,%rcx
    9125:	48 39 e9             	cmp    %rbp,%rcx
    9128:	73 3b                	jae    9165 <<&mut W as core::fmt::Write>::write_char+0x185>
    912a:	48 01 e8             	add    %rbp,%rax
    912d:	72 7c                	jb     91ab <<&mut W as core::fmt::Write>::write_char+0x1cb>
    912f:	48 8d 0c 36          	lea    (%rsi,%rsi,1),%rcx
    9133:	48 39 c1             	cmp    %rax,%rcx
    9136:	48 0f 47 c1          	cmova  %rcx,%rax
    913a:	48 83 f8 08          	cmp    $0x8,%rax
    913e:	41 bf 08 00 00 00    	mov    $0x8,%r15d
    9144:	4c 0f 47 f8          	cmova  %rax,%r15
    9148:	48 85 f6             	test   %rsi,%rsi
    914b:	74 1d                	je     916a <<&mut W as core::fmt::Write>::write_char+0x18a>
    914d:	48 8b 3b             	mov    (%rbx),%rdi
    9150:	48 85 ff             	test   %rdi,%rdi
    9153:	74 15                	je     916a <<&mut W as core::fmt::Write>::write_char+0x18a>
    9155:	ba 01 00 00 00       	mov    $0x1,%edx
    915a:	4c 89 f9             	mov    %r15,%rcx
    915d:	ff 15 15 ce 03 00    	callq  *0x3ce15(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
    9163:	eb 13                	jmp    9178 <<&mut W as core::fmt::Write>::write_char+0x198>
    9165:	48 8b 3b             	mov    (%rbx),%rdi
    9168:	eb 21                	jmp    918b <<&mut W as core::fmt::Write>::write_char+0x1ab>
    916a:	be 01 00 00 00       	mov    $0x1,%esi
    916f:	4c 89 ff             	mov    %r15,%rdi
    9172:	ff 15 10 ca 03 00    	callq  *0x3ca10(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
    9178:	48 89 c7             	mov    %rax,%rdi
    917b:	48 85 c0             	test   %rax,%rax
    917e:	74 43                	je     91c3 <<&mut W as core::fmt::Write>::write_char+0x1e3>
    9180:	48 89 3b             	mov    %rdi,(%rbx)
    9183:	4c 89 7b 08          	mov    %r15,0x8(%rbx)
    9187:	48 8b 43 10          	mov    0x10(%rbx),%rax
    918b:	48 01 c7             	add    %rax,%rdi
    918e:	4c 89 f6             	mov    %r14,%rsi
    9191:	48 89 ea             	mov    %rbp,%rdx
    9194:	ff 15 66 cb 03 00    	callq  *0x3cb66(%rip)        # 45d00 <memcpy@GLIBC_2.14>
    919a:	48 01 6b 10          	add    %rbp,0x10(%rbx)
    919e:	31 c0                	xor    %eax,%eax
    91a0:	48 83 c4 08          	add    $0x8,%rsp
    91a4:	5b                   	pop    %rbx
    91a5:	41 5e                	pop    %r14
    91a7:	41 5f                	pop    %r15
    91a9:	5d                   	pop    %rbp
    91aa:	c3                   	retq   
    91ab:	ff 15 37 c9 03 00    	callq  *0x3c937(%rip)        # 45ae8 <_GLOBAL_OFFSET_TABLE_+0x158>
    91b1:	0f 0b                	ud2    
    91b3:	be 01 00 00 00       	mov    $0x1,%esi
    91b8:	4c 89 f7             	mov    %r14,%rdi
    91bb:	ff 15 67 c9 03 00    	callq  *0x3c967(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
    91c1:	0f 0b                	ud2    
    91c3:	be 01 00 00 00       	mov    $0x1,%esi
    91c8:	4c 89 ff             	mov    %r15,%rdi
    91cb:	ff 15 57 c9 03 00    	callq  *0x3c957(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
    91d1:	0f 0b                	ud2    
    91d3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    91da:	00 00 00 
    91dd:	0f 1f 00             	nopl   (%rax)

00000000000091e0 <<&mut W as core::fmt::Write>::write_fmt>:
    91e0:	48 83 ec 48          	sub    $0x48,%rsp
    91e4:	48 8b 07             	mov    (%rdi),%rax
    91e7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    91ec:	0f 10 06             	movups (%rsi),%xmm0
    91ef:	0f 10 4e 10          	movups 0x10(%rsi),%xmm1
    91f3:	0f 10 56 20          	movups 0x20(%rsi),%xmm2
    91f7:	0f 29 54 24 30       	movaps %xmm2,0x30(%rsp)
    91fc:	0f 29 4c 24 20       	movaps %xmm1,0x20(%rsp)
    9201:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    9206:	48 8d 35 03 a4 03 00 	lea    0x3a403(%rip),%rsi        # 43610 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xb8>
    920d:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    9212:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    9217:	ff 15 e3 cb 03 00    	callq  *0x3cbe3(%rip)        # 45e00 <_GLOBAL_OFFSET_TABLE_+0x470>
    921d:	48 83 c4 48          	add    $0x48,%rsp
    9221:	c3                   	retq   
    9222:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    9229:	00 00 00 
    922c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000009230 <<&mut W as core::fmt::Write>::write_fmt>:
    9230:	48 83 ec 48          	sub    $0x48,%rsp
    9234:	48 8b 07             	mov    (%rdi),%rax
    9237:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    923c:	0f 10 06             	movups (%rsi),%xmm0
    923f:	0f 10 4e 10          	movups 0x10(%rsi),%xmm1
    9243:	0f 10 56 20          	movups 0x20(%rsi),%xmm2
    9247:	0f 29 54 24 30       	movaps %xmm2,0x30(%rsp)
    924c:	0f 29 4c 24 20       	movaps %xmm1,0x20(%rsp)
    9251:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    9256:	48 8d 35 83 a3 03 00 	lea    0x3a383(%rip),%rsi        # 435e0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x88>
    925d:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    9262:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    9267:	ff 15 93 cb 03 00    	callq  *0x3cb93(%rip)        # 45e00 <_GLOBAL_OFFSET_TABLE_+0x470>
    926d:	48 83 c4 48          	add    $0x48,%rsp
    9271:	c3                   	retq   
    9272:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    9279:	00 00 00 
    927c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000009280 <<&mut W as core::fmt::Write>::write_fmt>:
    9280:	48 83 ec 48          	sub    $0x48,%rsp
    9284:	48 8b 07             	mov    (%rdi),%rax
    9287:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    928c:	0f 10 06             	movups (%rsi),%xmm0
    928f:	0f 10 4e 10          	movups 0x10(%rsi),%xmm1
    9293:	0f 10 56 20          	movups 0x20(%rsi),%xmm2
    9297:	0f 29 54 24 30       	movaps %xmm2,0x30(%rsp)
    929c:	0f 29 4c 24 20       	movaps %xmm1,0x20(%rsp)
    92a1:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    92a6:	48 8d 35 03 a3 03 00 	lea    0x3a303(%rip),%rsi        # 435b0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x58>
    92ad:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    92b2:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    92b7:	ff 15 43 cb 03 00    	callq  *0x3cb43(%rip)        # 45e00 <_GLOBAL_OFFSET_TABLE_+0x470>
    92bd:	48 83 c4 48          	add    $0x48,%rsp
    92c1:	c3                   	retq   
    92c2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    92c9:	00 00 00 
    92cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000092d0 <<&mut W as core::fmt::Write>::write_str>:
    92d0:	48 8b 3f             	mov    (%rdi),%rdi
    92d3:	e9 28 d0 00 00       	jmpq   16300 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str>
    92d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    92df:	00 

00000000000092e0 <<&mut W as core::fmt::Write>::write_str>:
    92e0:	41 57                	push   %r15
    92e2:	41 56                	push   %r14
    92e4:	41 54                	push   %r12
    92e6:	53                   	push   %rbx
    92e7:	50                   	push   %rax
    92e8:	49 89 d4             	mov    %rdx,%r12
    92eb:	49 89 f6             	mov    %rsi,%r14
    92ee:	48 8b 1f             	mov    (%rdi),%rbx
    92f1:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    92f5:	48 8b 43 10          	mov    0x10(%rbx),%rax
    92f9:	48 89 f1             	mov    %rsi,%rcx
    92fc:	48 29 c1             	sub    %rax,%rcx
    92ff:	48 39 d1             	cmp    %rdx,%rcx
    9302:	73 3b                	jae    933f <<&mut W as core::fmt::Write>::write_str+0x5f>
    9304:	4c 01 e0             	add    %r12,%rax
    9307:	72 7d                	jb     9386 <<&mut W as core::fmt::Write>::write_str+0xa6>
    9309:	48 8d 0c 36          	lea    (%rsi,%rsi,1),%rcx
    930d:	48 39 c1             	cmp    %rax,%rcx
    9310:	48 0f 47 c1          	cmova  %rcx,%rax
    9314:	48 83 f8 08          	cmp    $0x8,%rax
    9318:	41 bf 08 00 00 00    	mov    $0x8,%r15d
    931e:	4c 0f 47 f8          	cmova  %rax,%r15
    9322:	48 85 f6             	test   %rsi,%rsi
    9325:	74 1d                	je     9344 <<&mut W as core::fmt::Write>::write_str+0x64>
    9327:	48 8b 3b             	mov    (%rbx),%rdi
    932a:	48 85 ff             	test   %rdi,%rdi
    932d:	74 15                	je     9344 <<&mut W as core::fmt::Write>::write_str+0x64>
    932f:	ba 01 00 00 00       	mov    $0x1,%edx
    9334:	4c 89 f9             	mov    %r15,%rcx
    9337:	ff 15 3b cc 03 00    	callq  *0x3cc3b(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
    933d:	eb 13                	jmp    9352 <<&mut W as core::fmt::Write>::write_str+0x72>
    933f:	48 8b 3b             	mov    (%rbx),%rdi
    9342:	eb 21                	jmp    9365 <<&mut W as core::fmt::Write>::write_str+0x85>
    9344:	be 01 00 00 00       	mov    $0x1,%esi
    9349:	4c 89 ff             	mov    %r15,%rdi
    934c:	ff 15 36 c8 03 00    	callq  *0x3c836(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
    9352:	48 89 c7             	mov    %rax,%rdi
    9355:	48 85 c0             	test   %rax,%rax
    9358:	74 34                	je     938e <<&mut W as core::fmt::Write>::write_str+0xae>
    935a:	48 89 3b             	mov    %rdi,(%rbx)
    935d:	4c 89 7b 08          	mov    %r15,0x8(%rbx)
    9361:	48 8b 43 10          	mov    0x10(%rbx),%rax
    9365:	48 01 c7             	add    %rax,%rdi
    9368:	4c 89 f6             	mov    %r14,%rsi
    936b:	4c 89 e2             	mov    %r12,%rdx
    936e:	ff 15 8c c9 03 00    	callq  *0x3c98c(%rip)        # 45d00 <memcpy@GLIBC_2.14>
    9374:	4c 01 63 10          	add    %r12,0x10(%rbx)
    9378:	31 c0                	xor    %eax,%eax
    937a:	48 83 c4 08          	add    $0x8,%rsp
    937e:	5b                   	pop    %rbx
    937f:	41 5c                	pop    %r12
    9381:	41 5e                	pop    %r14
    9383:	41 5f                	pop    %r15
    9385:	c3                   	retq   
    9386:	ff 15 5c c7 03 00    	callq  *0x3c75c(%rip)        # 45ae8 <_GLOBAL_OFFSET_TABLE_+0x158>
    938c:	0f 0b                	ud2    
    938e:	be 01 00 00 00       	mov    $0x1,%esi
    9393:	4c 89 ff             	mov    %r15,%rdi
    9396:	ff 15 8c c7 03 00    	callq  *0x3c78c(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
    939c:	0f 0b                	ud2    
    939e:	66 90                	xchg   %ax,%ax

00000000000093a0 <<&mut W as core::fmt::Write>::write_str>:
    93a0:	48 8b 3f             	mov    (%rdi),%rdi
    93a3:	e9 68 ce 00 00       	jmpq   16210 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str>
    93a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    93af:	00 

00000000000093b0 <<alloc::string::String as core::fmt::Debug>::fmt>:
    93b0:	48 89 f2             	mov    %rsi,%rdx
    93b3:	48 8b 07             	mov    (%rdi),%rax
    93b6:	48 8b 77 10          	mov    0x10(%rdi),%rsi
    93ba:	48 89 c7             	mov    %rax,%rdi
    93bd:	ff 25 35 c9 03 00    	jmpq   *0x3c935(%rip)        # 45cf8 <_GLOBAL_OFFSET_TABLE_+0x368>
    93c3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    93ca:	00 00 00 
    93cd:	0f 1f 00             	nopl   (%rax)

00000000000093d0 <alloc::vec::Vec<T>::push>:
    93d0:	41 57                	push   %r15
    93d2:	41 56                	push   %r14
    93d4:	41 54                	push   %r12
    93d6:	53                   	push   %rbx
    93d7:	50                   	push   %rax
    93d8:	49 89 d6             	mov    %rdx,%r14
    93db:	49 89 f7             	mov    %rsi,%r15
    93de:	48 89 fb             	mov    %rdi,%rbx
    93e1:	48 8b 77 10          	mov    0x10(%rdi),%rsi
    93e5:	48 3b 77 08          	cmp    0x8(%rdi),%rsi
    93e9:	0f 85 8c 00 00 00    	jne    947b <alloc::vec::Vec<T>::push+0xab>
    93ef:	48 89 f1             	mov    %rsi,%rcx
    93f2:	48 ff c1             	inc    %rcx
    93f5:	0f 84 a1 00 00 00    	je     949c <alloc::vec::Vec<T>::push+0xcc>
    93fb:	48 8d 04 36          	lea    (%rsi,%rsi,1),%rax
    93ff:	48 39 c8             	cmp    %rcx,%rax
    9402:	48 0f 47 c8          	cmova  %rax,%rcx
    9406:	48 83 f9 04          	cmp    $0x4,%rcx
    940a:	b8 04 00 00 00       	mov    $0x4,%eax
    940f:	48 0f 47 c1          	cmova  %rcx,%rax
    9413:	ba 10 00 00 00       	mov    $0x10,%edx
    9418:	31 c9                	xor    %ecx,%ecx
    941a:	48 f7 e2             	mul    %rdx
    941d:	49 89 c4             	mov    %rax,%r12
    9420:	0f 90 c0             	seto   %al
    9423:	0f 91 c1             	setno  %cl
    9426:	48 c1 e1 03          	shl    $0x3,%rcx
    942a:	48 85 f6             	test   %rsi,%rsi
    942d:	74 20                	je     944f <alloc::vec::Vec<T>::push+0x7f>
    942f:	84 c0                	test   %al,%al
    9431:	75 69                	jne    949c <alloc::vec::Vec<T>::push+0xcc>
    9433:	48 8b 3b             	mov    (%rbx),%rdi
    9436:	48 85 ff             	test   %rdi,%rdi
    9439:	74 18                	je     9453 <alloc::vec::Vec<T>::push+0x83>
    943b:	48 c1 e6 04          	shl    $0x4,%rsi
    943f:	74 12                	je     9453 <alloc::vec::Vec<T>::push+0x83>
    9441:	48 89 ca             	mov    %rcx,%rdx
    9444:	4c 89 e1             	mov    %r12,%rcx
    9447:	ff 15 2b cb 03 00    	callq  *0x3cb2b(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
    944d:	eb 15                	jmp    9464 <alloc::vec::Vec<T>::push+0x94>
    944f:	84 c0                	test   %al,%al
    9451:	75 49                	jne    949c <alloc::vec::Vec<T>::push+0xcc>
    9453:	4d 85 e4             	test   %r12,%r12
    9456:	74 0f                	je     9467 <alloc::vec::Vec<T>::push+0x97>
    9458:	4c 89 e7             	mov    %r12,%rdi
    945b:	48 89 ce             	mov    %rcx,%rsi
    945e:	ff 15 24 c7 03 00    	callq  *0x3c724(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
    9464:	48 89 c1             	mov    %rax,%rcx
    9467:	48 85 c9             	test   %rcx,%rcx
    946a:	74 38                	je     94a4 <alloc::vec::Vec<T>::push+0xd4>
    946c:	48 89 0b             	mov    %rcx,(%rbx)
    946f:	49 c1 ec 04          	shr    $0x4,%r12
    9473:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    9477:	48 8b 73 10          	mov    0x10(%rbx),%rsi
    947b:	48 8b 03             	mov    (%rbx),%rax
    947e:	48 c1 e6 04          	shl    $0x4,%rsi
    9482:	4c 89 3c 30          	mov    %r15,(%rax,%rsi,1)
    9486:	4c 89 74 30 08       	mov    %r14,0x8(%rax,%rsi,1)
    948b:	48 83 43 10 01       	addq   $0x1,0x10(%rbx)
    9490:	48 83 c4 08          	add    $0x8,%rsp
    9494:	5b                   	pop    %rbx
    9495:	41 5c                	pop    %r12
    9497:	41 5e                	pop    %r14
    9499:	41 5f                	pop    %r15
    949b:	c3                   	retq   
    949c:	ff 15 46 c6 03 00    	callq  *0x3c646(%rip)        # 45ae8 <_GLOBAL_OFFSET_TABLE_+0x158>
    94a2:	0f 0b                	ud2    
    94a4:	be 08 00 00 00       	mov    $0x8,%esi
    94a9:	4c 89 e7             	mov    %r12,%rdi
    94ac:	ff 15 76 c6 03 00    	callq  *0x3c676(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
    94b2:	0f 0b                	ud2    
    94b4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    94bb:	00 00 00 
    94be:	66 90                	xchg   %ax,%ax

00000000000094c0 <alloc::vec::Vec<T>::insert>:
    94c0:	41 57                	push   %r15
    94c2:	41 56                	push   %r14
    94c4:	41 55                	push   %r13
    94c6:	41 54                	push   %r12
    94c8:	53                   	push   %rbx
    94c9:	49 89 fe             	mov    %rdi,%r14
    94cc:	4c 8b 2d 55 cd 03 00 	mov    0x3cd55(%rip),%r13        # 46228 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x28>
    94d3:	4c 3b 2d 46 cd 03 00 	cmp    0x3cd46(%rip),%r13        # 46220 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x20>
    94da:	75 70                	jne    954c <alloc::vec::Vec<T>::insert+0x8c>
    94dc:	4d 89 ec             	mov    %r13,%r12
    94df:	49 ff c4             	inc    %r12
    94e2:	0f 84 ee 00 00 00    	je     95d6 <alloc::vec::Vec<T>::insert+0x116>
    94e8:	4c 89 e9             	mov    %r13,%rcx
    94eb:	4c 01 e9             	add    %r13,%rcx
    94ee:	4c 39 e1             	cmp    %r12,%rcx
    94f1:	49 0f 46 cc          	cmovbe %r12,%rcx
    94f5:	48 83 f9 04          	cmp    $0x4,%rcx
    94f9:	b8 04 00 00 00       	mov    $0x4,%eax
    94fe:	48 0f 47 c1          	cmova  %rcx,%rax
    9502:	b9 88 01 00 00       	mov    $0x188,%ecx
    9507:	31 db                	xor    %ebx,%ebx
    9509:	48 f7 e1             	mul    %rcx
    950c:	49 89 c7             	mov    %rax,%r15
    950f:	0f 90 c0             	seto   %al
    9512:	0f 91 c3             	setno  %bl
    9515:	48 c1 e3 03          	shl    $0x3,%rbx
    9519:	4d 85 ed             	test   %r13,%r13
    951c:	74 3b                	je     9559 <alloc::vec::Vec<T>::insert+0x99>
    951e:	84 c0                	test   %al,%al
    9520:	0f 85 b0 00 00 00    	jne    95d6 <alloc::vec::Vec<T>::insert+0x116>
    9526:	48 8b 3d eb cc 03 00 	mov    0x3cceb(%rip),%rdi        # 46218 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x18>
    952d:	48 85 ff             	test   %rdi,%rdi
    9530:	74 2b                	je     955d <alloc::vec::Vec<T>::insert+0x9d>
    9532:	49 69 f5 88 01 00 00 	imul   $0x188,%r13,%rsi
    9539:	48 85 f6             	test   %rsi,%rsi
    953c:	74 1f                	je     955d <alloc::vec::Vec<T>::insert+0x9d>
    953e:	48 89 da             	mov    %rbx,%rdx
    9541:	4c 89 f9             	mov    %r15,%rcx
    9544:	ff 15 2e ca 03 00    	callq  *0x3ca2e(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
    954a:	eb 22                	jmp    956e <alloc::vec::Vec<T>::insert+0xae>
    954c:	48 8b 1d c5 cc 03 00 	mov    0x3ccc5(%rip),%rbx        # 46218 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x18>
    9553:	4d 8d 65 01          	lea    0x1(%r13),%r12
    9557:	eb 43                	jmp    959c <alloc::vec::Vec<T>::insert+0xdc>
    9559:	84 c0                	test   %al,%al
    955b:	75 79                	jne    95d6 <alloc::vec::Vec<T>::insert+0x116>
    955d:	4d 85 ff             	test   %r15,%r15
    9560:	74 0f                	je     9571 <alloc::vec::Vec<T>::insert+0xb1>
    9562:	4c 89 ff             	mov    %r15,%rdi
    9565:	48 89 de             	mov    %rbx,%rsi
    9568:	ff 15 1a c6 03 00    	callq  *0x3c61a(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
    956e:	48 89 c3             	mov    %rax,%rbx
    9571:	48 85 db             	test   %rbx,%rbx
    9574:	74 68                	je     95de <alloc::vec::Vec<T>::insert+0x11e>
    9576:	48 89 1d 9b cc 03 00 	mov    %rbx,0x3cc9b(%rip)        # 46218 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x18>
    957d:	49 c1 ef 03          	shr    $0x3,%r15
    9581:	48 b9 f1 72 0a 5e 4e 	movabs $0x29cbc14e5e0a72f1,%rcx
    9588:	c1 cb 29 
    958b:	4c 89 f8             	mov    %r15,%rax
    958e:	48 f7 e1             	mul    %rcx
    9591:	48 c1 ea 03          	shr    $0x3,%rdx
    9595:	48 89 15 84 cc 03 00 	mov    %rdx,0x3cc84(%rip)        # 46220 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x20>
    959c:	48 8d bb 88 01 00 00 	lea    0x188(%rbx),%rdi
    95a3:	49 69 d5 88 01 00 00 	imul   $0x188,%r13,%rdx
    95aa:	4c 8b 3d bf c8 03 00 	mov    0x3c8bf(%rip),%r15        # 45e70 <memmove@GLIBC_2.2.5>
    95b1:	48 89 de             	mov    %rbx,%rsi
    95b4:	41 ff d7             	callq  *%r15
    95b7:	ba 88 01 00 00       	mov    $0x188,%edx
    95bc:	48 89 df             	mov    %rbx,%rdi
    95bf:	4c 89 f6             	mov    %r14,%rsi
    95c2:	41 ff d7             	callq  *%r15
    95c5:	4c 89 25 5c cc 03 00 	mov    %r12,0x3cc5c(%rip)        # 46228 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x28>
    95cc:	5b                   	pop    %rbx
    95cd:	41 5c                	pop    %r12
    95cf:	41 5d                	pop    %r13
    95d1:	41 5e                	pop    %r14
    95d3:	41 5f                	pop    %r15
    95d5:	c3                   	retq   
    95d6:	ff 15 0c c5 03 00    	callq  *0x3c50c(%rip)        # 45ae8 <_GLOBAL_OFFSET_TABLE_+0x158>
    95dc:	0f 0b                	ud2    
    95de:	be 08 00 00 00       	mov    $0x8,%esi
    95e3:	4c 89 ff             	mov    %r15,%rdi
    95e6:	ff 15 3c c5 03 00    	callq  *0x3c53c(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
    95ec:	0f 0b                	ud2    
    95ee:	48 89 c3             	mov    %rax,%rbx
    95f1:	4c 89 f7             	mov    %r14,%rdi
    95f4:	e8 57 d2 ff ff       	callq  6850 <core::ptr::drop_in_place>
    95f9:	48 89 df             	mov    %rbx,%rdi
    95fc:	e8 4f ba ff ff       	callq  5050 <_Unwind_Resume@plt>
    9601:	0f 0b                	ud2    
    9603:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    960a:	00 00 00 
    960d:	0f 1f 00             	nopl   (%rax)

0000000000009610 <alloc::vec::Vec<T>::reserve>:
    9610:	41 56                	push   %r14
    9612:	53                   	push   %rbx
    9613:	50                   	push   %rax
    9614:	48 89 f1             	mov    %rsi,%rcx
    9617:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    961b:	48 8b 47 10          	mov    0x10(%rdi),%rax
    961f:	48 89 f2             	mov    %rsi,%rdx
    9622:	48 29 c2             	sub    %rax,%rdx
    9625:	48 39 ca             	cmp    %rcx,%rdx
    9628:	0f 83 85 00 00 00    	jae    96b3 <alloc::vec::Vec<T>::reserve+0xa3>
    962e:	48 01 c8             	add    %rcx,%rax
    9631:	0f 82 84 00 00 00    	jb     96bb <alloc::vec::Vec<T>::reserve+0xab>
    9637:	48 89 fb             	mov    %rdi,%rbx
    963a:	48 8d 0c 36          	lea    (%rsi,%rsi,1),%rcx
    963e:	48 39 c1             	cmp    %rax,%rcx
    9641:	48 0f 47 c1          	cmova  %rcx,%rax
    9645:	48 83 f8 04          	cmp    $0x4,%rax
    9649:	ba 04 00 00 00       	mov    $0x4,%edx
    964e:	48 0f 46 c2          	cmovbe %rdx,%rax
    9652:	31 c9                	xor    %ecx,%ecx
    9654:	48 f7 e2             	mul    %rdx
    9657:	49 89 c6             	mov    %rax,%r14
    965a:	0f 90 c0             	seto   %al
    965d:	0f 91 c1             	setno  %cl
    9660:	48 01 c9             	add    %rcx,%rcx
    9663:	48 85 f6             	test   %rsi,%rsi
    9666:	74 23                	je     968b <alloc::vec::Vec<T>::reserve+0x7b>
    9668:	84 c0                	test   %al,%al
    966a:	75 4f                	jne    96bb <alloc::vec::Vec<T>::reserve+0xab>
    966c:	48 8b 3b             	mov    (%rbx),%rdi
    966f:	48 85 ff             	test   %rdi,%rdi
    9672:	74 1b                	je     968f <alloc::vec::Vec<T>::reserve+0x7f>
    9674:	48 c1 e6 02          	shl    $0x2,%rsi
    9678:	48 85 f6             	test   %rsi,%rsi
    967b:	74 12                	je     968f <alloc::vec::Vec<T>::reserve+0x7f>
    967d:	48 89 ca             	mov    %rcx,%rdx
    9680:	4c 89 f1             	mov    %r14,%rcx
    9683:	ff 15 ef c8 03 00    	callq  *0x3c8ef(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
    9689:	eb 15                	jmp    96a0 <alloc::vec::Vec<T>::reserve+0x90>
    968b:	84 c0                	test   %al,%al
    968d:	75 2c                	jne    96bb <alloc::vec::Vec<T>::reserve+0xab>
    968f:	4d 85 f6             	test   %r14,%r14
    9692:	74 0f                	je     96a3 <alloc::vec::Vec<T>::reserve+0x93>
    9694:	4c 89 f7             	mov    %r14,%rdi
    9697:	48 89 ce             	mov    %rcx,%rsi
    969a:	ff 15 e8 c4 03 00    	callq  *0x3c4e8(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
    96a0:	48 89 c1             	mov    %rax,%rcx
    96a3:	48 85 c9             	test   %rcx,%rcx
    96a6:	74 1b                	je     96c3 <alloc::vec::Vec<T>::reserve+0xb3>
    96a8:	48 89 0b             	mov    %rcx,(%rbx)
    96ab:	49 c1 ee 02          	shr    $0x2,%r14
    96af:	4c 89 73 08          	mov    %r14,0x8(%rbx)
    96b3:	48 83 c4 08          	add    $0x8,%rsp
    96b7:	5b                   	pop    %rbx
    96b8:	41 5e                	pop    %r14
    96ba:	c3                   	retq   
    96bb:	ff 15 27 c4 03 00    	callq  *0x3c427(%rip)        # 45ae8 <_GLOBAL_OFFSET_TABLE_+0x158>
    96c1:	0f 0b                	ud2    
    96c3:	be 02 00 00 00       	mov    $0x2,%esi
    96c8:	4c 89 f7             	mov    %r14,%rdi
    96cb:	ff 15 57 c4 03 00    	callq  *0x3c457(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
    96d1:	0f 0b                	ud2    
    96d3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    96da:	00 00 00 
    96dd:	0f 1f 00             	nopl   (%rax)

00000000000096e0 <alloc::vec::Vec<T>::reserve>:
    96e0:	41 57                	push   %r15
    96e2:	41 56                	push   %r14
    96e4:	53                   	push   %rbx
    96e5:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
    96e9:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
    96ed:	48 89 d8             	mov    %rbx,%rax
    96f0:	48 29 c8             	sub    %rcx,%rax
    96f3:	48 39 f0             	cmp    %rsi,%rax
    96f6:	0f 83 9f 00 00 00    	jae    979b <alloc::vec::Vec<T>::reserve+0xbb>
    96fc:	48 01 f1             	add    %rsi,%rcx
    96ff:	0f 82 9c 00 00 00    	jb     97a1 <alloc::vec::Vec<T>::reserve+0xc1>
    9705:	49 89 ff             	mov    %rdi,%r15
    9708:	48 8d 04 1b          	lea    (%rbx,%rbx,1),%rax
    970c:	48 39 c8             	cmp    %rcx,%rax
    970f:	48 0f 47 c8          	cmova  %rax,%rcx
    9713:	48 83 f9 04          	cmp    $0x4,%rcx
    9717:	b8 04 00 00 00       	mov    $0x4,%eax
    971c:	48 0f 47 c1          	cmova  %rcx,%rax
    9720:	ba 18 00 00 00       	mov    $0x18,%edx
    9725:	31 c9                	xor    %ecx,%ecx
    9727:	48 f7 e2             	mul    %rdx
    972a:	49 89 c6             	mov    %rax,%r14
    972d:	0f 90 c0             	seto   %al
    9730:	0f 91 c1             	setno  %cl
    9733:	48 c1 e1 03          	shl    $0x3,%rcx
    9737:	48 85 db             	test   %rbx,%rbx
    973a:	74 27                	je     9763 <alloc::vec::Vec<T>::reserve+0x83>
    973c:	84 c0                	test   %al,%al
    973e:	75 61                	jne    97a1 <alloc::vec::Vec<T>::reserve+0xc1>
    9740:	49 8b 3f             	mov    (%r15),%rdi
    9743:	48 85 ff             	test   %rdi,%rdi
    9746:	74 1f                	je     9767 <alloc::vec::Vec<T>::reserve+0x87>
    9748:	48 c1 e3 03          	shl    $0x3,%rbx
    974c:	48 8d 34 5b          	lea    (%rbx,%rbx,2),%rsi
    9750:	48 85 f6             	test   %rsi,%rsi
    9753:	74 12                	je     9767 <alloc::vec::Vec<T>::reserve+0x87>
    9755:	48 89 ca             	mov    %rcx,%rdx
    9758:	4c 89 f1             	mov    %r14,%rcx
    975b:	ff 15 17 c8 03 00    	callq  *0x3c817(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
    9761:	eb 15                	jmp    9778 <alloc::vec::Vec<T>::reserve+0x98>
    9763:	84 c0                	test   %al,%al
    9765:	75 3a                	jne    97a1 <alloc::vec::Vec<T>::reserve+0xc1>
    9767:	4d 85 f6             	test   %r14,%r14
    976a:	74 0f                	je     977b <alloc::vec::Vec<T>::reserve+0x9b>
    976c:	4c 89 f7             	mov    %r14,%rdi
    976f:	48 89 ce             	mov    %rcx,%rsi
    9772:	ff 15 10 c4 03 00    	callq  *0x3c410(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
    9778:	48 89 c1             	mov    %rax,%rcx
    977b:	48 85 c9             	test   %rcx,%rcx
    977e:	74 29                	je     97a9 <alloc::vec::Vec<T>::reserve+0xc9>
    9780:	49 89 0f             	mov    %rcx,(%r15)
    9783:	48 b9 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rcx
    978a:	aa aa aa 
    978d:	4c 89 f0             	mov    %r14,%rax
    9790:	48 f7 e1             	mul    %rcx
    9793:	48 c1 ea 04          	shr    $0x4,%rdx
    9797:	49 89 57 08          	mov    %rdx,0x8(%r15)
    979b:	5b                   	pop    %rbx
    979c:	41 5e                	pop    %r14
    979e:	41 5f                	pop    %r15
    97a0:	c3                   	retq   
    97a1:	ff 15 41 c3 03 00    	callq  *0x3c341(%rip)        # 45ae8 <_GLOBAL_OFFSET_TABLE_+0x158>
    97a7:	0f 0b                	ud2    
    97a9:	be 08 00 00 00       	mov    $0x8,%esi
    97ae:	4c 89 f7             	mov    %r14,%rdi
    97b1:	ff 15 71 c3 03 00    	callq  *0x3c371(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
    97b7:	0f 0b                	ud2    
    97b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000097c0 <alloc::vec::Vec<T>::reserve>:
    97c0:	41 56                	push   %r14
    97c2:	53                   	push   %rbx
    97c3:	50                   	push   %rax
    97c4:	48 89 f0             	mov    %rsi,%rax
    97c7:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    97cb:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
    97cf:	48 89 f2             	mov    %rsi,%rdx
    97d2:	48 29 ca             	sub    %rcx,%rdx
    97d5:	48 39 c2             	cmp    %rax,%rdx
    97d8:	0f 83 88 00 00 00    	jae    9866 <alloc::vec::Vec<T>::reserve+0xa6>
    97de:	48 01 c1             	add    %rax,%rcx
    97e1:	0f 82 87 00 00 00    	jb     986e <alloc::vec::Vec<T>::reserve+0xae>
    97e7:	48 89 fb             	mov    %rdi,%rbx
    97ea:	48 8d 04 36          	lea    (%rsi,%rsi,1),%rax
    97ee:	48 39 c8             	cmp    %rcx,%rax
    97f1:	48 0f 47 c8          	cmova  %rax,%rcx
    97f5:	48 83 f9 04          	cmp    $0x4,%rcx
    97f9:	b8 04 00 00 00       	mov    $0x4,%eax
    97fe:	48 0f 47 c1          	cmova  %rcx,%rax
    9802:	ba 40 00 00 00       	mov    $0x40,%edx
    9807:	31 c9                	xor    %ecx,%ecx
    9809:	48 f7 e2             	mul    %rdx
    980c:	49 89 c6             	mov    %rax,%r14
    980f:	0f 90 c0             	seto   %al
    9812:	0f 91 c1             	setno  %cl
    9815:	48 c1 e1 03          	shl    $0x3,%rcx
    9819:	48 85 f6             	test   %rsi,%rsi
    981c:	74 20                	je     983e <alloc::vec::Vec<T>::reserve+0x7e>
    981e:	84 c0                	test   %al,%al
    9820:	75 4c                	jne    986e <alloc::vec::Vec<T>::reserve+0xae>
    9822:	48 8b 3b             	mov    (%rbx),%rdi
    9825:	48 85 ff             	test   %rdi,%rdi
    9828:	74 18                	je     9842 <alloc::vec::Vec<T>::reserve+0x82>
    982a:	48 c1 e6 06          	shl    $0x6,%rsi
    982e:	74 12                	je     9842 <alloc::vec::Vec<T>::reserve+0x82>
    9830:	48 89 ca             	mov    %rcx,%rdx
    9833:	4c 89 f1             	mov    %r14,%rcx
    9836:	ff 15 3c c7 03 00    	callq  *0x3c73c(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
    983c:	eb 15                	jmp    9853 <alloc::vec::Vec<T>::reserve+0x93>
    983e:	84 c0                	test   %al,%al
    9840:	75 2c                	jne    986e <alloc::vec::Vec<T>::reserve+0xae>
    9842:	4d 85 f6             	test   %r14,%r14
    9845:	74 0f                	je     9856 <alloc::vec::Vec<T>::reserve+0x96>
    9847:	4c 89 f7             	mov    %r14,%rdi
    984a:	48 89 ce             	mov    %rcx,%rsi
    984d:	ff 15 35 c3 03 00    	callq  *0x3c335(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
    9853:	48 89 c1             	mov    %rax,%rcx
    9856:	48 85 c9             	test   %rcx,%rcx
    9859:	74 1b                	je     9876 <alloc::vec::Vec<T>::reserve+0xb6>
    985b:	48 89 0b             	mov    %rcx,(%rbx)
    985e:	49 c1 ee 06          	shr    $0x6,%r14
    9862:	4c 89 73 08          	mov    %r14,0x8(%rbx)
    9866:	48 83 c4 08          	add    $0x8,%rsp
    986a:	5b                   	pop    %rbx
    986b:	41 5e                	pop    %r14
    986d:	c3                   	retq   
    986e:	ff 15 74 c2 03 00    	callq  *0x3c274(%rip)        # 45ae8 <_GLOBAL_OFFSET_TABLE_+0x158>
    9874:	0f 0b                	ud2    
    9876:	be 08 00 00 00       	mov    $0x8,%esi
    987b:	4c 89 f7             	mov    %r14,%rdi
    987e:	ff 15 a4 c2 03 00    	callq  *0x3c2a4(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
    9884:	0f 0b                	ud2    
    9886:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    988d:	00 00 00 

0000000000009890 <alloc::sync::Arc<T>::drop_slow>:
    9890:	53                   	push   %rbx
    9891:	48 89 fb             	mov    %rdi,%rbx
    9894:	48 8b 3f             	mov    (%rdi),%rdi
    9897:	48 8b 47 10          	mov    0x10(%rdi),%rax
    989b:	48 85 c0             	test   %rax,%rax
    989e:	74 1e                	je     98be <alloc::sync::Arc<T>::drop_slow+0x2e>
    98a0:	c6 00 00             	movb   $0x0,(%rax)
    98a3:	48 8b 77 18          	mov    0x18(%rdi),%rsi
    98a7:	48 85 f6             	test   %rsi,%rsi
    98aa:	74 0f                	je     98bb <alloc::sync::Arc<T>::drop_slow+0x2b>
    98ac:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    98b0:	ba 01 00 00 00       	mov    $0x1,%edx
    98b5:	ff 15 45 c3 03 00    	callq  *0x3c345(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    98bb:	48 8b 3b             	mov    (%rbx),%rdi
    98be:	48 83 ff ff          	cmp    $0xffffffffffffffff,%rdi
    98c2:	74 19                	je     98dd <alloc::sync::Arc<T>::drop_slow+0x4d>
    98c4:	f0 48 83 6f 08 01    	lock subq $0x1,0x8(%rdi)
    98ca:	75 11                	jne    98dd <alloc::sync::Arc<T>::drop_slow+0x4d>
    98cc:	be 30 00 00 00       	mov    $0x30,%esi
    98d1:	ba 08 00 00 00       	mov    $0x8,%edx
    98d6:	5b                   	pop    %rbx
    98d7:	ff 25 23 c3 03 00    	jmpq   *0x3c323(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    98dd:	5b                   	pop    %rbx
    98de:	c3                   	retq   
    98df:	90                   	nop

00000000000098e0 <alloc::alloc::box_free>:
    98e0:	48 89 f0             	mov    %rsi,%rax
    98e3:	48 8b 76 08          	mov    0x8(%rsi),%rsi
    98e7:	48 85 f6             	test   %rsi,%rsi
    98ea:	74 0a                	je     98f6 <alloc::alloc::box_free+0x16>
    98ec:	48 8b 50 10          	mov    0x10(%rax),%rdx
    98f0:	ff 25 0a c3 03 00    	jmpq   *0x3c30a(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    98f6:	c3                   	retq   
    98f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    98fe:	00 00 

0000000000009900 <alloc::alloc::box_free>:
    9900:	be 18 00 00 00       	mov    $0x18,%esi
    9905:	ba 08 00 00 00       	mov    $0x8,%edx
    990a:	ff 25 f0 c2 03 00    	jmpq   *0x3c2f0(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>

0000000000009910 <gimli::read::line::FileEntryFormat::parse>:
    9910:	55                   	push   %rbp
    9911:	41 57                	push   %r15
    9913:	41 56                	push   %r14
    9915:	41 55                	push   %r13
    9917:	41 54                	push   %r12
    9919:	53                   	push   %rbx
    991a:	48 83 ec 38          	sub    $0x38,%rsp
    991e:	49 89 f5             	mov    %rsi,%r13
    9921:	49 89 fe             	mov    %rdi,%r14
    9924:	48 8b 6e 08          	mov    0x8(%rsi),%rbp
    9928:	48 85 ed             	test   %rbp,%rbp
    992b:	0f 84 52 02 00 00    	je     9b83 <gimli::read::line::FileEntryFormat::parse+0x273>
    9931:	49 8b 45 00          	mov    0x0(%r13),%rax
    9935:	48 8d 48 01          	lea    0x1(%rax),%rcx
    9939:	48 83 c5 ff          	add    $0xffffffffffffffff,%rbp
    993d:	49 89 4d 00          	mov    %rcx,0x0(%r13)
    9941:	49 89 6d 08          	mov    %rbp,0x8(%r13)
    9945:	44 0f b6 20          	movzbl (%rax),%r12d
    9949:	4d 85 e4             	test   %r12,%r12
    994c:	0f 84 4d 02 00 00    	je     9b9f <gimli::read::line::FileEntryFormat::parse+0x28f>
    9952:	4e 8d 3c a5 00 00 00 	lea    0x0(,%r12,4),%r15
    9959:	00 
    995a:	be 02 00 00 00       	mov    $0x2,%esi
    995f:	4c 89 ff             	mov    %r15,%rdi
    9962:	ff 15 20 c2 03 00    	callq  *0x3c220(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
    9968:	48 85 c0             	test   %rax,%rax
    996b:	0f 84 0e 03 00 00    	je     9c7f <gimli::read::line::FileEntryFormat::parse+0x36f>
    9971:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    9976:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
    997b:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
    9982:	00 00 
    9984:	48 85 ed             	test   %rbp,%rbp
    9987:	0f 84 41 02 00 00    	je     9bce <gimli::read::line::FileEntryFormat::parse+0x2be>
    998d:	b9 01 00 00 00       	mov    $0x1,%ecx
    9992:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%rsp)
    9999:	00 
    999a:	45 31 c0             	xor    %r8d,%r8d
    999d:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
    99a2:	4d 8b 55 00          	mov    0x0(%r13),%r10
    99a6:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
    99ad:	31 ff                	xor    %edi,%edi
    99af:	45 31 ff             	xor    %r15d,%r15d
    99b2:	31 c9                	xor    %ecx,%ecx
    99b4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    99bb:	00 00 00 
    99be:	66 90                	xchg   %ax,%ax
    99c0:	4d 8d 1c 3a          	lea    (%r10,%rdi,1),%r11
    99c4:	49 83 c3 01          	add    $0x1,%r11
    99c8:	48 8d 54 1d 00       	lea    0x0(%rbp,%rbx,1),%rdx
    99cd:	4d 89 5d 00          	mov    %r11,0x0(%r13)
    99d1:	49 89 55 08          	mov    %rdx,0x8(%r13)
    99d5:	41 0f b6 14 3a       	movzbl (%r10,%rdi,1),%edx
    99da:	83 f9 3f             	cmp    $0x3f,%ecx
    99dd:	75 09                	jne    99e8 <gimli::read::line::FileEntryFormat::parse+0xd8>
    99df:	80 fa 01             	cmp    $0x1,%dl
    99e2:	0f 87 ec 01 00 00    	ja     9bd4 <gimli::read::line::FileEntryFormat::parse+0x2c4>
    99e8:	0f b6 f2             	movzbl %dl,%esi
    99eb:	89 f2                	mov    %esi,%edx
    99ed:	83 e2 7f             	and    $0x7f,%edx
    99f0:	48 d3 e2             	shl    %cl,%rdx
    99f3:	49 09 d7             	or     %rdx,%r15
    99f6:	40 84 f6             	test   %sil,%sil
    99f9:	79 15                	jns    9a10 <gimli::read::line::FileEntryFormat::parse+0x100>
    99fb:	83 c1 07             	add    $0x7,%ecx
    99fe:	48 83 c7 01          	add    $0x1,%rdi
    9a02:	48 83 c3 ff          	add    $0xffffffffffffffff,%rbx
    9a06:	48 39 fd             	cmp    %rdi,%rbp
    9a09:	75 b5                	jne    99c0 <gimli::read::line::FileEntryFormat::parse+0xb0>
    9a0b:	e9 d1 01 00 00       	jmpq   9be1 <gimli::read::line::FileEntryFormat::parse+0x2d1>
    9a10:	49 81 ff 00 00 01 00 	cmp    $0x10000,%r15
    9a17:	0f 92 44 24 0f       	setb   0xf(%rsp)
    9a1c:	66 41 83 ff 01       	cmp    $0x1,%r15w
    9a21:	0f 94 44 24 0e       	sete   0xe(%rsp)
    9a26:	49 81 ff ff ff 00 00 	cmp    $0xffff,%r15
    9a2d:	bb ff ff 00 00       	mov    $0xffff,%ebx
    9a32:	41 0f 42 df          	cmovb  %r15d,%ebx
    9a36:	48 8d 4d ff          	lea    -0x1(%rbp),%rcx
    9a3a:	48 39 f9             	cmp    %rdi,%rcx
    9a3d:	0f 84 ed 01 00 00    	je     9c30 <gimli::read::line::FileEntryFormat::parse+0x320>
    9a43:	4d 8d 1c 3a          	lea    (%r10,%rdi,1),%r11
    9a47:	49 83 c3 02          	add    $0x2,%r11
    9a4b:	48 89 e9             	mov    %rbp,%rcx
    9a4e:	48 29 f9             	sub    %rdi,%rcx
    9a51:	48 8d 51 fe          	lea    -0x2(%rcx),%rdx
    9a55:	4d 89 5d 00          	mov    %r11,0x0(%r13)
    9a59:	49 89 55 08          	mov    %rdx,0x8(%r13)
    9a5d:	41 0f b6 54 3a 01    	movzbl 0x1(%r10,%rdi,1),%edx
    9a63:	89 d6                	mov    %edx,%esi
    9a65:	83 e6 7f             	and    $0x7f,%esi
    9a68:	89 74 24 10          	mov    %esi,0x10(%rsp)
    9a6c:	84 d2                	test   %dl,%dl
    9a6e:	79 42                	jns    9ab2 <gimli::read::line::FileEntryFormat::parse+0x1a2>
    9a70:	48 8d 55 fe          	lea    -0x2(%rbp),%rdx
    9a74:	48 39 fa             	cmp    %rdi,%rdx
    9a77:	0f 84 b3 01 00 00    	je     9c30 <gimli::read::line::FileEntryFormat::parse+0x320>
    9a7d:	4d 8d 1c 3a          	lea    (%r10,%rdi,1),%r11
    9a81:	49 83 c3 03          	add    $0x3,%r11
    9a85:	48 8d 51 fd          	lea    -0x3(%rcx),%rdx
    9a89:	4d 89 5d 00          	mov    %r11,0x0(%r13)
    9a8d:	49 89 55 08          	mov    %rdx,0x8(%r13)
    9a91:	45 0f b6 4c 3a 02    	movzbl 0x2(%r10,%rdi,1),%r9d
    9a97:	44 89 ce             	mov    %r9d,%esi
    9a9a:	83 e6 7f             	and    $0x7f,%esi
    9a9d:	c1 e6 07             	shl    $0x7,%esi
    9aa0:	8b 54 24 10          	mov    0x10(%rsp),%edx
    9aa4:	0f b7 d2             	movzwl %dx,%edx
    9aa7:	09 f2                	or     %esi,%edx
    9aa9:	89 54 24 10          	mov    %edx,0x10(%rsp)
    9aad:	45 84 c9             	test   %r9b,%r9b
    9ab0:	78 79                	js     9b2b <gimli::read::line::FileEntryFormat::parse+0x21b>
    9ab2:	8b 6c 24 14          	mov    0x14(%rsp),%ebp
    9ab6:	4c 3b 44 24 20       	cmp    0x20(%rsp),%r8
    9abb:	75 19                	jne    9ad6 <gimli::read::line::FileEntryFormat::parse+0x1c6>
    9abd:	be 01 00 00 00       	mov    $0x1,%esi
    9ac2:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
    9ac7:	e8 44 fb ff ff       	callq  9610 <alloc::vec::Vec<T>::reserve>
    9acc:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    9ad1:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
    9ad6:	8a 4c 24 0f          	mov    0xf(%rsp),%cl
    9ada:	22 4c 24 0e          	and    0xe(%rsp),%cl
    9ade:	0f b6 c9             	movzbl %cl,%ecx
    9ae1:	01 cd                	add    %ecx,%ebp
    9ae3:	66 42 89 1c 80       	mov    %bx,(%rax,%r8,4)
    9ae8:	8b 4c 24 10          	mov    0x10(%rsp),%ecx
    9aec:	66 42 89 4c 80 02    	mov    %cx,0x2(%rax,%r8,4)
    9af2:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
    9af7:	49 83 c0 01          	add    $0x1,%r8
    9afb:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
    9b00:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
    9b05:	4c 39 e1             	cmp    %r12,%rcx
    9b08:	0f 84 42 01 00 00    	je     9c50 <gimli::read::line::FileEntryFormat::parse+0x340>
    9b0e:	89 6c 24 14          	mov    %ebp,0x14(%rsp)
    9b12:	49 8b 6d 08          	mov    0x8(%r13),%rbp
    9b16:	48 83 c1 01          	add    $0x1,%rcx
    9b1a:	4d 89 f9             	mov    %r15,%r9
    9b1d:	48 85 ed             	test   %rbp,%rbp
    9b20:	0f 85 77 fe ff ff    	jne    999d <gimli::read::line::FileEntryFormat::parse+0x8d>
    9b26:	e9 a3 00 00 00       	jmpq   9bce <gimli::read::line::FileEntryFormat::parse+0x2be>
    9b2b:	48 83 c5 fd          	add    $0xfffffffffffffffd,%rbp
    9b2f:	48 39 fd             	cmp    %rdi,%rbp
    9b32:	0f 84 f8 00 00 00    	je     9c30 <gimli::read::line::FileEntryFormat::parse+0x320>
    9b38:	49 8d 14 3a          	lea    (%r10,%rdi,1),%rdx
    9b3c:	48 83 c2 04          	add    $0x4,%rdx
    9b40:	48 83 c1 fc          	add    $0xfffffffffffffffc,%rcx
    9b44:	49 89 55 00          	mov    %rdx,0x0(%r13)
    9b48:	49 89 4d 08          	mov    %rcx,0x8(%r13)
    9b4c:	41 0f b6 4c 3a 03    	movzbl 0x3(%r10,%rdi,1),%ecx
    9b52:	66 83 f9 03          	cmp    $0x3,%cx
    9b56:	8b 6c 24 14          	mov    0x14(%rsp),%ebp
    9b5a:	0f 87 15 01 00 00    	ja     9c75 <gimli::read::line::FileEntryFormat::parse+0x365>
    9b60:	0f b7 c9             	movzwl %cx,%ecx
    9b63:	c1 e1 0e             	shl    $0xe,%ecx
    9b66:	8b 54 24 10          	mov    0x10(%rsp),%edx
    9b6a:	0f b7 d2             	movzwl %dx,%edx
    9b6d:	09 ca                	or     %ecx,%edx
    9b6f:	89 54 24 10          	mov    %edx,0x10(%rsp)
    9b73:	4c 3b 44 24 20       	cmp    0x20(%rsp),%r8
    9b78:	0f 85 58 ff ff ff    	jne    9ad6 <gimli::read::line::FileEntryFormat::parse+0x1c6>
    9b7e:	e9 3a ff ff ff       	jmpq   9abd <gimli::read::line::FileEntryFormat::parse+0x1ad>
    9b83:	49 8b 45 00          	mov    0x0(%r13),%rax
    9b87:	49 89 46 10          	mov    %rax,0x10(%r14)
    9b8b:	49 c7 46 08 13 00 00 	movq   $0x13,0x8(%r14)
    9b92:	00 
    9b93:	49 c7 06 01 00 00 00 	movq   $0x1,(%r14)
    9b9a:	e9 82 00 00 00       	jmpq   9c21 <gimli::read::line::FileEntryFormat::parse+0x311>
    9b9f:	48 c7 44 24 18 02 00 	movq   $0x2,0x18(%rsp)
    9ba6:	00 00 
    9ba8:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
    9bad:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
    9bb4:	00 00 
    9bb6:	41 c6 46 08 43       	movb   $0x43,0x8(%r14)
    9bbb:	49 c7 06 01 00 00 00 	movq   $0x1,(%r14)
    9bc2:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    9bc7:	48 85 f6             	test   %rsi,%rsi
    9bca:	75 37                	jne    9c03 <gimli::read::line::FileEntryFormat::parse+0x2f3>
    9bcc:	eb 53                	jmp    9c21 <gimli::read::line::FileEntryFormat::parse+0x311>
    9bce:	4d 8b 55 00          	mov    0x0(%r13),%r10
    9bd2:	eb 10                	jmp    9be4 <gimli::read::line::FileEntryFormat::parse+0x2d4>
    9bd4:	49 81 e1 00 ff ff ff 	and    $0xffffffffffffff00,%r9
    9bdb:	49 83 c9 06          	or     $0x6,%r9
    9bdf:	eb 09                	jmp    9bea <gimli::read::line::FileEntryFormat::parse+0x2da>
    9be1:	49 01 fa             	add    %rdi,%r10
    9be4:	41 b9 13 00 00 00    	mov    $0x13,%r9d
    9bea:	4d 89 56 10          	mov    %r10,0x10(%r14)
    9bee:	4d 89 4e 08          	mov    %r9,0x8(%r14)
    9bf2:	49 c7 06 01 00 00 00 	movq   $0x1,(%r14)
    9bf9:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    9bfe:	48 85 f6             	test   %rsi,%rsi
    9c01:	74 1e                	je     9c21 <gimli::read::line::FileEntryFormat::parse+0x311>
    9c03:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    9c08:	48 85 ff             	test   %rdi,%rdi
    9c0b:	74 14                	je     9c21 <gimli::read::line::FileEntryFormat::parse+0x311>
    9c0d:	48 c1 e6 02          	shl    $0x2,%rsi
    9c11:	48 85 f6             	test   %rsi,%rsi
    9c14:	74 0b                	je     9c21 <gimli::read::line::FileEntryFormat::parse+0x311>
    9c16:	ba 02 00 00 00       	mov    $0x2,%edx
    9c1b:	ff 15 df bf 03 00    	callq  *0x3bfdf(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    9c21:	48 83 c4 38          	add    $0x38,%rsp
    9c25:	5b                   	pop    %rbx
    9c26:	41 5c                	pop    %r12
    9c28:	41 5d                	pop    %r13
    9c2a:	41 5e                	pop    %r14
    9c2c:	41 5f                	pop    %r15
    9c2e:	5d                   	pop    %rbp
    9c2f:	c3                   	retq   
    9c30:	b8 13 00 00 00       	mov    $0x13,%eax
    9c35:	49 89 46 08          	mov    %rax,0x8(%r14)
    9c39:	4d 89 5e 10          	mov    %r11,0x10(%r14)
    9c3d:	49 c7 06 01 00 00 00 	movq   $0x1,(%r14)
    9c44:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    9c49:	48 85 f6             	test   %rsi,%rsi
    9c4c:	75 b5                	jne    9c03 <gimli::read::line::FileEntryFormat::parse+0x2f3>
    9c4e:	eb d1                	jmp    9c21 <gimli::read::line::FileEntryFormat::parse+0x311>
    9c50:	83 fd 01             	cmp    $0x1,%ebp
    9c53:	0f 85 5d ff ff ff    	jne    9bb6 <gimli::read::line::FileEntryFormat::parse+0x2a6>
    9c59:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    9c5e:	49 89 46 18          	mov    %rax,0x18(%r14)
    9c62:	0f 10 44 24 18       	movups 0x18(%rsp),%xmm0
    9c67:	41 0f 11 46 08       	movups %xmm0,0x8(%r14)
    9c6c:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
    9c73:	eb ac                	jmp    9c21 <gimli::read::line::FileEntryFormat::parse+0x311>
    9c75:	b8 06 00 00 00       	mov    $0x6,%eax
    9c7a:	45 31 db             	xor    %r11d,%r11d
    9c7d:	eb b6                	jmp    9c35 <gimli::read::line::FileEntryFormat::parse+0x325>
    9c7f:	be 02 00 00 00       	mov    $0x2,%esi
    9c84:	4c 89 ff             	mov    %r15,%rdi
    9c87:	ff 15 9b be 03 00    	callq  *0x3be9b(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
    9c8d:	0f 0b                	ud2    
    9c8f:	48 89 c3             	mov    %rax,%rbx
    9c92:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
    9c97:	e8 44 ca ff ff       	callq  66e0 <core::ptr::drop_in_place>
    9c9c:	48 89 df             	mov    %rbx,%rdi
    9c9f:	e8 ac b3 ff ff       	callq  5050 <_Unwind_Resume@plt>
    9ca4:	0f 0b                	ud2    
    9ca6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    9cad:	00 00 00 

0000000000009cb0 <gimli::read::line::parse_attribute>:
    9cb0:	41 57                	push   %r15
    9cb2:	41 56                	push   %r14
    9cb4:	53                   	push   %rbx
    9cb5:	48 83 ec 18          	sub    $0x18,%rsp
    9cb9:	c1 ea 08             	shr    $0x8,%edx
    9cbc:	8d 41 fd             	lea    -0x3(%rcx),%eax
    9cbf:	66 83 f8 25          	cmp    $0x25,%ax
    9cc3:	77 3c                	ja     9d01 <gimli::read::line::parse_attribute+0x51>
    9cc5:	0f b7 c0             	movzwl %ax,%eax
    9cc8:	48 8d 0d c1 c6 02 00 	lea    0x2c6c1(%rip),%rcx        # 36390 <_fini+0x130c>
    9ccf:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    9cd3:	48 01 c8             	add    %rcx,%rax
    9cd6:	ff e0                	jmpq   *%rax
    9cd8:	48 8b 46 08          	mov    0x8(%rsi),%rax
    9cdc:	48 83 f8 02          	cmp    $0x2,%rax
    9ce0:	0f 82 b1 05 00 00    	jb     a297 <gimli::read::line::parse_attribute+0x5e7>
    9ce6:	48 8b 0e             	mov    (%rsi),%rcx
    9ce9:	4c 8d 59 02          	lea    0x2(%rcx),%r11
    9ced:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    9cf1:	4c 89 1e             	mov    %r11,(%rsi)
    9cf4:	48 89 46 08          	mov    %rax,0x8(%rsi)
    9cf8:	44 0f b7 31          	movzwl (%rcx),%r14d
    9cfc:	e9 9d 02 00 00       	jmpq   9f9e <gimli::read::line::parse_attribute+0x2ee>
    9d01:	0f b7 c1             	movzwl %cx,%eax
    9d04:	3d 02 1f 00 00       	cmp    $0x1f02,%eax
    9d09:	74 3c                	je     9d47 <gimli::read::line::parse_attribute+0x97>
    9d0b:	3d 21 1f 00 00       	cmp    $0x1f21,%eax
    9d10:	0f 85 9d 00 00 00    	jne    9db3 <gimli::read::line::parse_attribute+0x103>
    9d16:	80 fa 08             	cmp    $0x8,%dl
    9d19:	0f 85 91 05 00 00    	jne    a2b0 <gimli::read::line::parse_attribute+0x600>
    9d1f:	48 8b 46 08          	mov    0x8(%rsi),%rax
    9d23:	48 83 f8 07          	cmp    $0x7,%rax
    9d27:	0f 86 b7 06 00 00    	jbe    a3e4 <gimli::read::line::parse_attribute+0x734>
    9d2d:	48 8b 0e             	mov    (%rsi),%rcx
    9d30:	48 8d 51 08          	lea    0x8(%rcx),%rdx
    9d34:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
    9d38:	48 89 16             	mov    %rdx,(%rsi)
    9d3b:	48 89 46 08          	mov    %rax,0x8(%rsi)
    9d3f:	4c 8b 19             	mov    (%rcx),%r11
    9d42:	e9 8c 05 00 00       	jmpq   a2d3 <gimli::read::line::parse_attribute+0x623>
    9d47:	48 8b 46 08          	mov    0x8(%rsi),%rax
    9d4b:	48 85 c0             	test   %rax,%rax
    9d4e:	0f 84 cb 03 00 00    	je     a11f <gimli::read::line::parse_attribute+0x46f>
    9d54:	48 8b 16             	mov    (%rsi),%rdx
    9d57:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    9d5b:	45 31 c0             	xor    %r8d,%r8d
    9d5e:	45 31 db             	xor    %r11d,%r11d
    9d61:	31 c9                	xor    %ecx,%ecx
    9d63:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    9d6a:	00 00 00 
    9d6d:	0f 1f 00             	nopl   (%rax)
    9d70:	4c 8d 4a 01          	lea    0x1(%rdx),%r9
    9d74:	4c 89 0e             	mov    %r9,(%rsi)
    9d77:	48 89 46 08          	mov    %rax,0x8(%rsi)
    9d7b:	0f b6 12             	movzbl (%rdx),%edx
    9d7e:	83 f9 3f             	cmp    $0x3f,%ecx
    9d81:	75 09                	jne    9d8c <gimli::read::line::parse_attribute+0xdc>
    9d83:	80 fa 01             	cmp    $0x1,%dl
    9d86:	0f 87 a6 05 00 00    	ja     a332 <gimli::read::line::parse_attribute+0x682>
    9d8c:	0f b6 da             	movzbl %dl,%ebx
    9d8f:	89 da                	mov    %ebx,%edx
    9d91:	83 e2 7f             	and    $0x7f,%edx
    9d94:	48 d3 e2             	shl    %cl,%rdx
    9d97:	49 09 d3             	or     %rdx,%r11
    9d9a:	84 db                	test   %bl,%bl
    9d9c:	0f 89 e9 06 00 00    	jns    a48b <gimli::read::line::parse_attribute+0x7db>
    9da2:	83 c1 07             	add    $0x7,%ecx
    9da5:	4c 89 ca             	mov    %r9,%rdx
    9da8:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    9dac:	72 c2                	jb     9d70 <gimli::read::line::parse_attribute+0xc0>
    9dae:	e9 5b 03 00 00       	jmpq   a10e <gimli::read::line::parse_attribute+0x45e>
    9db3:	c6 47 08 0c          	movb   $0xc,0x8(%rdi)
    9db7:	b8 01 00 00 00       	mov    $0x1,%eax
    9dbc:	e9 b0 07 00 00       	jmpq   a571 <gimli::read::line::parse_attribute+0x8c1>
    9dc1:	48 8b 46 08          	mov    0x8(%rsi),%rax
    9dc5:	48 83 f8 04          	cmp    $0x4,%rax
    9dc9:	0f 82 c8 04 00 00    	jb     a297 <gimli::read::line::parse_attribute+0x5e7>
    9dcf:	48 8b 0e             	mov    (%rsi),%rcx
    9dd2:	4c 8d 59 04          	lea    0x4(%rcx),%r11
    9dd6:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    9dda:	4c 89 1e             	mov    %r11,(%rsi)
    9ddd:	48 89 46 08          	mov    %rax,0x8(%rsi)
    9de1:	44 8b 31             	mov    (%rcx),%r14d
    9de4:	e9 b5 01 00 00       	jmpq   9f9e <gimli::read::line::parse_attribute+0x2ee>
    9de9:	48 8b 46 08          	mov    0x8(%rsi),%rax
    9ded:	48 83 f8 02          	cmp    $0x2,%rax
    9df1:	0f 82 a0 04 00 00    	jb     a297 <gimli::read::line::parse_attribute+0x5e7>
    9df7:	48 8b 0e             	mov    (%rsi),%rcx
    9dfa:	48 8d 51 02          	lea    0x2(%rcx),%rdx
    9dfe:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    9e02:	48 89 16             	mov    %rdx,(%rsi)
    9e05:	48 89 46 08          	mov    %rax,0x8(%rsi)
    9e09:	44 0f b7 19          	movzwl (%rcx),%r11d
    9e0d:	44 89 d9             	mov    %r11d,%ecx
    9e10:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    9e16:	45 31 c0             	xor    %r8d,%r8d
    9e19:	41 b9 03 00 00 00    	mov    $0x3,%r9d
    9e1f:	31 f6                	xor    %esi,%esi
    9e21:	e9 2f 07 00 00       	jmpq   a555 <gimli::read::line::parse_attribute+0x8a5>
    9e26:	48 8b 46 08          	mov    0x8(%rsi),%rax
    9e2a:	48 83 f8 04          	cmp    $0x4,%rax
    9e2e:	0f 82 63 04 00 00    	jb     a297 <gimli::read::line::parse_attribute+0x5e7>
    9e34:	48 8b 0e             	mov    (%rsi),%rcx
    9e37:	48 8d 51 04          	lea    0x4(%rcx),%rdx
    9e3b:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    9e3f:	48 89 16             	mov    %rdx,(%rsi)
    9e42:	48 89 46 08          	mov    %rax,0x8(%rsi)
    9e46:	44 8b 19             	mov    (%rcx),%r11d
    9e49:	44 89 d9             	mov    %r11d,%ecx
    9e4c:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    9e52:	44 89 de             	mov    %r11d,%esi
    9e55:	81 e6 00 00 ff ff    	and    $0xffff0000,%esi
    9e5b:	41 b9 04 00 00 00    	mov    $0x4,%r9d
    9e61:	e9 c5 05 00 00       	jmpq   a42b <gimli::read::line::parse_attribute+0x77b>
    9e66:	48 8b 46 08          	mov    0x8(%rsi),%rax
    9e6a:	48 83 f8 08          	cmp    $0x8,%rax
    9e6e:	0f 82 23 04 00 00    	jb     a297 <gimli::read::line::parse_attribute+0x5e7>
    9e74:	48 8b 0e             	mov    (%rsi),%rcx
    9e77:	48 8d 51 08          	lea    0x8(%rcx),%rdx
    9e7b:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
    9e7f:	48 89 16             	mov    %rdx,(%rsi)
    9e82:	48 89 46 08          	mov    %rax,0x8(%rsi)
    9e86:	4c 8b 19             	mov    (%rcx),%r11
    9e89:	44 89 d9             	mov    %r11d,%ecx
    9e8c:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    9e92:	44 89 de             	mov    %r11d,%esi
    9e95:	81 e6 00 00 ff ff    	and    $0xffff0000,%esi
    9e9b:	49 b8 00 00 00 00 ff 	movabs $0xffffffff00000000,%r8
    9ea2:	ff ff ff 
    9ea5:	4d 21 d8             	and    %r11,%r8
    9ea8:	41 b9 05 00 00 00    	mov    $0x5,%r9d
    9eae:	e9 a2 06 00 00       	jmpq   a555 <gimli::read::line::parse_attribute+0x8a5>
    9eb3:	4c 8b 1e             	mov    (%rsi),%r11
    9eb6:	48 8b 46 08          	mov    0x8(%rsi),%rax
    9eba:	48 85 c0             	test   %rax,%rax
    9ebd:	74 25                	je     9ee4 <gimli::read::line::parse_attribute+0x234>
    9ebf:	45 31 f6             	xor    %r14d,%r14d
    9ec2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    9ec9:	00 00 00 
    9ecc:	0f 1f 40 00          	nopl   0x0(%rax)
    9ed0:	43 80 3c 33 00       	cmpb   $0x0,(%r11,%r14,1)
    9ed5:	0f 84 e4 05 00 00    	je     a4bf <gimli::read::line::parse_attribute+0x80f>
    9edb:	49 83 c6 01          	add    $0x1,%r14
    9edf:	4c 39 f0             	cmp    %r14,%rax
    9ee2:	75 ec                	jne    9ed0 <gimli::read::line::parse_attribute+0x220>
    9ee4:	31 c0                	xor    %eax,%eax
    9ee6:	48 83 c8 13          	or     $0x13,%rax
    9eea:	4c 89 5f 10          	mov    %r11,0x10(%rdi)
    9eee:	e9 32 06 00 00       	jmpq   a525 <gimli::read::line::parse_attribute+0x875>
    9ef3:	4c 8b 46 08          	mov    0x8(%rsi),%r8
    9ef7:	4d 85 c0             	test   %r8,%r8
    9efa:	0f 84 b5 05 00 00    	je     a4b5 <gimli::read::line::parse_attribute+0x805>
    9f00:	4c 8b 16             	mov    (%rsi),%r10
    9f03:	49 8d 58 ff          	lea    -0x1(%r8),%rbx
    9f07:	45 31 c9             	xor    %r9d,%r9d
    9f0a:	31 c0                	xor    %eax,%eax
    9f0c:	45 31 f6             	xor    %r14d,%r14d
    9f0f:	31 c9                	xor    %ecx,%ecx
    9f11:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    9f18:	00 00 00 
    9f1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9f20:	4d 8d 1c 02          	lea    (%r10,%rax,1),%r11
    9f24:	49 83 c3 01          	add    $0x1,%r11
    9f28:	4c 89 1e             	mov    %r11,(%rsi)
    9f2b:	48 89 5e 08          	mov    %rbx,0x8(%rsi)
    9f2f:	41 0f b6 14 02       	movzbl (%r10,%rax,1),%edx
    9f34:	83 f9 3f             	cmp    $0x3f,%ecx
    9f37:	75 09                	jne    9f42 <gimli::read::line::parse_attribute+0x292>
    9f39:	80 fa 01             	cmp    $0x1,%dl
    9f3c:	0f 87 da 05 00 00    	ja     a51c <gimli::read::line::parse_attribute+0x86c>
    9f42:	44 0f b6 fa          	movzbl %dl,%r15d
    9f46:	44 89 fa             	mov    %r15d,%edx
    9f49:	83 e2 7f             	and    $0x7f,%edx
    9f4c:	48 d3 e2             	shl    %cl,%rdx
    9f4f:	49 09 d6             	or     %rdx,%r14
    9f52:	45 84 ff             	test   %r15b,%r15b
    9f55:	0f 89 23 06 00 00    	jns    a57e <gimli::read::line::parse_attribute+0x8ce>
    9f5b:	83 c1 07             	add    $0x7,%ecx
    9f5e:	48 83 c0 01          	add    $0x1,%rax
    9f62:	48 83 c3 ff          	add    $0xffffffffffffffff,%rbx
    9f66:	49 39 c0             	cmp    %rax,%r8
    9f69:	75 b5                	jne    9f20 <gimli::read::line::parse_attribute+0x270>
    9f6b:	49 01 c2             	add    %rax,%r10
    9f6e:	b8 13 00 00 00       	mov    $0x13,%eax
    9f73:	4d 89 d1             	mov    %r10,%r9
    9f76:	e9 a6 05 00 00       	jmpq   a521 <gimli::read::line::parse_attribute+0x871>
    9f7b:	48 8b 46 08          	mov    0x8(%rsi),%rax
    9f7f:	48 85 c0             	test   %rax,%rax
    9f82:	0f 84 0f 03 00 00    	je     a297 <gimli::read::line::parse_attribute+0x5e7>
    9f88:	48 8b 0e             	mov    (%rsi),%rcx
    9f8b:	4c 8d 59 01          	lea    0x1(%rcx),%r11
    9f8f:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    9f93:	4c 89 1e             	mov    %r11,(%rsi)
    9f96:	48 89 46 08          	mov    %rax,0x8(%rsi)
    9f9a:	44 0f b6 31          	movzbl (%rcx),%r14d
    9f9e:	4c 29 f0             	sub    %r14,%rax
    9fa1:	0f 83 56 03 00 00    	jae    a2fd <gimli::read::line::parse_attribute+0x64d>
    9fa7:	4c 89 5f 10          	mov    %r11,0x10(%rdi)
    9fab:	e9 ee 02 00 00       	jmpq   a29e <gimli::read::line::parse_attribute+0x5ee>
    9fb0:	48 8b 46 08          	mov    0x8(%rsi),%rax
    9fb4:	48 85 c0             	test   %rax,%rax
    9fb7:	0f 84 da 02 00 00    	je     a297 <gimli::read::line::parse_attribute+0x5e7>
    9fbd:	48 8b 0e             	mov    (%rsi),%rcx
    9fc0:	48 8d 51 01          	lea    0x1(%rcx),%rdx
    9fc4:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    9fc8:	48 89 16             	mov    %rdx,(%rsi)
    9fcb:	48 89 46 08          	mov    %rax,0x8(%rsi)
    9fcf:	44 8a 19             	mov    (%rcx),%r11b
    9fd2:	45 31 c0             	xor    %r8d,%r8d
    9fd5:	41 b9 02 00 00 00    	mov    $0x2,%r9d
    9fdb:	e9 29 02 00 00       	jmpq   a209 <gimli::read::line::parse_attribute+0x559>
    9fe0:	48 8b 46 08          	mov    0x8(%rsi),%rax
    9fe4:	48 85 c0             	test   %rax,%rax
    9fe7:	0f 84 aa 02 00 00    	je     a297 <gimli::read::line::parse_attribute+0x5e7>
    9fed:	48 8b 0e             	mov    (%rsi),%rcx
    9ff0:	48 8d 51 01          	lea    0x1(%rcx),%rdx
    9ff4:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    9ff8:	48 89 16             	mov    %rdx,(%rsi)
    9ffb:	48 89 46 08          	mov    %rax,0x8(%rsi)
    9fff:	80 39 00             	cmpb   $0x0,(%rcx)
    a002:	41 0f 95 c3          	setne  %r11b
    a006:	45 31 c0             	xor    %r8d,%r8d
    a009:	41 b9 09 00 00 00    	mov    $0x9,%r9d
    a00f:	e9 f5 01 00 00       	jmpq   a209 <gimli::read::line::parse_attribute+0x559>
    a014:	48 8b 46 08          	mov    0x8(%rsi),%rax
    a018:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    a01c:	31 c9                	xor    %ecx,%ecx
    a01e:	45 31 db             	xor    %r11d,%r11d
    a021:	e9 24 00 00 00       	jmpq   a04a <gimli::read::line::parse_attribute+0x39a>
    a026:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a02d:	00 00 00 
    a030:	89 da                	mov    %ebx,%edx
    a032:	83 e2 7f             	and    $0x7f,%edx
    a035:	48 d3 e2             	shl    %cl,%rdx
    a038:	49 09 d3             	or     %rdx,%r11
    a03b:	83 c1 07             	add    $0x7,%ecx
    a03e:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    a042:	84 db                	test   %bl,%bl
    a044:	0f 89 fa 03 00 00    	jns    a444 <gimli::read::line::parse_attribute+0x794>
    a04a:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    a04e:	0f 84 df 03 00 00    	je     a433 <gimli::read::line::parse_attribute+0x783>
    a054:	48 8b 16             	mov    (%rsi),%rdx
    a057:	48 8d 5a 01          	lea    0x1(%rdx),%rbx
    a05b:	48 89 1e             	mov    %rbx,(%rsi)
    a05e:	48 89 46 08          	mov    %rax,0x8(%rsi)
    a062:	0f b6 1a             	movzbl (%rdx),%ebx
    a065:	83 f9 3f             	cmp    $0x3f,%ecx
    a068:	75 c6                	jne    a030 <gimli::read::line::parse_attribute+0x380>
    a06a:	84 db                	test   %bl,%bl
    a06c:	74 c2                	je     a030 <gimli::read::line::parse_attribute+0x380>
    a06e:	80 fb 7f             	cmp    $0x7f,%bl
    a071:	74 bd                	je     a030 <gimli::read::line::parse_attribute+0x380>
    a073:	b8 07 00 00 00       	mov    $0x7,%eax
    a078:	31 c9                	xor    %ecx,%ecx
    a07a:	48 89 4f 10          	mov    %rcx,0x10(%rdi)
    a07e:	e9 a2 04 00 00       	jmpq   a525 <gimli::read::line::parse_attribute+0x875>
    a083:	80 fa 08             	cmp    $0x8,%dl
    a086:	0f 85 b4 02 00 00    	jne    a340 <gimli::read::line::parse_attribute+0x690>
    a08c:	48 8b 46 08          	mov    0x8(%rsi),%rax
    a090:	48 83 f8 07          	cmp    $0x7,%rax
    a094:	0f 86 4a 03 00 00    	jbe    a3e4 <gimli::read::line::parse_attribute+0x734>
    a09a:	48 8b 0e             	mov    (%rsi),%rcx
    a09d:	48 8d 51 08          	lea    0x8(%rcx),%rdx
    a0a1:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
    a0a5:	48 89 16             	mov    %rdx,(%rsi)
    a0a8:	48 89 46 08          	mov    %rax,0x8(%rsi)
    a0ac:	4c 8b 19             	mov    (%rcx),%r11
    a0af:	e9 af 02 00 00       	jmpq   a363 <gimli::read::line::parse_attribute+0x6b3>
    a0b4:	48 8b 46 08          	mov    0x8(%rsi),%rax
    a0b8:	48 85 c0             	test   %rax,%rax
    a0bb:	74 62                	je     a11f <gimli::read::line::parse_attribute+0x46f>
    a0bd:	48 8b 16             	mov    (%rsi),%rdx
    a0c0:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    a0c4:	45 31 c0             	xor    %r8d,%r8d
    a0c7:	45 31 db             	xor    %r11d,%r11d
    a0ca:	31 c9                	xor    %ecx,%ecx
    a0cc:	0f 1f 40 00          	nopl   0x0(%rax)
    a0d0:	4c 8d 4a 01          	lea    0x1(%rdx),%r9
    a0d4:	4c 89 0e             	mov    %r9,(%rsi)
    a0d7:	48 89 46 08          	mov    %rax,0x8(%rsi)
    a0db:	0f b6 12             	movzbl (%rdx),%edx
    a0de:	83 f9 3f             	cmp    $0x3f,%ecx
    a0e1:	75 09                	jne    a0ec <gimli::read::line::parse_attribute+0x43c>
    a0e3:	80 fa 01             	cmp    $0x1,%dl
    a0e6:	0f 87 46 02 00 00    	ja     a332 <gimli::read::line::parse_attribute+0x682>
    a0ec:	0f b6 da             	movzbl %dl,%ebx
    a0ef:	89 da                	mov    %ebx,%edx
    a0f1:	83 e2 7f             	and    $0x7f,%edx
    a0f4:	48 d3 e2             	shl    %cl,%rdx
    a0f7:	49 09 d3             	or     %rdx,%r11
    a0fa:	84 db                	test   %bl,%bl
    a0fc:	0f 89 2e 04 00 00    	jns    a530 <gimli::read::line::parse_attribute+0x880>
    a102:	83 c1 07             	add    $0x7,%ecx
    a105:	4c 89 ca             	mov    %r9,%rdx
    a108:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    a10c:	72 c2                	jb     a0d0 <gimli::read::line::parse_attribute+0x420>
    a10e:	b8 13 00 00 00       	mov    $0x13,%eax
    a113:	4d 89 c8             	mov    %r9,%r8
    a116:	4c 89 4f 10          	mov    %r9,0x10(%rdi)
    a11a:	e9 06 04 00 00       	jmpq   a525 <gimli::read::line::parse_attribute+0x875>
    a11f:	4c 8b 06             	mov    (%rsi),%r8
    a122:	b8 13 00 00 00       	mov    $0x13,%eax
    a127:	e9 0b 02 00 00       	jmpq   a337 <gimli::read::line::parse_attribute+0x687>
    a12c:	80 fa 08             	cmp    $0x8,%dl
    a12f:	0f 85 58 02 00 00    	jne    a38d <gimli::read::line::parse_attribute+0x6dd>
    a135:	48 8b 46 08          	mov    0x8(%rsi),%rax
    a139:	48 83 f8 07          	cmp    $0x7,%rax
    a13d:	0f 86 a1 02 00 00    	jbe    a3e4 <gimli::read::line::parse_attribute+0x734>
    a143:	48 8b 0e             	mov    (%rsi),%rcx
    a146:	48 8d 51 08          	lea    0x8(%rcx),%rdx
    a14a:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
    a14e:	48 89 16             	mov    %rdx,(%rsi)
    a151:	48 89 46 08          	mov    %rax,0x8(%rsi)
    a155:	4c 8b 19             	mov    (%rcx),%r11
    a158:	e9 4f 02 00 00       	jmpq   a3ac <gimli::read::line::parse_attribute+0x6fc>
    a15d:	48 8b 46 08          	mov    0x8(%rsi),%rax
    a161:	48 83 f8 10          	cmp    $0x10,%rax
    a165:	0f 82 2c 01 00 00    	jb     a297 <gimli::read::line::parse_attribute+0x5e7>
    a16b:	4c 8b 1e             	mov    (%rsi),%r11
    a16e:	49 8d 4b 10          	lea    0x10(%r11),%rcx
    a172:	48 83 c0 f0          	add    $0xfffffffffffffff0,%rax
    a176:	48 89 0e             	mov    %rcx,(%rsi)
    a179:	48 89 46 08          	mov    %rax,0x8(%rsi)
    a17d:	44 89 d9             	mov    %r11d,%ecx
    a180:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    a186:	44 89 de             	mov    %r11d,%esi
    a189:	81 e6 00 00 ff ff    	and    $0xffff0000,%esi
    a18f:	49 b8 00 00 00 00 ff 	movabs $0xffffffff00000000,%r8
    a196:	ff ff ff 
    a199:	4d 21 d8             	and    %r11,%r8
    a19c:	41 be 10 00 00 00    	mov    $0x10,%r14d
    a1a2:	41 b9 01 00 00 00    	mov    $0x1,%r9d
    a1a8:	e9 a8 03 00 00       	jmpq   a555 <gimli::read::line::parse_attribute+0x8a5>
    a1ad:	80 fa 08             	cmp    $0x8,%dl
    a1b0:	0f 85 20 02 00 00    	jne    a3d6 <gimli::read::line::parse_attribute+0x726>
    a1b6:	48 8b 46 08          	mov    0x8(%rsi),%rax
    a1ba:	48 83 f8 07          	cmp    $0x7,%rax
    a1be:	0f 86 20 02 00 00    	jbe    a3e4 <gimli::read::line::parse_attribute+0x734>
    a1c4:	48 8b 0e             	mov    (%rsi),%rcx
    a1c7:	48 8d 51 08          	lea    0x8(%rcx),%rdx
    a1cb:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
    a1cf:	48 89 16             	mov    %rdx,(%rsi)
    a1d2:	48 89 46 08          	mov    %rax,0x8(%rsi)
    a1d6:	4c 8b 19             	mov    (%rcx),%r11
    a1d9:	e9 17 03 00 00       	jmpq   a4f5 <gimli::read::line::parse_attribute+0x845>
    a1de:	48 8b 46 08          	mov    0x8(%rsi),%rax
    a1e2:	48 85 c0             	test   %rax,%rax
    a1e5:	0f 84 ac 00 00 00    	je     a297 <gimli::read::line::parse_attribute+0x5e7>
    a1eb:	48 8b 0e             	mov    (%rsi),%rcx
    a1ee:	48 8d 51 01          	lea    0x1(%rcx),%rdx
    a1f2:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    a1f6:	48 89 16             	mov    %rdx,(%rsi)
    a1f9:	48 89 46 08          	mov    %rax,0x8(%rsi)
    a1fd:	44 8a 19             	mov    (%rcx),%r11b
    a200:	45 31 c0             	xor    %r8d,%r8d
    a203:	41 b9 1d 00 00 00    	mov    $0x1d,%r9d
    a209:	31 f6                	xor    %esi,%esi
    a20b:	31 c9                	xor    %ecx,%ecx
    a20d:	e9 43 03 00 00       	jmpq   a555 <gimli::read::line::parse_attribute+0x8a5>
    a212:	48 8b 46 08          	mov    0x8(%rsi),%rax
    a216:	48 83 f8 02          	cmp    $0x2,%rax
    a21a:	72 7b                	jb     a297 <gimli::read::line::parse_attribute+0x5e7>
    a21c:	48 8b 0e             	mov    (%rsi),%rcx
    a21f:	48 8d 51 02          	lea    0x2(%rcx),%rdx
    a223:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    a227:	48 89 16             	mov    %rdx,(%rsi)
    a22a:	48 89 46 08          	mov    %rax,0x8(%rsi)
    a22e:	44 0f b7 19          	movzwl (%rcx),%r11d
    a232:	44 89 d9             	mov    %r11d,%ecx
    a235:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    a23b:	45 31 c0             	xor    %r8d,%r8d
    a23e:	41 b9 1d 00 00 00    	mov    $0x1d,%r9d
    a244:	31 f6                	xor    %esi,%esi
    a246:	e9 0a 03 00 00       	jmpq   a555 <gimli::read::line::parse_attribute+0x8a5>
    a24b:	48 8b 46 08          	mov    0x8(%rsi),%rax
    a24f:	48 83 f8 03          	cmp    $0x3,%rax
    a253:	72 42                	jb     a297 <gimli::read::line::parse_attribute+0x5e7>
    a255:	48 8b 0e             	mov    (%rsi),%rcx
    a258:	48 8d 51 03          	lea    0x3(%rcx),%rdx
    a25c:	48 83 c0 fd          	add    $0xfffffffffffffffd,%rax
    a260:	48 89 16             	mov    %rdx,(%rsi)
    a263:	48 89 46 08          	mov    %rax,0x8(%rsi)
    a267:	44 0f b7 19          	movzwl (%rcx),%r11d
    a26b:	0f b6 71 02          	movzbl 0x2(%rcx),%esi
    a26f:	c1 e6 10             	shl    $0x10,%esi
    a272:	44 09 de             	or     %r11d,%esi
    a275:	44 89 d9             	mov    %r11d,%ecx
    a278:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    a27e:	81 e6 00 00 ff 00    	and    $0xff0000,%esi
    a284:	e9 9c 01 00 00       	jmpq   a425 <gimli::read::line::parse_attribute+0x775>
    a289:	48 8b 46 08          	mov    0x8(%rsi),%rax
    a28d:	48 83 f8 04          	cmp    $0x4,%rax
    a291:	0f 83 67 01 00 00    	jae    a3fe <gimli::read::line::parse_attribute+0x74e>
    a297:	48 8b 06             	mov    (%rsi),%rax
    a29a:	48 89 47 10          	mov    %rax,0x10(%rdi)
    a29e:	48 c7 47 08 13 00 00 	movq   $0x13,0x8(%rdi)
    a2a5:	00 
    a2a6:	b8 01 00 00 00       	mov    $0x1,%eax
    a2ab:	e9 c1 02 00 00       	jmpq   a571 <gimli::read::line::parse_attribute+0x8c1>
    a2b0:	48 8b 46 08          	mov    0x8(%rsi),%rax
    a2b4:	48 83 f8 03          	cmp    $0x3,%rax
    a2b8:	0f 86 26 01 00 00    	jbe    a3e4 <gimli::read::line::parse_attribute+0x734>
    a2be:	48 8b 0e             	mov    (%rsi),%rcx
    a2c1:	48 8d 51 04          	lea    0x4(%rcx),%rdx
    a2c5:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    a2c9:	48 89 16             	mov    %rdx,(%rsi)
    a2cc:	48 89 46 08          	mov    %rax,0x8(%rsi)
    a2d0:	44 8b 19             	mov    (%rcx),%r11d
    a2d3:	44 89 d9             	mov    %r11d,%ecx
    a2d6:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    a2dc:	44 89 de             	mov    %r11d,%esi
    a2df:	81 e6 00 00 ff ff    	and    $0xffff0000,%esi
    a2e5:	49 b8 00 00 00 00 ff 	movabs $0xffffffff00000000,%r8
    a2ec:	ff ff ff 
    a2ef:	4d 21 d8             	and    %r11,%r8
    a2f2:	41 b9 1b 00 00 00    	mov    $0x1b,%r9d
    a2f8:	e9 58 02 00 00       	jmpq   a555 <gimli::read::line::parse_attribute+0x8a5>
    a2fd:	4b 8d 0c 33          	lea    (%r11,%r14,1),%rcx
    a301:	48 89 0e             	mov    %rcx,(%rsi)
    a304:	48 89 46 08          	mov    %rax,0x8(%rsi)
    a308:	44 89 d9             	mov    %r11d,%ecx
    a30b:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    a311:	44 89 de             	mov    %r11d,%esi
    a314:	81 e6 00 00 ff ff    	and    $0xffff0000,%esi
    a31a:	49 b8 00 00 00 00 ff 	movabs $0xffffffff00000000,%r8
    a321:	ff ff ff 
    a324:	4d 21 d8             	and    %r11,%r8
    a327:	41 b9 01 00 00 00    	mov    $0x1,%r9d
    a32d:	e9 23 02 00 00       	jmpq   a555 <gimli::read::line::parse_attribute+0x8a5>
    a332:	b8 06 00 00 00       	mov    $0x6,%eax
    a337:	4c 89 47 10          	mov    %r8,0x10(%rdi)
    a33b:	e9 e5 01 00 00       	jmpq   a525 <gimli::read::line::parse_attribute+0x875>
    a340:	48 8b 46 08          	mov    0x8(%rsi),%rax
    a344:	48 83 f8 03          	cmp    $0x3,%rax
    a348:	0f 86 96 00 00 00    	jbe    a3e4 <gimli::read::line::parse_attribute+0x734>
    a34e:	48 8b 0e             	mov    (%rsi),%rcx
    a351:	48 8d 51 04          	lea    0x4(%rcx),%rdx
    a355:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    a359:	48 89 16             	mov    %rdx,(%rsi)
    a35c:	48 89 46 08          	mov    %rax,0x8(%rsi)
    a360:	44 8b 19             	mov    (%rcx),%r11d
    a363:	44 89 d9             	mov    %r11d,%ecx
    a366:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    a36c:	44 89 de             	mov    %r11d,%esi
    a36f:	81 e6 00 00 ff ff    	and    $0xffff0000,%esi
    a375:	49 b8 00 00 00 00 ff 	movabs $0xffffffff00000000,%r8
    a37c:	ff ff ff 
    a37f:	4d 21 d8             	and    %r11,%r8
    a382:	41 b9 1a 00 00 00    	mov    $0x1a,%r9d
    a388:	e9 c8 01 00 00       	jmpq   a555 <gimli::read::line::parse_attribute+0x8a5>
    a38d:	48 8b 46 08          	mov    0x8(%rsi),%rax
    a391:	48 83 f8 03          	cmp    $0x3,%rax
    a395:	76 4d                	jbe    a3e4 <gimli::read::line::parse_attribute+0x734>
    a397:	48 8b 0e             	mov    (%rsi),%rcx
    a39a:	48 8d 51 04          	lea    0x4(%rcx),%rdx
    a39e:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    a3a2:	48 89 16             	mov    %rdx,(%rsi)
    a3a5:	48 89 46 08          	mov    %rax,0x8(%rsi)
    a3a9:	44 8b 19             	mov    (%rcx),%r11d
    a3ac:	44 89 d9             	mov    %r11d,%ecx
    a3af:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    a3b5:	44 89 de             	mov    %r11d,%esi
    a3b8:	81 e6 00 00 ff ff    	and    $0xffff0000,%esi
    a3be:	49 b8 00 00 00 00 ff 	movabs $0xffffffff00000000,%r8
    a3c5:	ff ff ff 
    a3c8:	4d 21 d8             	and    %r11,%r8
    a3cb:	41 b9 0a 00 00 00    	mov    $0xa,%r9d
    a3d1:	e9 7f 01 00 00       	jmpq   a555 <gimli::read::line::parse_attribute+0x8a5>
    a3d6:	48 8b 46 08          	mov    0x8(%rsi),%rax
    a3da:	48 83 f8 03          	cmp    $0x3,%rax
    a3de:	0f 87 fc 00 00 00    	ja     a4e0 <gimli::read::line::parse_attribute+0x830>
    a3e4:	48 8b 06             	mov    (%rsi),%rax
    a3e7:	b9 13 00 00 00       	mov    $0x13,%ecx
    a3ec:	48 89 47 10          	mov    %rax,0x10(%rdi)
    a3f0:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
    a3f4:	b8 01 00 00 00       	mov    $0x1,%eax
    a3f9:	e9 73 01 00 00       	jmpq   a571 <gimli::read::line::parse_attribute+0x8c1>
    a3fe:	48 8b 0e             	mov    (%rsi),%rcx
    a401:	48 8d 51 04          	lea    0x4(%rcx),%rdx
    a405:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    a409:	48 89 16             	mov    %rdx,(%rsi)
    a40c:	48 89 46 08          	mov    %rax,0x8(%rsi)
    a410:	44 8b 19             	mov    (%rcx),%r11d
    a413:	44 89 d9             	mov    %r11d,%ecx
    a416:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    a41c:	44 89 de             	mov    %r11d,%esi
    a41f:	81 e6 00 00 ff ff    	and    $0xffff0000,%esi
    a425:	41 b9 1d 00 00 00    	mov    $0x1d,%r9d
    a42b:	45 31 c0             	xor    %r8d,%r8d
    a42e:	e9 22 01 00 00       	jmpq   a555 <gimli::read::line::parse_attribute+0x8a5>
    a433:	48 8b 0e             	mov    (%rsi),%rcx
    a436:	b8 13 00 00 00       	mov    $0x13,%eax
    a43b:	48 89 4f 10          	mov    %rcx,0x10(%rdi)
    a43f:	e9 e1 00 00 00       	jmpq   a525 <gimli::read::line::parse_attribute+0x875>
    a444:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    a44b:	48 d3 e0             	shl    %cl,%rax
    a44e:	31 d2                	xor    %edx,%edx
    a450:	f6 c3 40             	test   $0x40,%bl
    a453:	48 0f 44 c2          	cmove  %rdx,%rax
    a457:	83 f9 40             	cmp    $0x40,%ecx
    a45a:	48 0f 4d c2          	cmovge %rdx,%rax
    a45e:	49 09 c3             	or     %rax,%r11
    a461:	44 89 d9             	mov    %r11d,%ecx
    a464:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    a46a:	44 89 de             	mov    %r11d,%esi
    a46d:	81 e6 00 00 ff ff    	and    $0xffff0000,%esi
    a473:	49 b8 00 00 00 00 ff 	movabs $0xffffffff00000000,%r8
    a47a:	ff ff ff 
    a47d:	4d 21 d8             	and    %r11,%r8
    a480:	41 b9 06 00 00 00    	mov    $0x6,%r9d
    a486:	e9 ca 00 00 00       	jmpq   a555 <gimli::read::line::parse_attribute+0x8a5>
    a48b:	44 89 d9             	mov    %r11d,%ecx
    a48e:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    a494:	44 89 de             	mov    %r11d,%esi
    a497:	81 e6 00 00 ff ff    	and    $0xffff0000,%esi
    a49d:	49 b8 00 00 00 00 ff 	movabs $0xffffffff00000000,%r8
    a4a4:	ff ff ff 
    a4a7:	4d 21 d8             	and    %r11,%r8
    a4aa:	41 b9 1d 00 00 00    	mov    $0x1d,%r9d
    a4b0:	e9 a0 00 00 00       	jmpq   a555 <gimli::read::line::parse_attribute+0x8a5>
    a4b5:	4c 8b 0e             	mov    (%rsi),%r9
    a4b8:	b8 13 00 00 00       	mov    $0x13,%eax
    a4bd:	eb 62                	jmp    a521 <gimli::read::line::parse_attribute+0x871>
    a4bf:	4b 8d 0c 33          	lea    (%r11,%r14,1),%rcx
    a4c3:	48 89 0e             	mov    %rcx,(%rsi)
    a4c6:	48 89 c2             	mov    %rax,%rdx
    a4c9:	4c 29 f2             	sub    %r14,%rdx
    a4cc:	48 89 56 08          	mov    %rdx,0x8(%rsi)
    a4d0:	0f 85 ca 00 00 00    	jne    a5a0 <gimli::read::line::parse_attribute+0x8f0>
    a4d6:	31 c0                	xor    %eax,%eax
    a4d8:	49 89 cb             	mov    %rcx,%r11
    a4db:	e9 06 fa ff ff       	jmpq   9ee6 <gimli::read::line::parse_attribute+0x236>
    a4e0:	48 8b 0e             	mov    (%rsi),%rcx
    a4e3:	48 8d 51 04          	lea    0x4(%rcx),%rdx
    a4e7:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    a4eb:	48 89 16             	mov    %rdx,(%rsi)
    a4ee:	48 89 46 08          	mov    %rax,0x8(%rsi)
    a4f2:	44 8b 19             	mov    (%rcx),%r11d
    a4f5:	44 89 d9             	mov    %r11d,%ecx
    a4f8:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    a4fe:	44 89 de             	mov    %r11d,%esi
    a501:	81 e6 00 00 ff ff    	and    $0xffff0000,%esi
    a507:	49 b8 00 00 00 00 ff 	movabs $0xffffffff00000000,%r8
    a50e:	ff ff ff 
    a511:	4d 21 d8             	and    %r11,%r8
    a514:	41 b9 1e 00 00 00    	mov    $0x1e,%r9d
    a51a:	eb 39                	jmp    a555 <gimli::read::line::parse_attribute+0x8a5>
    a51c:	b8 06 00 00 00       	mov    $0x6,%eax
    a521:	4c 89 4f 10          	mov    %r9,0x10(%rdi)
    a525:	48 89 47 08          	mov    %rax,0x8(%rdi)
    a529:	b8 01 00 00 00       	mov    $0x1,%eax
    a52e:	eb 41                	jmp    a571 <gimli::read::line::parse_attribute+0x8c1>
    a530:	44 89 d9             	mov    %r11d,%ecx
    a533:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    a539:	44 89 de             	mov    %r11d,%esi
    a53c:	81 e6 00 00 ff ff    	and    $0xffff0000,%esi
    a542:	49 b8 00 00 00 00 ff 	movabs $0xffffffff00000000,%r8
    a549:	ff ff ff 
    a54c:	4d 21 d8             	and    %r11,%r8
    a54f:	41 b9 07 00 00 00    	mov    $0x7,%r9d
    a555:	4c 89 4f 08          	mov    %r9,0x8(%rdi)
    a559:	41 0f b6 c3          	movzbl %r11b,%eax
    a55d:	09 c1                	or     %eax,%ecx
    a55f:	0f b7 c1             	movzwl %cx,%eax
    a562:	09 f0                	or     %esi,%eax
    a564:	4c 09 c0             	or     %r8,%rax
    a567:	48 89 47 10          	mov    %rax,0x10(%rdi)
    a56b:	4c 89 77 18          	mov    %r14,0x18(%rdi)
    a56f:	31 c0                	xor    %eax,%eax
    a571:	48 89 07             	mov    %rax,(%rdi)
    a574:	48 83 c4 18          	add    $0x18,%rsp
    a578:	5b                   	pop    %rbx
    a579:	41 5e                	pop    %r14
    a57b:	41 5f                	pop    %r15
    a57d:	c3                   	retq   
    a57e:	4c 39 f3             	cmp    %r14,%rbx
    a581:	0f 82 20 fa ff ff    	jb     9fa7 <gimli::read::line::parse_attribute+0x2f7>
    a587:	4a 8d 0c 30          	lea    (%rax,%r14,1),%rcx
    a58b:	4c 01 d1             	add    %r10,%rcx
    a58e:	48 83 c1 01          	add    $0x1,%rcx
    a592:	4d 29 f0             	sub    %r14,%r8
    a595:	48 f7 d0             	not    %rax
    a598:	4c 01 c0             	add    %r8,%rax
    a59b:	e9 61 fd ff ff       	jmpq   a301 <gimli::read::line::parse_attribute+0x651>
    a5a0:	4b 8d 0c 33          	lea    (%r11,%r14,1),%rcx
    a5a4:	48 83 c1 01          	add    $0x1,%rcx
    a5a8:	4c 89 f2             	mov    %r14,%rdx
    a5ab:	48 f7 d2             	not    %rdx
    a5ae:	48 01 c2             	add    %rax,%rdx
    a5b1:	48 89 0e             	mov    %rcx,(%rsi)
    a5b4:	48 89 56 08          	mov    %rdx,0x8(%rsi)
    a5b8:	44 89 d9             	mov    %r11d,%ecx
    a5bb:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    a5c1:	44 89 de             	mov    %r11d,%esi
    a5c4:	81 e6 00 00 ff ff    	and    $0xffff0000,%esi
    a5ca:	49 b8 00 00 00 00 ff 	movabs $0xffffffff00000000,%r8
    a5d1:	ff ff ff 
    a5d4:	4d 21 d8             	and    %r11,%r8
    a5d7:	41 b9 1f 00 00 00    	mov    $0x1f,%r9d
    a5dd:	e9 73 ff ff ff       	jmpq   a555 <gimli::read::line::parse_attribute+0x8a5>
    a5e2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a5e9:	00 00 00 
    a5ec:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000a5f0 <gimli::read::line::FileEntry<R,Offset>::parse>:
    a5f0:	55                   	push   %rbp
    a5f1:	41 57                	push   %r15
    a5f3:	41 56                	push   %r14
    a5f5:	41 55                	push   %r13
    a5f7:	41 54                	push   %r12
    a5f9:	53                   	push   %rbx
    a5fa:	50                   	push   %rax
    a5fb:	4c 8b 4e 08          	mov    0x8(%rsi),%r9
    a5ff:	4d 85 c9             	test   %r9,%r9
    a602:	74 6c                	je     a670 <gimli::read::line::FileEntry<R,Offset>::parse+0x80>
    a604:	49 89 cd             	mov    %rcx,%r13
    a607:	4c 8b 16             	mov    (%rsi),%r10
    a60a:	4d 89 cf             	mov    %r9,%r15
    a60d:	49 f7 df             	neg    %r15
    a610:	49 8d 59 ff          	lea    -0x1(%r9),%rbx
    a614:	45 31 f6             	xor    %r14d,%r14d
    a617:	45 31 e4             	xor    %r12d,%r12d
    a61a:	45 31 db             	xor    %r11d,%r11d
    a61d:	31 c9                	xor    %ecx,%ecx
    a61f:	90                   	nop
    a620:	4f 8d 04 22          	lea    (%r10,%r12,1),%r8
    a624:	49 83 c0 01          	add    $0x1,%r8
    a628:	4c 89 06             	mov    %r8,(%rsi)
    a62b:	48 89 5e 08          	mov    %rbx,0x8(%rsi)
    a62f:	43 0f b6 04 22       	movzbl (%r10,%r12,1),%eax
    a634:	83 f9 3f             	cmp    $0x3f,%ecx
    a637:	75 04                	jne    a63d <gimli::read::line::FileEntry<R,Offset>::parse+0x4d>
    a639:	3c 01                	cmp    $0x1,%al
    a63b:	77 3d                	ja     a67a <gimli::read::line::FileEntry<R,Offset>::parse+0x8a>
    a63d:	0f b6 e8             	movzbl %al,%ebp
    a640:	89 e8                	mov    %ebp,%eax
    a642:	83 e0 7f             	and    $0x7f,%eax
    a645:	48 d3 e0             	shl    %cl,%rax
    a648:	49 09 c3             	or     %rax,%r11
    a64b:	40 84 ed             	test   %bpl,%bpl
    a64e:	79 4e                	jns    a69e <gimli::read::line::FileEntry<R,Offset>::parse+0xae>
    a650:	83 c1 07             	add    $0x7,%ecx
    a653:	49 83 c4 01          	add    $0x1,%r12
    a657:	48 83 c3 ff          	add    $0xffffffffffffffff,%rbx
    a65b:	4c 89 f8             	mov    %r15,%rax
    a65e:	4c 01 e0             	add    %r12,%rax
    a661:	75 bd                	jne    a620 <gimli::read::line::FileEntry<R,Offset>::parse+0x30>
    a663:	4d 01 e2             	add    %r12,%r10
    a666:	b8 13 00 00 00       	mov    $0x13,%eax
    a66b:	4d 89 d6             	mov    %r10,%r14
    a66e:	eb 0f                	jmp    a67f <gimli::read::line::FileEntry<R,Offset>::parse+0x8f>
    a670:	4c 8b 36             	mov    (%rsi),%r14
    a673:	b8 13 00 00 00       	mov    $0x13,%eax
    a678:	eb 05                	jmp    a67f <gimli::read::line::FileEntry<R,Offset>::parse+0x8f>
    a67a:	b8 06 00 00 00       	mov    $0x6,%eax
    a67f:	4c 89 77 10          	mov    %r14,0x10(%rdi)
    a683:	48 89 47 08          	mov    %rax,0x8(%rdi)
    a687:	b8 01 00 00 00       	mov    $0x1,%eax
    a68c:	48 89 07             	mov    %rax,(%rdi)
    a68f:	48 83 c4 08          	add    $0x8,%rsp
    a693:	5b                   	pop    %rbx
    a694:	41 5c                	pop    %r12
    a696:	41 5d                	pop    %r13
    a698:	41 5e                	pop    %r14
    a69a:	41 5f                	pop    %r15
    a69c:	5d                   	pop    %rbp
    a69d:	c3                   	retq   
    a69e:	4c 89 e0             	mov    %r12,%rax
    a6a1:	4c 29 c8             	sub    %r9,%rax
    a6a4:	b9 13 00 00 00       	mov    $0x13,%ecx
    a6a9:	48 ff c0             	inc    %rax
    a6ac:	74 7a                	je     a728 <gimli::read::line::FileEntry<R,Offset>::parse+0x138>
    a6ae:	4c 89 2c 24          	mov    %r13,(%rsp)
    a6b2:	49 c7 c5 fe ff ff ff 	mov    $0xfffffffffffffffe,%r13
    a6b9:	4d 29 e5             	sub    %r12,%r13
    a6bc:	49 8d 59 ff          	lea    -0x1(%r9),%rbx
    a6c0:	45 31 c0             	xor    %r8d,%r8d
    a6c3:	45 31 f6             	xor    %r14d,%r14d
    a6c6:	31 c9                	xor    %ecx,%ecx
    a6c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a6cf:	00 
    a6d0:	4f 8d 3c 22          	lea    (%r10,%r12,1),%r15
    a6d4:	49 83 c7 02          	add    $0x2,%r15
    a6d8:	4b 8d 04 29          	lea    (%r9,%r13,1),%rax
    a6dc:	4c 89 3e             	mov    %r15,(%rsi)
    a6df:	48 89 46 08          	mov    %rax,0x8(%rsi)
    a6e3:	43 0f b6 44 22 01    	movzbl 0x1(%r10,%r12,1),%eax
    a6e9:	83 f9 3f             	cmp    $0x3f,%ecx
    a6ec:	75 04                	jne    a6f2 <gimli::read::line::FileEntry<R,Offset>::parse+0x102>
    a6ee:	3c 01                	cmp    $0x1,%al
    a6f0:	77 31                	ja     a723 <gimli::read::line::FileEntry<R,Offset>::parse+0x133>
    a6f2:	0f b6 c0             	movzbl %al,%eax
    a6f5:	89 c5                	mov    %eax,%ebp
    a6f7:	83 e5 7f             	and    $0x7f,%ebp
    a6fa:	48 d3 e5             	shl    %cl,%rbp
    a6fd:	49 09 ee             	or     %rbp,%r14
    a700:	84 c0                	test   %al,%al
    a702:	79 31                	jns    a735 <gimli::read::line::FileEntry<R,Offset>::parse+0x145>
    a704:	83 c1 07             	add    $0x7,%ecx
    a707:	49 83 c4 01          	add    $0x1,%r12
    a70b:	49 83 c5 ff          	add    $0xffffffffffffffff,%r13
    a70f:	4c 39 e3             	cmp    %r12,%rbx
    a712:	75 bc                	jne    a6d0 <gimli::read::line::FileEntry<R,Offset>::parse+0xe0>
    a714:	4f 8d 04 22          	lea    (%r10,%r12,1),%r8
    a718:	49 83 c0 01          	add    $0x1,%r8
    a71c:	b9 13 00 00 00       	mov    $0x13,%ecx
    a721:	eb 05                	jmp    a728 <gimli::read::line::FileEntry<R,Offset>::parse+0x138>
    a723:	b9 06 00 00 00       	mov    $0x6,%ecx
    a728:	4c 89 47 10          	mov    %r8,0x10(%rdi)
    a72c:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
    a730:	e9 52 ff ff ff       	jmpq   a687 <gimli::read::line::FileEntry<R,Offset>::parse+0x97>
    a735:	49 8d 41 fe          	lea    -0x2(%r9),%rax
    a739:	41 b8 13 00 00 00    	mov    $0x13,%r8d
    a73f:	4c 39 e0             	cmp    %r12,%rax
    a742:	74 51                	je     a795 <gimli::read::line::FileEntry<R,Offset>::parse+0x1a5>
    a744:	4d 29 e1             	sub    %r12,%r9
    a747:	49 83 c1 fd          	add    $0xfffffffffffffffd,%r9
    a74b:	31 c0                	xor    %eax,%eax
    a74d:	31 c9                	xor    %ecx,%ecx
    a74f:	4c 8b 14 24          	mov    (%rsp),%r10
    a753:	4c 89 fb             	mov    %r15,%rbx
    a756:	49 83 c7 01          	add    $0x1,%r15
    a75a:	4c 89 3e             	mov    %r15,(%rsi)
    a75d:	4c 89 4e 08          	mov    %r9,0x8(%rsi)
    a761:	0f b6 1b             	movzbl (%rbx),%ebx
    a764:	83 f9 3f             	cmp    $0x3f,%ecx
    a767:	75 05                	jne    a76e <gimli::read::line::FileEntry<R,Offset>::parse+0x17e>
    a769:	80 fb 01             	cmp    $0x1,%bl
    a76c:	77 1e                	ja     a78c <gimli::read::line::FileEntry<R,Offset>::parse+0x19c>
    a76e:	0f b6 eb             	movzbl %bl,%ebp
    a771:	89 eb                	mov    %ebp,%ebx
    a773:	83 e3 7f             	and    $0x7f,%ebx
    a776:	48 d3 e3             	shl    %cl,%rbx
    a779:	48 09 d8             	or     %rbx,%rax
    a77c:	40 84 ed             	test   %bpl,%bpl
    a77f:	79 21                	jns    a7a2 <gimli::read::line::FileEntry<R,Offset>::parse+0x1b2>
    a781:	83 c1 07             	add    $0x7,%ecx
    a784:	49 83 c1 ff          	add    $0xffffffffffffffff,%r9
    a788:	72 c9                	jb     a753 <gimli::read::line::FileEntry<R,Offset>::parse+0x163>
    a78a:	eb 09                	jmp    a795 <gimli::read::line::FileEntry<R,Offset>::parse+0x1a5>
    a78c:	41 b8 06 00 00 00    	mov    $0x6,%r8d
    a792:	45 31 ff             	xor    %r15d,%r15d
    a795:	4c 89 7f 10          	mov    %r15,0x10(%rdi)
    a799:	4c 89 47 08          	mov    %r8,0x8(%rdi)
    a79d:	e9 e5 fe ff ff       	jmpq   a687 <gimli::read::line::FileEntry<R,Offset>::parse+0x97>
    a7a2:	48 c7 47 08 1f 00 00 	movq   $0x1f,0x8(%rdi)
    a7a9:	00 
    a7aa:	48 89 57 10          	mov    %rdx,0x10(%rdi)
    a7ae:	4c 89 57 18          	mov    %r10,0x18(%rdi)
    a7b2:	4c 89 5f 20          	mov    %r11,0x20(%rdi)
    a7b6:	4c 89 77 28          	mov    %r14,0x28(%rdi)
    a7ba:	48 89 47 30          	mov    %rax,0x30(%rdi)
    a7be:	0f 57 c0             	xorps  %xmm0,%xmm0
    a7c1:	0f 11 47 38          	movups %xmm0,0x38(%rdi)
    a7c5:	31 c0                	xor    %eax,%eax
    a7c7:	e9 c0 fe ff ff       	jmpq   a68c <gimli::read::line::FileEntry<R,Offset>::parse+0x9c>
    a7cc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000a7d0 <gimli::read::unit::parse_attribute>:
    a7d0:	55                   	push   %rbp
    a7d1:	41 57                	push   %r15
    a7d3:	41 56                	push   %r14
    a7d5:	41 55                	push   %r13
    a7d7:	41 54                	push   %r12
    a7d9:	53                   	push   %rbx
    a7da:	48 83 ec 28          	sub    $0x28,%rsp
    a7de:	44 89 44 24 0c       	mov    %r8d,0xc(%rsp)
    a7e3:	49 89 ca             	mov    %rcx,%r10
    a7e6:	49 89 f4             	mov    %rsi,%r12
    a7e9:	49 89 ff             	mov    %rdi,%r15
    a7ec:	41 89 d0             	mov    %edx,%r8d
    a7ef:	41 c1 e8 08          	shr    $0x8,%r8d
    a7f3:	89 d6                	mov    %edx,%esi
    a7f5:	c1 ee 10             	shr    $0x10,%esi
    a7f8:	4d 8d 6c 24 08       	lea    0x8(%r12),%r13
    a7fd:	44 89 cf             	mov    %r9d,%edi
    a800:	66 83 ff 16          	cmp    $0x16,%di
    a804:	0f 85 95 00 00 00    	jne    a89f <gimli::read::unit::parse_attribute+0xcf>
    a80a:	49 8b 4d 00          	mov    0x0(%r13),%rcx
    a80e:	48 85 c9             	test   %rcx,%rcx
    a811:	0f 84 d4 00 00 00    	je     a8eb <gimli::read::unit::parse_attribute+0x11b>
    a817:	49 8b 2c 24          	mov    (%r12),%rbp
    a81b:	4c 8d 5d 01          	lea    0x1(%rbp),%r11
    a81f:	48 8d 59 ff          	lea    -0x1(%rcx),%rbx
    a823:	4d 89 1c 24          	mov    %r11,(%r12)
    a827:	49 89 5c 24 08       	mov    %rbx,0x8(%r12)
    a82c:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
    a830:	89 c7                	mov    %eax,%edi
    a832:	83 e7 7f             	and    $0x7f,%edi
    a835:	84 c0                	test   %al,%al
    a837:	79 c7                	jns    a800 <gimli::read::unit::parse_attribute+0x30>
    a839:	48 85 db             	test   %rbx,%rbx
    a83c:	0f 84 ad 00 00 00    	je     a8ef <gimli::read::unit::parse_attribute+0x11f>
    a842:	4c 8d 5d 02          	lea    0x2(%rbp),%r11
    a846:	48 8d 59 fe          	lea    -0x2(%rcx),%rbx
    a84a:	4d 89 1c 24          	mov    %r11,(%r12)
    a84e:	49 89 5c 24 08       	mov    %rbx,0x8(%r12)
    a853:	44 0f b6 75 01       	movzbl 0x1(%rbp),%r14d
    a858:	44 89 f0             	mov    %r14d,%eax
    a85b:	83 e0 7f             	and    $0x7f,%eax
    a85e:	c1 e0 07             	shl    $0x7,%eax
    a861:	0f b7 ff             	movzwl %di,%edi
    a864:	09 c7                	or     %eax,%edi
    a866:	45 84 f6             	test   %r14b,%r14b
    a869:	79 95                	jns    a800 <gimli::read::unit::parse_attribute+0x30>
    a86b:	48 85 db             	test   %rbx,%rbx
    a86e:	74 7f                	je     a8ef <gimli::read::unit::parse_attribute+0x11f>
    a870:	48 8d 45 03          	lea    0x3(%rbp),%rax
    a874:	48 83 c1 fd          	add    $0xfffffffffffffffd,%rcx
    a878:	49 89 04 24          	mov    %rax,(%r12)
    a87c:	49 89 4c 24 08       	mov    %rcx,0x8(%r12)
    a881:	0f b6 45 02          	movzbl 0x2(%rbp),%eax
    a885:	66 83 f8 03          	cmp    $0x3,%ax
    a889:	0f 87 84 00 00 00    	ja     a913 <gimli::read::unit::parse_attribute+0x143>
    a88f:	0f b7 c0             	movzwl %ax,%eax
    a892:	c1 e0 0e             	shl    $0xe,%eax
    a895:	0f b7 ff             	movzwl %di,%edi
    a898:	09 c7                	or     %eax,%edi
    a89a:	e9 61 ff ff ff       	jmpq   a800 <gimli::read::unit::parse_attribute+0x30>
    a89f:	8d 47 ff             	lea    -0x1(%rdi),%eax
    a8a2:	66 83 f8 2b          	cmp    $0x2b,%ax
    a8a6:	77 75                	ja     a91d <gimli::read::unit::parse_attribute+0x14d>
    a8a8:	0f b7 c0             	movzwl %ax,%eax
    a8ab:	48 8d 0d 76 bb 02 00 	lea    0x2bb76(%rip),%rcx        # 36428 <_fini+0x13a4>
    a8b2:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    a8b6:	48 01 c8             	add    %rcx,%rax
    a8b9:	ff e0                	jmpq   *%rax
    a8bb:	0f b6 d2             	movzbl %dl,%edx
    a8be:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    a8c3:	4c 89 e6             	mov    %r12,%rsi
    a8c6:	e8 95 1a 00 00       	callq  c360 <gimli::read::reader::Reader::read_address>
    a8cb:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
    a8d0:	48 83 7c 24 10 01    	cmpq   $0x1,0x10(%rsp)
    a8d6:	0f 85 dd 0c 00 00    	jne    b5b9 <gimli::read::unit::parse_attribute+0xde9>
    a8dc:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    a8e1:	49 89 47 10          	mov    %rax,0x10(%r15)
    a8e5:	4d 89 57 08          	mov    %r10,0x8(%r15)
    a8e9:	eb 11                	jmp    a8fc <gimli::read::unit::parse_attribute+0x12c>
    a8eb:	4d 8b 1c 24          	mov    (%r12),%r11
    a8ef:	b9 13 00 00 00       	mov    $0x13,%ecx
    a8f4:	49 89 4f 08          	mov    %rcx,0x8(%r15)
    a8f8:	4d 89 5f 10          	mov    %r11,0x10(%r15)
    a8fc:	b8 01 00 00 00       	mov    $0x1,%eax
    a901:	49 89 07             	mov    %rax,(%r15)
    a904:	48 83 c4 28          	add    $0x28,%rsp
    a908:	5b                   	pop    %rbx
    a909:	41 5c                	pop    %r12
    a90b:	41 5d                	pop    %r13
    a90d:	41 5e                	pop    %r14
    a90f:	41 5f                	pop    %r15
    a911:	5d                   	pop    %rbp
    a912:	c3                   	retq   
    a913:	b9 06 00 00 00       	mov    $0x6,%ecx
    a918:	45 31 db             	xor    %r11d,%r11d
    a91b:	eb d7                	jmp    a8f4 <gimli::read::unit::parse_attribute+0x124>
    a91d:	81 c7 ff e0 ff ff    	add    $0xffffe0ff,%edi
    a923:	66 83 ff 20          	cmp    $0x20,%di
    a927:	0f 87 c4 0b 00 00    	ja     b4f1 <gimli::read::unit::parse_attribute+0xd21>
    a92d:	0f b7 c7             	movzwl %di,%eax
    a930:	48 8d 0d a1 bb 02 00 	lea    0x2bba1(%rip),%rcx        # 364d8 <_fini+0x1454>
    a937:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    a93b:	48 01 c8             	add    %rcx,%rax
    a93e:	ff e0                	jmpq   *%rax
    a940:	49 8b 45 00          	mov    0x0(%r13),%rax
    a944:	48 85 c0             	test   %rax,%rax
    a947:	0f 84 d7 09 00 00    	je     b324 <gimli::read::unit::parse_attribute+0xb54>
    a94d:	49 8b 3c 24          	mov    (%r12),%rdi
    a951:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    a955:	31 d2                	xor    %edx,%edx
    a957:	45 31 d2             	xor    %r10d,%r10d
    a95a:	31 c9                	xor    %ecx,%ecx
    a95c:	48 8d 77 01          	lea    0x1(%rdi),%rsi
    a960:	49 89 34 24          	mov    %rsi,(%r12)
    a964:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    a969:	0f b6 1f             	movzbl (%rdi),%ebx
    a96c:	83 f9 3f             	cmp    $0x3f,%ecx
    a96f:	75 09                	jne    a97a <gimli::read::unit::parse_attribute+0x1aa>
    a971:	80 fb 01             	cmp    $0x1,%bl
    a974:	0f 87 bc 09 00 00    	ja     b336 <gimli::read::unit::parse_attribute+0xb66>
    a97a:	0f b6 eb             	movzbl %bl,%ebp
    a97d:	89 ef                	mov    %ebp,%edi
    a97f:	83 e7 7f             	and    $0x7f,%edi
    a982:	48 d3 e7             	shl    %cl,%rdi
    a985:	49 09 fa             	or     %rdi,%r10
    a988:	40 84 ed             	test   %bpl,%bpl
    a98b:	0f 89 62 0d 00 00    	jns    b6f3 <gimli::read::unit::parse_attribute+0xf23>
    a991:	83 c1 07             	add    $0x7,%ecx
    a994:	48 89 f7             	mov    %rsi,%rdi
    a997:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    a99b:	72 bf                	jb     a95c <gimli::read::unit::parse_attribute+0x18c>
    a99d:	e9 71 09 00 00       	jmpq   b313 <gimli::read::unit::parse_attribute+0xb43>
    a9a2:	49 8b 45 00          	mov    0x0(%r13),%rax
    a9a6:	48 85 c0             	test   %rax,%rax
    a9a9:	0f 84 75 09 00 00    	je     b324 <gimli::read::unit::parse_attribute+0xb54>
    a9af:	49 8b 3c 24          	mov    (%r12),%rdi
    a9b3:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    a9b7:	31 d2                	xor    %edx,%edx
    a9b9:	45 31 d2             	xor    %r10d,%r10d
    a9bc:	31 c9                	xor    %ecx,%ecx
    a9be:	48 8d 77 01          	lea    0x1(%rdi),%rsi
    a9c2:	49 89 34 24          	mov    %rsi,(%r12)
    a9c6:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    a9cb:	0f b6 1f             	movzbl (%rdi),%ebx
    a9ce:	83 f9 3f             	cmp    $0x3f,%ecx
    a9d1:	75 09                	jne    a9dc <gimli::read::unit::parse_attribute+0x20c>
    a9d3:	80 fb 01             	cmp    $0x1,%bl
    a9d6:	0f 87 5a 09 00 00    	ja     b336 <gimli::read::unit::parse_attribute+0xb66>
    a9dc:	0f b6 eb             	movzbl %bl,%ebp
    a9df:	89 ef                	mov    %ebp,%edi
    a9e1:	83 e7 7f             	and    $0x7f,%edi
    a9e4:	48 d3 e7             	shl    %cl,%rdi
    a9e7:	49 09 fa             	or     %rdi,%r10
    a9ea:	40 84 ed             	test   %bpl,%bpl
    a9ed:	0f 89 29 0d 00 00    	jns    b71c <gimli::read::unit::parse_attribute+0xf4c>
    a9f3:	83 c1 07             	add    $0x7,%ecx
    a9f6:	48 89 f7             	mov    %rsi,%rdi
    a9f9:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    a9fd:	72 bf                	jb     a9be <gimli::read::unit::parse_attribute+0x1ee>
    a9ff:	e9 0f 09 00 00       	jmpq   b313 <gimli::read::unit::parse_attribute+0xb43>
    aa04:	41 80 f8 08          	cmp    $0x8,%r8b
    aa08:	0f 85 ab 01 00 00    	jne    abb9 <gimli::read::unit::parse_attribute+0x3e9>
    aa0e:	49 8b 45 00          	mov    0x0(%r13),%rax
    aa12:	48 83 f8 07          	cmp    $0x7,%rax
    aa16:	0f 86 95 0f 00 00    	jbe    b9b1 <gimli::read::unit::parse_attribute+0x11e1>
    aa1c:	49 8b 0c 24          	mov    (%r12),%rcx
    aa20:	48 8d 51 08          	lea    0x8(%rcx),%rdx
    aa24:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
    aa28:	49 89 14 24          	mov    %rdx,(%r12)
    aa2c:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    aa31:	4c 8b 11             	mov    (%rcx),%r10
    aa34:	e9 a6 01 00 00       	jmpq   abdf <gimli::read::unit::parse_attribute+0x40f>
    aa39:	49 8b 45 00          	mov    0x0(%r13),%rax
    aa3d:	48 85 c0             	test   %rax,%rax
    aa40:	0f 84 de 08 00 00    	je     b324 <gimli::read::unit::parse_attribute+0xb54>
    aa46:	49 8b 3c 24          	mov    (%r12),%rdi
    aa4a:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    aa4e:	31 d2                	xor    %edx,%edx
    aa50:	45 31 d2             	xor    %r10d,%r10d
    aa53:	31 c9                	xor    %ecx,%ecx
    aa55:	48 8d 77 01          	lea    0x1(%rdi),%rsi
    aa59:	49 89 34 24          	mov    %rsi,(%r12)
    aa5d:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    aa62:	0f b6 1f             	movzbl (%rdi),%ebx
    aa65:	83 f9 3f             	cmp    $0x3f,%ecx
    aa68:	75 09                	jne    aa73 <gimli::read::unit::parse_attribute+0x2a3>
    aa6a:	80 fb 01             	cmp    $0x1,%bl
    aa6d:	0f 87 c3 08 00 00    	ja     b336 <gimli::read::unit::parse_attribute+0xb66>
    aa73:	0f b6 eb             	movzbl %bl,%ebp
    aa76:	89 ef                	mov    %ebp,%edi
    aa78:	83 e7 7f             	and    $0x7f,%edi
    aa7b:	48 d3 e7             	shl    %cl,%rdi
    aa7e:	49 09 fa             	or     %rdi,%r10
    aa81:	40 84 ed             	test   %bpl,%bpl
    aa84:	0f 89 31 06 00 00    	jns    b0bb <gimli::read::unit::parse_attribute+0x8eb>
    aa8a:	83 c1 07             	add    $0x7,%ecx
    aa8d:	48 89 f7             	mov    %rsi,%rdi
    aa90:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    aa94:	72 bf                	jb     aa55 <gimli::read::unit::parse_attribute+0x285>
    aa96:	e9 78 08 00 00       	jmpq   b313 <gimli::read::unit::parse_attribute+0xb43>
    aa9b:	4d 8b 4d 00          	mov    0x0(%r13),%r9
    aa9f:	4d 85 c9             	test   %r9,%r9
    aaa2:	0f 84 b4 0a 00 00    	je     b55c <gimli::read::unit::parse_attribute+0xd8c>
    aaa8:	4d 8b 1c 24          	mov    (%r12),%r11
    aaac:	45 31 c0             	xor    %r8d,%r8d
    aaaf:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    aab6:	31 db                	xor    %ebx,%ebx
    aab8:	31 ff                	xor    %edi,%edi
    aaba:	31 c9                	xor    %ecx,%ecx
    aabc:	4d 8d 14 1b          	lea    (%r11,%rbx,1),%r10
    aac0:	49 83 c2 01          	add    $0x1,%r10
    aac4:	49 8d 2c 01          	lea    (%r9,%rax,1),%rbp
    aac8:	4d 89 14 24          	mov    %r10,(%r12)
    aacc:	49 89 6c 24 08       	mov    %rbp,0x8(%r12)
    aad1:	41 0f b6 14 1b       	movzbl (%r11,%rbx,1),%edx
    aad6:	83 f9 3f             	cmp    $0x3f,%ecx
    aad9:	75 09                	jne    aae4 <gimli::read::unit::parse_attribute+0x314>
    aadb:	80 fa 01             	cmp    $0x1,%dl
    aade:	0f 87 05 0c 00 00    	ja     b6e9 <gimli::read::unit::parse_attribute+0xf19>
    aae4:	0f b6 f2             	movzbl %dl,%esi
    aae7:	89 f2                	mov    %esi,%edx
    aae9:	83 e2 7f             	and    $0x7f,%edx
    aaec:	48 d3 e2             	shl    %cl,%rdx
    aaef:	48 09 d7             	or     %rdx,%rdi
    aaf2:	40 84 f6             	test   %sil,%sil
    aaf5:	0f 89 31 0d 00 00    	jns    b82c <gimli::read::unit::parse_attribute+0x105c>
    aafb:	83 c1 07             	add    $0x7,%ecx
    aafe:	48 83 c3 01          	add    $0x1,%rbx
    ab02:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    ab06:	49 39 d9             	cmp    %rbx,%r9
    ab09:	75 b1                	jne    aabc <gimli::read::unit::parse_attribute+0x2ec>
    ab0b:	e9 aa 02 00 00       	jmpq   adba <gimli::read::unit::parse_attribute+0x5ea>
    ab10:	49 8b 45 00          	mov    0x0(%r13),%rax
    ab14:	48 83 f8 03          	cmp    $0x3,%rax
    ab18:	0f 82 29 0a 00 00    	jb     b547 <gimli::read::unit::parse_attribute+0xd77>
    ab1e:	49 8b 0c 24          	mov    (%r12),%rcx
    ab22:	48 8d 51 03          	lea    0x3(%rcx),%rdx
    ab26:	48 83 c0 fd          	add    $0xfffffffffffffffd,%rax
    ab2a:	49 89 14 24          	mov    %rdx,(%r12)
    ab2e:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    ab33:	44 0f b7 11          	movzwl (%rcx),%r10d
    ab37:	0f b6 51 02          	movzbl 0x2(%rcx),%edx
    ab3b:	c1 e2 10             	shl    $0x10,%edx
    ab3e:	44 09 d2             	or     %r10d,%edx
    ab41:	44 89 d1             	mov    %r10d,%ecx
    ab44:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    ab4a:	81 e2 00 00 ff 00    	and    $0xff0000,%edx
    ab50:	be 1d 00 00 00       	mov    $0x1d,%esi
    ab55:	e9 e2 08 00 00       	jmpq   b43c <gimli::read::unit::parse_attribute+0xc6c>
    ab5a:	49 8b 45 00          	mov    0x0(%r13),%rax
    ab5e:	48 83 f8 04          	cmp    $0x4,%rax
    ab62:	0f 82 df 09 00 00    	jb     b547 <gimli::read::unit::parse_attribute+0xd77>
    ab68:	49 8b 0c 24          	mov    (%r12),%rcx
    ab6c:	48 8d 51 04          	lea    0x4(%rcx),%rdx
    ab70:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    ab74:	49 89 14 24          	mov    %rdx,(%r12)
    ab78:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    ab7d:	44 8b 11             	mov    (%rcx),%r10d
    ab80:	44 89 d1             	mov    %r10d,%ecx
    ab83:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    ab89:	44 89 d2             	mov    %r10d,%edx
    ab8c:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    ab92:	be 1d 00 00 00       	mov    $0x1d,%esi
    ab97:	e9 a0 08 00 00       	jmpq   b43c <gimli::read::unit::parse_attribute+0xc6c>
    ab9c:	41 80 f8 08          	cmp    $0x8,%r8b
    aba0:	0f 85 c4 09 00 00    	jne    b56a <gimli::read::unit::parse_attribute+0xd9a>
    aba6:	49 8b 45 00          	mov    0x0(%r13),%rax
    abaa:	48 83 f8 07          	cmp    $0x7,%rax
    abae:	0f 87 9e 07 00 00    	ja     b352 <gimli::read::unit::parse_attribute+0xb82>
    abb4:	e9 f8 0d 00 00       	jmpq   b9b1 <gimli::read::unit::parse_attribute+0x11e1>
    abb9:	49 8b 45 00          	mov    0x0(%r13),%rax
    abbd:	48 83 f8 03          	cmp    $0x3,%rax
    abc1:	0f 86 ea 0d 00 00    	jbe    b9b1 <gimli::read::unit::parse_attribute+0x11e1>
    abc7:	49 8b 0c 24          	mov    (%r12),%rcx
    abcb:	48 8d 51 04          	lea    0x4(%rcx),%rdx
    abcf:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    abd3:	49 89 14 24          	mov    %rdx,(%r12)
    abd7:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    abdc:	44 8b 11             	mov    (%rcx),%r10d
    abdf:	44 89 d1             	mov    %r10d,%ecx
    abe2:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    abe8:	44 89 d2             	mov    %r10d,%edx
    abeb:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    abf1:	48 bd 00 00 00 00 ff 	movabs $0xffffffff00000000,%rbp
    abf8:	ff ff ff 
    abfb:	4c 21 d5             	and    %r10,%rbp
    abfe:	be 1b 00 00 00       	mov    $0x1b,%esi
    ac03:	e9 36 08 00 00       	jmpq   b43e <gimli::read::unit::parse_attribute+0xc6e>
    ac08:	49 8b 45 00          	mov    0x0(%r13),%rax
    ac0c:	48 83 f8 02          	cmp    $0x2,%rax
    ac10:	0f 82 10 02 00 00    	jb     ae26 <gimli::read::unit::parse_attribute+0x656>
    ac16:	49 8b 0c 24          	mov    (%r12),%rcx
    ac1a:	4c 8d 51 02          	lea    0x2(%rcx),%r10
    ac1e:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    ac22:	4d 89 14 24          	mov    %r10,(%r12)
    ac26:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    ac2b:	0f b7 39             	movzwl (%rcx),%edi
    ac2e:	e9 b8 01 00 00       	jmpq   adeb <gimli::read::unit::parse_attribute+0x61b>
    ac33:	49 8b 45 00          	mov    0x0(%r13),%rax
    ac37:	48 83 f8 04          	cmp    $0x4,%rax
    ac3b:	0f 82 e5 01 00 00    	jb     ae26 <gimli::read::unit::parse_attribute+0x656>
    ac41:	49 8b 0c 24          	mov    (%r12),%rcx
    ac45:	4c 8d 51 04          	lea    0x4(%rcx),%r10
    ac49:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    ac4d:	4d 89 14 24          	mov    %r10,(%r12)
    ac51:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    ac56:	8b 39                	mov    (%rcx),%edi
    ac58:	e9 8e 01 00 00       	jmpq   adeb <gimli::read::unit::parse_attribute+0x61b>
    ac5d:	49 8b 45 00          	mov    0x0(%r13),%rax
    ac61:	48 83 f8 02          	cmp    $0x2,%rax
    ac65:	0f 82 dc 08 00 00    	jb     b547 <gimli::read::unit::parse_attribute+0xd77>
    ac6b:	49 8b 0c 24          	mov    (%r12),%rcx
    ac6f:	48 8d 51 02          	lea    0x2(%rcx),%rdx
    ac73:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    ac77:	49 89 14 24          	mov    %rdx,(%r12)
    ac7b:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    ac80:	44 0f b7 11          	movzwl (%rcx),%r10d
    ac84:	44 89 d1             	mov    %r10d,%ecx
    ac87:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    ac8d:	be 03 00 00 00       	mov    $0x3,%esi
    ac92:	e9 a3 07 00 00       	jmpq   b43a <gimli::read::unit::parse_attribute+0xc6a>
    ac97:	41 80 f8 04          	cmp    $0x4,%r8b
    ac9b:	0f 85 5a 08 00 00    	jne    b4fb <gimli::read::unit::parse_attribute+0xd2b>
    aca1:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
    aca5:	ff 15 95 b2 03 00    	callq  *0x3b295(%rip)        # 45f40 <_GLOBAL_OFFSET_TABLE_+0x5b0>
    acab:	84 c0                	test   %al,%al
    acad:	0f 84 48 08 00 00    	je     b4fb <gimli::read::unit::parse_attribute+0xd2b>
    acb3:	49 8b 45 00          	mov    0x0(%r13),%rax
    acb7:	be 0a 00 00 00       	mov    $0xa,%esi
    acbc:	48 83 f8 03          	cmp    $0x3,%rax
    acc0:	0f 87 44 08 00 00    	ja     b50a <gimli::read::unit::parse_attribute+0xd3a>
    acc6:	e9 7c 08 00 00       	jmpq   b547 <gimli::read::unit::parse_attribute+0xd77>
    accb:	41 80 f8 08          	cmp    $0x8,%r8b
    accf:	0f 85 64 08 00 00    	jne    b539 <gimli::read::unit::parse_attribute+0xd69>
    acd5:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
    acd9:	ff 15 61 b2 03 00    	callq  *0x3b261(%rip)        # 45f40 <_GLOBAL_OFFSET_TABLE_+0x5b0>
    acdf:	84 c0                	test   %al,%al
    ace1:	0f 84 52 08 00 00    	je     b539 <gimli::read::unit::parse_attribute+0xd69>
    ace7:	49 8b 45 00          	mov    0x0(%r13),%rax
    aceb:	48 83 f8 08          	cmp    $0x8,%rax
    acef:	0f 82 52 08 00 00    	jb     b547 <gimli::read::unit::parse_attribute+0xd77>
    acf5:	49 8b 0c 24          	mov    (%r12),%rcx
    acf9:	48 8d 51 08          	lea    0x8(%rcx),%rdx
    acfd:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
    ad01:	49 89 14 24          	mov    %rdx,(%r12)
    ad05:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    ad0a:	4c 8b 11             	mov    (%rcx),%r10
    ad0d:	be 0a 00 00 00       	mov    $0xa,%esi
    ad12:	e9 a3 0a 00 00       	jmpq   b7ba <gimli::read::unit::parse_attribute+0xfea>
    ad17:	4d 8b 14 24          	mov    (%r12),%r10
    ad1b:	49 8b 44 24 08       	mov    0x8(%r12),%rax
    ad20:	48 85 c0             	test   %rax,%rax
    ad23:	74 16                	je     ad3b <gimli::read::unit::parse_attribute+0x56b>
    ad25:	31 ff                	xor    %edi,%edi
    ad27:	41 80 3c 3a 00       	cmpb   $0x0,(%r10,%rdi,1)
    ad2c:	0f 84 d7 0a 00 00    	je     b809 <gimli::read::unit::parse_attribute+0x1039>
    ad32:	48 83 c7 01          	add    $0x1,%rdi
    ad36:	48 39 f8             	cmp    %rdi,%rax
    ad39:	75 ec                	jne    ad27 <gimli::read::unit::parse_attribute+0x557>
    ad3b:	31 c0                	xor    %eax,%eax
    ad3d:	48 83 c8 13          	or     $0x13,%rax
    ad41:	4d 89 57 10          	mov    %r10,0x10(%r15)
    ad45:	e9 42 0b 00 00       	jmpq   b88c <gimli::read::unit::parse_attribute+0x10bc>
    ad4a:	4d 8b 4d 00          	mov    0x0(%r13),%r9
    ad4e:	4d 85 c9             	test   %r9,%r9
    ad51:	0f 84 05 08 00 00    	je     b55c <gimli::read::unit::parse_attribute+0xd8c>
    ad57:	4d 8b 1c 24          	mov    (%r12),%r11
    ad5b:	45 31 c0             	xor    %r8d,%r8d
    ad5e:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    ad65:	31 db                	xor    %ebx,%ebx
    ad67:	31 ff                	xor    %edi,%edi
    ad69:	31 c9                	xor    %ecx,%ecx
    ad6b:	4d 8d 14 1b          	lea    (%r11,%rbx,1),%r10
    ad6f:	49 83 c2 01          	add    $0x1,%r10
    ad73:	49 8d 2c 01          	lea    (%r9,%rax,1),%rbp
    ad77:	4d 89 14 24          	mov    %r10,(%r12)
    ad7b:	49 89 6c 24 08       	mov    %rbp,0x8(%r12)
    ad80:	41 0f b6 14 1b       	movzbl (%r11,%rbx,1),%edx
    ad85:	83 f9 3f             	cmp    $0x3f,%ecx
    ad88:	75 09                	jne    ad93 <gimli::read::unit::parse_attribute+0x5c3>
    ad8a:	80 fa 01             	cmp    $0x1,%dl
    ad8d:	0f 87 56 09 00 00    	ja     b6e9 <gimli::read::unit::parse_attribute+0xf19>
    ad93:	0f b6 f2             	movzbl %dl,%esi
    ad96:	89 f2                	mov    %esi,%edx
    ad98:	83 e2 7f             	and    $0x7f,%edx
    ad9b:	48 d3 e2             	shl    %cl,%rdx
    ad9e:	48 09 d7             	or     %rdx,%rdi
    ada1:	40 84 f6             	test   %sil,%sil
    ada4:	0f 89 cd 0a 00 00    	jns    b877 <gimli::read::unit::parse_attribute+0x10a7>
    adaa:	83 c1 07             	add    $0x7,%ecx
    adad:	48 83 c3 01          	add    $0x1,%rbx
    adb1:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    adb5:	49 39 d9             	cmp    %rbx,%r9
    adb8:	75 b1                	jne    ad6b <gimli::read::unit::parse_attribute+0x59b>
    adba:	49 01 db             	add    %rbx,%r11
    adbd:	b8 13 00 00 00       	mov    $0x13,%eax
    adc2:	4d 89 d8             	mov    %r11,%r8
    adc5:	e9 be 0a 00 00       	jmpq   b888 <gimli::read::unit::parse_attribute+0x10b8>
    adca:	49 8b 45 00          	mov    0x0(%r13),%rax
    adce:	48 85 c0             	test   %rax,%rax
    add1:	74 53                	je     ae26 <gimli::read::unit::parse_attribute+0x656>
    add3:	49 8b 0c 24          	mov    (%r12),%rcx
    add7:	4c 8d 51 01          	lea    0x1(%rcx),%r10
    addb:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    addf:	4d 89 14 24          	mov    %r10,(%r12)
    ade3:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    ade8:	0f b6 39             	movzbl (%rcx),%edi
    adeb:	48 29 f8             	sub    %rdi,%rax
    adee:	72 3a                	jb     ae2a <gimli::read::unit::parse_attribute+0x65a>
    adf0:	49 8d 0c 3a          	lea    (%r10,%rdi,1),%rcx
    adf4:	49 89 0c 24          	mov    %rcx,(%r12)
    adf8:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    adfd:	44 89 d1             	mov    %r10d,%ecx
    ae00:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    ae06:	44 89 d2             	mov    %r10d,%edx
    ae09:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    ae0f:	48 bd 00 00 00 00 ff 	movabs $0xffffffff00000000,%rbp
    ae16:	ff ff ff 
    ae19:	4c 21 d5             	and    %r10,%rbp
    ae1c:	be 01 00 00 00       	mov    $0x1,%esi
    ae21:	e9 18 06 00 00       	jmpq   b43e <gimli::read::unit::parse_attribute+0xc6e>
    ae26:	4d 8b 14 24          	mov    (%r12),%r10
    ae2a:	4d 89 57 10          	mov    %r10,0x10(%r15)
    ae2e:	e9 1c 07 00 00       	jmpq   b54f <gimli::read::unit::parse_attribute+0xd7f>
    ae33:	49 8b 45 00          	mov    0x0(%r13),%rax
    ae37:	48 85 c0             	test   %rax,%rax
    ae3a:	0f 84 07 07 00 00    	je     b547 <gimli::read::unit::parse_attribute+0xd77>
    ae40:	49 8b 0c 24          	mov    (%r12),%rcx
    ae44:	48 8d 51 01          	lea    0x1(%rcx),%rdx
    ae48:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    ae4c:	49 89 14 24          	mov    %rdx,(%r12)
    ae50:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    ae55:	44 8a 11             	mov    (%rcx),%r10b
    ae58:	be 02 00 00 00       	mov    $0x2,%esi
    ae5d:	31 c9                	xor    %ecx,%ecx
    ae5f:	e9 d6 05 00 00       	jmpq   b43a <gimli::read::unit::parse_attribute+0xc6a>
    ae64:	49 8b 45 00          	mov    0x0(%r13),%rax
    ae68:	48 85 c0             	test   %rax,%rax
    ae6b:	0f 84 d6 06 00 00    	je     b547 <gimli::read::unit::parse_attribute+0xd77>
    ae71:	49 8b 0c 24          	mov    (%r12),%rcx
    ae75:	48 8d 51 01          	lea    0x1(%rcx),%rdx
    ae79:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    ae7d:	49 89 14 24          	mov    %rdx,(%r12)
    ae81:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    ae86:	80 39 00             	cmpb   $0x0,(%rcx)
    ae89:	41 0f 95 c2          	setne  %r10b
    ae8d:	be 09 00 00 00       	mov    $0x9,%esi
    ae92:	31 c9                	xor    %ecx,%ecx
    ae94:	e9 a1 05 00 00       	jmpq   b43a <gimli::read::unit::parse_attribute+0xc6a>
    ae99:	49 8b 45 00          	mov    0x0(%r13),%rax
    ae9d:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    aea1:	31 c9                	xor    %ecx,%ecx
    aea3:	45 31 d2             	xor    %r10d,%r10d
    aea6:	eb 1a                	jmp    aec2 <gimli::read::unit::parse_attribute+0x6f2>
    aea8:	89 d6                	mov    %edx,%esi
    aeaa:	83 e6 7f             	and    $0x7f,%esi
    aead:	48 d3 e6             	shl    %cl,%rsi
    aeb0:	49 09 f2             	or     %rsi,%r10
    aeb3:	83 c1 07             	add    $0x7,%ecx
    aeb6:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    aeba:	84 d2                	test   %dl,%dl
    aebc:	0f 89 95 08 00 00    	jns    b757 <gimli::read::unit::parse_attribute+0xf87>
    aec2:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    aec6:	0f 84 79 08 00 00    	je     b745 <gimli::read::unit::parse_attribute+0xf75>
    aecc:	49 8b 14 24          	mov    (%r12),%rdx
    aed0:	48 8d 72 01          	lea    0x1(%rdx),%rsi
    aed4:	49 89 34 24          	mov    %rsi,(%r12)
    aed8:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    aedd:	0f b6 12             	movzbl (%rdx),%edx
    aee0:	83 f9 3f             	cmp    $0x3f,%ecx
    aee3:	75 c3                	jne    aea8 <gimli::read::unit::parse_attribute+0x6d8>
    aee5:	84 d2                	test   %dl,%dl
    aee7:	74 bf                	je     aea8 <gimli::read::unit::parse_attribute+0x6d8>
    aee9:	80 fa 7f             	cmp    $0x7f,%dl
    aeec:	74 ba                	je     aea8 <gimli::read::unit::parse_attribute+0x6d8>
    aeee:	b8 07 00 00 00       	mov    $0x7,%eax
    aef3:	31 c9                	xor    %ecx,%ecx
    aef5:	49 89 4f 10          	mov    %rcx,0x10(%r15)
    aef9:	e9 8e 09 00 00       	jmpq   b88c <gimli::read::unit::parse_attribute+0x10bc>
    aefe:	41 80 f8 08          	cmp    $0x8,%r8b
    af02:	0f 85 d7 06 00 00    	jne    b5df <gimli::read::unit::parse_attribute+0xe0f>
    af08:	49 8b 45 00          	mov    0x0(%r13),%rax
    af0c:	48 83 f8 07          	cmp    $0x7,%rax
    af10:	0f 86 9b 0a 00 00    	jbe    b9b1 <gimli::read::unit::parse_attribute+0x11e1>
    af16:	49 8b 0c 24          	mov    (%r12),%rcx
    af1a:	48 8d 51 08          	lea    0x8(%rcx),%rdx
    af1e:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
    af22:	49 89 14 24          	mov    %rdx,(%r12)
    af26:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    af2b:	4c 8b 11             	mov    (%rcx),%r10
    af2e:	e9 d2 06 00 00       	jmpq   b605 <gimli::read::unit::parse_attribute+0xe35>
    af33:	49 8b 45 00          	mov    0x0(%r13),%rax
    af37:	48 85 c0             	test   %rax,%rax
    af3a:	0f 84 e4 03 00 00    	je     b324 <gimli::read::unit::parse_attribute+0xb54>
    af40:	49 8b 3c 24          	mov    (%r12),%rdi
    af44:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    af48:	31 d2                	xor    %edx,%edx
    af4a:	45 31 d2             	xor    %r10d,%r10d
    af4d:	31 c9                	xor    %ecx,%ecx
    af4f:	48 8d 77 01          	lea    0x1(%rdi),%rsi
    af53:	49 89 34 24          	mov    %rsi,(%r12)
    af57:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    af5c:	0f b6 1f             	movzbl (%rdi),%ebx
    af5f:	83 f9 3f             	cmp    $0x3f,%ecx
    af62:	75 09                	jne    af6d <gimli::read::unit::parse_attribute+0x79d>
    af64:	80 fb 01             	cmp    $0x1,%bl
    af67:	0f 87 c9 03 00 00    	ja     b336 <gimli::read::unit::parse_attribute+0xb66>
    af6d:	0f b6 eb             	movzbl %bl,%ebp
    af70:	89 ef                	mov    %ebp,%edi
    af72:	83 e7 7f             	and    $0x7f,%edi
    af75:	48 d3 e7             	shl    %cl,%rdi
    af78:	49 09 fa             	or     %rdi,%r10
    af7b:	40 84 ed             	test   %bpl,%bpl
    af7e:	0f 89 11 09 00 00    	jns    b895 <gimli::read::unit::parse_attribute+0x10c5>
    af84:	83 c1 07             	add    $0x7,%ecx
    af87:	48 89 f7             	mov    %rsi,%rdi
    af8a:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    af8e:	72 bf                	jb     af4f <gimli::read::unit::parse_attribute+0x77f>
    af90:	e9 7e 03 00 00       	jmpq   b313 <gimli::read::unit::parse_attribute+0xb43>
    af95:	66 83 fe 02          	cmp    $0x2,%si
    af99:	0f 85 8f 06 00 00    	jne    b62e <gimli::read::unit::parse_attribute+0xe5e>
    af9f:	8d 42 ff             	lea    -0x1(%rdx),%eax
    afa2:	3c 07                	cmp    $0x7,%al
    afa4:	0f 87 f0 09 00 00    	ja     b99a <gimli::read::unit::parse_attribute+0x11ca>
    afaa:	0f b6 c0             	movzbl %al,%eax
    afad:	48 8d 0d a8 b5 02 00 	lea    0x2b5a8(%rip),%rcx        # 3655c <_fini+0x14d8>
    afb4:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    afb8:	48 01 c8             	add    %rcx,%rax
    afbb:	ff e0                	jmpq   *%rax
    afbd:	49 8b 45 00          	mov    0x0(%r13),%rax
    afc1:	48 85 c0             	test   %rax,%rax
    afc4:	0f 84 e7 09 00 00    	je     b9b1 <gimli::read::unit::parse_attribute+0x11e1>
    afca:	49 8b 0c 24          	mov    (%r12),%rcx
    afce:	48 8d 51 01          	lea    0x1(%rcx),%rdx
    afd2:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    afd6:	49 89 14 24          	mov    %rdx,(%r12)
    afda:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    afdf:	44 0f b6 11          	movzbl (%rcx),%r10d
    afe3:	e9 f7 09 00 00       	jmpq   b9df <gimli::read::unit::parse_attribute+0x120f>
    afe8:	49 8b 45 00          	mov    0x0(%r13),%rax
    afec:	48 85 c0             	test   %rax,%rax
    afef:	0f 84 52 05 00 00    	je     b547 <gimli::read::unit::parse_attribute+0xd77>
    aff5:	49 8b 0c 24          	mov    (%r12),%rcx
    aff9:	48 8d 51 01          	lea    0x1(%rcx),%rdx
    affd:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    b001:	49 89 14 24          	mov    %rdx,(%r12)
    b005:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b00a:	44 8a 11             	mov    (%rcx),%r10b
    b00d:	be 0d 00 00 00       	mov    $0xd,%esi
    b012:	31 c9                	xor    %ecx,%ecx
    b014:	e9 21 04 00 00       	jmpq   b43a <gimli::read::unit::parse_attribute+0xc6a>
    b019:	49 8b 45 00          	mov    0x0(%r13),%rax
    b01d:	48 83 f8 02          	cmp    $0x2,%rax
    b021:	0f 82 20 05 00 00    	jb     b547 <gimli::read::unit::parse_attribute+0xd77>
    b027:	49 8b 0c 24          	mov    (%r12),%rcx
    b02b:	48 8d 51 02          	lea    0x2(%rcx),%rdx
    b02f:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    b033:	49 89 14 24          	mov    %rdx,(%r12)
    b037:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b03c:	44 0f b7 11          	movzwl (%rcx),%r10d
    b040:	44 89 d1             	mov    %r10d,%ecx
    b043:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b049:	be 0d 00 00 00       	mov    $0xd,%esi
    b04e:	e9 e7 03 00 00       	jmpq   b43a <gimli::read::unit::parse_attribute+0xc6a>
    b053:	49 8b 45 00          	mov    0x0(%r13),%rax
    b057:	48 83 f8 04          	cmp    $0x4,%rax
    b05b:	0f 82 e6 04 00 00    	jb     b547 <gimli::read::unit::parse_attribute+0xd77>
    b061:	49 8b 0c 24          	mov    (%r12),%rcx
    b065:	48 8d 51 04          	lea    0x4(%rcx),%rdx
    b069:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    b06d:	49 89 14 24          	mov    %rdx,(%r12)
    b071:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b076:	44 8b 11             	mov    (%rcx),%r10d
    b079:	44 89 d1             	mov    %r10d,%ecx
    b07c:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b082:	44 89 d2             	mov    %r10d,%edx
    b085:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    b08b:	be 0d 00 00 00       	mov    $0xd,%esi
    b090:	e9 a7 03 00 00       	jmpq   b43c <gimli::read::unit::parse_attribute+0xc6c>
    b095:	49 8b 45 00          	mov    0x0(%r13),%rax
    b099:	48 83 f8 08          	cmp    $0x8,%rax
    b09d:	0f 82 a4 04 00 00    	jb     b547 <gimli::read::unit::parse_attribute+0xd77>
    b0a3:	49 8b 0c 24          	mov    (%r12),%rcx
    b0a7:	48 8d 51 08          	lea    0x8(%rcx),%rdx
    b0ab:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
    b0af:	49 89 14 24          	mov    %rdx,(%r12)
    b0b3:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b0b8:	4c 8b 11             	mov    (%rcx),%r10
    b0bb:	44 89 d1             	mov    %r10d,%ecx
    b0be:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b0c4:	44 89 d2             	mov    %r10d,%edx
    b0c7:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    b0cd:	48 bd 00 00 00 00 ff 	movabs $0xffffffff00000000,%rbp
    b0d4:	ff ff ff 
    b0d7:	4c 21 d5             	and    %r10,%rbp
    b0da:	be 0d 00 00 00       	mov    $0xd,%esi
    b0df:	e9 5a 03 00 00       	jmpq   b43e <gimli::read::unit::parse_attribute+0xc6e>
    b0e4:	41 80 f8 08          	cmp    $0x8,%r8b
    b0e8:	0f 85 5d 05 00 00    	jne    b64b <gimli::read::unit::parse_attribute+0xe7b>
    b0ee:	49 8b 45 00          	mov    0x0(%r13),%rax
    b0f2:	48 83 f8 07          	cmp    $0x7,%rax
    b0f6:	0f 86 b5 08 00 00    	jbe    b9b1 <gimli::read::unit::parse_attribute+0x11e1>
    b0fc:	49 8b 0c 24          	mov    (%r12),%rcx
    b100:	48 8d 51 08          	lea    0x8(%rcx),%rdx
    b104:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
    b108:	49 89 14 24          	mov    %rdx,(%r12)
    b10c:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b111:	4c 8b 11             	mov    (%rcx),%r10
    b114:	e9 58 05 00 00       	jmpq   b671 <gimli::read::unit::parse_attribute+0xea1>
    b119:	be 09 00 00 00       	mov    $0x9,%esi
    b11e:	31 c9                	xor    %ecx,%ecx
    b120:	41 b2 01             	mov    $0x1,%r10b
    b123:	e9 12 03 00 00       	jmpq   b43a <gimli::read::unit::parse_attribute+0xc6a>
    b128:	49 8b 45 00          	mov    0x0(%r13),%rax
    b12c:	48 83 f8 04          	cmp    $0x4,%rax
    b130:	0f 82 11 04 00 00    	jb     b547 <gimli::read::unit::parse_attribute+0xd77>
    b136:	49 8b 0c 24          	mov    (%r12),%rcx
    b13a:	48 8d 51 04          	lea    0x4(%rcx),%rdx
    b13e:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    b142:	49 89 14 24          	mov    %rdx,(%r12)
    b146:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b14b:	44 8b 11             	mov    (%rcx),%r10d
    b14e:	44 89 d1             	mov    %r10d,%ecx
    b151:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b157:	44 89 d2             	mov    %r10d,%edx
    b15a:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    b160:	be 0f 00 00 00       	mov    $0xf,%esi
    b165:	e9 d2 02 00 00       	jmpq   b43c <gimli::read::unit::parse_attribute+0xc6c>
    b16a:	49 8b 45 00          	mov    0x0(%r13),%rax
    b16e:	48 83 f8 10          	cmp    $0x10,%rax
    b172:	0f 82 cf 03 00 00    	jb     b547 <gimli::read::unit::parse_attribute+0xd77>
    b178:	4d 8b 14 24          	mov    (%r12),%r10
    b17c:	49 8d 4a 10          	lea    0x10(%r10),%rcx
    b180:	48 83 c0 f0          	add    $0xfffffffffffffff0,%rax
    b184:	49 89 0c 24          	mov    %rcx,(%r12)
    b188:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b18d:	44 89 d1             	mov    %r10d,%ecx
    b190:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b196:	44 89 d2             	mov    %r10d,%edx
    b199:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    b19f:	48 bd 00 00 00 00 ff 	movabs $0xffffffff00000000,%rbp
    b1a6:	ff ff ff 
    b1a9:	4c 21 d5             	and    %r10,%rbp
    b1ac:	be 01 00 00 00       	mov    $0x1,%esi
    b1b1:	bf 10 00 00 00       	mov    $0x10,%edi
    b1b6:	e9 83 02 00 00       	jmpq   b43e <gimli::read::unit::parse_attribute+0xc6e>
    b1bb:	41 80 f8 08          	cmp    $0x8,%r8b
    b1bf:	0f 85 d5 04 00 00    	jne    b69a <gimli::read::unit::parse_attribute+0xeca>
    b1c5:	49 8b 45 00          	mov    0x0(%r13),%rax
    b1c9:	48 83 f8 07          	cmp    $0x7,%rax
    b1cd:	0f 86 de 07 00 00    	jbe    b9b1 <gimli::read::unit::parse_attribute+0x11e1>
    b1d3:	49 8b 0c 24          	mov    (%r12),%rcx
    b1d7:	48 8d 51 08          	lea    0x8(%rcx),%rdx
    b1db:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
    b1df:	49 89 14 24          	mov    %rdx,(%r12)
    b1e3:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b1e8:	4c 8b 11             	mov    (%rcx),%r10
    b1eb:	e9 d0 04 00 00       	jmpq   b6c0 <gimli::read::unit::parse_attribute+0xef0>
    b1f0:	49 8b 45 00          	mov    0x0(%r13),%rax
    b1f4:	48 83 f8 08          	cmp    $0x8,%rax
    b1f8:	0f 82 49 03 00 00    	jb     b547 <gimli::read::unit::parse_attribute+0xd77>
    b1fe:	49 8b 0c 24          	mov    (%r12),%rcx
    b202:	48 8d 51 08          	lea    0x8(%rcx),%rdx
    b206:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
    b20a:	49 89 14 24          	mov    %rdx,(%r12)
    b20e:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b213:	4c 8b 11             	mov    (%rcx),%r10
    b216:	44 89 d1             	mov    %r10d,%ecx
    b219:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b21f:	44 89 d2             	mov    %r10d,%edx
    b222:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    b228:	48 bd 00 00 00 00 ff 	movabs $0xffffffff00000000,%rbp
    b22f:	ff ff ff 
    b232:	4c 21 d5             	and    %r10,%rbp
    b235:	be 19 00 00 00       	mov    $0x19,%esi
    b23a:	e9 ff 01 00 00       	jmpq   b43e <gimli::read::unit::parse_attribute+0xc6e>
    b23f:	66 41 83 f9 21       	cmp    $0x21,%r9w
    b244:	0f 84 2a 05 00 00    	je     b774 <gimli::read::unit::parse_attribute+0xfa4>
    b24a:	49 c7 47 10 00 00 00 	movq   $0x0,0x10(%r15)
    b251:	00 
    b252:	49 c7 47 08 45 00 00 	movq   $0x45,0x8(%r15)
    b259:	00 
    b25a:	e9 9d f6 ff ff       	jmpq   a8fc <gimli::read::unit::parse_attribute+0x12c>
    b25f:	49 8b 45 00          	mov    0x0(%r13),%rax
    b263:	48 85 c0             	test   %rax,%rax
    b266:	0f 84 b8 00 00 00    	je     b324 <gimli::read::unit::parse_attribute+0xb54>
    b26c:	49 8b 3c 24          	mov    (%r12),%rdi
    b270:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    b274:	31 d2                	xor    %edx,%edx
    b276:	45 31 d2             	xor    %r10d,%r10d
    b279:	31 c9                	xor    %ecx,%ecx
    b27b:	48 8d 77 01          	lea    0x1(%rdi),%rsi
    b27f:	49 89 34 24          	mov    %rsi,(%r12)
    b283:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b288:	0f b6 1f             	movzbl (%rdi),%ebx
    b28b:	83 f9 3f             	cmp    $0x3f,%ecx
    b28e:	75 09                	jne    b299 <gimli::read::unit::parse_attribute+0xac9>
    b290:	80 fb 01             	cmp    $0x1,%bl
    b293:	0f 87 9d 00 00 00    	ja     b336 <gimli::read::unit::parse_attribute+0xb66>
    b299:	0f b6 eb             	movzbl %bl,%ebp
    b29c:	89 ef                	mov    %ebp,%edi
    b29e:	83 e7 7f             	and    $0x7f,%edi
    b2a1:	48 d3 e7             	shl    %cl,%rdi
    b2a4:	49 09 fa             	or     %rdi,%r10
    b2a7:	40 84 ed             	test   %bpl,%bpl
    b2aa:	0f 89 0e 06 00 00    	jns    b8be <gimli::read::unit::parse_attribute+0x10ee>
    b2b0:	83 c1 07             	add    $0x7,%ecx
    b2b3:	48 89 f7             	mov    %rsi,%rdi
    b2b6:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    b2ba:	72 bf                	jb     b27b <gimli::read::unit::parse_attribute+0xaab>
    b2bc:	eb 55                	jmp    b313 <gimli::read::unit::parse_attribute+0xb43>
    b2be:	49 8b 45 00          	mov    0x0(%r13),%rax
    b2c2:	48 85 c0             	test   %rax,%rax
    b2c5:	74 5d                	je     b324 <gimli::read::unit::parse_attribute+0xb54>
    b2c7:	49 8b 3c 24          	mov    (%r12),%rdi
    b2cb:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    b2cf:	31 d2                	xor    %edx,%edx
    b2d1:	45 31 d2             	xor    %r10d,%r10d
    b2d4:	31 c9                	xor    %ecx,%ecx
    b2d6:	48 8d 77 01          	lea    0x1(%rdi),%rsi
    b2da:	49 89 34 24          	mov    %rsi,(%r12)
    b2de:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b2e3:	0f b6 1f             	movzbl (%rdi),%ebx
    b2e6:	83 f9 3f             	cmp    $0x3f,%ecx
    b2e9:	75 05                	jne    b2f0 <gimli::read::unit::parse_attribute+0xb20>
    b2eb:	80 fb 01             	cmp    $0x1,%bl
    b2ee:	77 46                	ja     b336 <gimli::read::unit::parse_attribute+0xb66>
    b2f0:	0f b6 eb             	movzbl %bl,%ebp
    b2f3:	89 ef                	mov    %ebp,%edi
    b2f5:	83 e7 7f             	and    $0x7f,%edi
    b2f8:	48 d3 e7             	shl    %cl,%rdi
    b2fb:	49 09 fa             	or     %rdi,%r10
    b2fe:	40 84 ed             	test   %bpl,%bpl
    b301:	0f 89 e0 05 00 00    	jns    b8e7 <gimli::read::unit::parse_attribute+0x1117>
    b307:	83 c1 07             	add    $0x7,%ecx
    b30a:	48 89 f7             	mov    %rsi,%rdi
    b30d:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    b311:	72 c3                	jb     b2d6 <gimli::read::unit::parse_attribute+0xb06>
    b313:	b8 13 00 00 00       	mov    $0x13,%eax
    b318:	48 89 f2             	mov    %rsi,%rdx
    b31b:	49 89 77 10          	mov    %rsi,0x10(%r15)
    b31f:	e9 68 05 00 00       	jmpq   b88c <gimli::read::unit::parse_attribute+0x10bc>
    b324:	49 8b 14 24          	mov    (%r12),%rdx
    b328:	b8 13 00 00 00       	mov    $0x13,%eax
    b32d:	49 89 57 10          	mov    %rdx,0x10(%r15)
    b331:	e9 56 05 00 00       	jmpq   b88c <gimli::read::unit::parse_attribute+0x10bc>
    b336:	b8 06 00 00 00       	mov    $0x6,%eax
    b33b:	49 89 57 10          	mov    %rdx,0x10(%r15)
    b33f:	e9 48 05 00 00       	jmpq   b88c <gimli::read::unit::parse_attribute+0x10bc>
    b344:	49 8b 45 00          	mov    0x0(%r13),%rax
    b348:	48 83 f8 08          	cmp    $0x8,%rax
    b34c:	0f 82 f5 01 00 00    	jb     b547 <gimli::read::unit::parse_attribute+0xd77>
    b352:	49 8b 0c 24          	mov    (%r12),%rcx
    b356:	48 8d 51 08          	lea    0x8(%rcx),%rdx
    b35a:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
    b35e:	49 89 14 24          	mov    %rdx,(%r12)
    b362:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b367:	4c 8b 11             	mov    (%rcx),%r10
    b36a:	e9 21 02 00 00       	jmpq   b590 <gimli::read::unit::parse_attribute+0xdc0>
    b36f:	49 8b 45 00          	mov    0x0(%r13),%rax
    b373:	48 85 c0             	test   %rax,%rax
    b376:	0f 84 cb 01 00 00    	je     b547 <gimli::read::unit::parse_attribute+0xd77>
    b37c:	49 8b 0c 24          	mov    (%r12),%rcx
    b380:	48 8d 51 01          	lea    0x1(%rcx),%rdx
    b384:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    b388:	49 89 14 24          	mov    %rdx,(%r12)
    b38c:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b391:	44 8a 11             	mov    (%rcx),%r10b
    b394:	be 1d 00 00 00       	mov    $0x1d,%esi
    b399:	31 c9                	xor    %ecx,%ecx
    b39b:	e9 9a 00 00 00       	jmpq   b43a <gimli::read::unit::parse_attribute+0xc6a>
    b3a0:	49 8b 45 00          	mov    0x0(%r13),%rax
    b3a4:	48 83 f8 02          	cmp    $0x2,%rax
    b3a8:	0f 82 99 01 00 00    	jb     b547 <gimli::read::unit::parse_attribute+0xd77>
    b3ae:	49 8b 0c 24          	mov    (%r12),%rcx
    b3b2:	48 8d 51 02          	lea    0x2(%rcx),%rdx
    b3b6:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    b3ba:	49 89 14 24          	mov    %rdx,(%r12)
    b3be:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b3c3:	44 0f b7 11          	movzwl (%rcx),%r10d
    b3c7:	44 89 d1             	mov    %r10d,%ecx
    b3ca:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b3d0:	be 1d 00 00 00       	mov    $0x1d,%esi
    b3d5:	eb 63                	jmp    b43a <gimli::read::unit::parse_attribute+0xc6a>
    b3d7:	49 8b 45 00          	mov    0x0(%r13),%rax
    b3db:	48 85 c0             	test   %rax,%rax
    b3de:	0f 84 63 01 00 00    	je     b547 <gimli::read::unit::parse_attribute+0xd77>
    b3e4:	49 8b 0c 24          	mov    (%r12),%rcx
    b3e8:	48 8d 51 01          	lea    0x1(%rcx),%rdx
    b3ec:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    b3f0:	49 89 14 24          	mov    %rdx,(%r12)
    b3f4:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b3f9:	44 8a 11             	mov    (%rcx),%r10b
    b3fc:	be 0c 00 00 00       	mov    $0xc,%esi
    b401:	31 c9                	xor    %ecx,%ecx
    b403:	eb 35                	jmp    b43a <gimli::read::unit::parse_attribute+0xc6a>
    b405:	49 8b 45 00          	mov    0x0(%r13),%rax
    b409:	48 83 f8 02          	cmp    $0x2,%rax
    b40d:	0f 82 34 01 00 00    	jb     b547 <gimli::read::unit::parse_attribute+0xd77>
    b413:	49 8b 0c 24          	mov    (%r12),%rcx
    b417:	48 8d 51 02          	lea    0x2(%rcx),%rdx
    b41b:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    b41f:	49 89 14 24          	mov    %rdx,(%r12)
    b423:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b428:	44 0f b7 11          	movzwl (%rcx),%r10d
    b42c:	44 89 d1             	mov    %r10d,%ecx
    b42f:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b435:	be 0c 00 00 00       	mov    $0xc,%esi
    b43a:	31 d2                	xor    %edx,%edx
    b43c:	31 ed                	xor    %ebp,%ebp
    b43e:	41 0f b6 c2          	movzbl %r10b,%eax
    b442:	09 c1                	or     %eax,%ecx
    b444:	0f b7 c1             	movzwl %cx,%eax
    b447:	09 d0                	or     %edx,%eax
    b449:	48 09 e8             	or     %rbp,%rax
    b44c:	49 89 77 08          	mov    %rsi,0x8(%r15)
    b450:	49 89 47 10          	mov    %rax,0x10(%r15)
    b454:	49 89 7f 18          	mov    %rdi,0x18(%r15)
    b458:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    b45c:	66 41 89 47 20       	mov    %ax,0x20(%r15)
    b461:	31 c0                	xor    %eax,%eax
    b463:	e9 99 f4 ff ff       	jmpq   a901 <gimli::read::unit::parse_attribute+0x131>
    b468:	49 8b 45 00          	mov    0x0(%r13),%rax
    b46c:	48 83 f8 03          	cmp    $0x3,%rax
    b470:	0f 82 d1 00 00 00    	jb     b547 <gimli::read::unit::parse_attribute+0xd77>
    b476:	49 8b 0c 24          	mov    (%r12),%rcx
    b47a:	48 8d 51 03          	lea    0x3(%rcx),%rdx
    b47e:	48 83 c0 fd          	add    $0xfffffffffffffffd,%rax
    b482:	49 89 14 24          	mov    %rdx,(%r12)
    b486:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b48b:	44 0f b7 11          	movzwl (%rcx),%r10d
    b48f:	0f b6 51 02          	movzbl 0x2(%rcx),%edx
    b493:	c1 e2 10             	shl    $0x10,%edx
    b496:	44 09 d2             	or     %r10d,%edx
    b499:	44 89 d1             	mov    %r10d,%ecx
    b49c:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b4a2:	81 e2 00 00 ff 00    	and    $0xff0000,%edx
    b4a8:	be 0c 00 00 00       	mov    $0xc,%esi
    b4ad:	eb 8d                	jmp    b43c <gimli::read::unit::parse_attribute+0xc6c>
    b4af:	49 8b 45 00          	mov    0x0(%r13),%rax
    b4b3:	48 83 f8 04          	cmp    $0x4,%rax
    b4b7:	0f 82 8a 00 00 00    	jb     b547 <gimli::read::unit::parse_attribute+0xd77>
    b4bd:	49 8b 0c 24          	mov    (%r12),%rcx
    b4c1:	48 8d 51 04          	lea    0x4(%rcx),%rdx
    b4c5:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    b4c9:	49 89 14 24          	mov    %rdx,(%r12)
    b4cd:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b4d2:	44 8b 11             	mov    (%rcx),%r10d
    b4d5:	44 89 d1             	mov    %r10d,%ecx
    b4d8:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b4de:	44 89 d2             	mov    %r10d,%edx
    b4e1:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    b4e7:	be 0c 00 00 00       	mov    $0xc,%esi
    b4ec:	e9 4b ff ff ff       	jmpq   b43c <gimli::read::unit::parse_attribute+0xc6c>
    b4f1:	41 c6 47 08 0c       	movb   $0xc,0x8(%r15)
    b4f6:	e9 01 f4 ff ff       	jmpq   a8fc <gimli::read::unit::parse_attribute+0x12c>
    b4fb:	49 8b 45 00          	mov    0x0(%r13),%rax
    b4ff:	be 04 00 00 00       	mov    $0x4,%esi
    b504:	48 83 f8 04          	cmp    $0x4,%rax
    b508:	72 3d                	jb     b547 <gimli::read::unit::parse_attribute+0xd77>
    b50a:	49 8b 0c 24          	mov    (%r12),%rcx
    b50e:	48 8d 51 04          	lea    0x4(%rcx),%rdx
    b512:	49 89 14 24          	mov    %rdx,(%r12)
    b516:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    b51a:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b51f:	44 8b 11             	mov    (%rcx),%r10d
    b522:	44 89 d2             	mov    %r10d,%edx
    b525:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    b52b:	44 89 d1             	mov    %r10d,%ecx
    b52e:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b534:	e9 03 ff ff ff       	jmpq   b43c <gimli::read::unit::parse_attribute+0xc6c>
    b539:	49 8b 45 00          	mov    0x0(%r13),%rax
    b53d:	48 83 f8 08          	cmp    $0x8,%rax
    b541:	0f 83 56 02 00 00    	jae    b79d <gimli::read::unit::parse_attribute+0xfcd>
    b547:	49 8b 04 24          	mov    (%r12),%rax
    b54b:	49 89 47 10          	mov    %rax,0x10(%r15)
    b54f:	49 c7 47 08 13 00 00 	movq   $0x13,0x8(%r15)
    b556:	00 
    b557:	e9 a0 f3 ff ff       	jmpq   a8fc <gimli::read::unit::parse_attribute+0x12c>
    b55c:	4d 8b 04 24          	mov    (%r12),%r8
    b560:	b8 13 00 00 00       	mov    $0x13,%eax
    b565:	e9 1e 03 00 00       	jmpq   b888 <gimli::read::unit::parse_attribute+0x10b8>
    b56a:	49 8b 45 00          	mov    0x0(%r13),%rax
    b56e:	48 83 f8 03          	cmp    $0x3,%rax
    b572:	0f 86 39 04 00 00    	jbe    b9b1 <gimli::read::unit::parse_attribute+0x11e1>
    b578:	49 8b 0c 24          	mov    (%r12),%rcx
    b57c:	48 8d 51 04          	lea    0x4(%rcx),%rdx
    b580:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    b584:	49 89 14 24          	mov    %rdx,(%r12)
    b588:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b58d:	44 8b 11             	mov    (%rcx),%r10d
    b590:	44 89 d1             	mov    %r10d,%ecx
    b593:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b599:	44 89 d2             	mov    %r10d,%edx
    b59c:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    b5a2:	48 bd 00 00 00 00 ff 	movabs $0xffffffff00000000,%rbp
    b5a9:	ff ff ff 
    b5ac:	4c 21 d5             	and    %r10,%rbp
    b5af:	be 0f 00 00 00       	mov    $0xf,%esi
    b5b4:	e9 85 fe ff ff       	jmpq   b43e <gimli::read::unit::parse_attribute+0xc6e>
    b5b9:	44 89 d1             	mov    %r10d,%ecx
    b5bc:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b5c2:	44 89 d2             	mov    %r10d,%edx
    b5c5:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    b5cb:	48 bd 00 00 00 00 ff 	movabs $0xffffffff00000000,%rbp
    b5d2:	ff ff ff 
    b5d5:	4c 21 d5             	and    %r10,%rbp
    b5d8:	31 f6                	xor    %esi,%esi
    b5da:	e9 5f fe ff ff       	jmpq   b43e <gimli::read::unit::parse_attribute+0xc6e>
    b5df:	49 8b 45 00          	mov    0x0(%r13),%rax
    b5e3:	48 83 f8 03          	cmp    $0x3,%rax
    b5e7:	0f 86 c4 03 00 00    	jbe    b9b1 <gimli::read::unit::parse_attribute+0x11e1>
    b5ed:	49 8b 0c 24          	mov    (%r12),%rcx
    b5f1:	48 8d 51 04          	lea    0x4(%rcx),%rdx
    b5f5:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    b5f9:	49 89 14 24          	mov    %rdx,(%r12)
    b5fd:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b602:	44 8b 11             	mov    (%rcx),%r10d
    b605:	44 89 d1             	mov    %r10d,%ecx
    b608:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b60e:	44 89 d2             	mov    %r10d,%edx
    b611:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    b617:	48 bd 00 00 00 00 ff 	movabs $0xffffffff00000000,%rbp
    b61e:	ff ff ff 
    b621:	4c 21 d5             	and    %r10,%rbp
    b624:	be 1a 00 00 00       	mov    $0x1a,%esi
    b629:	e9 10 fe ff ff       	jmpq   b43e <gimli::read::unit::parse_attribute+0xc6e>
    b62e:	41 80 f8 08          	cmp    $0x8,%r8b
    b632:	0f 85 a6 01 00 00    	jne    b7de <gimli::read::unit::parse_attribute+0x100e>
    b638:	49 8b 45 00          	mov    0x0(%r13),%rax
    b63c:	48 83 f8 07          	cmp    $0x7,%rax
    b640:	0f 86 6b 03 00 00    	jbe    b9b1 <gimli::read::unit::parse_attribute+0x11e1>
    b646:	e9 7c 03 00 00       	jmpq   b9c7 <gimli::read::unit::parse_attribute+0x11f7>
    b64b:	49 8b 45 00          	mov    0x0(%r13),%rax
    b64f:	48 83 f8 03          	cmp    $0x3,%rax
    b653:	0f 86 58 03 00 00    	jbe    b9b1 <gimli::read::unit::parse_attribute+0x11e1>
    b659:	49 8b 0c 24          	mov    (%r12),%rcx
    b65d:	48 8d 51 04          	lea    0x4(%rcx),%rdx
    b661:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    b665:	49 89 14 24          	mov    %rdx,(%r12)
    b669:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b66e:	44 8b 11             	mov    (%rcx),%r10d
    b671:	44 89 d1             	mov    %r10d,%ecx
    b674:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b67a:	44 89 d2             	mov    %r10d,%edx
    b67d:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    b683:	48 bd 00 00 00 00 ff 	movabs $0xffffffff00000000,%rbp
    b68a:	ff ff ff 
    b68d:	4c 21 d5             	and    %r10,%rbp
    b690:	be 0a 00 00 00       	mov    $0xa,%esi
    b695:	e9 a4 fd ff ff       	jmpq   b43e <gimli::read::unit::parse_attribute+0xc6e>
    b69a:	49 8b 45 00          	mov    0x0(%r13),%rax
    b69e:	48 83 f8 03          	cmp    $0x3,%rax
    b6a2:	0f 86 09 03 00 00    	jbe    b9b1 <gimli::read::unit::parse_attribute+0x11e1>
    b6a8:	49 8b 0c 24          	mov    (%r12),%rcx
    b6ac:	48 8d 51 04          	lea    0x4(%rcx),%rdx
    b6b0:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    b6b4:	49 89 14 24          	mov    %rdx,(%r12)
    b6b8:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b6bd:	44 8b 11             	mov    (%rcx),%r10d
    b6c0:	44 89 d1             	mov    %r10d,%ecx
    b6c3:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b6c9:	44 89 d2             	mov    %r10d,%edx
    b6cc:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    b6d2:	48 bd 00 00 00 00 ff 	movabs $0xffffffff00000000,%rbp
    b6d9:	ff ff ff 
    b6dc:	4c 21 d5             	and    %r10,%rbp
    b6df:	be 1e 00 00 00       	mov    $0x1e,%esi
    b6e4:	e9 55 fd ff ff       	jmpq   b43e <gimli::read::unit::parse_attribute+0xc6e>
    b6e9:	b8 06 00 00 00       	mov    $0x6,%eax
    b6ee:	e9 95 01 00 00       	jmpq   b888 <gimli::read::unit::parse_attribute+0x10b8>
    b6f3:	44 89 d1             	mov    %r10d,%ecx
    b6f6:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b6fc:	44 89 d2             	mov    %r10d,%edx
    b6ff:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    b705:	48 bd 00 00 00 00 ff 	movabs $0xffffffff00000000,%rbp
    b70c:	ff ff ff 
    b70f:	4c 21 d5             	and    %r10,%rbp
    b712:	be 0c 00 00 00       	mov    $0xc,%esi
    b717:	e9 22 fd ff ff       	jmpq   b43e <gimli::read::unit::parse_attribute+0xc6e>
    b71c:	44 89 d1             	mov    %r10d,%ecx
    b71f:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b725:	44 89 d2             	mov    %r10d,%edx
    b728:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    b72e:	48 bd 00 00 00 00 ff 	movabs $0xffffffff00000000,%rbp
    b735:	ff ff ff 
    b738:	4c 21 d5             	and    %r10,%rbp
    b73b:	be 1d 00 00 00       	mov    $0x1d,%esi
    b740:	e9 f9 fc ff ff       	jmpq   b43e <gimli::read::unit::parse_attribute+0xc6e>
    b745:	49 8b 0c 24          	mov    (%r12),%rcx
    b749:	b8 13 00 00 00       	mov    $0x13,%eax
    b74e:	49 89 4f 10          	mov    %rcx,0x10(%r15)
    b752:	e9 35 01 00 00       	jmpq   b88c <gimli::read::unit::parse_attribute+0x10bc>
    b757:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    b75e:	48 d3 e0             	shl    %cl,%rax
    b761:	31 f6                	xor    %esi,%esi
    b763:	f6 c2 40             	test   $0x40,%dl
    b766:	48 0f 44 c6          	cmove  %rsi,%rax
    b76a:	83 f9 40             	cmp    $0x40,%ecx
    b76d:	48 0f 4d c6          	cmovge %rsi,%rax
    b771:	49 09 c2             	or     %rax,%r10
    b774:	44 89 d1             	mov    %r10d,%ecx
    b777:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b77d:	44 89 d2             	mov    %r10d,%edx
    b780:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    b786:	48 bd 00 00 00 00 ff 	movabs $0xffffffff00000000,%rbp
    b78d:	ff ff ff 
    b790:	4c 21 d5             	and    %r10,%rbp
    b793:	be 06 00 00 00       	mov    $0x6,%esi
    b798:	e9 a1 fc ff ff       	jmpq   b43e <gimli::read::unit::parse_attribute+0xc6e>
    b79d:	49 8b 0c 24          	mov    (%r12),%rcx
    b7a1:	48 8d 51 08          	lea    0x8(%rcx),%rdx
    b7a5:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
    b7a9:	49 89 14 24          	mov    %rdx,(%r12)
    b7ad:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b7b2:	4c 8b 11             	mov    (%rcx),%r10
    b7b5:	be 05 00 00 00       	mov    $0x5,%esi
    b7ba:	48 bd 00 00 00 00 ff 	movabs $0xffffffff00000000,%rbp
    b7c1:	ff ff ff 
    b7c4:	4c 21 d5             	and    %r10,%rbp
    b7c7:	44 89 d2             	mov    %r10d,%edx
    b7ca:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    b7d0:	44 89 d1             	mov    %r10d,%ecx
    b7d3:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b7d9:	e9 60 fc ff ff       	jmpq   b43e <gimli::read::unit::parse_attribute+0xc6e>
    b7de:	49 8b 45 00          	mov    0x0(%r13),%rax
    b7e2:	48 83 f8 03          	cmp    $0x3,%rax
    b7e6:	0f 86 c5 01 00 00    	jbe    b9b1 <gimli::read::unit::parse_attribute+0x11e1>
    b7ec:	49 8b 0c 24          	mov    (%r12),%rcx
    b7f0:	48 8d 51 04          	lea    0x4(%rcx),%rdx
    b7f4:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    b7f8:	49 89 14 24          	mov    %rdx,(%r12)
    b7fc:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b801:	44 8b 11             	mov    (%rcx),%r10d
    b804:	e9 d6 01 00 00       	jmpq   b9df <gimli::read::unit::parse_attribute+0x120f>
    b809:	49 8d 0c 3a          	lea    (%r10,%rdi,1),%rcx
    b80d:	49 89 0c 24          	mov    %rcx,(%r12)
    b811:	48 89 c2             	mov    %rax,%rdx
    b814:	48 29 fa             	sub    %rdi,%rdx
    b817:	49 89 54 24 08       	mov    %rdx,0x8(%r12)
    b81c:	0f 85 ee 00 00 00    	jne    b910 <gimli::read::unit::parse_attribute+0x1140>
    b822:	31 c0                	xor    %eax,%eax
    b824:	49 89 ca             	mov    %rcx,%r10
    b827:	e9 11 f5 ff ff       	jmpq   ad3d <gimli::read::unit::parse_attribute+0x56d>
    b82c:	48 39 fd             	cmp    %rdi,%rbp
    b82f:	72 4f                	jb     b880 <gimli::read::unit::parse_attribute+0x10b0>
    b831:	48 8d 04 3b          	lea    (%rbx,%rdi,1),%rax
    b835:	4c 01 d8             	add    %r11,%rax
    b838:	48 83 c0 01          	add    $0x1,%rax
    b83c:	49 29 f9             	sub    %rdi,%r9
    b83f:	48 f7 d3             	not    %rbx
    b842:	4c 01 cb             	add    %r9,%rbx
    b845:	49 89 04 24          	mov    %rax,(%r12)
    b849:	49 89 5c 24 08       	mov    %rbx,0x8(%r12)
    b84e:	44 89 d1             	mov    %r10d,%ecx
    b851:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b857:	44 89 d2             	mov    %r10d,%edx
    b85a:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    b860:	48 bd 00 00 00 00 ff 	movabs $0xffffffff00000000,%rbp
    b867:	ff ff ff 
    b86a:	4c 21 d5             	and    %r10,%rbp
    b86d:	be 08 00 00 00       	mov    $0x8,%esi
    b872:	e9 c7 fb ff ff       	jmpq   b43e <gimli::read::unit::parse_attribute+0xc6e>
    b877:	48 39 fd             	cmp    %rdi,%rbp
    b87a:	0f 83 f8 00 00 00    	jae    b978 <gimli::read::unit::parse_attribute+0x11a8>
    b880:	b8 13 00 00 00       	mov    $0x13,%eax
    b885:	4d 89 d0             	mov    %r10,%r8
    b888:	4d 89 47 10          	mov    %r8,0x10(%r15)
    b88c:	49 89 47 08          	mov    %rax,0x8(%r15)
    b890:	e9 67 f0 ff ff       	jmpq   a8fc <gimli::read::unit::parse_attribute+0x12c>
    b895:	44 89 d1             	mov    %r10d,%ecx
    b898:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b89e:	44 89 d2             	mov    %r10d,%edx
    b8a1:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    b8a7:	48 bd 00 00 00 00 ff 	movabs $0xffffffff00000000,%rbp
    b8ae:	ff ff ff 
    b8b1:	4c 21 d5             	and    %r10,%rbp
    b8b4:	be 07 00 00 00       	mov    $0x7,%esi
    b8b9:	e9 80 fb ff ff       	jmpq   b43e <gimli::read::unit::parse_attribute+0xc6e>
    b8be:	44 89 d1             	mov    %r10d,%ecx
    b8c1:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b8c7:	44 89 d2             	mov    %r10d,%edx
    b8ca:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    b8d0:	48 bd 00 00 00 00 ff 	movabs $0xffffffff00000000,%rbp
    b8d7:	ff ff ff 
    b8da:	4c 21 d5             	and    %r10,%rbp
    b8dd:	be 13 00 00 00       	mov    $0x13,%esi
    b8e2:	e9 57 fb ff ff       	jmpq   b43e <gimli::read::unit::parse_attribute+0xc6e>
    b8e7:	44 89 d1             	mov    %r10d,%ecx
    b8ea:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b8f0:	44 89 d2             	mov    %r10d,%edx
    b8f3:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    b8f9:	48 bd 00 00 00 00 ff 	movabs $0xffffffff00000000,%rbp
    b900:	ff ff ff 
    b903:	4c 21 d5             	and    %r10,%rbp
    b906:	be 18 00 00 00       	mov    $0x18,%esi
    b90b:	e9 2e fb ff ff       	jmpq   b43e <gimli::read::unit::parse_attribute+0xc6e>
    b910:	49 8d 0c 3a          	lea    (%r10,%rdi,1),%rcx
    b914:	48 83 c1 01          	add    $0x1,%rcx
    b918:	48 89 fa             	mov    %rdi,%rdx
    b91b:	48 f7 d2             	not    %rdx
    b91e:	48 01 c2             	add    %rax,%rdx
    b921:	49 89 0c 24          	mov    %rcx,(%r12)
    b925:	49 89 54 24 08       	mov    %rdx,0x8(%r12)
    b92a:	44 89 d1             	mov    %r10d,%ecx
    b92d:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b933:	44 89 d2             	mov    %r10d,%edx
    b936:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    b93c:	48 bd 00 00 00 00 ff 	movabs $0xffffffff00000000,%rbp
    b943:	ff ff ff 
    b946:	4c 21 d5             	and    %r10,%rbp
    b949:	be 1f 00 00 00       	mov    $0x1f,%esi
    b94e:	e9 eb fa ff ff       	jmpq   b43e <gimli::read::unit::parse_attribute+0xc6e>
    b953:	49 8b 45 00          	mov    0x0(%r13),%rax
    b957:	48 83 f8 01          	cmp    $0x1,%rax
    b95b:	76 54                	jbe    b9b1 <gimli::read::unit::parse_attribute+0x11e1>
    b95d:	49 8b 0c 24          	mov    (%r12),%rcx
    b961:	48 8d 51 02          	lea    0x2(%rcx),%rdx
    b965:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    b969:	49 89 14 24          	mov    %rdx,(%r12)
    b96d:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b972:	44 0f b7 11          	movzwl (%rcx),%r10d
    b976:	eb 67                	jmp    b9df <gimli::read::unit::parse_attribute+0x120f>
    b978:	48 8d 04 3b          	lea    (%rbx,%rdi,1),%rax
    b97c:	4c 01 d8             	add    %r11,%rax
    b97f:	48 83 c0 01          	add    $0x1,%rax
    b983:	49 29 f9             	sub    %rdi,%r9
    b986:	48 f7 d3             	not    %rbx
    b989:	4c 01 cb             	add    %r9,%rbx
    b98c:	49 89 04 24          	mov    %rax,(%r12)
    b990:	49 89 5c 24 08       	mov    %rbx,0x8(%r12)
    b995:	e9 63 f4 ff ff       	jmpq   adfd <gimli::read::unit::parse_attribute+0x62d>
    b99a:	c1 e2 08             	shl    $0x8,%edx
    b99d:	83 ca 18             	or     $0x18,%edx
    b9a0:	0f b7 ca             	movzwl %dx,%ecx
    b9a3:	31 c0                	xor    %eax,%eax
    b9a5:	eb 13                	jmp    b9ba <gimli::read::unit::parse_attribute+0x11ea>
    b9a7:	49 8b 45 00          	mov    0x0(%r13),%rax
    b9ab:	48 83 f8 08          	cmp    $0x8,%rax
    b9af:	73 16                	jae    b9c7 <gimli::read::unit::parse_attribute+0x11f7>
    b9b1:	49 8b 04 24          	mov    (%r12),%rax
    b9b5:	b9 13 00 00 00       	mov    $0x13,%ecx
    b9ba:	49 89 47 10          	mov    %rax,0x10(%r15)
    b9be:	49 89 4f 08          	mov    %rcx,0x8(%r15)
    b9c2:	e9 35 ef ff ff       	jmpq   a8fc <gimli::read::unit::parse_attribute+0x12c>
    b9c7:	49 8b 0c 24          	mov    (%r12),%rcx
    b9cb:	48 8d 51 08          	lea    0x8(%rcx),%rdx
    b9cf:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
    b9d3:	49 89 14 24          	mov    %rdx,(%r12)
    b9d7:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b9dc:	4c 8b 11             	mov    (%rcx),%r10
    b9df:	44 89 d1             	mov    %r10d,%ecx
    b9e2:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b9e8:	44 89 d2             	mov    %r10d,%edx
    b9eb:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
    b9f1:	48 bd 00 00 00 00 ff 	movabs $0xffffffff00000000,%rbp
    b9f8:	ff ff ff 
    b9fb:	4c 21 d5             	and    %r10,%rbp
    b9fe:	be 0e 00 00 00       	mov    $0xe,%esi
    ba03:	e9 36 fa ff ff       	jmpq   b43e <gimli::read::unit::parse_attribute+0xc6e>
    ba08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ba0f:	00 

000000000000ba10 <gimli::read::unit::Attribute<R>::value>:
    ba10:	8b 46 18             	mov    0x18(%rsi),%eax
    ba13:	83 c0 fe             	add    $0xfffffffe,%eax
    ba16:	0f b7 c8             	movzwl %ax,%ecx
    ba19:	81 f9 8a 00 00 00    	cmp    $0x8a,%ecx
    ba1f:	0f 87 70 07 00 00    	ja     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    ba25:	0f b7 c0             	movzwl %ax,%eax
    ba28:	48 8d 0d 4d ab 02 00 	lea    0x2ab4d(%rip),%rcx        # 3657c <_fini+0x14f8>
    ba2f:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    ba33:	48 01 c8             	add    %rcx,%rax
    ba36:	ff e0                	jmpq   *%rax
    ba38:	48 8b 06             	mov    (%rsi),%rax
    ba3b:	48 83 f8 08          	cmp    $0x8,%rax
    ba3f:	0f 84 96 03 00 00    	je     bddb <gimli::read::unit::Attribute<R>::value+0x3cb>
    ba45:	83 f8 01             	cmp    $0x1,%eax
    ba48:	0f 84 8d 03 00 00    	je     bddb <gimli::read::unit::Attribute<R>::value+0x3cb>
    ba4e:	e9 42 07 00 00       	jmpq   c195 <gimli::read::unit::Attribute<R>::value+0x785>
    ba53:	48 8b 06             	mov    (%rsi),%rax
    ba56:	48 83 f8 01          	cmp    $0x1,%rax
    ba5a:	0f 84 7b 03 00 00    	je     bddb <gimli::read::unit::Attribute<R>::value+0x3cb>
    ba60:	83 f8 0a             	cmp    $0xa,%eax
    ba63:	74 6a                	je     bacf <gimli::read::unit::Attribute<R>::value+0xbf>
    ba65:	83 f8 08             	cmp    $0x8,%eax
    ba68:	0f 85 27 07 00 00    	jne    c195 <gimli::read::unit::Attribute<R>::value+0x785>
    ba6e:	e9 68 03 00 00       	jmpq   bddb <gimli::read::unit::Attribute<R>::value+0x3cb>
    ba73:	48 8b 06             	mov    (%rsi),%rax
    ba76:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    ba7a:	48 83 f8 07          	cmp    $0x7,%rax
    ba7e:	0f 87 11 07 00 00    	ja     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    ba84:	48 8d 0d 35 af 02 00 	lea    0x2af35(%rip),%rcx        # 369c0 <_fini+0x193c>
    ba8b:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    ba8f:	48 01 c8             	add    %rcx,%rax
    ba92:	ff e0                	jmpq   *%rax
    ba94:	48 83 3e 0a          	cmpq   $0xa,(%rsi)
    ba98:	0f 85 f7 06 00 00    	jne    c195 <gimli::read::unit::Attribute<R>::value+0x785>
    ba9e:	48 8b 46 08          	mov    0x8(%rsi),%rax
    baa2:	48 89 47 08          	mov    %rax,0x8(%rdi)
    baa6:	48 c7 07 16 00 00 00 	movq   $0x16,(%rdi)
    baad:	c3                   	retq   
    baae:	48 8b 06             	mov    (%rsi),%rax
    bab1:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    bab5:	48 83 f8 09          	cmp    $0x9,%rax
    bab9:	0f 87 d6 06 00 00    	ja     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    babf:	48 8d 0d 92 ad 02 00 	lea    0x2ad92(%rip),%rcx        # 36858 <_fini+0x17d4>
    bac6:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    baca:	48 01 c8             	add    %rcx,%rax
    bacd:	ff e0                	jmpq   *%rax
    bacf:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bad3:	48 89 47 08          	mov    %rax,0x8(%rdi)
    bad7:	48 c7 07 11 00 00 00 	movq   $0x11,(%rdi)
    bade:	c3                   	retq   
    badf:	48 8b 06             	mov    (%rsi),%rax
    bae2:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    bae6:	48 83 f8 05          	cmp    $0x5,%rax
    baea:	0f 87 a5 06 00 00    	ja     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    baf0:	48 8d 0d 31 ad 02 00 	lea    0x2ad31(%rip),%rcx        # 36828 <_fini+0x17a4>
    baf7:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    bafb:	48 01 c8             	add    %rcx,%rax
    bafe:	ff e0                	jmpq   *%rax
    bb00:	48 8b 06             	mov    (%rsi),%rax
    bb03:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    bb07:	48 83 f8 05          	cmp    $0x5,%rax
    bb0b:	0f 87 84 06 00 00    	ja     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    bb11:	48 8d 0d f8 ac 02 00 	lea    0x2acf8(%rip),%rcx        # 36810 <_fini+0x178c>
    bb18:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    bb1c:	48 01 c8             	add    %rcx,%rax
    bb1f:	ff e0                	jmpq   *%rax
    bb21:	48 8b 06             	mov    (%rsi),%rax
    bb24:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    bb28:	48 83 f8 05          	cmp    $0x5,%rax
    bb2c:	0f 87 63 06 00 00    	ja     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    bb32:	48 8d 0d 0f ae 02 00 	lea    0x2ae0f(%rip),%rcx        # 36948 <_fini+0x18c4>
    bb39:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    bb3d:	48 01 c8             	add    %rcx,%rax
    bb40:	ff e0                	jmpq   *%rax
    bb42:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bb46:	e9 19 04 00 00       	jmpq   bf64 <gimli::read::unit::Attribute<R>::value+0x554>
    bb4b:	48 83 3e 0a          	cmpq   $0xa,(%rsi)
    bb4f:	0f 85 40 06 00 00    	jne    c195 <gimli::read::unit::Attribute<R>::value+0x785>
    bb55:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bb59:	48 89 47 08          	mov    %rax,0x8(%rdi)
    bb5d:	48 c7 07 1c 00 00 00 	movq   $0x1c,(%rdi)
    bb64:	c3                   	retq   
    bb65:	48 83 3e 0a          	cmpq   $0xa,(%rsi)
    bb69:	0f 85 26 06 00 00    	jne    c195 <gimli::read::unit::Attribute<R>::value+0x785>
    bb6f:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bb73:	48 89 47 08          	mov    %rax,0x8(%rdi)
    bb77:	48 c7 07 15 00 00 00 	movq   $0x15,(%rdi)
    bb7e:	c3                   	retq   
    bb7f:	48 8b 06             	mov    (%rsi),%rax
    bb82:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    bb86:	48 83 f8 05          	cmp    $0x5,%rax
    bb8a:	0f 87 05 06 00 00    	ja     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    bb90:	48 8d 0d 49 ae 02 00 	lea    0x2ae49(%rip),%rcx        # 369e0 <_fini+0x195c>
    bb97:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    bb9b:	48 01 c8             	add    %rcx,%rax
    bb9e:	ff e0                	jmpq   *%rax
    bba0:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bba4:	e9 f0 03 00 00       	jmpq   bf99 <gimli::read::unit::Attribute<R>::value+0x589>
    bba9:	48 83 3e 0a          	cmpq   $0xa,(%rsi)
    bbad:	0f 85 e2 05 00 00    	jne    c195 <gimli::read::unit::Attribute<R>::value+0x785>
    bbb3:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bbb7:	48 89 47 08          	mov    %rax,0x8(%rdi)
    bbbb:	48 c7 07 10 00 00 00 	movq   $0x10,(%rdi)
    bbc2:	c3                   	retq   
    bbc3:	48 8b 06             	mov    (%rsi),%rax
    bbc6:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    bbca:	48 83 f8 05          	cmp    $0x5,%rax
    bbce:	0f 87 c1 05 00 00    	ja     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    bbd4:	48 8d 0d cd ad 02 00 	lea    0x2adcd(%rip),%rcx        # 369a8 <_fini+0x1924>
    bbdb:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    bbdf:	48 01 c8             	add    %rcx,%rax
    bbe2:	ff e0                	jmpq   *%rax
    bbe4:	48 8b 06             	mov    (%rsi),%rax
    bbe7:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    bbeb:	48 83 f8 05          	cmp    $0x5,%rax
    bbef:	0f 87 a0 05 00 00    	ja     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    bbf5:	48 8d 0d 94 ad 02 00 	lea    0x2ad94(%rip),%rcx        # 36990 <_fini+0x190c>
    bbfc:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    bc00:	48 01 c8             	add    %rcx,%rax
    bc03:	ff e0                	jmpq   *%rax
    bc05:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bc09:	e9 c0 03 00 00       	jmpq   bfce <gimli::read::unit::Attribute<R>::value+0x5be>
    bc0e:	48 8b 06             	mov    (%rsi),%rax
    bc11:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    bc15:	48 83 f8 05          	cmp    $0x5,%rax
    bc19:	0f 87 76 05 00 00    	ja     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    bc1f:	48 8d 0d 52 ad 02 00 	lea    0x2ad52(%rip),%rcx        # 36978 <_fini+0x18f4>
    bc26:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    bc2a:	48 01 c8             	add    %rcx,%rax
    bc2d:	ff e0                	jmpq   *%rax
    bc2f:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bc33:	e9 cc 03 00 00       	jmpq   c004 <gimli::read::unit::Attribute<R>::value+0x5f4>
    bc38:	48 8b 06             	mov    (%rsi),%rax
    bc3b:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    bc3f:	48 83 f8 05          	cmp    $0x5,%rax
    bc43:	0f 87 4c 05 00 00    	ja     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    bc49:	48 8d 0d 10 ad 02 00 	lea    0x2ad10(%rip),%rcx        # 36960 <_fini+0x18dc>
    bc50:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    bc54:	48 01 c8             	add    %rcx,%rax
    bc57:	ff e0                	jmpq   *%rax
    bc59:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bc5d:	e9 d7 03 00 00       	jmpq   c039 <gimli::read::unit::Attribute<R>::value+0x629>
    bc62:	48 8b 06             	mov    (%rsi),%rax
    bc65:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    bc69:	48 83 f8 07          	cmp    $0x7,%rax
    bc6d:	0f 87 22 05 00 00    	ja     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    bc73:	48 8d 0d 96 ac 02 00 	lea    0x2ac96(%rip),%rcx        # 36910 <_fini+0x188c>
    bc7a:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    bc7e:	48 01 c8             	add    %rcx,%rax
    bc81:	ff e0                	jmpq   *%rax
    bc83:	48 8b 06             	mov    (%rsi),%rax
    bc86:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    bc8a:	48 83 f8 05          	cmp    $0x5,%rax
    bc8e:	0f 87 01 05 00 00    	ja     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    bc94:	48 8d 0d 45 ac 02 00 	lea    0x2ac45(%rip),%rcx        # 368e0 <_fini+0x185c>
    bc9b:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    bc9f:	48 01 c8             	add    %rcx,%rax
    bca2:	ff e0                	jmpq   *%rax
    bca4:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bca8:	e9 c1 03 00 00       	jmpq   c06e <gimli::read::unit::Attribute<R>::value+0x65e>
    bcad:	48 8b 06             	mov    (%rsi),%rax
    bcb0:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    bcb4:	48 83 f8 05          	cmp    $0x5,%rax
    bcb8:	0f 87 d7 04 00 00    	ja     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    bcbe:	48 8d 0d 03 ac 02 00 	lea    0x2ac03(%rip),%rcx        # 368c8 <_fini+0x1844>
    bcc5:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    bcc9:	48 01 c8             	add    %rcx,%rax
    bccc:	ff e0                	jmpq   *%rax
    bcce:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bcd2:	e9 cc 03 00 00       	jmpq   c0a3 <gimli::read::unit::Attribute<R>::value+0x693>
    bcd7:	48 8b 06             	mov    (%rsi),%rax
    bcda:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    bcde:	48 83 f8 05          	cmp    $0x5,%rax
    bce2:	0f 87 ad 04 00 00    	ja     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    bce8:	48 8d 0d 91 ab 02 00 	lea    0x2ab91(%rip),%rcx        # 36880 <_fini+0x17fc>
    bcef:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    bcf3:	48 01 c8             	add    %rcx,%rax
    bcf6:	ff e0                	jmpq   *%rax
    bcf8:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bcfc:	e9 cc 03 00 00       	jmpq   c0cd <gimli::read::unit::Attribute<R>::value+0x6bd>
    bd01:	48 8b 06             	mov    (%rsi),%rax
    bd04:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    bd08:	48 83 f8 05          	cmp    $0x5,%rax
    bd0c:	0f 87 83 04 00 00    	ja     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    bd12:	48 8d 0d 27 ab 02 00 	lea    0x2ab27(%rip),%rcx        # 36840 <_fini+0x17bc>
    bd19:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    bd1d:	48 01 c8             	add    %rcx,%rax
    bd20:	ff e0                	jmpq   *%rax
    bd22:	48 8b 06             	mov    (%rsi),%rax
    bd25:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    bd29:	48 83 f8 05          	cmp    $0x5,%rax
    bd2d:	0f 87 62 04 00 00    	ja     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    bd33:	48 8d 0d 9e aa 02 00 	lea    0x2aa9e(%rip),%rcx        # 367d8 <_fini+0x1754>
    bd3a:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    bd3e:	48 01 c8             	add    %rcx,%rax
    bd41:	ff e0                	jmpq   *%rax
    bd43:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bd47:	e9 b6 03 00 00       	jmpq   c102 <gimli::read::unit::Attribute<R>::value+0x6f2>
    bd4c:	48 8b 06             	mov    (%rsi),%rax
    bd4f:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    bd53:	48 83 f8 05          	cmp    $0x5,%rax
    bd57:	0f 87 38 04 00 00    	ja     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    bd5d:	48 8d 0d 5c aa 02 00 	lea    0x2aa5c(%rip),%rcx        # 367c0 <_fini+0x173c>
    bd64:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    bd68:	48 01 c8             	add    %rcx,%rax
    bd6b:	ff e0                	jmpq   *%rax
    bd6d:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bd71:	e9 bd 03 00 00       	jmpq   c133 <gimli::read::unit::Attribute<R>::value+0x723>
    bd76:	48 83 3e 0a          	cmpq   $0xa,(%rsi)
    bd7a:	0f 85 15 04 00 00    	jne    c195 <gimli::read::unit::Attribute<R>::value+0x785>
    bd80:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bd84:	48 89 47 08          	mov    %rax,0x8(%rdi)
    bd88:	48 c7 07 14 00 00 00 	movq   $0x14,(%rdi)
    bd8f:	c3                   	retq   
    bd90:	48 8b 06             	mov    (%rsi),%rax
    bd93:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    bd97:	48 83 f8 05          	cmp    $0x5,%rax
    bd9b:	0f 87 f4 03 00 00    	ja     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    bda1:	48 8d 0d 00 aa 02 00 	lea    0x2aa00(%rip),%rcx        # 367a8 <_fini+0x1724>
    bda8:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    bdac:	48 01 c8             	add    %rcx,%rax
    bdaf:	ff e0                	jmpq   *%rax
    bdb1:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bdb5:	e9 a6 03 00 00       	jmpq   c160 <gimli::read::unit::Attribute<R>::value+0x750>
    bdba:	48 8b 06             	mov    (%rsi),%rax
    bdbd:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    bdc1:	48 83 f8 07          	cmp    $0x7,%rax
    bdc5:	0f 87 ca 03 00 00    	ja     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    bdcb:	48 8d 0d 1e aa 02 00 	lea    0x2aa1e(%rip),%rcx        # 367f0 <_fini+0x176c>
    bdd2:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    bdd6:	48 01 c8             	add    %rcx,%rax
    bdd9:	ff e0                	jmpq   *%rax
    bddb:	0f 10 46 08          	movups 0x8(%rsi),%xmm0
    bddf:	0f 11 47 08          	movups %xmm0,0x8(%rdi)
    bde3:	48 c7 07 08 00 00 00 	movq   $0x8,(%rdi)
    bdea:	c3                   	retq   
    bdeb:	48 8b 06             	mov    (%rsi),%rax
    bdee:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    bdf2:	48 83 f8 05          	cmp    $0x5,%rax
    bdf6:	0f 87 99 03 00 00    	ja     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    bdfc:	48 8d 0d 95 aa 02 00 	lea    0x2aa95(%rip),%rcx        # 36898 <_fini+0x1814>
    be03:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    be07:	48 01 c8             	add    %rcx,%rax
    be0a:	ff e0                	jmpq   *%rax
    be0c:	48 8b 06             	mov    (%rsi),%rax
    be0f:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    be13:	48 83 f8 05          	cmp    $0x5,%rax
    be17:	0f 87 78 03 00 00    	ja     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    be1d:	48 8d 0d 8c aa 02 00 	lea    0x2aa8c(%rip),%rcx        # 368b0 <_fini+0x182c>
    be24:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    be28:	48 01 c8             	add    %rcx,%rax
    be2b:	ff e0                	jmpq   *%rax
    be2d:	48 8b 46 08          	mov    0x8(%rsi),%rax
    be31:	e9 04 01 00 00       	jmpq   bf3a <gimli::read::unit::Attribute<R>::value+0x52a>
    be36:	48 8b 06             	mov    (%rsi),%rax
    be39:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    be3d:	48 83 f8 05          	cmp    $0x5,%rax
    be41:	0f 87 4e 03 00 00    	ja     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    be47:	48 8d 0d aa aa 02 00 	lea    0x2aaaa(%rip),%rcx        # 368f8 <_fini+0x1874>
    be4e:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    be52:	48 01 c8             	add    %rcx,%rax
    be55:	ff e0                	jmpq   *%rax
    be57:	48 8b 46 08          	mov    0x8(%rsi),%rax
    be5b:	48 89 47 08          	mov    %rax,0x8(%rdi)
    be5f:	48 c7 07 07 00 00 00 	movq   $0x7,(%rdi)
    be66:	c3                   	retq   
    be67:	48 8b 46 08          	mov    0x8(%rsi),%rax
    be6b:	48 85 c0             	test   %rax,%rax
    be6e:	79 eb                	jns    be5b <gimli::read::unit::Attribute<R>::value+0x44b>
    be70:	e9 20 03 00 00       	jmpq   c195 <gimli::read::unit::Attribute<R>::value+0x785>
    be75:	0f b6 46 08          	movzbl 0x8(%rsi),%eax
    be79:	48 89 47 08          	mov    %rax,0x8(%rdi)
    be7d:	48 c7 07 07 00 00 00 	movq   $0x7,(%rdi)
    be84:	c3                   	retq   
    be85:	8b 46 08             	mov    0x8(%rsi),%eax
    be88:	48 89 47 08          	mov    %rax,0x8(%rdi)
    be8c:	48 c7 07 07 00 00 00 	movq   $0x7,(%rdi)
    be93:	c3                   	retq   
    be94:	0f b7 46 08          	movzwl 0x8(%rsi),%eax
    be98:	48 89 47 08          	mov    %rax,0x8(%rdi)
    be9c:	48 c7 07 07 00 00 00 	movq   $0x7,(%rdi)
    bea3:	c3                   	retq   
    bea4:	48 8b 06             	mov    (%rsi),%rax
    bea7:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    beab:	48 83 f8 05          	cmp    $0x5,%rax
    beaf:	0f 87 e0 02 00 00    	ja     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    beb5:	48 8d 0d 74 aa 02 00 	lea    0x2aa74(%rip),%rcx        # 36930 <_fini+0x18ac>
    bebc:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    bec0:	48 01 c8             	add    %rcx,%rax
    bec3:	ff e0                	jmpq   *%rax
    bec5:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bec9:	e9 bf 02 00 00       	jmpq   c18d <gimli::read::unit::Attribute<R>::value+0x77d>
    bece:	48 83 3e 0a          	cmpq   $0xa,(%rsi)
    bed2:	0f 85 bd 02 00 00    	jne    c195 <gimli::read::unit::Attribute<R>::value+0x785>
    bed8:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bedc:	48 89 47 08          	mov    %rax,0x8(%rdi)
    bee0:	48 c7 07 0b 00 00 00 	movq   $0xb,(%rdi)
    bee7:	c3                   	retq   
    bee8:	48 83 3e 0a          	cmpq   $0xa,(%rsi)
    beec:	0f 85 a3 02 00 00    	jne    c195 <gimli::read::unit::Attribute<R>::value+0x785>
    bef2:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bef6:	48 89 47 08          	mov    %rax,0x8(%rdi)
    befa:	48 c7 07 17 00 00 00 	movq   $0x17,(%rdi)
    bf01:	c3                   	retq   
    bf02:	48 83 3e 0a          	cmpq   $0xa,(%rsi)
    bf06:	0f 85 89 02 00 00    	jne    c195 <gimli::read::unit::Attribute<R>::value+0x785>
    bf0c:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bf10:	48 89 47 08          	mov    %rax,0x8(%rdi)
    bf14:	48 c7 07 12 00 00 00 	movq   $0x12,(%rdi)
    bf1b:	c3                   	retq   
    bf1c:	0f b6 46 08          	movzbl 0x8(%rsi),%eax
    bf20:	eb 18                	jmp    bf3a <gimli::read::unit::Attribute<R>::value+0x52a>
    bf22:	0f b7 46 08          	movzwl 0x8(%rsi),%eax
    bf26:	eb 12                	jmp    bf3a <gimli::read::unit::Attribute<R>::value+0x52a>
    bf28:	8b 46 08             	mov    0x8(%rsi),%eax
    bf2b:	eb 0d                	jmp    bf3a <gimli::read::unit::Attribute<R>::value+0x52a>
    bf2d:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bf31:	48 85 c0             	test   %rax,%rax
    bf34:	0f 88 5b 02 00 00    	js     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    bf3a:	48 89 47 08          	mov    %rax,0x8(%rdi)
    bf3e:	48 c7 07 2c 00 00 00 	movq   $0x2c,(%rdi)
    bf45:	c3                   	retq   
    bf46:	0f b6 46 08          	movzbl 0x8(%rsi),%eax
    bf4a:	eb 24                	jmp    bf70 <gimli::read::unit::Attribute<R>::value+0x560>
    bf4c:	0f b7 46 08          	movzwl 0x8(%rsi),%eax
    bf50:	eb 12                	jmp    bf64 <gimli::read::unit::Attribute<R>::value+0x554>
    bf52:	8b 46 08             	mov    0x8(%rsi),%eax
    bf55:	eb 0d                	jmp    bf64 <gimli::read::unit::Attribute<R>::value+0x554>
    bf57:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bf5b:	48 85 c0             	test   %rax,%rax
    bf5e:	0f 88 31 02 00 00    	js     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    bf64:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    bf6a:	0f 87 25 02 00 00    	ja     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    bf70:	88 47 08             	mov    %al,0x8(%rdi)
    bf73:	48 c7 07 22 00 00 00 	movq   $0x22,(%rdi)
    bf7a:	c3                   	retq   
    bf7b:	0f b6 46 08          	movzbl 0x8(%rsi),%eax
    bf7f:	eb 24                	jmp    bfa5 <gimli::read::unit::Attribute<R>::value+0x595>
    bf81:	0f b7 46 08          	movzwl 0x8(%rsi),%eax
    bf85:	eb 12                	jmp    bf99 <gimli::read::unit::Attribute<R>::value+0x589>
    bf87:	8b 46 08             	mov    0x8(%rsi),%eax
    bf8a:	eb 0d                	jmp    bf99 <gimli::read::unit::Attribute<R>::value+0x589>
    bf8c:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bf90:	48 85 c0             	test   %rax,%rax
    bf93:	0f 88 fc 01 00 00    	js     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    bf99:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    bf9f:	0f 87 f0 01 00 00    	ja     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    bfa5:	88 47 08             	mov    %al,0x8(%rdi)
    bfa8:	48 c7 07 2b 00 00 00 	movq   $0x2b,(%rdi)
    bfaf:	c3                   	retq   
    bfb0:	0f b6 46 08          	movzbl 0x8(%rsi),%eax
    bfb4:	eb 24                	jmp    bfda <gimli::read::unit::Attribute<R>::value+0x5ca>
    bfb6:	0f b7 46 08          	movzwl 0x8(%rsi),%eax
    bfba:	eb 1e                	jmp    bfda <gimli::read::unit::Attribute<R>::value+0x5ca>
    bfbc:	8b 46 08             	mov    0x8(%rsi),%eax
    bfbf:	eb 0d                	jmp    bfce <gimli::read::unit::Attribute<R>::value+0x5be>
    bfc1:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bfc5:	48 85 c0             	test   %rax,%rax
    bfc8:	0f 88 c7 01 00 00    	js     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    bfce:	48 3d ff ff 00 00    	cmp    $0xffff,%rax
    bfd4:	0f 87 bb 01 00 00    	ja     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    bfda:	66 89 47 08          	mov    %ax,0x8(%rdi)
    bfde:	48 c7 07 26 00 00 00 	movq   $0x26,(%rdi)
    bfe5:	c3                   	retq   
    bfe6:	0f b6 46 08          	movzbl 0x8(%rsi),%eax
    bfea:	eb 24                	jmp    c010 <gimli::read::unit::Attribute<R>::value+0x600>
    bfec:	0f b7 46 08          	movzwl 0x8(%rsi),%eax
    bff0:	eb 12                	jmp    c004 <gimli::read::unit::Attribute<R>::value+0x5f4>
    bff2:	8b 46 08             	mov    0x8(%rsi),%eax
    bff5:	eb 0d                	jmp    c004 <gimli::read::unit::Attribute<R>::value+0x5f4>
    bff7:	48 8b 46 08          	mov    0x8(%rsi),%rax
    bffb:	48 85 c0             	test   %rax,%rax
    bffe:	0f 88 91 01 00 00    	js     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    c004:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    c00a:	0f 87 85 01 00 00    	ja     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    c010:	88 47 08             	mov    %al,0x8(%rdi)
    c013:	48 c7 07 24 00 00 00 	movq   $0x24,(%rdi)
    c01a:	c3                   	retq   
    c01b:	0f b6 46 08          	movzbl 0x8(%rsi),%eax
    c01f:	eb 24                	jmp    c045 <gimli::read::unit::Attribute<R>::value+0x635>
    c021:	0f b7 46 08          	movzwl 0x8(%rsi),%eax
    c025:	eb 12                	jmp    c039 <gimli::read::unit::Attribute<R>::value+0x629>
    c027:	8b 46 08             	mov    0x8(%rsi),%eax
    c02a:	eb 0d                	jmp    c039 <gimli::read::unit::Attribute<R>::value+0x629>
    c02c:	48 8b 46 08          	mov    0x8(%rsi),%rax
    c030:	48 85 c0             	test   %rax,%rax
    c033:	0f 88 5c 01 00 00    	js     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    c039:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    c03f:	0f 87 50 01 00 00    	ja     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    c045:	88 47 08             	mov    %al,0x8(%rdi)
    c048:	48 c7 07 2a 00 00 00 	movq   $0x2a,(%rdi)
    c04f:	c3                   	retq   
    c050:	0f b6 46 08          	movzbl 0x8(%rsi),%eax
    c054:	eb 24                	jmp    c07a <gimli::read::unit::Attribute<R>::value+0x66a>
    c056:	0f b7 46 08          	movzwl 0x8(%rsi),%eax
    c05a:	eb 12                	jmp    c06e <gimli::read::unit::Attribute<R>::value+0x65e>
    c05c:	8b 46 08             	mov    0x8(%rsi),%eax
    c05f:	eb 0d                	jmp    c06e <gimli::read::unit::Attribute<R>::value+0x65e>
    c061:	48 8b 46 08          	mov    0x8(%rsi),%rax
    c065:	48 85 c0             	test   %rax,%rax
    c068:	0f 88 27 01 00 00    	js     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    c06e:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    c074:	0f 87 1b 01 00 00    	ja     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    c07a:	88 47 08             	mov    %al,0x8(%rdi)
    c07d:	48 c7 07 23 00 00 00 	movq   $0x23,(%rdi)
    c084:	c3                   	retq   
    c085:	0f b6 46 08          	movzbl 0x8(%rsi),%eax
    c089:	eb 18                	jmp    c0a3 <gimli::read::unit::Attribute<R>::value+0x693>
    c08b:	0f b7 46 08          	movzwl 0x8(%rsi),%eax
    c08f:	eb 12                	jmp    c0a3 <gimli::read::unit::Attribute<R>::value+0x693>
    c091:	8b 46 08             	mov    0x8(%rsi),%eax
    c094:	eb 0d                	jmp    c0a3 <gimli::read::unit::Attribute<R>::value+0x693>
    c096:	48 8b 46 08          	mov    0x8(%rsi),%rax
    c09a:	48 85 c0             	test   %rax,%rax
    c09d:	0f 88 f2 00 00 00    	js     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    c0a3:	48 89 47 08          	mov    %rax,0x8(%rdi)
    c0a7:	48 c7 07 27 00 00 00 	movq   $0x27,(%rdi)
    c0ae:	c3                   	retq   
    c0af:	0f b6 46 08          	movzbl 0x8(%rsi),%eax
    c0b3:	eb 24                	jmp    c0d9 <gimli::read::unit::Attribute<R>::value+0x6c9>
    c0b5:	0f b7 46 08          	movzwl 0x8(%rsi),%eax
    c0b9:	eb 12                	jmp    c0cd <gimli::read::unit::Attribute<R>::value+0x6bd>
    c0bb:	8b 46 08             	mov    0x8(%rsi),%eax
    c0be:	eb 0d                	jmp    c0cd <gimli::read::unit::Attribute<R>::value+0x6bd>
    c0c0:	48 8b 46 08          	mov    0x8(%rsi),%rax
    c0c4:	48 85 c0             	test   %rax,%rax
    c0c7:	0f 88 c8 00 00 00    	js     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    c0cd:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    c0d3:	0f 87 bc 00 00 00    	ja     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    c0d9:	88 47 08             	mov    %al,0x8(%rdi)
    c0dc:	48 c7 07 29 00 00 00 	movq   $0x29,(%rdi)
    c0e3:	c3                   	retq   
    c0e4:	0f b6 46 08          	movzbl 0x8(%rsi),%eax
    c0e8:	eb 24                	jmp    c10e <gimli::read::unit::Attribute<R>::value+0x6fe>
    c0ea:	0f b7 46 08          	movzwl 0x8(%rsi),%eax
    c0ee:	eb 12                	jmp    c102 <gimli::read::unit::Attribute<R>::value+0x6f2>
    c0f0:	8b 46 08             	mov    0x8(%rsi),%eax
    c0f3:	eb 0d                	jmp    c102 <gimli::read::unit::Attribute<R>::value+0x6f2>
    c0f5:	48 8b 46 08          	mov    0x8(%rsi),%rax
    c0f9:	48 85 c0             	test   %rax,%rax
    c0fc:	0f 88 93 00 00 00    	js     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    c102:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    c108:	0f 87 87 00 00 00    	ja     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    c10e:	88 47 08             	mov    %al,0x8(%rdi)
    c111:	48 c7 07 20 00 00 00 	movq   $0x20,(%rdi)
    c118:	c3                   	retq   
    c119:	0f b6 46 08          	movzbl 0x8(%rsi),%eax
    c11d:	eb 1c                	jmp    c13b <gimli::read::unit::Attribute<R>::value+0x72b>
    c11f:	0f b7 46 08          	movzwl 0x8(%rsi),%eax
    c123:	eb 0e                	jmp    c133 <gimli::read::unit::Attribute<R>::value+0x723>
    c125:	8b 46 08             	mov    0x8(%rsi),%eax
    c128:	eb 09                	jmp    c133 <gimli::read::unit::Attribute<R>::value+0x723>
    c12a:	48 8b 46 08          	mov    0x8(%rsi),%rax
    c12e:	48 85 c0             	test   %rax,%rax
    c131:	78 62                	js     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    c133:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    c139:	77 5a                	ja     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    c13b:	88 47 08             	mov    %al,0x8(%rdi)
    c13e:	48 c7 07 28 00 00 00 	movq   $0x28,(%rdi)
    c145:	c3                   	retq   
    c146:	0f b6 46 08          	movzbl 0x8(%rsi),%eax
    c14a:	eb 1c                	jmp    c168 <gimli::read::unit::Attribute<R>::value+0x758>
    c14c:	0f b7 46 08          	movzwl 0x8(%rsi),%eax
    c150:	eb 0e                	jmp    c160 <gimli::read::unit::Attribute<R>::value+0x750>
    c152:	8b 46 08             	mov    0x8(%rsi),%eax
    c155:	eb 09                	jmp    c160 <gimli::read::unit::Attribute<R>::value+0x750>
    c157:	48 8b 46 08          	mov    0x8(%rsi),%rax
    c15b:	48 85 c0             	test   %rax,%rax
    c15e:	78 35                	js     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    c160:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    c166:	77 2d                	ja     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    c168:	88 47 08             	mov    %al,0x8(%rdi)
    c16b:	48 c7 07 25 00 00 00 	movq   $0x25,(%rdi)
    c172:	c3                   	retq   
    c173:	0f b6 46 08          	movzbl 0x8(%rsi),%eax
    c177:	eb 21                	jmp    c19a <gimli::read::unit::Attribute<R>::value+0x78a>
    c179:	0f b7 46 08          	movzwl 0x8(%rsi),%eax
    c17d:	eb 0e                	jmp    c18d <gimli::read::unit::Attribute<R>::value+0x77d>
    c17f:	8b 46 08             	mov    0x8(%rsi),%eax
    c182:	eb 09                	jmp    c18d <gimli::read::unit::Attribute<R>::value+0x77d>
    c184:	48 8b 46 08          	mov    0x8(%rsi),%rax
    c188:	48 85 c0             	test   %rax,%rax
    c18b:	78 08                	js     c195 <gimli::read::unit::Attribute<R>::value+0x785>
    c18d:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    c193:	76 05                	jbe    c19a <gimli::read::unit::Attribute<R>::value+0x78a>
    c195:	e9 a6 0b 00 00       	jmpq   cd40 <<gimli::read::unit::AttributeValue<R,Offset> as core::clone::Clone>::clone>
    c19a:	88 47 08             	mov    %al,0x8(%rdi)
    c19d:	48 c7 07 21 00 00 00 	movq   $0x21,(%rdi)
    c1a4:	c3                   	retq   
    c1a5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    c1ac:	00 00 00 
    c1af:	90                   	nop

000000000000c1b0 <gimli::read::dwarf::Dwarf<R>::attr_string>:
    c1b0:	48 83 ec 18          	sub    $0x18,%rsp
    c1b4:	48 83 c1 e6          	add    $0xffffffffffffffe6,%rcx
    c1b8:	48 83 f9 05          	cmp    $0x5,%rcx
    c1bc:	0f 87 96 00 00 00    	ja     c258 <gimli::read::dwarf::Dwarf<R>::attr_string+0xa8>
    c1c2:	48 8d 05 2f a8 02 00 	lea    0x2a82f(%rip),%rax        # 369f8 <_fini+0x1974>
    c1c9:	48 63 0c 88          	movslq (%rax,%rcx,4),%rcx
    c1cd:	48 01 c1             	add    %rax,%rcx
    c1d0:	ff e1                	jmpq   *%rcx
    c1d2:	48 8b 46 50          	mov    0x50(%rsi),%rax
    c1d6:	48 8b 4e 58          	mov    0x58(%rsi),%rcx
    c1da:	4c 39 c1             	cmp    %r8,%rcx
    c1dd:	0f 82 52 01 00 00    	jb     c335 <gimli::read::dwarf::Dwarf<R>::attr_string+0x185>
    c1e3:	4c 01 c0             	add    %r8,%rax
    c1e6:	4c 29 c1             	sub    %r8,%rcx
    c1e9:	0f 84 46 01 00 00    	je     c335 <gimli::read::dwarf::Dwarf<R>::attr_string+0x185>
    c1ef:	31 d2                	xor    %edx,%edx
    c1f1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    c1f8:	00 00 00 
    c1fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    c200:	80 3c 10 00          	cmpb   $0x0,(%rax,%rdx,1)
    c204:	0f 84 44 01 00 00    	je     c34e <gimli::read::dwarf::Dwarf<R>::attr_string+0x19e>
    c20a:	48 83 c2 01          	add    $0x1,%rdx
    c20e:	48 39 d1             	cmp    %rdx,%rcx
    c211:	75 ed                	jne    c200 <gimli::read::dwarf::Dwarf<R>::attr_string+0x50>
    c213:	e9 1d 01 00 00       	jmpq   c335 <gimli::read::dwarf::Dwarf<R>::attr_string+0x185>
    c218:	48 8b 46 70          	mov    0x70(%rsi),%rax
    c21c:	48 8b 4e 78          	mov    0x78(%rsi),%rcx
    c220:	4c 39 c1             	cmp    %r8,%rcx
    c223:	0f 82 0c 01 00 00    	jb     c335 <gimli::read::dwarf::Dwarf<R>::attr_string+0x185>
    c229:	4c 01 c0             	add    %r8,%rax
    c22c:	4c 29 c1             	sub    %r8,%rcx
    c22f:	0f 84 00 01 00 00    	je     c335 <gimli::read::dwarf::Dwarf<R>::attr_string+0x185>
    c235:	31 d2                	xor    %edx,%edx
    c237:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    c23e:	00 00 
    c240:	80 3c 10 00          	cmpb   $0x0,(%rax,%rdx,1)
    c244:	0f 84 04 01 00 00    	je     c34e <gimli::read::dwarf::Dwarf<R>::attr_string+0x19e>
    c24a:	48 83 c2 01          	add    $0x1,%rdx
    c24e:	48 39 d1             	cmp    %rdx,%rcx
    c251:	75 ed                	jne    c240 <gimli::read::dwarf::Dwarf<R>::attr_string+0x90>
    c253:	e9 dd 00 00 00       	jmpq   c335 <gimli::read::dwarf::Dwarf<R>::attr_string+0x185>
    c258:	c6 47 08 44          	movb   $0x44,0x8(%rdi)
    c25c:	e9 e0 00 00 00       	jmpq   c341 <gimli::read::dwarf::Dwarf<R>::attr_string+0x191>
    c261:	48 8b 82 90 00 00 00 	mov    0x90(%rdx),%rax
    c268:	4c 8b 56 60          	mov    0x60(%rsi),%r10
    c26c:	48 8b 4e 68          	mov    0x68(%rsi),%rcx
    c270:	41 b9 13 00 00 00    	mov    $0x13,%r9d
    c276:	48 29 c1             	sub    %rax,%rcx
    c279:	72 1f                	jb     c29a <gimli::read::dwarf::Dwarf<R>::attr_string+0xea>
    c27b:	8a 52 31             	mov    0x31(%rdx),%dl
    c27e:	49 01 c2             	add    %rax,%r10
    c281:	31 c0                	xor    %eax,%eax
    c283:	80 fa 08             	cmp    $0x8,%dl
    c286:	0f 94 c0             	sete   %al
    c289:	48 8d 04 85 04 00 00 	lea    0x4(,%rax,4),%rax
    c290:	00 
    c291:	49 0f af c0          	imul   %r8,%rax
    c295:	48 29 c1             	sub    %rax,%rcx
    c298:	73 59                	jae    c2f3 <gimli::read::dwarf::Dwarf<R>::attr_string+0x143>
    c29a:	4c 89 57 10          	mov    %r10,0x10(%rdi)
    c29e:	4c 89 4f 08          	mov    %r9,0x8(%rdi)
    c2a2:	48 c7 07 01 00 00 00 	movq   $0x1,(%rdi)
    c2a9:	48 83 c4 18          	add    $0x18,%rsp
    c2ad:	c3                   	retq   
    c2ae:	48 8b 46 40          	mov    0x40(%rsi),%rax
    c2b2:	48 8b 4e 48          	mov    0x48(%rsi),%rcx
    c2b6:	4c 39 c1             	cmp    %r8,%rcx
    c2b9:	72 7a                	jb     c335 <gimli::read::dwarf::Dwarf<R>::attr_string+0x185>
    c2bb:	4c 01 c0             	add    %r8,%rax
    c2be:	4c 29 c1             	sub    %r8,%rcx
    c2c1:	74 72                	je     c335 <gimli::read::dwarf::Dwarf<R>::attr_string+0x185>
    c2c3:	31 d2                	xor    %edx,%edx
    c2c5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    c2cc:	00 00 00 
    c2cf:	90                   	nop
    c2d0:	80 3c 10 00          	cmpb   $0x0,(%rax,%rdx,1)
    c2d4:	74 78                	je     c34e <gimli::read::dwarf::Dwarf<R>::attr_string+0x19e>
    c2d6:	48 83 c2 01          	add    $0x1,%rdx
    c2da:	48 39 d1             	cmp    %rdx,%rcx
    c2dd:	75 f1                	jne    c2d0 <gimli::read::dwarf::Dwarf<R>::attr_string+0x120>
    c2df:	eb 54                	jmp    c335 <gimli::read::dwarf::Dwarf<R>::attr_string+0x185>
    c2e1:	4c 89 47 08          	mov    %r8,0x8(%rdi)
    c2e5:	4c 89 4f 10          	mov    %r9,0x10(%rdi)
    c2e9:	31 c0                	xor    %eax,%eax
    c2eb:	48 89 07             	mov    %rax,(%rdi)
    c2ee:	48 83 c4 18          	add    $0x18,%rsp
    c2f2:	c3                   	retq   
    c2f3:	49 01 c2             	add    %rax,%r10
    c2f6:	80 fa 08             	cmp    $0x8,%dl
    c2f9:	75 0b                	jne    c306 <gimli::read::dwarf::Dwarf<R>::attr_string+0x156>
    c2fb:	48 83 f9 07          	cmp    $0x7,%rcx
    c2ff:	76 99                	jbe    c29a <gimli::read::dwarf::Dwarf<R>::attr_string+0xea>
    c301:	49 8b 12             	mov    (%r10),%rdx
    c304:	eb 09                	jmp    c30f <gimli::read::dwarf::Dwarf<R>::attr_string+0x15f>
    c306:	48 83 f9 04          	cmp    $0x4,%rcx
    c30a:	72 8e                	jb     c29a <gimli::read::dwarf::Dwarf<R>::attr_string+0xea>
    c30c:	41 8b 12             	mov    (%r10),%edx
    c30f:	48 8b 46 50          	mov    0x50(%rsi),%rax
    c313:	48 8b 4e 58          	mov    0x58(%rsi),%rcx
    c317:	48 39 d1             	cmp    %rdx,%rcx
    c31a:	72 19                	jb     c335 <gimli::read::dwarf::Dwarf<R>::attr_string+0x185>
    c31c:	48 01 d0             	add    %rdx,%rax
    c31f:	48 29 d1             	sub    %rdx,%rcx
    c322:	74 11                	je     c335 <gimli::read::dwarf::Dwarf<R>::attr_string+0x185>
    c324:	31 d2                	xor    %edx,%edx
    c326:	80 3c 10 00          	cmpb   $0x0,(%rax,%rdx,1)
    c32a:	74 22                	je     c34e <gimli::read::dwarf::Dwarf<R>::attr_string+0x19e>
    c32c:	48 83 c2 01          	add    $0x1,%rdx
    c330:	48 39 d1             	cmp    %rdx,%rcx
    c333:	75 f1                	jne    c326 <gimli::read::dwarf::Dwarf<R>::attr_string+0x176>
    c335:	48 89 47 10          	mov    %rax,0x10(%rdi)
    c339:	48 c7 47 08 13 00 00 	movq   $0x13,0x8(%rdi)
    c340:	00 
    c341:	b8 01 00 00 00       	mov    $0x1,%eax
    c346:	48 89 07             	mov    %rax,(%rdi)
    c349:	48 83 c4 18          	add    $0x18,%rsp
    c34d:	c3                   	retq   
    c34e:	48 89 47 08          	mov    %rax,0x8(%rdi)
    c352:	48 89 57 10          	mov    %rdx,0x10(%rdi)
    c356:	31 c0                	xor    %eax,%eax
    c358:	48 89 07             	mov    %rax,(%rdi)
    c35b:	48 83 c4 18          	add    $0x18,%rsp
    c35f:	c3                   	retq   

000000000000c360 <gimli::read::reader::Reader::read_address>:
    c360:	48 83 ec 18          	sub    $0x18,%rsp
    c364:	8d 42 ff             	lea    -0x1(%rdx),%eax
    c367:	3c 07                	cmp    $0x7,%al
    c369:	0f 87 9d 00 00 00    	ja     c40c <gimli::read::reader::Reader::read_address+0xac>
    c36f:	0f b6 c0             	movzbl %al,%eax
    c372:	48 8d 0d 97 a6 02 00 	lea    0x2a697(%rip),%rcx        # 36a10 <_fini+0x198c>
    c379:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    c37d:	48 01 c8             	add    %rcx,%rax
    c380:	ff e0                	jmpq   *%rax
    c382:	48 8b 46 08          	mov    0x8(%rsi),%rax
    c386:	48 85 c0             	test   %rax,%rax
    c389:	74 65                	je     c3f0 <gimli::read::reader::Reader::read_address+0x90>
    c38b:	48 8b 0e             	mov    (%rsi),%rcx
    c38e:	48 8d 51 01          	lea    0x1(%rcx),%rdx
    c392:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    c396:	48 89 16             	mov    %rdx,(%rsi)
    c399:	48 89 46 08          	mov    %rax,0x8(%rsi)
    c39d:	0f b6 01             	movzbl (%rcx),%eax
    c3a0:	e9 90 00 00 00       	jmpq   c435 <gimli::read::reader::Reader::read_address+0xd5>
    c3a5:	48 8b 46 08          	mov    0x8(%rsi),%rax
    c3a9:	48 83 f8 01          	cmp    $0x1,%rax
    c3ad:	76 41                	jbe    c3f0 <gimli::read::reader::Reader::read_address+0x90>
    c3af:	48 8b 0e             	mov    (%rsi),%rcx
    c3b2:	48 8d 51 02          	lea    0x2(%rcx),%rdx
    c3b6:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
    c3ba:	48 89 16             	mov    %rdx,(%rsi)
    c3bd:	48 89 46 08          	mov    %rax,0x8(%rsi)
    c3c1:	0f b7 01             	movzwl (%rcx),%eax
    c3c4:	eb 6f                	jmp    c435 <gimli::read::reader::Reader::read_address+0xd5>
    c3c6:	48 8b 46 08          	mov    0x8(%rsi),%rax
    c3ca:	48 83 f8 03          	cmp    $0x3,%rax
    c3ce:	76 20                	jbe    c3f0 <gimli::read::reader::Reader::read_address+0x90>
    c3d0:	48 8b 0e             	mov    (%rsi),%rcx
    c3d3:	48 8d 51 04          	lea    0x4(%rcx),%rdx
    c3d7:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    c3db:	48 89 16             	mov    %rdx,(%rsi)
    c3de:	48 89 46 08          	mov    %rax,0x8(%rsi)
    c3e2:	8b 01                	mov    (%rcx),%eax
    c3e4:	eb 4f                	jmp    c435 <gimli::read::reader::Reader::read_address+0xd5>
    c3e6:	48 8b 46 08          	mov    0x8(%rsi),%rax
    c3ea:	48 83 f8 08          	cmp    $0x8,%rax
    c3ee:	73 30                	jae    c420 <gimli::read::reader::Reader::read_address+0xc0>
    c3f0:	48 8b 06             	mov    (%rsi),%rax
    c3f3:	48 89 47 10          	mov    %rax,0x10(%rdi)
    c3f7:	48 c7 47 08 13 00 00 	movq   $0x13,0x8(%rdi)
    c3fe:	00 
    c3ff:	b8 01 00 00 00       	mov    $0x1,%eax
    c404:	48 89 07             	mov    %rax,(%rdi)
    c407:	48 83 c4 18          	add    $0x18,%rsp
    c40b:	c3                   	retq   
    c40c:	c6 47 08 17          	movb   $0x17,0x8(%rdi)
    c410:	88 57 09             	mov    %dl,0x9(%rdi)
    c413:	b8 01 00 00 00       	mov    $0x1,%eax
    c418:	48 89 07             	mov    %rax,(%rdi)
    c41b:	48 83 c4 18          	add    $0x18,%rsp
    c41f:	c3                   	retq   
    c420:	48 8b 0e             	mov    (%rsi),%rcx
    c423:	48 8d 51 08          	lea    0x8(%rcx),%rdx
    c427:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
    c42b:	48 89 16             	mov    %rdx,(%rsi)
    c42e:	48 89 46 08          	mov    %rax,0x8(%rsi)
    c432:	48 8b 01             	mov    (%rcx),%rax
    c435:	48 89 47 08          	mov    %rax,0x8(%rdi)
    c439:	31 c0                	xor    %eax,%eax
    c43b:	48 89 07             	mov    %rax,(%rdi)
    c43e:	48 83 c4 18          	add    $0x18,%rsp
    c442:	c3                   	retq   
    c443:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    c44a:	00 00 00 
    c44d:	0f 1f 00             	nopl   (%rax)

000000000000c450 <gimli::read::rnglists::RngListIter<R>::next>:
    c450:	55                   	push   %rbp
    c451:	41 57                	push   %r15
    c453:	41 56                	push   %r14
    c455:	41 55                	push   %r13
    c457:	41 54                	push   %r12
    c459:	53                   	push   %rbx
    c45a:	48 83 ec 38          	sub    $0x38,%rsp
    c45e:	48 89 3c 24          	mov    %rdi,(%rsp)
    c462:	4c 8b 56 08          	mov    0x8(%rsi),%r10
    c466:	4d 85 d2             	test   %r10,%r10
    c469:	0f 84 79 02 00 00    	je     c6e8 <gimli::read::rnglists::RngListIter<R>::next+0x298>
    c46f:	49 89 f4             	mov    %rsi,%r12
    c472:	4c 8d 7c 24 08       	lea    0x8(%rsp),%r15
    c477:	4c 8d 35 b2 a5 02 00 	lea    0x2a5b2(%rip),%r14        # 36a30 <_fini+0x19ac>
    c47e:	31 c0                	xor    %eax,%eax
    c480:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    c485:	41 8b 5c 24 10       	mov    0x10(%r12),%ebx
    c48a:	89 d8                	mov    %ebx,%eax
    c48c:	c1 e8 10             	shr    $0x10,%eax
    c48f:	66 83 f8 04          	cmp    $0x4,%ax
    c493:	77 7b                	ja     c510 <gimli::read::rnglists::RngListIter<R>::next+0xc0>
    c495:	0f b6 eb             	movzbl %bl,%ebp
    c498:	4c 89 ff             	mov    %r15,%rdi
    c49b:	4c 89 e6             	mov    %r12,%rsi
    c49e:	89 ea                	mov    %ebp,%edx
    c4a0:	e8 bb fe ff ff       	callq  c360 <gimli::read::reader::Reader::read_address>
    c4a5:	4c 8b 6c 24 10       	mov    0x10(%rsp),%r13
    c4aa:	48 83 7c 24 08 01    	cmpq   $0x1,0x8(%rsp)
    c4b0:	0f 84 49 04 00 00    	je     c8ff <gimli::read::rnglists::RngListIter<R>::next+0x4af>
    c4b6:	4c 89 ff             	mov    %r15,%rdi
    c4b9:	4c 89 e6             	mov    %r12,%rsi
    c4bc:	89 ea                	mov    %ebp,%edx
    c4be:	e8 9d fe ff ff       	callq  c360 <gimli::read::reader::Reader::read_address>
    c4c3:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    c4c8:	48 83 7c 24 08 01    	cmpq   $0x1,0x8(%rsp)
    c4ce:	0f 84 23 02 00 00    	je     c6f7 <gimli::read::rnglists::RngListIter<R>::next+0x2a7>
    c4d4:	48 89 f0             	mov    %rsi,%rax
    c4d7:	4c 09 e8             	or     %r13,%rax
    c4da:	0f 84 f4 01 00 00    	je     c6d4 <gimli::read::rnglists::RngListIter<R>::next+0x284>
    c4e0:	8d 0c dd 00 00 00 00 	lea    0x0(,%rbx,8),%ecx
    c4e7:	f6 d9                	neg    %cl
    c4e9:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    c4f0:	48 d3 e8             	shr    %cl,%rax
    c4f3:	4c 39 e8             	cmp    %r13,%rax
    c4f6:	4c 0f 44 ee          	cmove  %rsi,%r13
    c4fa:	0f 84 cf 00 00 00    	je     c5cf <gimli::read::rnglists::RngListIter<R>::next+0x17f>
    c500:	e9 8b 06 00 00       	jmpq   cb90 <gimli::read::rnglists::RngListIter<R>::next+0x740>
    c505:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    c50c:	00 00 00 
    c50f:	90                   	nop
    c510:	49 8b 34 24          	mov    (%r12),%rsi
    c514:	48 8d 46 01          	lea    0x1(%rsi),%rax
    c518:	4d 8d 5a ff          	lea    -0x1(%r10),%r11
    c51c:	49 89 04 24          	mov    %rax,(%r12)
    c520:	4d 89 5c 24 08       	mov    %r11,0x8(%r12)
    c525:	0f b6 0e             	movzbl (%rsi),%ecx
    c528:	48 83 f9 07          	cmp    $0x7,%rcx
    c52c:	0f 87 ef 01 00 00    	ja     c721 <gimli::read::rnglists::RngListIter<R>::next+0x2d1>
    c532:	49 63 0c 8e          	movslq (%r14,%rcx,4),%rcx
    c536:	4c 01 f1             	add    %r14,%rcx
    c539:	ff e1                	jmpq   *%rcx
    c53b:	4d 85 db             	test   %r11,%r11
    c53e:	0f 84 82 01 00 00    	je     c6c6 <gimli::read::rnglists::RngListIter<R>::next+0x276>
    c544:	31 c0                	xor    %eax,%eax
    c546:	48 c7 c3 fe ff ff ff 	mov    $0xfffffffffffffffe,%rbx
    c54d:	31 ed                	xor    %ebp,%ebp
    c54f:	31 c9                	xor    %ecx,%ecx
    c551:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
    c556:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    c55d:	00 00 00 
    c560:	48 8d 14 06          	lea    (%rsi,%rax,1),%rdx
    c564:	48 83 c2 02          	add    $0x2,%rdx
    c568:	49 8d 3c 1a          	lea    (%r10,%rbx,1),%rdi
    c56c:	49 89 14 24          	mov    %rdx,(%r12)
    c570:	49 89 7c 24 08       	mov    %rdi,0x8(%r12)
    c575:	0f b6 54 06 01       	movzbl 0x1(%rsi,%rax,1),%edx
    c57a:	83 f9 3f             	cmp    $0x3f,%ecx
    c57d:	75 09                	jne    c588 <gimli::read::rnglists::RngListIter<R>::next+0x138>
    c57f:	80 fa 01             	cmp    $0x1,%dl
    c582:	0f 87 24 01 00 00    	ja     c6ac <gimli::read::rnglists::RngListIter<R>::next+0x25c>
    c588:	0f b6 d2             	movzbl %dl,%edx
    c58b:	89 d7                	mov    %edx,%edi
    c58d:	83 e7 7f             	and    $0x7f,%edi
    c590:	48 d3 e7             	shl    %cl,%rdi
    c593:	48 09 fd             	or     %rdi,%rbp
    c596:	84 d2                	test   %dl,%dl
    c598:	79 4d                	jns    c5e7 <gimli::read::rnglists::RngListIter<R>::next+0x197>
    c59a:	83 c1 07             	add    $0x7,%ecx
    c59d:	48 83 c0 01          	add    $0x1,%rax
    c5a1:	48 83 c3 ff          	add    $0xffffffffffffffff,%rbx
    c5a5:	49 39 c3             	cmp    %rax,%r11
    c5a8:	75 b6                	jne    c560 <gimli::read::rnglists::RngListIter<R>::next+0x110>
    c5aa:	e9 10 01 00 00       	jmpq   c6bf <gimli::read::rnglists::RngListIter<R>::next+0x26f>
    c5af:	90                   	nop
    c5b0:	0f b6 d3             	movzbl %bl,%edx
    c5b3:	4c 89 ff             	mov    %r15,%rdi
    c5b6:	4c 89 e6             	mov    %r12,%rsi
    c5b9:	e8 a2 fd ff ff       	callq  c360 <gimli::read::reader::Reader::read_address>
    c5be:	4c 8b 6c 24 10       	mov    0x10(%rsp),%r13
    c5c3:	48 83 7c 24 08 01    	cmpq   $0x1,0x8(%rsp)
    c5c9:	0f 84 30 03 00 00    	je     c8ff <gimli::read::rnglists::RngListIter<R>::next+0x4af>
    c5cf:	4d 89 6c 24 18       	mov    %r13,0x18(%r12)
    c5d4:	4d 8b 54 24 08       	mov    0x8(%r12),%r10
    c5d9:	4d 85 d2             	test   %r10,%r10
    c5dc:	0f 85 a3 fe ff ff    	jne    c485 <gimli::read::rnglists::RngListIter<R>::next+0x35>
    c5e2:	e9 01 01 00 00       	jmpq   c6e8 <gimli::read::rnglists::RngListIter<R>::next+0x298>
    c5e7:	49 8b 74 24 30       	mov    0x30(%r12),%rsi
    c5ec:	49 8b 44 24 20       	mov    0x20(%r12),%rax
    c5f1:	49 8b 4c 24 28       	mov    0x28(%r12),%rcx
    c5f6:	48 29 f1             	sub    %rsi,%rcx
    c5f9:	0f 82 71 05 00 00    	jb     cb70 <gimli::read::rnglists::RngListIter<R>::next+0x720>
    c5ff:	41 0f b6 54 24 10    	movzbl 0x10(%r12),%edx
    c605:	48 01 f0             	add    %rsi,%rax
    c608:	48 0f af ea          	imul   %rdx,%rbp
    c60c:	48 29 e9             	sub    %rbp,%rcx
    c60f:	0f 82 5b 05 00 00    	jb     cb70 <gimli::read::rnglists::RngListIter<R>::next+0x720>
    c615:	8d 72 ff             	lea    -0x1(%rdx),%esi
    c618:	40 80 fe 07          	cmp    $0x7,%sil
    c61c:	0f 87 e2 00 00 00    	ja     c704 <gimli::read::rnglists::RngListIter<R>::next+0x2b4>
    c622:	48 01 e8             	add    %rbp,%rax
    c625:	40 0f b6 f6          	movzbl %sil,%esi
    c629:	48 8d 3d 80 a4 02 00 	lea    0x2a480(%rip),%rdi        # 36ab0 <_fini+0x1a2c>
    c630:	48 63 34 b7          	movslq (%rdi,%rsi,4),%rsi
    c634:	48 01 fe             	add    %rdi,%rsi
    c637:	ff e6                	jmpq   *%rsi
    c639:	48 85 c9             	test   %rcx,%rcx
    c63c:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    c641:	0f 84 29 05 00 00    	je     cb70 <gimli::read::rnglists::RngListIter<R>::next+0x720>
    c647:	44 0f b6 28          	movzbl (%rax),%r13d
    c64b:	eb 3b                	jmp    c688 <gimli::read::rnglists::RngListIter<R>::next+0x238>
    c64d:	48 83 f9 02          	cmp    $0x2,%rcx
    c651:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    c656:	0f 82 14 05 00 00    	jb     cb70 <gimli::read::rnglists::RngListIter<R>::next+0x720>
    c65c:	44 0f b7 28          	movzwl (%rax),%r13d
    c660:	eb 26                	jmp    c688 <gimli::read::rnglists::RngListIter<R>::next+0x238>
    c662:	48 83 f9 04          	cmp    $0x4,%rcx
    c666:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    c66b:	0f 82 ff 04 00 00    	jb     cb70 <gimli::read::rnglists::RngListIter<R>::next+0x720>
    c671:	44 8b 28             	mov    (%rax),%r13d
    c674:	eb 12                	jmp    c688 <gimli::read::rnglists::RngListIter<R>::next+0x238>
    c676:	48 83 f9 08          	cmp    $0x8,%rcx
    c67a:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    c67f:	0f 82 eb 04 00 00    	jb     cb70 <gimli::read::rnglists::RngListIter<R>::next+0x720>
    c685:	4c 8b 28             	mov    (%rax),%r13
    c688:	48 0b 4c 24 28       	or     0x28(%rsp),%rcx
    c68d:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
    c692:	4c 89 6c 24 30       	mov    %r13,0x30(%rsp)
    c697:	4d 89 6c 24 18       	mov    %r13,0x18(%r12)
    c69c:	4d 8b 54 24 08       	mov    0x8(%r12),%r10
    c6a1:	4d 85 d2             	test   %r10,%r10
    c6a4:	0f 85 db fd ff ff    	jne    c485 <gimli::read::rnglists::RngListIter<R>::next+0x35>
    c6aa:	eb 3c                	jmp    c6e8 <gimli::read::rnglists::RngListIter<R>::next+0x298>
    c6ac:	41 bd 06 00 00 00    	mov    $0x6,%r13d
    c6b2:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
    c6b7:	4c 89 f0             	mov    %r14,%rax
    c6ba:	e9 4f 02 00 00       	jmpq   c90e <gimli::read::rnglists::RngListIter<R>::next+0x4be>
    c6bf:	48 01 f0             	add    %rsi,%rax
    c6c2:	48 83 c0 01          	add    $0x1,%rax
    c6c6:	41 bd 13 00 00 00    	mov    $0x13,%r13d
    c6cc:	45 31 f6             	xor    %r14d,%r14d
    c6cf:	e9 3a 02 00 00       	jmpq   c90e <gimli::read::rnglists::RngListIter<R>::next+0x4be>
    c6d4:	48 8d 05 7d ab 02 00 	lea    0x2ab7d(%rip),%rax        # 37258 <_fini+0x21d4>
    c6db:	49 89 04 24          	mov    %rax,(%r12)
    c6df:	49 c7 44 24 08 00 00 	movq   $0x0,0x8(%r12)
    c6e6:	00 00 
    c6e8:	0f 57 c0             	xorps  %xmm0,%xmm0
    c6eb:	48 8b 04 24          	mov    (%rsp),%rax
    c6ef:	0f 11 00             	movups %xmm0,(%rax)
    c6f2:	e9 45 02 00 00       	jmpq   c93c <gimli::read::rnglists::RngListIter<R>::next+0x4ec>
    c6f7:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c6fc:	49 89 f5             	mov    %rsi,%r13
    c6ff:	e9 00 02 00 00       	jmpq   c904 <gimli::read::rnglists::RngListIter<R>::next+0x4b4>
    c704:	49 81 e0 00 00 ff ff 	and    $0xffffffffffff0000,%r8
    c70b:	48 c1 e2 08          	shl    $0x8,%rdx
    c70f:	4a 8d 0c 02          	lea    (%rdx,%r8,1),%rcx
    c713:	48 83 c1 17          	add    $0x17,%rcx
    c717:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    c71c:	e9 54 04 00 00       	jmpq   cb75 <gimli::read::rnglists::RngListIter<R>::next+0x725>
    c721:	41 bd 2f 00 00 00    	mov    $0x2f,%r13d
    c727:	45 31 f6             	xor    %r14d,%r14d
    c72a:	e9 df 01 00 00       	jmpq   c90e <gimli::read::rnglists::RngListIter<R>::next+0x4be>
    c72f:	4d 85 db             	test   %r11,%r11
    c732:	74 92                	je     c6c6 <gimli::read::rnglists::RngListIter<R>::next+0x276>
    c734:	45 31 f6             	xor    %r14d,%r14d
    c737:	48 c7 c5 fe ff ff ff 	mov    $0xfffffffffffffffe,%rbp
    c73e:	31 db                	xor    %ebx,%ebx
    c740:	45 31 c0             	xor    %r8d,%r8d
    c743:	31 c9                	xor    %ecx,%ecx
    c745:	41 bd 06 00 00 00    	mov    $0x6,%r13d
    c74b:	48 8d 04 1e          	lea    (%rsi,%rbx,1),%rax
    c74f:	48 83 c0 02          	add    $0x2,%rax
    c753:	49 8d 14 2a          	lea    (%r10,%rbp,1),%rdx
    c757:	49 89 04 24          	mov    %rax,(%r12)
    c75b:	49 89 54 24 08       	mov    %rdx,0x8(%r12)
    c760:	44 0f b6 4c 1e 01    	movzbl 0x1(%rsi,%rbx,1),%r9d
    c766:	83 f9 3f             	cmp    $0x3f,%ecx
    c769:	75 0a                	jne    c775 <gimli::read::rnglists::RngListIter<R>::next+0x325>
    c76b:	41 80 f9 01          	cmp    $0x1,%r9b
    c76f:	0f 87 55 03 00 00    	ja     caca <gimli::read::rnglists::RngListIter<R>::next+0x67a>
    c775:	41 0f b6 d1          	movzbl %r9b,%edx
    c779:	89 d7                	mov    %edx,%edi
    c77b:	83 e7 7f             	and    $0x7f,%edi
    c77e:	48 d3 e7             	shl    %cl,%rdi
    c781:	49 09 f8             	or     %rdi,%r8
    c784:	84 d2                	test   %dl,%dl
    c786:	0f 89 22 02 00 00    	jns    c9ae <gimli::read::rnglists::RngListIter<R>::next+0x55e>
    c78c:	83 c1 07             	add    $0x7,%ecx
    c78f:	48 83 c3 01          	add    $0x1,%rbx
    c793:	48 83 c5 ff          	add    $0xffffffffffffffff,%rbp
    c797:	49 39 db             	cmp    %rbx,%r11
    c79a:	75 af                	jne    c74b <gimli::read::rnglists::RngListIter<R>::next+0x2fb>
    c79c:	e9 e4 00 00 00       	jmpq   c885 <gimli::read::rnglists::RngListIter<R>::next+0x435>
    c7a1:	4d 85 db             	test   %r11,%r11
    c7a4:	0f 84 1c ff ff ff    	je     c6c6 <gimli::read::rnglists::RngListIter<R>::next+0x276>
    c7aa:	45 31 f6             	xor    %r14d,%r14d
    c7ad:	48 c7 c5 fe ff ff ff 	mov    $0xfffffffffffffffe,%rbp
    c7b4:	31 db                	xor    %ebx,%ebx
    c7b6:	45 31 c0             	xor    %r8d,%r8d
    c7b9:	31 c9                	xor    %ecx,%ecx
    c7bb:	41 bd 06 00 00 00    	mov    $0x6,%r13d
    c7c1:	48 8d 04 1e          	lea    (%rsi,%rbx,1),%rax
    c7c5:	48 83 c0 02          	add    $0x2,%rax
    c7c9:	49 8d 14 2a          	lea    (%r10,%rbp,1),%rdx
    c7cd:	49 89 04 24          	mov    %rax,(%r12)
    c7d1:	49 89 54 24 08       	mov    %rdx,0x8(%r12)
    c7d6:	44 0f b6 4c 1e 01    	movzbl 0x1(%rsi,%rbx,1),%r9d
    c7dc:	83 f9 3f             	cmp    $0x3f,%ecx
    c7df:	75 0a                	jne    c7eb <gimli::read::rnglists::RngListIter<R>::next+0x39b>
    c7e1:	41 80 f9 01          	cmp    $0x1,%r9b
    c7e5:	0f 87 df 02 00 00    	ja     caca <gimli::read::rnglists::RngListIter<R>::next+0x67a>
    c7eb:	41 0f b6 d1          	movzbl %r9b,%edx
    c7ef:	89 d7                	mov    %edx,%edi
    c7f1:	83 e7 7f             	and    $0x7f,%edi
    c7f4:	48 d3 e7             	shl    %cl,%rdi
    c7f7:	49 09 f8             	or     %rdi,%r8
    c7fa:	84 d2                	test   %dl,%dl
    c7fc:	0f 89 0c 02 00 00    	jns    ca0e <gimli::read::rnglists::RngListIter<R>::next+0x5be>
    c802:	83 c1 07             	add    $0x7,%ecx
    c805:	48 83 c3 01          	add    $0x1,%rbx
    c809:	48 83 c5 ff          	add    $0xffffffffffffffff,%rbp
    c80d:	49 39 db             	cmp    %rbx,%r11
    c810:	75 af                	jne    c7c1 <gimli::read::rnglists::RngListIter<R>::next+0x371>
    c812:	eb 71                	jmp    c885 <gimli::read::rnglists::RngListIter<R>::next+0x435>
    c814:	4d 85 db             	test   %r11,%r11
    c817:	0f 84 a9 fe ff ff    	je     c6c6 <gimli::read::rnglists::RngListIter<R>::next+0x276>
    c81d:	45 31 f6             	xor    %r14d,%r14d
    c820:	48 c7 c5 fe ff ff ff 	mov    $0xfffffffffffffffe,%rbp
    c827:	31 db                	xor    %ebx,%ebx
    c829:	45 31 c0             	xor    %r8d,%r8d
    c82c:	31 c9                	xor    %ecx,%ecx
    c82e:	41 bd 06 00 00 00    	mov    $0x6,%r13d
    c834:	48 8d 04 1e          	lea    (%rsi,%rbx,1),%rax
    c838:	48 83 c0 02          	add    $0x2,%rax
    c83c:	49 8d 14 2a          	lea    (%r10,%rbp,1),%rdx
    c840:	49 89 04 24          	mov    %rax,(%r12)
    c844:	49 89 54 24 08       	mov    %rdx,0x8(%r12)
    c849:	44 0f b6 4c 1e 01    	movzbl 0x1(%rsi,%rbx,1),%r9d
    c84f:	83 f9 3f             	cmp    $0x3f,%ecx
    c852:	75 0a                	jne    c85e <gimli::read::rnglists::RngListIter<R>::next+0x40e>
    c854:	41 80 f9 01          	cmp    $0x1,%r9b
    c858:	0f 87 6c 02 00 00    	ja     caca <gimli::read::rnglists::RngListIter<R>::next+0x67a>
    c85e:	41 0f b6 d1          	movzbl %r9b,%edx
    c862:	89 d7                	mov    %edx,%edi
    c864:	83 e7 7f             	and    $0x7f,%edi
    c867:	48 d3 e7             	shl    %cl,%rdi
    c86a:	49 09 f8             	or     %rdi,%r8
    c86d:	84 d2                	test   %dl,%dl
    c86f:	0f 89 f9 01 00 00    	jns    ca6e <gimli::read::rnglists::RngListIter<R>::next+0x61e>
    c875:	83 c1 07             	add    $0x7,%ecx
    c878:	48 83 c3 01          	add    $0x1,%rbx
    c87c:	48 83 c5 ff          	add    $0xffffffffffffffff,%rbp
    c880:	49 39 db             	cmp    %rbx,%r11
    c883:	75 af                	jne    c834 <gimli::read::rnglists::RngListIter<R>::next+0x3e4>
    c885:	48 8d 04 1e          	lea    (%rsi,%rbx,1),%rax
    c889:	48 83 c0 01          	add    $0x1,%rax
    c88d:	e9 34 fe ff ff       	jmpq   c6c6 <gimli::read::rnglists::RngListIter<R>::next+0x276>
    c892:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    c897:	4c 89 e6             	mov    %r12,%rsi
    c89a:	89 da                	mov    %ebx,%edx
    c89c:	e8 bf fa ff ff       	callq  c360 <gimli::read::reader::Reader::read_address>
    c8a1:	4c 8b 6c 24 10       	mov    0x10(%rsp),%r13
    c8a6:	48 83 7c 24 08 01    	cmpq   $0x1,0x8(%rsp)
    c8ac:	74 51                	je     c8ff <gimli::read::rnglists::RngListIter<R>::next+0x4af>
    c8ae:	0f b6 d3             	movzbl %bl,%edx
    c8b1:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    c8b6:	4c 89 e6             	mov    %r12,%rsi
    c8b9:	e8 a2 fa ff ff       	callq  c360 <gimli::read::reader::Reader::read_address>
    c8be:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    c8c3:	48 83 7c 24 08 01    	cmpq   $0x1,0x8(%rsp)
    c8c9:	0f 85 e6 02 00 00    	jne    cbb5 <gimli::read::rnglists::RngListIter<R>::next+0x765>
    c8cf:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c8d4:	49 89 f6             	mov    %rsi,%r14
    c8d7:	49 81 e6 00 ff ff ff 	and    $0xffffffffffffff00,%r14
    c8de:	49 89 f5             	mov    %rsi,%r13
    c8e1:	eb 2b                	jmp    c90e <gimli::read::rnglists::RngListIter<R>::next+0x4be>
    c8e3:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    c8e8:	4c 89 e6             	mov    %r12,%rsi
    c8eb:	89 da                	mov    %ebx,%edx
    c8ed:	e8 6e fa ff ff       	callq  c360 <gimli::read::reader::Reader::read_address>
    c8f2:	4c 8b 6c 24 10       	mov    0x10(%rsp),%r13
    c8f7:	48 83 7c 24 08 01    	cmpq   $0x1,0x8(%rsp)
    c8fd:	75 4c                	jne    c94b <gimli::read::rnglists::RngListIter<R>::next+0x4fb>
    c8ff:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c904:	4d 89 ee             	mov    %r13,%r14
    c907:	49 81 e6 00 ff ff ff 	and    $0xffffffffffffff00,%r14
    c90e:	48 8b 34 24          	mov    (%rsp),%rsi
    c912:	41 0f b6 cd          	movzbl %r13b,%ecx
    c916:	4c 09 f1             	or     %r14,%rcx
    c919:	48 8d 15 38 a9 02 00 	lea    0x2a938(%rip),%rdx        # 37258 <_fini+0x21d4>
    c920:	49 89 14 24          	mov    %rdx,(%r12)
    c924:	49 c7 44 24 08 00 00 	movq   $0x0,0x8(%r12)
    c92b:	00 00 
    c92d:	48 89 46 10          	mov    %rax,0x10(%rsi)
    c931:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
    c935:	48 c7 06 01 00 00 00 	movq   $0x1,(%rsi)
    c93c:	48 83 c4 38          	add    $0x38,%rsp
    c940:	5b                   	pop    %rbx
    c941:	41 5c                	pop    %r12
    c943:	41 5d                	pop    %r13
    c945:	41 5e                	pop    %r14
    c947:	41 5f                	pop    %r15
    c949:	5d                   	pop    %rbp
    c94a:	c3                   	retq   
    c94b:	49 8b 54 24 08       	mov    0x8(%r12),%rdx
    c950:	48 85 d2             	test   %rdx,%rdx
    c953:	0f 84 78 01 00 00    	je     cad1 <gimli::read::rnglists::RngListIter<R>::next+0x681>
    c959:	49 8b 3c 24          	mov    (%r12),%rdi
    c95d:	48 83 c2 ff          	add    $0xffffffffffffffff,%rdx
    c961:	45 31 f6             	xor    %r14d,%r14d
    c964:	31 f6                	xor    %esi,%esi
    c966:	31 c9                	xor    %ecx,%ecx
    c968:	48 8d 47 01          	lea    0x1(%rdi),%rax
    c96c:	49 89 04 24          	mov    %rax,(%r12)
    c970:	49 89 54 24 08       	mov    %rdx,0x8(%r12)
    c975:	0f b6 1f             	movzbl (%rdi),%ebx
    c978:	83 f9 3f             	cmp    $0x3f,%ecx
    c97b:	75 09                	jne    c986 <gimli::read::rnglists::RngListIter<R>::next+0x536>
    c97d:	80 fb 01             	cmp    $0x1,%bl
    c980:	0f 87 54 01 00 00    	ja     cada <gimli::read::rnglists::RngListIter<R>::next+0x68a>
    c986:	0f b6 eb             	movzbl %bl,%ebp
    c989:	89 ef                	mov    %ebp,%edi
    c98b:	83 e7 7f             	and    $0x7f,%edi
    c98e:	48 d3 e7             	shl    %cl,%rdi
    c991:	48 09 fe             	or     %rdi,%rsi
    c994:	40 84 ed             	test   %bpl,%bpl
    c997:	0f 89 e7 02 00 00    	jns    cc84 <gimli::read::rnglists::RngListIter<R>::next+0x834>
    c99d:	83 c1 07             	add    $0x7,%ecx
    c9a0:	48 89 c7             	mov    %rax,%rdi
    c9a3:	48 83 c2 ff          	add    $0xffffffffffffffff,%rdx
    c9a7:	72 bf                	jb     c968 <gimli::read::rnglists::RngListIter<R>::next+0x518>
    c9a9:	e9 18 fd ff ff       	jmpq   c6c6 <gimli::read::rnglists::RngListIter<R>::next+0x276>
    c9ae:	49 8d 4a fe          	lea    -0x2(%r10),%rcx
    c9b2:	48 39 d9             	cmp    %rbx,%rcx
    c9b5:	0f 84 0b fd ff ff    	je     c6c6 <gimli::read::rnglists::RngListIter<R>::next+0x276>
    c9bb:	49 29 da             	sub    %rbx,%r10
    c9be:	49 83 c2 fd          	add    $0xfffffffffffffffd,%r10
    c9c2:	45 31 f6             	xor    %r14d,%r14d
    c9c5:	31 f6                	xor    %esi,%esi
    c9c7:	31 c9                	xor    %ecx,%ecx
    c9c9:	48 89 c2             	mov    %rax,%rdx
    c9cc:	48 83 c0 01          	add    $0x1,%rax
    c9d0:	49 89 04 24          	mov    %rax,(%r12)
    c9d4:	4d 89 54 24 08       	mov    %r10,0x8(%r12)
    c9d9:	0f b6 1a             	movzbl (%rdx),%ebx
    c9dc:	83 f9 3f             	cmp    $0x3f,%ecx
    c9df:	75 09                	jne    c9ea <gimli::read::rnglists::RngListIter<R>::next+0x59a>
    c9e1:	80 fb 01             	cmp    $0x1,%bl
    c9e4:	0f 87 e0 00 00 00    	ja     caca <gimli::read::rnglists::RngListIter<R>::next+0x67a>
    c9ea:	0f b6 d3             	movzbl %bl,%edx
    c9ed:	89 d7                	mov    %edx,%edi
    c9ef:	83 e7 7f             	and    $0x7f,%edi
    c9f2:	48 d3 e7             	shl    %cl,%rdi
    c9f5:	48 09 fe             	or     %rdi,%rsi
    c9f8:	84 d2                	test   %dl,%dl
    c9fa:	0f 89 e7 00 00 00    	jns    cae7 <gimli::read::rnglists::RngListIter<R>::next+0x697>
    ca00:	83 c1 07             	add    $0x7,%ecx
    ca03:	49 83 c2 ff          	add    $0xffffffffffffffff,%r10
    ca07:	72 c0                	jb     c9c9 <gimli::read::rnglists::RngListIter<R>::next+0x579>
    ca09:	e9 b8 fc ff ff       	jmpq   c6c6 <gimli::read::rnglists::RngListIter<R>::next+0x276>
    ca0e:	49 8d 4a fe          	lea    -0x2(%r10),%rcx
    ca12:	48 39 d9             	cmp    %rbx,%rcx
    ca15:	0f 84 ab fc ff ff    	je     c6c6 <gimli::read::rnglists::RngListIter<R>::next+0x276>
    ca1b:	49 29 da             	sub    %rbx,%r10
    ca1e:	49 83 c2 fd          	add    $0xfffffffffffffffd,%r10
    ca22:	45 31 f6             	xor    %r14d,%r14d
    ca25:	31 f6                	xor    %esi,%esi
    ca27:	31 c9                	xor    %ecx,%ecx
    ca29:	48 89 c2             	mov    %rax,%rdx
    ca2c:	48 83 c0 01          	add    $0x1,%rax
    ca30:	49 89 04 24          	mov    %rax,(%r12)
    ca34:	4d 89 54 24 08       	mov    %r10,0x8(%r12)
    ca39:	0f b6 1a             	movzbl (%rdx),%ebx
    ca3c:	83 f9 3f             	cmp    $0x3f,%ecx
    ca3f:	75 09                	jne    ca4a <gimli::read::rnglists::RngListIter<R>::next+0x5fa>
    ca41:	80 fb 01             	cmp    $0x1,%bl
    ca44:	0f 87 80 00 00 00    	ja     caca <gimli::read::rnglists::RngListIter<R>::next+0x67a>
    ca4a:	0f b6 d3             	movzbl %bl,%edx
    ca4d:	89 d7                	mov    %edx,%edi
    ca4f:	83 e7 7f             	and    $0x7f,%edi
    ca52:	48 d3 e7             	shl    %cl,%rdi
    ca55:	48 09 fe             	or     %rdi,%rsi
    ca58:	84 d2                	test   %dl,%dl
    ca5a:	0f 89 e6 00 00 00    	jns    cb46 <gimli::read::rnglists::RngListIter<R>::next+0x6f6>
    ca60:	83 c1 07             	add    $0x7,%ecx
    ca63:	49 83 c2 ff          	add    $0xffffffffffffffff,%r10
    ca67:	72 c0                	jb     ca29 <gimli::read::rnglists::RngListIter<R>::next+0x5d9>
    ca69:	e9 58 fc ff ff       	jmpq   c6c6 <gimli::read::rnglists::RngListIter<R>::next+0x276>
    ca6e:	49 8d 4a fe          	lea    -0x2(%r10),%rcx
    ca72:	48 39 d9             	cmp    %rbx,%rcx
    ca75:	0f 84 4b fc ff ff    	je     c6c6 <gimli::read::rnglists::RngListIter<R>::next+0x276>
    ca7b:	49 29 da             	sub    %rbx,%r10
    ca7e:	49 83 c2 fd          	add    $0xfffffffffffffffd,%r10
    ca82:	45 31 f6             	xor    %r14d,%r14d
    ca85:	31 f6                	xor    %esi,%esi
    ca87:	31 c9                	xor    %ecx,%ecx
    ca89:	48 89 c2             	mov    %rax,%rdx
    ca8c:	48 83 c0 01          	add    $0x1,%rax
    ca90:	49 89 04 24          	mov    %rax,(%r12)
    ca94:	4d 89 54 24 08       	mov    %r10,0x8(%r12)
    ca99:	0f b6 1a             	movzbl (%rdx),%ebx
    ca9c:	83 f9 3f             	cmp    $0x3f,%ecx
    ca9f:	75 05                	jne    caa6 <gimli::read::rnglists::RngListIter<R>::next+0x656>
    caa1:	80 fb 01             	cmp    $0x1,%bl
    caa4:	77 24                	ja     caca <gimli::read::rnglists::RngListIter<R>::next+0x67a>
    caa6:	0f b6 d3             	movzbl %bl,%edx
    caa9:	89 d7                	mov    %edx,%edi
    caab:	83 e7 7f             	and    $0x7f,%edi
    caae:	48 d3 e7             	shl    %cl,%rdi
    cab1:	48 09 fe             	or     %rdi,%rsi
    cab4:	84 d2                	test   %dl,%dl
    cab6:	0f 89 d1 00 00 00    	jns    cb8d <gimli::read::rnglists::RngListIter<R>::next+0x73d>
    cabc:	83 c1 07             	add    $0x7,%ecx
    cabf:	49 83 c2 ff          	add    $0xffffffffffffffff,%r10
    cac3:	72 c4                	jb     ca89 <gimli::read::rnglists::RngListIter<R>::next+0x639>
    cac5:	e9 fc fb ff ff       	jmpq   c6c6 <gimli::read::rnglists::RngListIter<R>::next+0x276>
    caca:	31 c0                	xor    %eax,%eax
    cacc:	e9 3d fe ff ff       	jmpq   c90e <gimli::read::rnglists::RngListIter<R>::next+0x4be>
    cad1:	49 8b 04 24          	mov    (%r12),%rax
    cad5:	e9 ec fb ff ff       	jmpq   c6c6 <gimli::read::rnglists::RngListIter<R>::next+0x276>
    cada:	41 bd 06 00 00 00    	mov    $0x6,%r13d
    cae0:	31 c0                	xor    %eax,%eax
    cae2:	e9 27 fe ff ff       	jmpq   c90e <gimli::read::rnglists::RngListIter<R>::next+0x4be>
    cae7:	49 8b 7c 24 30       	mov    0x30(%r12),%rdi
    caec:	49 8b 44 24 20       	mov    0x20(%r12),%rax
    caf1:	49 8b 54 24 28       	mov    0x28(%r12),%rdx
    caf6:	48 29 fa             	sub    %rdi,%rdx
    caf9:	72 75                	jb     cb70 <gimli::read::rnglists::RngListIter<R>::next+0x720>
    cafb:	41 0f b6 4c 24 10    	movzbl 0x10(%r12),%ecx
    cb01:	48 01 f8             	add    %rdi,%rax
    cb04:	4c 0f af c1          	imul   %rcx,%r8
    cb08:	48 89 d7             	mov    %rdx,%rdi
    cb0b:	4c 29 c7             	sub    %r8,%rdi
    cb0e:	72 60                	jb     cb70 <gimli::read::rnglists::RngListIter<R>::next+0x720>
    cb10:	8d 69 ff             	lea    -0x1(%rcx),%ebp
    cb13:	40 80 fd 07          	cmp    $0x7,%bpl
    cb17:	0f 87 b0 01 00 00    	ja     cccd <gimli::read::rnglists::RngListIter<R>::next+0x87d>
    cb1d:	49 01 c0             	add    %rax,%r8
    cb20:	40 0f b6 ed          	movzbl %bpl,%ebp
    cb24:	48 8d 1d 45 9f 02 00 	lea    0x29f45(%rip),%rbx        # 36a70 <_fini+0x19ec>
    cb2b:	48 63 2c ab          	movslq (%rbx,%rbp,4),%rbp
    cb2f:	48 01 dd             	add    %rbx,%rbp
    cb32:	ff e5                	jmpq   *%rbp
    cb34:	48 85 ff             	test   %rdi,%rdi
    cb37:	0f 84 0e 01 00 00    	je     cc4b <gimli::read::rnglists::RngListIter<R>::next+0x7fb>
    cb3d:	45 0f b6 28          	movzbl (%r8),%r13d
    cb41:	e9 49 01 00 00       	jmpq   cc8f <gimli::read::rnglists::RngListIter<R>::next+0x83f>
    cb46:	49 8b 7c 24 30       	mov    0x30(%r12),%rdi
    cb4b:	49 8b 44 24 20       	mov    0x20(%r12),%rax
    cb50:	49 8b 54 24 28       	mov    0x28(%r12),%rdx
    cb55:	48 29 fa             	sub    %rdi,%rdx
    cb58:	72 16                	jb     cb70 <gimli::read::rnglists::RngListIter<R>::next+0x720>
    cb5a:	41 0f b6 4c 24 10    	movzbl 0x10(%r12),%ecx
    cb60:	48 01 f8             	add    %rdi,%rax
    cb63:	4c 0f af c1          	imul   %rcx,%r8
    cb67:	4c 29 c2             	sub    %r8,%rdx
    cb6a:	0f 83 8a 00 00 00    	jae    cbfa <gimli::read::rnglists::RngListIter<R>::next+0x7aa>
    cb70:	b9 13 00 00 00       	mov    $0x13,%ecx
    cb75:	48 8b 14 24          	mov    (%rsp),%rdx
    cb79:	48 89 42 10          	mov    %rax,0x10(%rdx)
    cb7d:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    cb81:	48 c7 02 01 00 00 00 	movq   $0x1,(%rdx)
    cb88:	e9 af fd ff ff       	jmpq   c93c <gimli::read::rnglists::RngListIter<R>::next+0x4ec>
    cb8d:	4d 89 c5             	mov    %r8,%r13
    cb90:	49 8b 44 24 18       	mov    0x18(%r12),%rax
    cb95:	41 8a 4c 24 10       	mov    0x10(%r12),%cl
    cb9a:	c0 e1 03             	shl    $0x3,%cl
    cb9d:	f6 d9                	neg    %cl
    cb9f:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
    cba6:	48 d3 ea             	shr    %cl,%rdx
    cba9:	49 01 c5             	add    %rax,%r13
    cbac:	49 21 d5             	and    %rdx,%r13
    cbaf:	48 01 c6             	add    %rax,%rsi
    cbb2:	48 21 d6             	and    %rdx,%rsi
    cbb5:	49 39 f5             	cmp    %rsi,%r13
    cbb8:	76 28                	jbe    cbe2 <gimli::read::rnglists::RngListIter<R>::next+0x792>
    cbba:	48 8d 05 97 a6 02 00 	lea    0x2a697(%rip),%rax        # 37258 <_fini+0x21d4>
    cbc1:	49 89 04 24          	mov    %rax,(%r12)
    cbc5:	49 c7 44 24 08 00 00 	movq   $0x0,0x8(%r12)
    cbcc:	00 00 
    cbce:	48 8b 04 24          	mov    (%rsp),%rax
    cbd2:	c6 40 08 2f          	movb   $0x2f,0x8(%rax)
    cbd6:	48 c7 00 01 00 00 00 	movq   $0x1,(%rax)
    cbdd:	e9 5a fd ff ff       	jmpq   c93c <gimli::read::rnglists::RngListIter<R>::next+0x4ec>
    cbe2:	48 8b 04 24          	mov    (%rsp),%rax
    cbe6:	4c 89 68 10          	mov    %r13,0x10(%rax)
    cbea:	48 89 70 18          	mov    %rsi,0x18(%rax)
    cbee:	0f 28 05 3b 94 02 00 	movaps 0x2943b(%rip),%xmm0        # 36030 <_fini+0xfac>
    cbf5:	e9 f5 fa ff ff       	jmpq   c6ef <gimli::read::rnglists::RngListIter<R>::next+0x29f>
    cbfa:	8d 79 ff             	lea    -0x1(%rcx),%edi
    cbfd:	40 80 ff 07          	cmp    $0x7,%dil
    cc01:	0f 87 c6 00 00 00    	ja     cccd <gimli::read::rnglists::RngListIter<R>::next+0x87d>
    cc07:	4c 01 c0             	add    %r8,%rax
    cc0a:	40 0f b6 ff          	movzbl %dil,%edi
    cc0e:	48 8d 2d 3b 9e 02 00 	lea    0x29e3b(%rip),%rbp        # 36a50 <_fini+0x19cc>
    cc15:	48 63 7c bd 00       	movslq 0x0(%rbp,%rdi,4),%rdi
    cc1a:	48 01 ef             	add    %rbp,%rdi
    cc1d:	ff e7                	jmpq   *%rdi
    cc1f:	48 85 d2             	test   %rdx,%rdx
    cc22:	0f 84 48 ff ff ff    	je     cb70 <gimli::read::rnglists::RngListIter<R>::next+0x720>
    cc28:	44 0f b6 28          	movzbl (%rax),%r13d
    cc2c:	eb 56                	jmp    cc84 <gimli::read::rnglists::RngListIter<R>::next+0x834>
    cc2e:	48 83 ff 02          	cmp    $0x2,%rdi
    cc32:	72 17                	jb     cc4b <gimli::read::rnglists::RngListIter<R>::next+0x7fb>
    cc34:	45 0f b7 28          	movzwl (%r8),%r13d
    cc38:	eb 55                	jmp    cc8f <gimli::read::rnglists::RngListIter<R>::next+0x83f>
    cc3a:	48 83 ff 04          	cmp    $0x4,%rdi
    cc3e:	72 0b                	jb     cc4b <gimli::read::rnglists::RngListIter<R>::next+0x7fb>
    cc40:	45 8b 28             	mov    (%r8),%r13d
    cc43:	eb 4a                	jmp    cc8f <gimli::read::rnglists::RngListIter<R>::next+0x83f>
    cc45:	48 83 ff 08          	cmp    $0x8,%rdi
    cc49:	73 41                	jae    cc8c <gimli::read::rnglists::RngListIter<R>::next+0x83c>
    cc4b:	b9 13 00 00 00       	mov    $0x13,%ecx
    cc50:	4c 89 c0             	mov    %r8,%rax
    cc53:	e9 1d ff ff ff       	jmpq   cb75 <gimli::read::rnglists::RngListIter<R>::next+0x725>
    cc58:	48 83 fa 02          	cmp    $0x2,%rdx
    cc5c:	0f 82 0e ff ff ff    	jb     cb70 <gimli::read::rnglists::RngListIter<R>::next+0x720>
    cc62:	44 0f b7 28          	movzwl (%rax),%r13d
    cc66:	eb 1c                	jmp    cc84 <gimli::read::rnglists::RngListIter<R>::next+0x834>
    cc68:	48 83 fa 04          	cmp    $0x4,%rdx
    cc6c:	0f 82 fe fe ff ff    	jb     cb70 <gimli::read::rnglists::RngListIter<R>::next+0x720>
    cc72:	44 8b 28             	mov    (%rax),%r13d
    cc75:	eb 0d                	jmp    cc84 <gimli::read::rnglists::RngListIter<R>::next+0x834>
    cc77:	48 83 fa 08          	cmp    $0x8,%rdx
    cc7b:	0f 82 ef fe ff ff    	jb     cb70 <gimli::read::rnglists::RngListIter<R>::next+0x720>
    cc81:	4c 8b 28             	mov    (%rax),%r13
    cc84:	4c 01 ee             	add    %r13,%rsi
    cc87:	e9 29 ff ff ff       	jmpq   cbb5 <gimli::read::rnglists::RngListIter<R>::next+0x765>
    cc8c:	4d 8b 28             	mov    (%r8),%r13
    cc8f:	48 0f af f1          	imul   %rcx,%rsi
    cc93:	48 29 f2             	sub    %rsi,%rdx
    cc96:	0f 82 d4 fe ff ff    	jb     cb70 <gimli::read::rnglists::RngListIter<R>::next+0x720>
    cc9c:	8d 79 ff             	lea    -0x1(%rcx),%edi
    cc9f:	40 80 ff 07          	cmp    $0x7,%dil
    cca3:	77 28                	ja     cccd <gimli::read::rnglists::RngListIter<R>::next+0x87d>
    cca5:	48 01 f0             	add    %rsi,%rax
    cca8:	40 0f b6 f7          	movzbl %dil,%esi
    ccac:	48 8d 3d dd 9d 02 00 	lea    0x29ddd(%rip),%rdi        # 36a90 <_fini+0x1a0c>
    ccb3:	48 63 34 b7          	movslq (%rdi,%rsi,4),%rsi
    ccb7:	48 01 fe             	add    %rdi,%rsi
    ccba:	ff e6                	jmpq   *%rsi
    ccbc:	48 85 d2             	test   %rdx,%rdx
    ccbf:	0f 84 ab fe ff ff    	je     cb70 <gimli::read::rnglists::RngListIter<R>::next+0x720>
    ccc5:	0f b6 30             	movzbl (%rax),%esi
    ccc8:	e9 e8 fe ff ff       	jmpq   cbb5 <gimli::read::rnglists::RngListIter<R>::next+0x765>
    cccd:	48 c1 e1 08          	shl    $0x8,%rcx
    ccd1:	48 83 c9 17          	or     $0x17,%rcx
    ccd5:	31 c0                	xor    %eax,%eax
    ccd7:	e9 99 fe ff ff       	jmpq   cb75 <gimli::read::rnglists::RngListIter<R>::next+0x725>
    ccdc:	48 83 fa 02          	cmp    $0x2,%rdx
    cce0:	0f 82 8a fe ff ff    	jb     cb70 <gimli::read::rnglists::RngListIter<R>::next+0x720>
    cce6:	0f b7 30             	movzwl (%rax),%esi
    cce9:	e9 c7 fe ff ff       	jmpq   cbb5 <gimli::read::rnglists::RngListIter<R>::next+0x765>
    ccee:	48 83 fa 04          	cmp    $0x4,%rdx
    ccf2:	0f 82 78 fe ff ff    	jb     cb70 <gimli::read::rnglists::RngListIter<R>::next+0x720>
    ccf8:	8b 30                	mov    (%rax),%esi
    ccfa:	e9 b6 fe ff ff       	jmpq   cbb5 <gimli::read::rnglists::RngListIter<R>::next+0x765>
    ccff:	48 83 fa 08          	cmp    $0x8,%rdx
    cd03:	0f 82 67 fe ff ff    	jb     cb70 <gimli::read::rnglists::RngListIter<R>::next+0x720>
    cd09:	48 8b 30             	mov    (%rax),%rsi
    cd0c:	e9 a4 fe ff ff       	jmpq   cbb5 <gimli::read::rnglists::RngListIter<R>::next+0x765>
    cd11:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    cd18:	00 00 00 
    cd1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000cd20 <<alloc::string::String as core::fmt::Display>::fmt>:
    cd20:	48 89 f2             	mov    %rsi,%rdx
    cd23:	48 8b 07             	mov    (%rdi),%rax
    cd26:	48 8b 77 10          	mov    0x10(%rdi),%rsi
    cd2a:	48 89 c7             	mov    %rax,%rdi
    cd2d:	ff 25 bd 8f 03 00    	jmpq   *0x38fbd(%rip)        # 45cf0 <_GLOBAL_OFFSET_TABLE_+0x360>
    cd33:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    cd3a:	00 00 00 
    cd3d:	0f 1f 00             	nopl   (%rax)

000000000000cd40 <<gimli::read::unit::AttributeValue<R,Offset> as core::clone::Clone>::clone>:
    cd40:	48 8b 06             	mov    (%rsi),%rax
    cd43:	48 8d 0d 86 9d 02 00 	lea    0x29d86(%rip),%rcx        # 36ad0 <_fini+0x1a4c>
    cd4a:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    cd4e:	48 01 c8             	add    %rcx,%rax
    cd51:	ff e0                	jmpq   *%rax
    cd53:	48 8b 46 08          	mov    0x8(%rsi),%rax
    cd57:	48 89 47 08          	mov    %rax,0x8(%rdi)
    cd5b:	31 c0                	xor    %eax,%eax
    cd5d:	48 89 07             	mov    %rax,(%rdi)
    cd60:	c3                   	retq   
    cd61:	0f 10 46 08          	movups 0x8(%rsi),%xmm0
    cd65:	0f 11 47 08          	movups %xmm0,0x8(%rdi)
    cd69:	b8 01 00 00 00       	mov    $0x1,%eax
    cd6e:	48 89 07             	mov    %rax,(%rdi)
    cd71:	c3                   	retq   
    cd72:	8a 46 08             	mov    0x8(%rsi),%al
    cd75:	88 47 08             	mov    %al,0x8(%rdi)
    cd78:	b8 02 00 00 00       	mov    $0x2,%eax
    cd7d:	48 89 07             	mov    %rax,(%rdi)
    cd80:	c3                   	retq   
    cd81:	0f b7 46 08          	movzwl 0x8(%rsi),%eax
    cd85:	66 89 47 08          	mov    %ax,0x8(%rdi)
    cd89:	b8 03 00 00 00       	mov    $0x3,%eax
    cd8e:	48 89 07             	mov    %rax,(%rdi)
    cd91:	c3                   	retq   
    cd92:	8b 46 08             	mov    0x8(%rsi),%eax
    cd95:	89 47 08             	mov    %eax,0x8(%rdi)
    cd98:	b8 04 00 00 00       	mov    $0x4,%eax
    cd9d:	48 89 07             	mov    %rax,(%rdi)
    cda0:	c3                   	retq   
    cda1:	48 8b 46 08          	mov    0x8(%rsi),%rax
    cda5:	48 89 47 08          	mov    %rax,0x8(%rdi)
    cda9:	b8 05 00 00 00       	mov    $0x5,%eax
    cdae:	48 89 07             	mov    %rax,(%rdi)
    cdb1:	c3                   	retq   
    cdb2:	48 8b 46 08          	mov    0x8(%rsi),%rax
    cdb6:	48 89 47 08          	mov    %rax,0x8(%rdi)
    cdba:	b8 06 00 00 00       	mov    $0x6,%eax
    cdbf:	48 89 07             	mov    %rax,(%rdi)
    cdc2:	c3                   	retq   
    cdc3:	48 8b 46 08          	mov    0x8(%rsi),%rax
    cdc7:	48 89 47 08          	mov    %rax,0x8(%rdi)
    cdcb:	b8 07 00 00 00       	mov    $0x7,%eax
    cdd0:	48 89 07             	mov    %rax,(%rdi)
    cdd3:	c3                   	retq   
    cdd4:	0f 10 46 08          	movups 0x8(%rsi),%xmm0
    cdd8:	0f 11 47 08          	movups %xmm0,0x8(%rdi)
    cddc:	b8 08 00 00 00       	mov    $0x8,%eax
    cde1:	48 89 07             	mov    %rax,(%rdi)
    cde4:	c3                   	retq   
    cde5:	80 7e 08 00          	cmpb   $0x0,0x8(%rsi)
    cde9:	0f 95 47 08          	setne  0x8(%rdi)
    cded:	b8 09 00 00 00       	mov    $0x9,%eax
    cdf2:	48 89 07             	mov    %rax,(%rdi)
    cdf5:	c3                   	retq   
    cdf6:	48 8b 46 08          	mov    0x8(%rsi),%rax
    cdfa:	48 89 47 08          	mov    %rax,0x8(%rdi)
    cdfe:	b8 0a 00 00 00       	mov    $0xa,%eax
    ce03:	48 89 07             	mov    %rax,(%rdi)
    ce06:	c3                   	retq   
    ce07:	48 8b 46 08          	mov    0x8(%rsi),%rax
    ce0b:	48 89 47 08          	mov    %rax,0x8(%rdi)
    ce0f:	b8 0b 00 00 00       	mov    $0xb,%eax
    ce14:	48 89 07             	mov    %rax,(%rdi)
    ce17:	c3                   	retq   
    ce18:	48 8b 46 08          	mov    0x8(%rsi),%rax
    ce1c:	48 89 47 08          	mov    %rax,0x8(%rdi)
    ce20:	b8 0c 00 00 00       	mov    $0xc,%eax
    ce25:	48 89 07             	mov    %rax,(%rdi)
    ce28:	c3                   	retq   
    ce29:	48 8b 46 08          	mov    0x8(%rsi),%rax
    ce2d:	48 89 47 08          	mov    %rax,0x8(%rdi)
    ce31:	b8 0d 00 00 00       	mov    $0xd,%eax
    ce36:	48 89 07             	mov    %rax,(%rdi)
    ce39:	c3                   	retq   
    ce3a:	48 8b 46 08          	mov    0x8(%rsi),%rax
    ce3e:	48 89 47 08          	mov    %rax,0x8(%rdi)
    ce42:	b8 0e 00 00 00       	mov    $0xe,%eax
    ce47:	48 89 07             	mov    %rax,(%rdi)
    ce4a:	c3                   	retq   
    ce4b:	48 8b 46 08          	mov    0x8(%rsi),%rax
    ce4f:	48 89 47 08          	mov    %rax,0x8(%rdi)
    ce53:	b8 0f 00 00 00       	mov    $0xf,%eax
    ce58:	48 89 07             	mov    %rax,(%rdi)
    ce5b:	c3                   	retq   
    ce5c:	48 8b 46 08          	mov    0x8(%rsi),%rax
    ce60:	48 89 47 08          	mov    %rax,0x8(%rdi)
    ce64:	b8 10 00 00 00       	mov    $0x10,%eax
    ce69:	48 89 07             	mov    %rax,(%rdi)
    ce6c:	c3                   	retq   
    ce6d:	48 8b 46 08          	mov    0x8(%rsi),%rax
    ce71:	48 89 47 08          	mov    %rax,0x8(%rdi)
    ce75:	b8 11 00 00 00       	mov    $0x11,%eax
    ce7a:	48 89 07             	mov    %rax,(%rdi)
    ce7d:	c3                   	retq   
    ce7e:	48 8b 46 08          	mov    0x8(%rsi),%rax
    ce82:	48 89 47 08          	mov    %rax,0x8(%rdi)
    ce86:	b8 12 00 00 00       	mov    $0x12,%eax
    ce8b:	48 89 07             	mov    %rax,(%rdi)
    ce8e:	c3                   	retq   
    ce8f:	48 8b 46 08          	mov    0x8(%rsi),%rax
    ce93:	48 89 47 08          	mov    %rax,0x8(%rdi)
    ce97:	b8 13 00 00 00       	mov    $0x13,%eax
    ce9c:	48 89 07             	mov    %rax,(%rdi)
    ce9f:	c3                   	retq   
    cea0:	48 8b 46 08          	mov    0x8(%rsi),%rax
    cea4:	48 89 47 08          	mov    %rax,0x8(%rdi)
    cea8:	b8 14 00 00 00       	mov    $0x14,%eax
    cead:	48 89 07             	mov    %rax,(%rdi)
    ceb0:	c3                   	retq   
    ceb1:	48 8b 46 08          	mov    0x8(%rsi),%rax
    ceb5:	48 89 47 08          	mov    %rax,0x8(%rdi)
    ceb9:	b8 15 00 00 00       	mov    $0x15,%eax
    cebe:	48 89 07             	mov    %rax,(%rdi)
    cec1:	c3                   	retq   
    cec2:	48 8b 46 08          	mov    0x8(%rsi),%rax
    cec6:	48 89 47 08          	mov    %rax,0x8(%rdi)
    ceca:	b8 16 00 00 00       	mov    $0x16,%eax
    cecf:	48 89 07             	mov    %rax,(%rdi)
    ced2:	c3                   	retq   
    ced3:	48 8b 46 08          	mov    0x8(%rsi),%rax
    ced7:	48 89 47 08          	mov    %rax,0x8(%rdi)
    cedb:	b8 17 00 00 00       	mov    $0x17,%eax
    cee0:	48 89 07             	mov    %rax,(%rdi)
    cee3:	c3                   	retq   
    cee4:	48 8b 46 08          	mov    0x8(%rsi),%rax
    cee8:	48 89 47 08          	mov    %rax,0x8(%rdi)
    ceec:	b8 18 00 00 00       	mov    $0x18,%eax
    cef1:	48 89 07             	mov    %rax,(%rdi)
    cef4:	c3                   	retq   
    cef5:	48 8b 46 08          	mov    0x8(%rsi),%rax
    cef9:	48 89 47 08          	mov    %rax,0x8(%rdi)
    cefd:	b8 19 00 00 00       	mov    $0x19,%eax
    cf02:	48 89 07             	mov    %rax,(%rdi)
    cf05:	c3                   	retq   
    cf06:	48 8b 46 08          	mov    0x8(%rsi),%rax
    cf0a:	48 89 47 08          	mov    %rax,0x8(%rdi)
    cf0e:	b8 1a 00 00 00       	mov    $0x1a,%eax
    cf13:	48 89 07             	mov    %rax,(%rdi)
    cf16:	c3                   	retq   
    cf17:	48 8b 46 08          	mov    0x8(%rsi),%rax
    cf1b:	48 89 47 08          	mov    %rax,0x8(%rdi)
    cf1f:	b8 1b 00 00 00       	mov    $0x1b,%eax
    cf24:	48 89 07             	mov    %rax,(%rdi)
    cf27:	c3                   	retq   
    cf28:	48 8b 46 08          	mov    0x8(%rsi),%rax
    cf2c:	48 89 47 08          	mov    %rax,0x8(%rdi)
    cf30:	b8 1c 00 00 00       	mov    $0x1c,%eax
    cf35:	48 89 07             	mov    %rax,(%rdi)
    cf38:	c3                   	retq   
    cf39:	48 8b 46 08          	mov    0x8(%rsi),%rax
    cf3d:	48 89 47 08          	mov    %rax,0x8(%rdi)
    cf41:	b8 1d 00 00 00       	mov    $0x1d,%eax
    cf46:	48 89 07             	mov    %rax,(%rdi)
    cf49:	c3                   	retq   
    cf4a:	48 8b 46 08          	mov    0x8(%rsi),%rax
    cf4e:	48 89 47 08          	mov    %rax,0x8(%rdi)
    cf52:	b8 1e 00 00 00       	mov    $0x1e,%eax
    cf57:	48 89 07             	mov    %rax,(%rdi)
    cf5a:	c3                   	retq   
    cf5b:	0f 10 46 08          	movups 0x8(%rsi),%xmm0
    cf5f:	0f 11 47 08          	movups %xmm0,0x8(%rdi)
    cf63:	b8 1f 00 00 00       	mov    $0x1f,%eax
    cf68:	48 89 07             	mov    %rax,(%rdi)
    cf6b:	c3                   	retq   
    cf6c:	8a 46 08             	mov    0x8(%rsi),%al
    cf6f:	88 47 08             	mov    %al,0x8(%rdi)
    cf72:	b8 20 00 00 00       	mov    $0x20,%eax
    cf77:	48 89 07             	mov    %rax,(%rdi)
    cf7a:	c3                   	retq   
    cf7b:	8a 46 08             	mov    0x8(%rsi),%al
    cf7e:	88 47 08             	mov    %al,0x8(%rdi)
    cf81:	b8 21 00 00 00       	mov    $0x21,%eax
    cf86:	48 89 07             	mov    %rax,(%rdi)
    cf89:	c3                   	retq   
    cf8a:	8a 46 08             	mov    0x8(%rsi),%al
    cf8d:	88 47 08             	mov    %al,0x8(%rdi)
    cf90:	b8 22 00 00 00       	mov    $0x22,%eax
    cf95:	48 89 07             	mov    %rax,(%rdi)
    cf98:	c3                   	retq   
    cf99:	8a 46 08             	mov    0x8(%rsi),%al
    cf9c:	88 47 08             	mov    %al,0x8(%rdi)
    cf9f:	b8 23 00 00 00       	mov    $0x23,%eax
    cfa4:	48 89 07             	mov    %rax,(%rdi)
    cfa7:	c3                   	retq   
    cfa8:	8a 46 08             	mov    0x8(%rsi),%al
    cfab:	88 47 08             	mov    %al,0x8(%rdi)
    cfae:	b8 24 00 00 00       	mov    $0x24,%eax
    cfb3:	48 89 07             	mov    %rax,(%rdi)
    cfb6:	c3                   	retq   
    cfb7:	8a 46 08             	mov    0x8(%rsi),%al
    cfba:	88 47 08             	mov    %al,0x8(%rdi)
    cfbd:	b8 25 00 00 00       	mov    $0x25,%eax
    cfc2:	48 89 07             	mov    %rax,(%rdi)
    cfc5:	c3                   	retq   
    cfc6:	0f b7 46 08          	movzwl 0x8(%rsi),%eax
    cfca:	66 89 47 08          	mov    %ax,0x8(%rdi)
    cfce:	b8 26 00 00 00       	mov    $0x26,%eax
    cfd3:	48 89 07             	mov    %rax,(%rdi)
    cfd6:	c3                   	retq   
    cfd7:	48 8b 46 08          	mov    0x8(%rsi),%rax
    cfdb:	48 89 47 08          	mov    %rax,0x8(%rdi)
    cfdf:	b8 27 00 00 00       	mov    $0x27,%eax
    cfe4:	48 89 07             	mov    %rax,(%rdi)
    cfe7:	c3                   	retq   
    cfe8:	8a 46 08             	mov    0x8(%rsi),%al
    cfeb:	88 47 08             	mov    %al,0x8(%rdi)
    cfee:	b8 28 00 00 00       	mov    $0x28,%eax
    cff3:	48 89 07             	mov    %rax,(%rdi)
    cff6:	c3                   	retq   
    cff7:	8a 46 08             	mov    0x8(%rsi),%al
    cffa:	88 47 08             	mov    %al,0x8(%rdi)
    cffd:	b8 29 00 00 00       	mov    $0x29,%eax
    d002:	48 89 07             	mov    %rax,(%rdi)
    d005:	c3                   	retq   
    d006:	8a 46 08             	mov    0x8(%rsi),%al
    d009:	88 47 08             	mov    %al,0x8(%rdi)
    d00c:	b8 2a 00 00 00       	mov    $0x2a,%eax
    d011:	48 89 07             	mov    %rax,(%rdi)
    d014:	c3                   	retq   
    d015:	8a 46 08             	mov    0x8(%rsi),%al
    d018:	88 47 08             	mov    %al,0x8(%rdi)
    d01b:	b8 2b 00 00 00       	mov    $0x2b,%eax
    d020:	48 89 07             	mov    %rax,(%rdi)
    d023:	c3                   	retq   
    d024:	48 8b 46 08          	mov    0x8(%rsi),%rax
    d028:	48 89 47 08          	mov    %rax,0x8(%rdi)
    d02c:	b8 2c 00 00 00       	mov    $0x2c,%eax
    d031:	48 89 07             	mov    %rax,(%rdi)
    d034:	c3                   	retq   
    d035:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    d03c:	00 00 00 
    d03f:	90                   	nop

000000000000d040 <addr2line::ResUnit<R>::parse_lines>:
    d040:	55                   	push   %rbp
    d041:	41 57                	push   %r15
    d043:	41 56                	push   %r14
    d045:	41 55                	push   %r13
    d047:	41 54                	push   %r12
    d049:	53                   	push   %rbx
    d04a:	48 81 ec 08 04 00 00 	sub    $0x408,%rsp
    d051:	48 89 b4 24 a0 03 00 	mov    %rsi,0x3a0(%rsp)
    d058:	00 
    d059:	48 89 94 24 a8 03 00 	mov    %rdx,0x3a8(%rsp)
    d060:	00 
    d061:	83 be 60 01 00 00 2e 	cmpl   $0x2e,0x160(%rsi)
    d068:	75 0d                	jne    d077 <addr2line::ResUnit<R>::parse_lines+0x37>
    d06a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d06e:	f3 0f 7f 07          	movdqu %xmm0,(%rdi)
    d072:	e9 df 32 00 00       	jmpq   10356 <addr2line::ResUnit<R>::parse_lines+0x3316>
    d077:	48 8b 86 b0 01 00 00 	mov    0x1b0(%rsi),%rax
    d07e:	48 83 f8 02          	cmp    $0x2,%rax
    d082:	0f 85 a9 32 00 00    	jne    10331 <addr2line::ResUnit<R>::parse_lines+0x32f1>
    d088:	48 c7 84 24 70 01 00 	movq   $0x8,0x170(%rsp)
    d08f:	00 08 00 00 00 
    d094:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d098:	f3 0f 7f 84 24 78 01 	movdqu %xmm0,0x178(%rsp)
    d09f:	00 00 
    d0a1:	48 c7 84 24 88 01 00 	movq   $0x8,0x188(%rsp)
    d0a8:	00 08 00 00 00 
    d0ad:	f3 0f 7f 84 24 90 01 	movdqu %xmm0,0x190(%rsp)
    d0b4:	00 00 
    d0b6:	4c 8b be f0 00 00 00 	mov    0xf0(%rsi),%r15
    d0bd:	b9 04 00 00 00       	mov    $0x4,%ecx
    d0c2:	31 db                	xor    %ebx,%ebx
    d0c4:	4c 89 f8             	mov    %r15,%rax
    d0c7:	48 f7 e1             	mul    %rcx
    d0ca:	48 89 c5             	mov    %rax,%rbp
    d0cd:	0f 91 c0             	setno  %al
    d0d0:	0f 80 da 33 00 00    	jo     104b0 <addr2line::ResUnit<R>::parse_lines+0x3470>
    d0d6:	48 89 bc 24 08 03 00 	mov    %rdi,0x308(%rsp)
    d0dd:	00 
    d0de:	8b 8e a0 01 00 00    	mov    0x1a0(%rsi),%ecx
    d0e4:	89 8c 24 e0 00 00 00 	mov    %ecx,0xe0(%rsp)
    d0eb:	f3 0f 6f 86 b8 00 00 	movdqu 0xb8(%rsi),%xmm0
    d0f2:	00 
    d0f3:	66 0f 7f 84 24 a0 01 	movdqa %xmm0,0x1a0(%rsp)
    d0fa:	00 00 
    d0fc:	48 8b 8e c8 00 00 00 	mov    0xc8(%rsi),%rcx
    d103:	48 89 8c 24 08 01 00 	mov    %rcx,0x108(%rsp)
    d10a:	00 
    d10b:	44 8b a6 a4 01 00 00 	mov    0x1a4(%rsi),%r12d
    d112:	44 8b ae a8 01 00 00 	mov    0x1a8(%rsi),%r13d
    d119:	8a 8e a9 01 00 00    	mov    0x1a9(%rsi),%cl
    d11f:	88 8c 24 f8 00 00 00 	mov    %cl,0xf8(%rsp)
    d126:	48 8b 8e d0 00 00 00 	mov    0xd0(%rsi),%rcx
    d12d:	48 89 8c 24 68 01 00 	mov    %rcx,0x168(%rsp)
    d134:	00 
    d135:	48 8b 8e d8 00 00 00 	mov    0xd8(%rsi),%rcx
    d13c:	48 89 8c 24 00 01 00 	mov    %rcx,0x100(%rsp)
    d143:	00 
    d144:	48 89 b4 24 f0 00 00 	mov    %rsi,0xf0(%rsp)
    d14b:	00 
    d14c:	4c 8b b6 e0 00 00 00 	mov    0xe0(%rsi),%r14
    d153:	88 c3                	mov    %al,%bl
    d155:	48 01 db             	add    %rbx,%rbx
    d158:	48 85 ed             	test   %rbp,%rbp
    d15b:	74 16                	je     d173 <addr2line::ResUnit<R>::parse_lines+0x133>
    d15d:	48 89 ef             	mov    %rbp,%rdi
    d160:	48 89 de             	mov    %rbx,%rsi
    d163:	ff 15 1f 8a 03 00    	callq  *0x38a1f(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
    d169:	48 85 c0             	test   %rax,%rax
    d16c:	75 11                	jne    d17f <addr2line::ResUnit<R>::parse_lines+0x13f>
    d16e:	e9 86 21 00 00       	jmpq   f2f9 <addr2line::ResUnit<R>::parse_lines+0x22b9>
    d173:	48 89 d8             	mov    %rbx,%rax
    d176:	48 85 c0             	test   %rax,%rax
    d179:	0f 84 7a 21 00 00    	je     f2f9 <addr2line::ResUnit<R>::parse_lines+0x22b9>
    d17f:	48 c1 ed 02          	shr    $0x2,%rbp
    d183:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
    d18a:	00 
    d18b:	48 89 ac 24 d0 00 00 	mov    %rbp,0xd0(%rsp)
    d192:	00 
    d193:	48 c7 84 24 d8 00 00 	movq   $0x0,0xd8(%rsp)
    d19a:	00 00 00 00 00 
    d19f:	48 8d bc 24 c8 00 00 	lea    0xc8(%rsp),%rdi
    d1a6:	00 
    d1a7:	4c 89 fe             	mov    %r15,%rsi
    d1aa:	e8 61 c4 ff ff       	callq  9610 <alloc::vec::Vec<T>::reserve>
    d1af:	4a 8d 14 bd 00 00 00 	lea    0x0(,%r15,4),%rdx
    d1b6:	00 
    d1b7:	48 8b 9c 24 d8 00 00 	mov    0xd8(%rsp),%rbx
    d1be:	00 
    d1bf:	48 8d 3c 9d 00 00 00 	lea    0x0(,%rbx,4),%rdi
    d1c6:	00 
    d1c7:	48 03 bc 24 c8 00 00 	add    0xc8(%rsp),%rdi
    d1ce:	00 
    d1cf:	4c 89 f6             	mov    %r14,%rsi
    d1d2:	ff 15 28 8b 03 00    	callq  *0x38b28(%rip)        # 45d00 <memcpy@GLIBC_2.14>
    d1d8:	4c 01 fb             	add    %r15,%rbx
    d1db:	48 89 9c 24 d8 00 00 	mov    %rbx,0xd8(%rsp)
    d1e2:	00 
    d1e3:	48 8b b4 24 f0 00 00 	mov    0xf0(%rsp),%rsi
    d1ea:	00 
    d1eb:	48 8b 9e 08 01 00 00 	mov    0x108(%rsi),%rbx
    d1f2:	b9 18 00 00 00       	mov    $0x18,%ecx
    d1f7:	31 ed                	xor    %ebp,%ebp
    d1f9:	48 89 d8             	mov    %rbx,%rax
    d1fc:	48 f7 e1             	mul    %rcx
    d1ff:	49 89 c7             	mov    %rax,%r15
    d202:	0f 91 c0             	setno  %al
    d205:	0f 80 ad 32 00 00    	jo     104b8 <addr2line::ResUnit<R>::parse_lines+0x3478>
    d20b:	4c 8b b6 f8 00 00 00 	mov    0xf8(%rsi),%r14
    d212:	40 88 c5             	mov    %al,%bpl
    d215:	48 c1 e5 03          	shl    $0x3,%rbp
    d219:	4d 85 ff             	test   %r15,%r15
    d21c:	0f 84 c8 00 00 00    	je     d2ea <addr2line::ResUnit<R>::parse_lines+0x2aa>
    d222:	4c 89 ff             	mov    %r15,%rdi
    d225:	48 89 ee             	mov    %rbp,%rsi
    d228:	ff 15 5a 89 03 00    	callq  *0x3895a(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
    d22e:	48 89 c1             	mov    %rax,%rcx
    d231:	48 85 c9             	test   %rcx,%rcx
    d234:	0f 84 bc 00 00 00    	je     d2f6 <addr2line::ResUnit<R>::parse_lines+0x2b6>
    d23a:	48 ba ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rdx
    d241:	aa aa aa 
    d244:	4c 89 f8             	mov    %r15,%rax
    d247:	48 f7 e2             	mul    %rdx
    d24a:	48 c1 ea 04          	shr    $0x4,%rdx
    d24e:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    d253:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    d258:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    d25f:	00 00 
    d261:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    d266:	48 89 de             	mov    %rbx,%rsi
    d269:	e8 72 c4 ff ff       	callq  96e0 <alloc::vec::Vec<T>::reserve>
    d26e:	48 8b 6c 24 18       	mov    0x18(%rsp),%rbp
    d273:	48 8d 3c 6d 00 00 00 	lea    0x0(,%rbp,2),%rdi
    d27a:	00 
    d27b:	48 01 ef             	add    %rbp,%rdi
    d27e:	48 c1 e7 03          	shl    $0x3,%rdi
    d282:	48 03 7c 24 08       	add    0x8(%rsp),%rdi
    d287:	4c 89 f6             	mov    %r14,%rsi
    d28a:	4c 89 fa             	mov    %r15,%rdx
    d28d:	ff 15 6d 8a 03 00    	callq  *0x38a6d(%rip)        # 45d00 <memcpy@GLIBC_2.14>
    d293:	48 01 eb             	add    %rbp,%rbx
    d296:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
    d29b:	48 8b b4 24 f0 00 00 	mov    0xf0(%rsp),%rsi
    d2a2:	00 
    d2a3:	4c 8b be 20 01 00 00 	mov    0x120(%rsi),%r15
    d2aa:	b9 04 00 00 00       	mov    $0x4,%ecx
    d2af:	31 db                	xor    %ebx,%ebx
    d2b1:	4c 89 f8             	mov    %r15,%rax
    d2b4:	48 f7 e1             	mul    %rcx
    d2b7:	48 89 c5             	mov    %rax,%rbp
    d2ba:	0f 91 c0             	setno  %al
    d2bd:	0f 80 fd 31 00 00    	jo     104c0 <addr2line::ResUnit<R>::parse_lines+0x3480>
    d2c3:	4c 8b b6 10 01 00 00 	mov    0x110(%rsi),%r14
    d2ca:	88 c3                	mov    %al,%bl
    d2cc:	48 01 db             	add    %rbx,%rbx
    d2cf:	48 85 ed             	test   %rbp,%rbp
    d2d2:	74 30                	je     d304 <addr2line::ResUnit<R>::parse_lines+0x2c4>
    d2d4:	48 89 ef             	mov    %rbp,%rdi
    d2d7:	48 89 de             	mov    %rbx,%rsi
    d2da:	ff 15 a8 88 03 00    	callq  *0x388a8(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
    d2e0:	48 85 c0             	test   %rax,%rax
    d2e3:	75 2b                	jne    d310 <addr2line::ResUnit<R>::parse_lines+0x2d0>
    d2e5:	e9 0f 20 00 00       	jmpq   f2f9 <addr2line::ResUnit<R>::parse_lines+0x22b9>
    d2ea:	48 89 e9             	mov    %rbp,%rcx
    d2ed:	48 85 c9             	test   %rcx,%rcx
    d2f0:	0f 85 44 ff ff ff    	jne    d23a <addr2line::ResUnit<R>::parse_lines+0x1fa>
    d2f6:	4c 89 ff             	mov    %r15,%rdi
    d2f9:	48 89 ee             	mov    %rbp,%rsi
    d2fc:	ff 15 26 88 03 00    	callq  *0x38826(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
    d302:	0f 0b                	ud2    
    d304:	48 89 d8             	mov    %rbx,%rax
    d307:	48 85 c0             	test   %rax,%rax
    d30a:	0f 84 e9 1f 00 00    	je     f2f9 <addr2line::ResUnit<R>::parse_lines+0x22b9>
    d310:	48 c1 ed 02          	shr    $0x2,%rbp
    d314:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
    d31b:	00 
    d31c:	48 89 ac 24 98 00 00 	mov    %rbp,0x98(%rsp)
    d323:	00 
    d324:	48 c7 84 24 a0 00 00 	movq   $0x0,0xa0(%rsp)
    d32b:	00 00 00 00 00 
    d330:	48 8d bc 24 90 00 00 	lea    0x90(%rsp),%rdi
    d337:	00 
    d338:	4c 89 fe             	mov    %r15,%rsi
    d33b:	e8 d0 c2 ff ff       	callq  9610 <alloc::vec::Vec<T>::reserve>
    d340:	4a 8d 14 bd 00 00 00 	lea    0x0(,%r15,4),%rdx
    d347:	00 
    d348:	48 8b 9c 24 a0 00 00 	mov    0xa0(%rsp),%rbx
    d34f:	00 
    d350:	48 8d 3c 9d 00 00 00 	lea    0x0(,%rbx,4),%rdi
    d357:	00 
    d358:	48 03 bc 24 90 00 00 	add    0x90(%rsp),%rdi
    d35f:	00 
    d360:	4c 89 f6             	mov    %r14,%rsi
    d363:	ff 15 97 89 03 00    	callq  *0x38997(%rip)        # 45d00 <memcpy@GLIBC_2.14>
    d369:	4c 01 fb             	add    %r15,%rbx
    d36c:	48 89 9c 24 a0 00 00 	mov    %rbx,0xa0(%rsp)
    d373:	00 
    d374:	48 8b b4 24 f0 00 00 	mov    0xf0(%rsp),%rsi
    d37b:	00 
    d37c:	4c 8b be 38 01 00 00 	mov    0x138(%rsi),%r15
    d383:	b9 40 00 00 00       	mov    $0x40,%ecx
    d388:	31 db                	xor    %ebx,%ebx
    d38a:	4c 89 f8             	mov    %r15,%rax
    d38d:	48 f7 e1             	mul    %rcx
    d390:	48 89 c5             	mov    %rax,%rbp
    d393:	0f 91 c0             	setno  %al
    d396:	0f 80 2c 31 00 00    	jo     104c8 <addr2line::ResUnit<R>::parse_lines+0x3488>
    d39c:	4c 8b b6 28 01 00 00 	mov    0x128(%rsi),%r14
    d3a3:	88 c3                	mov    %al,%bl
    d3a5:	48 c1 e3 03          	shl    $0x3,%rbx
    d3a9:	48 85 ed             	test   %rbp,%rbp
    d3ac:	0f 84 3b 1f 00 00    	je     f2ed <addr2line::ResUnit<R>::parse_lines+0x22ad>
    d3b2:	48 89 ef             	mov    %rbp,%rdi
    d3b5:	48 89 de             	mov    %rbx,%rsi
    d3b8:	ff 15 ca 87 03 00    	callq  *0x387ca(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
    d3be:	48 85 c0             	test   %rax,%rax
    d3c1:	0f 84 32 1f 00 00    	je     f2f9 <addr2line::ResUnit<R>::parse_lines+0x22b9>
    d3c7:	48 c1 ed 06          	shr    $0x6,%rbp
    d3cb:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    d3d0:	48 89 6c 24 28       	mov    %rbp,0x28(%rsp)
    d3d5:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
    d3dc:	00 00 
    d3de:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    d3e3:	4c 89 fe             	mov    %r15,%rsi
    d3e6:	e8 d5 c3 ff ff       	callq  97c0 <alloc::vec::Vec<T>::reserve>
    d3eb:	49 c1 e5 20          	shl    $0x20,%r13
    d3ef:	4d 09 e5             	or     %r12,%r13
    d3f2:	48 8b ac 24 f0 00 00 	mov    0xf0(%rsp),%rbp
    d3f9:	00 
    d3fa:	48 8d 85 60 01 00 00 	lea    0x160(%rbp),%rax
    d401:	48 89 84 24 10 03 00 	mov    %rax,0x310(%rsp)
    d408:	00 
    d409:	4c 89 fa             	mov    %r15,%rdx
    d40c:	48 c1 e2 06          	shl    $0x6,%rdx
    d410:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
    d415:	48 89 df             	mov    %rbx,%rdi
    d418:	48 c1 e7 06          	shl    $0x6,%rdi
    d41c:	48 03 7c 24 20       	add    0x20(%rsp),%rdi
    d421:	4c 89 f6             	mov    %r14,%rsi
    d424:	ff 15 d6 88 03 00    	callq  *0x388d6(%rip)        # 45d00 <memcpy@GLIBC_2.14>
    d42a:	4c 01 fb             	add    %r15,%rbx
    d42d:	48 89 5c 24 30       	mov    %rbx,0x30(%rsp)
    d432:	48 8b 9d 40 01 00 00 	mov    0x140(%rbp),%rbx
    d439:	f3 0f 6f 9d 48 01 00 	movdqu 0x148(%rbp),%xmm3
    d440:	00 
    d441:	4c 8b b5 58 01 00 00 	mov    0x158(%rbp),%r14
    d448:	b8 2d 00 00 00       	mov    $0x2d,%eax
    d44d:	83 bd 60 01 00 00 2d 	cmpl   $0x2d,0x160(%rbp)
    d454:	0f 84 a2 00 00 00    	je     d4fc <addr2line::ResUnit<R>::parse_lines+0x4bc>
    d45a:	48 8d bc 24 10 01 00 	lea    0x110(%rsp),%rdi
    d461:	00 
    d462:	48 8b b4 24 10 03 00 	mov    0x310(%rsp),%rsi
    d469:	00 
    d46a:	66 0f 7f 9c 24 30 03 	movdqa %xmm3,0x330(%rsp)
    d471:	00 00 
    d473:	e8 c8 f8 ff ff       	callq  cd40 <<gimli::read::unit::AttributeValue<R,Offset> as core::clone::Clone>::clone>
    d478:	66 0f 6f 9c 24 30 03 	movdqa 0x330(%rsp),%xmm3
    d47f:	00 00 
    d481:	0f 10 85 78 01 00 00 	movups 0x178(%rbp),%xmm0
    d488:	48 8b 85 88 01 00 00 	mov    0x188(%rbp),%rax
    d48f:	0f 10 8d 90 01 00 00 	movups 0x190(%rbp),%xmm1
    d496:	0f 11 84 24 28 01 00 	movups %xmm0,0x128(%rsp)
    d49d:	00 
    d49e:	48 89 84 24 38 01 00 	mov    %rax,0x138(%rsp)
    d4a5:	00 
    d4a6:	0f 11 8c 24 40 01 00 	movups %xmm1,0x140(%rsp)
    d4ad:	00 
    d4ae:	48 8b 84 24 10 01 00 	mov    0x110(%rsp),%rax
    d4b5:	00 
    d4b6:	0f 10 84 24 18 01 00 	movups 0x118(%rsp),%xmm0
    d4bd:	00 
    d4be:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    d4c3:	f3 0f 6f 84 24 28 01 	movdqu 0x128(%rsp),%xmm0
    d4ca:	00 00 
    d4cc:	66 0f 7f 44 24 60    	movdqa %xmm0,0x60(%rsp)
    d4d2:	48 8b 8c 24 38 01 00 	mov    0x138(%rsp),%rcx
    d4d9:	00 
    d4da:	48 89 4c 24 70       	mov    %rcx,0x70(%rsp)
    d4df:	48 8b 8c 24 40 01 00 	mov    0x140(%rsp),%rcx
    d4e6:	00 
    d4e7:	48 89 4c 24 78       	mov    %rcx,0x78(%rsp)
    d4ec:	48 8b 8c 24 48 01 00 	mov    0x148(%rsp),%rcx
    d4f3:	00 
    d4f4:	48 89 8c 24 80 00 00 	mov    %rcx,0x80(%rsp)
    d4fb:	00 
    d4fc:	48 8d 8d b0 01 00 00 	lea    0x1b0(%rbp),%rcx
    d503:	48 89 8c 24 78 03 00 	mov    %rcx,0x378(%rsp)
    d50a:	00 
    d50b:	48 8b 8c 24 d8 00 00 	mov    0xd8(%rsp),%rcx
    d512:	00 
    d513:	48 89 8c 24 50 03 00 	mov    %rcx,0x350(%rsp)
    d51a:	00 
    d51b:	0f 10 84 24 c8 00 00 	movups 0xc8(%rsp),%xmm0
    d522:	00 
    d523:	0f 29 84 24 40 03 00 	movaps %xmm0,0x340(%rsp)
    d52a:	00 
    d52b:	0f 10 44 24 08       	movups 0x8(%rsp),%xmm0
    d530:	0f 29 84 24 f0 03 00 	movaps %xmm0,0x3f0(%rsp)
    d537:	00 
    d538:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    d53d:	48 89 8c 24 00 04 00 	mov    %rcx,0x400(%rsp)
    d544:	00 
    d545:	0f 10 84 24 90 00 00 	movups 0x90(%rsp),%xmm0
    d54c:	00 
    d54d:	0f 29 84 24 d0 03 00 	movaps %xmm0,0x3d0(%rsp)
    d554:	00 
    d555:	48 8b 8c 24 a0 00 00 	mov    0xa0(%rsp),%rcx
    d55c:	00 
    d55d:	48 89 8c 24 e0 03 00 	mov    %rcx,0x3e0(%rsp)
    d564:	00 
    d565:	0f 10 44 24 20       	movups 0x20(%rsp),%xmm0
    d56a:	0f 29 84 24 b0 03 00 	movaps %xmm0,0x3b0(%rsp)
    d571:	00 
    d572:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
    d577:	48 89 8c 24 c0 03 00 	mov    %rcx,0x3c0(%rsp)
    d57e:	00 
    d57f:	48 8b 8c 24 80 00 00 	mov    0x80(%rsp),%rcx
    d586:	00 
    d587:	48 89 8c 24 40 01 00 	mov    %rcx,0x140(%rsp)
    d58e:	00 
    d58f:	0f 28 44 24 50       	movaps 0x50(%rsp),%xmm0
    d594:	0f 28 4c 24 60       	movaps 0x60(%rsp),%xmm1
    d599:	0f 28 54 24 70       	movaps 0x70(%rsp),%xmm2
    d59e:	0f 29 94 24 30 01 00 	movaps %xmm2,0x130(%rsp)
    d5a5:	00 
    d5a6:	0f 29 8c 24 20 01 00 	movaps %xmm1,0x120(%rsp)
    d5ad:	00 
    d5ae:	0f 29 84 24 10 01 00 	movaps %xmm0,0x110(%rsp)
    d5b5:	00 
    d5b6:	4c 89 e9             	mov    %r13,%rcx
    d5b9:	48 c1 e9 10          	shr    $0x10,%rcx
    d5bd:	4c 89 ea             	mov    %r13,%rdx
    d5c0:	48 c1 ea 18          	shr    $0x18,%rdx
    d5c4:	8b 74 24 50          	mov    0x50(%rsp),%esi
    d5c8:	89 74 24 20          	mov    %esi,0x20(%rsp)
    d5cc:	0f b7 74 24 54       	movzwl 0x54(%rsp),%esi
    d5d1:	66 89 74 24 24       	mov    %si,0x24(%rsp)
    d5d6:	0f 28 84 24 a0 01 00 	movaps 0x1a0(%rsp),%xmm0
    d5dd:	00 
    d5de:	0f 29 84 24 c0 01 00 	movaps %xmm0,0x1c0(%rsp)
    d5e5:	00 
    d5e6:	48 8b b4 24 08 01 00 	mov    0x108(%rsp),%rsi
    d5ed:	00 
    d5ee:	48 89 b4 24 d0 01 00 	mov    %rsi,0x1d0(%rsp)
    d5f5:	00 
    d5f6:	48 8b b4 24 68 01 00 	mov    0x168(%rsp),%rsi
    d5fd:	00 
    d5fe:	48 89 b4 24 d8 01 00 	mov    %rsi,0x1d8(%rsp)
    d605:	00 
    d606:	48 8b b4 24 00 01 00 	mov    0x100(%rsp),%rsi
    d60d:	00 
    d60e:	48 89 b4 24 e0 01 00 	mov    %rsi,0x1e0(%rsp)
    d615:	00 
    d616:	0f 28 84 24 40 03 00 	movaps 0x340(%rsp),%xmm0
    d61d:	00 
    d61e:	0f 11 84 24 e8 01 00 	movups %xmm0,0x1e8(%rsp)
    d625:	00 
    d626:	48 8b b4 24 50 03 00 	mov    0x350(%rsp),%rsi
    d62d:	00 
    d62e:	48 89 b4 24 f8 01 00 	mov    %rsi,0x1f8(%rsp)
    d635:	00 
    d636:	48 8b b4 24 00 04 00 	mov    0x400(%rsp),%rsi
    d63d:	00 
    d63e:	48 89 b4 24 10 02 00 	mov    %rsi,0x210(%rsp)
    d645:	00 
    d646:	0f 28 84 24 f0 03 00 	movaps 0x3f0(%rsp),%xmm0
    d64d:	00 
    d64e:	0f 29 84 24 00 02 00 	movaps %xmm0,0x200(%rsp)
    d655:	00 
    d656:	48 8b b4 24 e0 03 00 	mov    0x3e0(%rsp),%rsi
    d65d:	00 
    d65e:	48 89 b4 24 28 02 00 	mov    %rsi,0x228(%rsp)
    d665:	00 
    d666:	0f 28 84 24 d0 03 00 	movaps 0x3d0(%rsp),%xmm0
    d66d:	00 
    d66e:	0f 11 84 24 18 02 00 	movups %xmm0,0x218(%rsp)
    d675:	00 
    d676:	4c 8d a4 24 30 02 00 	lea    0x230(%rsp),%r12
    d67d:	00 
    d67e:	48 8b b4 24 c0 03 00 	mov    0x3c0(%rsp),%rsi
    d685:	00 
    d686:	48 89 b4 24 40 02 00 	mov    %rsi,0x240(%rsp)
    d68d:	00 
    d68e:	0f 28 84 24 b0 03 00 	movaps 0x3b0(%rsp),%xmm0
    d695:	00 
    d696:	0f 29 84 24 30 02 00 	movaps %xmm0,0x230(%rsp)
    d69d:	00 
    d69e:	48 89 9c 24 48 02 00 	mov    %rbx,0x248(%rsp)
    d6a5:	00 
    d6a6:	66 0f 7f 9c 24 50 02 	movdqa %xmm3,0x250(%rsp)
    d6ad:	00 00 
    d6af:	4c 89 b4 24 60 02 00 	mov    %r14,0x260(%rsp)
    d6b6:	00 
    d6b7:	48 89 84 24 68 02 00 	mov    %rax,0x268(%rsp)
    d6be:	00 
    d6bf:	48 8b 84 24 40 01 00 	mov    0x140(%rsp),%rax
    d6c6:	00 
    d6c7:	48 89 84 24 a0 02 00 	mov    %rax,0x2a0(%rsp)
    d6ce:	00 
    d6cf:	66 0f 6f 84 24 10 01 	movdqa 0x110(%rsp),%xmm0
    d6d6:	00 00 
    d6d8:	0f 28 8c 24 20 01 00 	movaps 0x120(%rsp),%xmm1
    d6df:	00 
    d6e0:	0f 28 94 24 30 01 00 	movaps 0x130(%rsp),%xmm2
    d6e7:	00 
    d6e8:	0f 29 94 24 90 02 00 	movaps %xmm2,0x290(%rsp)
    d6ef:	00 
    d6f0:	0f 29 8c 24 80 02 00 	movaps %xmm1,0x280(%rsp)
    d6f7:	00 
    d6f8:	66 0f 7f 84 24 70 02 	movdqa %xmm0,0x270(%rsp)
    d6ff:	00 00 
    d701:	8b 84 24 e0 00 00 00 	mov    0xe0(%rsp),%eax
    d708:	89 84 24 a8 02 00 00 	mov    %eax,0x2a8(%rsp)
    d70f:	66 44 89 ac 24 ac 02 	mov    %r13w,0x2ac(%rsp)
    d716:	00 00 
    d718:	88 8c 24 ae 02 00 00 	mov    %cl,0x2ae(%rsp)
    d71f:	66 89 94 24 af 02 00 	mov    %dx,0x2af(%rsp)
    d726:	00 
    d727:	8a 84 24 f8 00 00 00 	mov    0xf8(%rsp),%al
    d72e:	88 84 24 b1 02 00 00 	mov    %al,0x2b1(%rsp)
    d735:	0f b7 44 24 24       	movzwl 0x24(%rsp),%eax
    d73a:	66 89 84 24 b6 02 00 	mov    %ax,0x2b6(%rsp)
    d741:	00 
    d742:	8b 44 24 20          	mov    0x20(%rsp),%eax
    d746:	89 84 24 b2 02 00 00 	mov    %eax,0x2b2(%rsp)
    d74d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d751:	f3 0f 7f 84 24 b8 02 	movdqu %xmm0,0x2b8(%rsp)
    d758:	00 00 
    d75a:	0f 28 0d df 88 02 00 	movaps 0x288df(%rip),%xmm1        # 36040 <_fini+0xfbc>
    d761:	0f 11 8c 24 c8 02 00 	movups %xmm1,0x2c8(%rsp)
    d768:	00 
    d769:	f3 0f 7f 84 24 d8 02 	movdqu %xmm0,0x2d8(%rsp)
    d770:	00 00 
    d772:	48 c7 84 24 e8 02 00 	movq   $0x0,0x2e8(%rsp)
    d779:	00 00 00 00 00 
    d77e:	88 8c 24 f0 02 00 00 	mov    %cl,0x2f0(%rsp)
    d785:	c7 84 24 f1 02 00 00 	movl   $0x0,0x2f1(%rsp)
    d78c:	00 00 00 00 
    d790:	48 89 9c 24 f8 02 00 	mov    %rbx,0x2f8(%rsp)
    d797:	00 
    d798:	66 0f d6 9c 24 00 03 	movq   %xmm3,0x300(%rsp)
    d79f:	00 00 
    d7a1:	48 8d 84 24 c0 01 00 	lea    0x1c0(%rsp),%rax
    d7a8:	00 
    d7a9:	48 89 c1             	mov    %rax,%rcx
    d7ac:	48 c1 e9 08          	shr    $0x8,%rcx
    d7b0:	48 89 8c 24 f8 00 00 	mov    %rcx,0xf8(%rsp)
    d7b7:	00 
    d7b8:	48 89 c1             	mov    %rax,%rcx
    d7bb:	48 c1 e9 10          	shr    $0x10,%rcx
    d7bf:	48 89 8c 24 a0 01 00 	mov    %rcx,0x1a0(%rsp)
    d7c6:	00 
    d7c7:	48 c1 e8 20          	shr    $0x20,%rax
    d7cb:	48 89 84 24 08 01 00 	mov    %rax,0x108(%rsp)
    d7d2:	00 
    d7d3:	4c 8d ac 24 b8 02 00 	lea    0x2b8(%rsp),%r13
    d7da:	00 
    d7db:	31 c0                	xor    %eax,%eax
    d7dd:	84 c0                	test   %al,%al
    d7df:	74 5f                	je     d840 <addr2line::ResUnit<R>::parse_lines+0x800>
    d7e1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    d7e8:	00 00 00 
    d7eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d7f0:	8a 84 24 ae 02 00 00 	mov    0x2ae(%rsp),%al
    d7f7:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d7fb:	f3 41 0f 7f 45 00    	movdqu %xmm0,0x0(%r13)
    d801:	0f 28 0d 38 88 02 00 	movaps 0x28838(%rip),%xmm1        # 36040 <_fini+0xfbc>
    d808:	0f 11 8c 24 c8 02 00 	movups %xmm1,0x2c8(%rsp)
    d80f:	00 
    d810:	f3 41 0f 7f 84 24 a8 	movdqu %xmm0,0xa8(%r12)
    d817:	00 00 00 
    d81a:	49 c7 84 24 b8 00 00 	movq   $0x0,0xb8(%r12)
    d821:	00 00 00 00 00 
    d826:	88 84 24 f0 02 00 00 	mov    %al,0x2f0(%rsp)
    d82d:	c7 84 24 f1 02 00 00 	movl   $0x0,0x2f1(%rsp)
    d834:	00 00 00 00 
    d838:	e9 21 00 00 00       	jmpq   d85e <addr2line::ResUnit<R>::parse_lines+0x81e>
    d83d:	0f 1f 00             	nopl   (%rax)
    d840:	48 c7 84 24 e8 02 00 	movq   $0x0,0x2e8(%rsp)
    d847:	00 00 00 00 00 
    d84c:	c6 84 24 f1 02 00 00 	movb   $0x0,0x2f1(%rsp)
    d853:	00 
    d854:	66 c7 84 24 f3 02 00 	movw   $0x0,0x2f3(%rsp)
    d85b:	00 00 00 
    d85e:	4c 8b 84 24 00 03 00 	mov    0x300(%rsp),%r8
    d865:	00 
    d866:	4d 85 c0             	test   %r8,%r8
    d869:	0f 84 01 13 00 00    	je     eb70 <addr2line::ResUnit<R>::parse_lines+0x1b30>
    d86f:	4c 8b 8c 24 f8 02 00 	mov    0x2f8(%rsp),%r9
    d876:	00 
    d877:	4d 8d 71 01          	lea    0x1(%r9),%r14
    d87b:	49 8d 70 ff          	lea    -0x1(%r8),%rsi
    d87f:	4c 89 b4 24 f8 02 00 	mov    %r14,0x2f8(%rsp)
    d886:	00 
    d887:	48 89 b4 24 00 03 00 	mov    %rsi,0x300(%rsp)
    d88e:	00 
    d88f:	41 8a 29             	mov    (%r9),%bpl
    d892:	40 84 ed             	test   %bpl,%bpl
    d895:	0f 84 95 00 00 00    	je     d930 <addr2line::ResUnit<R>::parse_lines+0x8f0>
    d89b:	40 3a ac 24 b1 02 00 	cmp    0x2b1(%rsp),%bpl
    d8a2:	00 
    d8a3:	0f 83 07 01 00 00    	jae    d9b0 <addr2line::ResUnit<R>::parse_lines+0x970>
    d8a9:	8d 45 ff             	lea    -0x1(%rbp),%eax
    d8ac:	0f b6 c0             	movzbl %al,%eax
    d8af:	3c 0b                	cmp    $0xb,%al
    d8b1:	0f 87 78 07 00 00    	ja     e02f <addr2line::ResUnit<R>::parse_lines+0xfef>
    d8b7:	48 8d 0d c6 92 02 00 	lea    0x292c6(%rip),%rcx        # 36b84 <_fini+0x1b00>
    d8be:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    d8c2:	48 01 c8             	add    %rcx,%rax
    d8c5:	ff e0                	jmpq   *%rax
    d8c7:	c6 44 24 08 01       	movb   $0x1,0x8(%rsp)
    d8cc:	8a 44 24 09          	mov    0x9(%rsp),%al
    d8d0:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    d8d5:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    d8db:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    d8e1:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    d8e6:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    d8eb:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    d8f2:	00 00 
    d8f4:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    d8fb:	00 
    d8fc:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    d903:	00 
    d904:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    d909:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    d90e:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    d914:	b2 01                	mov    $0x1,%dl
    d916:	0f b6 d2             	movzbl %dl,%edx
    d919:	48 8d 35 c4 92 02 00 	lea    0x292c4(%rip),%rsi        # 36be4 <_fini+0x1b60>
    d920:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    d924:	48 01 f2             	add    %rsi,%rdx
    d927:	ff e2                	jmpq   *%rdx
    d929:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d930:	48 85 f6             	test   %rsi,%rsi
    d933:	0f 84 f5 12 00 00    	je     ec2e <addr2line::ResUnit<R>::parse_lines+0x1bee>
    d939:	49 89 de             	mov    %rbx,%r14
    d93c:	4d 8d 58 ff          	lea    -0x1(%r8),%r11
    d940:	31 ed                	xor    %ebp,%ebp
    d942:	48 c7 c0 fe ff ff ff 	mov    $0xfffffffffffffffe,%rax
    d949:	31 ff                	xor    %edi,%edi
    d94b:	31 c9                	xor    %ecx,%ecx
    d94d:	0f 1f 00             	nopl   (%rax)
    d950:	4d 8d 14 29          	lea    (%r9,%rbp,1),%r10
    d954:	49 83 c2 02          	add    $0x2,%r10
    d958:	49 8d 14 00          	lea    (%r8,%rax,1),%rdx
    d95c:	4c 89 94 24 f8 02 00 	mov    %r10,0x2f8(%rsp)
    d963:	00 
    d964:	48 89 94 24 00 03 00 	mov    %rdx,0x300(%rsp)
    d96b:	00 
    d96c:	41 0f b6 5c 29 01    	movzbl 0x1(%r9,%rbp,1),%ebx
    d972:	83 f9 3f             	cmp    $0x3f,%ecx
    d975:	75 09                	jne    d980 <addr2line::ResUnit<R>::parse_lines+0x940>
    d977:	80 fb 01             	cmp    $0x1,%bl
    d97a:	0f 87 00 12 00 00    	ja     eb80 <addr2line::ResUnit<R>::parse_lines+0x1b40>
    d980:	0f b6 f3             	movzbl %bl,%esi
    d983:	89 f3                	mov    %esi,%ebx
    d985:	83 e3 7f             	and    $0x7f,%ebx
    d988:	48 d3 e3             	shl    %cl,%rbx
    d98b:	48 09 df             	or     %rbx,%rdi
    d98e:	40 84 f6             	test   %sil,%sil
    d991:	0f 89 bc 00 00 00    	jns    da53 <addr2line::ResUnit<R>::parse_lines+0xa13>
    d997:	83 c1 07             	add    $0x7,%ecx
    d99a:	48 83 c5 01          	add    $0x1,%rbp
    d99e:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    d9a2:	49 39 eb             	cmp    %rbp,%r11
    d9a5:	75 a9                	jne    d950 <addr2line::ResUnit<R>::parse_lines+0x910>
    d9a7:	e9 e4 11 00 00       	jmpq   eb90 <addr2line::ResUnit<R>::parse_lines+0x1b50>
    d9ac:	0f 1f 40 00          	nopl   0x0(%rax)
    d9b0:	c6 44 24 08 00       	movb   $0x0,0x8(%rsp)
    d9b5:	40 88 6c 24 09       	mov    %bpl,0x9(%rsp)
    d9ba:	8a 44 24 09          	mov    0x9(%rsp),%al
    d9be:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    d9c3:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    d9c9:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    d9cf:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    d9d4:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    d9d9:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    d9e0:	00 00 
    d9e2:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    d9e9:	00 
    d9ea:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    d9f1:	00 
    d9f2:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    d9f7:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    d9fc:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    da02:	31 d2                	xor    %edx,%edx
    da04:	0f b6 d2             	movzbl %dl,%edx
    da07:	48 8d 35 d6 91 02 00 	lea    0x291d6(%rip),%rsi        # 36be4 <_fini+0x1b60>
    da0e:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    da12:	48 01 f2             	add    %rsi,%rdx
    da15:	ff e2                	jmpq   *%rdx
    da17:	0f b6 8c 24 ac 02 00 	movzbl 0x2ac(%rsp),%ecx
    da1e:	00 
    da1f:	0f b6 b4 24 ad 02 00 	movzbl 0x2ad(%rsp),%esi
    da26:	00 
    da27:	48 83 fe 01          	cmp    $0x1,%rsi
    da2b:	0f 85 42 08 00 00    	jne    e273 <addr2line::ResUnit<R>::parse_lines+0x1233>
    da31:	66 48 0f 7e d8       	movq   %xmm3,%rax
    da36:	48 0f af c1          	imul   %rcx,%rax
    da3a:	48 01 84 24 b8 02 00 	add    %rax,0x2b8(%rsp)
    da41:	00 
    da42:	48 c7 84 24 c0 02 00 	movq   $0x0,0x2c0(%rsp)
    da49:	00 00 00 00 00 
    da4e:	e9 0b fe ff ff       	jmpq   d85e <addr2line::ResUnit<R>::parse_lines+0x81e>
    da53:	48 39 fa             	cmp    %rdi,%rdx
    da56:	0f 82 73 16 00 00    	jb     f0cf <addr2line::ResUnit<R>::parse_lines+0x208f>
    da5c:	48 8d 04 2f          	lea    (%rdi,%rbp,1),%rax
    da60:	4c 01 c8             	add    %r9,%rax
    da63:	48 83 c0 02          	add    $0x2,%rax
    da67:	49 29 f8             	sub    %rdi,%r8
    da6a:	49 29 e8             	sub    %rbp,%r8
    da6d:	49 83 c0 fe          	add    $0xfffffffffffffffe,%r8
    da71:	48 89 84 24 f8 02 00 	mov    %rax,0x2f8(%rsp)
    da78:	00 
    da79:	4c 89 84 24 00 03 00 	mov    %r8,0x300(%rsp)
    da80:	00 
    da81:	4c 89 94 24 c8 00 00 	mov    %r10,0xc8(%rsp)
    da88:	00 
    da89:	48 89 bc 24 d0 00 00 	mov    %rdi,0xd0(%rsp)
    da90:	00 
    da91:	48 85 ff             	test   %rdi,%rdi
    da94:	0f 84 3d 16 00 00    	je     f0d7 <addr2line::ResUnit<R>::parse_lines+0x2097>
    da9a:	4c 89 f3             	mov    %r14,%rbx
    da9d:	49 8d 14 29          	lea    (%r9,%rbp,1),%rdx
    daa1:	48 83 c2 03          	add    $0x3,%rdx
    daa5:	4c 8d 5f ff          	lea    -0x1(%rdi),%r11
    daa9:	48 89 94 24 c8 00 00 	mov    %rdx,0xc8(%rsp)
    dab0:	00 
    dab1:	4c 89 9c 24 d0 00 00 	mov    %r11,0xd0(%rsp)
    dab8:	00 
    dab9:	41 8a 44 29 02       	mov    0x2(%r9,%rbp,1),%al
    dabe:	8d 48 ff             	lea    -0x1(%rax),%ecx
    dac1:	80 f9 03             	cmp    $0x3,%cl
    dac4:	0f 87 39 07 00 00    	ja     e203 <addr2line::ResUnit<R>::parse_lines+0x11c3>
    daca:	0f b6 c1             	movzbl %cl,%eax
    dacd:	48 8d 0d e0 90 02 00 	lea    0x290e0(%rip),%rcx        # 36bb4 <_fini+0x1b30>
    dad4:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    dad8:	48 01 c8             	add    %rcx,%rax
    dadb:	ff e0                	jmpq   *%rax
    dadd:	c6 44 24 08 10       	movb   $0x10,0x8(%rsp)
    dae2:	8a 44 24 09          	mov    0x9(%rsp),%al
    dae6:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    daeb:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    daf1:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    daf7:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    dafc:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    db01:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    db08:	00 00 
    db0a:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    db11:	00 
    db12:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    db19:	00 
    db1a:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    db1f:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    db24:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    db2a:	b2 10                	mov    $0x10,%dl
    db2c:	0f b6 d2             	movzbl %dl,%edx
    db2f:	48 8d 35 ae 90 02 00 	lea    0x290ae(%rip),%rsi        # 36be4 <_fini+0x1b60>
    db36:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    db3a:	48 01 f2             	add    %rsi,%rdx
    db3d:	ff e2                	jmpq   *%rdx
    db3f:	48 85 f6             	test   %rsi,%rsi
    db42:	0f 84 e6 10 00 00    	je     ec2e <addr2line::ResUnit<R>::parse_lines+0x1bee>
    db48:	49 89 da             	mov    %rbx,%r10
    db4b:	49 8d 78 ff          	lea    -0x1(%r8),%rdi
    db4f:	31 f6                	xor    %esi,%esi
    db51:	48 c7 c0 fe ff ff ff 	mov    $0xfffffffffffffffe,%rax
    db58:	31 ed                	xor    %ebp,%ebp
    db5a:	31 c9                	xor    %ecx,%ecx
    db5c:	0f 1f 40 00          	nopl   0x0(%rax)
    db60:	49 8d 14 31          	lea    (%r9,%rsi,1),%rdx
    db64:	48 83 c2 02          	add    $0x2,%rdx
    db68:	49 8d 1c 00          	lea    (%r8,%rax,1),%rbx
    db6c:	48 89 94 24 f8 02 00 	mov    %rdx,0x2f8(%rsp)
    db73:	00 
    db74:	48 89 9c 24 00 03 00 	mov    %rbx,0x300(%rsp)
    db7b:	00 
    db7c:	41 0f b6 54 31 01    	movzbl 0x1(%r9,%rsi,1),%edx
    db82:	83 f9 3f             	cmp    $0x3f,%ecx
    db85:	75 09                	jne    db90 <addr2line::ResUnit<R>::parse_lines+0xb50>
    db87:	80 fa 01             	cmp    $0x1,%dl
    db8a:	0f 87 f0 0f 00 00    	ja     eb80 <addr2line::ResUnit<R>::parse_lines+0x1b40>
    db90:	0f b6 da             	movzbl %dl,%ebx
    db93:	89 da                	mov    %ebx,%edx
    db95:	83 e2 7f             	and    $0x7f,%edx
    db98:	48 d3 e2             	shl    %cl,%rdx
    db9b:	48 09 d5             	or     %rdx,%rbp
    db9e:	84 db                	test   %bl,%bl
    dba0:	0f 89 d7 07 00 00    	jns    e37d <addr2line::ResUnit<R>::parse_lines+0x133d>
    dba6:	83 c1 07             	add    $0x7,%ecx
    dba9:	48 83 c6 01          	add    $0x1,%rsi
    dbad:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    dbb1:	48 39 f7             	cmp    %rsi,%rdi
    dbb4:	75 aa                	jne    db60 <addr2line::ResUnit<R>::parse_lines+0xb20>
    dbb6:	e9 e8 0f 00 00       	jmpq   eba3 <addr2line::ResUnit<R>::parse_lines+0x1b63>
    dbbb:	48 85 f6             	test   %rsi,%rsi
    dbbe:	0f 84 6a 10 00 00    	je     ec2e <addr2line::ResUnit<R>::parse_lines+0x1bee>
    dbc4:	49 89 da             	mov    %rbx,%r10
    dbc7:	49 8d 78 ff          	lea    -0x1(%r8),%rdi
    dbcb:	31 f6                	xor    %esi,%esi
    dbcd:	48 c7 c0 fe ff ff ff 	mov    $0xfffffffffffffffe,%rax
    dbd4:	31 ed                	xor    %ebp,%ebp
    dbd6:	31 c9                	xor    %ecx,%ecx
    dbd8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    dbdf:	00 
    dbe0:	49 8d 14 31          	lea    (%r9,%rsi,1),%rdx
    dbe4:	48 83 c2 02          	add    $0x2,%rdx
    dbe8:	49 8d 1c 00          	lea    (%r8,%rax,1),%rbx
    dbec:	48 89 94 24 f8 02 00 	mov    %rdx,0x2f8(%rsp)
    dbf3:	00 
    dbf4:	48 89 9c 24 00 03 00 	mov    %rbx,0x300(%rsp)
    dbfb:	00 
    dbfc:	41 0f b6 54 31 01    	movzbl 0x1(%r9,%rsi,1),%edx
    dc02:	83 f9 3f             	cmp    $0x3f,%ecx
    dc05:	75 09                	jne    dc10 <addr2line::ResUnit<R>::parse_lines+0xbd0>
    dc07:	80 fa 01             	cmp    $0x1,%dl
    dc0a:	0f 87 70 0f 00 00    	ja     eb80 <addr2line::ResUnit<R>::parse_lines+0x1b40>
    dc10:	0f b6 da             	movzbl %dl,%ebx
    dc13:	89 da                	mov    %ebx,%edx
    dc15:	83 e2 7f             	and    $0x7f,%edx
    dc18:	48 d3 e2             	shl    %cl,%rdx
    dc1b:	48 09 d5             	or     %rdx,%rbp
    dc1e:	84 db                	test   %bl,%bl
    dc20:	0f 89 c1 07 00 00    	jns    e3e7 <addr2line::ResUnit<R>::parse_lines+0x13a7>
    dc26:	83 c1 07             	add    $0x7,%ecx
    dc29:	48 83 c6 01          	add    $0x1,%rsi
    dc2d:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    dc31:	48 39 f7             	cmp    %rsi,%rdi
    dc34:	75 aa                	jne    dbe0 <addr2line::ResUnit<R>::parse_lines+0xba0>
    dc36:	e9 68 0f 00 00       	jmpq   eba3 <addr2line::ResUnit<R>::parse_lines+0x1b63>
    dc3b:	c6 44 24 08 0a       	movb   $0xa,0x8(%rsp)
    dc40:	8a 44 24 09          	mov    0x9(%rsp),%al
    dc44:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    dc49:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    dc4f:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    dc55:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    dc5a:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    dc5f:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    dc66:	00 00 
    dc68:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    dc6f:	00 
    dc70:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    dc77:	00 
    dc78:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    dc7d:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    dc82:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    dc88:	b2 0a                	mov    $0xa,%dl
    dc8a:	0f b6 d2             	movzbl %dl,%edx
    dc8d:	48 8d 35 50 8f 02 00 	lea    0x28f50(%rip),%rsi        # 36be4 <_fini+0x1b60>
    dc94:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    dc98:	48 01 f2             	add    %rsi,%rdx
    dc9b:	ff e2                	jmpq   *%rdx
    dc9d:	48 85 f6             	test   %rsi,%rsi
    dca0:	0f 84 88 0f 00 00    	je     ec2e <addr2line::ResUnit<R>::parse_lines+0x1bee>
    dca6:	49 89 da             	mov    %rbx,%r10
    dca9:	49 8d 68 ff          	lea    -0x1(%r8),%rbp
    dcad:	31 ff                	xor    %edi,%edi
    dcaf:	48 c7 c3 fe ff ff ff 	mov    $0xfffffffffffffffe,%rbx
    dcb6:	31 f6                	xor    %esi,%esi
    dcb8:	31 c9                	xor    %ecx,%ecx
    dcba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    dcc0:	49 8d 04 39          	lea    (%r9,%rdi,1),%rax
    dcc4:	48 83 c0 02          	add    $0x2,%rax
    dcc8:	49 8d 14 18          	lea    (%r8,%rbx,1),%rdx
    dccc:	48 89 84 24 f8 02 00 	mov    %rax,0x2f8(%rsp)
    dcd3:	00 
    dcd4:	48 89 94 24 00 03 00 	mov    %rdx,0x300(%rsp)
    dcdb:	00 
    dcdc:	41 0f b6 44 39 01    	movzbl 0x1(%r9,%rdi,1),%eax
    dce2:	83 f9 3f             	cmp    $0x3f,%ecx
    dce5:	75 0c                	jne    dcf3 <addr2line::ResUnit<R>::parse_lines+0xcb3>
    dce7:	3c 7f                	cmp    $0x7f,%al
    dce9:	74 08                	je     dcf3 <addr2line::ResUnit<R>::parse_lines+0xcb3>
    dceb:	84 c0                	test   %al,%al
    dced:	0f 85 d1 13 00 00    	jne    f0c4 <addr2line::ResUnit<R>::parse_lines+0x2084>
    dcf3:	89 c2                	mov    %eax,%edx
    dcf5:	83 e2 7f             	and    $0x7f,%edx
    dcf8:	48 d3 e2             	shl    %cl,%rdx
    dcfb:	48 09 d6             	or     %rdx,%rsi
    dcfe:	83 c1 07             	add    $0x7,%ecx
    dd01:	84 c0                	test   %al,%al
    dd03:	0f 89 eb 05 00 00    	jns    e2f4 <addr2line::ResUnit<R>::parse_lines+0x12b4>
    dd09:	48 83 c7 01          	add    $0x1,%rdi
    dd0d:	48 83 c3 ff          	add    $0xffffffffffffffff,%rbx
    dd11:	48 39 fd             	cmp    %rdi,%rbp
    dd14:	75 aa                	jne    dcc0 <addr2line::ResUnit<R>::parse_lines+0xc80>
    dd16:	e9 46 0f 00 00       	jmpq   ec61 <addr2line::ResUnit<R>::parse_lines+0x1c21>
    dd1b:	48 85 f6             	test   %rsi,%rsi
    dd1e:	0f 84 0a 0f 00 00    	je     ec2e <addr2line::ResUnit<R>::parse_lines+0x1bee>
    dd24:	49 89 da             	mov    %rbx,%r10
    dd27:	49 8d 78 ff          	lea    -0x1(%r8),%rdi
    dd2b:	31 f6                	xor    %esi,%esi
    dd2d:	48 c7 c0 fe ff ff ff 	mov    $0xfffffffffffffffe,%rax
    dd34:	31 ed                	xor    %ebp,%ebp
    dd36:	31 c9                	xor    %ecx,%ecx
    dd38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    dd3f:	00 
    dd40:	49 8d 14 31          	lea    (%r9,%rsi,1),%rdx
    dd44:	48 83 c2 02          	add    $0x2,%rdx
    dd48:	49 8d 1c 00          	lea    (%r8,%rax,1),%rbx
    dd4c:	48 89 94 24 f8 02 00 	mov    %rdx,0x2f8(%rsp)
    dd53:	00 
    dd54:	48 89 9c 24 00 03 00 	mov    %rbx,0x300(%rsp)
    dd5b:	00 
    dd5c:	41 0f b6 54 31 01    	movzbl 0x1(%r9,%rsi,1),%edx
    dd62:	83 f9 3f             	cmp    $0x3f,%ecx
    dd65:	75 09                	jne    dd70 <addr2line::ResUnit<R>::parse_lines+0xd30>
    dd67:	80 fa 01             	cmp    $0x1,%dl
    dd6a:	0f 87 10 0e 00 00    	ja     eb80 <addr2line::ResUnit<R>::parse_lines+0x1b40>
    dd70:	0f b6 da             	movzbl %dl,%ebx
    dd73:	89 da                	mov    %ebx,%edx
    dd75:	83 e2 7f             	and    $0x7f,%edx
    dd78:	48 d3 e2             	shl    %cl,%rdx
    dd7b:	48 09 d5             	or     %rdx,%rbp
    dd7e:	84 db                	test   %bl,%bl
    dd80:	0f 89 cb 06 00 00    	jns    e451 <addr2line::ResUnit<R>::parse_lines+0x1411>
    dd86:	83 c1 07             	add    $0x7,%ecx
    dd89:	48 83 c6 01          	add    $0x1,%rsi
    dd8d:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    dd91:	48 39 f7             	cmp    %rsi,%rdi
    dd94:	75 aa                	jne    dd40 <addr2line::ResUnit<R>::parse_lines+0xd00>
    dd96:	e9 08 0e 00 00       	jmpq   eba3 <addr2line::ResUnit<R>::parse_lines+0x1b63>
    dd9b:	c6 44 24 08 08       	movb   $0x8,0x8(%rsp)
    dda0:	8a 44 24 09          	mov    0x9(%rsp),%al
    dda4:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    dda9:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    ddaf:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    ddb5:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    ddba:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    ddbf:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    ddc6:	00 00 
    ddc8:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    ddcf:	00 
    ddd0:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    ddd7:	00 
    ddd8:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    dddd:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    dde2:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    dde8:	b2 08                	mov    $0x8,%dl
    ddea:	0f b6 d2             	movzbl %dl,%edx
    dded:	48 8d 35 f0 8d 02 00 	lea    0x28df0(%rip),%rsi        # 36be4 <_fini+0x1b60>
    ddf4:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    ddf8:	48 01 f2             	add    %rsi,%rdx
    ddfb:	ff e2                	jmpq   *%rdx
    ddfd:	48 85 f6             	test   %rsi,%rsi
    de00:	0f 84 28 0e 00 00    	je     ec2e <addr2line::ResUnit<R>::parse_lines+0x1bee>
    de06:	49 89 da             	mov    %rbx,%r10
    de09:	49 8d 78 ff          	lea    -0x1(%r8),%rdi
    de0d:	31 f6                	xor    %esi,%esi
    de0f:	48 c7 c0 fe ff ff ff 	mov    $0xfffffffffffffffe,%rax
    de16:	31 ed                	xor    %ebp,%ebp
    de18:	31 c9                	xor    %ecx,%ecx
    de1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    de20:	49 8d 14 31          	lea    (%r9,%rsi,1),%rdx
    de24:	48 83 c2 02          	add    $0x2,%rdx
    de28:	49 8d 1c 00          	lea    (%r8,%rax,1),%rbx
    de2c:	48 89 94 24 f8 02 00 	mov    %rdx,0x2f8(%rsp)
    de33:	00 
    de34:	48 89 9c 24 00 03 00 	mov    %rbx,0x300(%rsp)
    de3b:	00 
    de3c:	41 0f b6 54 31 01    	movzbl 0x1(%r9,%rsi,1),%edx
    de42:	83 f9 3f             	cmp    $0x3f,%ecx
    de45:	75 09                	jne    de50 <addr2line::ResUnit<R>::parse_lines+0xe10>
    de47:	80 fa 01             	cmp    $0x1,%dl
    de4a:	0f 87 30 0d 00 00    	ja     eb80 <addr2line::ResUnit<R>::parse_lines+0x1b40>
    de50:	0f b6 da             	movzbl %dl,%ebx
    de53:	89 da                	mov    %ebx,%edx
    de55:	83 e2 7f             	and    $0x7f,%edx
    de58:	48 d3 e2             	shl    %cl,%rdx
    de5b:	48 09 d5             	or     %rdx,%rbp
    de5e:	84 db                	test   %bl,%bl
    de60:	0f 89 55 06 00 00    	jns    e4bb <addr2line::ResUnit<R>::parse_lines+0x147b>
    de66:	83 c1 07             	add    $0x7,%ecx
    de69:	48 83 c6 01          	add    $0x1,%rsi
    de6d:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    de71:	48 39 f7             	cmp    %rsi,%rdi
    de74:	75 aa                	jne    de20 <addr2line::ResUnit<R>::parse_lines+0xde0>
    de76:	e9 28 0d 00 00       	jmpq   eba3 <addr2line::ResUnit<R>::parse_lines+0x1b63>
    de7b:	c6 44 24 08 06       	movb   $0x6,0x8(%rsp)
    de80:	8a 44 24 09          	mov    0x9(%rsp),%al
    de84:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    de89:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    de8f:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    de95:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    de9a:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    de9f:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    dea6:	00 00 
    dea8:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    deaf:	00 
    deb0:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    deb7:	00 
    deb8:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    debd:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    dec2:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    dec8:	b2 06                	mov    $0x6,%dl
    deca:	0f b6 d2             	movzbl %dl,%edx
    decd:	48 8d 35 10 8d 02 00 	lea    0x28d10(%rip),%rsi        # 36be4 <_fini+0x1b60>
    ded4:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    ded8:	48 01 f2             	add    %rsi,%rdx
    dedb:	ff e2                	jmpq   *%rdx
    dedd:	c6 44 24 08 07       	movb   $0x7,0x8(%rsp)
    dee2:	8a 44 24 09          	mov    0x9(%rsp),%al
    dee6:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    deeb:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    def1:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    def7:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    defc:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    df01:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    df08:	00 00 
    df0a:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    df11:	00 
    df12:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    df19:	00 
    df1a:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    df1f:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    df24:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    df2a:	b2 07                	mov    $0x7,%dl
    df2c:	0f b6 d2             	movzbl %dl,%edx
    df2f:	48 8d 35 ae 8c 02 00 	lea    0x28cae(%rip),%rsi        # 36be4 <_fini+0x1b60>
    df36:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    df3a:	48 01 f2             	add    %rsi,%rdx
    df3d:	ff e2                	jmpq   *%rdx
    df3f:	c6 44 24 08 0b       	movb   $0xb,0x8(%rsp)
    df44:	8a 44 24 09          	mov    0x9(%rsp),%al
    df48:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    df4d:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    df53:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    df59:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    df5e:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    df63:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    df6a:	00 00 
    df6c:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    df73:	00 
    df74:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    df7b:	00 
    df7c:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    df81:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    df86:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    df8c:	b2 0b                	mov    $0xb,%dl
    df8e:	0f b6 d2             	movzbl %dl,%edx
    df91:	48 8d 35 4c 8c 02 00 	lea    0x28c4c(%rip),%rsi        # 36be4 <_fini+0x1b60>
    df98:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    df9c:	48 01 f2             	add    %rsi,%rdx
    df9f:	ff e2                	jmpq   *%rdx
    dfa1:	48 83 fe 02          	cmp    $0x2,%rsi
    dfa5:	0f 82 87 11 00 00    	jb     f132 <addr2line::ResUnit<R>::parse_lines+0x20f2>
    dfab:	49 8d 41 03          	lea    0x3(%r9),%rax
    dfaf:	49 83 c0 fd          	add    $0xfffffffffffffffd,%r8
    dfb3:	48 89 84 24 f8 02 00 	mov    %rax,0x2f8(%rsp)
    dfba:	00 
    dfbb:	4c 89 84 24 00 03 00 	mov    %r8,0x300(%rsp)
    dfc2:	00 
    dfc3:	41 0f b7 41 01       	movzwl 0x1(%r9),%eax
    dfc8:	c6 44 24 08 09       	movb   $0x9,0x8(%rsp)
    dfcd:	66 89 44 24 0a       	mov    %ax,0xa(%rsp)
    dfd2:	8a 44 24 09          	mov    0x9(%rsp),%al
    dfd6:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    dfdb:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    dfe1:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    dfe7:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    dfec:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    dff1:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    dff8:	00 00 
    dffa:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    e001:	00 
    e002:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    e009:	00 
    e00a:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    e00f:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    e014:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    e01a:	b2 09                	mov    $0x9,%dl
    e01c:	0f b6 d2             	movzbl %dl,%edx
    e01f:	48 8d 35 be 8b 02 00 	lea    0x28bbe(%rip),%rsi        # 36be4 <_fini+0x1b60>
    e026:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    e02a:	48 01 f2             	add    %rsi,%rdx
    e02d:	ff e2                	jmpq   *%rdx
    e02f:	4c 8b 94 24 d8 01 00 	mov    0x1d8(%rsp),%r10
    e036:	00 
    e037:	48 8b 8c 24 e0 01 00 	mov    0x1e0(%rsp),%rcx
    e03e:	00 
    e03f:	48 39 c1             	cmp    %rax,%rcx
    e042:	0f 82 2a 10 00 00    	jb     f072 <addr2line::ResUnit<R>::parse_lines+0x2032>
    e048:	49 01 c2             	add    %rax,%r10
    e04b:	48 39 c1             	cmp    %rax,%rcx
    e04e:	0f 84 1e 10 00 00    	je     f072 <addr2line::ResUnit<R>::parse_lines+0x2032>
    e054:	45 0f b6 12          	movzbl (%r10),%r10d
    e058:	4d 85 d2             	test   %r10,%r10
    e05b:	0f 84 c4 04 00 00    	je     e525 <addr2line::ResUnit<R>::parse_lines+0x14e5>
    e061:	41 80 fa 01          	cmp    $0x1,%r10b
    e065:	0f 85 21 05 00 00    	jne    e58c <addr2line::ResUnit<R>::parse_lines+0x154c>
    e06b:	48 85 f6             	test   %rsi,%rsi
    e06e:	0f 84 ba 0b 00 00    	je     ec2e <addr2line::ResUnit<R>::parse_lines+0x1bee>
    e074:	49 89 db             	mov    %rbx,%r11
    e077:	4d 8d 50 ff          	lea    -0x1(%r8),%r10
    e07b:	31 f6                	xor    %esi,%esi
    e07d:	48 c7 c0 fe ff ff ff 	mov    $0xfffffffffffffffe,%rax
    e084:	31 db                	xor    %ebx,%ebx
    e086:	31 c9                	xor    %ecx,%ecx
    e088:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    e08f:	00 
    e090:	49 8d 14 31          	lea    (%r9,%rsi,1),%rdx
    e094:	48 83 c2 02          	add    $0x2,%rdx
    e098:	49 8d 3c 00          	lea    (%r8,%rax,1),%rdi
    e09c:	48 89 94 24 f8 02 00 	mov    %rdx,0x2f8(%rsp)
    e0a3:	00 
    e0a4:	48 89 bc 24 00 03 00 	mov    %rdi,0x300(%rsp)
    e0ab:	00 
    e0ac:	41 0f b6 54 31 01    	movzbl 0x1(%r9,%rsi,1),%edx
    e0b2:	83 f9 3f             	cmp    $0x3f,%ecx
    e0b5:	75 09                	jne    e0c0 <addr2line::ResUnit<R>::parse_lines+0x1080>
    e0b7:	80 fa 01             	cmp    $0x1,%dl
    e0ba:	0f 87 c0 0a 00 00    	ja     eb80 <addr2line::ResUnit<R>::parse_lines+0x1b40>
    e0c0:	0f b6 d2             	movzbl %dl,%edx
    e0c3:	89 d7                	mov    %edx,%edi
    e0c5:	83 e7 7f             	and    $0x7f,%edi
    e0c8:	48 d3 e7             	shl    %cl,%rdi
    e0cb:	48 09 fb             	or     %rdi,%rbx
    e0ce:	84 d2                	test   %dl,%dl
    e0d0:	0f 89 dc 07 00 00    	jns    e8b2 <addr2line::ResUnit<R>::parse_lines+0x1872>
    e0d6:	83 c1 07             	add    $0x7,%ecx
    e0d9:	48 83 c6 01          	add    $0x1,%rsi
    e0dd:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    e0e1:	49 39 f2             	cmp    %rsi,%r10
    e0e4:	75 aa                	jne    e090 <addr2line::ResUnit<R>::parse_lines+0x1050>
    e0e6:	e9 b8 0a 00 00       	jmpq   eba3 <addr2line::ResUnit<R>::parse_lines+0x1b63>
    e0eb:	66 83 bc 24 aa 02 00 	cmpw   $0x5,0x2aa(%rsp)
    e0f2:	00 05 
    e0f4:	0f 83 8c 01 00 00    	jae    e286 <addr2line::ResUnit<R>::parse_lines+0x1246>
    e0fa:	4d 85 db             	test   %r11,%r11
    e0fd:	0f 84 67 0f 00 00    	je     f06a <addr2line::ResUnit<R>::parse_lines+0x202a>
    e103:	49 8d 04 29          	lea    (%r9,%rbp,1),%rax
    e107:	31 c9                	xor    %ecx,%ecx
    e109:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    e110:	80 7c 08 03 00       	cmpb   $0x0,0x3(%rax,%rcx,1)
    e115:	0f 84 6a 05 00 00    	je     e685 <addr2line::ResUnit<R>::parse_lines+0x1645>
    e11b:	48 83 c1 01          	add    $0x1,%rcx
    e11f:	49 39 cb             	cmp    %rcx,%r11
    e122:	75 ec                	jne    e110 <addr2line::ResUnit<R>::parse_lines+0x10d0>
    e124:	e9 41 0f 00 00       	jmpq   f06a <addr2line::ResUnit<R>::parse_lines+0x202a>
    e129:	4d 85 db             	test   %r11,%r11
    e12c:	0f 84 20 0f 00 00    	je     f052 <addr2line::ResUnit<R>::parse_lines+0x2012>
    e132:	49 01 e9             	add    %rbp,%r9
    e135:	31 d2                	xor    %edx,%edx
    e137:	48 c7 c0 fe ff ff ff 	mov    $0xfffffffffffffffe,%rax
    e13e:	31 ed                	xor    %ebp,%ebp
    e140:	31 c9                	xor    %ecx,%ecx
    e142:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    e149:	00 00 00 
    e14c:	0f 1f 40 00          	nopl   0x0(%rax)
    e150:	49 8d 1c 11          	lea    (%r9,%rdx,1),%rbx
    e154:	48 83 c3 04          	add    $0x4,%rbx
    e158:	48 8d 34 07          	lea    (%rdi,%rax,1),%rsi
    e15c:	48 89 9c 24 c8 00 00 	mov    %rbx,0xc8(%rsp)
    e163:	00 
    e164:	48 89 b4 24 d0 00 00 	mov    %rsi,0xd0(%rsp)
    e16b:	00 
    e16c:	41 0f b6 5c 11 03    	movzbl 0x3(%r9,%rdx,1),%ebx
    e172:	83 f9 3f             	cmp    $0x3f,%ecx
    e175:	75 09                	jne    e180 <addr2line::ResUnit<R>::parse_lines+0x1140>
    e177:	80 fb 01             	cmp    $0x1,%bl
    e17a:	0f 87 c1 0e 00 00    	ja     f041 <addr2line::ResUnit<R>::parse_lines+0x2001>
    e180:	0f b6 db             	movzbl %bl,%ebx
    e183:	89 de                	mov    %ebx,%esi
    e185:	83 e6 7f             	and    $0x7f,%esi
    e188:	48 d3 e6             	shl    %cl,%rsi
    e18b:	48 09 f5             	or     %rsi,%rbp
    e18e:	84 db                	test   %bl,%bl
    e190:	0f 89 85 04 00 00    	jns    e61b <addr2line::ResUnit<R>::parse_lines+0x15db>
    e196:	83 c1 07             	add    $0x7,%ecx
    e199:	48 83 c2 01          	add    $0x1,%rdx
    e19d:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    e1a1:	49 39 d3             	cmp    %rdx,%r11
    e1a4:	75 aa                	jne    e150 <addr2line::ResUnit<R>::parse_lines+0x1110>
    e1a6:	e9 a0 0e 00 00       	jmpq   f04b <addr2line::ResUnit<R>::parse_lines+0x200b>
    e1ab:	44 0f b6 84 24 a8 02 	movzbl 0x2a8(%rsp),%r8d
    e1b2:	00 00 
    e1b4:	41 8d 40 ff          	lea    -0x1(%r8),%eax
    e1b8:	3c 07                	cmp    $0x7,%al
    e1ba:	0f 87 8e 0f 00 00    	ja     f14e <addr2line::ResUnit<R>::parse_lines+0x210e>
    e1c0:	0f b6 c0             	movzbl %al,%eax
    e1c3:	48 8d 0d fa 89 02 00 	lea    0x289fa(%rip),%rcx        # 36bc4 <_fini+0x1b40>
    e1ca:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    e1ce:	48 01 c8             	add    %rcx,%rax
    e1d1:	ff e0                	jmpq   *%rax
    e1d3:	4d 85 db             	test   %r11,%r11
    e1d6:	0f 84 7f 0f 00 00    	je     f15b <addr2line::ResUnit<R>::parse_lines+0x211b>
    e1dc:	49 8d 04 29          	lea    (%r9,%rbp,1),%rax
    e1e0:	48 83 c0 04          	add    $0x4,%rax
    e1e4:	48 83 c7 fe          	add    $0xfffffffffffffffe,%rdi
    e1e8:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
    e1ef:	00 
    e1f0:	48 89 bc 24 d0 00 00 	mov    %rdi,0xd0(%rsp)
    e1f7:	00 
    e1f8:	41 0f b6 44 29 03    	movzbl 0x3(%r9,%rbp,1),%eax
    e1fe:	e9 35 06 00 00       	jmpq   e838 <addr2line::ResUnit<R>::parse_lines+0x17f8>
    e203:	c6 44 24 08 14       	movb   $0x14,0x8(%rsp)
    e208:	88 44 24 09          	mov    %al,0x9(%rsp)
    e20c:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    e211:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    e216:	8a 44 24 09          	mov    0x9(%rsp),%al
    e21a:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    e21f:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    e225:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    e22b:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    e230:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    e235:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    e23c:	00 00 
    e23e:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    e245:	00 
    e246:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    e24d:	00 
    e24e:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    e253:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    e258:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    e25e:	b2 14                	mov    $0x14,%dl
    e260:	0f b6 d2             	movzbl %dl,%edx
    e263:	48 8d 35 7a 89 02 00 	lea    0x2897a(%rip),%rsi        # 36be4 <_fini+0x1b60>
    e26a:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    e26e:	48 01 f2             	add    %rsi,%rdx
    e271:	ff e2                	jmpq   *%rdx
    e273:	40 84 f6             	test   %sil,%sil
    e276:	0f 84 84 21 00 00    	je     10400 <addr2line::ResUnit<R>::parse_lines+0x33c0>
    e27c:	66 48 0f 7e d8       	movq   %xmm3,%rax
    e281:	e9 a6 08 00 00       	jmpq   eb2c <addr2line::ResUnit<R>::parse_lines+0x1aec>
    e286:	66 c7 44 24 08 14 03 	movw   $0x314,0x8(%rsp)
    e28d:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    e292:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    e297:	8a 44 24 09          	mov    0x9(%rsp),%al
    e29b:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    e2a0:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    e2a6:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    e2ac:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    e2b1:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    e2b6:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    e2bd:	00 00 
    e2bf:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    e2c6:	00 
    e2c7:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    e2ce:	00 
    e2cf:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    e2d4:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    e2d9:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    e2df:	b2 14                	mov    $0x14,%dl
    e2e1:	0f b6 d2             	movzbl %dl,%edx
    e2e4:	48 8d 35 f9 88 02 00 	lea    0x288f9(%rip),%rsi        # 36be4 <_fini+0x1b60>
    e2eb:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    e2ef:	48 01 f2             	add    %rsi,%rdx
    e2f2:	ff e2                	jmpq   *%rdx
    e2f4:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
    e2fb:	48 d3 e2             	shl    %cl,%rdx
    e2fe:	a8 40                	test   $0x40,%al
    e300:	b8 00 00 00 00       	mov    $0x0,%eax
    e305:	48 0f 44 d0          	cmove  %rax,%rdx
    e309:	83 f9 40             	cmp    $0x40,%ecx
    e30c:	48 0f 4d d0          	cmovge %rax,%rdx
    e310:	48 09 d6             	or     %rdx,%rsi
    e313:	c6 44 24 08 03       	movb   $0x3,0x8(%rsp)
    e318:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    e31d:	8a 44 24 09          	mov    0x9(%rsp),%al
    e321:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    e326:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    e32c:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    e332:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    e337:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    e33c:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    e343:	00 00 
    e345:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    e34c:	00 
    e34d:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    e354:	00 
    e355:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    e35a:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    e35f:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    e365:	b2 03                	mov    $0x3,%dl
    e367:	0f b6 d2             	movzbl %dl,%edx
    e36a:	48 8d 35 73 88 02 00 	lea    0x28873(%rip),%rsi        # 36be4 <_fini+0x1b60>
    e371:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    e375:	48 01 f2             	add    %rsi,%rdx
    e378:	4c 89 d3             	mov    %r10,%rbx
    e37b:	ff e2                	jmpq   *%rdx
    e37d:	c6 44 24 08 0c       	movb   $0xc,0x8(%rsp)
    e382:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
    e387:	8a 44 24 09          	mov    0x9(%rsp),%al
    e38b:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    e390:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    e396:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    e39c:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    e3a1:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    e3a6:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    e3ad:	00 00 
    e3af:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    e3b6:	00 
    e3b7:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    e3be:	00 
    e3bf:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    e3c4:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    e3c9:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    e3cf:	b2 0c                	mov    $0xc,%dl
    e3d1:	0f b6 d2             	movzbl %dl,%edx
    e3d4:	48 8d 35 09 88 02 00 	lea    0x28809(%rip),%rsi        # 36be4 <_fini+0x1b60>
    e3db:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    e3df:	48 01 f2             	add    %rsi,%rdx
    e3e2:	4c 89 d3             	mov    %r10,%rbx
    e3e5:	ff e2                	jmpq   *%rdx
    e3e7:	c6 44 24 08 05       	movb   $0x5,0x8(%rsp)
    e3ec:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
    e3f1:	8a 44 24 09          	mov    0x9(%rsp),%al
    e3f5:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    e3fa:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    e400:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    e406:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    e40b:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    e410:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    e417:	00 00 
    e419:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    e420:	00 
    e421:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    e428:	00 
    e429:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    e42e:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    e433:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    e439:	b2 05                	mov    $0x5,%dl
    e43b:	0f b6 d2             	movzbl %dl,%edx
    e43e:	48 8d 35 9f 87 02 00 	lea    0x2879f(%rip),%rsi        # 36be4 <_fini+0x1b60>
    e445:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    e449:	48 01 f2             	add    %rsi,%rdx
    e44c:	4c 89 d3             	mov    %r10,%rbx
    e44f:	ff e2                	jmpq   *%rdx
    e451:	c6 44 24 08 04       	movb   $0x4,0x8(%rsp)
    e456:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
    e45b:	8a 44 24 09          	mov    0x9(%rsp),%al
    e45f:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    e464:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    e46a:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    e470:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    e475:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    e47a:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    e481:	00 00 
    e483:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    e48a:	00 
    e48b:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    e492:	00 
    e493:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    e498:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    e49d:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    e4a3:	b2 04                	mov    $0x4,%dl
    e4a5:	0f b6 d2             	movzbl %dl,%edx
    e4a8:	48 8d 35 35 87 02 00 	lea    0x28735(%rip),%rsi        # 36be4 <_fini+0x1b60>
    e4af:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    e4b3:	48 01 f2             	add    %rsi,%rdx
    e4b6:	4c 89 d3             	mov    %r10,%rbx
    e4b9:	ff e2                	jmpq   *%rdx
    e4bb:	c6 44 24 08 02       	movb   $0x2,0x8(%rsp)
    e4c0:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
    e4c5:	8a 44 24 09          	mov    0x9(%rsp),%al
    e4c9:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    e4ce:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    e4d4:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    e4da:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    e4df:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    e4e4:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    e4eb:	00 00 
    e4ed:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    e4f4:	00 
    e4f5:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    e4fc:	00 
    e4fd:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    e502:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    e507:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    e50d:	b2 02                	mov    $0x2,%dl
    e50f:	0f b6 d2             	movzbl %dl,%edx
    e512:	48 8d 35 cb 86 02 00 	lea    0x286cb(%rip),%rsi        # 36be4 <_fini+0x1b60>
    e519:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    e51d:	48 01 f2             	add    %rsi,%rdx
    e520:	4c 89 d3             	mov    %r10,%rbx
    e523:	ff e2                	jmpq   *%rdx
    e525:	c6 44 24 08 0d       	movb   $0xd,0x8(%rsp)
    e52a:	40 88 6c 24 09       	mov    %bpl,0x9(%rsp)
    e52f:	8a 44 24 09          	mov    0x9(%rsp),%al
    e533:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    e538:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    e53e:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    e544:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    e549:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    e54e:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    e555:	00 00 
    e557:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    e55e:	00 
    e55f:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    e566:	00 
    e567:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    e56c:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    e571:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    e577:	b2 0d                	mov    $0xd,%dl
    e579:	0f b6 d2             	movzbl %dl,%edx
    e57c:	48 8d 35 61 86 02 00 	lea    0x28661(%rip),%rsi        # 36be4 <_fini+0x1b60>
    e583:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    e587:	48 01 f2             	add    %rsi,%rdx
    e58a:	ff e2                	jmpq   *%rdx
    e58c:	48 85 f6             	test   %rsi,%rsi
    e58f:	0f 84 6d 0b 00 00    	je     f102 <addr2line::ResUnit<R>::parse_lines+0x20c2>
    e595:	41 b9 01 00 00 00    	mov    $0x1,%r9d
    e59b:	49 89 f7             	mov    %rsi,%r15
    e59e:	4d 89 f3             	mov    %r14,%r11
    e5a1:	49 83 c3 01          	add    $0x1,%r11
    e5a5:	49 83 c7 ff          	add    $0xffffffffffffffff,%r15
    e5a9:	31 ff                	xor    %edi,%edi
    e5ab:	4c 89 d8             	mov    %r11,%rax
    e5ae:	31 c9                	xor    %ecx,%ecx
    e5b0:	49 89 c3             	mov    %rax,%r11
    e5b3:	48 89 84 24 f8 02 00 	mov    %rax,0x2f8(%rsp)
    e5ba:	00 
    e5bb:	4c 89 bc 24 00 03 00 	mov    %r15,0x300(%rsp)
    e5c2:	00 
    e5c3:	0f b6 40 ff          	movzbl -0x1(%rax),%eax
    e5c7:	83 f9 3f             	cmp    $0x3f,%ecx
    e5ca:	75 08                	jne    e5d4 <addr2line::ResUnit<R>::parse_lines+0x1594>
    e5cc:	3c 01                	cmp    $0x1,%al
    e5ce:	0f 87 1e 0b 00 00    	ja     f0f2 <addr2line::ResUnit<R>::parse_lines+0x20b2>
    e5d4:	48 89 da             	mov    %rbx,%rdx
    e5d7:	0f b6 d8             	movzbl %al,%ebx
    e5da:	89 d8                	mov    %ebx,%eax
    e5dc:	83 e0 7f             	and    $0x7f,%eax
    e5df:	48 d3 e0             	shl    %cl,%rax
    e5e2:	48 09 c7             	or     %rax,%rdi
    e5e5:	84 db                	test   %bl,%bl
    e5e7:	79 15                	jns    e5fe <addr2line::ResUnit<R>::parse_lines+0x15be>
    e5e9:	83 c1 07             	add    $0x7,%ecx
    e5ec:	49 8d 43 01          	lea    0x1(%r11),%rax
    e5f0:	49 83 c7 ff          	add    $0xffffffffffffffff,%r15
    e5f4:	48 89 d3             	mov    %rdx,%rbx
    e5f7:	72 b7                	jb     e5b0 <addr2line::ResUnit<R>::parse_lines+0x1570>
    e5f9:	e9 01 0b 00 00       	jmpq   f0ff <addr2line::ResUnit<R>::parse_lines+0x20bf>
    e5fe:	4d 39 d1             	cmp    %r10,%r9
    e601:	48 89 d3             	mov    %rdx,%rbx
    e604:	0f 84 25 03 00 00    	je     e92f <addr2line::ResUnit<R>::parse_lines+0x18ef>
    e60a:	49 83 c1 01          	add    $0x1,%r9
    e60e:	49 89 f8             	mov    %rdi,%r8
    e611:	4d 85 ff             	test   %r15,%r15
    e614:	75 8b                	jne    e5a1 <addr2line::ResUnit<R>::parse_lines+0x1561>
    e616:	e9 e4 0a 00 00       	jmpq   f0ff <addr2line::ResUnit<R>::parse_lines+0x20bf>
    e61b:	c6 44 24 08 13       	movb   $0x13,0x8(%rsp)
    e620:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
    e625:	8a 44 24 09          	mov    0x9(%rsp),%al
    e629:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    e62e:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    e634:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    e63a:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    e63f:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    e644:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    e64b:	00 00 
    e64d:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    e654:	00 
    e655:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    e65c:	00 
    e65d:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    e662:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    e667:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    e66d:	b2 13                	mov    $0x13,%dl
    e66f:	0f b6 d2             	movzbl %dl,%edx
    e672:	48 8d 35 6b 85 02 00 	lea    0x2856b(%rip),%rsi        # 36be4 <_fini+0x1b60>
    e679:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    e67d:	48 01 f2             	add    %rsi,%rdx
    e680:	4c 89 f3             	mov    %r14,%rbx
    e683:	ff e2                	jmpq   *%rdx
    e685:	4c 8d 14 01          	lea    (%rcx,%rax,1),%r10
    e689:	49 83 c2 03          	add    $0x3,%r10
    e68d:	48 89 cd             	mov    %rcx,%rbp
    e690:	48 f7 d5             	not    %rbp
    e693:	48 01 fd             	add    %rdi,%rbp
    e696:	4c 89 94 24 c8 00 00 	mov    %r10,0xc8(%rsp)
    e69d:	00 
    e69e:	48 89 ac 24 d0 00 00 	mov    %rbp,0xd0(%rsp)
    e6a5:	00 
    e6a6:	49 39 cb             	cmp    %rcx,%r11
    e6a9:	0f 84 c3 09 00 00    	je     f072 <addr2line::ResUnit<R>::parse_lines+0x2032>
    e6af:	48 01 c8             	add    %rcx,%rax
    e6b2:	48 83 c0 04          	add    $0x4,%rax
    e6b6:	48 29 cf             	sub    %rcx,%rdi
    e6b9:	48 83 c7 fe          	add    $0xfffffffffffffffe,%rdi
    e6bd:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
    e6c4:	00 
    e6c5:	48 89 bc 24 d0 00 00 	mov    %rdi,0xd0(%rsp)
    e6cc:	00 
    e6cd:	48 8d bc 24 10 01 00 	lea    0x110(%rsp),%rdi
    e6d4:	00 
    e6d5:	48 8d b4 24 c8 00 00 	lea    0xc8(%rsp),%rsi
    e6dc:	00 
    e6dd:	e8 0e bf ff ff       	callq  a5f0 <gimli::read::line::FileEntry<R,Offset>::parse>
    e6e2:	4c 8b 94 24 20 01 00 	mov    0x120(%rsp),%r10
    e6e9:	00 
    e6ea:	48 8b 84 24 10 01 00 	mov    0x110(%rsp),%rax
    e6f1:	00 
    e6f2:	4c 8b 84 24 18 01 00 	mov    0x118(%rsp),%r8
    e6f9:	00 
    e6fa:	48 8d 8c 24 28 01 00 	lea    0x128(%rsp),%rcx
    e701:	00 
    e702:	f3 0f 6f 01          	movdqu (%rcx),%xmm0
    e706:	0f 10 49 10          	movups 0x10(%rcx),%xmm1
    e70a:	0f 10 51 20          	movups 0x20(%rcx),%xmm2
    e70e:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    e714:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    e719:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    e71e:	48 83 f8 01          	cmp    $0x1,%rax
    e722:	0f 84 5b 0a 00 00    	je     f183 <addr2line::ResUnit<R>::parse_lines+0x2143>
    e728:	0f 28 44 24 50       	movaps 0x50(%rsp),%xmm0
    e72d:	0f 28 4c 24 60       	movaps 0x60(%rsp),%xmm1
    e732:	0f 28 54 24 70       	movaps 0x70(%rsp),%xmm2
    e737:	0f 29 54 24 40       	movaps %xmm2,0x40(%rsp)
    e73c:	0f 29 4c 24 30       	movaps %xmm1,0x30(%rsp)
    e741:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
    e746:	c6 44 24 08 12       	movb   $0x12,0x8(%rsp)
    e74b:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    e750:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
    e755:	8a 44 24 09          	mov    0x9(%rsp),%al
    e759:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    e75e:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    e764:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    e76a:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    e76f:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    e774:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    e77b:	00 00 
    e77d:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    e784:	00 
    e785:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    e78c:	00 
    e78d:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    e792:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    e797:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    e79d:	b2 12                	mov    $0x12,%dl
    e79f:	0f b6 d2             	movzbl %dl,%edx
    e7a2:	48 8d 35 3b 84 02 00 	lea    0x2843b(%rip),%rsi        # 36be4 <_fini+0x1b60>
    e7a9:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    e7ad:	48 01 f2             	add    %rsi,%rdx
    e7b0:	ff e2                	jmpq   *%rdx
    e7b2:	49 83 fb 04          	cmp    $0x4,%r11
    e7b6:	0f 82 9f 09 00 00    	jb     f15b <addr2line::ResUnit<R>::parse_lines+0x211b>
    e7bc:	49 8d 04 29          	lea    (%r9,%rbp,1),%rax
    e7c0:	48 83 c0 07          	add    $0x7,%rax
    e7c4:	48 83 c7 fb          	add    $0xfffffffffffffffb,%rdi
    e7c8:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
    e7cf:	00 
    e7d0:	48 89 bc 24 d0 00 00 	mov    %rdi,0xd0(%rsp)
    e7d7:	00 
    e7d8:	41 8b 44 29 03       	mov    0x3(%r9,%rbp,1),%eax
    e7dd:	eb 59                	jmp    e838 <addr2line::ResUnit<R>::parse_lines+0x17f8>
    e7df:	49 83 fb 02          	cmp    $0x2,%r11
    e7e3:	0f 82 72 09 00 00    	jb     f15b <addr2line::ResUnit<R>::parse_lines+0x211b>
    e7e9:	49 8d 04 29          	lea    (%r9,%rbp,1),%rax
    e7ed:	48 83 c0 05          	add    $0x5,%rax
    e7f1:	48 83 c7 fd          	add    $0xfffffffffffffffd,%rdi
    e7f5:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
    e7fc:	00 
    e7fd:	48 89 bc 24 d0 00 00 	mov    %rdi,0xd0(%rsp)
    e804:	00 
    e805:	41 0f b7 44 29 03    	movzwl 0x3(%r9,%rbp,1),%eax
    e80b:	eb 2b                	jmp    e838 <addr2line::ResUnit<R>::parse_lines+0x17f8>
    e80d:	49 83 fb 08          	cmp    $0x8,%r11
    e811:	0f 82 44 09 00 00    	jb     f15b <addr2line::ResUnit<R>::parse_lines+0x211b>
    e817:	49 8d 04 29          	lea    (%r9,%rbp,1),%rax
    e81b:	48 83 c0 0b          	add    $0xb,%rax
    e81f:	48 83 c7 f7          	add    $0xfffffffffffffff7,%rdi
    e823:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
    e82a:	00 
    e82b:	48 89 bc 24 d0 00 00 	mov    %rdi,0xd0(%rsp)
    e832:	00 
    e833:	49 8b 44 29 03       	mov    0x3(%r9,%rbp,1),%rax
    e838:	c6 44 24 08 11       	movb   $0x11,0x8(%rsp)
    e83d:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    e842:	8a 44 24 09          	mov    0x9(%rsp),%al
    e846:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    e84b:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    e851:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    e857:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    e85c:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    e861:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    e868:	00 00 
    e86a:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    e871:	00 
    e872:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    e879:	00 
    e87a:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    e87f:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    e884:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    e88a:	b2 11                	mov    $0x11,%dl
    e88c:	0f b6 d2             	movzbl %dl,%edx
    e88f:	48 8d 35 4e 83 02 00 	lea    0x2834e(%rip),%rsi        # 36be4 <_fini+0x1b60>
    e896:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    e89a:	48 01 f2             	add    %rsi,%rdx
    e89d:	ff e2                	jmpq   *%rdx
    e89f:	66 48 0f 7e de       	movq   %xmm3,%rsi
    e8a4:	4c 89 ef             	mov    %r13,%rdi
    e8a7:	ff 15 bb 76 03 00    	callq  *0x376bb(%rip)        # 45f68 <_GLOBAL_OFFSET_TABLE_+0x5d8>
    e8ad:	e9 ac ef ff ff       	jmpq   d85e <addr2line::ResUnit<R>::parse_lines+0x81e>
    e8b2:	c6 44 24 08 0e       	movb   $0xe,0x8(%rsp)
    e8b7:	40 88 6c 24 09       	mov    %bpl,0x9(%rsp)
    e8bc:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
    e8c1:	8a 44 24 09          	mov    0x9(%rsp),%al
    e8c5:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    e8ca:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    e8d0:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    e8d6:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    e8db:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    e8e0:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    e8e7:	00 00 
    e8e9:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    e8f0:	00 
    e8f1:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    e8f8:	00 
    e8f9:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    e8fe:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    e903:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    e909:	b2 0e                	mov    $0xe,%dl
    e90b:	0f b6 d2             	movzbl %dl,%edx
    e90e:	48 8d 35 cf 82 02 00 	lea    0x282cf(%rip),%rsi        # 36be4 <_fini+0x1b60>
    e915:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    e919:	48 01 f2             	add    %rsi,%rdx
    e91c:	4c 89 db             	mov    %r11,%rbx
    e91f:	ff e2                	jmpq   *%rdx
    e921:	66 0f d6 9c 24 c8 02 	movq   %xmm3,0x2c8(%rsp)
    e928:	00 00 
    e92a:	e9 2f ef ff ff       	jmpq   d85e <addr2line::ResUnit<R>::parse_lines+0x81e>
    e92f:	4d 29 f3             	sub    %r14,%r11
    e932:	4c 39 de             	cmp    %r11,%rsi
    e935:	0f 82 f7 07 00 00    	jb     f132 <addr2line::ResUnit<R>::parse_lines+0x20f2>
    e93b:	c6 44 24 08 0f       	movb   $0xf,0x8(%rsp)
    e940:	40 88 6c 24 09       	mov    %bpl,0x9(%rsp)
    e945:	4c 89 74 24 10       	mov    %r14,0x10(%rsp)
    e94a:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    e94f:	8a 44 24 09          	mov    0x9(%rsp),%al
    e953:	0f b7 4c 24 0a       	movzwl 0xa(%rsp),%ecx
    e958:	f3 0f 6f 5c 24 10    	movdqu 0x10(%rsp),%xmm3
    e95e:	66 0f 6f 44 24 20    	movdqa 0x20(%rsp),%xmm0
    e964:	0f 28 4c 24 30       	movaps 0x30(%rsp),%xmm1
    e969:	0f 28 54 24 40       	movaps 0x40(%rsp),%xmm2
    e96e:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    e975:	00 00 
    e977:	0f 29 8c 24 a0 00 00 	movaps %xmm1,0xa0(%rsp)
    e97e:	00 
    e97f:	0f 29 94 24 b0 00 00 	movaps %xmm2,0xb0(%rsp)
    e986:	00 
    e987:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    e98c:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    e991:	66 0f 7f 44 24 50    	movdqa %xmm0,0x50(%rsp)
    e997:	b2 0f                	mov    $0xf,%dl
    e999:	0f b6 d2             	movzbl %dl,%edx
    e99c:	48 8d 35 41 82 02 00 	lea    0x28241(%rip),%rsi        # 36be4 <_fini+0x1b60>
    e9a3:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
    e9a7:	48 01 f2             	add    %rsi,%rdx
    e9aa:	ff e2                	jmpq   *%rdx
    e9ac:	66 0f d6 9c 24 d8 02 	movq   %xmm3,0x2d8(%rsp)
    e9b3:	00 00 
    e9b5:	e9 a4 ee ff ff       	jmpq   d85e <addr2line::ResUnit<R>::parse_lines+0x81e>
    e9ba:	66 0f d6 9c 24 e8 02 	movq   %xmm3,0x2e8(%rsp)
    e9c1:	00 00 
    e9c3:	e9 96 ee ff ff       	jmpq   d85e <addr2line::ResUnit<R>::parse_lines+0x81e>
    e9c8:	66 0f d6 9c 24 b8 02 	movq   %xmm3,0x2b8(%rsp)
    e9cf:	00 00 
    e9d1:	48 c7 84 24 c0 02 00 	movq   $0x0,0x2c0(%rsp)
    e9d8:	00 00 00 00 00 
    e9dd:	e9 7c ee ff ff       	jmpq   d85e <addr2line::ResUnit<R>::parse_lines+0x81e>
    e9e2:	c6 84 24 f4 02 00 00 	movb   $0x1,0x2f4(%rsp)
    e9e9:	01 
    e9ea:	e9 6f ee ff ff       	jmpq   d85e <addr2line::ResUnit<R>::parse_lines+0x81e>
    e9ef:	66 0f d6 9c 24 e0 02 	movq   %xmm3,0x2e0(%rsp)
    e9f6:	00 00 
    e9f8:	e9 61 ee ff ff       	jmpq   d85e <addr2line::ResUnit<R>::parse_lines+0x81e>
    e9fd:	8a 8c 24 b0 02 00 00 	mov    0x2b0(%rsp),%cl
    ea04:	84 c9                	test   %cl,%cl
    ea06:	0f 84 d6 19 00 00    	je     103e2 <addr2line::ResUnit<R>::parse_lines+0x33a2>
    ea0c:	8a 84 24 b1 02 00 00 	mov    0x2b1(%rsp),%al
    ea13:	f6 d0                	not    %al
    ea15:	0f b6 c0             	movzbl %al,%eax
    ea18:	f6 f1                	div    %cl
    ea1a:	0f b6 c0             	movzbl %al,%eax
    ea1d:	0f b6 8c 24 ac 02 00 	movzbl 0x2ac(%rsp),%ecx
    ea24:	00 
    ea25:	0f b6 b4 24 ad 02 00 	movzbl 0x2ad(%rsp),%esi
    ea2c:	00 
    ea2d:	48 83 fe 01          	cmp    $0x1,%rsi
    ea31:	0f 85 ec 00 00 00    	jne    eb23 <addr2line::ResUnit<R>::parse_lines+0x1ae3>
    ea37:	48 0f af c8          	imul   %rax,%rcx
    ea3b:	48 01 8c 24 b8 02 00 	add    %rcx,0x2b8(%rsp)
    ea42:	00 
    ea43:	48 c7 84 24 c0 02 00 	movq   $0x0,0x2c0(%rsp)
    ea4a:	00 00 00 00 00 
    ea4f:	e9 0a ee ff ff       	jmpq   d85e <addr2line::ResUnit<R>::parse_lines+0x81e>
    ea54:	66 0f 7f 9c 24 e0 00 	movdqa %xmm3,0xe0(%rsp)
    ea5b:	00 00 
    ea5d:	66 0f 6f 44 24 50    	movdqa 0x50(%rsp),%xmm0
    ea63:	0f 28 4c 24 60       	movaps 0x60(%rsp),%xmm1
    ea68:	0f 28 54 24 70       	movaps 0x70(%rsp),%xmm2
    ea6d:	0f 29 94 24 30 01 00 	movaps %xmm2,0x130(%rsp)
    ea74:	00 
    ea75:	0f 29 8c 24 20 01 00 	movaps %xmm1,0x120(%rsp)
    ea7c:	00 
    ea7d:	66 0f 7f 84 24 10 01 	movdqa %xmm0,0x110(%rsp)
    ea84:	00 00 
    ea86:	48 8b 84 24 40 02 00 	mov    0x240(%rsp),%rax
    ea8d:	00 
    ea8e:	48 3b 84 24 38 02 00 	cmp    0x238(%rsp),%rax
    ea95:	00 
    ea96:	75 15                	jne    eaad <addr2line::ResUnit<R>::parse_lines+0x1a6d>
    ea98:	be 01 00 00 00       	mov    $0x1,%esi
    ea9d:	4c 89 e7             	mov    %r12,%rdi
    eaa0:	e8 1b ad ff ff       	callq  97c0 <alloc::vec::Vec<T>::reserve>
    eaa5:	48 8b 84 24 40 02 00 	mov    0x240(%rsp),%rax
    eaac:	00 
    eaad:	48 8b 8c 24 30 02 00 	mov    0x230(%rsp),%rcx
    eab4:	00 
    eab5:	48 c1 e0 06          	shl    $0x6,%rax
    eab9:	0f 28 84 24 e0 00 00 	movaps 0xe0(%rsp),%xmm0
    eac0:	00 
    eac1:	0f 11 04 01          	movups %xmm0,(%rcx,%rax,1)
    eac5:	66 0f 6f 84 24 10 01 	movdqa 0x110(%rsp),%xmm0
    eacc:	00 00 
    eace:	0f 28 8c 24 20 01 00 	movaps 0x120(%rsp),%xmm1
    ead5:	00 
    ead6:	0f 28 94 24 30 01 00 	movaps 0x130(%rsp),%xmm2
    eadd:	00 
    eade:	f3 0f 7f 44 01 10    	movdqu %xmm0,0x10(%rcx,%rax,1)
    eae4:	0f 11 4c 01 20       	movups %xmm1,0x20(%rcx,%rax,1)
    eae9:	0f 11 54 01 30       	movups %xmm2,0x30(%rcx,%rax,1)
    eaee:	48 83 84 24 40 02 00 	addq   $0x1,0x240(%rsp)
    eaf5:	00 01 
    eaf7:	e9 62 ed ff ff       	jmpq   d85e <addr2line::ResUnit<R>::parse_lines+0x81e>
    eafc:	c6 84 24 f1 02 00 00 	movb   $0x1,0x2f1(%rsp)
    eb03:	01 
    eb04:	e9 55 ed ff ff       	jmpq   d85e <addr2line::ResUnit<R>::parse_lines+0x81e>
    eb09:	80 b4 24 f0 02 00 00 	xorb   $0x1,0x2f0(%rsp)
    eb10:	01 
    eb11:	e9 48 ed ff ff       	jmpq   d85e <addr2line::ResUnit<R>::parse_lines+0x81e>
    eb16:	c6 84 24 f3 02 00 00 	movb   $0x1,0x2f3(%rsp)
    eb1d:	01 
    eb1e:	e9 3b ed ff ff       	jmpq   d85e <addr2line::ResUnit<R>::parse_lines+0x81e>
    eb23:	40 84 f6             	test   %sil,%sil
    eb26:	0f 84 98 18 00 00    	je     103c4 <addr2line::ResUnit<R>::parse_lines+0x3384>
    eb2c:	48 03 84 24 c0 02 00 	add    0x2c0(%rsp),%rax
    eb33:	00 
    eb34:	48 89 c2             	mov    %rax,%rdx
    eb37:	48 c1 ea 20          	shr    $0x20,%rdx
    eb3b:	74 07                	je     eb44 <addr2line::ResUnit<R>::parse_lines+0x1b04>
    eb3d:	31 d2                	xor    %edx,%edx
    eb3f:	48 f7 f6             	div    %rsi
    eb42:	eb 04                	jmp    eb48 <addr2line::ResUnit<R>::parse_lines+0x1b08>
    eb44:	31 d2                	xor    %edx,%edx
    eb46:	f7 f6                	div    %esi
    eb48:	48 0f af c1          	imul   %rcx,%rax
    eb4c:	48 01 84 24 b8 02 00 	add    %rax,0x2b8(%rsp)
    eb53:	00 
    eb54:	48 89 94 24 c0 02 00 	mov    %rdx,0x2c0(%rsp)
    eb5b:	00 
    eb5c:	e9 fd ec ff ff       	jmpq   d85e <addr2line::ResUnit<R>::parse_lines+0x81e>
    eb61:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    eb68:	00 00 00 
    eb6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    eb70:	31 c0                	xor    %eax,%eax
    eb72:	31 c9                	xor    %ecx,%ecx
    eb74:	31 d2                	xor    %edx,%edx
    eb76:	45 31 c0             	xor    %r8d,%r8d
    eb79:	31 f6                	xor    %esi,%esi
    eb7b:	e9 21 01 00 00       	jmpq   eca1 <addr2line::ResUnit<R>::parse_lines+0x1c61>
    eb80:	41 b8 06 00 00 00    	mov    $0x6,%r8d
    eb86:	45 31 d2             	xor    %r10d,%r10d
    eb89:	e9 e2 00 00 00       	jmpq   ec70 <addr2line::ResUnit<R>::parse_lines+0x1c30>
    eb8e:	66 90                	xchg   %ax,%ax
    eb90:	4d 8d 14 29          	lea    (%r9,%rbp,1),%r10
    eb94:	49 83 c2 01          	add    $0x1,%r10
    eb98:	41 b8 13 00 00 00    	mov    $0x13,%r8d
    eb9e:	e9 cd 00 00 00       	jmpq   ec70 <addr2line::ResUnit<R>::parse_lines+0x1c30>
    eba3:	4d 8d 14 31          	lea    (%r9,%rsi,1),%r10
    eba7:	49 83 c2 01          	add    $0x1,%r10
    ebab:	41 b8 13 00 00 00    	mov    $0x13,%r8d
    ebb1:	e9 ba 00 00 00       	jmpq   ec70 <addr2line::ResUnit<R>::parse_lines+0x1c30>
    ebb6:	c6 84 24 f2 02 00 00 	movb   $0x1,0x2f2(%rsp)
    ebbd:	01 
    ebbe:	e9 d7 04 00 00       	jmpq   f09a <addr2line::ResUnit<R>::parse_lines+0x205a>
    ebc3:	8a 8c 24 b0 02 00 00 	mov    0x2b0(%rsp),%cl
    ebca:	84 c9                	test   %cl,%cl
    ebcc:	0f 84 fe 18 00 00    	je     104d0 <addr2line::ResUnit<R>::parse_lines+0x3490>
    ebd2:	2a 84 24 b1 02 00 00 	sub    0x2b1(%rsp),%al
    ebd9:	0f b6 c0             	movzbl %al,%eax
    ebdc:	f6 f1                	div    %cl
    ebde:	89 c3                	mov    %eax,%ebx
    ebe0:	0f b6 f4             	movzbl %ah,%esi
    ebe3:	48 0f be 84 24 af 02 	movsbq 0x2af(%rsp),%rax
    ebea:	00 00 
    ebec:	48 01 c6             	add    %rax,%rsi
    ebef:	4c 89 ef             	mov    %r13,%rdi
    ebf2:	ff 15 70 73 03 00    	callq  *0x37370(%rip)        # 45f68 <_GLOBAL_OFFSET_TABLE_+0x5d8>
    ebf8:	0f b6 c3             	movzbl %bl,%eax
    ebfb:	0f b6 8c 24 ac 02 00 	movzbl 0x2ac(%rsp),%ecx
    ec02:	00 
    ec03:	0f b6 b4 24 ad 02 00 	movzbl 0x2ad(%rsp),%esi
    ec0a:	00 
    ec0b:	48 83 fe 01          	cmp    $0x1,%rsi
    ec0f:	75 28                	jne    ec39 <addr2line::ResUnit<R>::parse_lines+0x1bf9>
    ec11:	48 0f af c8          	imul   %rax,%rcx
    ec15:	48 01 8c 24 b8 02 00 	add    %rcx,0x2b8(%rsp)
    ec1c:	00 
    ec1d:	48 c7 84 24 c0 02 00 	movq   $0x0,0x2c0(%rsp)
    ec24:	00 00 00 00 00 
    ec29:	e9 6c 04 00 00       	jmpq   f09a <addr2line::ResUnit<R>::parse_lines+0x205a>
    ec2e:	41 b8 13 00 00 00    	mov    $0x13,%r8d
    ec34:	4d 89 f2             	mov    %r14,%r10
    ec37:	eb 37                	jmp    ec70 <addr2line::ResUnit<R>::parse_lines+0x1c30>
    ec39:	40 84 f6             	test   %sil,%sil
    ec3c:	0f 84 a9 18 00 00    	je     104eb <addr2line::ResUnit<R>::parse_lines+0x34ab>
    ec42:	48 03 84 24 c0 02 00 	add    0x2c0(%rsp),%rax
    ec49:	00 
    ec4a:	48 89 c2             	mov    %rax,%rdx
    ec4d:	48 c1 ea 20          	shr    $0x20,%rdx
    ec51:	0f 84 2b 04 00 00    	je     f082 <addr2line::ResUnit<R>::parse_lines+0x2042>
    ec57:	31 d2                	xor    %edx,%edx
    ec59:	48 f7 f6             	div    %rsi
    ec5c:	e9 25 04 00 00       	jmpq   f086 <addr2line::ResUnit<R>::parse_lines+0x2046>
    ec61:	4d 8d 14 39          	lea    (%r9,%rdi,1),%r10
    ec65:	49 83 c2 01          	add    $0x1,%r10
    ec69:	41 b8 13 00 00 00    	mov    $0x13,%r8d
    ec6f:	90                   	nop
    ec70:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    ec75:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    ec7a:	31 c0                	xor    %eax,%eax
    ec7c:	31 c9                	xor    %ecx,%ecx
    ec7e:	31 d2                	xor    %edx,%edx
    ec80:	48 8d 35 d1 85 02 00 	lea    0x285d1(%rip),%rsi        # 37258 <_fini+0x21d4>
    ec87:	48 89 b4 24 f8 02 00 	mov    %rsi,0x2f8(%rsp)
    ec8e:	00 
    ec8f:	48 c7 84 24 00 03 00 	movq   $0x0,0x300(%rsp)
    ec96:	00 00 00 00 00 
    ec9b:	40 b6 01             	mov    $0x1,%sil
    ec9e:	4c 89 d3             	mov    %r10,%rbx
    eca1:	48 c1 e0 20          	shl    $0x20,%rax
    eca5:	c1 e1 10             	shl    $0x10,%ecx
    eca8:	48 09 c1             	or     %rax,%rcx
    ecab:	c1 e2 08             	shl    $0x8,%edx
    ecae:	0f b7 c2             	movzwl %dx,%eax
    ecb1:	48 09 c8             	or     %rcx,%rax
    ecb4:	45 0f b6 f8          	movzbl %r8b,%r15d
    ecb8:	49 09 c7             	or     %rax,%r15
    ecbb:	40 84 f6             	test   %sil,%sil
    ecbe:	0f 85 f3 13 00 00    	jne    100b7 <addr2line::ResUnit<R>::parse_lines+0x3077>
    ecc4:	4d 85 ff             	test   %r15,%r15
    ecc7:	0f 84 dd 04 00 00    	je     f1aa <addr2line::ResUnit<R>::parse_lines+0x216a>
    eccd:	80 7b 3a 00          	cmpb   $0x0,0x3a(%rbx)
    ecd1:	0f 84 99 00 00 00    	je     ed70 <addr2line::ResUnit<R>::parse_lines+0x1d30>
    ecd7:	48 8b ac 24 98 01 00 	mov    0x198(%rsp),%rbp
    ecde:	00 
    ecdf:	48 85 ed             	test   %rbp,%rbp
    ece2:	0f 84 ac 02 00 00    	je     ef94 <addr2line::ResUnit<R>::parse_lines+0x1f54>
    ece8:	48 8b 84 24 88 01 00 	mov    0x188(%rsp),%rax
    ecef:	00 
    ecf0:	48 8b 8c 24 90 01 00 	mov    0x190(%rsp),%rcx
    ecf7:	00 
    ecf8:	4c 8b 30             	mov    (%rax),%r14
    ecfb:	4c 8b 3b             	mov    (%rbx),%r15
    ecfe:	48 c7 84 24 88 01 00 	movq   $0x8,0x188(%rsp)
    ed05:	00 08 00 00 00 
    ed0a:	48 8d 94 24 90 01 00 	lea    0x190(%rsp),%rdx
    ed11:	00 
    ed12:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ed16:	f3 0f 7f 02          	movdqu %xmm0,(%rdx)
    ed1a:	48 39 e9             	cmp    %rbp,%rcx
    ed1d:	0f 86 58 01 00 00    	jbe    ee7b <addr2line::ResUnit<R>::parse_lines+0x1e3b>
    ed23:	4d 89 ec             	mov    %r13,%r12
    ed26:	49 89 dd             	mov    %rbx,%r13
    ed29:	48 c1 e1 03          	shl    $0x3,%rcx
    ed2d:	48 8d 34 49          	lea    (%rcx,%rcx,2),%rsi
    ed31:	48 8d 0c ed 00 00 00 	lea    0x0(,%rbp,8),%rcx
    ed38:	00 
    ed39:	48 8d 1c 49          	lea    (%rcx,%rcx,2),%rbx
    ed3d:	48 85 db             	test   %rbx,%rbx
    ed40:	0f 84 0f 01 00 00    	je     ee55 <addr2line::ResUnit<R>::parse_lines+0x1e15>
    ed46:	ba 08 00 00 00       	mov    $0x8,%edx
    ed4b:	48 89 c7             	mov    %rax,%rdi
    ed4e:	48 89 d9             	mov    %rbx,%rcx
    ed51:	ff 15 21 72 03 00    	callq  *0x37221(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
    ed57:	48 85 c0             	test   %rax,%rax
    ed5a:	0f 85 0d 01 00 00    	jne    ee6d <addr2line::ResUnit<R>::parse_lines+0x1e2d>
    ed60:	e9 5e 14 00 00       	jmpq   101c3 <addr2line::ResUnit<R>::parse_lines+0x3183>
    ed65:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    ed6c:	00 00 00 
    ed6f:	90                   	nop
    ed70:	4c 8b 33             	mov    (%rbx),%r14
    ed73:	4c 8b 6b 10          	mov    0x10(%rbx),%r13
    ed77:	48 89 d8             	mov    %rbx,%rax
    ed7a:	8b 5b 18             	mov    0x18(%rbx),%ebx
    ed7d:	49 89 c7             	mov    %rax,%r15
    ed80:	8b 68 20             	mov    0x20(%rax),%ebp
    ed83:	48 8b bc 24 88 01 00 	mov    0x188(%rsp),%rdi
    ed8a:	00 
    ed8b:	4c 8b a4 24 98 01 00 	mov    0x198(%rsp),%r12
    ed92:	00 
    ed93:	4c 89 e0             	mov    %r12,%rax
    ed96:	48 83 e8 01          	sub    $0x1,%rax
    ed9a:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    ed9e:	48 8d 0c c7          	lea    (%rdi,%rax,8),%rcx
    eda2:	b8 00 00 00 00       	mov    $0x0,%eax
    eda7:	48 0f 43 c1          	cmovae %rcx,%rax
    edab:	72 23                	jb     edd0 <addr2line::ResUnit<R>::parse_lines+0x1d90>
    edad:	4c 39 30             	cmp    %r14,(%rax)
    edb0:	75 1e                	jne    edd0 <addr2line::ResUnit<R>::parse_lines+0x1d90>
    edb2:	4c 89 68 08          	mov    %r13,0x8(%rax)
    edb6:	89 58 10             	mov    %ebx,0x10(%rax)
    edb9:	89 68 14             	mov    %ebp,0x14(%rax)
    edbc:	e9 59 02 00 00       	jmpq   f01a <addr2line::ResUnit<R>::parse_lines+0x1fda>
    edc1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    edc8:	00 00 00 
    edcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    edd0:	4c 3b a4 24 90 01 00 	cmp    0x190(%rsp),%r12
    edd7:	00 
    edd8:	0f 85 1b 02 00 00    	jne    eff9 <addr2line::ResUnit<R>::parse_lines+0x1fb9>
    edde:	4c 89 e0             	mov    %r12,%rax
    ede1:	48 ff c0             	inc    %rax
    ede4:	0f 84 4a 16 00 00    	je     10434 <addr2line::ResUnit<R>::parse_lines+0x33f4>
    edea:	4b 8d 0c 24          	lea    (%r12,%r12,1),%rcx
    edee:	48 39 c1             	cmp    %rax,%rcx
    edf1:	48 0f 47 c1          	cmova  %rcx,%rax
    edf5:	48 83 f8 04          	cmp    $0x4,%rax
    edf9:	b9 04 00 00 00       	mov    $0x4,%ecx
    edfe:	48 0f 46 c1          	cmovbe %rcx,%rax
    ee02:	31 c9                	xor    %ecx,%ecx
    ee04:	ba 18 00 00 00       	mov    $0x18,%edx
    ee09:	48 f7 e2             	mul    %rdx
    ee0c:	0f 90 c2             	seto   %dl
    ee0f:	0f 91 c1             	setno  %cl
    ee12:	48 c1 e1 03          	shl    $0x3,%rcx
    ee16:	4d 85 e4             	test   %r12,%r12
    ee19:	48 89 84 24 e0 00 00 	mov    %rax,0xe0(%rsp)
    ee20:	00 
    ee21:	0f 84 81 01 00 00    	je     efa8 <addr2line::ResUnit<R>::parse_lines+0x1f68>
    ee27:	84 d2                	test   %dl,%dl
    ee29:	0f 85 05 16 00 00    	jne    10434 <addr2line::ResUnit<R>::parse_lines+0x33f4>
    ee2f:	4a 8d 14 e5 00 00 00 	lea    0x0(,%r12,8),%rdx
    ee36:	00 
    ee37:	48 8d 34 52          	lea    (%rdx,%rdx,2),%rsi
    ee3b:	48 85 f6             	test   %rsi,%rsi
    ee3e:	0f 84 6c 01 00 00    	je     efb0 <addr2line::ResUnit<R>::parse_lines+0x1f70>
    ee44:	48 89 ca             	mov    %rcx,%rdx
    ee47:	48 89 c1             	mov    %rax,%rcx
    ee4a:	ff 15 28 71 03 00    	callq  *0x37128(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
    ee50:	e9 6c 01 00 00       	jmpq   efc1 <addr2line::ResUnit<R>::parse_lines+0x1f81>
    ee55:	48 85 f6             	test   %rsi,%rsi
    ee58:	74 0e                	je     ee68 <addr2line::ResUnit<R>::parse_lines+0x1e28>
    ee5a:	ba 08 00 00 00       	mov    $0x8,%edx
    ee5f:	48 89 c7             	mov    %rax,%rdi
    ee62:	ff 15 98 6d 03 00    	callq  *0x36d98(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    ee68:	b8 08 00 00 00       	mov    $0x8,%eax
    ee6d:	4c 89 eb             	mov    %r13,%rbx
    ee70:	4d 89 e5             	mov    %r12,%r13
    ee73:	4c 8d a4 24 30 02 00 	lea    0x230(%rsp),%r12
    ee7a:	00 
    ee7b:	4c 89 b4 24 10 01 00 	mov    %r14,0x110(%rsp)
    ee82:	00 
    ee83:	4c 89 bc 24 18 01 00 	mov    %r15,0x118(%rsp)
    ee8a:	00 
    ee8b:	48 89 84 24 20 01 00 	mov    %rax,0x120(%rsp)
    ee92:	00 
    ee93:	48 89 ac 24 28 01 00 	mov    %rbp,0x128(%rsp)
    ee9a:	00 
    ee9b:	48 8b ac 24 80 01 00 	mov    0x180(%rsp),%rbp
    eea2:	00 
    eea3:	48 3b ac 24 78 01 00 	cmp    0x178(%rsp),%rbp
    eeaa:	00 
    eeab:	75 73                	jne    ef20 <addr2line::ResUnit<R>::parse_lines+0x1ee0>
    eead:	48 89 e8             	mov    %rbp,%rax
    eeb0:	48 ff c0             	inc    %rax
    eeb3:	0f 84 65 15 00 00    	je     1041e <addr2line::ResUnit<R>::parse_lines+0x33de>
    eeb9:	49 89 de             	mov    %rbx,%r14
    eebc:	48 89 e9             	mov    %rbp,%rcx
    eebf:	48 01 e9             	add    %rbp,%rcx
    eec2:	48 39 c1             	cmp    %rax,%rcx
    eec5:	48 0f 47 c1          	cmova  %rcx,%rax
    eec9:	48 83 f8 04          	cmp    $0x4,%rax
    eecd:	b9 04 00 00 00       	mov    $0x4,%ecx
    eed2:	48 0f 46 c1          	cmovbe %rcx,%rax
    eed6:	31 c9                	xor    %ecx,%ecx
    eed8:	ba 20 00 00 00       	mov    $0x20,%edx
    eedd:	48 f7 e2             	mul    %rdx
    eee0:	48 89 c3             	mov    %rax,%rbx
    eee3:	0f 90 c0             	seto   %al
    eee6:	0f 91 c1             	setno  %cl
    eee9:	48 c1 e1 03          	shl    $0x3,%rcx
    eeed:	48 85 ed             	test   %rbp,%rbp
    eef0:	74 38                	je     ef2a <addr2line::ResUnit<R>::parse_lines+0x1eea>
    eef2:	84 c0                	test   %al,%al
    eef4:	0f 85 24 15 00 00    	jne    1041e <addr2line::ResUnit<R>::parse_lines+0x33de>
    eefa:	48 8b bc 24 70 01 00 	mov    0x170(%rsp),%rdi
    ef01:	00 
    ef02:	48 85 ff             	test   %rdi,%rdi
    ef05:	74 2b                	je     ef32 <addr2line::ResUnit<R>::parse_lines+0x1ef2>
    ef07:	48 89 ee             	mov    %rbp,%rsi
    ef0a:	48 c1 e6 05          	shl    $0x5,%rsi
    ef0e:	74 22                	je     ef32 <addr2line::ResUnit<R>::parse_lines+0x1ef2>
    ef10:	48 89 ca             	mov    %rcx,%rdx
    ef13:	48 89 d9             	mov    %rbx,%rcx
    ef16:	ff 15 5c 70 03 00    	callq  *0x3705c(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
    ef1c:	eb 25                	jmp    ef43 <addr2line::ResUnit<R>::parse_lines+0x1f03>
    ef1e:	66 90                	xchg   %ax,%ax
    ef20:	48 8b 8c 24 70 01 00 	mov    0x170(%rsp),%rcx
    ef27:	00 
    ef28:	eb 3c                	jmp    ef66 <addr2line::ResUnit<R>::parse_lines+0x1f26>
    ef2a:	84 c0                	test   %al,%al
    ef2c:	0f 85 ec 14 00 00    	jne    1041e <addr2line::ResUnit<R>::parse_lines+0x33de>
    ef32:	48 85 db             	test   %rbx,%rbx
    ef35:	74 0f                	je     ef46 <addr2line::ResUnit<R>::parse_lines+0x1f06>
    ef37:	48 89 df             	mov    %rbx,%rdi
    ef3a:	48 89 ce             	mov    %rcx,%rsi
    ef3d:	ff 15 45 6c 03 00    	callq  *0x36c45(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
    ef43:	48 89 c1             	mov    %rax,%rcx
    ef46:	48 85 c9             	test   %rcx,%rcx
    ef49:	0f 84 74 12 00 00    	je     101c3 <addr2line::ResUnit<R>::parse_lines+0x3183>
    ef4f:	48 89 8c 24 70 01 00 	mov    %rcx,0x170(%rsp)
    ef56:	00 
    ef57:	48 c1 eb 05          	shr    $0x5,%rbx
    ef5b:	48 89 9c 24 78 01 00 	mov    %rbx,0x178(%rsp)
    ef62:	00 
    ef63:	4c 89 f3             	mov    %r14,%rbx
    ef66:	48 89 e8             	mov    %rbp,%rax
    ef69:	48 c1 e0 05          	shl    $0x5,%rax
    ef6d:	f3 0f 6f 84 24 10 01 	movdqu 0x110(%rsp),%xmm0
    ef74:	00 00 
    ef76:	0f 10 8c 24 20 01 00 	movups 0x120(%rsp),%xmm1
    ef7d:	00 
    ef7e:	0f 11 4c 01 10       	movups %xmm1,0x10(%rcx,%rax,1)
    ef83:	f3 0f 7f 04 01       	movdqu %xmm0,(%rcx,%rax,1)
    ef88:	48 83 c5 01          	add    $0x1,%rbp
    ef8c:	48 89 ac 24 80 01 00 	mov    %rbp,0x180(%rsp)
    ef93:	00 
    ef94:	8a 84 24 f2 02 00 00 	mov    0x2f2(%rsp),%al
    ef9b:	84 c0                	test   %al,%al
    ef9d:	0f 85 4d e8 ff ff    	jne    d7f0 <addr2line::ResUnit<R>::parse_lines+0x7b0>
    efa3:	e9 98 e8 ff ff       	jmpq   d840 <addr2line::ResUnit<R>::parse_lines+0x800>
    efa8:	84 d2                	test   %dl,%dl
    efaa:	0f 85 84 14 00 00    	jne    10434 <addr2line::ResUnit<R>::parse_lines+0x33f4>
    efb0:	48 85 c0             	test   %rax,%rax
    efb3:	74 0f                	je     efc4 <addr2line::ResUnit<R>::parse_lines+0x1f84>
    efb5:	48 89 c7             	mov    %rax,%rdi
    efb8:	48 89 ce             	mov    %rcx,%rsi
    efbb:	ff 15 c7 6b 03 00    	callq  *0x36bc7(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
    efc1:	48 89 c1             	mov    %rax,%rcx
    efc4:	48 85 c9             	test   %rcx,%rcx
    efc7:	0f 84 97 14 00 00    	je     10464 <addr2line::ResUnit<R>::parse_lines+0x3424>
    efcd:	48 89 8c 24 88 01 00 	mov    %rcx,0x188(%rsp)
    efd4:	00 
    efd5:	48 8b 84 24 e0 00 00 	mov    0xe0(%rsp),%rax
    efdc:	00 
    efdd:	48 ba ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rdx
    efe4:	aa aa aa 
    efe7:	48 f7 e2             	mul    %rdx
    efea:	48 c1 ea 04          	shr    $0x4,%rdx
    efee:	48 89 94 24 90 01 00 	mov    %rdx,0x190(%rsp)
    eff5:	00 
    eff6:	48 89 cf             	mov    %rcx,%rdi
    eff9:	4b 8d 04 64          	lea    (%r12,%r12,2),%rax
    effd:	4c 89 34 c7          	mov    %r14,(%rdi,%rax,8)
    f001:	4c 89 6c c7 08       	mov    %r13,0x8(%rdi,%rax,8)
    f006:	89 5c c7 10          	mov    %ebx,0x10(%rdi,%rax,8)
    f00a:	89 6c c7 14          	mov    %ebp,0x14(%rdi,%rax,8)
    f00e:	49 83 c4 01          	add    $0x1,%r12
    f012:	4c 89 a4 24 98 01 00 	mov    %r12,0x198(%rsp)
    f019:	00 
    f01a:	4c 8d a4 24 30 02 00 	lea    0x230(%rsp),%r12
    f021:	00 
    f022:	4c 8d ac 24 b8 02 00 	lea    0x2b8(%rsp),%r13
    f029:	00 
    f02a:	4c 89 fb             	mov    %r15,%rbx
    f02d:	8a 84 24 f2 02 00 00 	mov    0x2f2(%rsp),%al
    f034:	84 c0                	test   %al,%al
    f036:	0f 85 b4 e7 ff ff    	jne    d7f0 <addr2line::ResUnit<R>::parse_lines+0x7b0>
    f03c:	e9 ff e7 ff ff       	jmpq   d840 <addr2line::ResUnit<R>::parse_lines+0x800>
    f041:	41 b8 06 00 00 00    	mov    $0x6,%r8d
    f047:	31 d2                	xor    %edx,%edx
    f049:	eb 0d                	jmp    f058 <addr2line::ResUnit<R>::parse_lines+0x2018>
    f04b:	4c 01 ca             	add    %r9,%rdx
    f04e:	48 83 c2 03          	add    $0x3,%rdx
    f052:	41 b8 13 00 00 00    	mov    $0x13,%r8d
    f058:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    f05d:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    f062:	49 89 d2             	mov    %rdx,%r10
    f065:	e9 10 fc ff ff       	jmpq   ec7a <addr2line::ResUnit<R>::parse_lines+0x1c3a>
    f06a:	4d 8d 14 29          	lea    (%r9,%rbp,1),%r10
    f06e:	49 83 c2 03          	add    $0x3,%r10
    f072:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    f077:	48 c7 44 24 08 13 00 	movq   $0x13,0x8(%rsp)
    f07e:	00 00 
    f080:	eb 65                	jmp    f0e7 <addr2line::ResUnit<R>::parse_lines+0x20a7>
    f082:	31 d2                	xor    %edx,%edx
    f084:	f7 f6                	div    %esi
    f086:	48 0f af c1          	imul   %rcx,%rax
    f08a:	48 01 84 24 b8 02 00 	add    %rax,0x2b8(%rsp)
    f091:	00 
    f092:	48 89 94 24 c0 02 00 	mov    %rdx,0x2c0(%rsp)
    f099:	00 
    f09a:	31 f6                	xor    %esi,%esi
    f09c:	4c 89 eb             	mov    %r13,%rbx
    f09f:	48 8b 84 24 08 01 00 	mov    0x108(%rsp),%rax
    f0a6:	00 
    f0a7:	48 8b 8c 24 a0 01 00 	mov    0x1a0(%rsp),%rcx
    f0ae:	00 
    f0af:	48 8b 94 24 f8 00 00 	mov    0xf8(%rsp),%rdx
    f0b6:	00 
    f0b7:	4c 8d 84 24 c0 01 00 	lea    0x1c0(%rsp),%r8
    f0be:	00 
    f0bf:	e9 dd fb ff ff       	jmpq   eca1 <addr2line::ResUnit<R>::parse_lines+0x1c61>
    f0c4:	41 b8 07 00 00 00    	mov    $0x7,%r8d
    f0ca:	e9 b7 fa ff ff       	jmpq   eb86 <addr2line::ResUnit<R>::parse_lines+0x1b46>
    f0cf:	4d 8d 14 29          	lea    (%r9,%rbp,1),%r10
    f0d3:	49 83 c2 02          	add    $0x2,%r10
    f0d7:	31 c0                	xor    %eax,%eax
    f0d9:	48 83 c8 13          	or     $0x13,%rax
    f0dd:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    f0e2:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    f0e7:	41 b8 13 00 00 00    	mov    $0x13,%r8d
    f0ed:	e9 88 fb ff ff       	jmpq   ec7a <addr2line::ResUnit<R>::parse_lines+0x1c3a>
    f0f2:	49 81 e0 00 ff ff ff 	and    $0xffffffffffffff00,%r8
    f0f9:	49 83 c8 06          	or     $0x6,%r8
    f0fd:	eb 09                	jmp    f108 <addr2line::ResUnit<R>::parse_lines+0x20c8>
    f0ff:	4d 89 de             	mov    %r11,%r14
    f102:	41 b8 13 00 00 00    	mov    $0x13,%r8d
    f108:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    f10d:	4c 89 74 24 10       	mov    %r14,0x10(%rsp)
    f112:	4c 89 f2             	mov    %r14,%rdx
    f115:	4c 0f a4 c2 38       	shld   $0x38,%r8,%rdx
    f11a:	4c 89 f1             	mov    %r14,%rcx
    f11d:	4c 0f a4 c1 30       	shld   $0x30,%r8,%rcx
    f122:	4c 89 c0             	mov    %r8,%rax
    f125:	4c 0f ac f0 20       	shrd   $0x20,%r14,%rax
    f12a:	4d 89 f2             	mov    %r14,%r10
    f12d:	e9 4e fb ff ff       	jmpq   ec80 <addr2line::ResUnit<R>::parse_lines+0x1c40>
    f132:	4c 89 74 24 10       	mov    %r14,0x10(%rsp)
    f137:	48 c7 44 24 08 13 00 	movq   $0x13,0x8(%rsp)
    f13e:	00 00 
    f140:	41 b8 13 00 00 00    	mov    $0x13,%r8d
    f146:	4d 89 f2             	mov    %r14,%r10
    f149:	e9 2c fb ff ff       	jmpq   ec7a <addr2line::ResUnit<R>::parse_lines+0x1c3a>
    f14e:	49 c1 e0 08          	shl    $0x8,%r8
    f152:	49 83 c8 17          	or     $0x17,%r8
    f156:	45 31 d2             	xor    %r10d,%r10d
    f159:	eb 0e                	jmp    f169 <addr2line::ResUnit<R>::parse_lines+0x2129>
    f15b:	4d 8d 14 29          	lea    (%r9,%rbp,1),%r10
    f15f:	49 83 c2 03          	add    $0x3,%r10
    f163:	41 b8 13 00 00 00    	mov    $0x13,%r8d
    f169:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    f16e:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    f173:	4c 89 c2             	mov    %r8,%rdx
    f176:	48 c1 ea 08          	shr    $0x8,%rdx
    f17a:	31 c0                	xor    %eax,%eax
    f17c:	31 c9                	xor    %ecx,%ecx
    f17e:	e9 fd fa ff ff       	jmpq   ec80 <addr2line::ResUnit<R>::parse_lines+0x1c40>
    f183:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    f188:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    f18d:	4c 89 d2             	mov    %r10,%rdx
    f190:	4c 0f a4 c2 38       	shld   $0x38,%r8,%rdx
    f195:	4c 89 d1             	mov    %r10,%rcx
    f198:	4c 0f a4 c1 30       	shld   $0x30,%r8,%rcx
    f19d:	4c 89 c0             	mov    %r8,%rax
    f1a0:	4c 0f ac d0 20       	shrd   $0x20,%r10,%rax
    f1a5:	e9 d6 fa ff ff       	jmpq   ec80 <addr2line::ResUnit<R>::parse_lines+0x1c40>
    f1aa:	48 8b 84 24 70 01 00 	mov    0x170(%rsp),%rax
    f1b1:	00 
    f1b2:	48 89 84 24 e0 00 00 	mov    %rax,0xe0(%rsp)
    f1b9:	00 
    f1ba:	4c 8b a4 24 80 01 00 	mov    0x180(%rsp),%r12
    f1c1:	00 
    f1c2:	49 83 fc 15          	cmp    $0x15,%r12
    f1c6:	0f 83 3b 01 00 00    	jae    f307 <addr2line::ResUnit<R>::parse_lines+0x22c7>
    f1cc:	49 83 fc 02          	cmp    $0x2,%r12
    f1d0:	0f 82 9a 08 00 00    	jb     fa70 <addr2line::ResUnit<R>::parse_lines+0x2a30>
    f1d6:	49 8d 7c 24 ff       	lea    -0x1(%r12),%rdi
    f1db:	4c 89 e3             	mov    %r12,%rbx
    f1de:	48 c1 e3 05          	shl    $0x5,%rbx
    f1e2:	48 03 9c 24 e0 00 00 	add    0xe0(%rsp),%rbx
    f1e9:	00 
    f1ea:	31 f6                	xor    %esi,%esi
    f1ec:	4c 8b 94 24 e0 00 00 	mov    0xe0(%rsp),%r10
    f1f3:	00 
    f1f4:	eb 38                	jmp    f22e <addr2line::ResUnit<R>::parse_lines+0x21ee>
    f1f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    f1fd:	00 00 00 
    f200:	4c 89 02             	mov    %r8,(%rdx)
    f203:	66 0f 6f 84 24 10 01 	movdqa 0x110(%rsp),%xmm0
    f20a:	00 00 
    f20c:	f3 0f 7f 42 08       	movdqu %xmm0,0x8(%rdx)
    f211:	48 8b 84 24 20 01 00 	mov    0x120(%rsp),%rax
    f218:	00 
    f219:	48 89 42 18          	mov    %rax,0x18(%rdx)
    f21d:	48 83 c3 e0          	add    $0xffffffffffffffe0,%rbx
    f221:	48 83 c6 01          	add    $0x1,%rsi
    f225:	48 85 ff             	test   %rdi,%rdi
    f228:	0f 84 42 08 00 00    	je     fa70 <addr2line::ResUnit<R>::parse_lines+0x2a30>
    f22e:	48 89 fa             	mov    %rdi,%rdx
    f231:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
    f235:	4c 89 e5             	mov    %r12,%rbp
    f238:	48 29 fd             	sub    %rdi,%rbp
    f23b:	0f 82 fe 11 00 00    	jb     1043f <addr2line::ResUnit<R>::parse_lines+0x33ff>
    f241:	48 83 fd 02          	cmp    $0x2,%rbp
    f245:	72 d6                	jb     f21d <addr2line::ResUnit<R>::parse_lines+0x21dd>
    f247:	48 89 f9             	mov    %rdi,%rcx
    f24a:	48 c1 e1 05          	shl    $0x5,%rcx
    f24e:	48 8b 84 24 e0 00 00 	mov    0xe0(%rsp),%rax
    f255:	00 
    f256:	4c 8d 0c 08          	lea    (%rax,%rcx,1),%r9
    f25a:	48 c1 e2 05          	shl    $0x5,%rdx
    f25e:	4d 8b 01             	mov    (%r9),%r8
    f261:	4c 39 04 10          	cmp    %r8,(%rax,%rdx,1)
    f265:	73 b6                	jae    f21d <addr2line::ResUnit<R>::parse_lines+0x21dd>
    f267:	4c 01 d2             	add    %r10,%rdx
    f26a:	49 8b 44 0a 18       	mov    0x18(%r10,%rcx,1),%rax
    f26f:	48 89 84 24 20 01 00 	mov    %rax,0x120(%rsp)
    f276:	00 
    f277:	41 0f 10 44 0a 08    	movups 0x8(%r10,%rcx,1),%xmm0
    f27d:	0f 29 84 24 10 01 00 	movaps %xmm0,0x110(%rsp)
    f284:	00 
    f285:	f3 0f 6f 02          	movdqu (%rdx),%xmm0
    f289:	0f 10 4a 10          	movups 0x10(%rdx),%xmm1
    f28d:	41 0f 11 49 10       	movups %xmm1,0x10(%r9)
    f292:	f3 41 0f 7f 01       	movdqu %xmm0,(%r9)
    f297:	48 83 fd 03          	cmp    $0x3,%rbp
    f29b:	0f 82 5f ff ff ff    	jb     f200 <addr2line::ResUnit<R>::parse_lines+0x21c0>
    f2a1:	48 89 f1             	mov    %rsi,%rcx
    f2a4:	48 89 d8             	mov    %rbx,%rax
    f2a7:	4d 39 41 40          	cmp    %r8,0x40(%r9)
    f2ab:	0f 83 4f ff ff ff    	jae    f200 <addr2line::ResUnit<R>::parse_lines+0x21c0>
    f2b1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    f2b8:	00 00 00 
    f2bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f2c0:	48 89 c2             	mov    %rax,%rdx
    f2c3:	f3 0f 6f 00          	movdqu (%rax),%xmm0
    f2c7:	0f 10 48 10          	movups 0x10(%rax),%xmm1
    f2cb:	0f 11 48 f0          	movups %xmm1,-0x10(%rax)
    f2cf:	f3 0f 7f 40 e0       	movdqu %xmm0,-0x20(%rax)
    f2d4:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
    f2d8:	0f 84 22 ff ff ff    	je     f200 <addr2line::ResUnit<R>::parse_lines+0x21c0>
    f2de:	48 8d 42 20          	lea    0x20(%rdx),%rax
    f2e2:	4c 39 42 20          	cmp    %r8,0x20(%rdx)
    f2e6:	72 d8                	jb     f2c0 <addr2line::ResUnit<R>::parse_lines+0x2280>
    f2e8:	e9 13 ff ff ff       	jmpq   f200 <addr2line::ResUnit<R>::parse_lines+0x21c0>
    f2ed:	48 89 d8             	mov    %rbx,%rax
    f2f0:	48 85 c0             	test   %rax,%rax
    f2f3:	0f 85 ce e0 ff ff    	jne    d3c7 <addr2line::ResUnit<R>::parse_lines+0x387>
    f2f9:	48 89 ef             	mov    %rbp,%rdi
    f2fc:	48 89 de             	mov    %rbx,%rsi
    f2ff:	ff 15 23 68 03 00    	callq  *0x36823(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
    f305:	0f 0b                	ud2    
    f307:	4c 89 e0             	mov    %r12,%rax
    f30a:	48 d1 e8             	shr    %rax
    f30d:	b9 20 00 00 00       	mov    $0x20,%ecx
    f312:	31 db                	xor    %ebx,%ebx
    f314:	48 f7 e1             	mul    %rcx
    f317:	48 89 c7             	mov    %rax,%rdi
    f31a:	0f 91 c0             	setno  %al
    f31d:	0f 80 16 12 00 00    	jo     10539 <addr2line::ResUnit<R>::parse_lines+0x34f9>
    f323:	88 c3                	mov    %al,%bl
    f325:	48 c1 e3 03          	shl    $0x3,%rbx
    f329:	48 85 ff             	test   %rdi,%rdi
    f32c:	48 89 bc 24 b8 01 00 	mov    %rdi,0x1b8(%rsp)
    f333:	00 
    f334:	74 0b                	je     f341 <addr2line::ResUnit<R>::parse_lines+0x2301>
    f336:	48 89 de             	mov    %rbx,%rsi
    f339:	ff 15 49 68 03 00    	callq  *0x36849(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
    f33f:	eb 03                	jmp    f344 <addr2line::ResUnit<R>::parse_lines+0x2304>
    f341:	48 89 d8             	mov    %rbx,%rax
    f344:	48 85 c0             	test   %rax,%rax
    f347:	0f 84 f4 11 00 00    	je     10541 <addr2line::ResUnit<R>::parse_lines+0x3501>
    f34d:	48 8b 8c 24 b8 01 00 	mov    0x1b8(%rsp),%rcx
    f354:	00 
    f355:	48 c1 e9 05          	shr    $0x5,%rcx
    f359:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    f35e:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
    f363:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
    f36a:	00 00 
    f36c:	48 c7 44 24 50 08 00 	movq   $0x8,0x50(%rsp)
    f373:	00 00 
    f375:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f379:	f3 0f 7f 44 24 58    	movdqu %xmm0,0x58(%rsp)
    f37f:	48 8b 8c 24 e0 00 00 	mov    0xe0(%rsp),%rcx
    f386:	00 
    f387:	48 8d 51 a0          	lea    -0x60(%rcx),%rdx
    f38b:	48 89 94 24 70 03 00 	mov    %rdx,0x370(%rsp)
    f392:	00 
    f393:	48 8d 51 e0          	lea    -0x20(%rcx),%rdx
    f397:	48 89 94 24 18 03 00 	mov    %rdx,0x318(%rsp)
    f39e:	00 
    f39f:	48 8d 51 c0          	lea    -0x40(%rcx),%rdx
    f3a3:	48 89 94 24 68 03 00 	mov    %rdx,0x368(%rsp)
    f3aa:	00 
    f3ab:	48 8d 49 20          	lea    0x20(%rcx),%rcx
    f3af:	48 89 8c 24 60 03 00 	mov    %rcx,0x360(%rsp)
    f3b6:	00 
    f3b7:	4c 89 e6             	mov    %r12,%rsi
    f3ba:	48 89 84 24 60 01 00 	mov    %rax,0x160(%rsp)
    f3c1:	00 
    f3c2:	4c 89 a4 24 20 03 00 	mov    %r12,0x320(%rsp)
    f3c9:	00 
    f3ca:	e9 12 00 00 00       	jmpq   f3e1 <addr2line::ResUnit<R>::parse_lines+0x23a1>
    f3cf:	90                   	nop
    f3d0:	48 8b b4 24 80 03 00 	mov    0x380(%rsp),%rsi
    f3d7:	00 
    f3d8:	48 85 f6             	test   %rsi,%rsi
    f3db:	0f 84 4f 06 00 00    	je     fa30 <addr2line::ResUnit<R>::parse_lines+0x29f0>
    f3e1:	49 89 f0             	mov    %rsi,%r8
    f3e4:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
    f3e8:	0f 84 02 01 00 00    	je     f4f0 <addr2line::ResUnit<R>::parse_lines+0x24b0>
    f3ee:	4c 8d 4e fe          	lea    -0x2(%rsi),%r9
    f3f2:	4c 89 c1             	mov    %r8,%rcx
    f3f5:	48 c1 e1 05          	shl    $0x5,%rcx
    f3f9:	4c 89 c8             	mov    %r9,%rax
    f3fc:	48 c1 e0 05          	shl    $0x5,%rax
    f400:	48 8b 94 24 e0 00 00 	mov    0xe0(%rsp),%rdx
    f407:	00 
    f408:	4c 8b 34 02          	mov    (%rdx,%rax,1),%r14
    f40c:	4c 39 34 0a          	cmp    %r14,(%rdx,%rcx,1)
    f410:	0f 83 ea 00 00 00    	jae    f500 <addr2line::ResUnit<R>::parse_lines+0x24c0>
    f416:	48 89 f1             	mov    %rsi,%rcx
    f419:	48 c1 e1 05          	shl    $0x5,%rcx
    f41d:	48 8b 84 24 68 03 00 	mov    0x368(%rsp),%rax
    f424:	00 
    f425:	4c 8d 14 08          	lea    (%rax,%rcx,1),%r10
    f429:	ba 02 00 00 00       	mov    $0x2,%edx
    f42e:	66 90                	xchg   %ax,%ax
    f430:	4c 89 cf             	mov    %r9,%rdi
    f433:	48 89 d5             	mov    %rdx,%rbp
    f436:	4c 89 d3             	mov    %r10,%rbx
    f439:	4d 85 c9             	test   %r9,%r9
    f43c:	74 27                	je     f465 <addr2line::ResUnit<R>::parse_lines+0x2425>
    f43e:	4c 8d 4f ff          	lea    -0x1(%rdi),%r9
    f442:	4c 89 ca             	mov    %r9,%rdx
    f445:	48 c1 e2 05          	shl    $0x5,%rdx
    f449:	48 8b 84 24 e0 00 00 	mov    0xe0(%rsp),%rax
    f450:	00 
    f451:	4c 8b 1c 10          	mov    (%rax,%rdx,1),%r11
    f455:	48 8d 55 01          	lea    0x1(%rbp),%rdx
    f459:	4c 8d 53 e0          	lea    -0x20(%rbx),%r10
    f45d:	4d 39 de             	cmp    %r11,%r14
    f460:	4d 89 de             	mov    %r11,%r14
    f463:	72 cb                	jb     f430 <addr2line::ResUnit<R>::parse_lines+0x23f0>
    f465:	48 89 f2             	mov    %rsi,%rdx
    f468:	48 29 fa             	sub    %rdi,%rdx
    f46b:	0f 82 18 10 00 00    	jb     10489 <addr2line::ResUnit<R>::parse_lines+0x3449>
    f471:	4c 39 e6             	cmp    %r12,%rsi
    f474:	0f 87 21 10 00 00    	ja     1049b <addr2line::ResUnit<R>::parse_lines+0x345b>
    f47a:	48 f7 c2 fe ff ff ff 	test   $0xfffffffffffffffe,%rdx
    f481:	74 59                	je     f4dc <addr2line::ResUnit<R>::parse_lines+0x249c>
    f483:	48 d1 ed             	shr    %rbp
    f486:	48 03 8c 24 18 03 00 	add    0x318(%rsp),%rcx
    f48d:	00 
    f48e:	66 90                	xchg   %ax,%ax
    f490:	0f 10 03             	movups (%rbx),%xmm0
    f493:	0f 10 4b 10          	movups 0x10(%rbx),%xmm1
    f497:	0f 29 8c 24 20 01 00 	movaps %xmm1,0x120(%rsp)
    f49e:	00 
    f49f:	0f 29 84 24 10 01 00 	movaps %xmm0,0x110(%rsp)
    f4a6:	00 
    f4a7:	0f 10 01             	movups (%rcx),%xmm0
    f4aa:	0f 10 49 10          	movups 0x10(%rcx),%xmm1
    f4ae:	0f 11 03             	movups %xmm0,(%rbx)
    f4b1:	0f 11 4b 10          	movups %xmm1,0x10(%rbx)
    f4b5:	66 0f 6f 84 24 10 01 	movdqa 0x110(%rsp),%xmm0
    f4bc:	00 00 
    f4be:	0f 28 8c 24 20 01 00 	movaps 0x120(%rsp),%xmm1
    f4c5:	00 
    f4c6:	0f 11 49 10          	movups %xmm1,0x10(%rcx)
    f4ca:	f3 0f 7f 01          	movdqu %xmm0,(%rcx)
    f4ce:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    f4d2:	48 83 c3 20          	add    $0x20,%rbx
    f4d6:	48 83 c5 ff          	add    $0xffffffffffffffff,%rbp
    f4da:	75 b4                	jne    f490 <addr2line::ResUnit<R>::parse_lines+0x2450>
    f4dc:	48 83 fa 09          	cmp    $0x9,%rdx
    f4e0:	0f 86 6a 00 00 00    	jbe    f550 <addr2line::ResUnit<R>::parse_lines+0x2510>
    f4e6:	e9 a5 01 00 00       	jmpq   f690 <addr2line::ResUnit<R>::parse_lines+0x2650>
    f4eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f4f0:	ba 01 00 00 00       	mov    $0x1,%edx
    f4f5:	31 c9                	xor    %ecx,%ecx
    f4f7:	e9 a4 01 00 00       	jmpq   f6a0 <addr2line::ResUnit<R>::parse_lines+0x2660>
    f4fc:	0f 1f 40 00          	nopl   0x0(%rax)
    f500:	48 89 f1             	mov    %rsi,%rcx
    f503:	48 c1 e1 05          	shl    $0x5,%rcx
    f507:	48 03 8c 24 70 03 00 	add    0x370(%rsp),%rcx
    f50e:	00 
    f50f:	48 8d 7e fe          	lea    -0x2(%rsi),%rdi
    f513:	31 d2                	xor    %edx,%edx
    f515:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    f51c:	00 00 00 
    f51f:	90                   	nop
    f520:	48 39 d7             	cmp    %rdx,%rdi
    f523:	0f 84 6c 01 00 00    	je     f695 <addr2line::ResUnit<R>::parse_lines+0x2655>
    f529:	48 8b 29             	mov    (%rcx),%rbp
    f52c:	48 83 c2 01          	add    $0x1,%rdx
    f530:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    f534:	49 39 ee             	cmp    %rbp,%r14
    f537:	49 89 ee             	mov    %rbp,%r14
    f53a:	73 e4                	jae    f520 <addr2line::ResUnit<R>::parse_lines+0x24e0>
    f53c:	4c 89 c7             	mov    %r8,%rdi
    f53f:	48 29 d7             	sub    %rdx,%rdi
    f542:	48 83 c2 01          	add    $0x1,%rdx
    f546:	48 83 fa 09          	cmp    $0x9,%rdx
    f54a:	0f 87 40 01 00 00    	ja     f690 <addr2line::ResUnit<R>::parse_lines+0x2650>
    f550:	48 85 ff             	test   %rdi,%rdi
    f553:	0f 84 37 01 00 00    	je     f690 <addr2line::ResUnit<R>::parse_lines+0x2650>
    f559:	4c 39 e6             	cmp    %r12,%rsi
    f55c:	0f 87 a4 0f 00 00    	ja     10506 <addr2line::ResUnit<R>::parse_lines+0x34c6>
    f562:	48 89 fb             	mov    %rdi,%rbx
    f565:	48 c1 e3 05          	shl    $0x5,%rbx
    f569:	48 03 9c 24 60 03 00 	add    0x360(%rsp),%rbx
    f570:	00 
    f571:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    f578:	00 00 00 
    f57b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f580:	48 8d 4f ff          	lea    -0x1(%rdi),%rcx
    f584:	48 89 f2             	mov    %rsi,%rdx
    f587:	48 29 ca             	sub    %rcx,%rdx
    f58a:	0f 82 82 0f 00 00    	jb     10512 <addr2line::ResUnit<R>::parse_lines+0x34d2>
    f590:	48 83 fa 02          	cmp    $0x2,%rdx
    f594:	0f 82 d7 00 00 00    	jb     f671 <addr2line::ResUnit<R>::parse_lines+0x2631>
    f59a:	48 89 c8             	mov    %rcx,%rax
    f59d:	48 c1 e0 05          	shl    $0x5,%rax
    f5a1:	49 89 ce             	mov    %rcx,%r14
    f5a4:	48 8b 8c 24 e0 00 00 	mov    0xe0(%rsp),%rcx
    f5ab:	00 
    f5ac:	4c 8d 14 01          	lea    (%rcx,%rax,1),%r10
    f5b0:	48 89 fd             	mov    %rdi,%rbp
    f5b3:	48 c1 e5 05          	shl    $0x5,%rbp
    f5b7:	4d 8b 0a             	mov    (%r10),%r9
    f5ba:	4c 39 0c 29          	cmp    %r9,(%rcx,%rbp,1)
    f5be:	4c 89 f1             	mov    %r14,%rcx
    f5c1:	0f 83 aa 00 00 00    	jae    f671 <addr2line::ResUnit<R>::parse_lines+0x2631>
    f5c7:	4c 8b 9c 24 e0 00 00 	mov    0xe0(%rsp),%r11
    f5ce:	00 
    f5cf:	4c 01 dd             	add    %r11,%rbp
    f5d2:	49 8b 4c 03 18       	mov    0x18(%r11,%rax,1),%rcx
    f5d7:	48 89 8c 24 20 01 00 	mov    %rcx,0x120(%rsp)
    f5de:	00 
    f5df:	41 0f 10 44 03 08    	movups 0x8(%r11,%rax,1),%xmm0
    f5e5:	0f 29 84 24 10 01 00 	movaps %xmm0,0x110(%rsp)
    f5ec:	00 
    f5ed:	f3 0f 6f 45 00       	movdqu 0x0(%rbp),%xmm0
    f5f2:	0f 10 4d 10          	movups 0x10(%rbp),%xmm1
    f5f6:	41 0f 11 4a 10       	movups %xmm1,0x10(%r10)
    f5fb:	f3 41 0f 7f 02       	movdqu %xmm0,(%r10)
    f600:	48 83 fa 03          	cmp    $0x3,%rdx
    f604:	72 4a                	jb     f650 <addr2line::ResUnit<R>::parse_lines+0x2610>
    f606:	4c 89 c0             	mov    %r8,%rax
    f609:	48 89 d9             	mov    %rbx,%rcx
    f60c:	4d 39 4a 40          	cmp    %r9,0x40(%r10)
    f610:	0f 83 3a 00 00 00    	jae    f650 <addr2line::ResUnit<R>::parse_lines+0x2610>
    f616:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    f61d:	00 00 00 
    f620:	48 89 cd             	mov    %rcx,%rbp
    f623:	f3 0f 6f 01          	movdqu (%rcx),%xmm0
    f627:	0f 10 49 10          	movups 0x10(%rcx),%xmm1
    f62b:	0f 11 49 f0          	movups %xmm1,-0x10(%rcx)
    f62f:	f3 0f 7f 41 e0       	movdqu %xmm0,-0x20(%rcx)
    f634:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    f638:	48 39 c7             	cmp    %rax,%rdi
    f63b:	74 13                	je     f650 <addr2line::ResUnit<R>::parse_lines+0x2610>
    f63d:	48 8d 4d 20          	lea    0x20(%rbp),%rcx
    f641:	4c 39 4d 20          	cmp    %r9,0x20(%rbp)
    f645:	0f 82 d5 ff ff ff    	jb     f620 <addr2line::ResUnit<R>::parse_lines+0x25e0>
    f64b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f650:	4c 89 4d 00          	mov    %r9,0x0(%rbp)
    f654:	66 0f 6f 84 24 10 01 	movdqa 0x110(%rsp),%xmm0
    f65b:	00 00 
    f65d:	f3 0f 7f 45 08       	movdqu %xmm0,0x8(%rbp)
    f662:	48 8b 84 24 20 01 00 	mov    0x120(%rsp),%rax
    f669:	00 
    f66a:	48 89 45 18          	mov    %rax,0x18(%rbp)
    f66e:	4c 89 f1             	mov    %r14,%rcx
    f671:	48 85 c9             	test   %rcx,%rcx
    f674:	0f 84 26 00 00 00    	je     f6a0 <addr2line::ResUnit<R>::parse_lines+0x2660>
    f67a:	48 83 c3 e0          	add    $0xffffffffffffffe0,%rbx
    f67e:	48 89 cf             	mov    %rcx,%rdi
    f681:	48 83 fa 0a          	cmp    $0xa,%rdx
    f685:	0f 82 f5 fe ff ff    	jb     f580 <addr2line::ResUnit<R>::parse_lines+0x2540>
    f68b:	e9 10 00 00 00       	jmpq   f6a0 <addr2line::ResUnit<R>::parse_lines+0x2660>
    f690:	48 89 f9             	mov    %rdi,%rcx
    f693:	eb 0b                	jmp    f6a0 <addr2line::ResUnit<R>::parse_lines+0x2660>
    f695:	31 c9                	xor    %ecx,%ecx
    f697:	48 89 f2             	mov    %rsi,%rdx
    f69a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f6a0:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
    f6a5:	48 89 8c 24 80 03 00 	mov    %rcx,0x380(%rsp)
    f6ac:	00 
    f6ad:	48 89 ce             	mov    %rcx,%rsi
    f6b0:	e8 1b 9d ff ff       	callq  93d0 <alloc::vec::Vec<T>::push>
    f6b5:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    f6ba:	48 83 f8 02          	cmp    $0x2,%rax
    f6be:	48 8b 9c 24 60 01 00 	mov    0x160(%rsp),%rbx
    f6c5:	00 
    f6c6:	0f 82 04 fd ff ff    	jb     f3d0 <addr2line::ResUnit<R>::parse_lines+0x2390>
    f6cc:	4c 8b 74 24 50       	mov    0x50(%rsp),%r14
    f6d1:	4c 89 b4 24 88 03 00 	mov    %r14,0x388(%rsp)
    f6d8:	00 
    f6d9:	e9 9c 00 00 00       	jmpq   f77a <addr2line::ResUnit<R>::parse_lines+0x273a>
    f6de:	66 90                	xchg   %ax,%ax
    f6e0:	49 89 cc             	mov    %rcx,%r12
    f6e3:	48 89 ef             	mov    %rbp,%rdi
    f6e6:	48 89 de             	mov    %rbx,%rsi
    f6e9:	49 29 f6             	sub    %rsi,%r14
    f6ec:	49 83 e6 e0          	and    $0xffffffffffffffe0,%r14
    f6f0:	4c 89 f2             	mov    %r14,%rdx
    f6f3:	ff 15 07 66 03 00    	callq  *0x36607(%rip)        # 45d00 <memcpy@GLIBC_2.14>
    f6f9:	48 8b 8c 24 30 03 00 	mov    0x330(%rsp),%rcx
    f700:	00 
    f701:	4c 01 e1             	add    %r12,%rcx
    f704:	48 8b 84 24 00 01 00 	mov    0x100(%rsp),%rax
    f70b:	00 
    f70c:	48 8b 94 24 98 03 00 	mov    0x398(%rsp),%rdx
    f713:	00 
    f714:	48 89 02             	mov    %rax,(%rdx)
    f717:	48 8b 84 24 90 03 00 	mov    0x390(%rsp),%rax
    f71e:	00 
    f71f:	48 89 08             	mov    %rcx,(%rax)
    f722:	4c 8b b4 24 88 03 00 	mov    0x388(%rsp),%r14
    f729:	00 
    f72a:	48 8b 84 24 68 01 00 	mov    0x168(%rsp),%rax
    f731:	00 
    f732:	49 8d 3c 06          	lea    (%r14,%rax,1),%rdi
    f736:	49 8d 34 06          	lea    (%r14,%rax,1),%rsi
    f73a:	48 83 c6 10          	add    $0x10,%rsi
    f73e:	48 8b 94 24 08 01 00 	mov    0x108(%rsp),%rdx
    f745:	00 
    f746:	48 f7 d2             	not    %rdx
    f749:	48 03 94 24 a0 01 00 	add    0x1a0(%rsp),%rdx
    f750:	00 
    f751:	48 c1 e2 04          	shl    $0x4,%rdx
    f755:	ff 15 15 67 03 00    	callq  *0x36715(%rip)        # 45e70 <memmove@GLIBC_2.2.5>
    f75b:	48 8b 84 24 f8 00 00 	mov    0xf8(%rsp),%rax
    f762:	00 
    f763:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
    f768:	48 83 f8 01          	cmp    $0x1,%rax
    f76c:	4c 8b a4 24 20 03 00 	mov    0x320(%rsp),%r12
    f773:	00 
    f774:	0f 86 56 fc ff ff    	jbe    f3d0 <addr2line::ResUnit<R>::parse_lines+0x2390>
    f77a:	48 89 c6             	mov    %rax,%rsi
    f77d:	4c 8d 40 ff          	lea    -0x1(%rax),%r8
    f781:	4c 89 c5             	mov    %r8,%rbp
    f784:	48 c1 e5 04          	shl    $0x4,%rbp
    f788:	49 83 3c 2e 00       	cmpq   $0x0,(%r14,%rbp,1)
    f78d:	74 61                	je     f7f0 <addr2line::ResUnit<R>::parse_lines+0x27b0>
    f78f:	48 89 f2             	mov    %rsi,%rdx
    f792:	48 c1 e2 04          	shl    $0x4,%rdx
    f796:	4a 8b 44 32 e8       	mov    -0x18(%rdx,%r14,1),%rax
    f79b:	4d 8b 4c 2e 08       	mov    0x8(%r14,%rbp,1),%r9
    f7a0:	4c 39 c8             	cmp    %r9,%rax
    f7a3:	76 4b                	jbe    f7f0 <addr2line::ResUnit<R>::parse_lines+0x27b0>
    f7a5:	48 83 fe 02          	cmp    $0x2,%rsi
    f7a9:	0f 86 21 fc ff ff    	jbe    f3d0 <addr2line::ResUnit<R>::parse_lines+0x2390>
    f7af:	48 8d 7e fd          	lea    -0x3(%rsi),%rdi
    f7b3:	48 89 f9             	mov    %rdi,%rcx
    f7b6:	48 c1 e1 04          	shl    $0x4,%rcx
    f7ba:	49 8b 4c 0e 08       	mov    0x8(%r14,%rcx,1),%rcx
    f7bf:	49 8d 2c 01          	lea    (%r9,%rax,1),%rbp
    f7c3:	48 39 e9             	cmp    %rbp,%rcx
    f7c6:	76 43                	jbe    f80b <addr2line::ResUnit<R>::parse_lines+0x27cb>
    f7c8:	48 83 fe 03          	cmp    $0x3,%rsi
    f7cc:	0f 86 fe fb ff ff    	jbe    f3d0 <addr2line::ResUnit<R>::parse_lines+0x2390>
    f7d2:	48 01 c8             	add    %rcx,%rax
    f7d5:	4a 39 44 32 c8       	cmp    %rax,-0x38(%rdx,%r14,1)
    f7da:	0f 86 2b 00 00 00    	jbe    f80b <addr2line::ResUnit<R>::parse_lines+0x27cb>
    f7e0:	e9 eb fb ff ff       	jmpq   f3d0 <addr2line::ResUnit<R>::parse_lines+0x2390>
    f7e5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    f7ec:	00 00 00 
    f7ef:	90                   	nop
    f7f0:	48 83 fe 03          	cmp    $0x3,%rsi
    f7f4:	72 1a                	jb     f810 <addr2line::ResUnit<R>::parse_lines+0x27d0>
    f7f6:	48 8d 7e fd          	lea    -0x3(%rsi),%rdi
    f7fa:	48 89 f8             	mov    %rdi,%rax
    f7fd:	48 c1 e0 04          	shl    $0x4,%rax
    f801:	49 8b 4c 06 08       	mov    0x8(%r14,%rax,1),%rcx
    f806:	4d 8b 4c 2e 08       	mov    0x8(%r14,%rbp,1),%r9
    f80b:	4c 39 c9             	cmp    %r9,%rcx
    f80e:	72 04                	jb     f814 <addr2line::ResUnit<R>::parse_lines+0x27d4>
    f810:	48 8d 7e fe          	lea    -0x2(%rsi),%rdi
    f814:	48 8d 47 01          	lea    0x1(%rdi),%rax
    f818:	48 39 c6             	cmp    %rax,%rsi
    f81b:	0f 86 47 0b 00 00    	jbe    10368 <addr2line::ResUnit<R>::parse_lines+0x3328>
    f821:	48 39 fe             	cmp    %rdi,%rsi
    f824:	0f 86 53 0b 00 00    	jbe    1037d <addr2line::ResUnit<R>::parse_lines+0x333d>
    f82a:	48 89 c1             	mov    %rax,%rcx
    f82d:	48 c1 e1 04          	shl    $0x4,%rcx
    f831:	4d 8b 2c 0e          	mov    (%r14,%rcx,1),%r13
    f835:	48 c1 e7 04          	shl    $0x4,%rdi
    f839:	49 8b 54 3e 08       	mov    0x8(%r14,%rdi,1),%rdx
    f83e:	4d 8b 3c 3e          	mov    (%r14,%rdi,1),%r15
    f842:	49 01 d7             	add    %rdx,%r15
    f845:	4c 89 fb             	mov    %r15,%rbx
    f848:	4c 29 eb             	sub    %r13,%rbx
    f84b:	0f 82 3e 0b 00 00    	jb     1038f <addr2line::ResUnit<R>::parse_lines+0x334f>
    f851:	4d 39 e7             	cmp    %r12,%r15
    f854:	0f 87 4d 0b 00 00    	ja     103a7 <addr2line::ResUnit<R>::parse_lines+0x3367>
    f85a:	48 89 94 24 30 03 00 	mov    %rdx,0x330(%rsp)
    f861:	00 
    f862:	48 89 84 24 08 01 00 	mov    %rax,0x108(%rsp)
    f869:	00 
    f86a:	48 89 b4 24 a0 01 00 	mov    %rsi,0x1a0(%rsp)
    f871:	00 
    f872:	4c 89 84 24 f8 00 00 	mov    %r8,0xf8(%rsp)
    f879:	00 
    f87a:	48 89 8c 24 68 01 00 	mov    %rcx,0x168(%rsp)
    f881:	00 
    f882:	49 8b 4c 0e 08       	mov    0x8(%r14,%rcx,1),%rcx
    f887:	49 8d 04 3e          	lea    (%r14,%rdi,1),%rax
    f88b:	48 89 84 24 98 03 00 	mov    %rax,0x398(%rsp)
    f892:	00 
    f893:	49 8d 04 3e          	lea    (%r14,%rdi,1),%rax
    f897:	48 83 c0 08          	add    $0x8,%rax
    f89b:	48 89 84 24 90 03 00 	mov    %rax,0x390(%rsp)
    f8a2:	00 
    f8a3:	4c 89 ac 24 00 01 00 	mov    %r13,0x100(%rsp)
    f8aa:	00 
    f8ab:	49 c1 e5 05          	shl    $0x5,%r13
    f8af:	4c 03 ac 24 e0 00 00 	add    0xe0(%rsp),%r13
    f8b6:	00 
    f8b7:	49 89 ce             	mov    %rcx,%r14
    f8ba:	49 c1 e6 05          	shl    $0x5,%r14
    f8be:	4b 8d 2c 2e          	lea    (%r14,%r13,1),%rbp
    f8c2:	49 c1 e7 05          	shl    $0x5,%r15
    f8c6:	49 89 dc             	mov    %rbx,%r12
    f8c9:	49 29 cc             	sub    %rcx,%r12
    f8cc:	48 89 8c 24 28 03 00 	mov    %rcx,0x328(%rsp)
    f8d3:	00 
    f8d4:	49 39 cc             	cmp    %rcx,%r12
    f8d7:	0f 83 93 00 00 00    	jae    f970 <addr2line::ResUnit<R>::parse_lines+0x2930>
    f8dd:	4d 89 e6             	mov    %r12,%r14
    f8e0:	49 c1 e6 05          	shl    $0x5,%r14
    f8e4:	48 8b 9c 24 60 01 00 	mov    0x160(%rsp),%rbx
    f8eb:	00 
    f8ec:	48 89 df             	mov    %rbx,%rdi
    f8ef:	48 89 ee             	mov    %rbp,%rsi
    f8f2:	4c 89 f2             	mov    %r14,%rdx
    f8f5:	ff 15 05 64 03 00    	callq  *0x36405(%rip)        # 45d00 <memcpy@GLIBC_2.14>
    f8fb:	49 01 de             	add    %rbx,%r14
    f8fe:	48 8b 8c 24 28 03 00 	mov    0x328(%rsp),%rcx
    f905:	00 
    f906:	48 85 c9             	test   %rcx,%rcx
    f909:	0f 8e d1 fd ff ff    	jle    f6e0 <addr2line::ResUnit<R>::parse_lines+0x26a0>
    f90f:	4d 85 e4             	test   %r12,%r12
    f912:	0f 8e c8 fd ff ff    	jle    f6e0 <addr2line::ResUnit<R>::parse_lines+0x26a0>
    f918:	4c 03 bc 24 18 03 00 	add    0x318(%rsp),%r15
    f91f:	00 
    f920:	49 8b 46 e0          	mov    -0x20(%r14),%rax
    f924:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    f928:	72 16                	jb     f940 <addr2line::ResUnit<R>::parse_lines+0x2900>
    f92a:	49 83 c6 e0          	add    $0xffffffffffffffe0,%r14
    f92e:	4c 89 f0             	mov    %r14,%rax
    f931:	e9 11 00 00 00       	jmpq   f947 <addr2line::ResUnit<R>::parse_lines+0x2907>
    f936:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    f93d:	00 00 00 
    f940:	48 83 c5 e0          	add    $0xffffffffffffffe0,%rbp
    f944:	48 89 e8             	mov    %rbp,%rax
    f947:	f3 0f 6f 00          	movdqu (%rax),%xmm0
    f94b:	0f 10 48 10          	movups 0x10(%rax),%xmm1
    f94f:	41 0f 11 4f 10       	movups %xmm1,0x10(%r15)
    f954:	f3 41 0f 7f 07       	movdqu %xmm0,(%r15)
    f959:	49 39 ed             	cmp    %rbp,%r13
    f95c:	0f 83 7e fd ff ff    	jae    f6e0 <addr2line::ResUnit<R>::parse_lines+0x26a0>
    f962:	49 83 c7 e0          	add    $0xffffffffffffffe0,%r15
    f966:	49 39 de             	cmp    %rbx,%r14
    f969:	77 b5                	ja     f920 <addr2line::ResUnit<R>::parse_lines+0x28e0>
    f96b:	e9 70 fd ff ff       	jmpq   f6e0 <addr2line::ResUnit<R>::parse_lines+0x26a0>
    f970:	4c 8b a4 24 60 01 00 	mov    0x160(%rsp),%r12
    f977:	00 
    f978:	4c 89 e7             	mov    %r12,%rdi
    f97b:	4c 89 ee             	mov    %r13,%rsi
    f97e:	4c 89 f2             	mov    %r14,%rdx
    f981:	ff 15 79 63 03 00    	callq  *0x36379(%rip)        # 45d00 <memcpy@GLIBC_2.14>
    f987:	4d 01 e6             	add    %r12,%r14
    f98a:	48 8b 84 24 28 03 00 	mov    0x328(%rsp),%rax
    f991:	00 
    f992:	48 85 c0             	test   %rax,%rax
    f995:	0f 8e 82 00 00 00    	jle    fa1d <addr2line::ResUnit<R>::parse_lines+0x29dd>
    f99b:	49 89 c4             	mov    %rax,%r12
    f99e:	48 39 c3             	cmp    %rax,%rbx
    f9a1:	0f 8e 79 00 00 00    	jle    fa20 <addr2line::ResUnit<R>::parse_lines+0x29e0>
    f9a7:	4c 03 bc 24 e0 00 00 	add    0xe0(%rsp),%r15
    f9ae:	00 
    f9af:	48 8b 9c 24 60 01 00 	mov    0x160(%rsp),%rbx
    f9b6:	00 
    f9b7:	48 89 de             	mov    %rbx,%rsi
    f9ba:	48 89 d8             	mov    %rbx,%rax
    f9bd:	0f 1f 00             	nopl   (%rax)
    f9c0:	48 8b 4d 00          	mov    0x0(%rbp),%rcx
    f9c4:	48 3b 08             	cmp    (%rax),%rcx
    f9c7:	73 17                	jae    f9e0 <addr2line::ResUnit<R>::parse_lines+0x29a0>
    f9c9:	48 8d 4d 20          	lea    0x20(%rbp),%rcx
    f9cd:	48 89 c2             	mov    %rax,%rdx
    f9d0:	48 89 e8             	mov    %rbp,%rax
    f9d3:	e9 12 00 00 00       	jmpq   f9ea <addr2line::ResUnit<R>::parse_lines+0x29aa>
    f9d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f9df:	00 
    f9e0:	48 8d 70 20          	lea    0x20(%rax),%rsi
    f9e4:	48 89 f2             	mov    %rsi,%rdx
    f9e7:	48 89 e9             	mov    %rbp,%rcx
    f9ea:	49 8d 7d 20          	lea    0x20(%r13),%rdi
    f9ee:	f3 0f 6f 00          	movdqu (%rax),%xmm0
    f9f2:	0f 10 48 10          	movups 0x10(%rax),%xmm1
    f9f6:	41 0f 11 4d 10       	movups %xmm1,0x10(%r13)
    f9fb:	f3 41 0f 7f 45 00    	movdqu %xmm0,0x0(%r13)
    fa01:	4c 39 f2             	cmp    %r14,%rdx
    fa04:	0f 83 df fc ff ff    	jae    f6e9 <addr2line::ResUnit<R>::parse_lines+0x26a9>
    fa0a:	48 89 d0             	mov    %rdx,%rax
    fa0d:	49 89 fd             	mov    %rdi,%r13
    fa10:	48 89 cd             	mov    %rcx,%rbp
    fa13:	4c 39 f9             	cmp    %r15,%rcx
    fa16:	72 a8                	jb     f9c0 <addr2line::ResUnit<R>::parse_lines+0x2980>
    fa18:	e9 cc fc ff ff       	jmpq   f6e9 <addr2line::ResUnit<R>::parse_lines+0x26a9>
    fa1d:	49 89 c4             	mov    %rax,%r12
    fa20:	4c 89 ef             	mov    %r13,%rdi
    fa23:	48 8b 9c 24 60 01 00 	mov    0x160(%rsp),%rbx
    fa2a:	00 
    fa2b:	e9 b6 fc ff ff       	jmpq   f6e6 <addr2line::ResUnit<R>::parse_lines+0x26a6>
    fa30:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
    fa35:	48 85 f6             	test   %rsi,%rsi
    fa38:	74 1b                	je     fa55 <addr2line::ResUnit<R>::parse_lines+0x2a15>
    fa3a:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
    fa3f:	48 85 ff             	test   %rdi,%rdi
    fa42:	74 11                	je     fa55 <addr2line::ResUnit<R>::parse_lines+0x2a15>
    fa44:	48 c1 e6 04          	shl    $0x4,%rsi
    fa48:	74 0b                	je     fa55 <addr2line::ResUnit<R>::parse_lines+0x2a15>
    fa4a:	ba 08 00 00 00       	mov    $0x8,%edx
    fa4f:	ff 15 ab 61 03 00    	callq  *0x361ab(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    fa55:	48 8b b4 24 b8 01 00 	mov    0x1b8(%rsp),%rsi
    fa5c:	00 
    fa5d:	48 85 f6             	test   %rsi,%rsi
    fa60:	74 0e                	je     fa70 <addr2line::ResUnit<R>::parse_lines+0x2a30>
    fa62:	ba 08 00 00 00       	mov    $0x8,%edx
    fa67:	48 89 df             	mov    %rbx,%rdi
    fa6a:	ff 15 90 61 03 00    	callq  *0x36190(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    fa70:	48 c7 84 24 c8 00 00 	movq   $0x8,0xc8(%rsp)
    fa77:	00 08 00 00 00 
    fa7c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fa80:	f3 0f 7f 84 24 d0 00 	movdqu %xmm0,0xd0(%rsp)
    fa87:	00 00 
    fa89:	41 bd 08 00 00 00    	mov    $0x8,%r13d
    fa8f:	49 c7 c7 c0 ff ff ff 	mov    $0xffffffffffffffc0,%r15
    fa96:	31 c9                	xor    %ecx,%ecx
    fa98:	45 31 e4             	xor    %r12d,%r12d
    fa9b:	45 31 f6             	xor    %r14d,%r14d
    fa9e:	48 8b 9c 24 f0 00 00 	mov    0xf0(%rsp),%rbx
    faa5:	00 
    faa6:	eb 43                	jmp    faeb <addr2line::ResUnit<R>::parse_lines+0x2aab>
    faa8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    faaf:	00 
    fab0:	48 8b 9c 24 f0 00 00 	mov    0xf0(%rsp),%rbx
    fab7:	00 
    fab8:	48 8b 8c 24 e0 00 00 	mov    0xe0(%rsp),%rcx
    fabf:	00 
    fac0:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    fac5:	49 89 44 0d 10       	mov    %rax,0x10(%r13,%rcx,1)
    faca:	f3 0f 6f 44 24 08    	movdqu 0x8(%rsp),%xmm0
    fad0:	f3 41 0f 7f 44 0d 00 	movdqu %xmm0,0x0(%r13,%rcx,1)
    fad7:	49 83 c6 01          	add    $0x1,%r14
    fadb:	4c 89 b4 24 d8 00 00 	mov    %r14,0xd8(%rsp)
    fae2:	00 
    fae3:	48 83 c1 18          	add    $0x18,%rcx
    fae7:	49 83 c7 40          	add    $0x40,%r15
    faeb:	66 83 bb a2 01 00 00 	cmpw   $0x5,0x1a2(%rbx)
    faf2:	05 
    faf3:	4c 89 b4 24 f8 00 00 	mov    %r14,0xf8(%rsp)
    fafa:	00 
    fafb:	48 89 8c 24 e0 00 00 	mov    %rcx,0xe0(%rsp)
    fb02:	00 
    fb03:	4c 89 a4 24 a0 01 00 	mov    %r12,0x1a0(%rsp)
    fb0a:	00 
    fb0b:	73 23                	jae    fb30 <addr2line::ResUnit<R>::parse_lines+0x2af0>
    fb0d:	4d 85 f6             	test   %r14,%r14
    fb10:	74 3b                	je     fb4d <addr2line::ResUnit<R>::parse_lines+0x2b0d>
    fb12:	49 8d 46 ff          	lea    -0x1(%r14),%rax
    fb16:	48 39 83 38 01 00 00 	cmp    %rax,0x138(%rbx)
    fb1d:	0f 86 58 06 00 00    	jbe    1017b <addr2line::ResUnit<R>::parse_lines+0x313b>
    fb23:	4c 8b a3 28 01 00 00 	mov    0x128(%rbx),%r12
    fb2a:	4d 01 fc             	add    %r15,%r12
    fb2d:	eb 31                	jmp    fb60 <addr2line::ResUnit<R>::parse_lines+0x2b20>
    fb2f:	90                   	nop
    fb30:	4c 39 b3 38 01 00 00 	cmp    %r14,0x138(%rbx)
    fb37:	0f 86 3e 06 00 00    	jbe    1017b <addr2line::ResUnit<R>::parse_lines+0x313b>
    fb3d:	4d 89 f4             	mov    %r14,%r12
    fb40:	49 c1 e4 06          	shl    $0x6,%r12
    fb44:	4c 03 a3 28 01 00 00 	add    0x128(%rbx),%r12
    fb4b:	eb 13                	jmp    fb60 <addr2line::ResUnit<R>::parse_lines+0x2b20>
    fb4d:	4c 8b a4 24 10 03 00 	mov    0x310(%rsp),%r12
    fb54:	00 
    fb55:	41 83 3c 24 2d       	cmpl   $0x2d,(%r12)
    fb5a:	0f 84 1b 06 00 00    	je     1017b <addr2line::ResUnit<R>::parse_lines+0x313b>
    fb60:	4c 89 ac 24 68 01 00 	mov    %r13,0x168(%rsp)
    fb67:	00 
    fb68:	4c 89 bc 24 08 01 00 	mov    %r15,0x108(%rsp)
    fb6f:	00 
    fb70:	4c 8b ac 24 a0 03 00 	mov    0x3a0(%rsp),%r13
    fb77:	00 
    fb78:	4c 8b b4 24 a8 03 00 	mov    0x3a8(%rsp),%r14
    fb7f:	00 
    fb80:	49 8b b5 80 00 00 00 	mov    0x80(%r13),%rsi
    fb87:	48 85 f6             	test   %rsi,%rsi
    fb8a:	74 74                	je     fc00 <addr2line::ResUnit<R>::parse_lines+0x2bc0>
    fb8c:	49 8b 95 88 00 00 00 	mov    0x88(%r13),%rdx
    fb93:	48 8d ac 24 10 01 00 	lea    0x110(%rsp),%rbp
    fb9a:	00 
    fb9b:	48 89 ef             	mov    %rbp,%rdi
    fb9e:	ff 15 0c 63 03 00    	callq  *0x3630c(%rip)        # 45eb0 <_GLOBAL_OFFSET_TABLE_+0x520>
    fba4:	4c 8b bc 24 18 01 00 	mov    0x118(%rsp),%r15
    fbab:	00 
    fbac:	f3 0f 6f 84 24 20 01 	movdqu 0x120(%rsp),%xmm0
    fbb3:	00 00 
    fbb5:	48 83 bc 24 10 01 00 	cmpq   $0x1,0x110(%rsp)
    fbbc:	00 01 
    fbbe:	0f 85 cc 00 00 00    	jne    fc90 <addr2line::ResUnit<R>::parse_lines+0x2c50>
    fbc4:	4c 89 bc 24 90 00 00 	mov    %r15,0x90(%rsp)
    fbcb:	00 
    fbcc:	f3 0f 7f 84 24 98 00 	movdqu %xmm0,0x98(%rsp)
    fbd3:	00 00 
    fbd5:	49 83 c5 08          	add    $0x8,%r13
    fbd9:	49 8b 44 24 18       	mov    0x18(%r12),%rax
    fbde:	66 83 bb a2 01 00 00 	cmpw   $0x5,0x1a2(%rbx)
    fbe5:	05 
    fbe6:	0f 82 4b 00 00 00    	jb     fc37 <addr2line::ResUnit<R>::parse_lines+0x2bf7>
    fbec:	0f 1f 40 00          	nopl   0x0(%rax)
    fbf0:	48 39 83 08 01 00 00 	cmp    %rax,0x108(%rbx)
    fbf7:	77 58                	ja     fc51 <addr2line::ResUnit<R>::parse_lines+0x2c11>
    fbf9:	e9 d2 01 00 00       	jmpq   fdd0 <addr2line::ResUnit<R>::parse_lines+0x2d90>
    fbfe:	66 90                	xchg   %ax,%ax
    fc00:	48 c7 84 24 90 00 00 	movq   $0x1,0x90(%rsp)
    fc07:	00 01 00 00 00 
    fc0c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fc10:	48 8d 84 24 98 00 00 	lea    0x98(%rsp),%rax
    fc17:	00 
    fc18:	f3 0f 7f 00          	movdqu %xmm0,(%rax)
    fc1c:	48 8d ac 24 10 01 00 	lea    0x110(%rsp),%rbp
    fc23:	00 
    fc24:	49 83 c5 08          	add    $0x8,%r13
    fc28:	49 8b 44 24 18       	mov    0x18(%r12),%rax
    fc2d:	66 83 bb a2 01 00 00 	cmpw   $0x5,0x1a2(%rbx)
    fc34:	05 
    fc35:	73 b9                	jae    fbf0 <addr2line::ResUnit<R>::parse_lines+0x2bb0>
    fc37:	48 85 c0             	test   %rax,%rax
    fc3a:	0f 84 85 00 00 00    	je     fcc5 <addr2line::ResUnit<R>::parse_lines+0x2c85>
    fc40:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
    fc44:	48 39 83 08 01 00 00 	cmp    %rax,0x108(%rbx)
    fc4b:	0f 86 7f 01 00 00    	jbe    fdd0 <addr2line::ResUnit<R>::parse_lines+0x2d90>
    fc51:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
    fc55:	48 c1 e6 03          	shl    $0x3,%rsi
    fc59:	48 03 b3 f8 00 00 00 	add    0xf8(%rbx),%rsi
    fc60:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    fc65:	e8 d6 d0 ff ff       	callq  cd40 <<gimli::read::unit::AttributeValue<R,Offset> as core::clone::Clone>::clone>
    fc6a:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    fc6f:	48 83 f9 2d          	cmp    $0x2d,%rcx
    fc73:	0f 84 60 01 00 00    	je     fdd9 <addr2line::ResUnit<R>::parse_lines+0x2d99>
    fc79:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
    fc7e:	4c 8b 4c 24 30       	mov    0x30(%rsp),%r9
    fc83:	e9 6c 00 00 00       	jmpq   fcf4 <addr2line::ResUnit<R>::parse_lines+0x2cb4>
    fc88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    fc8f:	00 
    fc90:	4c 89 b4 24 00 01 00 	mov    %r14,0x100(%rsp)
    fc97:	00 
    fc98:	66 48 0f 7e c3       	movq   %xmm0,%rbx
    fc9d:	48 85 db             	test   %rbx,%rbx
    fca0:	0f 84 0a 03 00 00    	je     ffb0 <addr2line::ResUnit<R>::parse_lines+0x2f70>
    fca6:	be 01 00 00 00       	mov    $0x1,%esi
    fcab:	48 89 df             	mov    %rbx,%rdi
    fcae:	ff 15 d4 5e 03 00    	callq  *0x35ed4(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
    fcb4:	49 89 c6             	mov    %rax,%r14
    fcb7:	48 85 c0             	test   %rax,%rax
    fcba:	0f 85 f6 02 00 00    	jne    ffb6 <addr2line::ResUnit<R>::parse_lines+0x2f76>
    fcc0:	e9 b4 07 00 00       	jmpq   10479 <addr2line::ResUnit<R>::parse_lines+0x3439>
    fcc5:	4c 8b 83 50 01 00 00 	mov    0x150(%rbx),%r8
    fccc:	4d 85 c0             	test   %r8,%r8
    fccf:	0f 84 fb 00 00 00    	je     fdd0 <addr2line::ResUnit<R>::parse_lines+0x2d90>
    fcd5:	4c 8b 8b 58 01 00 00 	mov    0x158(%rbx),%r9
    fcdc:	48 c7 44 24 20 1f 00 	movq   $0x1f,0x20(%rsp)
    fce3:	00 00 
    fce5:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
    fcea:	4c 89 4c 24 30       	mov    %r9,0x30(%rsp)
    fcef:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    fcf4:	48 89 ef             	mov    %rbp,%rdi
    fcf7:	4c 89 f6             	mov    %r14,%rsi
    fcfa:	4c 89 ea             	mov    %r13,%rdx
    fcfd:	e8 ae c4 ff ff       	callq  c1b0 <gimli::read::dwarf::Dwarf<R>::attr_string>
    fd02:	4c 8b bc 24 18 01 00 	mov    0x118(%rsp),%r15
    fd09:	00 
    fd0a:	48 8b 8c 24 20 01 00 	mov    0x120(%rsp),%rcx
    fd11:	00 
    fd12:	48 83 bc 24 10 01 00 	cmpq   $0x1,0x110(%rsp)
    fd19:	00 01 
    fd1b:	0f 84 f0 02 00 00    	je     10011 <addr2line::ResUnit<R>::parse_lines+0x2fd1>
    fd21:	4c 89 b4 24 00 01 00 	mov    %r14,0x100(%rsp)
    fd28:	00 
    fd29:	48 89 ef             	mov    %rbp,%rdi
    fd2c:	4c 89 fe             	mov    %r15,%rsi
    fd2f:	48 89 ca             	mov    %rcx,%rdx
    fd32:	ff 15 78 61 03 00    	callq  *0x36178(%rip)        # 45eb0 <_GLOBAL_OFFSET_TABLE_+0x520>
    fd38:	48 8b 9c 24 10 01 00 	mov    0x110(%rsp),%rbx
    fd3f:	00 
    fd40:	4c 8b b4 24 18 01 00 	mov    0x118(%rsp),%r14
    fd47:	00 
    fd48:	48 8d 84 24 20 01 00 	lea    0x120(%rsp),%rax
    fd4f:	00 
    fd50:	f3 0f 6f 00          	movdqu (%rax),%xmm0
    fd54:	66 0f 7f 84 24 40 03 	movdqa %xmm0,0x340(%rsp)
    fd5b:	00 00 
    fd5d:	4c 89 74 24 58       	mov    %r14,0x58(%rsp)
    fd62:	48 89 5c 24 50       	mov    %rbx,0x50(%rsp)
    fd67:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
    fd6c:	f3 0f 7f 00          	movdqu %xmm0,(%rax)
    fd70:	4c 8b 7c 24 60       	mov    0x60(%rsp),%r15
    fd75:	4c 89 fa             	mov    %r15,%rdx
    fd78:	48 83 fb 01          	cmp    $0x1,%rbx
    fd7c:	75 05                	jne    fd83 <addr2line::ResUnit<R>::parse_lines+0x2d43>
    fd7e:	48 8b 54 24 68       	mov    0x68(%rsp),%rdx
    fd83:	48 8d bc 24 90 00 00 	lea    0x90(%rsp),%rdi
    fd8a:	00 
    fd8b:	4c 89 f6             	mov    %r14,%rsi
    fd8e:	ff 15 84 5d 03 00    	callq  *0x35d84(%rip)        # 45b18 <_GLOBAL_OFFSET_TABLE_+0x188>
    fd94:	48 85 db             	test   %rbx,%rbx
    fd97:	74 1b                	je     fdb4 <addr2line::ResUnit<R>::parse_lines+0x2d74>
    fd99:	4d 85 f6             	test   %r14,%r14
    fd9c:	74 16                	je     fdb4 <addr2line::ResUnit<R>::parse_lines+0x2d74>
    fd9e:	4d 85 ff             	test   %r15,%r15
    fda1:	74 11                	je     fdb4 <addr2line::ResUnit<R>::parse_lines+0x2d74>
    fda3:	ba 01 00 00 00       	mov    $0x1,%edx
    fda8:	4c 89 f7             	mov    %r14,%rdi
    fdab:	4c 89 fe             	mov    %r15,%rsi
    fdae:	ff 15 4c 5e 03 00    	callq  *0x35e4c(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    fdb4:	48 8d ac 24 10 01 00 	lea    0x110(%rsp),%rbp
    fdbb:	00 
    fdbc:	4c 8b b4 24 00 01 00 	mov    0x100(%rsp),%r14
    fdc3:	00 
    fdc4:	e9 10 00 00 00       	jmpq   fdd9 <addr2line::ResUnit<R>::parse_lines+0x2d99>
    fdc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    fdd0:	48 c7 44 24 20 2d 00 	movq   $0x2d,0x20(%rsp)
    fdd7:	00 00 
    fdd9:	48 89 ef             	mov    %rbp,%rdi
    fddc:	4c 89 e6             	mov    %r12,%rsi
    fddf:	e8 5c cf ff ff       	callq  cd40 <<gimli::read::unit::AttributeValue<R,Offset> as core::clone::Clone>::clone>
    fde4:	48 8b 8c 24 10 01 00 	mov    0x110(%rsp),%rcx
    fdeb:	00 
    fdec:	4c 8b 84 24 18 01 00 	mov    0x118(%rsp),%r8
    fdf3:	00 
    fdf4:	4c 8b 8c 24 20 01 00 	mov    0x120(%rsp),%r9
    fdfb:	00 
    fdfc:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    fe01:	4c 89 f6             	mov    %r14,%rsi
    fe04:	4c 89 ea             	mov    %r13,%rdx
    fe07:	e8 a4 c3 ff ff       	callq  c1b0 <gimli::read::dwarf::Dwarf<R>::attr_string>
    fe0c:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
    fe11:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
    fe16:	48 83 7c 24 20 01    	cmpq   $0x1,0x20(%rsp)
    fe1c:	0f 84 ef 01 00 00    	je     10011 <addr2line::ResUnit<R>::parse_lines+0x2fd1>
    fe22:	48 89 ef             	mov    %rbp,%rdi
    fe25:	4c 89 fe             	mov    %r15,%rsi
    fe28:	48 89 ca             	mov    %rcx,%rdx
    fe2b:	ff 15 7f 60 03 00    	callq  *0x3607f(%rip)        # 45eb0 <_GLOBAL_OFFSET_TABLE_+0x520>
    fe31:	48 8b ac 24 10 01 00 	mov    0x110(%rsp),%rbp
    fe38:	00 
    fe39:	48 8b 9c 24 18 01 00 	mov    0x118(%rsp),%rbx
    fe40:	00 
    fe41:	48 8d 84 24 20 01 00 	lea    0x120(%rsp),%rax
    fe48:	00 
    fe49:	f3 0f 6f 00          	movdqu (%rax),%xmm0
    fe4d:	66 0f 7f 84 24 40 03 	movdqa %xmm0,0x340(%rsp)
    fe54:	00 00 
    fe56:	48 89 5c 24 58       	mov    %rbx,0x58(%rsp)
    fe5b:	48 89 6c 24 50       	mov    %rbp,0x50(%rsp)
    fe60:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
    fe65:	f3 0f 7f 00          	movdqu %xmm0,(%rax)
    fe69:	4c 8b 74 24 60       	mov    0x60(%rsp),%r14
    fe6e:	4c 89 f2             	mov    %r14,%rdx
    fe71:	48 83 fd 01          	cmp    $0x1,%rbp
    fe75:	4c 8b bc 24 08 01 00 	mov    0x108(%rsp),%r15
    fe7c:	00 
    fe7d:	4c 8b ac 24 68 01 00 	mov    0x168(%rsp),%r13
    fe84:	00 
    fe85:	4c 8b a4 24 a0 01 00 	mov    0x1a0(%rsp),%r12
    fe8c:	00 
    fe8d:	75 05                	jne    fe94 <addr2line::ResUnit<R>::parse_lines+0x2e54>
    fe8f:	48 8b 54 24 68       	mov    0x68(%rsp),%rdx
    fe94:	48 8d bc 24 90 00 00 	lea    0x90(%rsp),%rdi
    fe9b:	00 
    fe9c:	48 89 de             	mov    %rbx,%rsi
    fe9f:	ff 15 73 5c 03 00    	callq  *0x35c73(%rip)        # 45b18 <_GLOBAL_OFFSET_TABLE_+0x188>
    fea5:	48 85 ed             	test   %rbp,%rbp
    fea8:	74 1b                	je     fec5 <addr2line::ResUnit<R>::parse_lines+0x2e85>
    feaa:	48 85 db             	test   %rbx,%rbx
    fead:	74 16                	je     fec5 <addr2line::ResUnit<R>::parse_lines+0x2e85>
    feaf:	4d 85 f6             	test   %r14,%r14
    feb2:	74 11                	je     fec5 <addr2line::ResUnit<R>::parse_lines+0x2e85>
    feb4:	ba 01 00 00 00       	mov    $0x1,%edx
    feb9:	48 89 df             	mov    %rbx,%rdi
    febc:	4c 89 f6             	mov    %r14,%rsi
    febf:	ff 15 3b 5d 03 00    	callq  *0x35d3b(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
    fec5:	0f 10 84 24 90 00 00 	movups 0x90(%rsp),%xmm0
    fecc:	00 
    fecd:	48 8b 84 24 a0 00 00 	mov    0xa0(%rsp),%rax
    fed4:	00 
    fed5:	0f 11 44 24 08       	movups %xmm0,0x8(%rsp)
    feda:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    fedf:	4c 8b b4 24 f8 00 00 	mov    0xf8(%rsp),%r14
    fee6:	00 
    fee7:	4d 39 e6             	cmp    %r12,%r14
    feea:	0f 85 c0 fb ff ff    	jne    fab0 <addr2line::ResUnit<R>::parse_lines+0x2a70>
    fef0:	4c 89 e0             	mov    %r12,%rax
    fef3:	48 ff c0             	inc    %rax
    fef6:	48 8b 9c 24 f0 00 00 	mov    0xf0(%rsp),%rbx
    fefd:	00 
    fefe:	0f 84 25 05 00 00    	je     10429 <addr2line::ResUnit<R>::parse_lines+0x33e9>
    ff04:	4b 8d 0c 24          	lea    (%r12,%r12,1),%rcx
    ff08:	48 39 c1             	cmp    %rax,%rcx
    ff0b:	48 0f 47 c1          	cmova  %rcx,%rax
    ff0f:	48 83 f8 04          	cmp    $0x4,%rax
    ff13:	77 05                	ja     ff1a <addr2line::ResUnit<R>::parse_lines+0x2eda>
    ff15:	b8 04 00 00 00       	mov    $0x4,%eax
    ff1a:	31 c9                	xor    %ecx,%ecx
    ff1c:	ba 18 00 00 00       	mov    $0x18,%edx
    ff21:	48 f7 e2             	mul    %rdx
    ff24:	48 89 c5             	mov    %rax,%rbp
    ff27:	0f 90 c0             	seto   %al
    ff2a:	0f 91 c1             	setno  %cl
    ff2d:	48 c1 e1 03          	shl    $0x3,%rcx
    ff31:	4d 85 e4             	test   %r12,%r12
    ff34:	74 26                	je     ff5c <addr2line::ResUnit<R>::parse_lines+0x2f1c>
    ff36:	84 c0                	test   %al,%al
    ff38:	0f 85 eb 04 00 00    	jne    10429 <addr2line::ResUnit<R>::parse_lines+0x33e9>
    ff3e:	49 c1 e4 03          	shl    $0x3,%r12
    ff42:	4b 8d 34 64          	lea    (%r12,%r12,2),%rsi
    ff46:	48 85 f6             	test   %rsi,%rsi
    ff49:	74 19                	je     ff64 <addr2line::ResUnit<R>::parse_lines+0x2f24>
    ff4b:	4c 89 ef             	mov    %r13,%rdi
    ff4e:	48 89 ca             	mov    %rcx,%rdx
    ff51:	48 89 e9             	mov    %rbp,%rcx
    ff54:	ff 15 1e 60 03 00    	callq  *0x3601e(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
    ff5a:	eb 19                	jmp    ff75 <addr2line::ResUnit<R>::parse_lines+0x2f35>
    ff5c:	84 c0                	test   %al,%al
    ff5e:	0f 85 c5 04 00 00    	jne    10429 <addr2line::ResUnit<R>::parse_lines+0x33e9>
    ff64:	48 85 ed             	test   %rbp,%rbp
    ff67:	74 0f                	je     ff78 <addr2line::ResUnit<R>::parse_lines+0x2f38>
    ff69:	48 89 ef             	mov    %rbp,%rdi
    ff6c:	48 89 ce             	mov    %rcx,%rsi
    ff6f:	ff 15 13 5c 03 00    	callq  *0x35c13(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
    ff75:	48 89 c1             	mov    %rax,%rcx
    ff78:	48 85 c9             	test   %rcx,%rcx
    ff7b:	0f 84 d3 04 00 00    	je     10454 <addr2line::ResUnit<R>::parse_lines+0x3414>
    ff81:	48 89 8c 24 c8 00 00 	mov    %rcx,0xc8(%rsp)
    ff88:	00 
    ff89:	48 89 e8             	mov    %rbp,%rax
    ff8c:	48 ba ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rdx
    ff93:	aa aa aa 
    ff96:	48 f7 e2             	mul    %rdx
    ff99:	49 89 d4             	mov    %rdx,%r12
    ff9c:	49 c1 ec 04          	shr    $0x4,%r12
    ffa0:	4c 89 a4 24 d0 00 00 	mov    %r12,0xd0(%rsp)
    ffa7:	00 
    ffa8:	49 89 cd             	mov    %rcx,%r13
    ffab:	e9 08 fb ff ff       	jmpq   fab8 <addr2line::ResUnit<R>::parse_lines+0x2a78>
    ffb0:	41 be 01 00 00 00    	mov    $0x1,%r14d
    ffb6:	4c 89 f7             	mov    %r14,%rdi
    ffb9:	4c 89 fe             	mov    %r15,%rsi
    ffbc:	48 89 da             	mov    %rbx,%rdx
    ffbf:	ff 15 3b 5d 03 00    	callq  *0x35d3b(%rip)        # 45d00 <memcpy@GLIBC_2.14>
    ffc5:	4c 89 b4 24 90 00 00 	mov    %r14,0x90(%rsp)
    ffcc:	00 
    ffcd:	48 89 9c 24 98 00 00 	mov    %rbx,0x98(%rsp)
    ffd4:	00 
    ffd5:	48 89 9c 24 a0 00 00 	mov    %rbx,0xa0(%rsp)
    ffdc:	00 
    ffdd:	48 8b 9c 24 f0 00 00 	mov    0xf0(%rsp),%rbx
    ffe4:	00 
    ffe5:	48 8d ac 24 10 01 00 	lea    0x110(%rsp),%rbp
    ffec:	00 
    ffed:	4c 8b b4 24 00 01 00 	mov    0x100(%rsp),%r14
    fff4:	00 
    fff5:	49 83 c5 08          	add    $0x8,%r13
    fff9:	49 8b 44 24 18       	mov    0x18(%r12),%rax
    fffe:	66 83 bb a2 01 00 00 	cmpw   $0x5,0x1a2(%rbx)
   10005:	05 
   10006:	0f 83 e4 fb ff ff    	jae    fbf0 <addr2line::ResUnit<R>::parse_lines+0x2bb0>
   1000c:	e9 26 fc ff ff       	jmpq   fc37 <addr2line::ResUnit<R>::parse_lines+0x2bf7>
   10011:	49 89 ce             	mov    %rcx,%r14
   10014:	48 8b bc 24 90 00 00 	mov    0x90(%rsp),%rdi
   1001b:	00 
   1001c:	48 85 ff             	test   %rdi,%rdi
   1001f:	74 18                	je     10039 <addr2line::ResUnit<R>::parse_lines+0x2ff9>
   10021:	48 8b b4 24 98 00 00 	mov    0x98(%rsp),%rsi
   10028:	00 
   10029:	48 85 f6             	test   %rsi,%rsi
   1002c:	74 0b                	je     10039 <addr2line::ResUnit<R>::parse_lines+0x2ff9>
   1002e:	ba 01 00 00 00       	mov    $0x1,%edx
   10033:	ff 15 c7 5b 03 00    	callq  *0x35bc7(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   10039:	48 8b ac 24 c8 00 00 	mov    0xc8(%rsp),%rbp
   10040:	00 
   10041:	48 83 bc 24 f8 00 00 	cmpq   $0x0,0xf8(%rsp)
   10048:	00 00 
   1004a:	0f 84 3c 00 00 00    	je     1008c <addr2line::ResUnit<R>::parse_lines+0x304c>
   10050:	48 01 ac 24 e0 00 00 	add    %rbp,0xe0(%rsp)
   10057:	00 
   10058:	48 89 eb             	mov    %rbp,%rbx
   1005b:	e9 0e 00 00 00       	jmpq   1006e <addr2line::ResUnit<R>::parse_lines+0x302e>
   10060:	48 83 c3 18          	add    $0x18,%rbx
   10064:	48 39 9c 24 e0 00 00 	cmp    %rbx,0xe0(%rsp)
   1006b:	00 
   1006c:	74 1e                	je     1008c <addr2line::ResUnit<R>::parse_lines+0x304c>
   1006e:	48 8b 3b             	mov    (%rbx),%rdi
   10071:	48 85 ff             	test   %rdi,%rdi
   10074:	74 ea                	je     10060 <addr2line::ResUnit<R>::parse_lines+0x3020>
   10076:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   1007a:	48 85 f6             	test   %rsi,%rsi
   1007d:	74 e1                	je     10060 <addr2line::ResUnit<R>::parse_lines+0x3020>
   1007f:	ba 01 00 00 00       	mov    $0x1,%edx
   10084:	ff 15 76 5b 03 00    	callq  *0x35b76(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   1008a:	eb d4                	jmp    10060 <addr2line::ResUnit<R>::parse_lines+0x3020>
   1008c:	48 8b 84 24 d0 00 00 	mov    0xd0(%rsp),%rax
   10093:	00 
   10094:	48 85 c0             	test   %rax,%rax
   10097:	74 1b                	je     100b4 <addr2line::ResUnit<R>::parse_lines+0x3074>
   10099:	48 c1 e0 03          	shl    $0x3,%rax
   1009d:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
   100a1:	48 85 f6             	test   %rsi,%rsi
   100a4:	74 0e                	je     100b4 <addr2line::ResUnit<R>::parse_lines+0x3074>
   100a6:	ba 08 00 00 00       	mov    $0x8,%edx
   100ab:	48 89 ef             	mov    %rbp,%rdi
   100ae:	ff 15 4c 5b 03 00    	callq  *0x35b4c(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   100b4:	4c 89 f3             	mov    %r14,%rbx
   100b7:	49 89 dc             	mov    %rbx,%r12
   100ba:	48 8d bc 24 c0 01 00 	lea    0x1c0(%rsp),%rdi
   100c1:	00 
   100c2:	e8 f9 67 ff ff       	callq  68c0 <core::ptr::drop_in_place>
   100c7:	48 8b 84 24 90 01 00 	mov    0x190(%rsp),%rax
   100ce:	00 
   100cf:	48 85 c0             	test   %rax,%rax
   100d2:	74 25                	je     100f9 <addr2line::ResUnit<R>::parse_lines+0x30b9>
   100d4:	48 8b bc 24 88 01 00 	mov    0x188(%rsp),%rdi
   100db:	00 
   100dc:	48 85 ff             	test   %rdi,%rdi
   100df:	74 18                	je     100f9 <addr2line::ResUnit<R>::parse_lines+0x30b9>
   100e1:	48 c1 e0 03          	shl    $0x3,%rax
   100e5:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
   100e9:	48 85 f6             	test   %rsi,%rsi
   100ec:	74 0b                	je     100f9 <addr2line::ResUnit<R>::parse_lines+0x30b9>
   100ee:	ba 08 00 00 00       	mov    $0x8,%edx
   100f3:	ff 15 07 5b 03 00    	callq  *0x35b07(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   100f9:	48 8b 9c 24 70 01 00 	mov    0x170(%rsp),%rbx
   10100:	00 
   10101:	4c 8b b4 24 80 01 00 	mov    0x180(%rsp),%r14
   10108:	00 
   10109:	4d 85 f6             	test   %r14,%r14
   1010c:	74 3f                	je     1014d <addr2line::ResUnit<R>::parse_lines+0x310d>
   1010e:	49 c1 e6 05          	shl    $0x5,%r14
   10112:	31 ed                	xor    %ebp,%ebp
   10114:	eb 13                	jmp    10129 <addr2line::ResUnit<R>::parse_lines+0x30e9>
   10116:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1011d:	00 00 00 
   10120:	48 83 c5 20          	add    $0x20,%rbp
   10124:	49 39 ee             	cmp    %rbp,%r14
   10127:	74 24                	je     1014d <addr2line::ResUnit<R>::parse_lines+0x310d>
   10129:	48 8b 44 2b 18       	mov    0x18(%rbx,%rbp,1),%rax
   1012e:	48 c1 e0 03          	shl    $0x3,%rax
   10132:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
   10136:	48 85 f6             	test   %rsi,%rsi
   10139:	74 e5                	je     10120 <addr2line::ResUnit<R>::parse_lines+0x30e0>
   1013b:	48 8b 7c 2b 10       	mov    0x10(%rbx,%rbp,1),%rdi
   10140:	ba 08 00 00 00       	mov    $0x8,%edx
   10145:	ff 15 b5 5a 03 00    	callq  *0x35ab5(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   1014b:	eb d3                	jmp    10120 <addr2line::ResUnit<R>::parse_lines+0x30e0>
   1014d:	48 8b b4 24 78 01 00 	mov    0x178(%rsp),%rsi
   10154:	00 
   10155:	48 85 f6             	test   %rsi,%rsi
   10158:	74 14                	je     1016e <addr2line::ResUnit<R>::parse_lines+0x312e>
   1015a:	48 c1 e6 05          	shl    $0x5,%rsi
   1015e:	74 0e                	je     1016e <addr2line::ResUnit<R>::parse_lines+0x312e>
   10160:	ba 08 00 00 00       	mov    $0x8,%edx
   10165:	48 89 df             	mov    %rbx,%rdi
   10168:	ff 15 92 5a 03 00    	callq  *0x35a92(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   1016e:	b8 01 00 00 00       	mov    $0x1,%eax
   10173:	4d 89 e6             	mov    %r12,%r14
   10176:	e9 24 01 00 00       	jmpq   1029f <addr2line::ResUnit<R>::parse_lines+0x325f>
   1017b:	4c 8b bc 24 c8 00 00 	mov    0xc8(%rsp),%r15
   10182:	00 
   10183:	48 8b 84 24 d0 00 00 	mov    0xd0(%rsp),%rax
   1018a:	00 
   1018b:	4c 39 f0             	cmp    %r14,%rax
   1018e:	76 56                	jbe    101e6 <addr2line::ResUnit<R>::parse_lines+0x31a6>
   10190:	4d 85 ff             	test   %r15,%r15
   10193:	74 51                	je     101e6 <addr2line::ResUnit<R>::parse_lines+0x31a6>
   10195:	48 c1 e0 03          	shl    $0x3,%rax
   10199:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
   1019d:	48 8b 9c 24 e0 00 00 	mov    0xe0(%rsp),%rbx
   101a4:	00 
   101a5:	48 85 db             	test   %rbx,%rbx
   101a8:	74 23                	je     101cd <addr2line::ResUnit<R>::parse_lines+0x318d>
   101aa:	ba 08 00 00 00       	mov    $0x8,%edx
   101af:	4c 89 ff             	mov    %r15,%rdi
   101b2:	48 89 d9             	mov    %rbx,%rcx
   101b5:	ff 15 bd 5d 03 00    	callq  *0x35dbd(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
   101bb:	49 89 c7             	mov    %rax,%r15
   101be:	48 85 c0             	test   %rax,%rax
   101c1:	75 23                	jne    101e6 <addr2line::ResUnit<R>::parse_lines+0x31a6>
   101c3:	be 08 00 00 00       	mov    $0x8,%esi
   101c8:	e9 b1 02 00 00       	jmpq   1047e <addr2line::ResUnit<R>::parse_lines+0x343e>
   101cd:	48 85 f6             	test   %rsi,%rsi
   101d0:	74 0e                	je     101e0 <addr2line::ResUnit<R>::parse_lines+0x31a0>
   101d2:	ba 08 00 00 00       	mov    $0x8,%edx
   101d7:	4c 89 ff             	mov    %r15,%rdi
   101da:	ff 15 20 5a 03 00    	callq  *0x35a20(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   101e0:	41 bf 08 00 00 00    	mov    $0x8,%r15d
   101e6:	48 8b 9c 24 70 01 00 	mov    0x170(%rsp),%rbx
   101ed:	00 
   101ee:	48 8b b4 24 78 01 00 	mov    0x178(%rsp),%rsi
   101f5:	00 
   101f6:	48 8b ac 24 80 01 00 	mov    0x180(%rsp),%rbp
   101fd:	00 
   101fe:	48 39 ee             	cmp    %rbp,%rsi
   10201:	76 5b                	jbe    1025e <addr2line::ResUnit<R>::parse_lines+0x321e>
   10203:	48 85 db             	test   %rbx,%rbx
   10206:	74 56                	je     1025e <addr2line::ResUnit<R>::parse_lines+0x321e>
   10208:	48 c1 e6 05          	shl    $0x5,%rsi
   1020c:	49 89 ee             	mov    %rbp,%r14
   1020f:	49 c1 e6 05          	shl    $0x5,%r14
   10213:	74 29                	je     1023e <addr2line::ResUnit<R>::parse_lines+0x31fe>
   10215:	ba 08 00 00 00       	mov    $0x8,%edx
   1021a:	48 89 df             	mov    %rbx,%rdi
   1021d:	4c 89 f1             	mov    %r14,%rcx
   10220:	ff 15 52 5d 03 00    	callq  *0x35d52(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
   10226:	48 89 c3             	mov    %rax,%rbx
   10229:	48 85 c0             	test   %rax,%rax
   1022c:	75 28                	jne    10256 <addr2line::ResUnit<R>::parse_lines+0x3216>
   1022e:	be 08 00 00 00       	mov    $0x8,%esi
   10233:	4c 89 f7             	mov    %r14,%rdi
   10236:	ff 15 ec 58 03 00    	callq  *0x358ec(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   1023c:	0f 0b                	ud2    
   1023e:	48 85 f6             	test   %rsi,%rsi
   10241:	74 0e                	je     10251 <addr2line::ResUnit<R>::parse_lines+0x3211>
   10243:	ba 08 00 00 00       	mov    $0x8,%edx
   10248:	48 89 df             	mov    %rbx,%rdi
   1024b:	ff 15 af 59 03 00    	callq  *0x359af(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   10251:	bb 08 00 00 00       	mov    $0x8,%ebx
   10256:	4c 8b b4 24 f8 00 00 	mov    0xf8(%rsp),%r14
   1025d:	00 
   1025e:	48 8d bc 24 c0 01 00 	lea    0x1c0(%rsp),%rdi
   10265:	00 
   10266:	e8 55 66 ff ff       	callq  68c0 <core::ptr::drop_in_place>
   1026b:	48 8b 84 24 90 01 00 	mov    0x190(%rsp),%rax
   10272:	00 
   10273:	48 85 c0             	test   %rax,%rax
   10276:	74 25                	je     1029d <addr2line::ResUnit<R>::parse_lines+0x325d>
   10278:	48 8b bc 24 88 01 00 	mov    0x188(%rsp),%rdi
   1027f:	00 
   10280:	48 85 ff             	test   %rdi,%rdi
   10283:	74 18                	je     1029d <addr2line::ResUnit<R>::parse_lines+0x325d>
   10285:	48 c1 e0 03          	shl    $0x3,%rax
   10289:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
   1028d:	48 85 f6             	test   %rsi,%rsi
   10290:	74 0b                	je     1029d <addr2line::ResUnit<R>::parse_lines+0x325d>
   10292:	ba 08 00 00 00       	mov    $0x8,%edx
   10297:	ff 15 63 59 03 00    	callq  *0x35963(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   1029d:	31 c0                	xor    %eax,%eax
   1029f:	48 89 84 24 c0 01 00 	mov    %rax,0x1c0(%rsp)
   102a6:	00 
   102a7:	4c 89 b4 24 d0 01 00 	mov    %r14,0x1d0(%rsp)
   102ae:	00 
   102af:	4c 89 bc 24 c8 01 00 	mov    %r15,0x1c8(%rsp)
   102b6:	00 
   102b7:	48 89 9c 24 d8 01 00 	mov    %rbx,0x1d8(%rsp)
   102be:	00 
   102bf:	48 89 ac 24 e0 01 00 	mov    %rbp,0x1e0(%rsp)
   102c6:	00 
   102c7:	48 8b 9c 24 78 03 00 	mov    0x378(%rsp),%rbx
   102ce:	00 
   102cf:	83 3b 02             	cmpl   $0x2,(%rbx)
   102d2:	75 3d                	jne    10311 <addr2line::ResUnit<R>::parse_lines+0x32d1>
   102d4:	48 8b 84 24 c0 01 00 	mov    0x1c0(%rsp),%rax
   102db:	00 
   102dc:	48 8b 8c 24 c8 01 00 	mov    0x1c8(%rsp),%rcx
   102e3:	00 
   102e4:	48 8b 94 24 d0 01 00 	mov    0x1d0(%rsp),%rdx
   102eb:	00 
   102ec:	48 8b b4 24 d8 01 00 	mov    0x1d8(%rsp),%rsi
   102f3:	00 
   102f4:	48 89 03             	mov    %rax,(%rbx)
   102f7:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
   102fb:	48 8b 84 24 e0 01 00 	mov    0x1e0(%rsp),%rax
   10302:	00 
   10303:	48 89 43 20          	mov    %rax,0x20(%rbx)
   10307:	48 89 53 10          	mov    %rdx,0x10(%rbx)
   1030b:	48 89 73 18          	mov    %rsi,0x18(%rbx)
   1030f:	eb 0d                	jmp    1031e <addr2line::ResUnit<R>::parse_lines+0x32de>
   10311:	48 8d bc 24 c0 01 00 	lea    0x1c0(%rsp),%rdi
   10318:	00 
   10319:	e8 02 60 ff ff       	callq  6320 <core::ptr::drop_in_place>
   1031e:	48 8b 03             	mov    (%rbx),%rax
   10321:	48 8b bc 24 08 03 00 	mov    0x308(%rsp),%rdi
   10328:	00 
   10329:	48 8b b4 24 f0 00 00 	mov    0xf0(%rsp),%rsi
   10330:	00 
   10331:	48 81 c6 b8 01 00 00 	add    $0x1b8,%rsi
   10338:	48 85 c0             	test   %rax,%rax
   1033b:	74 10                	je     1034d <addr2line::ResUnit<R>::parse_lines+0x330d>
   1033d:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
   10341:	f3 0f 7f 47 08       	movdqu %xmm0,0x8(%rdi)
   10346:	b8 01 00 00 00       	mov    $0x1,%eax
   1034b:	eb 06                	jmp    10353 <addr2line::ResUnit<R>::parse_lines+0x3313>
   1034d:	48 89 77 08          	mov    %rsi,0x8(%rdi)
   10351:	31 c0                	xor    %eax,%eax
   10353:	48 89 07             	mov    %rax,(%rdi)
   10356:	48 81 c4 08 04 00 00 	add    $0x408,%rsp
   1035d:	5b                   	pop    %rbx
   1035e:	41 5c                	pop    %r12
   10360:	41 5d                	pop    %r13
   10362:	41 5e                	pop    %r14
   10364:	41 5f                	pop    %r15
   10366:	5d                   	pop    %rbp
   10367:	c3                   	retq   
   10368:	48 8d 15 b1 35 03 00 	lea    0x335b1(%rip),%rdx        # 43920 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3c8>
   1036f:	48 89 c7             	mov    %rax,%rdi
   10372:	ff 15 20 59 03 00    	callq  *0x35920(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   10378:	e9 a5 01 00 00       	jmpq   10522 <addr2line::ResUnit<R>::parse_lines+0x34e2>
   1037d:	48 8d 15 b4 35 03 00 	lea    0x335b4(%rip),%rdx        # 43938 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3e0>
   10384:	ff 15 0e 59 03 00    	callq  *0x3590e(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   1038a:	e9 93 01 00 00       	jmpq   10522 <addr2line::ResUnit<R>::parse_lines+0x34e2>
   1038f:	48 8d 15 ba 35 03 00 	lea    0x335ba(%rip),%rdx        # 43950 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3f8>
   10396:	4c 89 ef             	mov    %r13,%rdi
   10399:	4c 89 fe             	mov    %r15,%rsi
   1039c:	ff 15 06 5b 03 00    	callq  *0x35b06(%rip)        # 45ea8 <_GLOBAL_OFFSET_TABLE_+0x518>
   103a2:	e9 7b 01 00 00       	jmpq   10522 <addr2line::ResUnit<R>::parse_lines+0x34e2>
   103a7:	48 8d 15 a2 35 03 00 	lea    0x335a2(%rip),%rdx        # 43950 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3f8>
   103ae:	4c 89 ff             	mov    %r15,%rdi
   103b1:	48 8b b4 24 20 03 00 	mov    0x320(%rsp),%rsi
   103b8:	00 
   103b9:	ff 15 71 56 03 00    	callq  *0x35671(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   103bf:	e9 5e 01 00 00       	jmpq   10522 <addr2line::ResUnit<R>::parse_lines+0x34e2>
   103c4:	48 8d 3d 35 6f 02 00 	lea    0x26f35(%rip),%rdi        # 37300 <str.5>
   103cb:	48 8d 15 8e 32 03 00 	lea    0x3328e(%rip),%rdx        # 43660 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x108>
   103d2:	be 19 00 00 00       	mov    $0x19,%esi
   103d7:	ff 15 03 5b 03 00    	callq  *0x35b03(%rip)        # 45ee0 <_GLOBAL_OFFSET_TABLE_+0x550>
   103dd:	e9 40 01 00 00       	jmpq   10522 <addr2line::ResUnit<R>::parse_lines+0x34e2>
   103e2:	48 8d 3d 17 6f 02 00 	lea    0x26f17(%rip),%rdi        # 37300 <str.5>
   103e9:	48 8d 15 c0 35 03 00 	lea    0x335c0(%rip),%rdx        # 439b0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x458>
   103f0:	be 19 00 00 00       	mov    $0x19,%esi
   103f5:	ff 15 e5 5a 03 00    	callq  *0x35ae5(%rip)        # 45ee0 <_GLOBAL_OFFSET_TABLE_+0x550>
   103fb:	e9 22 01 00 00       	jmpq   10522 <addr2line::ResUnit<R>::parse_lines+0x34e2>
   10400:	48 8d 3d f9 6e 02 00 	lea    0x26ef9(%rip),%rdi        # 37300 <str.5>
   10407:	48 8d 15 52 32 03 00 	lea    0x33252(%rip),%rdx        # 43660 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x108>
   1040e:	be 19 00 00 00       	mov    $0x19,%esi
   10413:	ff 15 c7 5a 03 00    	callq  *0x35ac7(%rip)        # 45ee0 <_GLOBAL_OFFSET_TABLE_+0x550>
   10419:	e9 04 01 00 00       	jmpq   10522 <addr2line::ResUnit<R>::parse_lines+0x34e2>
   1041e:	ff 15 c4 56 03 00    	callq  *0x356c4(%rip)        # 45ae8 <_GLOBAL_OFFSET_TABLE_+0x158>
   10424:	e9 f9 00 00 00       	jmpq   10522 <addr2line::ResUnit<R>::parse_lines+0x34e2>
   10429:	ff 15 b9 56 03 00    	callq  *0x356b9(%rip)        # 45ae8 <_GLOBAL_OFFSET_TABLE_+0x158>
   1042f:	e9 ee 00 00 00       	jmpq   10522 <addr2line::ResUnit<R>::parse_lines+0x34e2>
   10434:	ff 15 ae 56 03 00    	callq  *0x356ae(%rip)        # 45ae8 <_GLOBAL_OFFSET_TABLE_+0x158>
   1043a:	e9 e3 00 00 00       	jmpq   10522 <addr2line::ResUnit<R>::parse_lines+0x34e2>
   1043f:	48 8d 15 92 34 03 00 	lea    0x33492(%rip),%rdx        # 438d8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x380>
   10446:	4c 89 e6             	mov    %r12,%rsi
   10449:	ff 15 a9 59 03 00    	callq  *0x359a9(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x468>
   1044f:	e9 ce 00 00 00       	jmpq   10522 <addr2line::ResUnit<R>::parse_lines+0x34e2>
   10454:	be 08 00 00 00       	mov    $0x8,%esi
   10459:	48 89 ef             	mov    %rbp,%rdi
   1045c:	ff 15 c6 56 03 00    	callq  *0x356c6(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   10462:	0f 0b                	ud2    
   10464:	be 08 00 00 00       	mov    $0x8,%esi
   10469:	48 8b bc 24 e0 00 00 	mov    0xe0(%rsp),%rdi
   10470:	00 
   10471:	ff 15 b1 56 03 00    	callq  *0x356b1(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   10477:	0f 0b                	ud2    
   10479:	be 01 00 00 00       	mov    $0x1,%esi
   1047e:	48 89 df             	mov    %rbx,%rdi
   10481:	ff 15 a1 56 03 00    	callq  *0x356a1(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   10487:	0f 0b                	ud2    
   10489:	48 8d 15 60 34 03 00 	lea    0x33460(%rip),%rdx        # 438f0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x398>
   10490:	ff 15 12 5a 03 00    	callq  *0x35a12(%rip)        # 45ea8 <_GLOBAL_OFFSET_TABLE_+0x518>
   10496:	e9 87 00 00 00       	jmpq   10522 <addr2line::ResUnit<R>::parse_lines+0x34e2>
   1049b:	48 8d 15 4e 34 03 00 	lea    0x3344e(%rip),%rdx        # 438f0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x398>
   104a2:	48 89 f7             	mov    %rsi,%rdi
   104a5:	4c 89 e6             	mov    %r12,%rsi
   104a8:	ff 15 82 55 03 00    	callq  *0x35582(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   104ae:	eb 72                	jmp    10522 <addr2line::ResUnit<R>::parse_lines+0x34e2>
   104b0:	ff 15 32 56 03 00    	callq  *0x35632(%rip)        # 45ae8 <_GLOBAL_OFFSET_TABLE_+0x158>
   104b6:	eb 6a                	jmp    10522 <addr2line::ResUnit<R>::parse_lines+0x34e2>
   104b8:	ff 15 2a 56 03 00    	callq  *0x3562a(%rip)        # 45ae8 <_GLOBAL_OFFSET_TABLE_+0x158>
   104be:	eb 62                	jmp    10522 <addr2line::ResUnit<R>::parse_lines+0x34e2>
   104c0:	ff 15 22 56 03 00    	callq  *0x35622(%rip)        # 45ae8 <_GLOBAL_OFFSET_TABLE_+0x158>
   104c6:	eb 5a                	jmp    10522 <addr2line::ResUnit<R>::parse_lines+0x34e2>
   104c8:	ff 15 1a 56 03 00    	callq  *0x3561a(%rip)        # 45ae8 <_GLOBAL_OFFSET_TABLE_+0x158>
   104ce:	eb 52                	jmp    10522 <addr2line::ResUnit<R>::parse_lines+0x34e2>
   104d0:	48 8d 3d 49 6e 02 00 	lea    0x26e49(%rip),%rdi        # 37320 <str.6>
   104d7:	48 8d 15 ba 34 03 00 	lea    0x334ba(%rip),%rdx        # 43998 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x440>
   104de:	be 39 00 00 00       	mov    $0x39,%esi
   104e3:	ff 15 f7 59 03 00    	callq  *0x359f7(%rip)        # 45ee0 <_GLOBAL_OFFSET_TABLE_+0x550>
   104e9:	eb 37                	jmp    10522 <addr2line::ResUnit<R>::parse_lines+0x34e2>
   104eb:	48 8d 3d 0e 6e 02 00 	lea    0x26e0e(%rip),%rdi        # 37300 <str.5>
   104f2:	48 8d 15 67 31 03 00 	lea    0x33167(%rip),%rdx        # 43660 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x108>
   104f9:	be 19 00 00 00       	mov    $0x19,%esi
   104fe:	ff 15 dc 59 03 00    	callq  *0x359dc(%rip)        # 45ee0 <_GLOBAL_OFFSET_TABLE_+0x550>
   10504:	eb 1c                	jmp    10522 <addr2line::ResUnit<R>::parse_lines+0x34e2>
   10506:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   1050a:	48 89 f9             	mov    %rdi,%rcx
   1050d:	48 39 fe             	cmp    %rdi,%rsi
   10510:	73 12                	jae    10524 <addr2line::ResUnit<R>::parse_lines+0x34e4>
   10512:	48 8d 15 ef 33 03 00 	lea    0x333ef(%rip),%rdx        # 43908 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3b0>
   10519:	48 89 cf             	mov    %rcx,%rdi
   1051c:	ff 15 86 59 03 00    	callq  *0x35986(%rip)        # 45ea8 <_GLOBAL_OFFSET_TABLE_+0x518>
   10522:	0f 0b                	ud2    
   10524:	48 8d 15 dd 33 03 00 	lea    0x333dd(%rip),%rdx        # 43908 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3b0>
   1052b:	48 89 f7             	mov    %rsi,%rdi
   1052e:	4c 89 e6             	mov    %r12,%rsi
   10531:	ff 15 f9 54 03 00    	callq  *0x354f9(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   10537:	eb e9                	jmp    10522 <addr2line::ResUnit<R>::parse_lines+0x34e2>
   10539:	ff 15 a9 55 03 00    	callq  *0x355a9(%rip)        # 45ae8 <_GLOBAL_OFFSET_TABLE_+0x158>
   1053f:	eb e1                	jmp    10522 <addr2line::ResUnit<R>::parse_lines+0x34e2>
   10541:	48 8b bc 24 b8 01 00 	mov    0x1b8(%rsp),%rdi
   10548:	00 
   10549:	48 89 de             	mov    %rbx,%rsi
   1054c:	ff 15 d6 55 03 00    	callq  *0x355d6(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   10552:	0f 0b                	ud2    
   10554:	eb 5f                	jmp    105b5 <addr2line::ResUnit<R>::parse_lines+0x3575>
   10556:	eb 6f                	jmp    105c7 <addr2line::ResUnit<R>::parse_lines+0x3587>
   10558:	eb 7c                	jmp    105d6 <addr2line::ResUnit<R>::parse_lines+0x3596>
   1055a:	48 89 c3             	mov    %rax,%rbx
   1055d:	e9 e1 00 00 00       	jmpq   10643 <addr2line::ResUnit<R>::parse_lines+0x3603>
   10562:	48 89 c3             	mov    %rax,%rbx
   10565:	e9 cc 00 00 00       	jmpq   10636 <addr2line::ResUnit<R>::parse_lines+0x35f6>
   1056a:	48 89 c3             	mov    %rax,%rbx
   1056d:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   10572:	e9 ad 00 00 00       	jmpq   10624 <addr2line::ResUnit<R>::parse_lines+0x35e4>
   10577:	48 89 c3             	mov    %rax,%rbx
   1057a:	48 8d bc 24 10 01 00 	lea    0x110(%rsp),%rdi
   10581:	00 
   10582:	e8 79 6e ff ff       	callq  7400 <core::ptr::drop_in_place>
   10587:	e9 aa 00 00 00       	jmpq   10636 <addr2line::ResUnit<R>::parse_lines+0x35f6>
   1058c:	48 89 c3             	mov    %rax,%rbx
   1058f:	e9 a2 00 00 00       	jmpq   10636 <addr2line::ResUnit<R>::parse_lines+0x35f6>
   10594:	eb 56                	jmp    105ec <addr2line::ResUnit<R>::parse_lines+0x35ac>
   10596:	48 89 c3             	mov    %rax,%rbx
   10599:	e9 98 00 00 00       	jmpq   10636 <addr2line::ResUnit<R>::parse_lines+0x35f6>
   1059e:	48 89 c3             	mov    %rax,%rbx
   105a1:	e9 90 00 00 00       	jmpq   10636 <addr2line::ResUnit<R>::parse_lines+0x35f6>
   105a6:	48 89 c3             	mov    %rax,%rbx
   105a9:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   105ae:	e8 ad 69 ff ff       	callq  6f60 <core::ptr::drop_in_place>
   105b3:	eb 03                	jmp    105b8 <addr2line::ResUnit<R>::parse_lines+0x3578>
   105b5:	48 89 c3             	mov    %rax,%rbx
   105b8:	48 8d bc 24 90 00 00 	lea    0x90(%rsp),%rdi
   105bf:	00 
   105c0:	e8 1b 61 ff ff       	callq  66e0 <core::ptr::drop_in_place>
   105c5:	eb 03                	jmp    105ca <addr2line::ResUnit<R>::parse_lines+0x358a>
   105c7:	48 89 c3             	mov    %rax,%rbx
   105ca:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   105cf:	e8 dc 63 ff ff       	callq  69b0 <core::ptr::drop_in_place>
   105d4:	eb 03                	jmp    105d9 <addr2line::ResUnit<R>::parse_lines+0x3599>
   105d6:	48 89 c3             	mov    %rax,%rbx
   105d9:	48 8d bc 24 c8 00 00 	lea    0xc8(%rsp),%rdi
   105e0:	00 
   105e1:	e8 fa 60 ff ff       	callq  66e0 <core::ptr::drop_in_place>
   105e6:	eb 5b                	jmp    10643 <addr2line::ResUnit<R>::parse_lines+0x3603>
   105e8:	eb 20                	jmp    1060a <addr2line::ResUnit<R>::parse_lines+0x35ca>
   105ea:	eb 2d                	jmp    10619 <addr2line::ResUnit<R>::parse_lines+0x35d9>
   105ec:	48 89 c3             	mov    %rax,%rbx
   105ef:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
   105f4:	e8 e7 63 ff ff       	callq  69e0 <core::ptr::drop_in_place>
   105f9:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   105fe:	e8 0d 64 ff ff       	callq  6a10 <core::ptr::drop_in_place>
   10603:	eb 31                	jmp    10636 <addr2line::ResUnit<R>::parse_lines+0x35f6>
   10605:	48 89 c3             	mov    %rax,%rbx
   10608:	eb 1f                	jmp    10629 <addr2line::ResUnit<R>::parse_lines+0x35e9>
   1060a:	48 89 c3             	mov    %rax,%rbx
   1060d:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
   10612:	e8 79 62 ff ff       	callq  6890 <core::ptr::drop_in_place>
   10617:	eb 03                	jmp    1061c <addr2line::ResUnit<R>::parse_lines+0x35dc>
   10619:	48 89 c3             	mov    %rax,%rbx
   1061c:	48 8d bc 24 90 00 00 	lea    0x90(%rsp),%rdi
   10623:	00 
   10624:	e8 17 61 ff ff       	callq  6740 <core::ptr::drop_in_place>
   10629:	48 8d bc 24 c8 00 00 	lea    0xc8(%rsp),%rdi
   10630:	00 
   10631:	e8 2a 61 ff ff       	callq  6760 <core::ptr::drop_in_place>
   10636:	48 8d bc 24 c0 01 00 	lea    0x1c0(%rsp),%rdi
   1063d:	00 
   1063e:	e8 8d 60 ff ff       	callq  66d0 <core::ptr::drop_in_place>
   10643:	48 8d bc 24 88 01 00 	lea    0x188(%rsp),%rdi
   1064a:	00 
   1064b:	e8 60 63 ff ff       	callq  69b0 <core::ptr::drop_in_place>
   10650:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
   10657:	00 
   10658:	e8 b3 63 ff ff       	callq  6a10 <core::ptr::drop_in_place>
   1065d:	48 89 df             	mov    %rbx,%rdi
   10660:	e8 eb 49 ff ff       	callq  5050 <_Unwind_Resume@plt>
   10665:	0f 0b                	ud2    
   10667:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1066e:	00 00 

0000000000010670 <addr2line::ResUnit<R>::parse_functions>:
   10670:	55                   	push   %rbp
   10671:	41 57                	push   %r15
   10673:	41 56                	push   %r14
   10675:	41 55                	push   %r13
   10677:	41 54                	push   %r12
   10679:	53                   	push   %rbx
   1067a:	48 81 ec a8 01 00 00 	sub    $0x1a8,%rsp
   10681:	48 89 f3             	mov    %rsi,%rbx
   10684:	48 8b 86 d8 01 00 00 	mov    0x1d8(%rsi),%rax
   1068b:	48 83 f8 02          	cmp    $0x2,%rax
   1068f:	0f 85 9a 09 00 00    	jne    1102f <addr2line::ResUnit<R>::parse_functions+0x9bf>
   10695:	48 89 bc 24 88 01 00 	mov    %rdi,0x188(%rsp)
   1069c:	00 
   1069d:	48 c7 84 24 38 01 00 	movq   $0x8,0x138(%rsp)
   106a4:	00 08 00 00 00 
   106a9:	0f 57 c0             	xorps  %xmm0,%xmm0
   106ac:	0f 11 84 24 40 01 00 	movups %xmm0,0x140(%rsp)
   106b3:	00 
   106b4:	48 c7 84 24 e8 00 00 	movq   $0x8,0xe8(%rsp)
   106bb:	00 08 00 00 00 
   106c0:	0f 11 84 24 f0 00 00 	movups %xmm0,0xf0(%rsp)
   106c7:	00 
   106c8:	48 8d 4b 18          	lea    0x18(%rbx),%rcx
   106cc:	48 8d 7b 40          	lea    0x40(%rbx),%rdi
   106d0:	48 8b 73 28          	mov    0x28(%rbx),%rsi
   106d4:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
   106d9:	48 8b 43 30          	mov    0x30(%rbx),%rax
   106dd:	48 89 b4 24 00 01 00 	mov    %rsi,0x100(%rsp)
   106e4:	00 
   106e5:	48 89 84 24 08 01 00 	mov    %rax,0x108(%rsp)
   106ec:	00 
   106ed:	48 89 8c 24 10 01 00 	mov    %rcx,0x110(%rsp)
   106f4:	00 
   106f5:	48 89 bc 24 18 01 00 	mov    %rdi,0x118(%rsp)
   106fc:	00 
   106fd:	48 c7 84 24 20 01 00 	movq   $0x0,0x120(%rsp)
   10704:	00 00 00 00 00 
   10709:	48 85 c0             	test   %rax,%rax
   1070c:	0f 84 5c 07 00 00    	je     10e6e <addr2line::ResUnit<R>::parse_functions+0x7fe>
   10712:	48 89 94 24 b0 00 00 	mov    %rdx,0xb0(%rsp)
   10719:	00 
   1071a:	41 bc 08 00 00 00    	mov    $0x8,%r12d
   10720:	4c 8d 2d 29 93 01 00 	lea    0x19329(%rip),%r13        # 29a50 <<gimli::read::abbrev::Attributes as core::ops::deref::Deref>::deref>
   10727:	ba 08 00 00 00       	mov    $0x8,%edx
   1072c:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   10731:	ba 00 00 00 00       	mov    $0x0,%edx
   10736:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   1073b:	ba 00 00 00 00       	mov    $0x0,%edx
   10740:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   10745:	31 d2                	xor    %edx,%edx
   10747:	80 79 21 08          	cmpb   $0x8,0x21(%rcx)
   1074b:	0f 94 c2             	sete   %dl
   1074e:	48 8b 39             	mov    (%rcx),%rdi
   10751:	48 01 f7             	add    %rsi,%rdi
   10754:	48 8d 2c d7          	lea    (%rdi,%rdx,8),%rbp
   10758:	48 8b 51 18          	mov    0x18(%rcx),%rdx
   1075c:	48 03 51 10          	add    0x10(%rcx),%rdx
   10760:	48 29 d5             	sub    %rdx,%rbp
   10763:	48 83 c5 04          	add    $0x4,%rbp
   10767:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
   1076b:	31 d2                	xor    %edx,%edx
   1076d:	31 c9                	xor    %ecx,%ecx
   1076f:	90                   	nop
   10770:	4c 8d 7e 01          	lea    0x1(%rsi),%r15
   10774:	4c 89 bc 24 00 01 00 	mov    %r15,0x100(%rsp)
   1077b:	00 
   1077c:	48 89 84 24 08 01 00 	mov    %rax,0x108(%rsp)
   10783:	00 
   10784:	0f b6 1e             	movzbl (%rsi),%ebx
   10787:	83 f9 3f             	cmp    $0x3f,%ecx
   1078a:	75 09                	jne    10795 <addr2line::ResUnit<R>::parse_functions+0x125>
   1078c:	80 fb 01             	cmp    $0x1,%bl
   1078f:	0f 87 4a 07 00 00    	ja     10edf <addr2line::ResUnit<R>::parse_functions+0x86f>
   10795:	0f b6 f3             	movzbl %bl,%esi
   10798:	89 f7                	mov    %esi,%edi
   1079a:	83 e7 7f             	and    $0x7f,%edi
   1079d:	48 d3 e7             	shl    %cl,%rdi
   107a0:	48 09 fa             	or     %rdi,%rdx
   107a3:	40 84 f6             	test   %sil,%sil
   107a6:	79 11                	jns    107b9 <addr2line::ResUnit<R>::parse_functions+0x149>
   107a8:	83 c1 07             	add    $0x7,%ecx
   107ab:	4c 89 fe             	mov    %r15,%rsi
   107ae:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
   107b2:	72 bc                	jb     10770 <addr2line::ResUnit<R>::parse_functions+0x100>
   107b4:	e9 31 07 00 00       	jmpq   10eea <addr2line::ResUnit<R>::parse_functions+0x87a>
   107b9:	48 85 d2             	test   %rdx,%rdx
   107bc:	0f 84 8f 00 00 00    	je     10851 <addr2line::ResUnit<R>::parse_functions+0x1e1>
   107c2:	48 8b 8c 24 18 01 00 	mov    0x118(%rsp),%rcx
   107c9:	00 
   107ca:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
   107ce:	48 3b 41 10          	cmp    0x10(%rcx),%rax
   107d2:	0f 83 bc 00 00 00    	jae    10894 <addr2line::ResUnit<R>::parse_functions+0x224>
   107d8:	48 6b f0 70          	imul   $0x70,%rax,%rsi
   107dc:	48 03 31             	add    (%rcx),%rsi
   107df:	80 7e 6a 01          	cmpb   $0x1,0x6a(%rsi)
   107e3:	75 09                	jne    107ee <addr2line::ResUnit<R>::parse_functions+0x17e>
   107e5:	48 83 84 24 20 01 00 	addq   $0x1,0x120(%rsp)
   107ec:	00 01 
   107ee:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
   107f2:	66 83 7e 68 2e       	cmpw   $0x2e,0x68(%rsi)
   107f7:	0f 85 1b 01 00 00    	jne    10918 <addr2line::ResUnit<R>::parse_functions+0x2a8>
   107fd:	41 ff d5             	callq  *%r13
   10800:	48 89 ac 24 a8 00 00 	mov    %rbp,0xa8(%rsp)
   10807:	00 
   10808:	48 85 d2             	test   %rdx,%rdx
   1080b:	0f 84 42 03 00 00    	je     10b53 <addr2line::ResUnit<R>::parse_functions+0x4e3>
   10811:	49 89 c5             	mov    %rax,%r13
   10814:	48 c1 e2 04          	shl    $0x4,%rdx
   10818:	48 01 c2             	add    %rax,%rdx
   1081b:	48 8b 84 24 b0 00 00 	mov    0xb0(%rsp),%rax
   10822:	00 
   10823:	4c 8b b8 c0 00 00 00 	mov    0xc0(%rax),%r15
   1082a:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax
   10831:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
   10838:	00 
   10839:	45 31 f6             	xor    %r14d,%r14d
   1083c:	31 c0                	xor    %eax,%eax
   1083e:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   10843:	31 db                	xor    %ebx,%ebx
   10845:	31 c0                	xor    %eax,%eax
   10847:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1084c:	e9 6f 01 00 00       	jmpq   109c0 <addr2line::ResUnit<R>::parse_functions+0x350>
   10851:	48 83 84 24 20 01 00 	addq   $0xffffffffffffffff,0x120(%rsp)
   10858:	00 ff 
   1085a:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   1085f:	4c 8b 7c 24 10       	mov    0x10(%rsp),%r15
   10864:	48 8b 84 24 08 01 00 	mov    0x108(%rsp),%rax
   1086b:	00 
   1086c:	48 85 c0             	test   %rax,%rax
   1086f:	0f 84 1a 08 00 00    	je     1108f <addr2line::ResUnit<R>::parse_functions+0xa1f>
   10875:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
   1087a:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   1087f:	48 8b b4 24 00 01 00 	mov    0x100(%rsp),%rsi
   10886:	00 
   10887:	48 8b 8c 24 10 01 00 	mov    0x110(%rsp),%rcx
   1088e:	00 
   1088f:	e9 b1 fe ff ff       	jmpq   10745 <addr2line::ResUnit<R>::parse_functions+0xd5>
   10894:	48 8b 41 18          	mov    0x18(%rcx),%rax
   10898:	41 be 12 00 00 00    	mov    $0x12,%r14d
   1089e:	48 85 c0             	test   %rax,%rax
   108a1:	0f 84 3e 06 00 00    	je     10ee5 <addr2line::ResUnit<R>::parse_functions+0x875>
   108a7:	49 89 ea             	mov    %rbp,%r10
   108aa:	4c 8b 41 20          	mov    0x20(%rcx),%r8
   108ae:	44 0f b7 88 32 05 00 	movzwl 0x532(%rax),%r9d
   108b5:	00 
   108b6:	48 8d 70 f0          	lea    -0x10(%rax),%rsi
   108ba:	4c 89 cb             	mov    %r9,%rbx
   108bd:	48 f7 db             	neg    %rbx
   108c0:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   108c7:	48 8d 0c 3b          	lea    (%rbx,%rdi,1),%rcx
   108cb:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
   108cf:	74 2d                	je     108fe <addr2line::ResUnit<R>::parse_functions+0x28e>
   108d1:	31 c9                	xor    %ecx,%ecx
   108d3:	48 39 54 f8 10       	cmp    %rdx,0x10(%rax,%rdi,8)
   108d8:	0f 95 c1             	setne  %cl
   108db:	48 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%rbp
   108e2:	48 0f 47 cd          	cmova  %rbp,%rcx
   108e6:	48 83 c7 01          	add    $0x1,%rdi
   108ea:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
   108ee:	74 11                	je     10901 <addr2line::ResUnit<R>::parse_functions+0x291>
   108f0:	48 83 c6 70          	add    $0x70,%rsi
   108f4:	48 85 c9             	test   %rcx,%rcx
   108f7:	75 ce                	jne    108c7 <addr2line::ResUnit<R>::parse_functions+0x257>
   108f9:	e9 85 00 00 00       	jmpq   10983 <addr2line::ResUnit<R>::parse_functions+0x313>
   108fe:	4c 89 cf             	mov    %r9,%rdi
   10901:	4d 85 c0             	test   %r8,%r8
   10904:	0f 84 db 05 00 00    	je     10ee5 <addr2line::ResUnit<R>::parse_functions+0x875>
   1090a:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   1090e:	48 8b 84 f8 38 05 00 	mov    0x538(%rax,%rdi,8),%rax
   10915:	00 
   10916:	eb 96                	jmp    108ae <addr2line::ResUnit<R>::parse_functions+0x23e>
   10918:	4c 89 eb             	mov    %r13,%rbx
   1091b:	41 ff d5             	callq  *%r13
   1091e:	49 89 d6             	mov    %rdx,%r14
   10921:	48 85 d2             	test   %rdx,%rdx
   10924:	0f 84 78 03 00 00    	je     10ca2 <addr2line::ResUnit<R>::parse_functions+0x632>
   1092a:	48 89 c5             	mov    %rax,%rbp
   1092d:	49 c1 e6 04          	shl    $0x4,%r14
   10931:	49 01 c6             	add    %rax,%r14
   10934:	49 89 dd             	mov    %rbx,%r13
   10937:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1093e:	00 00 
   10940:	48 8b 4d 00          	mov    0x0(%rbp),%rcx
   10944:	48 8b 84 24 10 01 00 	mov    0x110(%rsp),%rax
   1094b:	00 
   1094c:	8b 50 20             	mov    0x20(%rax),%edx
   1094f:	44 0f b7 4d 0a       	movzwl 0xa(%rbp),%r9d
   10954:	44 8b 45 08          	mov    0x8(%rbp),%r8d
   10958:	48 8d 7c 24 60       	lea    0x60(%rsp),%rdi
   1095d:	48 8d b4 24 00 01 00 	lea    0x100(%rsp),%rsi
   10964:	00 
   10965:	e8 66 9e ff ff       	callq  a7d0 <gimli::read::unit::parse_attribute>
   1096a:	83 7c 24 60 01       	cmpl   $0x1,0x60(%rsp)
   1096f:	0f 84 ef 06 00 00    	je     11064 <addr2line::ResUnit<R>::parse_functions+0x9f4>
   10975:	48 83 c5 10          	add    $0x10,%rbp
   10979:	4c 39 f5             	cmp    %r14,%rbp
   1097c:	75 c2                	jne    10940 <addr2line::ResUnit<R>::parse_functions+0x2d0>
   1097e:	e9 d7 fe ff ff       	jmpq   1085a <addr2line::ResUnit<R>::parse_functions+0x1ea>
   10983:	4c 89 d5             	mov    %r10,%rbp
   10986:	80 7e 6a 01          	cmpb   $0x1,0x6a(%rsi)
   1098a:	0f 84 55 fe ff ff    	je     107e5 <addr2line::ResUnit<R>::parse_functions+0x175>
   10990:	e9 59 fe ff ff       	jmpq   107ee <addr2line::ResUnit<R>::parse_functions+0x17e>
   10995:	b8 01 00 00 00       	mov    $0x1,%eax
   1099a:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1099f:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   109a4:	48 89 84 24 c0 00 00 	mov    %rax,0xc0(%rsp)
   109ab:	00 
   109ac:	0f 1f 40 00          	nopl   0x0(%rax)
   109b0:	48 89 ea             	mov    %rbp,%rdx
   109b3:	49 83 c5 10          	add    $0x10,%r13
   109b7:	49 39 d5             	cmp    %rdx,%r13
   109ba:	0f 84 a6 01 00 00    	je     10b66 <addr2line::ResUnit<R>::parse_functions+0x4f6>
   109c0:	48 89 d5             	mov    %rdx,%rbp
   109c3:	49 8b 4d 00          	mov    0x0(%r13),%rcx
   109c7:	48 8b 84 24 10 01 00 	mov    0x110(%rsp),%rax
   109ce:	00 
   109cf:	8b 50 20             	mov    0x20(%rax),%edx
   109d2:	45 0f b7 4d 0a       	movzwl 0xa(%r13),%r9d
   109d7:	45 8b 45 08          	mov    0x8(%r13),%r8d
   109db:	48 8d 7c 24 60       	lea    0x60(%rsp),%rdi
   109e0:	48 8d b4 24 00 01 00 	lea    0x100(%rsp),%rsi
   109e7:	00 
   109e8:	e8 e3 9d ff ff       	callq  a7d0 <gimli::read::unit::parse_attribute>
   109ed:	83 7c 24 60 01       	cmpl   $0x1,0x60(%rsp)
   109f2:	0f 84 6c 06 00 00    	je     11064 <addr2line::ResUnit<R>::parse_functions+0x9f4>
   109f8:	0f b7 84 24 80 00 00 	movzwl 0x80(%rsp),%eax
   109ff:	00 
   10a00:	66 83 f8 55          	cmp    $0x55,%ax
   10a04:	74 7d                	je     10a83 <addr2line::ResUnit<R>::parse_functions+0x413>
   10a06:	66 83 f8 12          	cmp    $0x12,%ax
   10a0a:	74 36                	je     10a42 <addr2line::ResUnit<R>::parse_functions+0x3d2>
   10a0c:	66 83 f8 11          	cmp    $0x11,%ax
   10a10:	75 9e                	jne    109b0 <addr2line::ResUnit<R>::parse_functions+0x340>
   10a12:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   10a17:	48 8d 74 24 68       	lea    0x68(%rsp),%rsi
   10a1c:	e8 ef af ff ff       	callq  ba10 <gimli::read::unit::Attribute<R>::value>
   10a21:	48 83 7c 24 40 00    	cmpq   $0x0,0x40(%rsp)
   10a27:	75 87                	jne    109b0 <addr2line::ResUnit<R>::parse_functions+0x340>
   10a29:	b8 01 00 00 00       	mov    $0x1,%eax
   10a2e:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   10a33:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   10a38:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   10a3d:	e9 6e ff ff ff       	jmpq   109b0 <addr2line::ResUnit<R>::parse_functions+0x340>
   10a42:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   10a47:	48 8d 74 24 68       	lea    0x68(%rsp),%rsi
   10a4c:	e8 bf af ff ff       	callq  ba10 <gimli::read::unit::Attribute<R>::value>
   10a51:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   10a56:	48 83 f8 07          	cmp    $0x7,%rax
   10a5a:	0f 84 35 ff ff ff    	je     10995 <addr2line::ResUnit<R>::parse_functions+0x325>
   10a60:	48 85 c0             	test   %rax,%rax
   10a63:	48 89 ea             	mov    %rbp,%rdx
   10a66:	0f 85 47 ff ff ff    	jne    109b3 <addr2line::ResUnit<R>::parse_functions+0x343>
   10a6c:	bb 01 00 00 00       	mov    $0x1,%ebx
   10a71:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   10a76:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
   10a7d:	00 
   10a7e:	e9 30 ff ff ff       	jmpq   109b3 <addr2line::ResUnit<R>::parse_functions+0x343>
   10a83:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   10a88:	48 8d 74 24 68       	lea    0x68(%rsp),%rsi
   10a8d:	e8 7e af ff ff       	callq  ba10 <gimli::read::unit::Attribute<R>::value>
   10a92:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   10a97:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
   10a9c:	48 83 f8 16          	cmp    $0x16,%rax
   10aa0:	74 6c                	je     10b0e <addr2line::ResUnit<R>::parse_functions+0x49e>
   10aa2:	48 83 f8 18          	cmp    $0x18,%rax
   10aa6:	75 6b                	jne    10b13 <addr2line::ResUnit<R>::parse_functions+0x4a3>
   10aa8:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   10aad:	48 8b 81 b0 00 00 00 	mov    0xb0(%rcx),%rax
   10ab4:	41 be 13 00 00 00    	mov    $0x13,%r14d
   10aba:	48 8b 94 24 d0 00 00 	mov    0xd0(%rsp),%rdx
   10ac1:	00 
   10ac2:	48 29 c2             	sub    %rax,%rdx
   10ac5:	0f 82 25 04 00 00    	jb     10ef0 <addr2line::ResUnit<R>::parse_functions+0x880>
   10acb:	49 89 d9             	mov    %rbx,%r9
   10ace:	0f b6 59 39          	movzbl 0x39(%rcx),%ebx
   10ad2:	49 8d 0c 07          	lea    (%r15,%rax,1),%rcx
   10ad6:	31 f6                	xor    %esi,%esi
   10ad8:	80 fb 08             	cmp    $0x8,%bl
   10adb:	40 0f 94 c6          	sete   %sil
   10adf:	48 8d 34 b5 04 00 00 	lea    0x4(,%rsi,4),%rsi
   10ae6:	00 
   10ae7:	48 0f af f7          	imul   %rdi,%rsi
   10aeb:	48 29 f2             	sub    %rsi,%rdx
   10aee:	0f 82 8c 06 00 00    	jb     11180 <addr2line::ResUnit<R>::parse_functions+0xb10>
   10af4:	48 01 f1             	add    %rsi,%rcx
   10af7:	80 fb 08             	cmp    $0x8,%bl
   10afa:	75 24                	jne    10b20 <addr2line::ResUnit<R>::parse_functions+0x4b0>
   10afc:	48 83 fa 07          	cmp    $0x7,%rdx
   10b00:	0f 86 7a 06 00 00    	jbe    11180 <addr2line::ResUnit<R>::parse_functions+0xb10>
   10b06:	4c 89 cb             	mov    %r9,%rbx
   10b09:	48 8b 09             	mov    (%rcx),%rcx
   10b0c:	eb 21                	jmp    10b2f <addr2line::ResUnit<R>::parse_functions+0x4bf>
   10b0e:	48 89 f8             	mov    %rdi,%rax
   10b11:	eb 22                	jmp    10b35 <addr2line::ResUnit<R>::parse_functions+0x4c5>
   10b13:	45 31 f6             	xor    %r14d,%r14d
   10b16:	48 8b 84 24 e0 00 00 	mov    0xe0(%rsp),%rax
   10b1d:	00 
   10b1e:	eb 1b                	jmp    10b3b <addr2line::ResUnit<R>::parse_functions+0x4cb>
   10b20:	48 83 fa 04          	cmp    $0x4,%rdx
   10b24:	0f 82 56 06 00 00    	jb     11180 <addr2line::ResUnit<R>::parse_functions+0xb10>
   10b2a:	4c 89 cb             	mov    %r9,%rbx
   10b2d:	8b 09                	mov    (%rcx),%ecx
   10b2f:	48 01 c1             	add    %rax,%rcx
   10b32:	48 89 c8             	mov    %rcx,%rax
   10b35:	41 be 01 00 00 00    	mov    $0x1,%r14d
   10b3b:	48 89 ea             	mov    %rbp,%rdx
   10b3e:	48 89 84 24 d8 00 00 	mov    %rax,0xd8(%rsp)
   10b45:	00 
   10b46:	48 89 84 24 e0 00 00 	mov    %rax,0xe0(%rsp)
   10b4d:	00 
   10b4e:	e9 60 fe ff ff       	jmpq   109b3 <addr2line::ResUnit<R>::parse_functions+0x343>
   10b53:	31 c0                	xor    %eax,%eax
   10b55:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   10b5a:	31 db                	xor    %ebx,%ebx
   10b5c:	31 c0                	xor    %eax,%eax
   10b5e:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   10b63:	45 31 f6             	xor    %r14d,%r14d
   10b66:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   10b6b:	48 89 84 24 90 01 00 	mov    %rax,0x190(%rsp)
   10b72:	00 
   10b73:	48 8d 84 24 e8 00 00 	lea    0xe8(%rsp),%rax
   10b7a:	00 
   10b7b:	48 89 84 24 98 01 00 	mov    %rax,0x198(%rsp)
   10b82:	00 
   10b83:	48 8d 84 24 90 01 00 	lea    0x190(%rsp),%rax
   10b8a:	00 
   10b8b:	48 89 84 24 a0 01 00 	mov    %rax,0x1a0(%rsp)
   10b92:	00 
   10b93:	c6 44 24 07 00       	movb   $0x0,0x7(%rsp)
   10b98:	48 8d 84 24 98 01 00 	lea    0x198(%rsp),%rax
   10b9f:	00 
   10ba0:	48 89 84 24 50 01 00 	mov    %rax,0x150(%rsp)
   10ba7:	00 
   10ba8:	48 8d 44 24 07       	lea    0x7(%rsp),%rax
   10bad:	48 89 84 24 58 01 00 	mov    %rax,0x158(%rsp)
   10bb4:	00 
   10bb5:	49 83 fe 01          	cmp    $0x1,%r14
   10bb9:	0f 85 f5 00 00 00    	jne    10cb4 <addr2line::ResUnit<R>::parse_functions+0x644>
   10bbf:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   10bc4:	8b 47 38             	mov    0x38(%rdi),%eax
   10bc7:	89 c1                	mov    %eax,%ecx
   10bc9:	c1 e9 10             	shr    $0x10,%ecx
   10bcc:	48 8b 94 24 b0 00 00 	mov    0xb0(%rsp),%rdx
   10bd3:	00 
   10bd4:	4c 8d 8a b0 00 00 00 	lea    0xb0(%rdx),%r9
   10bdb:	48 8d b2 c0 00 00 00 	lea    0xc0(%rdx),%rsi
   10be2:	4c 8d 82 b8 00 00 00 	lea    0xb8(%rdx),%r8
   10be9:	48 8d 9a c8 00 00 00 	lea    0xc8(%rdx),%rbx
   10bf0:	66 83 f9 05          	cmp    $0x5,%cx
   10bf4:	49 0f 42 f1          	cmovb  %r9,%rsi
   10bf8:	4c 8b 3e             	mov    (%rsi),%r15
   10bfb:	49 0f 42 d8          	cmovb  %r8,%rbx
   10bff:	48 8b 0b             	mov    (%rbx),%rcx
   10c02:	48 8b ac 24 d8 00 00 	mov    0xd8(%rsp),%rbp
   10c09:	00 
   10c0a:	48 29 e9             	sub    %rbp,%rcx
   10c0d:	4c 8d 2d 3c 8e 01 00 	lea    0x18e3c(%rip),%r13        # 29a50 <<gimli::read::abbrev::Attributes as core::ops::deref::Deref>::deref>
   10c14:	0f 82 d0 02 00 00    	jb     10eea <addr2line::ResUnit<R>::parse_functions+0x87a>
   10c1a:	48 8b 9f 90 00 00 00 	mov    0x90(%rdi),%rbx
   10c21:	48 8b b7 a0 00 00 00 	mov    0xa0(%rdi),%rsi
   10c28:	49 01 ef             	add    %rbp,%r15
   10c2b:	0f 10 42 10          	movups 0x10(%rdx),%xmm0
   10c2f:	48 89 4c 24 68       	mov    %rcx,0x68(%rsp)
   10c34:	4c 89 7c 24 60       	mov    %r15,0x60(%rsp)
   10c39:	89 44 24 70          	mov    %eax,0x70(%rsp)
   10c3d:	48 89 5c 24 78       	mov    %rbx,0x78(%rsp)
   10c42:	0f 11 84 24 80 00 00 	movups %xmm0,0x80(%rsp)
   10c49:	00 
   10c4a:	48 89 b4 24 90 00 00 	mov    %rsi,0x90(%rsp)
   10c51:	00 
   10c52:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   10c59:	00 00 00 
   10c5c:	0f 1f 40 00          	nopl   0x0(%rax)
   10c60:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   10c65:	48 8d 74 24 60       	lea    0x60(%rsp),%rsi
   10c6a:	e8 e1 b7 ff ff       	callq  c450 <gimli::read::rnglists::RngListIter<R>::next>
   10c6f:	4c 8b 74 24 48       	mov    0x48(%rsp),%r14
   10c74:	4c 8b 7c 24 50       	mov    0x50(%rsp),%r15
   10c79:	48 83 7c 24 40 01    	cmpq   $0x1,0x40(%rsp)
   10c7f:	0f 84 6b 02 00 00    	je     10ef0 <addr2line::ResUnit<R>::parse_functions+0x880>
   10c85:	49 83 fe 01          	cmp    $0x1,%r14
   10c89:	75 65                	jne    10cf0 <addr2line::ResUnit<R>::parse_functions+0x680>
   10c8b:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
   10c90:	48 8d bc 24 50 01 00 	lea    0x150(%rsp),%rdi
   10c97:	00 
   10c98:	4c 89 fe             	mov    %r15,%rsi
   10c9b:	e8 80 1d 00 00       	callq  12a20 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}>
   10ca0:	eb be                	jmp    10c60 <addr2line::ResUnit<R>::parse_functions+0x5f0>
   10ca2:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   10ca7:	4c 8b 7c 24 10       	mov    0x10(%rsp),%r15
   10cac:	49 89 dd             	mov    %rbx,%r13
   10caf:	e9 b0 fb ff ff       	jmpq   10864 <addr2line::ResUnit<R>::parse_functions+0x1f4>
   10cb4:	48 89 d8             	mov    %rbx,%rax
   10cb7:	48 83 7c 24 30 01    	cmpq   $0x1,0x30(%rsp)
   10cbd:	4c 8d 2d 8c 8d 01 00 	lea    0x18d8c(%rip),%r13        # 29a50 <<gimli::read::abbrev::Attributes as core::ops::deref::Deref>::deref>
   10cc4:	48 8b 9c 24 a8 00 00 	mov    0xa8(%rsp),%rbx
   10ccb:	00 
   10ccc:	75 52                	jne    10d20 <addr2line::ResUnit<R>::parse_functions+0x6b0>
   10cce:	48 83 f8 01          	cmp    $0x1,%rax
   10cd2:	75 26                	jne    10cfa <addr2line::ResUnit<R>::parse_functions+0x68a>
   10cd4:	48 8d bc 24 50 01 00 	lea    0x150(%rsp),%rdi
   10cdb:	00 
   10cdc:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   10ce1:	48 8b 94 24 c8 00 00 	mov    0xc8(%rsp),%rdx
   10ce8:	00 
   10ce9:	e8 32 1d 00 00       	callq  12a20 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}>
   10cee:	eb 30                	jmp    10d20 <addr2line::ResUnit<R>::parse_functions+0x6b0>
   10cf0:	48 8b 9c 24 a8 00 00 	mov    0xa8(%rsp),%rbx
   10cf7:	00 
   10cf8:	eb 26                	jmp    10d20 <addr2line::ResUnit<R>::parse_functions+0x6b0>
   10cfa:	48 83 7c 24 28 01    	cmpq   $0x1,0x28(%rsp)
   10d00:	75 1e                	jne    10d20 <addr2line::ResUnit<R>::parse_functions+0x6b0>
   10d02:	48 8b 84 24 c0 00 00 	mov    0xc0(%rsp),%rax
   10d09:	00 
   10d0a:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   10d0f:	48 8d 14 30          	lea    (%rax,%rsi,1),%rdx
   10d13:	48 8d bc 24 50 01 00 	lea    0x150(%rsp),%rdi
   10d1a:	00 
   10d1b:	e8 00 1d 00 00       	callq  12a20 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}>
   10d20:	80 7c 24 07 00       	cmpb   $0x0,0x7(%rsp)
   10d25:	0f 84 2f fb ff ff    	je     1085a <addr2line::ResUnit<R>::parse_functions+0x1ea>
   10d2b:	48 89 5c 24 60       	mov    %rbx,0x60(%rsp)
   10d30:	48 c7 44 24 68 02 00 	movq   $0x2,0x68(%rsp)
   10d37:	00 00 
   10d39:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   10d3e:	4c 8b 7c 24 10       	mov    0x10(%rsp),%r15
   10d43:	49 39 d7             	cmp    %rdx,%r15
   10d46:	0f 85 ca 00 00 00    	jne    10e16 <addr2line::ResUnit<R>::parse_functions+0x7a6>
   10d4c:	48 89 d0             	mov    %rdx,%rax
   10d4f:	48 ff c0             	inc    %rax
   10d52:	0f 84 a3 0b 00 00    	je     118fb <addr2line::ResUnit<R>::parse_functions+0x128b>
   10d58:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   10d5d:	48 8d 0c 36          	lea    (%rsi,%rsi,1),%rcx
   10d61:	48 39 c1             	cmp    %rax,%rcx
   10d64:	48 0f 47 c1          	cmova  %rcx,%rax
   10d68:	48 83 f8 04          	cmp    $0x4,%rax
   10d6c:	b9 04 00 00 00       	mov    $0x4,%ecx
   10d71:	48 0f 46 c1          	cmovbe %rcx,%rax
   10d75:	45 31 e4             	xor    %r12d,%r12d
   10d78:	b9 48 00 00 00       	mov    $0x48,%ecx
   10d7d:	48 f7 e1             	mul    %rcx
   10d80:	48 89 c5             	mov    %rax,%rbp
   10d83:	0f 90 c0             	seto   %al
   10d86:	41 0f 91 c4          	setno  %r12b
   10d8a:	49 c1 e4 03          	shl    $0x3,%r12
   10d8e:	48 85 f6             	test   %rsi,%rsi
   10d91:	74 35                	je     10dc8 <addr2line::ResUnit<R>::parse_functions+0x758>
   10d93:	84 c0                	test   %al,%al
   10d95:	0f 85 60 0b 00 00    	jne    118fb <addr2line::ResUnit<R>::parse_functions+0x128b>
   10d9b:	48 83 7c 24 38 00    	cmpq   $0x0,0x38(%rsp)
   10da1:	74 2d                	je     10dd0 <addr2line::ResUnit<R>::parse_functions+0x760>
   10da3:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   10da8:	48 c1 e0 03          	shl    $0x3,%rax
   10dac:	48 8d 34 c0          	lea    (%rax,%rax,8),%rsi
   10db0:	48 85 f6             	test   %rsi,%rsi
   10db3:	74 1b                	je     10dd0 <addr2line::ResUnit<R>::parse_functions+0x760>
   10db5:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
   10dba:	4c 89 e2             	mov    %r12,%rdx
   10dbd:	48 89 e9             	mov    %rbp,%rcx
   10dc0:	ff 15 b2 51 03 00    	callq  *0x351b2(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
   10dc6:	eb 19                	jmp    10de1 <addr2line::ResUnit<R>::parse_functions+0x771>
   10dc8:	84 c0                	test   %al,%al
   10dca:	0f 85 2b 0b 00 00    	jne    118fb <addr2line::ResUnit<R>::parse_functions+0x128b>
   10dd0:	48 85 ed             	test   %rbp,%rbp
   10dd3:	74 0f                	je     10de4 <addr2line::ResUnit<R>::parse_functions+0x774>
   10dd5:	48 89 ef             	mov    %rbp,%rdi
   10dd8:	4c 89 e6             	mov    %r12,%rsi
   10ddb:	ff 15 a7 4d 03 00    	callq  *0x34da7(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   10de1:	49 89 c4             	mov    %rax,%r12
   10de4:	4d 85 e4             	test   %r12,%r12
   10de7:	0f 84 dc 0a 00 00    	je     118c9 <addr2line::ResUnit<R>::parse_functions+0x1259>
   10ded:	4c 89 a4 24 38 01 00 	mov    %r12,0x138(%rsp)
   10df4:	00 
   10df5:	48 89 e8             	mov    %rbp,%rax
   10df8:	48 b9 8f e3 38 8e e3 	movabs $0xe38e38e38e38e38f,%rcx
   10dff:	38 8e e3 
   10e02:	48 f7 e1             	mul    %rcx
   10e05:	48 c1 ea 06          	shr    $0x6,%rdx
   10e09:	48 89 94 24 40 01 00 	mov    %rdx,0x140(%rsp)
   10e10:	00 
   10e11:	4c 8b 7c 24 10       	mov    0x10(%rsp),%r15
   10e16:	4b 8d 04 ff          	lea    (%r15,%r15,8),%rax
   10e1a:	48 8b 8c 24 a0 00 00 	mov    0xa0(%rsp),%rcx
   10e21:	00 
   10e22:	49 89 4c c4 40       	mov    %rcx,0x40(%r12,%rax,8)
   10e27:	0f 10 44 24 60       	movups 0x60(%rsp),%xmm0
   10e2c:	0f 10 4c 24 70       	movups 0x70(%rsp),%xmm1
   10e31:	0f 10 94 24 80 00 00 	movups 0x80(%rsp),%xmm2
   10e38:	00 
   10e39:	0f 10 9c 24 90 00 00 	movups 0x90(%rsp),%xmm3
   10e40:	00 
   10e41:	41 0f 11 5c c4 30    	movups %xmm3,0x30(%r12,%rax,8)
   10e47:	41 0f 11 54 c4 20    	movups %xmm2,0x20(%r12,%rax,8)
   10e4d:	41 0f 11 4c c4 10    	movups %xmm1,0x10(%r12,%rax,8)
   10e53:	41 0f 11 04 c4       	movups %xmm0,(%r12,%rax,8)
   10e58:	49 83 c7 01          	add    $0x1,%r15
   10e5c:	4c 89 bc 24 48 01 00 	mov    %r15,0x148(%rsp)
   10e63:	00 
   10e64:	4c 89 64 24 38       	mov    %r12,0x38(%rsp)
   10e69:	e9 f6 f9 ff ff       	jmpq   10864 <addr2line::ResUnit<R>::parse_functions+0x1f4>
   10e6e:	41 bc 08 00 00 00    	mov    $0x8,%r12d
   10e74:	45 31 ff             	xor    %r15d,%r15d
   10e77:	4d 89 e6             	mov    %r12,%r14
   10e7a:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
   10e7f:	48 8b bc 24 e8 00 00 	mov    0xe8(%rsp),%rdi
   10e86:	00 
   10e87:	48 8b 84 24 f0 00 00 	mov    0xf0(%rsp),%rax
   10e8e:	00 
   10e8f:	4c 8b a4 24 f8 00 00 	mov    0xf8(%rsp),%r12
   10e96:	00 
   10e97:	4c 39 e0             	cmp    %r12,%rax
   10e9a:	76 3c                	jbe    10ed8 <addr2line::ResUnit<R>::parse_functions+0x868>
   10e9c:	48 85 ff             	test   %rdi,%rdi
   10e9f:	74 37                	je     10ed8 <addr2line::ResUnit<R>::parse_functions+0x868>
   10ea1:	48 c1 e0 03          	shl    $0x3,%rax
   10ea5:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
   10ea9:	4a 8d 04 e5 00 00 00 	lea    0x0(,%r12,8),%rax
   10eb0:	00 
   10eb1:	48 8d 2c 40          	lea    (%rax,%rax,2),%rbp
   10eb5:	48 85 ed             	test   %rbp,%rbp
   10eb8:	0f 84 b5 01 00 00    	je     11073 <addr2line::ResUnit<R>::parse_functions+0xa03>
   10ebe:	ba 08 00 00 00       	mov    $0x8,%edx
   10ec3:	48 89 e9             	mov    %rbp,%rcx
   10ec6:	ff 15 ac 50 03 00    	callq  *0x350ac(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
   10ecc:	48 89 c7             	mov    %rax,%rdi
   10ecf:	48 85 c0             	test   %rax,%rax
   10ed2:	0f 84 f1 09 00 00    	je     118c9 <addr2line::ResUnit<R>::parse_functions+0x1259>
   10ed8:	31 c0                	xor    %eax,%eax
   10eda:	e9 df 00 00 00       	jmpq   10fbe <addr2line::ResUnit<R>::parse_functions+0x94e>
   10edf:	41 be 06 00 00 00    	mov    $0x6,%r14d
   10ee5:	45 31 ff             	xor    %r15d,%r15d
   10ee8:	eb 06                	jmp    10ef0 <addr2line::ResUnit<R>::parse_functions+0x880>
   10eea:	41 be 13 00 00 00    	mov    $0x13,%r14d
   10ef0:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
   10ef5:	48 8b 84 24 f0 00 00 	mov    0xf0(%rsp),%rax
   10efc:	00 
   10efd:	48 85 c0             	test   %rax,%rax
   10f00:	74 25                	je     10f27 <addr2line::ResUnit<R>::parse_functions+0x8b7>
   10f02:	48 8b bc 24 e8 00 00 	mov    0xe8(%rsp),%rdi
   10f09:	00 
   10f0a:	48 85 ff             	test   %rdi,%rdi
   10f0d:	74 18                	je     10f27 <addr2line::ResUnit<R>::parse_functions+0x8b7>
   10f0f:	48 c1 e0 03          	shl    $0x3,%rax
   10f13:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
   10f17:	48 85 f6             	test   %rsi,%rsi
   10f1a:	74 0b                	je     10f27 <addr2line::ResUnit<R>::parse_functions+0x8b7>
   10f1c:	ba 08 00 00 00       	mov    $0x8,%edx
   10f21:	ff 15 d9 4c 03 00    	callq  *0x34cd9(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   10f27:	48 85 db             	test   %rbx,%rbx
   10f2a:	74 5e                	je     10f8a <addr2line::ResUnit<R>::parse_functions+0x91a>
   10f2c:	48 c1 e3 03          	shl    $0x3,%rbx
   10f30:	48 8d 1c db          	lea    (%rbx,%rbx,8),%rbx
   10f34:	31 ed                	xor    %ebp,%ebp
   10f36:	4c 8d 2d 13 44 ff ff 	lea    -0xbbed(%rip),%r13        # 5350 <__rust_dealloc>
   10f3d:	eb 0a                	jmp    10f49 <addr2line::ResUnit<R>::parse_functions+0x8d9>
   10f3f:	90                   	nop
   10f40:	48 83 c5 48          	add    $0x48,%rbp
   10f44:	48 39 eb             	cmp    %rbp,%rbx
   10f47:	74 41                	je     10f8a <addr2line::ResUnit<R>::parse_functions+0x91a>
   10f49:	49 83 7c 2c 08 00    	cmpq   $0x0,0x8(%r12,%rbp,1)
   10f4f:	75 ef                	jne    10f40 <addr2line::ResUnit<R>::parse_functions+0x8d0>
   10f51:	49 8b 44 2c 30       	mov    0x30(%r12,%rbp,1),%rax
   10f56:	48 c1 e0 03          	shl    $0x3,%rax
   10f5a:	48 8d 34 80          	lea    (%rax,%rax,4),%rsi
   10f5e:	48 85 f6             	test   %rsi,%rsi
   10f61:	74 0d                	je     10f70 <addr2line::ResUnit<R>::parse_functions+0x900>
   10f63:	49 8b 7c 2c 28       	mov    0x28(%r12,%rbp,1),%rdi
   10f68:	ba 08 00 00 00       	mov    $0x8,%edx
   10f6d:	41 ff d5             	callq  *%r13
   10f70:	49 8b 74 2c 40       	mov    0x40(%r12,%rbp,1),%rsi
   10f75:	48 c1 e6 05          	shl    $0x5,%rsi
   10f79:	74 c5                	je     10f40 <addr2line::ResUnit<R>::parse_functions+0x8d0>
   10f7b:	49 8b 7c 2c 38       	mov    0x38(%r12,%rbp,1),%rdi
   10f80:	ba 08 00 00 00       	mov    $0x8,%edx
   10f85:	41 ff d5             	callq  *%r13
   10f88:	eb b6                	jmp    10f40 <addr2line::ResUnit<R>::parse_functions+0x8d0>
   10f8a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   10f8f:	48 85 c0             	test   %rax,%rax
   10f92:	74 20                	je     10fb4 <addr2line::ResUnit<R>::parse_functions+0x944>
   10f94:	48 c1 e0 03          	shl    $0x3,%rax
   10f98:	48 8d 34 c0          	lea    (%rax,%rax,8),%rsi
   10f9c:	48 85 f6             	test   %rsi,%rsi
   10f9f:	74 13                	je     10fb4 <addr2line::ResUnit<R>::parse_functions+0x944>
   10fa1:	4d 85 e4             	test   %r12,%r12
   10fa4:	74 0e                	je     10fb4 <addr2line::ResUnit<R>::parse_functions+0x944>
   10fa6:	ba 08 00 00 00       	mov    $0x8,%edx
   10fab:	4c 89 e7             	mov    %r12,%rdi
   10fae:	ff 15 4c 4c 03 00    	callq  *0x34c4c(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   10fb4:	b8 01 00 00 00       	mov    $0x1,%eax
   10fb9:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
   10fbe:	48 8d ab d8 01 00 00 	lea    0x1d8(%rbx),%rbp
   10fc5:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   10fca:	4c 89 7c 24 70       	mov    %r15,0x70(%rsp)
   10fcf:	4c 89 74 24 68       	mov    %r14,0x68(%rsp)
   10fd4:	48 89 7c 24 78       	mov    %rdi,0x78(%rsp)
   10fd9:	4c 89 a4 24 80 00 00 	mov    %r12,0x80(%rsp)
   10fe0:	00 
   10fe1:	83 7d 00 02          	cmpl   $0x2,0x0(%rbp)
   10fe5:	75 32                	jne    11019 <addr2line::ResUnit<R>::parse_functions+0x9a9>
   10fe7:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   10fec:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
   10ff1:	48 8b 54 24 70       	mov    0x70(%rsp),%rdx
   10ff6:	48 8b 74 24 78       	mov    0x78(%rsp),%rsi
   10ffb:	48 89 45 00          	mov    %rax,0x0(%rbp)
   10fff:	48 89 4d 08          	mov    %rcx,0x8(%rbp)
   11003:	48 8b 84 24 80 00 00 	mov    0x80(%rsp),%rax
   1100a:	00 
   1100b:	48 89 45 20          	mov    %rax,0x20(%rbp)
   1100f:	48 89 55 10          	mov    %rdx,0x10(%rbp)
   11013:	48 89 75 18          	mov    %rsi,0x18(%rbp)
   11017:	eb 0a                	jmp    11023 <addr2line::ResUnit<R>::parse_functions+0x9b3>
   11019:	48 8d 7c 24 60       	lea    0x60(%rsp),%rdi
   1101e:	e8 4d 60 ff ff       	callq  7070 <core::ptr::drop_in_place>
   11023:	48 8b 45 00          	mov    0x0(%rbp),%rax
   11027:	48 8b bc 24 88 01 00 	mov    0x188(%rsp),%rdi
   1102e:	00 
   1102f:	48 81 c3 e0 01 00 00 	add    $0x1e0,%rbx
   11036:	48 85 c0             	test   %rax,%rax
   11039:	74 0e                	je     11049 <addr2line::ResUnit<R>::parse_functions+0x9d9>
   1103b:	0f 10 03             	movups (%rbx),%xmm0
   1103e:	0f 11 47 08          	movups %xmm0,0x8(%rdi)
   11042:	b8 01 00 00 00       	mov    $0x1,%eax
   11047:	eb 06                	jmp    1104f <addr2line::ResUnit<R>::parse_functions+0x9df>
   11049:	48 89 5f 08          	mov    %rbx,0x8(%rdi)
   1104d:	31 c0                	xor    %eax,%eax
   1104f:	48 89 07             	mov    %rax,(%rdi)
   11052:	48 81 c4 a8 01 00 00 	add    $0x1a8,%rsp
   11059:	5b                   	pop    %rbx
   1105a:	41 5c                	pop    %r12
   1105c:	41 5d                	pop    %r13
   1105e:	41 5e                	pop    %r14
   11060:	41 5f                	pop    %r15
   11062:	5d                   	pop    %rbp
   11063:	c3                   	retq   
   11064:	4c 8b 74 24 68       	mov    0x68(%rsp),%r14
   11069:	4c 8b 7c 24 70       	mov    0x70(%rsp),%r15
   1106e:	e9 7d fe ff ff       	jmpq   10ef0 <addr2line::ResUnit<R>::parse_functions+0x880>
   11073:	48 85 f6             	test   %rsi,%rsi
   11076:	74 0b                	je     11083 <addr2line::ResUnit<R>::parse_functions+0xa13>
   11078:	ba 08 00 00 00       	mov    $0x8,%edx
   1107d:	ff 15 7d 4b 03 00    	callq  *0x34b7d(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   11083:	bf 08 00 00 00       	mov    $0x8,%edi
   11088:	31 c0                	xor    %eax,%eax
   1108a:	e9 2f ff ff ff       	jmpq   10fbe <addr2line::ResUnit<R>::parse_functions+0x94e>
   1108f:	48 8b 84 24 e8 00 00 	mov    0xe8(%rsp),%rax
   11096:	00 
   11097:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1109c:	4c 8b b4 24 f8 00 00 	mov    0xf8(%rsp),%r14
   110a3:	00 
   110a4:	49 83 fe 15          	cmp    $0x15,%r14
   110a8:	0f 83 da 00 00 00    	jae    11188 <addr2line::ResUnit<R>::parse_functions+0xb18>
   110ae:	49 83 fe 02          	cmp    $0x2,%r14
   110b2:	0f 82 c4 07 00 00    	jb     1187c <addr2line::ResUnit<R>::parse_functions+0x120c>
   110b8:	49 89 d2             	mov    %rdx,%r10
   110bb:	49 8d 7e ff          	lea    -0x1(%r14),%rdi
   110bf:	4b 8d 04 76          	lea    (%r14,%r14,2),%rax
   110c3:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   110c8:	48 8d 1c c1          	lea    (%rcx,%rax,8),%rbx
   110cc:	31 d2                	xor    %edx,%edx
   110ce:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   110d3:	eb 1d                	jmp    110f2 <addr2line::ResUnit<R>::parse_functions+0xa82>
   110d5:	4c 89 06             	mov    %r8,(%rsi)
   110d8:	0f 28 44 24 60       	movaps 0x60(%rsp),%xmm0
   110dd:	0f 11 46 08          	movups %xmm0,0x8(%rsi)
   110e1:	48 83 c3 e8          	add    $0xffffffffffffffe8,%rbx
   110e5:	48 83 c2 01          	add    $0x1,%rdx
   110e9:	48 85 ff             	test   %rdi,%rdi
   110ec:	0f 84 d4 00 00 00    	je     111c6 <addr2line::ResUnit<R>::parse_functions+0xb56>
   110f2:	48 89 f9             	mov    %rdi,%rcx
   110f5:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   110f9:	4c 89 f5             	mov    %r14,%rbp
   110fc:	48 29 fd             	sub    %rdi,%rbp
   110ff:	0f 82 4f 08 00 00    	jb     11954 <addr2line::ResUnit<R>::parse_functions+0x12e4>
   11105:	48 83 fd 02          	cmp    $0x2,%rbp
   11109:	72 d6                	jb     110e1 <addr2line::ResUnit<R>::parse_functions+0xa71>
   1110b:	48 8d 04 7f          	lea    (%rdi,%rdi,2),%rax
   1110f:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   11114:	4c 8d 0c c6          	lea    (%rsi,%rax,8),%r9
   11118:	48 8d 0c 49          	lea    (%rcx,%rcx,2),%rcx
   1111c:	4d 8b 01             	mov    (%r9),%r8
   1111f:	4c 39 04 ce          	cmp    %r8,(%rsi,%rcx,8)
   11123:	73 bc                	jae    110e1 <addr2line::ResUnit<R>::parse_functions+0xa71>
   11125:	49 8d 34 cb          	lea    (%r11,%rcx,8),%rsi
   11129:	41 0f 10 44 c3 08    	movups 0x8(%r11,%rax,8),%xmm0
   1112f:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
   11134:	48 8b 46 10          	mov    0x10(%rsi),%rax
   11138:	49 89 41 10          	mov    %rax,0x10(%r9)
   1113c:	0f 10 06             	movups (%rsi),%xmm0
   1113f:	41 0f 11 01          	movups %xmm0,(%r9)
   11143:	48 83 fd 03          	cmp    $0x3,%rbp
   11147:	72 8c                	jb     110d5 <addr2line::ResUnit<R>::parse_functions+0xa65>
   11149:	48 89 d1             	mov    %rdx,%rcx
   1114c:	48 89 d8             	mov    %rbx,%rax
   1114f:	4d 39 41 30          	cmp    %r8,0x30(%r9)
   11153:	73 80                	jae    110d5 <addr2line::ResUnit<R>::parse_functions+0xa65>
   11155:	48 89 c6             	mov    %rax,%rsi
   11158:	48 8b 40 10          	mov    0x10(%rax),%rax
   1115c:	48 89 46 f8          	mov    %rax,-0x8(%rsi)
   11160:	0f 10 06             	movups (%rsi),%xmm0
   11163:	0f 11 46 e8          	movups %xmm0,-0x18(%rsi)
   11167:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
   1116b:	0f 84 64 ff ff ff    	je     110d5 <addr2line::ResUnit<R>::parse_functions+0xa65>
   11171:	48 8d 46 18          	lea    0x18(%rsi),%rax
   11175:	4c 39 46 18          	cmp    %r8,0x18(%rsi)
   11179:	72 da                	jb     11155 <addr2line::ResUnit<R>::parse_functions+0xae5>
   1117b:	e9 55 ff ff ff       	jmpq   110d5 <addr2line::ResUnit<R>::parse_functions+0xa65>
   11180:	49 89 cf             	mov    %rcx,%r15
   11183:	e9 68 fd ff ff       	jmpq   10ef0 <addr2line::ResUnit<R>::parse_functions+0x880>
   11188:	4c 89 f0             	mov    %r14,%rax
   1118b:	48 d1 e8             	shr    %rax
   1118e:	b9 18 00 00 00       	mov    $0x18,%ecx
   11193:	31 ed                	xor    %ebp,%ebp
   11195:	48 f7 e1             	mul    %rcx
   11198:	48 89 c7             	mov    %rax,%rdi
   1119b:	0f 91 c0             	setno  %al
   1119e:	0f 80 1e 08 00 00    	jo     119c2 <addr2line::ResUnit<R>::parse_functions+0x1352>
   111a4:	40 88 c5             	mov    %al,%bpl
   111a7:	48 c1 e5 03          	shl    $0x3,%rbp
   111ab:	48 85 ff             	test   %rdi,%rdi
   111ae:	48 89 bc 24 b8 00 00 	mov    %rdi,0xb8(%rsp)
   111b5:	00 
   111b6:	74 16                	je     111ce <addr2line::ResUnit<R>::parse_functions+0xb5e>
   111b8:	48 89 ee             	mov    %rbp,%rsi
   111bb:	ff 15 c7 49 03 00    	callq  *0x349c7(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   111c1:	49 89 c4             	mov    %rax,%r12
   111c4:	eb 0b                	jmp    111d1 <addr2line::ResUnit<R>::parse_functions+0xb61>
   111c6:	4c 89 d2             	mov    %r10,%rdx
   111c9:	e9 ae 06 00 00       	jmpq   1187c <addr2line::ResUnit<R>::parse_functions+0x120c>
   111ce:	49 89 ec             	mov    %rbp,%r12
   111d1:	4d 85 e4             	test   %r12,%r12
   111d4:	0f 84 f0 07 00 00    	je     119ca <addr2line::ResUnit<R>::parse_functions+0x135a>
   111da:	48 b9 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rcx
   111e1:	aa aa aa 
   111e4:	48 8b 84 24 b8 00 00 	mov    0xb8(%rsp),%rax
   111eb:	00 
   111ec:	48 f7 e1             	mul    %rcx
   111ef:	48 c1 ea 04          	shr    $0x4,%rdx
   111f3:	4c 89 a4 24 50 01 00 	mov    %r12,0x150(%rsp)
   111fa:	00 
   111fb:	48 89 94 24 68 01 00 	mov    %rdx,0x168(%rsp)
   11202:	00 
   11203:	48 89 94 24 58 01 00 	mov    %rdx,0x158(%rsp)
   1120a:	00 
   1120b:	48 c7 84 24 60 01 00 	movq   $0x0,0x160(%rsp)
   11212:	00 00 00 00 00 
   11217:	48 c7 44 24 40 08 00 	movq   $0x8,0x40(%rsp)
   1121e:	00 00 
   11220:	0f 57 c0             	xorps  %xmm0,%xmm0
   11223:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
   11228:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1122d:	48 8d 48 b8          	lea    -0x48(%rax),%rcx
   11231:	48 89 8c 24 80 01 00 	mov    %rcx,0x180(%rsp)
   11238:	00 
   11239:	48 8d 48 e8          	lea    -0x18(%rax),%rcx
   1123d:	48 89 8c 24 28 01 00 	mov    %rcx,0x128(%rsp)
   11244:	00 
   11245:	48 8d 48 d0          	lea    -0x30(%rax),%rcx
   11249:	48 89 8c 24 78 01 00 	mov    %rcx,0x178(%rsp)
   11250:	00 
   11251:	48 8d 40 18          	lea    0x18(%rax),%rax
   11255:	48 89 84 24 70 01 00 	mov    %rax,0x170(%rsp)
   1125c:	00 
   1125d:	4d 89 f7             	mov    %r14,%r15
   11260:	4c 89 b4 24 30 01 00 	mov    %r14,0x130(%rsp)
   11267:	00 
   11268:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   1126d:	eb 09                	jmp    11278 <addr2line::ResUnit<R>::parse_functions+0xc08>
   1126f:	4d 85 ff             	test   %r15,%r15
   11272:	0f 84 99 05 00 00    	je     11811 <addr2line::ResUnit<R>::parse_functions+0x11a1>
   11278:	4d 89 f9             	mov    %r15,%r9
   1127b:	49 83 c1 ff          	add    $0xffffffffffffffff,%r9
   1127f:	0f 84 d9 00 00 00    	je     1135e <addr2line::ResUnit<R>::parse_functions+0xcee>
   11285:	4c 89 fe             	mov    %r15,%rsi
   11288:	49 83 c7 fe          	add    $0xfffffffffffffffe,%r15
   1128c:	4b 8d 04 49          	lea    (%r9,%r9,2),%rax
   11290:	4b 8d 0c 7f          	lea    (%r15,%r15,2),%rcx
   11294:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   11299:	48 8b 1c ca          	mov    (%rdx,%rcx,8),%rbx
   1129d:	48 39 1c c2          	cmp    %rbx,(%rdx,%rax,8)
   112a1:	0f 83 c4 00 00 00    	jae    1136b <addr2line::ResUnit<R>::parse_functions+0xcfb>
   112a7:	4c 8d 04 76          	lea    (%rsi,%rsi,2),%r8
   112ab:	48 8b 84 24 78 01 00 	mov    0x178(%rsp),%rax
   112b2:	00 
   112b3:	4e 8d 14 c0          	lea    (%rax,%r8,8),%r10
   112b7:	b8 02 00 00 00       	mov    $0x2,%eax
   112bc:	4c 89 ff             	mov    %r15,%rdi
   112bf:	48 89 c1             	mov    %rax,%rcx
   112c2:	4c 89 d5             	mov    %r10,%rbp
   112c5:	4d 85 ff             	test   %r15,%r15
   112c8:	74 21                	je     112eb <addr2line::ResUnit<R>::parse_functions+0xc7b>
   112ca:	4c 8d 7f ff          	lea    -0x1(%rdi),%r15
   112ce:	4b 8d 04 7f          	lea    (%r15,%r15,2),%rax
   112d2:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   112d7:	4c 8b 1c c2          	mov    (%rdx,%rax,8),%r11
   112db:	48 8d 41 01          	lea    0x1(%rcx),%rax
   112df:	4c 8d 55 e8          	lea    -0x18(%rbp),%r10
   112e3:	4c 39 db             	cmp    %r11,%rbx
   112e6:	4c 89 db             	mov    %r11,%rbx
   112e9:	72 d1                	jb     112bc <addr2line::ResUnit<R>::parse_functions+0xc4c>
   112eb:	48 89 f2             	mov    %rsi,%rdx
   112ee:	48 29 fa             	sub    %rdi,%rdx
   112f1:	0f 82 6f 06 00 00    	jb     11966 <addr2line::ResUnit<R>::parse_functions+0x12f6>
   112f7:	4c 39 f6             	cmp    %r14,%rsi
   112fa:	0f 87 75 06 00 00    	ja     11975 <addr2line::ResUnit<R>::parse_functions+0x1305>
   11300:	48 f7 c2 fe ff ff ff 	test   $0xfffffffffffffffe,%rdx
   11307:	0f 84 9a 00 00 00    	je     113a7 <addr2line::ResUnit<R>::parse_functions+0xd37>
   1130d:	48 d1 e9             	shr    %rcx
   11310:	48 8b 84 24 28 01 00 	mov    0x128(%rsp),%rax
   11317:	00 
   11318:	4a 8d 1c c0          	lea    (%rax,%r8,8),%rbx
   1131c:	48 8b 45 10          	mov    0x10(%rbp),%rax
   11320:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   11325:	0f 10 45 00          	movups 0x0(%rbp),%xmm0
   11329:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
   1132e:	48 8b 43 10          	mov    0x10(%rbx),%rax
   11332:	0f 10 03             	movups (%rbx),%xmm0
   11335:	0f 11 45 00          	movups %xmm0,0x0(%rbp)
   11339:	48 89 45 10          	mov    %rax,0x10(%rbp)
   1133d:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   11342:	48 89 43 10          	mov    %rax,0x10(%rbx)
   11346:	0f 28 44 24 60       	movaps 0x60(%rsp),%xmm0
   1134b:	0f 11 03             	movups %xmm0,(%rbx)
   1134e:	48 83 c3 e8          	add    $0xffffffffffffffe8,%rbx
   11352:	48 83 c5 18          	add    $0x18,%rbp
   11356:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
   1135a:	75 c0                	jne    1131c <addr2line::ResUnit<R>::parse_functions+0xcac>
   1135c:	eb 49                	jmp    113a7 <addr2line::ResUnit<R>::parse_functions+0xd37>
   1135e:	ba 01 00 00 00       	mov    $0x1,%edx
   11363:	45 31 ff             	xor    %r15d,%r15d
   11366:	e9 25 01 00 00       	jmpq   11490 <addr2line::ResUnit<R>::parse_functions+0xe20>
   1136b:	48 8d 04 76          	lea    (%rsi,%rsi,2),%rax
   1136f:	48 8b 8c 24 80 01 00 	mov    0x180(%rsp),%rcx
   11376:	00 
   11377:	48 8d 0c c1          	lea    (%rcx,%rax,8),%rcx
   1137b:	48 8d 7e fe          	lea    -0x2(%rsi),%rdi
   1137f:	31 d2                	xor    %edx,%edx
   11381:	48 39 d7             	cmp    %rdx,%rdi
   11384:	0f 84 00 01 00 00    	je     1148a <addr2line::ResUnit<R>::parse_functions+0xe1a>
   1138a:	48 8b 01             	mov    (%rcx),%rax
   1138d:	48 83 c2 01          	add    $0x1,%rdx
   11391:	48 83 c1 e8          	add    $0xffffffffffffffe8,%rcx
   11395:	48 39 c3             	cmp    %rax,%rbx
   11398:	48 89 c3             	mov    %rax,%rbx
   1139b:	73 e4                	jae    11381 <addr2line::ResUnit<R>::parse_functions+0xd11>
   1139d:	4c 89 cf             	mov    %r9,%rdi
   113a0:	48 29 d7             	sub    %rdx,%rdi
   113a3:	48 83 c2 01          	add    $0x1,%rdx
   113a7:	48 83 fa 09          	cmp    $0x9,%rdx
   113ab:	0f 87 d4 00 00 00    	ja     11485 <addr2line::ResUnit<R>::parse_functions+0xe15>
   113b1:	48 85 ff             	test   %rdi,%rdi
   113b4:	0f 84 cb 00 00 00    	je     11485 <addr2line::ResUnit<R>::parse_functions+0xe15>
   113ba:	4c 39 f6             	cmp    %r14,%rsi
   113bd:	0f 87 c7 05 00 00    	ja     1198a <addr2line::ResUnit<R>::parse_functions+0x131a>
   113c3:	48 8d 04 7f          	lea    (%rdi,%rdi,2),%rax
   113c7:	48 8b 8c 24 70 01 00 	mov    0x170(%rsp),%rcx
   113ce:	00 
   113cf:	48 8d 04 c1          	lea    (%rcx,%rax,8),%rax
   113d3:	4c 8d 7f ff          	lea    -0x1(%rdi),%r15
   113d7:	48 89 f2             	mov    %rsi,%rdx
   113da:	4c 29 fa             	sub    %r15,%rdx
   113dd:	0f 82 b3 05 00 00    	jb     11996 <addr2line::ResUnit<R>::parse_functions+0x1326>
   113e3:	48 83 fa 02          	cmp    $0x2,%rdx
   113e7:	0f 82 80 00 00 00    	jb     1146d <addr2line::ResUnit<R>::parse_functions+0xdfd>
   113ed:	4b 8d 0c 7f          	lea    (%r15,%r15,2),%rcx
   113f1:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   113f6:	4c 8d 14 cb          	lea    (%rbx,%rcx,8),%r10
   113fa:	48 8d 2c 7f          	lea    (%rdi,%rdi,2),%rbp
   113fe:	4d 8b 02             	mov    (%r10),%r8
   11401:	4c 39 04 eb          	cmp    %r8,(%rbx,%rbp,8)
   11405:	73 66                	jae    1146d <addr2line::ResUnit<R>::parse_functions+0xdfd>
   11407:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   1140c:	49 8d 1c eb          	lea    (%r11,%rbp,8),%rbx
   11410:	41 0f 10 44 cb 08    	movups 0x8(%r11,%rcx,8),%xmm0
   11416:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
   1141b:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
   1141f:	49 89 4a 10          	mov    %rcx,0x10(%r10)
   11423:	0f 10 03             	movups (%rbx),%xmm0
   11426:	41 0f 11 02          	movups %xmm0,(%r10)
   1142a:	48 83 fa 03          	cmp    $0x3,%rdx
   1142e:	72 31                	jb     11461 <addr2line::ResUnit<R>::parse_functions+0xdf1>
   11430:	4c 89 cd             	mov    %r9,%rbp
   11433:	48 89 c1             	mov    %rax,%rcx
   11436:	4d 39 42 30          	cmp    %r8,0x30(%r10)
   1143a:	73 25                	jae    11461 <addr2line::ResUnit<R>::parse_functions+0xdf1>
   1143c:	48 89 cb             	mov    %rcx,%rbx
   1143f:	48 8b 49 10          	mov    0x10(%rcx),%rcx
   11443:	48 89 4b f8          	mov    %rcx,-0x8(%rbx)
   11447:	0f 10 03             	movups (%rbx),%xmm0
   1144a:	0f 11 43 e8          	movups %xmm0,-0x18(%rbx)
   1144e:	48 83 c5 ff          	add    $0xffffffffffffffff,%rbp
   11452:	48 39 ef             	cmp    %rbp,%rdi
   11455:	74 0a                	je     11461 <addr2line::ResUnit<R>::parse_functions+0xdf1>
   11457:	48 8d 4b 18          	lea    0x18(%rbx),%rcx
   1145b:	4c 39 43 18          	cmp    %r8,0x18(%rbx)
   1145f:	72 db                	jb     1143c <addr2line::ResUnit<R>::parse_functions+0xdcc>
   11461:	4c 89 03             	mov    %r8,(%rbx)
   11464:	0f 28 44 24 60       	movaps 0x60(%rsp),%xmm0
   11469:	0f 11 43 08          	movups %xmm0,0x8(%rbx)
   1146d:	4d 85 ff             	test   %r15,%r15
   11470:	74 1e                	je     11490 <addr2line::ResUnit<R>::parse_functions+0xe20>
   11472:	48 83 c0 e8          	add    $0xffffffffffffffe8,%rax
   11476:	4c 89 ff             	mov    %r15,%rdi
   11479:	48 83 fa 0a          	cmp    $0xa,%rdx
   1147d:	0f 82 50 ff ff ff    	jb     113d3 <addr2line::ResUnit<R>::parse_functions+0xd63>
   11483:	eb 0b                	jmp    11490 <addr2line::ResUnit<R>::parse_functions+0xe20>
   11485:	49 89 ff             	mov    %rdi,%r15
   11488:	eb 06                	jmp    11490 <addr2line::ResUnit<R>::parse_functions+0xe20>
   1148a:	45 31 ff             	xor    %r15d,%r15d
   1148d:	48 89 f2             	mov    %rsi,%rdx
   11490:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   11495:	4c 89 fe             	mov    %r15,%rsi
   11498:	e8 33 7f ff ff       	callq  93d0 <alloc::vec::Vec<T>::push>
   1149d:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   114a2:	48 83 f8 02          	cmp    $0x2,%rax
   114a6:	0f 82 c3 fd ff ff    	jb     1126f <addr2line::ResUnit<R>::parse_functions+0xbff>
   114ac:	4c 8b 6c 24 40       	mov    0x40(%rsp),%r13
   114b1:	4c 89 bc 24 c8 00 00 	mov    %r15,0xc8(%rsp)
   114b8:	00 
   114b9:	4c 89 ac 24 c0 00 00 	mov    %r13,0xc0(%rsp)
   114c0:	00 
   114c1:	e9 b2 00 00 00       	jmpq   11578 <addr2line::ResUnit<R>::parse_functions+0xf08>
   114c6:	4c 89 ff             	mov    %r15,%rdi
   114c9:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
   114ce:	4c 89 e6             	mov    %r12,%rsi
   114d1:	49 29 f6             	sub    %rsi,%r14
   114d4:	4c 89 f0             	mov    %r14,%rax
   114d7:	48 b9 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rcx
   114de:	aa aa aa 
   114e1:	48 f7 e1             	mul    %rcx
   114e4:	48 d1 ea             	shr    %rdx
   114e7:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
   114eb:	48 8d 14 52          	lea    (%rdx,%rdx,2),%rdx
   114ef:	ff 15 0b 48 03 00    	callq  *0x3480b(%rip)        # 45d00 <memcpy@GLIBC_2.14>
   114f5:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   114fa:	48 03 4c 24 10       	add    0x10(%rsp),%rcx
   114ff:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   11504:	48 8b 94 24 a8 00 00 	mov    0xa8(%rsp),%rdx
   1150b:	00 
   1150c:	48 89 02             	mov    %rax,(%rdx)
   1150f:	48 8b 84 24 d0 00 00 	mov    0xd0(%rsp),%rax
   11516:	00 
   11517:	48 89 08             	mov    %rcx,(%rax)
   1151a:	4c 8b ac 24 c0 00 00 	mov    0xc0(%rsp),%r13
   11521:	00 
   11522:	48 8b 84 24 d8 00 00 	mov    0xd8(%rsp),%rax
   11529:	00 
   1152a:	49 8d 7c 05 00       	lea    0x0(%r13,%rax,1),%rdi
   1152f:	4a 8d 34 28          	lea    (%rax,%r13,1),%rsi
   11533:	48 83 c6 10          	add    $0x10,%rsi
   11537:	48 8b 94 24 e0 00 00 	mov    0xe0(%rsp),%rdx
   1153e:	00 
   1153f:	48 f7 d2             	not    %rdx
   11542:	48 03 54 24 38       	add    0x38(%rsp),%rdx
   11547:	48 c1 e2 04          	shl    $0x4,%rdx
   1154b:	ff 15 1f 49 03 00    	callq  *0x3491f(%rip)        # 45e70 <memmove@GLIBC_2.2.5>
   11551:	48 8b 84 24 b0 00 00 	mov    0xb0(%rsp),%rax
   11558:	00 
   11559:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   1155e:	48 83 f8 01          	cmp    $0x1,%rax
   11562:	4c 8b b4 24 30 01 00 	mov    0x130(%rsp),%r14
   11569:	00 
   1156a:	4c 8b bc 24 c8 00 00 	mov    0xc8(%rsp),%r15
   11571:	00 
   11572:	0f 86 f7 fc ff ff    	jbe    1126f <addr2line::ResUnit<R>::parse_functions+0xbff>
   11578:	48 89 c6             	mov    %rax,%rsi
   1157b:	4c 8d 40 ff          	lea    -0x1(%rax),%r8
   1157f:	4c 89 c5             	mov    %r8,%rbp
   11582:	48 c1 e5 04          	shl    $0x4,%rbp
   11586:	49 83 7c 2d 00 00    	cmpq   $0x0,0x0(%r13,%rbp,1)
   1158c:	74 52                	je     115e0 <addr2line::ResUnit<R>::parse_functions+0xf70>
   1158e:	48 89 f2             	mov    %rsi,%rdx
   11591:	48 c1 e2 04          	shl    $0x4,%rdx
   11595:	4a 8b 44 2a e8       	mov    -0x18(%rdx,%r13,1),%rax
   1159a:	4d 8b 4c 2d 08       	mov    0x8(%r13,%rbp,1),%r9
   1159f:	4c 39 c8             	cmp    %r9,%rax
   115a2:	76 3c                	jbe    115e0 <addr2line::ResUnit<R>::parse_functions+0xf70>
   115a4:	48 83 fe 02          	cmp    $0x2,%rsi
   115a8:	0f 86 c1 fc ff ff    	jbe    1126f <addr2line::ResUnit<R>::parse_functions+0xbff>
   115ae:	48 8d 7e fd          	lea    -0x3(%rsi),%rdi
   115b2:	48 89 f9             	mov    %rdi,%rcx
   115b5:	48 c1 e1 04          	shl    $0x4,%rcx
   115b9:	49 8b 4c 0d 08       	mov    0x8(%r13,%rcx,1),%rcx
   115be:	49 8d 2c 01          	lea    (%r9,%rax,1),%rbp
   115c2:	48 39 e9             	cmp    %rbp,%rcx
   115c5:	76 34                	jbe    115fb <addr2line::ResUnit<R>::parse_functions+0xf8b>
   115c7:	48 83 fe 03          	cmp    $0x3,%rsi
   115cb:	0f 86 9e fc ff ff    	jbe    1126f <addr2line::ResUnit<R>::parse_functions+0xbff>
   115d1:	48 01 c8             	add    %rcx,%rax
   115d4:	4a 39 44 2a c8       	cmp    %rax,-0x38(%rdx,%r13,1)
   115d9:	76 20                	jbe    115fb <addr2line::ResUnit<R>::parse_functions+0xf8b>
   115db:	e9 8f fc ff ff       	jmpq   1126f <addr2line::ResUnit<R>::parse_functions+0xbff>
   115e0:	48 83 fe 03          	cmp    $0x3,%rsi
   115e4:	72 1a                	jb     11600 <addr2line::ResUnit<R>::parse_functions+0xf90>
   115e6:	48 8d 7e fd          	lea    -0x3(%rsi),%rdi
   115ea:	48 89 f8             	mov    %rdi,%rax
   115ed:	48 c1 e0 04          	shl    $0x4,%rax
   115f1:	49 8b 4c 05 08       	mov    0x8(%r13,%rax,1),%rcx
   115f6:	4d 8b 4c 2d 08       	mov    0x8(%r13,%rbp,1),%r9
   115fb:	4c 39 c9             	cmp    %r9,%rcx
   115fe:	72 04                	jb     11604 <addr2line::ResUnit<R>::parse_functions+0xf94>
   11600:	48 8d 7e fe          	lea    -0x2(%rsi),%rdi
   11604:	48 8d 47 01          	lea    0x1(%rdi),%rax
   11608:	48 39 c6             	cmp    %rax,%rsi
   1160b:	0f 86 f5 02 00 00    	jbe    11906 <addr2line::ResUnit<R>::parse_functions+0x1296>
   11611:	48 39 fe             	cmp    %rdi,%rsi
   11614:	0f 86 01 03 00 00    	jbe    1191b <addr2line::ResUnit<R>::parse_functions+0x12ab>
   1161a:	48 89 c1             	mov    %rax,%rcx
   1161d:	48 c1 e1 04          	shl    $0x4,%rcx
   11621:	49 8b 5c 0d 00       	mov    0x0(%r13,%rcx,1),%rbx
   11626:	48 c1 e7 04          	shl    $0x4,%rdi
   1162a:	49 8b 54 3d 08       	mov    0x8(%r13,%rdi,1),%rdx
   1162f:	49 8b 6c 3d 00       	mov    0x0(%r13,%rdi,1),%rbp
   11634:	48 01 d5             	add    %rdx,%rbp
   11637:	49 89 ec             	mov    %rbp,%r12
   1163a:	49 29 dc             	sub    %rbx,%r12
   1163d:	0f 82 e7 02 00 00    	jb     1192a <addr2line::ResUnit<R>::parse_functions+0x12ba>
   11643:	4c 39 f5             	cmp    %r14,%rbp
   11646:	0f 87 f3 02 00 00    	ja     1193f <addr2line::ResUnit<R>::parse_functions+0x12cf>
   1164c:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
   11651:	48 89 84 24 e0 00 00 	mov    %rax,0xe0(%rsp)
   11658:	00 
   11659:	48 89 74 24 38       	mov    %rsi,0x38(%rsp)
   1165e:	4c 89 84 24 b0 00 00 	mov    %r8,0xb0(%rsp)
   11665:	00 
   11666:	48 89 8c 24 d8 00 00 	mov    %rcx,0xd8(%rsp)
   1166d:	00 
   1166e:	49 8b 54 0d 08       	mov    0x8(%r13,%rcx,1),%rdx
   11673:	49 8d 44 3d 00       	lea    0x0(%r13,%rdi,1),%rax
   11678:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
   1167f:	00 
   11680:	49 8d 44 3d 08       	lea    0x8(%r13,%rdi,1),%rax
   11685:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
   1168c:	00 
   1168d:	48 89 5c 24 30       	mov    %rbx,0x30(%rsp)
   11692:	48 8d 04 5b          	lea    (%rbx,%rbx,2),%rax
   11696:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1169b:	4c 8d 3c c1          	lea    (%rcx,%rax,8),%r15
   1169f:	48 8d 04 52          	lea    (%rdx,%rdx,2),%rax
   116a3:	4d 8d 2c c7          	lea    (%r15,%rax,8),%r13
   116a7:	48 8d 6c 6d 00       	lea    0x0(%rbp,%rbp,2),%rbp
   116ac:	4c 89 e3             	mov    %r12,%rbx
   116af:	48 29 d3             	sub    %rdx,%rbx
   116b2:	48 39 d3             	cmp    %rdx,%rbx
   116b5:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   116ba:	0f 83 9f 00 00 00    	jae    1175f <addr2line::ResUnit<R>::parse_functions+0x10ef>
   116c0:	48 8d 04 dd 00 00 00 	lea    0x0(,%rbx,8),%rax
   116c7:	00 
   116c8:	4c 8d 34 40          	lea    (%rax,%rax,2),%r14
   116cc:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
   116d1:	4c 89 e7             	mov    %r12,%rdi
   116d4:	4c 89 ee             	mov    %r13,%rsi
   116d7:	4c 89 f2             	mov    %r14,%rdx
   116da:	ff 15 20 46 03 00    	callq  *0x34620(%rip)        # 45d00 <memcpy@GLIBC_2.14>
   116e0:	4d 01 e6             	add    %r12,%r14
   116e3:	48 83 7c 24 10 00    	cmpq   $0x0,0x10(%rsp)
   116e9:	0f 8e 1a 01 00 00    	jle    11809 <addr2line::ResUnit<R>::parse_functions+0x1199>
   116ef:	48 85 db             	test   %rbx,%rbx
   116f2:	0f 8e 11 01 00 00    	jle    11809 <addr2line::ResUnit<R>::parse_functions+0x1199>
   116f8:	48 8b 84 24 28 01 00 	mov    0x128(%rsp),%rax
   116ff:	00 
   11700:	48 8d 04 e8          	lea    (%rax,%rbp,8),%rax
   11704:	4c 89 ef             	mov    %r13,%rdi
   11707:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1170e:	00 00 
   11710:	49 8b 4e e8          	mov    -0x18(%r14),%rcx
   11714:	48 3b 4f e8          	cmp    -0x18(%rdi),%rcx
   11718:	73 16                	jae    11730 <addr2line::ResUnit<R>::parse_functions+0x10c0>
   1171a:	48 83 c7 e8          	add    $0xffffffffffffffe8,%rdi
   1171e:	48 89 f9             	mov    %rdi,%rcx
   11721:	e9 11 00 00 00       	jmpq   11737 <addr2line::ResUnit<R>::parse_functions+0x10c7>
   11726:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1172d:	00 00 00 
   11730:	49 83 c6 e8          	add    $0xffffffffffffffe8,%r14
   11734:	4c 89 f1             	mov    %r14,%rcx
   11737:	48 8b 51 10          	mov    0x10(%rcx),%rdx
   1173b:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1173f:	0f 10 01             	movups (%rcx),%xmm0
   11742:	0f 11 00             	movups %xmm0,(%rax)
   11745:	4d 39 e6             	cmp    %r12,%r14
   11748:	0f 86 80 fd ff ff    	jbe    114ce <addr2line::ResUnit<R>::parse_functions+0xe5e>
   1174e:	48 83 c0 e8          	add    $0xffffffffffffffe8,%rax
   11752:	4c 89 e6             	mov    %r12,%rsi
   11755:	49 39 ff             	cmp    %rdi,%r15
   11758:	72 b6                	jb     11710 <addr2line::ResUnit<R>::parse_functions+0x10a0>
   1175a:	e9 72 fd ff ff       	jmpq   114d1 <addr2line::ResUnit<R>::parse_functions+0xe61>
   1175f:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
   11766:	00 
   11767:	4c 8d 34 40          	lea    (%rax,%rax,2),%r14
   1176b:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   11770:	48 89 df             	mov    %rbx,%rdi
   11773:	4c 89 fe             	mov    %r15,%rsi
   11776:	4c 89 f2             	mov    %r14,%rdx
   11779:	ff 15 81 45 03 00    	callq  *0x34581(%rip)        # 45d00 <memcpy@GLIBC_2.14>
   1177f:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   11784:	49 01 de             	add    %rbx,%r14
   11787:	48 85 c0             	test   %rax,%rax
   1178a:	0f 8e 36 fd ff ff    	jle    114c6 <addr2line::ResUnit<R>::parse_functions+0xe56>
   11790:	49 39 c4             	cmp    %rax,%r12
   11793:	0f 8e 2d fd ff ff    	jle    114c6 <addr2line::ResUnit<R>::parse_functions+0xe56>
   11799:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1179e:	48 8d 04 e8          	lea    (%rax,%rbp,8),%rax
   117a2:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
   117a7:	4c 89 e6             	mov    %r12,%rsi
   117aa:	4c 89 e1             	mov    %r12,%rcx
   117ad:	0f 1f 00             	nopl   (%rax)
   117b0:	49 8b 55 00          	mov    0x0(%r13),%rdx
   117b4:	48 3b 11             	cmp    (%rcx),%rdx
   117b7:	73 17                	jae    117d0 <addr2line::ResUnit<R>::parse_functions+0x1160>
   117b9:	49 8d 55 18          	lea    0x18(%r13),%rdx
   117bd:	48 89 cb             	mov    %rcx,%rbx
   117c0:	4c 89 e9             	mov    %r13,%rcx
   117c3:	e9 12 00 00 00       	jmpq   117da <addr2line::ResUnit<R>::parse_functions+0x116a>
   117c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   117cf:	00 
   117d0:	48 8d 71 18          	lea    0x18(%rcx),%rsi
   117d4:	48 89 f3             	mov    %rsi,%rbx
   117d7:	4c 89 ea             	mov    %r13,%rdx
   117da:	49 8d 7f 18          	lea    0x18(%r15),%rdi
   117de:	48 8b 69 10          	mov    0x10(%rcx),%rbp
   117e2:	49 89 6f 10          	mov    %rbp,0x10(%r15)
   117e6:	0f 10 01             	movups (%rcx),%xmm0
   117e9:	41 0f 11 07          	movups %xmm0,(%r15)
   117ed:	4c 39 f3             	cmp    %r14,%rbx
   117f0:	0f 83 db fc ff ff    	jae    114d1 <addr2line::ResUnit<R>::parse_functions+0xe61>
   117f6:	48 89 d9             	mov    %rbx,%rcx
   117f9:	49 89 ff             	mov    %rdi,%r15
   117fc:	49 89 d5             	mov    %rdx,%r13
   117ff:	48 39 c2             	cmp    %rax,%rdx
   11802:	72 ac                	jb     117b0 <addr2line::ResUnit<R>::parse_functions+0x1140>
   11804:	e9 c8 fc ff ff       	jmpq   114d1 <addr2line::ResUnit<R>::parse_functions+0xe61>
   11809:	4c 89 ef             	mov    %r13,%rdi
   1180c:	e9 bd fc ff ff       	jmpq   114ce <addr2line::ResUnit<R>::parse_functions+0xe5e>
   11811:	48 8b 74 24 48       	mov    0x48(%rsp),%rsi
   11816:	48 85 f6             	test   %rsi,%rsi
   11819:	74 1b                	je     11836 <addr2line::ResUnit<R>::parse_functions+0x11c6>
   1181b:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   11820:	48 85 ff             	test   %rdi,%rdi
   11823:	74 11                	je     11836 <addr2line::ResUnit<R>::parse_functions+0x11c6>
   11825:	48 c1 e6 04          	shl    $0x4,%rsi
   11829:	74 0b                	je     11836 <addr2line::ResUnit<R>::parse_functions+0x11c6>
   1182b:	ba 08 00 00 00       	mov    $0x8,%edx
   11830:	ff 15 ca 43 03 00    	callq  *0x343ca(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   11836:	48 83 bc 24 b8 00 00 	cmpq   $0x18,0xb8(%rsp)
   1183d:	00 18 
   1183f:	72 23                	jb     11864 <addr2line::ResUnit<R>::parse_functions+0x11f4>
   11841:	48 8b 84 24 68 01 00 	mov    0x168(%rsp),%rax
   11848:	00 
   11849:	48 c1 e0 03          	shl    $0x3,%rax
   1184d:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
   11851:	48 85 f6             	test   %rsi,%rsi
   11854:	74 0e                	je     11864 <addr2line::ResUnit<R>::parse_functions+0x11f4>
   11856:	ba 08 00 00 00       	mov    $0x8,%edx
   1185b:	4c 89 e7             	mov    %r12,%rdi
   1185e:	ff 15 9c 43 03 00    	callq  *0x3439c(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   11864:	4c 8b a4 24 38 01 00 	mov    0x138(%rsp),%r12
   1186b:	00 
   1186c:	48 8b 94 24 40 01 00 	mov    0x140(%rsp),%rdx
   11873:	00 
   11874:	4c 8b bc 24 48 01 00 	mov    0x148(%rsp),%r15
   1187b:	00 
   1187c:	4c 39 fa             	cmp    %r15,%rdx
   1187f:	0f 86 f2 f5 ff ff    	jbe    10e77 <addr2line::ResUnit<R>::parse_functions+0x807>
   11885:	4d 85 e4             	test   %r12,%r12
   11888:	0f 84 e9 f5 ff ff    	je     10e77 <addr2line::ResUnit<R>::parse_functions+0x807>
   1188e:	48 c1 e2 03          	shl    $0x3,%rdx
   11892:	48 8d 34 d2          	lea    (%rdx,%rdx,8),%rsi
   11896:	4a 8d 04 fd 00 00 00 	lea    0x0(,%r15,8),%rax
   1189d:	00 
   1189e:	48 8d 2c c0          	lea    (%rax,%rax,8),%rbp
   118a2:	48 85 ed             	test   %rbp,%rbp
   118a5:	74 32                	je     118d9 <addr2line::ResUnit<R>::parse_functions+0x1269>
   118a7:	ba 08 00 00 00       	mov    $0x8,%edx
   118ac:	4c 89 e7             	mov    %r12,%rdi
   118af:	48 89 e9             	mov    %rbp,%rcx
   118b2:	ff 15 c0 46 03 00    	callq  *0x346c0(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
   118b8:	49 89 c6             	mov    %rax,%r14
   118bb:	48 85 c0             	test   %rax,%rax
   118be:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
   118c3:	0f 85 b6 f5 ff ff    	jne    10e7f <addr2line::ResUnit<R>::parse_functions+0x80f>
   118c9:	be 08 00 00 00       	mov    $0x8,%esi
   118ce:	48 89 ef             	mov    %rbp,%rdi
   118d1:	ff 15 51 42 03 00    	callq  *0x34251(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   118d7:	0f 0b                	ud2    
   118d9:	41 be 08 00 00 00    	mov    $0x8,%r14d
   118df:	48 85 f6             	test   %rsi,%rsi
   118e2:	0f 84 92 f5 ff ff    	je     10e7a <addr2line::ResUnit<R>::parse_functions+0x80a>
   118e8:	ba 08 00 00 00       	mov    $0x8,%edx
   118ed:	4c 89 e7             	mov    %r12,%rdi
   118f0:	ff 15 0a 43 03 00    	callq  *0x3430a(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   118f6:	e9 7f f5 ff ff       	jmpq   10e7a <addr2line::ResUnit<R>::parse_functions+0x80a>
   118fb:	ff 15 e7 41 03 00    	callq  *0x341e7(%rip)        # 45ae8 <_GLOBAL_OFFSET_TABLE_+0x158>
   11901:	e9 a0 00 00 00       	jmpq   119a6 <addr2line::ResUnit<R>::parse_functions+0x1336>
   11906:	48 8d 15 13 20 03 00 	lea    0x32013(%rip),%rdx        # 43920 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3c8>
   1190d:	48 89 c7             	mov    %rax,%rdi
   11910:	ff 15 82 43 03 00    	callq  *0x34382(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   11916:	e9 8b 00 00 00       	jmpq   119a6 <addr2line::ResUnit<R>::parse_functions+0x1336>
   1191b:	48 8d 15 16 20 03 00 	lea    0x32016(%rip),%rdx        # 43938 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3e0>
   11922:	ff 15 70 43 03 00    	callq  *0x34370(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   11928:	eb 7c                	jmp    119a6 <addr2line::ResUnit<R>::parse_functions+0x1336>
   1192a:	48 8d 15 1f 20 03 00 	lea    0x3201f(%rip),%rdx        # 43950 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3f8>
   11931:	48 89 df             	mov    %rbx,%rdi
   11934:	48 89 ee             	mov    %rbp,%rsi
   11937:	ff 15 6b 45 03 00    	callq  *0x3456b(%rip)        # 45ea8 <_GLOBAL_OFFSET_TABLE_+0x518>
   1193d:	eb 67                	jmp    119a6 <addr2line::ResUnit<R>::parse_functions+0x1336>
   1193f:	48 8d 15 0a 20 03 00 	lea    0x3200a(%rip),%rdx        # 43950 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3f8>
   11946:	48 89 ef             	mov    %rbp,%rdi
   11949:	4c 89 f6             	mov    %r14,%rsi
   1194c:	ff 15 de 40 03 00    	callq  *0x340de(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   11952:	eb 52                	jmp    119a6 <addr2line::ResUnit<R>::parse_functions+0x1336>
   11954:	48 8d 15 7d 1f 03 00 	lea    0x31f7d(%rip),%rdx        # 438d8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x380>
   1195b:	4c 89 f6             	mov    %r14,%rsi
   1195e:	ff 15 94 44 03 00    	callq  *0x34494(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x468>
   11964:	eb 40                	jmp    119a6 <addr2line::ResUnit<R>::parse_functions+0x1336>
   11966:	48 8d 15 83 1f 03 00 	lea    0x31f83(%rip),%rdx        # 438f0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x398>
   1196d:	ff 15 35 45 03 00    	callq  *0x34535(%rip)        # 45ea8 <_GLOBAL_OFFSET_TABLE_+0x518>
   11973:	eb 31                	jmp    119a6 <addr2line::ResUnit<R>::parse_functions+0x1336>
   11975:	48 8d 15 74 1f 03 00 	lea    0x31f74(%rip),%rdx        # 438f0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x398>
   1197c:	48 89 f7             	mov    %rsi,%rdi
   1197f:	4c 89 f6             	mov    %r14,%rsi
   11982:	ff 15 a8 40 03 00    	callq  *0x340a8(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   11988:	eb 1c                	jmp    119a6 <addr2line::ResUnit<R>::parse_functions+0x1336>
   1198a:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   1198e:	49 89 ff             	mov    %rdi,%r15
   11991:	48 39 fe             	cmp    %rdi,%rsi
   11994:	73 12                	jae    119a8 <addr2line::ResUnit<R>::parse_functions+0x1338>
   11996:	48 8d 15 6b 1f 03 00 	lea    0x31f6b(%rip),%rdx        # 43908 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3b0>
   1199d:	4c 89 ff             	mov    %r15,%rdi
   119a0:	ff 15 02 45 03 00    	callq  *0x34502(%rip)        # 45ea8 <_GLOBAL_OFFSET_TABLE_+0x518>
   119a6:	0f 0b                	ud2    
   119a8:	48 8d 15 59 1f 03 00 	lea    0x31f59(%rip),%rdx        # 43908 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3b0>
   119af:	48 89 f7             	mov    %rsi,%rdi
   119b2:	48 8b b4 24 30 01 00 	mov    0x130(%rsp),%rsi
   119b9:	00 
   119ba:	ff 15 70 40 03 00    	callq  *0x34070(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   119c0:	eb e4                	jmp    119a6 <addr2line::ResUnit<R>::parse_functions+0x1336>
   119c2:	ff 15 20 41 03 00    	callq  *0x34120(%rip)        # 45ae8 <_GLOBAL_OFFSET_TABLE_+0x158>
   119c8:	eb dc                	jmp    119a6 <addr2line::ResUnit<R>::parse_functions+0x1336>
   119ca:	48 8b bc 24 b8 00 00 	mov    0xb8(%rsp),%rdi
   119d1:	00 
   119d2:	48 89 ee             	mov    %rbp,%rsi
   119d5:	ff 15 4d 41 03 00    	callq  *0x3414d(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   119db:	0f 0b                	ud2    
   119dd:	eb 35                	jmp    11a14 <addr2line::ResUnit<R>::parse_functions+0x13a4>
   119df:	48 89 c3             	mov    %rax,%rbx
   119e2:	48 8d 7c 24 60       	lea    0x60(%rsp),%rdi
   119e7:	e8 74 57 ff ff       	callq  7160 <core::ptr::drop_in_place>
   119ec:	eb 29                	jmp    11a17 <addr2line::ResUnit<R>::parse_functions+0x13a7>
   119ee:	eb 02                	jmp    119f2 <addr2line::ResUnit<R>::parse_functions+0x1382>
   119f0:	eb 22                	jmp    11a14 <addr2line::ResUnit<R>::parse_functions+0x13a4>
   119f2:	48 89 c3             	mov    %rax,%rbx
   119f5:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   119fa:	e8 e1 4f ff ff       	callq  69e0 <core::ptr::drop_in_place>
   119ff:	48 8d bc 24 50 01 00 	lea    0x150(%rsp),%rdi
   11a06:	00 
   11a07:	e8 a4 4f ff ff       	callq  69b0 <core::ptr::drop_in_place>
   11a0c:	eb 09                	jmp    11a17 <addr2line::ResUnit<R>::parse_functions+0x13a7>
   11a0e:	eb 04                	jmp    11a14 <addr2line::ResUnit<R>::parse_functions+0x13a4>
   11a10:	eb 02                	jmp    11a14 <addr2line::ResUnit<R>::parse_functions+0x13a4>
   11a12:	eb 00                	jmp    11a14 <addr2line::ResUnit<R>::parse_functions+0x13a4>
   11a14:	48 89 c3             	mov    %rax,%rbx
   11a17:	48 8d bc 24 e8 00 00 	lea    0xe8(%rsp),%rdi
   11a1e:	00 
   11a1f:	e8 8c 4f ff ff       	callq  69b0 <core::ptr::drop_in_place>
   11a24:	48 8d bc 24 38 01 00 	lea    0x138(%rsp),%rdi
   11a2b:	00 
   11a2c:	e8 ef 47 ff ff       	callq  6220 <core::ptr::drop_in_place>
   11a31:	48 89 df             	mov    %rbx,%rdi
   11a34:	e8 17 36 ff ff       	callq  5050 <_Unwind_Resume@plt>
   11a39:	0f 0b                	ud2    
   11a3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000011a40 <addr2line::Function<R>::parse_children>:
   11a40:	55                   	push   %rbp
   11a41:	41 57                	push   %r15
   11a43:	41 56                	push   %r14
   11a45:	41 55                	push   %r13
   11a47:	41 54                	push   %r12
   11a49:	53                   	push   %rbx
   11a4a:	48 81 ec 48 01 00 00 	sub    $0x148,%rsp
   11a51:	4c 8b 77 20          	mov    0x20(%rdi),%r14
   11a55:	49 39 f6             	cmp    %rsi,%r14
   11a58:	0f 8e 0c 0e 00 00    	jle    1286a <addr2line::Function<R>::parse_children+0xe2a>
   11a5e:	4d 89 cc             	mov    %r9,%r12
   11a61:	49 89 f5             	mov    %rsi,%r13
   11a64:	48 89 fb             	mov    %rdi,%rbx
   11a67:	48 89 54 24 68       	mov    %rdx,0x68(%rsp)
   11a6c:	48 89 4c 24 70       	mov    %rcx,0x70(%rsp)
   11a71:	4c 89 84 24 f8 00 00 	mov    %r8,0xf8(%rsp)
   11a78:	00 
   11a79:	4c 8b 94 24 90 01 00 	mov    0x190(%rsp),%r10
   11a80:	00 
   11a81:	4c 8b 9c 24 88 01 00 	mov    0x188(%rsp),%r11
   11a88:	00 
   11a89:	48 8b 47 10          	mov    0x10(%rdi),%rax
   11a8d:	31 c9                	xor    %ecx,%ecx
   11a8f:	80 78 21 08          	cmpb   $0x8,0x21(%rax)
   11a93:	0f 94 c1             	sete   %cl
   11a96:	48 c1 e1 03          	shl    $0x3,%rcx
   11a9a:	48 03 08             	add    (%rax),%rcx
   11a9d:	48 8b 17             	mov    (%rdi),%rdx
   11aa0:	48 8b 70 18          	mov    0x18(%rax),%rsi
   11aa4:	48 03 70 10          	add    0x10(%rax),%rsi
   11aa8:	48 29 f1             	sub    %rsi,%rcx
   11aab:	4c 8d 0c 11          	lea    (%rcx,%rdx,1),%r9
   11aaf:	49 83 c1 04          	add    $0x4,%r9
   11ab3:	4c 8d 05 96 7f 01 00 	lea    0x17f96(%rip),%r8        # 29a50 <<gimli::read::abbrev::Attributes as core::ops::deref::Deref>::deref>
   11aba:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   11abe:	41 bf 13 00 00 00    	mov    $0x13,%r15d
   11ac4:	48 85 f6             	test   %rsi,%rsi
   11ac7:	0f 84 af 0d 00 00    	je     1287c <addr2line::Function<R>::parse_children+0xe3c>
   11acd:	48 83 c6 ff          	add    $0xffffffffffffffff,%rsi
   11ad1:	31 c0                	xor    %eax,%eax
   11ad3:	31 c9                	xor    %ecx,%ecx
   11ad5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   11adc:	00 00 00 
   11adf:	90                   	nop
   11ae0:	48 8d 7a 01          	lea    0x1(%rdx),%rdi
   11ae4:	48 89 3b             	mov    %rdi,(%rbx)
   11ae7:	48 89 73 08          	mov    %rsi,0x8(%rbx)
   11aeb:	0f b6 12             	movzbl (%rdx),%edx
   11aee:	83 f9 3f             	cmp    $0x3f,%ecx
   11af1:	75 09                	jne    11afc <addr2line::Function<R>::parse_children+0xbc>
   11af3:	80 fa 01             	cmp    $0x1,%dl
   11af6:	0f 87 73 0d 00 00    	ja     1286f <addr2line::Function<R>::parse_children+0xe2f>
   11afc:	0f b6 ea             	movzbl %dl,%ebp
   11aff:	89 ea                	mov    %ebp,%edx
   11b01:	83 e2 7f             	and    $0x7f,%edx
   11b04:	48 d3 e2             	shl    %cl,%rdx
   11b07:	48 09 d0             	or     %rdx,%rax
   11b0a:	40 84 ed             	test   %bpl,%bpl
   11b0d:	79 11                	jns    11b20 <addr2line::Function<R>::parse_children+0xe0>
   11b0f:	83 c1 07             	add    $0x7,%ecx
   11b12:	48 89 fa             	mov    %rdi,%rdx
   11b15:	48 83 c6 ff          	add    $0xffffffffffffffff,%rsi
   11b19:	72 c5                	jb     11ae0 <addr2line::Function<R>::parse_children+0xa0>
   11b1b:	e9 59 0d 00 00       	jmpq   12879 <addr2line::Function<R>::parse_children+0xe39>
   11b20:	48 85 c0             	test   %rax,%rax
   11b23:	0f 84 a1 00 00 00    	je     11bca <addr2line::Function<R>::parse_children+0x18a>
   11b29:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   11b2d:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   11b31:	48 3b 4a 10          	cmp    0x10(%rdx),%rcx
   11b35:	0f 83 9c 00 00 00    	jae    11bd7 <addr2line::Function<R>::parse_children+0x197>
   11b3b:	48 6b f9 70          	imul   $0x70,%rcx,%rdi
   11b3f:	48 03 3a             	add    (%rdx),%rdi
   11b42:	80 7f 6a 01          	cmpb   $0x1,0x6a(%rdi)
   11b46:	75 08                	jne    11b50 <addr2line::Function<R>::parse_children+0x110>
   11b48:	49 8d 46 01          	lea    0x1(%r14),%rax
   11b4c:	48 89 43 20          	mov    %rax,0x20(%rbx)
   11b50:	0f b7 47 68          	movzwl 0x68(%rdi),%eax
   11b54:	66 83 f8 1d          	cmp    $0x1d,%ax
   11b58:	0f 84 36 01 00 00    	je     11c94 <addr2line::Function<R>::parse_children+0x254>
   11b5e:	48 83 c7 08          	add    $0x8,%rdi
   11b62:	66 83 f8 2e          	cmp    $0x2e,%ax
   11b66:	0f 85 cd 01 00 00    	jne    11d39 <addr2line::Function<R>::parse_children+0x2f9>
   11b6c:	41 ff d0             	callq  *%r8
   11b6f:	48 85 d2             	test   %rdx,%rdx
   11b72:	0f 84 78 0a 00 00    	je     125f0 <addr2line::Function<R>::parse_children+0xbb0>
   11b78:	48 89 c5             	mov    %rax,%rbp
   11b7b:	49 89 d7             	mov    %rdx,%r15
   11b7e:	49 c1 e7 04          	shl    $0x4,%r15
   11b82:	49 01 c7             	add    %rax,%r15
   11b85:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   11b8c:	00 00 00 
   11b8f:	90                   	nop
   11b90:	48 8b 4d 00          	mov    0x0(%rbp),%rcx
   11b94:	48 8b 43 10          	mov    0x10(%rbx),%rax
   11b98:	8b 50 20             	mov    0x20(%rax),%edx
   11b9b:	44 0f b7 4d 0a       	movzwl 0xa(%rbp),%r9d
   11ba0:	44 8b 45 08          	mov    0x8(%rbp),%r8d
   11ba4:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   11ba9:	48 89 de             	mov    %rbx,%rsi
   11bac:	e8 1f 8c ff ff       	callq  a7d0 <gimli::read::unit::parse_attribute>
   11bb1:	83 7c 24 10 01       	cmpl   $0x1,0x10(%rsp)
   11bb6:	0f 84 ad 0b 00 00    	je     12769 <addr2line::Function<R>::parse_children+0xd29>
   11bbc:	48 83 c5 10          	add    $0x10,%rbp
   11bc0:	4c 39 fd             	cmp    %r15,%rbp
   11bc3:	75 cb                	jne    11b90 <addr2line::Function<R>::parse_children+0x150>
   11bc5:	e9 26 0a 00 00       	jmpq   125f0 <addr2line::Function<R>::parse_children+0xbb0>
   11bca:	49 83 c6 ff          	add    $0xffffffffffffffff,%r14
   11bce:	4c 89 73 20          	mov    %r14,0x20(%rbx)
   11bd2:	e9 ef 0b 00 00       	jmpq   127c6 <addr2line::Function<R>::parse_children+0xd86>
   11bd7:	48 8b 4a 18          	mov    0x18(%rdx),%rcx
   11bdb:	41 bf 12 00 00 00    	mov    $0x12,%r15d
   11be1:	48 85 c9             	test   %rcx,%rcx
   11be4:	0f 84 8b 0c 00 00    	je     12875 <addr2line::Function<R>::parse_children+0xe35>
   11bea:	4c 89 64 24 08       	mov    %r12,0x8(%rsp)
   11bef:	4c 89 8c 24 a0 00 00 	mov    %r9,0xa0(%rsp)
   11bf6:	00 
   11bf7:	4c 89 ac 24 d8 00 00 	mov    %r13,0xd8(%rsp)
   11bfe:	00 
   11bff:	4d 89 c4             	mov    %r8,%r12
   11c02:	4c 8b 42 20          	mov    0x20(%rdx),%r8
   11c06:	44 0f b7 89 32 05 00 	movzwl 0x532(%rcx),%r9d
   11c0d:	00 
   11c0e:	48 8d 79 f0          	lea    -0x10(%rcx),%rdi
   11c12:	4c 89 cd             	mov    %r9,%rbp
   11c15:	48 f7 dd             	neg    %rbp
   11c18:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
   11c1f:	48 8d 14 2e          	lea    (%rsi,%rbp,1),%rdx
   11c23:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   11c27:	74 2a                	je     11c53 <addr2line::Function<R>::parse_children+0x213>
   11c29:	31 d2                	xor    %edx,%edx
   11c2b:	48 39 44 f1 10       	cmp    %rax,0x10(%rcx,%rsi,8)
   11c30:	0f 95 c2             	setne  %dl
   11c33:	49 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%r13
   11c3a:	49 0f 47 d5          	cmova  %r13,%rdx
   11c3e:	48 83 c6 01          	add    $0x1,%rsi
   11c42:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   11c46:	74 0e                	je     11c56 <addr2line::Function<R>::parse_children+0x216>
   11c48:	48 83 c7 70          	add    $0x70,%rdi
   11c4c:	48 85 d2             	test   %rdx,%rdx
   11c4f:	75 ce                	jne    11c1f <addr2line::Function<R>::parse_children+0x1df>
   11c51:	eb 1a                	jmp    11c6d <addr2line::Function<R>::parse_children+0x22d>
   11c53:	4c 89 ce             	mov    %r9,%rsi
   11c56:	4d 85 c0             	test   %r8,%r8
   11c59:	0f 84 16 0c 00 00    	je     12875 <addr2line::Function<R>::parse_children+0xe35>
   11c5f:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   11c63:	48 8b 8c f1 38 05 00 	mov    0x538(%rcx,%rsi,8),%rcx
   11c6a:	00 
   11c6b:	eb 99                	jmp    11c06 <addr2line::Function<R>::parse_children+0x1c6>
   11c6d:	4d 89 e0             	mov    %r12,%r8
   11c70:	4c 8b ac 24 d8 00 00 	mov    0xd8(%rsp),%r13
   11c77:	00 
   11c78:	4c 8b 8c 24 a0 00 00 	mov    0xa0(%rsp),%r9
   11c7f:	00 
   11c80:	4c 8b 64 24 08       	mov    0x8(%rsp),%r12
   11c85:	80 7f 6a 01          	cmpb   $0x1,0x6a(%rdi)
   11c89:	0f 84 b9 fe ff ff    	je     11b48 <addr2line::Function<R>::parse_children+0x108>
   11c8f:	e9 bc fe ff ff       	jmpq   11b50 <addr2line::Function<R>::parse_children+0x110>
   11c94:	4c 89 8c 24 a0 00 00 	mov    %r9,0xa0(%rsp)
   11c9b:	00 
   11c9c:	4c 89 64 24 08       	mov    %r12,0x8(%rsp)
   11ca1:	4c 89 9c 24 00 01 00 	mov    %r11,0x100(%rsp)
   11ca8:	00 
   11ca9:	4c 89 94 24 08 01 00 	mov    %r10,0x108(%rsp)
   11cb0:	00 
   11cb1:	48 83 c7 08          	add    $0x8,%rdi
   11cb5:	41 ff d0             	callq  *%r8
   11cb8:	48 85 d2             	test   %rdx,%rdx
   11cbb:	0f 84 ec 00 00 00    	je     11dad <addr2line::Function<R>::parse_children+0x36d>
   11cc1:	49 89 c4             	mov    %rax,%r12
   11cc4:	48 c1 e2 04          	shl    $0x4,%rdx
   11cc8:	48 01 c2             	add    %rax,%rdx
   11ccb:	48 89 94 24 d8 00 00 	mov    %rdx,0xd8(%rsp)
   11cd2:	00 
   11cd3:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   11cd8:	48 8b 88 c0 00 00 00 	mov    0xc0(%rax),%rcx
   11cdf:	48 89 8c 24 e8 00 00 	mov    %rcx,0xe8(%rsp)
   11ce6:	00 
   11ce7:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax
   11cee:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
   11cf5:	00 
   11cf6:	31 c0                	xor    %eax,%eax
   11cf8:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   11cff:	00 
   11d00:	31 c0                	xor    %eax,%eax
   11d02:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
   11d09:	00 
   11d0a:	31 c0                	xor    %eax,%eax
   11d0c:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
   11d13:	00 
   11d14:	45 31 ff             	xor    %r15d,%r15d
   11d17:	31 c0                	xor    %eax,%eax
   11d19:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   11d1e:	31 c0                	xor    %eax,%eax
   11d20:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
   11d27:	00 
   11d28:	31 c0                	xor    %eax,%eax
   11d2a:	48 89 84 24 b0 00 00 	mov    %rax,0xb0(%rsp)
   11d31:	00 
   11d32:	31 ed                	xor    %ebp,%ebp
   11d34:	e9 79 01 00 00       	jmpq   11eb2 <addr2line::Function<R>::parse_children+0x472>
   11d39:	4d 89 c7             	mov    %r8,%r15
   11d3c:	41 ff d0             	callq  *%r8
   11d3f:	48 85 d2             	test   %rdx,%rdx
   11d42:	74 51                	je     11d95 <addr2line::Function<R>::parse_children+0x355>
   11d44:	48 89 c5             	mov    %rax,%rbp
   11d47:	49 89 d6             	mov    %rdx,%r14
   11d4a:	49 c1 e6 04          	shl    $0x4,%r14
   11d4e:	49 01 c6             	add    %rax,%r14
   11d51:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   11d58:	00 00 00 
   11d5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11d60:	48 8b 4d 00          	mov    0x0(%rbp),%rcx
   11d64:	48 8b 43 10          	mov    0x10(%rbx),%rax
   11d68:	8b 50 20             	mov    0x20(%rax),%edx
   11d6b:	44 0f b7 4d 0a       	movzwl 0xa(%rbp),%r9d
   11d70:	44 8b 45 08          	mov    0x8(%rbp),%r8d
   11d74:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   11d79:	48 89 de             	mov    %rbx,%rsi
   11d7c:	e8 4f 8a ff ff       	callq  a7d0 <gimli::read::unit::parse_attribute>
   11d81:	83 7c 24 10 01       	cmpl   $0x1,0x10(%rsp)
   11d86:	0f 84 20 0b 00 00    	je     128ac <addr2line::Function<R>::parse_children+0xe6c>
   11d8c:	48 83 c5 10          	add    $0x10,%rbp
   11d90:	4c 39 f5             	cmp    %r14,%rbp
   11d93:	75 cb                	jne    11d60 <addr2line::Function<R>::parse_children+0x320>
   11d95:	4c 8b 94 24 90 01 00 	mov    0x190(%rsp),%r10
   11d9c:	00 
   11d9d:	4c 8b 9c 24 88 01 00 	mov    0x188(%rsp),%r11
   11da4:	00 
   11da5:	4d 89 f8             	mov    %r15,%r8
   11da8:	e9 19 0a 00 00       	jmpq   127c6 <addr2line::Function<R>::parse_children+0xd86>
   11dad:	31 ed                	xor    %ebp,%ebp
   11daf:	31 c0                	xor    %eax,%eax
   11db1:	48 89 84 24 b0 00 00 	mov    %rax,0xb0(%rsp)
   11db8:	00 
   11db9:	31 c0                	xor    %eax,%eax
   11dbb:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
   11dc2:	00 
   11dc3:	31 c0                	xor    %eax,%eax
   11dc5:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   11dca:	45 31 ff             	xor    %r15d,%r15d
   11dcd:	31 c0                	xor    %eax,%eax
   11dcf:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
   11dd6:	00 
   11dd7:	31 c0                	xor    %eax,%eax
   11dd9:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
   11de0:	00 
   11de1:	31 c0                	xor    %eax,%eax
   11de3:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   11dea:	00 
   11deb:	48 8b bc 24 80 01 00 	mov    0x180(%rsp),%rdi
   11df2:	00 
   11df3:	48 8b 77 10          	mov    0x10(%rdi),%rsi
   11df7:	48 89 b4 24 40 01 00 	mov    %rsi,0x140(%rsp)
   11dfe:	00 
   11dff:	48 3b 77 08          	cmp    0x8(%rdi),%rsi
   11e03:	0f 85 82 00 00 00    	jne    11e8b <addr2line::Function<R>::parse_children+0x44b>
   11e09:	48 89 f0             	mov    %rsi,%rax
   11e0c:	48 ff c0             	inc    %rax
   11e0f:	0f 84 d0 0a 00 00    	je     128e5 <addr2line::Function<R>::parse_children+0xea5>
   11e15:	48 8d 0c 36          	lea    (%rsi,%rsi,1),%rcx
   11e19:	48 39 c1             	cmp    %rax,%rcx
   11e1c:	48 0f 47 c1          	cmova  %rcx,%rax
   11e20:	48 83 f8 04          	cmp    $0x4,%rax
   11e24:	b9 04 00 00 00       	mov    $0x4,%ecx
   11e29:	48 0f 46 c1          	cmovbe %rcx,%rax
   11e2d:	31 c9                	xor    %ecx,%ecx
   11e2f:	ba 28 00 00 00       	mov    $0x28,%edx
   11e34:	48 f7 e2             	mul    %rdx
   11e37:	49 89 c4             	mov    %rax,%r12
   11e3a:	0f 90 c0             	seto   %al
   11e3d:	0f 91 c1             	setno  %cl
   11e40:	48 c1 e1 03          	shl    $0x3,%rcx
   11e44:	48 85 f6             	test   %rsi,%rsi
   11e47:	0f 84 f5 04 00 00    	je     12342 <addr2line::Function<R>::parse_children+0x902>
   11e4d:	84 c0                	test   %al,%al
   11e4f:	0f 85 90 0a 00 00    	jne    128e5 <addr2line::Function<R>::parse_children+0xea5>
   11e55:	48 8b 84 24 80 01 00 	mov    0x180(%rsp),%rax
   11e5c:	00 
   11e5d:	48 8b 38             	mov    (%rax),%rdi
   11e60:	48 85 ff             	test   %rdi,%rdi
   11e63:	0f 84 e1 04 00 00    	je     1234a <addr2line::Function<R>::parse_children+0x90a>
   11e69:	48 c1 e6 03          	shl    $0x3,%rsi
   11e6d:	48 8d 34 b6          	lea    (%rsi,%rsi,4),%rsi
   11e71:	48 85 f6             	test   %rsi,%rsi
   11e74:	0f 84 d0 04 00 00    	je     1234a <addr2line::Function<R>::parse_children+0x90a>
   11e7a:	48 89 ca             	mov    %rcx,%rdx
   11e7d:	4c 89 e1             	mov    %r12,%rcx
   11e80:	ff 15 f2 40 03 00    	callq  *0x340f2(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
   11e86:	e9 d0 04 00 00       	jmpq   1235b <addr2line::Function<R>::parse_children+0x91b>
   11e8b:	48 8b 0f             	mov    (%rdi),%rcx
   11e8e:	e9 fb 04 00 00       	jmpq   1238e <addr2line::Function<R>::parse_children+0x94e>
   11e93:	31 c0                	xor    %eax,%eax
   11e95:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
   11e9c:	00 
   11e9d:	0f 1f 00             	nopl   (%rax)
   11ea0:	49 83 c4 10          	add    $0x10,%r12
   11ea4:	4c 3b a4 24 d8 00 00 	cmp    0xd8(%rsp),%r12
   11eab:	00 
   11eac:	0f 84 39 ff ff ff    	je     11deb <addr2line::Function<R>::parse_children+0x3ab>
   11eb2:	49 8b 0c 24          	mov    (%r12),%rcx
   11eb6:	48 8b 43 10          	mov    0x10(%rbx),%rax
   11eba:	8b 50 20             	mov    0x20(%rax),%edx
   11ebd:	45 0f b7 4c 24 0a    	movzwl 0xa(%r12),%r9d
   11ec3:	45 8b 44 24 08       	mov    0x8(%r12),%r8d
   11ec8:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   11ecd:	48 89 de             	mov    %rbx,%rsi
   11ed0:	e8 fb 88 ff ff       	callq  a7d0 <gimli::read::unit::parse_attribute>
   11ed5:	83 7c 24 10 01       	cmpl   $0x1,0x10(%rsp)
   11eda:	0f 84 42 04 00 00    	je     12322 <addr2line::Function<R>::parse_children+0x8e2>
   11ee0:	8b 44 24 30          	mov    0x30(%rsp),%eax
   11ee4:	8d 48 fd             	lea    -0x3(%rax),%ecx
   11ee7:	66 83 f9 56          	cmp    $0x56,%cx
   11eeb:	0f 87 86 00 00 00    	ja     11f77 <addr2line::Function<R>::parse_children+0x537>
   11ef1:	0f b7 c1             	movzwl %cx,%eax
   11ef4:	48 8d 0d 3d 4d 02 00 	lea    0x24d3d(%rip),%rcx        # 36c38 <_fini+0x1bb4>
   11efb:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   11eff:	48 01 c8             	add    %rcx,%rax
   11f02:	ff e0                	jmpq   *%rax
   11f04:	4d 85 ff             	test   %r15,%r15
   11f07:	75 97                	jne    11ea0 <addr2line::Function<R>::parse_children+0x460>
   11f09:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
   11f0e:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   11f13:	e8 f8 9a ff ff       	callq  ba10 <gimli::read::unit::Attribute<R>::value>
   11f18:	48 8b 74 24 48       	mov    0x48(%rsp),%rsi
   11f1d:	48 8b 54 24 50       	mov    0x50(%rsp),%rdx
   11f22:	48 8d bc 24 80 00 00 	lea    0x80(%rsp),%rdi
   11f29:	00 
   11f2a:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
   11f2f:	4c 8b 44 24 70       	mov    0x70(%rsp),%r8
   11f34:	4c 8b 8c 24 f8 00 00 	mov    0xf8(%rsp),%r9
   11f3b:	00 
   11f3c:	6a 10                	pushq  $0x10
   11f3e:	ff 74 24 10          	pushq  0x10(%rsp)
   11f42:	e8 39 0d 00 00       	callq  12c80 <addr2line::name_attr>
   11f47:	48 83 c4 10          	add    $0x10,%rsp
   11f4b:	4c 8b bc 24 88 00 00 	mov    0x88(%rsp),%r15
   11f52:	00 
   11f53:	48 8b b4 24 90 00 00 	mov    0x90(%rsp),%rsi
   11f5a:	00 
   11f5b:	48 83 bc 24 80 00 00 	cmpq   $0x1,0x80(%rsp)
   11f62:	00 01 
   11f64:	0f 84 95 08 00 00    	je     127ff <addr2line::Function<R>::parse_children+0xdbf>
   11f6a:	48 89 b4 24 c0 00 00 	mov    %rsi,0xc0(%rsp)
   11f71:	00 
   11f72:	e9 29 ff ff ff       	jmpq   11ea0 <addr2line::Function<R>::parse_children+0x460>
   11f77:	66 83 f8 6e          	cmp    $0x6e,%ax
   11f7b:	74 0e                	je     11f8b <addr2line::Function<R>::parse_children+0x54b>
   11f7d:	0f b7 c0             	movzwl %ax,%eax
   11f80:	3d 07 20 00 00       	cmp    $0x2007,%eax
   11f85:	0f 85 15 ff ff ff    	jne    11ea0 <addr2line::Function<R>::parse_children+0x460>
   11f8b:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
   11f90:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   11f95:	e8 76 9a ff ff       	callq  ba10 <gimli::read::unit::Attribute<R>::value>
   11f9a:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
   11f9f:	4c 8b 44 24 50       	mov    0x50(%rsp),%r8
   11fa4:	4c 8b 4c 24 58       	mov    0x58(%rsp),%r9
   11fa9:	48 8d bc 24 80 00 00 	lea    0x80(%rsp),%rdi
   11fb0:	00 
   11fb1:	48 8b 74 24 70       	mov    0x70(%rsp),%rsi
   11fb6:	48 8b 54 24 68       	mov    0x68(%rsp),%rdx
   11fbb:	e8 f0 a1 ff ff       	callq  c1b0 <gimli::read::dwarf::Dwarf<R>::attr_string>
   11fc0:	48 83 bc 24 80 00 00 	cmpq   $0x0,0x80(%rsp)
   11fc7:	00 00 
   11fc9:	0f 85 d1 fe ff ff    	jne    11ea0 <addr2line::Function<R>::parse_children+0x460>
   11fcf:	4c 8b bc 24 88 00 00 	mov    0x88(%rsp),%r15
   11fd6:	00 
   11fd7:	48 8b 84 24 90 00 00 	mov    0x90(%rsp),%rax
   11fde:	00 
   11fdf:	48 89 84 24 c0 00 00 	mov    %rax,0xc0(%rsp)
   11fe6:	00 
   11fe7:	e9 b4 fe ff ff       	jmpq   11ea0 <addr2line::Function<R>::parse_children+0x460>
   11fec:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
   11ff1:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   11ff6:	e8 15 9a ff ff       	callq  ba10 <gimli::read::unit::Attribute<R>::value>
   11ffb:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   12000:	48 83 f8 07          	cmp    $0x7,%rax
   12004:	0f 84 0d 02 00 00    	je     12217 <addr2line::Function<R>::parse_children+0x7d7>
   1200a:	48 85 c0             	test   %rax,%rax
   1200d:	0f 85 8d fe ff ff    	jne    11ea0 <addr2line::Function<R>::parse_children+0x460>
   12013:	b8 01 00 00 00       	mov    $0x1,%eax
   12018:	48 89 84 24 b0 00 00 	mov    %rax,0xb0(%rsp)
   1201f:	00 
   12020:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   12025:	48 89 84 24 28 01 00 	mov    %rax,0x128(%rsp)
   1202c:	00 
   1202d:	e9 6e fe ff ff       	jmpq   11ea0 <addr2line::Function<R>::parse_children+0x460>
   12032:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   12037:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
   1203b:	48 83 f8 05          	cmp    $0x5,%rax
   1203f:	0f 87 9e 02 00 00    	ja     122e3 <addr2line::Function<R>::parse_children+0x8a3>
   12045:	48 8d 0d 60 4d 02 00 	lea    0x24d60(%rip),%rcx        # 36dac <_fini+0x1d28>
   1204c:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   12050:	48 01 c8             	add    %rcx,%rax
   12053:	ff e0                	jmpq   *%rax
   12055:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   1205a:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
   12061:	00 
   12062:	e9 39 fe ff ff       	jmpq   11ea0 <addr2line::Function<R>::parse_children+0x460>
   12067:	4d 85 ff             	test   %r15,%r15
   1206a:	0f 85 30 fe ff ff    	jne    11ea0 <addr2line::Function<R>::parse_children+0x460>
   12070:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
   12075:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   1207a:	e8 91 99 ff ff       	callq  ba10 <gimli::read::unit::Attribute<R>::value>
   1207f:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
   12084:	4c 8b 44 24 50       	mov    0x50(%rsp),%r8
   12089:	4c 8b 4c 24 58       	mov    0x58(%rsp),%r9
   1208e:	48 8d bc 24 80 00 00 	lea    0x80(%rsp),%rdi
   12095:	00 
   12096:	48 8b 74 24 70       	mov    0x70(%rsp),%rsi
   1209b:	48 8b 54 24 68       	mov    0x68(%rsp),%rdx
   120a0:	e8 0b a1 ff ff       	callq  c1b0 <gimli::read::dwarf::Dwarf<R>::attr_string>
   120a5:	83 bc 24 80 00 00 00 	cmpl   $0x1,0x80(%rsp)
   120ac:	01 
   120ad:	48 8b 84 24 90 00 00 	mov    0x90(%rsp),%rax
   120b4:	00 
   120b5:	48 89 84 24 c0 00 00 	mov    %rax,0xc0(%rsp)
   120bc:	00 
   120bd:	0f 84 a3 01 00 00    	je     12266 <addr2line::Function<R>::parse_children+0x826>
   120c3:	4c 8b bc 24 88 00 00 	mov    0x88(%rsp),%r15
   120ca:	00 
   120cb:	e9 d0 fd ff ff       	jmpq   11ea0 <addr2line::Function<R>::parse_children+0x460>
   120d0:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
   120d5:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   120da:	e8 31 99 ff ff       	callq  ba10 <gimli::read::unit::Attribute<R>::value>
   120df:	48 83 7c 24 48 00    	cmpq   $0x0,0x48(%rsp)
   120e5:	0f 85 b5 fd ff ff    	jne    11ea0 <addr2line::Function<R>::parse_children+0x460>
   120eb:	bd 01 00 00 00       	mov    $0x1,%ebp
   120f0:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   120f5:	48 89 84 24 e0 00 00 	mov    %rax,0xe0(%rsp)
   120fc:	00 
   120fd:	e9 9e fd ff ff       	jmpq   11ea0 <addr2line::Function<R>::parse_children+0x460>
   12102:	48 89 ac 24 98 00 00 	mov    %rbp,0x98(%rsp)
   12109:	00 
   1210a:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
   1210f:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   12114:	e8 f7 98 ff ff       	callq  ba10 <gimli::read::unit::Attribute<R>::value>
   12119:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   1211e:	48 8b 6c 24 50       	mov    0x50(%rsp),%rbp
   12123:	48 83 f8 16          	cmp    $0x16,%rax
   12127:	0f 84 09 01 00 00    	je     12236 <addr2line::Function<R>::parse_children+0x7f6>
   1212d:	48 83 f8 18          	cmp    $0x18,%rax
   12131:	0f 85 16 01 00 00    	jne    1224d <addr2line::Function<R>::parse_children+0x80d>
   12137:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
   1213c:	48 8b b0 a8 00 00 00 	mov    0xa8(%rax),%rsi
   12143:	48 8b 94 24 30 01 00 	mov    0x130(%rsp),%rdx
   1214a:	00 
   1214b:	48 29 f2             	sub    %rsi,%rdx
   1214e:	0f 82 c9 06 00 00    	jb     1281d <addr2line::Function<R>::parse_children+0xddd>
   12154:	0f b6 48 31          	movzbl 0x31(%rax),%ecx
   12158:	48 8b 84 24 e8 00 00 	mov    0xe8(%rsp),%rax
   1215f:	00 
   12160:	48 01 f0             	add    %rsi,%rax
   12163:	31 ff                	xor    %edi,%edi
   12165:	80 f9 08             	cmp    $0x8,%cl
   12168:	40 0f 94 c7          	sete   %dil
   1216c:	48 8d 3c bd 04 00 00 	lea    0x4(,%rdi,4),%rdi
   12173:	00 
   12174:	48 0f af fd          	imul   %rbp,%rdi
   12178:	48 29 fa             	sub    %rdi,%rdx
   1217b:	4c 8b 94 24 90 01 00 	mov    0x190(%rsp),%r10
   12182:	00 
   12183:	4c 8b 9c 24 88 01 00 	mov    0x188(%rsp),%r11
   1218a:	00 
   1218b:	4c 8d 05 be 78 01 00 	lea    0x178be(%rip),%r8        # 29a50 <<gimli::read::abbrev::Attributes as core::ops::deref::Deref>::deref>
   12192:	0f 82 7d 06 00 00    	jb     12815 <addr2line::Function<R>::parse_children+0xdd5>
   12198:	48 01 f8             	add    %rdi,%rax
   1219b:	80 f9 08             	cmp    $0x8,%cl
   1219e:	0f 85 ca 00 00 00    	jne    1226e <addr2line::Function<R>::parse_children+0x82e>
   121a4:	48 83 fa 07          	cmp    $0x7,%rdx
   121a8:	48 8b ac 24 98 00 00 	mov    0x98(%rsp),%rbp
   121af:	00 
   121b0:	0f 86 5f 06 00 00    	jbe    12815 <addr2line::Function<R>::parse_children+0xdd5>
   121b6:	48 8b 08             	mov    (%rax),%rcx
   121b9:	e9 c4 00 00 00       	jmpq   12282 <addr2line::Function<R>::parse_children+0x842>
   121be:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   121c3:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
   121c7:	48 83 f8 05          	cmp    $0x5,%rax
   121cb:	0f 87 c2 fc ff ff    	ja     11e93 <addr2line::Function<R>::parse_children+0x453>
   121d1:	48 8d 0d bc 4b 02 00 	lea    0x24bbc(%rip),%rcx        # 36d94 <_fini+0x1d10>
   121d8:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   121dc:	48 01 c8             	add    %rcx,%rax
   121df:	ff e0                	jmpq   *%rax
   121e1:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   121e6:	e9 aa fc ff ff       	jmpq   11e95 <addr2line::Function<R>::parse_children+0x455>
   121eb:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
   121f0:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   121f5:	e8 16 98 ff ff       	callq  ba10 <gimli::read::unit::Attribute<R>::value>
   121fa:	83 7c 24 48 2c       	cmpl   $0x2c,0x48(%rsp)
   121ff:	0f 85 9b fc ff ff    	jne    11ea0 <addr2line::Function<R>::parse_children+0x460>
   12205:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   1220a:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   12211:	00 
   12212:	e9 89 fc ff ff       	jmpq   11ea0 <addr2line::Function<R>::parse_children+0x460>
   12217:	b8 01 00 00 00       	mov    $0x1,%eax
   1221c:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
   12223:	00 
   12224:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   12229:	48 89 84 24 20 01 00 	mov    %rax,0x120(%rsp)
   12230:	00 
   12231:	e9 6a fc ff ff       	jmpq   11ea0 <addr2line::Function<R>::parse_children+0x460>
   12236:	b8 01 00 00 00       	mov    $0x1,%eax
   1223b:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   12240:	48 89 e9             	mov    %rbp,%rcx
   12243:	48 8b ac 24 98 00 00 	mov    0x98(%rsp),%rbp
   1224a:	00 
   1224b:	eb 42                	jmp    1228f <addr2line::Function<R>::parse_children+0x84f>
   1224d:	31 c0                	xor    %eax,%eax
   1224f:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   12254:	48 8b 8c 24 f0 00 00 	mov    0xf0(%rsp),%rcx
   1225b:	00 
   1225c:	48 8b ac 24 98 00 00 	mov    0x98(%rsp),%rbp
   12263:	00 
   12264:	eb 29                	jmp    1228f <addr2line::Function<R>::parse_children+0x84f>
   12266:	45 31 ff             	xor    %r15d,%r15d
   12269:	e9 32 fc ff ff       	jmpq   11ea0 <addr2line::Function<R>::parse_children+0x460>
   1226e:	48 83 fa 03          	cmp    $0x3,%rdx
   12272:	48 8b ac 24 98 00 00 	mov    0x98(%rsp),%rbp
   12279:	00 
   1227a:	0f 86 95 05 00 00    	jbe    12815 <addr2line::Function<R>::parse_children+0xdd5>
   12280:	8b 08                	mov    (%rax),%ecx
   12282:	48 01 f1             	add    %rsi,%rcx
   12285:	b8 01 00 00 00       	mov    $0x1,%eax
   1228a:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   1228f:	48 89 8c 24 38 01 00 	mov    %rcx,0x138(%rsp)
   12296:	00 
   12297:	48 89 8c 24 f0 00 00 	mov    %rcx,0xf0(%rsp)
   1229e:	00 
   1229f:	e9 fc fb ff ff       	jmpq   11ea0 <addr2line::Function<R>::parse_children+0x460>
   122a4:	0f b6 44 24 20       	movzbl 0x20(%rsp),%eax
   122a9:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
   122b0:	00 
   122b1:	e9 ea fb ff ff       	jmpq   11ea0 <addr2line::Function<R>::parse_children+0x460>
   122b6:	0f b7 44 24 20       	movzwl 0x20(%rsp),%eax
   122bb:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
   122c2:	00 
   122c3:	e9 d8 fb ff ff       	jmpq   11ea0 <addr2line::Function<R>::parse_children+0x460>
   122c8:	8b 44 24 20          	mov    0x20(%rsp),%eax
   122cc:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
   122d3:	00 
   122d4:	e9 c7 fb ff ff       	jmpq   11ea0 <addr2line::Function<R>::parse_children+0x460>
   122d9:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   122de:	48 85 c0             	test   %rax,%rax
   122e1:	79 02                	jns    122e5 <addr2line::Function<R>::parse_children+0x8a5>
   122e3:	31 c0                	xor    %eax,%eax
   122e5:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
   122ec:	00 
   122ed:	e9 ae fb ff ff       	jmpq   11ea0 <addr2line::Function<R>::parse_children+0x460>
   122f2:	8b 44 24 20          	mov    0x20(%rsp),%eax
   122f6:	e9 9a fb ff ff       	jmpq   11e95 <addr2line::Function<R>::parse_children+0x455>
   122fb:	0f b6 44 24 20       	movzbl 0x20(%rsp),%eax
   12300:	e9 90 fb ff ff       	jmpq   11e95 <addr2line::Function<R>::parse_children+0x455>
   12305:	0f b7 44 24 20       	movzwl 0x20(%rsp),%eax
   1230a:	e9 86 fb ff ff       	jmpq   11e95 <addr2line::Function<R>::parse_children+0x455>
   1230f:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   12314:	48 85 c0             	test   %rax,%rax
   12317:	0f 89 78 fb ff ff    	jns    11e95 <addr2line::Function<R>::parse_children+0x455>
   1231d:	e9 71 fb ff ff       	jmpq   11e93 <addr2line::Function<R>::parse_children+0x453>
   12322:	4c 8b 7c 24 18       	mov    0x18(%rsp),%r15
   12327:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   1232c:	48 89 d6             	mov    %rdx,%rsi
   1232f:	48 c1 ee 08          	shr    $0x8,%rsi
   12333:	4c 0f a4 fa 38       	shld   $0x38,%r15,%rdx
   12338:	4c 8b 64 24 08       	mov    0x8(%rsp),%r12
   1233d:	e9 fd 01 00 00       	jmpq   1253f <addr2line::Function<R>::parse_children+0xaff>
   12342:	84 c0                	test   %al,%al
   12344:	0f 85 9b 05 00 00    	jne    128e5 <addr2line::Function<R>::parse_children+0xea5>
   1234a:	4d 85 e4             	test   %r12,%r12
   1234d:	74 0f                	je     1235e <addr2line::Function<R>::parse_children+0x91e>
   1234f:	4c 89 e7             	mov    %r12,%rdi
   12352:	48 89 ce             	mov    %rcx,%rsi
   12355:	ff 15 2d 38 03 00    	callq  *0x3382d(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   1235b:	48 89 c1             	mov    %rax,%rcx
   1235e:	48 85 c9             	test   %rcx,%rcx
   12361:	0f 84 86 05 00 00    	je     128ed <addr2line::Function<R>::parse_children+0xead>
   12367:	4c 89 e0             	mov    %r12,%rax
   1236a:	48 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rdx
   12371:	cc cc cc 
   12374:	48 f7 e2             	mul    %rdx
   12377:	48 8b bc 24 80 01 00 	mov    0x180(%rsp),%rdi
   1237e:	00 
   1237f:	48 89 0f             	mov    %rcx,(%rdi)
   12382:	48 c1 ea 05          	shr    $0x5,%rdx
   12386:	48 89 57 08          	mov    %rdx,0x8(%rdi)
   1238a:	48 8b 77 10          	mov    0x10(%rdi),%rsi
   1238e:	4c 8b 64 24 08       	mov    0x8(%rsp),%r12
   12393:	48 8b 94 24 a0 00 00 	mov    0xa0(%rsp),%rdx
   1239a:	00 
   1239b:	48 8d 04 b6          	lea    (%rsi,%rsi,4),%rax
   1239f:	48 89 14 c1          	mov    %rdx,(%rcx,%rax,8)
   123a3:	4c 89 7c c1 08       	mov    %r15,0x8(%rcx,%rax,8)
   123a8:	48 8b 94 24 c0 00 00 	mov    0xc0(%rsp),%rdx
   123af:	00 
   123b0:	48 89 54 c1 10       	mov    %rdx,0x10(%rcx,%rax,8)
   123b5:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
   123bc:	00 
   123bd:	48 89 54 c1 18       	mov    %rdx,0x18(%rcx,%rax,8)
   123c2:	48 8b 94 24 c8 00 00 	mov    0xc8(%rsp),%rdx
   123c9:	00 
   123ca:	89 54 c1 20          	mov    %edx,0x20(%rcx,%rax,8)
   123ce:	48 8b 94 24 d0 00 00 	mov    0xd0(%rsp),%rdx
   123d5:	00 
   123d6:	89 54 c1 24          	mov    %edx,0x24(%rcx,%rax,8)
   123da:	48 83 47 10 01       	addq   $0x1,0x10(%rdi)
   123df:	48 8d 84 24 00 01 00 	lea    0x100(%rsp),%rax
   123e6:	00 
   123e7:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   123ee:	00 
   123ef:	48 8d 84 24 08 01 00 	lea    0x108(%rsp),%rax
   123f6:	00 
   123f7:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
   123fe:	00 
   123ff:	48 8d 84 24 40 01 00 	lea    0x140(%rsp),%rax
   12406:	00 
   12407:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
   1240e:	00 
   1240f:	c6 44 24 07 00       	movb   $0x0,0x7(%rsp)
   12414:	48 8d 84 24 80 00 00 	lea    0x80(%rsp),%rax
   1241b:	00 
   1241c:	48 89 84 24 10 01 00 	mov    %rax,0x110(%rsp)
   12423:	00 
   12424:	48 8d 44 24 07       	lea    0x7(%rsp),%rax
   12429:	48 89 84 24 18 01 00 	mov    %rax,0x118(%rsp)
   12430:	00 
   12431:	48 83 7c 24 78 01    	cmpq   $0x1,0x78(%rsp)
   12437:	75 67                	jne    124a0 <addr2line::Function<R>::parse_children+0xa60>
   12439:	48 8b 7c 24 68       	mov    0x68(%rsp),%rdi
   1243e:	44 8b 47 30          	mov    0x30(%rdi),%r8d
   12442:	44 89 c1             	mov    %r8d,%ecx
   12445:	c1 e9 10             	shr    $0x10,%ecx
   12448:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   1244d:	48 8d 90 b0 00 00 00 	lea    0xb0(%rax),%rdx
   12454:	48 8d b0 c0 00 00 00 	lea    0xc0(%rax),%rsi
   1245b:	4c 8d 88 b8 00 00 00 	lea    0xb8(%rax),%r9
   12462:	48 8d a8 c8 00 00 00 	lea    0xc8(%rax),%rbp
   12469:	66 83 f9 05          	cmp    $0x5,%cx
   1246d:	48 0f 42 f2          	cmovb  %rdx,%rsi
   12471:	48 8b 16             	mov    (%rsi),%rdx
   12474:	49 0f 42 e9          	cmovb  %r9,%rbp
   12478:	48 8b 4d 00          	mov    0x0(%rbp),%rcx
   1247c:	48 8b ac 24 38 01 00 	mov    0x138(%rsp),%rbp
   12483:	00 
   12484:	48 29 e9             	sub    %rbp,%rcx
   12487:	0f 83 d8 00 00 00    	jae    12565 <addr2line::Function<R>::parse_children+0xb25>
   1248d:	48 89 d6             	mov    %rdx,%rsi
   12490:	48 c1 ee 08          	shr    $0x8,%rsi
   12494:	48 c1 e2 38          	shl    $0x38,%rdx
   12498:	41 b7 13             	mov    $0x13,%r15b
   1249b:	e9 9f 00 00 00       	jmpq   1253f <addr2line::Function<R>::parse_children+0xaff>
   124a0:	48 83 fd 01          	cmp    $0x1,%rbp
   124a4:	75 47                	jne    124ed <addr2line::Function<R>::parse_children+0xaad>
   124a6:	48 83 bc 24 b0 00 00 	cmpq   $0x1,0xb0(%rsp)
   124ad:	00 01 
   124af:	48 8b 94 24 28 01 00 	mov    0x128(%rsp),%rdx
   124b6:	00 
   124b7:	48 8b b4 24 e0 00 00 	mov    0xe0(%rsp),%rsi
   124be:	00 
   124bf:	74 1f                	je     124e0 <addr2line::Function<R>::parse_children+0xaa0>
   124c1:	48 83 bc 24 a8 00 00 	cmpq   $0x1,0xa8(%rsp)
   124c8:	00 01 
   124ca:	75 21                	jne    124ed <addr2line::Function<R>::parse_children+0xaad>
   124cc:	48 8b 84 24 20 01 00 	mov    0x120(%rsp),%rax
   124d3:	00 
   124d4:	48 8b b4 24 e0 00 00 	mov    0xe0(%rsp),%rsi
   124db:	00 
   124dc:	48 8d 14 30          	lea    (%rax,%rsi,1),%rdx
   124e0:	48 8d bc 24 10 01 00 	lea    0x110(%rsp),%rdi
   124e7:	00 
   124e8:	e8 63 06 00 00       	callq  12b50 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}>
   124ed:	48 8b 84 24 08 01 00 	mov    0x108(%rsp),%rax
   124f4:	00 
   124f5:	48 83 c0 01          	add    $0x1,%rax
   124f9:	48 83 ec 08          	sub    $0x8,%rsp
   124fd:	48 89 df             	mov    %rbx,%rdi
   12500:	4c 89 f6             	mov    %r14,%rsi
   12503:	48 8b 54 24 70       	mov    0x70(%rsp),%rdx
   12508:	48 8b 4c 24 78       	mov    0x78(%rsp),%rcx
   1250d:	4c 8b 84 24 00 01 00 	mov    0x100(%rsp),%r8
   12514:	00 
   12515:	4d 89 e1             	mov    %r12,%r9
   12518:	50                   	push   %rax
   12519:	ff b4 24 10 01 00 00 	pushq  0x110(%rsp)
   12520:	ff b4 24 98 01 00 00 	pushq  0x198(%rsp)
   12527:	e8 14 f5 ff ff       	callq  11a40 <addr2line::Function<R>::parse_children>
   1252c:	48 83 c4 20          	add    $0x20,%rsp
   12530:	49 89 c7             	mov    %rax,%r15
   12533:	48 89 d6             	mov    %rdx,%rsi
   12536:	48 c1 ee 08          	shr    $0x8,%rsi
   1253a:	48 0f a4 c2 38       	shld   $0x38,%rax,%rdx
   1253f:	4c 8b 94 24 90 01 00 	mov    0x190(%rsp),%r10
   12546:	00 
   12547:	4c 8b 9c 24 88 01 00 	mov    0x188(%rsp),%r11
   1254e:	00 
   1254f:	4c 8d 05 fa 74 01 00 	lea    0x174fa(%rip),%r8        # 29a50 <<gimli::read::abbrev::Attributes as core::ops::deref::Deref>::deref>
   12556:	41 80 ff 46          	cmp    $0x46,%r15b
   1255a:	0f 84 66 02 00 00    	je     127c6 <addr2line::Function<R>::parse_children+0xd86>
   12560:	e9 22 03 00 00       	jmpq   12887 <addr2line::Function<R>::parse_children+0xe47>
   12565:	48 8b b7 88 00 00 00 	mov    0x88(%rdi),%rsi
   1256c:	48 8b bf 98 00 00 00 	mov    0x98(%rdi),%rdi
   12573:	48 01 ea             	add    %rbp,%rdx
   12576:	0f 10 40 10          	movups 0x10(%rax),%xmm0
   1257a:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   1257f:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   12584:	44 89 44 24 20       	mov    %r8d,0x20(%rsp)
   12589:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
   1258e:	0f 11 44 24 30       	movups %xmm0,0x30(%rsp)
   12593:	48 89 7c 24 40       	mov    %rdi,0x40(%rsp)
   12598:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
   1259d:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   125a2:	e8 a9 9e ff ff       	callq  c450 <gimli::read::rnglists::RngListIter<R>::next>
   125a7:	4c 8b 7c 24 50       	mov    0x50(%rsp),%r15
   125ac:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
   125b1:	48 83 7c 24 48 01    	cmpq   $0x1,0x48(%rsp)
   125b7:	74 1e                	je     125d7 <addr2line::Function<R>::parse_children+0xb97>
   125b9:	49 83 ff 01          	cmp    $0x1,%r15
   125bd:	0f 85 2a ff ff ff    	jne    124ed <addr2line::Function<R>::parse_children+0xaad>
   125c3:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
   125c8:	48 8d bc 24 10 01 00 	lea    0x110(%rsp),%rdi
   125cf:	00 
   125d0:	e8 7b 05 00 00       	callq  12b50 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}>
   125d5:	eb c1                	jmp    12598 <addr2line::Function<R>::parse_children+0xb58>
   125d7:	4c 89 fa             	mov    %r15,%rdx
   125da:	48 0f ac f2 08       	shrd   $0x8,%rsi,%rdx
   125df:	48 c1 ee 08          	shr    $0x8,%rsi
   125e3:	e9 57 ff ff ff       	jmpq   1253f <addr2line::Function<R>::parse_children+0xaff>
   125e8:	49 83 c3 ff          	add    $0xffffffffffffffff,%r11
   125ec:	4c 89 5b 20          	mov    %r11,0x20(%rbx)
   125f0:	4c 8b 5b 20          	mov    0x20(%rbx),%r11
   125f4:	4d 39 f3             	cmp    %r14,%r11
   125f7:	0f 8e b2 01 00 00    	jle    127af <addr2line::Function<R>::parse_children+0xd6f>
   125fd:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   12601:	48 85 ff             	test   %rdi,%rdi
   12604:	4c 8d 05 45 74 01 00 	lea    0x17445(%rip),%r8        # 29a50 <<gimli::read::abbrev::Attributes as core::ops::deref::Deref>::deref>
   1260b:	0f 84 c9 02 00 00    	je     128da <addr2line::Function<R>::parse_children+0xe9a>
   12611:	48 8b 2b             	mov    (%rbx),%rbp
   12614:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   12618:	31 f6                	xor    %esi,%esi
   1261a:	31 c9                	xor    %ecx,%ecx
   1261c:	0f 1f 40 00          	nopl   0x0(%rax)
   12620:	48 8d 55 01          	lea    0x1(%rbp),%rdx
   12624:	48 89 13             	mov    %rdx,(%rbx)
   12627:	48 89 7b 08          	mov    %rdi,0x8(%rbx)
   1262b:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
   1262f:	83 f9 3f             	cmp    $0x3f,%ecx
   12632:	75 08                	jne    1263c <addr2line::Function<R>::parse_children+0xbfc>
   12634:	3c 01                	cmp    $0x1,%al
   12636:	0f 87 33 02 00 00    	ja     1286f <addr2line::Function<R>::parse_children+0xe2f>
   1263c:	0f b6 e8             	movzbl %al,%ebp
   1263f:	89 e8                	mov    %ebp,%eax
   12641:	83 e0 7f             	and    $0x7f,%eax
   12644:	48 d3 e0             	shl    %cl,%rax
   12647:	48 09 c6             	or     %rax,%rsi
   1264a:	40 84 ed             	test   %bpl,%bpl
   1264d:	79 11                	jns    12660 <addr2line::Function<R>::parse_children+0xc20>
   1264f:	83 c1 07             	add    $0x7,%ecx
   12652:	48 89 d5             	mov    %rdx,%rbp
   12655:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   12659:	72 c5                	jb     12620 <addr2line::Function<R>::parse_children+0xbe0>
   1265b:	e9 72 02 00 00       	jmpq   128d2 <addr2line::Function<R>::parse_children+0xe92>
   12660:	48 85 f6             	test   %rsi,%rsi
   12663:	0f 84 7f ff ff ff    	je     125e8 <addr2line::Function<R>::parse_children+0xba8>
   12669:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
   1266d:	48 8d 46 ff          	lea    -0x1(%rsi),%rax
   12671:	48 3b 41 10          	cmp    0x10(%rcx),%rax
   12675:	73 0c                	jae    12683 <addr2line::Function<R>::parse_children+0xc43>
   12677:	48 6b f8 70          	imul   $0x70,%rax,%rdi
   1267b:	48 03 39             	add    (%rcx),%rdi
   1267e:	e9 85 00 00 00       	jmpq   12708 <addr2line::Function<R>::parse_children+0xcc8>
   12683:	4c 8b 51 18          	mov    0x18(%rcx),%r10
   12687:	41 bf 12 00 00 00    	mov    $0x12,%r15d
   1268d:	4d 85 d2             	test   %r10,%r10
   12690:	0f 84 df 01 00 00    	je     12875 <addr2line::Function<R>::parse_children+0xe35>
   12696:	4c 8b 41 20          	mov    0x20(%rcx),%r8
   1269a:	45 0f b7 8a 32 05 00 	movzwl 0x532(%r10),%r9d
   126a1:	00 
   126a2:	49 8d 7a f0          	lea    -0x10(%r10),%rdi
   126a6:	4c 89 ca             	mov    %r9,%rdx
   126a9:	48 f7 da             	neg    %rdx
   126ac:	48 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%rbp
   126b3:	48 8d 04 2a          	lea    (%rdx,%rbp,1),%rax
   126b7:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   126bb:	74 2a                	je     126e7 <addr2line::Function<R>::parse_children+0xca7>
   126bd:	31 c9                	xor    %ecx,%ecx
   126bf:	49 39 74 ea 10       	cmp    %rsi,0x10(%r10,%rbp,8)
   126c4:	0f 95 c1             	setne  %cl
   126c7:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   126ce:	48 0f 47 c8          	cmova  %rax,%rcx
   126d2:	48 83 c5 01          	add    $0x1,%rbp
   126d6:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
   126da:	74 0e                	je     126ea <addr2line::Function<R>::parse_children+0xcaa>
   126dc:	48 83 c7 70          	add    $0x70,%rdi
   126e0:	48 85 c9             	test   %rcx,%rcx
   126e3:	75 ce                	jne    126b3 <addr2line::Function<R>::parse_children+0xc73>
   126e5:	eb 1a                	jmp    12701 <addr2line::Function<R>::parse_children+0xcc1>
   126e7:	4c 89 cd             	mov    %r9,%rbp
   126ea:	4d 85 c0             	test   %r8,%r8
   126ed:	0f 84 82 01 00 00    	je     12875 <addr2line::Function<R>::parse_children+0xe35>
   126f3:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   126f7:	4d 8b 94 ea 38 05 00 	mov    0x538(%r10,%rbp,8),%r10
   126fe:	00 
   126ff:	eb 99                	jmp    1269a <addr2line::Function<R>::parse_children+0xc5a>
   12701:	4c 8d 05 48 73 01 00 	lea    0x17348(%rip),%r8        # 29a50 <<gimli::read::abbrev::Attributes as core::ops::deref::Deref>::deref>
   12708:	80 7f 6a 01          	cmpb   $0x1,0x6a(%rdi)
   1270c:	75 08                	jne    12716 <addr2line::Function<R>::parse_children+0xcd6>
   1270e:	49 83 c3 01          	add    $0x1,%r11
   12712:	4c 89 5b 20          	mov    %r11,0x20(%rbx)
   12716:	48 83 c7 08          	add    $0x8,%rdi
   1271a:	41 ff d0             	callq  *%r8
   1271d:	48 85 d2             	test   %rdx,%rdx
   12720:	0f 84 ca fe ff ff    	je     125f0 <addr2line::Function<R>::parse_children+0xbb0>
   12726:	48 89 c5             	mov    %rax,%rbp
   12729:	49 89 d7             	mov    %rdx,%r15
   1272c:	49 c1 e7 04          	shl    $0x4,%r15
   12730:	49 01 c7             	add    %rax,%r15
   12733:	48 8b 4d 00          	mov    0x0(%rbp),%rcx
   12737:	48 8b 43 10          	mov    0x10(%rbx),%rax
   1273b:	8b 50 20             	mov    0x20(%rax),%edx
   1273e:	44 0f b7 4d 0a       	movzwl 0xa(%rbp),%r9d
   12743:	44 8b 45 08          	mov    0x8(%rbp),%r8d
   12747:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1274c:	48 89 de             	mov    %rbx,%rsi
   1274f:	e8 7c 80 ff ff       	callq  a7d0 <gimli::read::unit::parse_attribute>
   12754:	83 7c 24 10 01       	cmpl   $0x1,0x10(%rsp)
   12759:	74 0e                	je     12769 <addr2line::Function<R>::parse_children+0xd29>
   1275b:	48 83 c5 10          	add    $0x10,%rbp
   1275f:	4c 39 fd             	cmp    %r15,%rbp
   12762:	75 cf                	jne    12733 <addr2line::Function<R>::parse_children+0xcf3>
   12764:	e9 87 fe ff ff       	jmpq   125f0 <addr2line::Function<R>::parse_children+0xbb0>
   12769:	44 8a 7c 24 18       	mov    0x18(%rsp),%r15b
   1276e:	0f b6 44 24 27       	movzbl 0x27(%rsp),%eax
   12773:	c1 e0 10             	shl    $0x10,%eax
   12776:	0f b7 4c 24 25       	movzwl 0x25(%rsp),%ecx
   1277b:	09 c1                	or     %eax,%ecx
   1277d:	48 c1 e1 20          	shl    $0x20,%rcx
   12781:	8b 74 24 21          	mov    0x21(%rsp),%esi
   12785:	48 09 ce             	or     %rcx,%rsi
   12788:	48 8b 54 24 19       	mov    0x19(%rsp),%rdx
   1278d:	4c 8d 05 bc 72 01 00 	lea    0x172bc(%rip),%r8        # 29a50 <<gimli::read::abbrev::Attributes as core::ops::deref::Deref>::deref>
   12794:	41 80 ff 46          	cmp    $0x46,%r15b
   12798:	4c 8b 94 24 90 01 00 	mov    0x190(%rsp),%r10
   1279f:	00 
   127a0:	4c 8b 9c 24 88 01 00 	mov    0x188(%rsp),%r11
   127a7:	00 
   127a8:	74 1c                	je     127c6 <addr2line::Function<R>::parse_children+0xd86>
   127aa:	e9 d8 00 00 00       	jmpq   12887 <addr2line::Function<R>::parse_children+0xe47>
   127af:	4c 8b 94 24 90 01 00 	mov    0x190(%rsp),%r10
   127b6:	00 
   127b7:	4c 8b 9c 24 88 01 00 	mov    0x188(%rsp),%r11
   127be:	00 
   127bf:	4c 8d 05 8a 72 01 00 	lea    0x1728a(%rip),%r8        # 29a50 <<gimli::read::abbrev::Attributes as core::ops::deref::Deref>::deref>
   127c6:	48 8b 43 10          	mov    0x10(%rbx),%rax
   127ca:	31 c9                	xor    %ecx,%ecx
   127cc:	80 78 21 08          	cmpb   $0x8,0x21(%rax)
   127d0:	0f 94 c1             	sete   %cl
   127d3:	48 c1 e1 03          	shl    $0x3,%rcx
   127d7:	48 03 08             	add    (%rax),%rcx
   127da:	48 8b 13             	mov    (%rbx),%rdx
   127dd:	48 8b 70 18          	mov    0x18(%rax),%rsi
   127e1:	48 03 70 10          	add    0x10(%rax),%rsi
   127e5:	48 29 f1             	sub    %rsi,%rcx
   127e8:	4c 8d 0c 11          	lea    (%rcx,%rdx,1),%r9
   127ec:	49 83 c1 04          	add    $0x4,%r9
   127f0:	4c 8b 73 20          	mov    0x20(%rbx),%r14
   127f4:	4d 39 ee             	cmp    %r13,%r14
   127f7:	0f 8f bd f2 ff ff    	jg     11aba <addr2line::Function<R>::parse_children+0x7a>
   127fd:	eb 6b                	jmp    1286a <addr2line::Function<R>::parse_children+0xe2a>
   127ff:	4c 89 fa             	mov    %r15,%rdx
   12802:	48 0f ac f2 08       	shrd   $0x8,%rsi,%rdx
   12807:	48 c1 ee 08          	shr    $0x8,%rsi
   1280b:	4c 8b 64 24 08       	mov    0x8(%rsp),%r12
   12810:	e9 2a fd ff ff       	jmpq   1253f <addr2line::Function<R>::parse_children+0xaff>
   12815:	41 bf 13 00 00 00    	mov    $0x13,%r15d
   1281b:	eb 25                	jmp    12842 <addr2line::Function<R>::parse_children+0xe02>
   1281d:	41 bf 13 00 00 00    	mov    $0x13,%r15d
   12823:	48 8b 84 24 e8 00 00 	mov    0xe8(%rsp),%rax
   1282a:	00 
   1282b:	4c 8b 94 24 90 01 00 	mov    0x190(%rsp),%r10
   12832:	00 
   12833:	4c 8b 9c 24 88 01 00 	mov    0x188(%rsp),%r11
   1283a:	00 
   1283b:	4c 8d 05 0e 72 01 00 	lea    0x1720e(%rip),%r8        # 29a50 <<gimli::read::abbrev::Attributes as core::ops::deref::Deref>::deref>
   12842:	4c 89 fa             	mov    %r15,%rdx
   12845:	48 0f ac c2 08       	shrd   $0x8,%rax,%rdx
   1284a:	48 89 84 24 f0 00 00 	mov    %rax,0xf0(%rsp)
   12851:	00 
   12852:	48 89 c6             	mov    %rax,%rsi
   12855:	48 c1 ee 08          	shr    $0x8,%rsi
   12859:	4c 8b 64 24 08       	mov    0x8(%rsp),%r12
   1285e:	41 80 ff 46          	cmp    $0x46,%r15b
   12862:	0f 84 5e ff ff ff    	je     127c6 <addr2line::Function<R>::parse_children+0xd86>
   12868:	eb 1d                	jmp    12887 <addr2line::Function<R>::parse_children+0xe47>
   1286a:	41 b7 46             	mov    $0x46,%r15b
   1286d:	eb 18                	jmp    12887 <addr2line::Function<R>::parse_children+0xe47>
   1286f:	41 bf 06 00 00 00    	mov    $0x6,%r15d
   12875:	31 d2                	xor    %edx,%edx
   12877:	eb 03                	jmp    1287c <addr2line::Function<R>::parse_children+0xe3c>
   12879:	48 89 fa             	mov    %rdi,%rdx
   1287c:	48 89 d6             	mov    %rdx,%rsi
   1287f:	48 c1 ee 08          	shr    $0x8,%rsi
   12883:	48 c1 e2 38          	shl    $0x38,%rdx
   12887:	48 0f a4 d6 08       	shld   $0x8,%rdx,%rsi
   1288c:	48 c1 e2 08          	shl    $0x8,%rdx
   12890:	41 0f b6 c7          	movzbl %r15b,%eax
   12894:	48 09 d0             	or     %rdx,%rax
   12897:	48 89 f2             	mov    %rsi,%rdx
   1289a:	48 81 c4 48 01 00 00 	add    $0x148,%rsp
   128a1:	5b                   	pop    %rbx
   128a2:	41 5c                	pop    %r12
   128a4:	41 5d                	pop    %r13
   128a6:	41 5e                	pop    %r14
   128a8:	41 5f                	pop    %r15
   128aa:	5d                   	pop    %rbp
   128ab:	c3                   	retq   
   128ac:	44 8a 7c 24 18       	mov    0x18(%rsp),%r15b
   128b1:	0f b6 44 24 27       	movzbl 0x27(%rsp),%eax
   128b6:	c1 e0 10             	shl    $0x10,%eax
   128b9:	0f b7 4c 24 25       	movzwl 0x25(%rsp),%ecx
   128be:	09 c1                	or     %eax,%ecx
   128c0:	48 c1 e1 20          	shl    $0x20,%rcx
   128c4:	8b 74 24 21          	mov    0x21(%rsp),%esi
   128c8:	48 09 ce             	or     %rcx,%rsi
   128cb:	48 8b 54 24 19       	mov    0x19(%rsp),%rdx
   128d0:	eb b5                	jmp    12887 <addr2line::Function<R>::parse_children+0xe47>
   128d2:	41 bf 13 00 00 00    	mov    $0x13,%r15d
   128d8:	eb a2                	jmp    1287c <addr2line::Function<R>::parse_children+0xe3c>
   128da:	48 8b 13             	mov    (%rbx),%rdx
   128dd:	41 bf 13 00 00 00    	mov    $0x13,%r15d
   128e3:	eb 97                	jmp    1287c <addr2line::Function<R>::parse_children+0xe3c>
   128e5:	ff 15 fd 31 03 00    	callq  *0x331fd(%rip)        # 45ae8 <_GLOBAL_OFFSET_TABLE_+0x158>
   128eb:	0f 0b                	ud2    
   128ed:	be 08 00 00 00       	mov    $0x8,%esi
   128f2:	4c 89 e7             	mov    %r12,%rdi
   128f5:	ff 15 2d 32 03 00    	callq  *0x3322d(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   128fb:	0f 0b                	ud2    
   128fd:	0f 1f 00             	nopl   (%rax)

0000000000012900 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}>:
   12900:	55                   	push   %rbp
   12901:	41 57                	push   %r15
   12903:	41 56                	push   %r14
   12905:	41 55                	push   %r13
   12907:	41 54                	push   %r12
   12909:	53                   	push   %rbx
   1290a:	50                   	push   %rax
   1290b:	48 39 d6             	cmp    %rdx,%rsi
   1290e:	0f 83 dc 00 00 00    	jae    129f0 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xf0>
   12914:	49 89 d7             	mov    %rdx,%r15
   12917:	49 89 f5             	mov    %rsi,%r13
   1291a:	49 89 fe             	mov    %rdi,%r14
   1291d:	48 8b 07             	mov    (%rdi),%rax
   12920:	48 8b 18             	mov    (%rax),%rbx
   12923:	48 8b 40 08          	mov    0x8(%rax),%rax
   12927:	48 8b 28             	mov    (%rax),%rbp
   1292a:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   1292e:	48 3b 73 08          	cmp    0x8(%rbx),%rsi
   12932:	75 64                	jne    12998 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0x98>
   12934:	48 89 f1             	mov    %rsi,%rcx
   12937:	48 ff c1             	inc    %rcx
   1293a:	0f 84 bf 00 00 00    	je     129ff <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xff>
   12940:	48 8d 04 36          	lea    (%rsi,%rsi,1),%rax
   12944:	48 39 c8             	cmp    %rcx,%rax
   12947:	48 0f 47 c8          	cmova  %rax,%rcx
   1294b:	48 83 f9 04          	cmp    $0x4,%rcx
   1294f:	b8 04 00 00 00       	mov    $0x4,%eax
   12954:	48 0f 47 c1          	cmova  %rcx,%rax
   12958:	ba 20 00 00 00       	mov    $0x20,%edx
   1295d:	31 c9                	xor    %ecx,%ecx
   1295f:	48 f7 e2             	mul    %rdx
   12962:	49 89 c4             	mov    %rax,%r12
   12965:	0f 90 c0             	seto   %al
   12968:	0f 91 c1             	setno  %cl
   1296b:	48 c1 e1 03          	shl    $0x3,%rcx
   1296f:	48 85 f6             	test   %rsi,%rsi
   12972:	74 29                	je     1299d <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0x9d>
   12974:	84 c0                	test   %al,%al
   12976:	0f 85 83 00 00 00    	jne    129ff <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xff>
   1297c:	48 8b 3b             	mov    (%rbx),%rdi
   1297f:	48 85 ff             	test   %rdi,%rdi
   12982:	74 1d                	je     129a1 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xa1>
   12984:	48 c1 e6 05          	shl    $0x5,%rsi
   12988:	74 17                	je     129a1 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xa1>
   1298a:	48 89 ca             	mov    %rcx,%rdx
   1298d:	4c 89 e1             	mov    %r12,%rcx
   12990:	ff 15 e2 35 03 00    	callq  *0x335e2(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
   12996:	eb 1a                	jmp    129b2 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xb2>
   12998:	48 8b 0b             	mov    (%rbx),%rcx
   1299b:	eb 2c                	jmp    129c9 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xc9>
   1299d:	84 c0                	test   %al,%al
   1299f:	75 5e                	jne    129ff <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xff>
   129a1:	4d 85 e4             	test   %r12,%r12
   129a4:	74 0f                	je     129b5 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xb5>
   129a6:	4c 89 e7             	mov    %r12,%rdi
   129a9:	48 89 ce             	mov    %rcx,%rsi
   129ac:	ff 15 d6 31 03 00    	callq  *0x331d6(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   129b2:	48 89 c1             	mov    %rax,%rcx
   129b5:	48 85 c9             	test   %rcx,%rcx
   129b8:	74 4d                	je     12a07 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0x107>
   129ba:	48 89 0b             	mov    %rcx,(%rbx)
   129bd:	49 c1 ec 05          	shr    $0x5,%r12
   129c1:	4c 89 63 08          	mov    %r12,0x8(%rbx)
   129c5:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   129c9:	48 c1 e6 05          	shl    $0x5,%rsi
   129cd:	48 89 2c 31          	mov    %rbp,(%rcx,%rsi,1)
   129d1:	48 c7 44 31 08 00 00 	movq   $0x0,0x8(%rcx,%rsi,1)
   129d8:	00 00 
   129da:	4c 89 6c 31 10       	mov    %r13,0x10(%rcx,%rsi,1)
   129df:	4c 89 7c 31 18       	mov    %r15,0x18(%rcx,%rsi,1)
   129e4:	48 83 43 10 01       	addq   $0x1,0x10(%rbx)
   129e9:	49 8b 46 08          	mov    0x8(%r14),%rax
   129ed:	c6 00 01             	movb   $0x1,(%rax)
   129f0:	48 83 c4 08          	add    $0x8,%rsp
   129f4:	5b                   	pop    %rbx
   129f5:	41 5c                	pop    %r12
   129f7:	41 5d                	pop    %r13
   129f9:	41 5e                	pop    %r14
   129fb:	41 5f                	pop    %r15
   129fd:	5d                   	pop    %rbp
   129fe:	c3                   	retq   
   129ff:	ff 15 e3 30 03 00    	callq  *0x330e3(%rip)        # 45ae8 <_GLOBAL_OFFSET_TABLE_+0x158>
   12a05:	0f 0b                	ud2    
   12a07:	be 08 00 00 00       	mov    $0x8,%esi
   12a0c:	4c 89 e7             	mov    %r12,%rdi
   12a0f:	ff 15 13 31 03 00    	callq  *0x33113(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   12a15:	0f 0b                	ud2    
   12a17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   12a1e:	00 00 

0000000000012a20 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}>:
   12a20:	55                   	push   %rbp
   12a21:	41 57                	push   %r15
   12a23:	41 56                	push   %r14
   12a25:	41 55                	push   %r13
   12a27:	41 54                	push   %r12
   12a29:	53                   	push   %rbx
   12a2a:	50                   	push   %rax
   12a2b:	48 39 d6             	cmp    %rdx,%rsi
   12a2e:	0f 83 ea 00 00 00    	jae    12b1e <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xfe>
   12a34:	49 89 d7             	mov    %rdx,%r15
   12a37:	49 89 f5             	mov    %rsi,%r13
   12a3a:	49 89 fe             	mov    %rdi,%r14
   12a3d:	48 8b 07             	mov    (%rdi),%rax
   12a40:	48 8b 18             	mov    (%rax),%rbx
   12a43:	48 8b 40 08          	mov    0x8(%rax),%rax
   12a47:	48 8b 28             	mov    (%rax),%rbp
   12a4a:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   12a4e:	48 3b 73 08          	cmp    0x8(%rbx),%rsi
   12a52:	75 6b                	jne    12abf <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0x9f>
   12a54:	48 89 f1             	mov    %rsi,%rcx
   12a57:	48 ff c1             	inc    %rcx
   12a5a:	0f 84 cd 00 00 00    	je     12b2d <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0x10d>
   12a60:	48 8d 04 36          	lea    (%rsi,%rsi,1),%rax
   12a64:	48 39 c8             	cmp    %rcx,%rax
   12a67:	48 0f 47 c8          	cmova  %rax,%rcx
   12a6b:	48 83 f9 04          	cmp    $0x4,%rcx
   12a6f:	b8 04 00 00 00       	mov    $0x4,%eax
   12a74:	48 0f 47 c1          	cmova  %rcx,%rax
   12a78:	ba 18 00 00 00       	mov    $0x18,%edx
   12a7d:	31 c9                	xor    %ecx,%ecx
   12a7f:	48 f7 e2             	mul    %rdx
   12a82:	49 89 c4             	mov    %rax,%r12
   12a85:	0f 90 c0             	seto   %al
   12a88:	0f 91 c1             	setno  %cl
   12a8b:	48 c1 e1 03          	shl    $0x3,%rcx
   12a8f:	48 85 f6             	test   %rsi,%rsi
   12a92:	74 30                	je     12ac4 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xa4>
   12a94:	84 c0                	test   %al,%al
   12a96:	0f 85 91 00 00 00    	jne    12b2d <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0x10d>
   12a9c:	48 8b 3b             	mov    (%rbx),%rdi
   12a9f:	48 85 ff             	test   %rdi,%rdi
   12aa2:	74 24                	je     12ac8 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xa8>
   12aa4:	48 c1 e6 03          	shl    $0x3,%rsi
   12aa8:	48 8d 34 76          	lea    (%rsi,%rsi,2),%rsi
   12aac:	48 85 f6             	test   %rsi,%rsi
   12aaf:	74 17                	je     12ac8 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xa8>
   12ab1:	48 89 ca             	mov    %rcx,%rdx
   12ab4:	4c 89 e1             	mov    %r12,%rcx
   12ab7:	ff 15 bb 34 03 00    	callq  *0x334bb(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
   12abd:	eb 1a                	jmp    12ad9 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xb9>
   12abf:	48 8b 0b             	mov    (%rbx),%rcx
   12ac2:	eb 3c                	jmp    12b00 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xe0>
   12ac4:	84 c0                	test   %al,%al
   12ac6:	75 65                	jne    12b2d <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0x10d>
   12ac8:	4d 85 e4             	test   %r12,%r12
   12acb:	74 0f                	je     12adc <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xbc>
   12acd:	4c 89 e7             	mov    %r12,%rdi
   12ad0:	48 89 ce             	mov    %rcx,%rsi
   12ad3:	ff 15 af 30 03 00    	callq  *0x330af(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   12ad9:	48 89 c1             	mov    %rax,%rcx
   12adc:	48 85 c9             	test   %rcx,%rcx
   12adf:	74 54                	je     12b35 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0x115>
   12ae1:	48 ba ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rdx
   12ae8:	aa aa aa 
   12aeb:	4c 89 e0             	mov    %r12,%rax
   12aee:	48 f7 e2             	mul    %rdx
   12af1:	48 89 0b             	mov    %rcx,(%rbx)
   12af4:	48 c1 ea 04          	shr    $0x4,%rdx
   12af8:	48 89 53 08          	mov    %rdx,0x8(%rbx)
   12afc:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   12b00:	48 8d 04 76          	lea    (%rsi,%rsi,2),%rax
   12b04:	4c 89 2c c1          	mov    %r13,(%rcx,%rax,8)
   12b08:	4c 89 7c c1 08       	mov    %r15,0x8(%rcx,%rax,8)
   12b0d:	48 89 6c c1 10       	mov    %rbp,0x10(%rcx,%rax,8)
   12b12:	48 83 43 10 01       	addq   $0x1,0x10(%rbx)
   12b17:	49 8b 46 08          	mov    0x8(%r14),%rax
   12b1b:	c6 00 01             	movb   $0x1,(%rax)
   12b1e:	48 83 c4 08          	add    $0x8,%rsp
   12b22:	5b                   	pop    %rbx
   12b23:	41 5c                	pop    %r12
   12b25:	41 5d                	pop    %r13
   12b27:	41 5e                	pop    %r14
   12b29:	41 5f                	pop    %r15
   12b2b:	5d                   	pop    %rbp
   12b2c:	c3                   	retq   
   12b2d:	ff 15 b5 2f 03 00    	callq  *0x32fb5(%rip)        # 45ae8 <_GLOBAL_OFFSET_TABLE_+0x158>
   12b33:	0f 0b                	ud2    
   12b35:	be 08 00 00 00       	mov    $0x8,%esi
   12b3a:	4c 89 e7             	mov    %r12,%rdi
   12b3d:	ff 15 e5 2f 03 00    	callq  *0x32fe5(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   12b43:	0f 0b                	ud2    
   12b45:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   12b4c:	00 00 00 
   12b4f:	90                   	nop

0000000000012b50 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}>:
   12b50:	55                   	push   %rbp
   12b51:	41 57                	push   %r15
   12b53:	41 56                	push   %r14
   12b55:	41 55                	push   %r13
   12b57:	41 54                	push   %r12
   12b59:	53                   	push   %rbx
   12b5a:	50                   	push   %rax
   12b5b:	48 39 d6             	cmp    %rdx,%rsi
   12b5e:	0f 83 ea 00 00 00    	jae    12c4e <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xfe>
   12b64:	49 89 d7             	mov    %rdx,%r15
   12b67:	49 89 f5             	mov    %rsi,%r13
   12b6a:	49 89 fe             	mov    %rdi,%r14
   12b6d:	48 8b 07             	mov    (%rdi),%rax
   12b70:	48 8b 08             	mov    (%rax),%rcx
   12b73:	48 8b 50 08          	mov    0x8(%rax),%rdx
   12b77:	48 8b 19             	mov    (%rcx),%rbx
   12b7a:	48 8b 12             	mov    (%rdx),%rdx
   12b7d:	48 8b 40 10          	mov    0x10(%rax),%rax
   12b81:	48 8b 28             	mov    (%rax),%rbp
   12b84:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   12b88:	48 3b 73 08          	cmp    0x8(%rbx),%rsi
   12b8c:	75 68                	jne    12bf6 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xa6>
   12b8e:	48 89 14 24          	mov    %rdx,(%rsp)
   12b92:	48 89 f1             	mov    %rsi,%rcx
   12b95:	48 ff c1             	inc    %rcx
   12b98:	0f 84 bf 00 00 00    	je     12c5d <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0x10d>
   12b9e:	48 8d 04 36          	lea    (%rsi,%rsi,1),%rax
   12ba2:	48 39 c8             	cmp    %rcx,%rax
   12ba5:	48 0f 47 c8          	cmova  %rax,%rcx
   12ba9:	48 83 f9 04          	cmp    $0x4,%rcx
   12bad:	b8 04 00 00 00       	mov    $0x4,%eax
   12bb2:	48 0f 47 c1          	cmova  %rcx,%rax
   12bb6:	ba 20 00 00 00       	mov    $0x20,%edx
   12bbb:	31 c9                	xor    %ecx,%ecx
   12bbd:	48 f7 e2             	mul    %rdx
   12bc0:	49 89 c4             	mov    %rax,%r12
   12bc3:	0f 90 c0             	seto   %al
   12bc6:	0f 91 c1             	setno  %cl
   12bc9:	48 c1 e1 03          	shl    $0x3,%rcx
   12bcd:	48 85 f6             	test   %rsi,%rsi
   12bd0:	74 29                	je     12bfb <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xab>
   12bd2:	84 c0                	test   %al,%al
   12bd4:	0f 85 83 00 00 00    	jne    12c5d <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0x10d>
   12bda:	48 8b 3b             	mov    (%rbx),%rdi
   12bdd:	48 85 ff             	test   %rdi,%rdi
   12be0:	74 1d                	je     12bff <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xaf>
   12be2:	48 c1 e6 05          	shl    $0x5,%rsi
   12be6:	74 17                	je     12bff <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xaf>
   12be8:	48 89 ca             	mov    %rcx,%rdx
   12beb:	4c 89 e1             	mov    %r12,%rcx
   12bee:	ff 15 84 33 03 00    	callq  *0x33384(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
   12bf4:	eb 1a                	jmp    12c10 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xc0>
   12bf6:	48 8b 0b             	mov    (%rbx),%rcx
   12bf9:	eb 30                	jmp    12c2b <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xdb>
   12bfb:	84 c0                	test   %al,%al
   12bfd:	75 5e                	jne    12c5d <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0x10d>
   12bff:	4d 85 e4             	test   %r12,%r12
   12c02:	74 0f                	je     12c13 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0xc3>
   12c04:	4c 89 e7             	mov    %r12,%rdi
   12c07:	48 89 ce             	mov    %rcx,%rsi
   12c0a:	ff 15 78 2f 03 00    	callq  *0x32f78(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   12c10:	48 89 c1             	mov    %rax,%rcx
   12c13:	48 85 c9             	test   %rcx,%rcx
   12c16:	74 4d                	je     12c65 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}+0x115>
   12c18:	48 89 0b             	mov    %rcx,(%rbx)
   12c1b:	49 c1 ec 05          	shr    $0x5,%r12
   12c1f:	4c 89 63 08          	mov    %r12,0x8(%rbx)
   12c23:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   12c27:	48 8b 14 24          	mov    (%rsp),%rdx
   12c2b:	48 c1 e6 05          	shl    $0x5,%rsi
   12c2f:	4c 89 2c 31          	mov    %r13,(%rcx,%rsi,1)
   12c33:	4c 89 7c 31 08       	mov    %r15,0x8(%rcx,%rsi,1)
   12c38:	48 89 54 31 10       	mov    %rdx,0x10(%rcx,%rsi,1)
   12c3d:	48 89 6c 31 18       	mov    %rbp,0x18(%rcx,%rsi,1)
   12c42:	48 83 43 10 01       	addq   $0x1,0x10(%rbx)
   12c47:	49 8b 46 08          	mov    0x8(%r14),%rax
   12c4b:	c6 00 01             	movb   $0x1,(%rax)
   12c4e:	48 83 c4 08          	add    $0x8,%rsp
   12c52:	5b                   	pop    %rbx
   12c53:	41 5c                	pop    %r12
   12c55:	41 5d                	pop    %r13
   12c57:	41 5e                	pop    %r14
   12c59:	41 5f                	pop    %r15
   12c5b:	5d                   	pop    %rbp
   12c5c:	c3                   	retq   
   12c5d:	ff 15 85 2e 03 00    	callq  *0x32e85(%rip)        # 45ae8 <_GLOBAL_OFFSET_TABLE_+0x158>
   12c63:	0f 0b                	ud2    
   12c65:	be 08 00 00 00       	mov    $0x8,%esi
   12c6a:	4c 89 e7             	mov    %r12,%rdi
   12c6d:	ff 15 b5 2e 03 00    	callq  *0x32eb5(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   12c73:	0f 0b                	ud2    
   12c75:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   12c7c:	00 00 00 
   12c7f:	90                   	nop

0000000000012c80 <addr2line::name_attr>:
   12c80:	55                   	push   %rbp
   12c81:	41 57                	push   %r15
   12c83:	41 56                	push   %r14
   12c85:	41 55                	push   %r13
   12c87:	41 54                	push   %r12
   12c89:	53                   	push   %rbx
   12c8a:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
   12c91:	49 89 fe             	mov    %rdi,%r14
   12c94:	4c 8b a4 24 f8 00 00 	mov    0xf8(%rsp),%r12
   12c9b:	00 
   12c9c:	4d 85 e4             	test   %r12,%r12
   12c9f:	0f 84 79 04 00 00    	je     1311e <addr2line::name_attr+0x49e>
   12ca5:	4c 89 cb             	mov    %r9,%rbx
   12ca8:	4d 89 c7             	mov    %r8,%r15
   12cab:	49 89 cd             	mov    %rcx,%r13
   12cae:	4c 8b 84 24 f0 00 00 	mov    0xf0(%rsp),%r8
   12cb5:	00 
   12cb6:	48 83 fe 0d          	cmp    $0xd,%rsi
   12cba:	0f 84 a7 00 00 00    	je     12d67 <addr2line::name_attr+0xe7>
   12cc0:	48 83 fe 0e          	cmp    $0xe,%rsi
   12cc4:	0f 85 54 04 00 00    	jne    1311e <addr2line::name_attr+0x49e>
   12cca:	4d 85 c0             	test   %r8,%r8
   12ccd:	0f 84 62 03 00 00    	je     13035 <addr2line::name_attr+0x3b5>
   12cd3:	31 ff                	xor    %edi,%edi
   12cd5:	49 83 f8 01          	cmp    $0x1,%r8
   12cd9:	0f 85 58 01 00 00    	jne    12e37 <addr2line::name_attr+0x1b7>
   12cdf:	48 89 f8             	mov    %rdi,%rax
   12ce2:	48 c1 e0 09          	shl    $0x9,%rax
   12ce6:	48 8d 04 f8          	lea    (%rax,%rdi,8),%rax
   12cea:	48 39 14 03          	cmp    %rdx,(%rbx,%rax,1)
   12cee:	0f 84 41 03 00 00    	je     13035 <addr2line::name_attr+0x3b5>
   12cf4:	0f 92 c0             	setb   %al
   12cf7:	0f b6 c0             	movzbl %al,%eax
   12cfa:	48 01 c7             	add    %rax,%rdi
   12cfd:	0f 84 32 03 00 00    	je     13035 <addr2line::name_attr+0x3b5>
   12d03:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   12d07:	4c 39 c7             	cmp    %r8,%rdi
   12d0a:	0f 83 66 04 00 00    	jae    13176 <addr2line::name_attr+0x4f6>
   12d10:	48 89 f8             	mov    %rdi,%rax
   12d13:	48 c1 e0 09          	shl    $0x9,%rax
   12d17:	48 8d 04 f8          	lea    (%rax,%rdi,8),%rax
   12d1b:	48 2b 14 03          	sub    (%rbx,%rax,1),%rdx
   12d1f:	31 c9                	xor    %ecx,%ecx
   12d21:	80 7c 03 39 08       	cmpb   $0x8,0x39(%rbx,%rax,1)
   12d26:	0f 94 c1             	sete   %cl
   12d29:	48 8b 74 03 18       	mov    0x18(%rbx,%rax,1),%rsi
   12d2e:	48 8b 7c 03 30       	mov    0x30(%rbx,%rax,1),%rdi
   12d33:	48 29 fe             	sub    %rdi,%rsi
   12d36:	48 8d 0c ce          	lea    (%rsi,%rcx,8),%rcx
   12d3a:	48 83 c1 04          	add    $0x4,%rcx
   12d3e:	48 29 ca             	sub    %rcx,%rdx
   12d41:	0f 82 d4 00 00 00    	jb     12e1b <addr2line::name_attr+0x19b>
   12d47:	48 29 d7             	sub    %rdx,%rdi
   12d4a:	0f 86 cb 00 00 00    	jbe    12e1b <addr2line::name_attr+0x19b>
   12d50:	4c 8d 14 03          	lea    (%rbx,%rax,1),%r10
   12d54:	49 83 c2 18          	add    $0x18,%r10
   12d58:	4c 8d 04 03          	lea    (%rbx,%rax,1),%r8
   12d5c:	49 83 c0 40          	add    $0x40,%r8
   12d60:	48 03 54 03 28       	add    0x28(%rbx,%rax,1),%rdx
   12d65:	eb 3b                	jmp    12da2 <addr2line::name_attr+0x122>
   12d67:	31 c0                	xor    %eax,%eax
   12d69:	41 80 7d 31 08       	cmpb   $0x8,0x31(%r13)
   12d6e:	0f 94 c0             	sete   %al
   12d71:	49 8b 4d 10          	mov    0x10(%r13),%rcx
   12d75:	49 8b 7d 28          	mov    0x28(%r13),%rdi
   12d79:	48 29 f9             	sub    %rdi,%rcx
   12d7c:	48 8d 04 c1          	lea    (%rcx,%rax,8),%rax
   12d80:	48 83 c0 04          	add    $0x4,%rax
   12d84:	48 29 c2             	sub    %rax,%rdx
   12d87:	0f 82 8e 00 00 00    	jb     12e1b <addr2line::name_attr+0x19b>
   12d8d:	48 29 d7             	sub    %rdx,%rdi
   12d90:	0f 86 85 00 00 00    	jbe    12e1b <addr2line::name_attr+0x19b>
   12d96:	4d 8d 55 10          	lea    0x10(%r13),%r10
   12d9a:	4d 8d 45 38          	lea    0x38(%r13),%r8
   12d9e:	49 03 55 20          	add    0x20(%r13),%rdx
   12da2:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   12da7:	48 89 7c 24 40       	mov    %rdi,0x40(%rsp)
   12dac:	4c 89 54 24 48       	mov    %r10,0x48(%rsp)
   12db1:	4c 89 44 24 50       	mov    %r8,0x50(%rsp)
   12db6:	48 c7 44 24 58 00 00 	movq   $0x0,0x58(%rsp)
   12dbd:	00 00 
   12dbf:	41 b9 13 00 00 00    	mov    $0x13,%r9d
   12dc5:	48 85 ff             	test   %rdi,%rdi
   12dc8:	0f 84 a7 00 00 00    	je     12e75 <addr2line::name_attr+0x1f5>
   12dce:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   12dd2:	31 f6                	xor    %esi,%esi
   12dd4:	31 c9                	xor    %ecx,%ecx
   12dd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   12ddd:	00 00 00 
   12de0:	48 89 d0             	mov    %rdx,%rax
   12de3:	48 83 c2 01          	add    $0x1,%rdx
   12de7:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   12dec:	48 89 7c 24 40       	mov    %rdi,0x40(%rsp)
   12df1:	0f b6 00             	movzbl (%rax),%eax
   12df4:	83 f9 3f             	cmp    $0x3f,%ecx
   12df7:	75 04                	jne    12dfd <addr2line::name_attr+0x17d>
   12df9:	3c 01                	cmp    $0x1,%al
   12dfb:	77 70                	ja     12e6d <addr2line::name_attr+0x1ed>
   12dfd:	0f b6 e8             	movzbl %al,%ebp
   12e00:	89 e8                	mov    %ebp,%eax
   12e02:	83 e0 7f             	and    $0x7f,%eax
   12e05:	48 d3 e0             	shl    %cl,%rax
   12e08:	48 09 c6             	or     %rax,%rsi
   12e0b:	40 84 ed             	test   %bpl,%bpl
   12e0e:	79 79                	jns    12e89 <addr2line::name_attr+0x209>
   12e10:	83 c1 07             	add    $0x7,%ecx
   12e13:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   12e17:	72 c7                	jb     12de0 <addr2line::name_attr+0x160>
   12e19:	eb 5a                	jmp    12e75 <addr2line::name_attr+0x1f5>
   12e1b:	49 c7 46 10 00 00 00 	movq   $0x0,0x10(%r14)
   12e22:	00 
   12e23:	49 c7 46 08 37 00 00 	movq   $0x37,0x8(%r14)
   12e2a:	00 
   12e2b:	49 c7 06 01 00 00 00 	movq   $0x1,(%r14)
   12e32:	e9 ee 02 00 00       	jmpq   13125 <addr2line::name_attr+0x4a5>
   12e37:	4c 89 c0             	mov    %r8,%rax
   12e3a:	e9 0e 00 00 00       	jmpq   12e4d <addr2line::name_attr+0x1cd>
   12e3f:	90                   	nop
   12e40:	48 29 c8             	sub    %rcx,%rax
   12e43:	48 83 f8 01          	cmp    $0x1,%rax
   12e47:	0f 86 92 fe ff ff    	jbe    12cdf <addr2line::name_attr+0x5f>
   12e4d:	48 89 c1             	mov    %rax,%rcx
   12e50:	48 d1 e9             	shr    %rcx
   12e53:	48 8d 2c 39          	lea    (%rcx,%rdi,1),%rbp
   12e57:	48 89 ee             	mov    %rbp,%rsi
   12e5a:	48 c1 e6 09          	shl    $0x9,%rsi
   12e5e:	48 8d 34 ee          	lea    (%rsi,%rbp,8),%rsi
   12e62:	48 39 14 33          	cmp    %rdx,(%rbx,%rsi,1)
   12e66:	77 d8                	ja     12e40 <addr2line::name_attr+0x1c0>
   12e68:	48 89 ef             	mov    %rbp,%rdi
   12e6b:	eb d3                	jmp    12e40 <addr2line::name_attr+0x1c0>
   12e6d:	41 b9 06 00 00 00    	mov    $0x6,%r9d
   12e73:	31 d2                	xor    %edx,%edx
   12e75:	49 89 56 10          	mov    %rdx,0x10(%r14)
   12e79:	4d 89 4e 08          	mov    %r9,0x8(%r14)
   12e7d:	49 c7 06 01 00 00 00 	movq   $0x1,(%r14)
   12e84:	e9 9c 02 00 00       	jmpq   13125 <addr2line::name_attr+0x4a5>
   12e89:	48 85 f6             	test   %rsi,%rsi
   12e8c:	0f 84 9a 01 00 00    	je     1302c <addr2line::name_attr+0x3ac>
   12e92:	48 8d 46 ff          	lea    -0x1(%rsi),%rax
   12e96:	49 3b 40 10          	cmp    0x10(%r8),%rax
   12e9a:	4c 89 94 24 80 00 00 	mov    %r10,0x80(%rsp)
   12ea1:	00 
   12ea2:	0f 83 9e 01 00 00    	jae    13046 <addr2line::name_attr+0x3c6>
   12ea8:	48 6b f8 70          	imul   $0x70,%rax,%rdi
   12eac:	49 03 38             	add    (%r8),%rdi
   12eaf:	80 7f 6a 01          	cmpb   $0x1,0x6a(%rdi)
   12eb3:	75 09                	jne    12ebe <addr2line::name_attr+0x23e>
   12eb5:	48 c7 44 24 58 01 00 	movq   $0x1,0x58(%rsp)
   12ebc:	00 00 
   12ebe:	48 83 c7 08          	add    $0x8,%rdi
   12ec2:	ff 15 c8 2b 03 00    	callq  *0x32bc8(%rip)        # 45a90 <_GLOBAL_OFFSET_TABLE_+0x100>
   12ec8:	48 85 d2             	test   %rdx,%rdx
   12ecb:	0f 84 4d 02 00 00    	je     1311e <addr2line::name_attr+0x49e>
   12ed1:	48 89 c5             	mov    %rax,%rbp
   12ed4:	48 c1 e2 04          	shl    $0x4,%rdx
   12ed8:	48 01 c2             	add    %rax,%rdx
   12edb:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   12ee0:	b8 2d 00 00 00       	mov    $0x2d,%eax
   12ee5:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   12eea:	31 c0                	xor    %eax,%eax
   12eec:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   12ef1:	48 8b 84 24 80 00 00 	mov    0x80(%rsp),%rax
   12ef8:	00 
   12ef9:	48 8b 4d 00          	mov    0x0(%rbp),%rcx
   12efd:	8b 50 20             	mov    0x20(%rax),%edx
   12f00:	44 0f b7 4d 0a       	movzwl 0xa(%rbp),%r9d
   12f05:	44 8b 45 08          	mov    0x8(%rbp),%r8d
   12f09:	48 8d bc 24 90 00 00 	lea    0x90(%rsp),%rdi
   12f10:	00 
   12f11:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   12f16:	e8 b5 78 ff ff       	callq  a7d0 <gimli::read::unit::parse_attribute>
   12f1b:	83 bc 24 90 00 00 00 	cmpl   $0x1,0x90(%rsp)
   12f22:	01 
   12f23:	0f 84 b1 01 00 00    	je     130da <addr2line::name_attr+0x45a>
   12f29:	0f b7 84 24 b0 00 00 	movzwl 0xb0(%rsp),%eax
   12f30:	00 
   12f31:	66 83 f8 46          	cmp    $0x46,%ax
   12f35:	7e 55                	jle    12f8c <addr2line::name_attr+0x30c>
   12f37:	66 83 f8 47          	cmp    $0x47,%ax
   12f3b:	74 5b                	je     12f98 <addr2line::name_attr+0x318>
   12f3d:	0f b7 c8             	movzwl %ax,%ecx
   12f40:	81 f9 07 20 00 00    	cmp    $0x2007,%ecx
   12f46:	74 06                	je     12f4e <addr2line::name_attr+0x2ce>
   12f48:	66 83 f8 6e          	cmp    $0x6e,%ax
   12f4c:	75 73                	jne    12fc1 <addr2line::name_attr+0x341>
   12f4e:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   12f53:	48 8d b4 24 98 00 00 	lea    0x98(%rsp),%rsi
   12f5a:	00 
   12f5b:	e8 b0 8a ff ff       	callq  ba10 <gimli::read::unit::Attribute<R>::value>
   12f60:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   12f65:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   12f6a:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   12f6f:	48 8d 7c 24 60       	lea    0x60(%rsp),%rdi
   12f74:	4c 89 fe             	mov    %r15,%rsi
   12f77:	4c 89 ea             	mov    %r13,%rdx
   12f7a:	e8 31 92 ff ff       	callq  c1b0 <gimli::read::dwarf::Dwarf<R>::attr_string>
   12f7f:	48 83 7c 24 60 00    	cmpq   $0x0,0x60(%rsp)
   12f85:	75 3a                	jne    12fc1 <addr2line::name_attr+0x341>
   12f87:	e9 ab 01 00 00       	jmpq   13137 <addr2line::name_attr+0x4b7>
   12f8c:	66 83 f8 03          	cmp    $0x3,%ax
   12f90:	74 4b                	je     12fdd <addr2line::name_attr+0x35d>
   12f92:	66 83 f8 31          	cmp    $0x31,%ax
   12f96:	75 29                	jne    12fc1 <addr2line::name_attr+0x341>
   12f98:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   12f9d:	48 8d b4 24 98 00 00 	lea    0x98(%rsp),%rsi
   12fa4:	00 
   12fa5:	e8 66 8a ff ff       	callq  ba10 <gimli::read::unit::Attribute<R>::value>
   12faa:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   12faf:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   12fb4:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   12fb9:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
   12fc0:	00 
   12fc1:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   12fc6:	48 83 c5 10          	add    $0x10,%rbp
   12fca:	48 39 c5             	cmp    %rax,%rbp
   12fcd:	0f 84 20 01 00 00    	je     130f3 <addr2line::name_attr+0x473>
   12fd3:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   12fd8:	e9 1c ff ff ff       	jmpq   12ef9 <addr2line::name_attr+0x279>
   12fdd:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   12fe2:	48 8d b4 24 98 00 00 	lea    0x98(%rsp),%rsi
   12fe9:	00 
   12fea:	e8 21 8a ff ff       	callq  ba10 <gimli::read::unit::Attribute<R>::value>
   12fef:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   12ff4:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   12ff9:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   12ffe:	48 8d 7c 24 60       	lea    0x60(%rsp),%rdi
   13003:	4c 89 fe             	mov    %r15,%rsi
   13006:	4c 89 ea             	mov    %r13,%rdx
   13009:	e8 a2 91 ff ff       	callq  c1b0 <gimli::read::dwarf::Dwarf<R>::attr_string>
   1300e:	48 83 7c 24 60 00    	cmpq   $0x0,0x60(%rsp)
   13014:	75 ab                	jne    12fc1 <addr2line::name_attr+0x341>
   13016:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
   1301b:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   13020:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   13025:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   1302a:	eb 95                	jmp    12fc1 <addr2line::name_attr+0x341>
   1302c:	48 c7 44 24 58 ff ff 	movq   $0xffffffffffffffff,0x58(%rsp)
   13033:	ff ff 
   13035:	41 c6 46 08 36       	movb   $0x36,0x8(%r14)
   1303a:	49 c7 06 01 00 00 00 	movq   $0x1,(%r14)
   13041:	e9 df 00 00 00       	jmpq   13125 <addr2line::name_attr+0x4a5>
   13046:	4d 8b 58 18          	mov    0x18(%r8),%r11
   1304a:	41 b9 12 00 00 00    	mov    $0x12,%r9d
   13050:	4d 85 db             	test   %r11,%r11
   13053:	0f 84 1a fe ff ff    	je     12e73 <addr2line::name_attr+0x1f3>
   13059:	49 8b 40 20          	mov    0x20(%r8),%rax
   1305d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   13062:	31 d2                	xor    %edx,%edx
   13064:	45 0f b7 93 32 05 00 	movzwl 0x532(%r11),%r10d
   1306b:	00 
   1306c:	49 8d 7b f0          	lea    -0x10(%r11),%rdi
   13070:	4c 89 d1             	mov    %r10,%rcx
   13073:	48 f7 d9             	neg    %rcx
   13076:	48 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%rbp
   1307d:	48 8d 04 29          	lea    (%rcx,%rbp,1),%rax
   13081:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   13085:	74 2f                	je     130b6 <addr2line::name_attr+0x436>
   13087:	45 31 c0             	xor    %r8d,%r8d
   1308a:	49 39 74 eb 10       	cmp    %rsi,0x10(%r11,%rbp,8)
   1308f:	41 0f 95 c0          	setne  %r8b
   13093:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   1309a:	4c 0f 47 c0          	cmova  %rax,%r8
   1309e:	48 83 c5 01          	add    $0x1,%rbp
   130a2:	49 83 f8 ff          	cmp    $0xffffffffffffffff,%r8
   130a6:	74 11                	je     130b9 <addr2line::name_attr+0x439>
   130a8:	48 83 c7 70          	add    $0x70,%rdi
   130ac:	4d 85 c0             	test   %r8,%r8
   130af:	75 cc                	jne    1307d <addr2line::name_attr+0x3fd>
   130b1:	e9 f9 fd ff ff       	jmpq   12eaf <addr2line::name_attr+0x22f>
   130b6:	4c 89 d5             	mov    %r10,%rbp
   130b9:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   130be:	48 85 c0             	test   %rax,%rax
   130c1:	0f 84 ae fd ff ff    	je     12e75 <addr2line::name_attr+0x1f5>
   130c7:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
   130cb:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   130d0:	4d 8b 9c eb 38 05 00 	mov    0x538(%r11,%rbp,8),%r11
   130d7:	00 
   130d8:	eb 8a                	jmp    13064 <addr2line::name_attr+0x3e4>
   130da:	48 8d 84 24 98 00 00 	lea    0x98(%rsp),%rax
   130e1:	00 
   130e2:	0f 10 00             	movups (%rax),%xmm0
   130e5:	41 0f 11 46 08       	movups %xmm0,0x8(%r14)
   130ea:	49 c7 06 01 00 00 00 	movq   $0x1,(%r14)
   130f1:	eb 32                	jmp    13125 <addr2line::name_attr+0x4a5>
   130f3:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   130f8:	48 85 c0             	test   %rax,%rax
   130fb:	74 16                	je     13113 <addr2line::name_attr+0x493>
   130fd:	49 89 46 08          	mov    %rax,0x8(%r14)
   13101:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   13106:	49 89 46 10          	mov    %rax,0x10(%r14)
   1310a:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
   13111:	eb 12                	jmp    13125 <addr2line::name_attr+0x4a5>
   13113:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   13118:	48 83 fe 2d          	cmp    $0x2d,%rsi
   1311c:	75 2c                	jne    1314a <addr2line::name_attr+0x4ca>
   1311e:	0f 57 c0             	xorps  %xmm0,%xmm0
   13121:	41 0f 11 06          	movups %xmm0,(%r14)
   13125:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
   1312c:	5b                   	pop    %rbx
   1312d:	41 5c                	pop    %r12
   1312f:	41 5d                	pop    %r13
   13131:	41 5e                	pop    %r14
   13133:	41 5f                	pop    %r15
   13135:	5d                   	pop    %rbp
   13136:	c3                   	retq   
   13137:	0f 10 44 24 68       	movups 0x68(%rsp),%xmm0
   1313c:	41 0f 11 46 08       	movups %xmm0,0x8(%r14)
   13141:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
   13148:	eb db                	jmp    13125 <addr2line::name_attr+0x4a5>
   1314a:	49 83 c4 ff          	add    $0xffffffffffffffff,%r12
   1314e:	4c 89 f7             	mov    %r14,%rdi
   13151:	48 8b 94 24 88 00 00 	mov    0x88(%rsp),%rdx
   13158:	00 
   13159:	4c 89 e9             	mov    %r13,%rcx
   1315c:	4d 89 f8             	mov    %r15,%r8
   1315f:	49 89 d9             	mov    %rbx,%r9
   13162:	41 54                	push   %r12
   13164:	ff b4 24 f8 00 00 00 	pushq  0xf8(%rsp)
   1316b:	e8 10 fb ff ff       	callq  12c80 <addr2line::name_attr>
   13170:	48 83 c4 10          	add    $0x10,%rsp
   13174:	eb af                	jmp    13125 <addr2line::name_attr+0x4a5>
   13176:	48 8d 15 5b 09 03 00 	lea    0x3095b(%rip),%rdx        # 43ad8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x580>
   1317d:	4c 89 c6             	mov    %r8,%rsi
   13180:	ff 15 12 2b 03 00    	callq  *0x32b12(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   13186:	0f 0b                	ud2    
   13188:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1318f:	00 

0000000000013190 <<std::thread::local::AccessError as core::fmt::Debug>::fmt>:
   13190:	48 83 ec 18          	sub    $0x18,%rsp
   13194:	48 89 f7             	mov    %rsi,%rdi
   13197:	48 8d 35 a5 46 02 00 	lea    0x246a5(%rip),%rsi        # 37843 <str.6+0x523>
   1319e:	ba 0b 00 00 00       	mov    $0xb,%edx
   131a3:	ff 15 97 28 03 00    	callq  *0x32897(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb0>
   131a9:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   131ae:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   131b3:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   131b8:	ff 15 1a 2a 03 00    	callq  *0x32a1a(%rip)        # 45bd8 <_GLOBAL_OFFSET_TABLE_+0x248>
   131be:	48 83 c4 18          	add    $0x18,%rsp
   131c2:	c3                   	retq   
   131c3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   131ca:	00 00 00 
   131cd:	0f 1f 00             	nopl   (%rax)

00000000000131d0 <std::thread::local::LocalKey<T>::try_with>:
   131d0:	41 57                	push   %r15
   131d2:	41 56                	push   %r14
   131d4:	53                   	push   %rbx
   131d5:	48 83 ec 30          	sub    $0x30,%rsp
   131d9:	49 89 d6             	mov    %rdx,%r14
   131dc:	48 89 f3             	mov    %rsi,%rbx
   131df:	49 89 ff             	mov    %rdi,%r15
   131e2:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   131e7:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   131ec:	66 66 66 64 48 8b 04 	data16 data16 data16 mov %fs:0x0,%rax
   131f3:	25 00 00 00 00 
   131f8:	83 b8 60 ff ff ff 01 	cmpl   $0x1,-0xa0(%rax)
   131ff:	75 09                	jne    1320a <std::thread::local::LocalKey<T>::try_with+0x3a>
   13201:	48 8d 80 68 ff ff ff 	lea    -0x98(%rax),%rax
   13208:	eb 0a                	jmp    13214 <std::thread::local::LocalKey<T>::try_with+0x44>
   1320a:	e8 d1 00 00 00       	callq  132e0 <std::thread::local::fast::Key<T>::try_initialize>
   1320f:	48 85 c0             	test   %rax,%rax
   13212:	74 39                	je     1324d <std::thread::local::LocalKey<T>::try_with+0x7d>
   13214:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
   13219:	4c 89 74 24 28       	mov    %r14,0x28(%rsp)
   1321e:	48 83 38 00          	cmpq   $0x0,(%rax)
   13222:	75 5a                	jne    1327e <std::thread::local::LocalKey<T>::try_with+0xae>
   13224:	0f 10 40 08          	movups 0x8(%rax),%xmm0
   13228:	48 89 58 08          	mov    %rbx,0x8(%rax)
   1322c:	4c 89 70 10          	mov    %r14,0x10(%rax)
   13230:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   13237:	41 0f 11 47 08       	movups %xmm0,0x8(%r15)
   1323c:	49 c7 07 00 00 00 00 	movq   $0x0,(%r15)
   13243:	48 83 c4 30          	add    $0x30,%rsp
   13247:	5b                   	pop    %rbx
   13248:	41 5e                	pop    %r14
   1324a:	41 5f                	pop    %r15
   1324c:	c3                   	retq   
   1324d:	49 c7 07 01 00 00 00 	movq   $0x1,(%r15)
   13254:	48 85 db             	test   %rbx,%rbx
   13257:	74 ea                	je     13243 <std::thread::local::LocalKey<T>::try_with+0x73>
   13259:	48 89 df             	mov    %rbx,%rdi
   1325c:	41 ff 16             	callq  *(%r14)
   1325f:	49 8b 76 08          	mov    0x8(%r14),%rsi
   13263:	48 85 f6             	test   %rsi,%rsi
   13266:	74 db                	je     13243 <std::thread::local::LocalKey<T>::try_with+0x73>
   13268:	49 8b 56 10          	mov    0x10(%r14),%rdx
   1326c:	48 89 df             	mov    %rbx,%rdi
   1326f:	48 83 c4 30          	add    $0x30,%rsp
   13273:	5b                   	pop    %rbx
   13274:	41 5e                	pop    %r14
   13276:	41 5f                	pop    %r15
   13278:	ff 25 82 29 03 00    	jmpq   *0x32982(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   1327e:	48 8d 3d 4b 30 02 00 	lea    0x2304b(%rip),%rdi        # 362d0 <_fini+0x124c>
   13285:	48 8d 0d 74 05 03 00 	lea    0x30574(%rip),%rcx        # 43800 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2a8>
   1328c:	4c 8d 05 7d 0a 03 00 	lea    0x30a7d(%rip),%r8        # 43d10 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x7b8>
   13293:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   13298:	be 10 00 00 00       	mov    $0x10,%esi
   1329d:	ff 15 45 29 03 00    	callq  *0x32945(%rip)        # 45be8 <_GLOBAL_OFFSET_TABLE_+0x258>
   132a3:	0f 0b                	ud2    
   132a5:	49 89 c7             	mov    %rax,%r15
   132a8:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   132ad:	eb 18                	jmp    132c7 <std::thread::local::LocalKey<T>::try_with+0xf7>
   132af:	49 89 c7             	mov    %rax,%r15
   132b2:	48 89 df             	mov    %rbx,%rdi
   132b5:	4c 89 f6             	mov    %r14,%rsi
   132b8:	e8 23 66 ff ff       	callq  98e0 <alloc::alloc::box_free>
   132bd:	eb 0d                	jmp    132cc <std::thread::local::LocalKey<T>::try_with+0xfc>
   132bf:	49 89 c7             	mov    %rax,%r15
   132c2:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   132c7:	e8 44 31 ff ff       	callq  6410 <core::ptr::drop_in_place>
   132cc:	4c 89 ff             	mov    %r15,%rdi
   132cf:	e8 7c 1d ff ff       	callq  5050 <_Unwind_Resume@plt>
   132d4:	0f 0b                	ud2    
   132d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   132dd:	00 00 00 

00000000000132e0 <std::thread::local::fast::Key<T>::try_initialize>:
   132e0:	41 57                	push   %r15
   132e2:	41 56                	push   %r14
   132e4:	53                   	push   %rbx
   132e5:	66 66 66 64 48 8b 04 	data16 data16 data16 mov %fs:0x0,%rax
   132ec:	25 00 00 00 00 
   132f1:	49 89 c6             	mov    %rax,%r14
   132f4:	8a 80 80 ff ff ff    	mov    -0x80(%rax),%al
   132fa:	84 c0                	test   %al,%al
   132fc:	74 0c                	je     1330a <std::thread::local::fast::Key<T>::try_initialize+0x2a>
   132fe:	3c 01                	cmp    $0x1,%al
   13300:	74 4d                	je     1334f <std::thread::local::fast::Key<T>::try_initialize+0x6f>
   13302:	31 c0                	xor    %eax,%eax
   13304:	5b                   	pop    %rbx
   13305:	41 5e                	pop    %r14
   13307:	41 5f                	pop    %r15
   13309:	c3                   	retq   
   1330a:	48 83 3d 96 27 03 00 	cmpq   $0x0,0x32796(%rip)        # 45aa8 <__cxa_thread_atexit_impl@GLIBC_2.18>
   13311:	00 
   13312:	75 15                	jne    13329 <std::thread::local::fast::Key<T>::try_initialize+0x49>
   13314:	49 8d be 60 ff ff ff 	lea    -0xa0(%r14),%rdi
   1331b:	48 8d 35 5e 03 00 00 	lea    0x35e(%rip),%rsi        # 13680 <std::thread::local::fast::destroy_value>
   13322:	e8 79 59 00 00       	callq  18ca0 <std::sys_common::thread_local_dtor::register_dtor_fallback>
   13327:	eb 1b                	jmp    13344 <std::thread::local::fast::Key<T>::try_initialize+0x64>
   13329:	49 8d b6 60 ff ff ff 	lea    -0xa0(%r14),%rsi
   13330:	48 8d 3d 49 03 00 00 	lea    0x349(%rip),%rdi        # 13680 <std::thread::local::fast::destroy_value>
   13337:	48 8d 15 ea 2c 03 00 	lea    0x32cea(%rip),%rdx        # 46028 <_rust_extern_with_linkage___dso_handle>
   1333e:	ff 15 64 27 03 00    	callq  *0x32764(%rip)        # 45aa8 <__cxa_thread_atexit_impl@GLIBC_2.18>
   13344:	4c 89 f0             	mov    %r14,%rax
   13347:	41 c6 86 80 ff ff ff 	movb   $0x1,-0x80(%r14)
   1334e:	01 
   1334f:	4c 89 f0             	mov    %r14,%rax
   13352:	66 41 0f 6f 86 70 ff 	movdqa -0x90(%r14),%xmm0
   13359:	ff ff 
   1335b:	49 83 be 60 ff ff ff 	cmpq   $0x0,-0xa0(%r14)
   13362:	00 
   13363:	0f 28 0d f6 2c 02 00 	movaps 0x22cf6(%rip),%xmm1        # 36060 <_fini+0xfdc>
   1336a:	41 0f 29 8e 60 ff ff 	movaps %xmm1,-0xa0(%r14)
   13371:	ff 
   13372:	0f 57 c9             	xorps  %xmm1,%xmm1
   13375:	41 0f 29 8e 70 ff ff 	movaps %xmm1,-0x90(%r14)
   1337c:	ff 
   1337d:	74 30                	je     133af <std::thread::local::fast::Key<T>::try_initialize+0xcf>
   1337f:	66 48 0f 7e c3       	movq   %xmm0,%rbx
   13384:	48 85 db             	test   %rbx,%rbx
   13387:	74 26                	je     133af <std::thread::local::fast::Key<T>::try_initialize+0xcf>
   13389:	66 0f 70 c0 4e       	pshufd $0x4e,%xmm0,%xmm0
   1338e:	66 49 0f 7e c7       	movq   %xmm0,%r15
   13393:	48 89 df             	mov    %rbx,%rdi
   13396:	41 ff 17             	callq  *(%r15)
   13399:	49 8b 77 08          	mov    0x8(%r15),%rsi
   1339d:	48 85 f6             	test   %rsi,%rsi
   133a0:	74 0d                	je     133af <std::thread::local::fast::Key<T>::try_initialize+0xcf>
   133a2:	49 8b 57 10          	mov    0x10(%r15),%rdx
   133a6:	48 89 df             	mov    %rbx,%rdi
   133a9:	ff 15 51 28 03 00    	callq  *0x32851(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   133af:	4c 89 f0             	mov    %r14,%rax
   133b2:	49 8d 86 68 ff ff ff 	lea    -0x98(%r14),%rax
   133b9:	5b                   	pop    %rbx
   133ba:	41 5e                	pop    %r14
   133bc:	41 5f                	pop    %r15
   133be:	c3                   	retq   
   133bf:	49 89 c6             	mov    %rax,%r14
   133c2:	48 89 df             	mov    %rbx,%rdi
   133c5:	4c 89 fe             	mov    %r15,%rsi
   133c8:	e8 13 65 ff ff       	callq  98e0 <alloc::alloc::box_free>
   133cd:	4c 89 f7             	mov    %r14,%rdi
   133d0:	e8 7b 1c ff ff       	callq  5050 <_Unwind_Resume@plt>
   133d5:	0f 0b                	ud2    
   133d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   133de:	00 00 

00000000000133e0 <std::thread::local::fast::Key<T>::try_initialize>:
   133e0:	41 57                	push   %r15
   133e2:	41 56                	push   %r14
   133e4:	53                   	push   %rbx
   133e5:	66 66 66 64 48 8b 04 	data16 data16 data16 mov %fs:0x0,%rax
   133ec:	25 00 00 00 00 
   133f1:	49 89 c6             	mov    %rax,%r14
   133f4:	8a 80 40 ff ff ff    	mov    -0xc0(%rax),%al
   133fa:	84 c0                	test   %al,%al
   133fc:	74 0c                	je     1340a <std::thread::local::fast::Key<T>::try_initialize+0x2a>
   133fe:	3c 01                	cmp    $0x1,%al
   13400:	74 4d                	je     1344f <std::thread::local::fast::Key<T>::try_initialize+0x6f>
   13402:	31 c0                	xor    %eax,%eax
   13404:	5b                   	pop    %rbx
   13405:	41 5e                	pop    %r14
   13407:	41 5f                	pop    %r15
   13409:	c3                   	retq   
   1340a:	48 83 3d 96 26 03 00 	cmpq   $0x0,0x32696(%rip)        # 45aa8 <__cxa_thread_atexit_impl@GLIBC_2.18>
   13411:	00 
   13412:	75 15                	jne    13429 <std::thread::local::fast::Key<T>::try_initialize+0x49>
   13414:	49 8d be 20 ff ff ff 	lea    -0xe0(%r14),%rdi
   1341b:	48 8d 35 5e 02 00 00 	lea    0x25e(%rip),%rsi        # 13680 <std::thread::local::fast::destroy_value>
   13422:	e8 79 58 00 00       	callq  18ca0 <std::sys_common::thread_local_dtor::register_dtor_fallback>
   13427:	eb 1b                	jmp    13444 <std::thread::local::fast::Key<T>::try_initialize+0x64>
   13429:	49 8d b6 20 ff ff ff 	lea    -0xe0(%r14),%rsi
   13430:	48 8d 3d 49 02 00 00 	lea    0x249(%rip),%rdi        # 13680 <std::thread::local::fast::destroy_value>
   13437:	48 8d 15 ea 2b 03 00 	lea    0x32bea(%rip),%rdx        # 46028 <_rust_extern_with_linkage___dso_handle>
   1343e:	ff 15 64 26 03 00    	callq  *0x32664(%rip)        # 45aa8 <__cxa_thread_atexit_impl@GLIBC_2.18>
   13444:	4c 89 f0             	mov    %r14,%rax
   13447:	41 c6 86 40 ff ff ff 	movb   $0x1,-0xc0(%r14)
   1344e:	01 
   1344f:	4c 89 f0             	mov    %r14,%rax
   13452:	66 41 0f 6f 86 30 ff 	movdqa -0xd0(%r14),%xmm0
   13459:	ff ff 
   1345b:	49 83 be 20 ff ff ff 	cmpq   $0x0,-0xe0(%r14)
   13462:	00 
   13463:	0f 28 0d f6 2b 02 00 	movaps 0x22bf6(%rip),%xmm1        # 36060 <_fini+0xfdc>
   1346a:	41 0f 29 8e 20 ff ff 	movaps %xmm1,-0xe0(%r14)
   13471:	ff 
   13472:	0f 57 c9             	xorps  %xmm1,%xmm1
   13475:	41 0f 29 8e 30 ff ff 	movaps %xmm1,-0xd0(%r14)
   1347c:	ff 
   1347d:	74 30                	je     134af <std::thread::local::fast::Key<T>::try_initialize+0xcf>
   1347f:	66 48 0f 7e c3       	movq   %xmm0,%rbx
   13484:	48 85 db             	test   %rbx,%rbx
   13487:	74 26                	je     134af <std::thread::local::fast::Key<T>::try_initialize+0xcf>
   13489:	66 0f 70 c0 4e       	pshufd $0x4e,%xmm0,%xmm0
   1348e:	66 49 0f 7e c7       	movq   %xmm0,%r15
   13493:	48 89 df             	mov    %rbx,%rdi
   13496:	41 ff 17             	callq  *(%r15)
   13499:	49 8b 77 08          	mov    0x8(%r15),%rsi
   1349d:	48 85 f6             	test   %rsi,%rsi
   134a0:	74 0d                	je     134af <std::thread::local::fast::Key<T>::try_initialize+0xcf>
   134a2:	49 8b 57 10          	mov    0x10(%r15),%rdx
   134a6:	48 89 df             	mov    %rbx,%rdi
   134a9:	ff 15 51 27 03 00    	callq  *0x32751(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   134af:	4c 89 f0             	mov    %r14,%rax
   134b2:	49 8d 86 28 ff ff ff 	lea    -0xd8(%r14),%rax
   134b9:	5b                   	pop    %rbx
   134ba:	41 5e                	pop    %r14
   134bc:	41 5f                	pop    %r15
   134be:	c3                   	retq   
   134bf:	49 89 c6             	mov    %rax,%r14
   134c2:	48 89 df             	mov    %rbx,%rdi
   134c5:	4c 89 fe             	mov    %r15,%rsi
   134c8:	e8 13 64 ff ff       	callq  98e0 <alloc::alloc::box_free>
   134cd:	4c 89 f7             	mov    %r14,%rdi
   134d0:	e8 7b 1b ff ff       	callq  5050 <_Unwind_Resume@plt>
   134d5:	0f 0b                	ud2    
   134d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   134de:	00 00 

00000000000134e0 <std::thread::local::fast::Key<T>::try_initialize>:
   134e0:	50                   	push   %rax
   134e1:	66 66 66 64 48 8b 04 	data16 data16 data16 mov %fs:0x0,%rax
   134e8:	25 00 00 00 00 
   134ed:	0f 28 05 6c 2b 02 00 	movaps 0x22b6c(%rip),%xmm0        # 36060 <_fini+0xfdc>
   134f4:	0f 29 80 e0 ff ff ff 	movaps %xmm0,-0x20(%rax)
   134fb:	48 8d 80 e8 ff ff ff 	lea    -0x18(%rax),%rax
   13502:	59                   	pop    %rcx
   13503:	c3                   	retq   
   13504:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1350b:	00 00 00 
   1350e:	66 90                	xchg   %ax,%ax

0000000000013510 <std::thread::local::fast::Key<T>::try_initialize>:
   13510:	53                   	push   %rbx
   13511:	48 83 ec 30          	sub    $0x30,%rsp
   13515:	66 66 66 64 48 8b 04 	data16 data16 data16 mov %fs:0x0,%rax
   1351c:	25 00 00 00 00 
   13521:	48 89 c3             	mov    %rax,%rbx
   13524:	8a 80 d0 ff ff ff    	mov    -0x30(%rax),%al
   1352a:	84 c0                	test   %al,%al
   1352c:	74 0c                	je     1353a <std::thread::local::fast::Key<T>::try_initialize+0x2a>
   1352e:	3c 01                	cmp    $0x1,%al
   13530:	74 4c                	je     1357e <std::thread::local::fast::Key<T>::try_initialize+0x6e>
   13532:	31 c0                	xor    %eax,%eax
   13534:	48 83 c4 30          	add    $0x30,%rsp
   13538:	5b                   	pop    %rbx
   13539:	c3                   	retq   
   1353a:	48 83 3d 66 25 03 00 	cmpq   $0x0,0x32566(%rip)        # 45aa8 <__cxa_thread_atexit_impl@GLIBC_2.18>
   13541:	00 
   13542:	75 15                	jne    13559 <std::thread::local::fast::Key<T>::try_initialize+0x49>
   13544:	48 8d bb a0 ff ff ff 	lea    -0x60(%rbx),%rdi
   1354b:	48 8d 35 be 00 00 00 	lea    0xbe(%rip),%rsi        # 13610 <std::thread::local::fast::destroy_value>
   13552:	e8 49 57 00 00       	callq  18ca0 <std::sys_common::thread_local_dtor::register_dtor_fallback>
   13557:	eb 1b                	jmp    13574 <std::thread::local::fast::Key<T>::try_initialize+0x64>
   13559:	48 8d b3 a0 ff ff ff 	lea    -0x60(%rbx),%rsi
   13560:	48 8d 3d a9 00 00 00 	lea    0xa9(%rip),%rdi        # 13610 <std::thread::local::fast::destroy_value>
   13567:	48 8d 15 ba 2a 03 00 	lea    0x32aba(%rip),%rdx        # 46028 <_rust_extern_with_linkage___dso_handle>
   1356e:	ff 15 34 25 03 00    	callq  *0x32534(%rip)        # 45aa8 <__cxa_thread_atexit_impl@GLIBC_2.18>
   13574:	48 89 d8             	mov    %rbx,%rax
   13577:	c6 83 d0 ff ff ff 01 	movb   $0x1,-0x30(%rbx)
   1357e:	48 89 d8             	mov    %rbx,%rax
   13581:	66 0f 6f 8b a0 ff ff 	movdqa -0x60(%rbx),%xmm1
   13588:	ff 
   13589:	66 0f 6f 83 b0 ff ff 	movdqa -0x50(%rbx),%xmm0
   13590:	ff 
   13591:	0f 28 15 c8 2a 02 00 	movaps 0x22ac8(%rip),%xmm2        # 36060 <_fini+0xfdc>
   13598:	0f 29 93 a0 ff ff ff 	movaps %xmm2,-0x60(%rbx)
   1359f:	b9 02 00 00 00       	mov    $0x2,%ecx
   135a4:	66 48 0f 6e d1       	movq   %rcx,%xmm2
   135a9:	66 0f 7f 93 b0 ff ff 	movdqa %xmm2,-0x50(%rbx)
   135b0:	ff 
   135b1:	f3 0f 7f 44 24 10    	movdqu %xmm0,0x10(%rsp)
   135b7:	f3 0f 7f 0c 24       	movdqu %xmm1,(%rsp)
   135bc:	0f 28 93 c0 ff ff ff 	movaps -0x40(%rbx),%xmm2
   135c3:	0f 11 54 24 20       	movups %xmm2,0x20(%rsp)
   135c8:	66 48 0f 7e c8       	movq   %xmm1,%rax
   135cd:	48 85 c0             	test   %rax,%rax
   135d0:	74 21                	je     135f3 <std::thread::local::fast::Key<T>::try_initialize+0xe3>
   135d2:	66 48 0f 7e c0       	movq   %xmm0,%rax
   135d7:	48 83 f8 02          	cmp    $0x2,%rax
   135db:	74 16                	je     135f3 <std::thread::local::fast::Key<T>::try_initialize+0xe3>
   135dd:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   135e2:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   135e7:	75 0a                	jne    135f3 <std::thread::local::fast::Key<T>::try_initialize+0xe3>
   135e9:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
   135ee:	e8 9d 62 ff ff       	callq  9890 <alloc::sync::Arc<T>::drop_slow>
   135f3:	48 89 d8             	mov    %rbx,%rax
   135f6:	48 8d 83 a8 ff ff ff 	lea    -0x58(%rbx),%rax
   135fd:	48 83 c4 30          	add    $0x30,%rsp
   13601:	5b                   	pop    %rbx
   13602:	c3                   	retq   
   13603:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1360a:	00 00 00 
   1360d:	0f 1f 00             	nopl   (%rax)

0000000000013610 <std::thread::local::fast::destroy_value>:
   13610:	48 83 ec 68          	sub    $0x68,%rsp
   13614:	0f 10 07             	movups (%rdi),%xmm0
   13617:	0f 10 4f 10          	movups 0x10(%rdi),%xmm1
   1361b:	0f 57 d2             	xorps  %xmm2,%xmm2
   1361e:	0f 11 17             	movups %xmm2,(%rdi)
   13621:	0f 11 4c 24 48       	movups %xmm1,0x48(%rsp)
   13626:	0f 11 44 24 38       	movups %xmm0,0x38(%rsp)
   1362b:	0f 10 47 20          	movups 0x20(%rdi),%xmm0
   1362f:	0f 11 44 24 58       	movups %xmm0,0x58(%rsp)
   13634:	c6 47 30 02          	movb   $0x2,0x30(%rdi)
   13638:	0f 10 44 24 38       	movups 0x38(%rsp),%xmm0
   1363d:	0f 10 4c 24 48       	movups 0x48(%rsp),%xmm1
   13642:	0f 10 54 24 58       	movups 0x58(%rsp),%xmm2
   13647:	0f 29 04 24          	movaps %xmm0,(%rsp)
   1364b:	0f 29 54 24 20       	movaps %xmm2,0x20(%rsp)
   13650:	0f 29 4c 24 10       	movaps %xmm1,0x10(%rsp)
   13655:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
   1365a:	74 1d                	je     13679 <std::thread::local::fast::destroy_value+0x69>
   1365c:	83 7c 24 10 02       	cmpl   $0x2,0x10(%rsp)
   13661:	74 16                	je     13679 <std::thread::local::fast::destroy_value+0x69>
   13663:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   13668:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   1366d:	75 0a                	jne    13679 <std::thread::local::fast::destroy_value+0x69>
   1366f:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
   13674:	e8 17 62 ff ff       	callq  9890 <alloc::sync::Arc<T>::drop_slow>
   13679:	48 83 c4 68          	add    $0x68,%rsp
   1367d:	c3                   	retq   
   1367e:	66 90                	xchg   %ax,%ax

0000000000013680 <std::thread::local::fast::destroy_value>:
   13680:	41 57                	push   %r15
   13682:	41 56                	push   %r14
   13684:	53                   	push   %rbx
   13685:	48 8b 5f 10          	mov    0x10(%rdi),%rbx
   13689:	4c 8b 77 18          	mov    0x18(%rdi),%r14
   1368d:	0f 57 c0             	xorps  %xmm0,%xmm0
   13690:	48 83 3f 00          	cmpq   $0x0,(%rdi)
   13694:	0f 11 07             	movups %xmm0,(%rdi)
   13697:	c6 47 20 02          	movb   $0x2,0x20(%rdi)
   1369b:	74 26                	je     136c3 <std::thread::local::fast::destroy_value+0x43>
   1369d:	48 85 db             	test   %rbx,%rbx
   136a0:	74 21                	je     136c3 <std::thread::local::fast::destroy_value+0x43>
   136a2:	48 89 df             	mov    %rbx,%rdi
   136a5:	41 ff 16             	callq  *(%r14)
   136a8:	49 8b 76 08          	mov    0x8(%r14),%rsi
   136ac:	48 85 f6             	test   %rsi,%rsi
   136af:	74 12                	je     136c3 <std::thread::local::fast::destroy_value+0x43>
   136b1:	49 8b 56 10          	mov    0x10(%r14),%rdx
   136b5:	48 89 df             	mov    %rbx,%rdi
   136b8:	5b                   	pop    %rbx
   136b9:	41 5e                	pop    %r14
   136bb:	41 5f                	pop    %r15
   136bd:	ff 25 3d 25 03 00    	jmpq   *0x3253d(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   136c3:	5b                   	pop    %rbx
   136c4:	41 5e                	pop    %r14
   136c6:	41 5f                	pop    %r15
   136c8:	c3                   	retq   
   136c9:	49 89 c7             	mov    %rax,%r15
   136cc:	48 89 df             	mov    %rbx,%rdi
   136cf:	4c 89 f6             	mov    %r14,%rsi
   136d2:	e8 09 62 ff ff       	callq  98e0 <alloc::alloc::box_free>
   136d7:	4c 89 ff             	mov    %r15,%rdi
   136da:	e8 71 19 ff ff       	callq  5050 <_Unwind_Resume@plt>
   136df:	0f 0b                	ud2    
   136e1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   136e8:	00 00 00 
   136eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000136f0 <std::thread::Thread::new>:
   136f0:	41 57                	push   %r15
   136f2:	41 56                	push   %r14
   136f4:	53                   	push   %rbx
   136f5:	48 83 ec 60          	sub    $0x60,%rsp
   136f9:	48 8b 07             	mov    (%rdi),%rax
   136fc:	0f 10 47 08          	movups 0x8(%rdi),%xmm0
   13700:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
   13705:	48 85 c0             	test   %rax,%rax
   13708:	74 5e                	je     13768 <std::thread::Thread::new+0x78>
   1370a:	48 89 04 24          	mov    %rax,(%rsp)
   1370e:	0f 28 44 24 40       	movaps 0x40(%rsp),%xmm0
   13713:	0f 11 44 24 08       	movups %xmm0,0x8(%rsp)
   13718:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
   1371d:	48 89 e6             	mov    %rsp,%rsi
   13720:	ff 15 9a 24 03 00    	callq  *0x3249a(%rip)        # 45bc0 <_GLOBAL_OFFSET_TABLE_+0x230>
   13726:	48 8b 5c 24 28       	mov    0x28(%rsp),%rbx
   1372b:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
   13730:	48 89 df             	mov    %rbx,%rdi
   13733:	31 f6                	xor    %esi,%esi
   13735:	ff 15 35 25 03 00    	callq  *0x32535(%rip)        # 45c70 <memchr@GLIBC_2.2.5>
   1373b:	48 85 c0             	test   %rax,%rax
   1373e:	0f 85 f2 00 00 00    	jne    13836 <std::thread::Thread::new+0x146>
   13744:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   13749:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1374e:	0f 10 44 24 28       	movups 0x28(%rsp),%xmm0
   13753:	0f 29 04 24          	movaps %xmm0,(%rsp)
   13757:	48 89 e7             	mov    %rsp,%rdi
   1375a:	ff 15 f0 25 03 00    	callq  *0x325f0(%rip)        # 45d50 <_GLOBAL_OFFSET_TABLE_+0x3c0>
   13760:	49 89 c7             	mov    %rax,%r15
   13763:	49 89 d6             	mov    %rdx,%r14
   13766:	eb 03                	jmp    1376b <std::thread::Thread::new+0x7b>
   13768:	45 31 ff             	xor    %r15d,%r15d
   1376b:	4c 89 3c 24          	mov    %r15,(%rsp)
   1376f:	4c 89 74 24 08       	mov    %r14,0x8(%rsp)
   13774:	48 8d 1d c5 28 03 00 	lea    0x328c5(%rip),%rbx        # 46040 <std::thread::ThreadId::new::GUARD>
   1377b:	48 89 df             	mov    %rbx,%rdi
   1377e:	ff 15 3c 28 03 00    	callq  *0x3283c(%rip)        # 45fc0 <pthread_mutex_lock@GLIBC_2.2.5>
   13784:	48 89 5c 24 28       	mov    %rbx,0x28(%rsp)
   13789:	48 8b 1d 78 28 03 00 	mov    0x32878(%rip),%rbx        # 46008 <std::thread::ThreadId::new::COUNTER>
   13790:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
   13794:	74 59                	je     137ef <std::thread::Thread::new+0xff>
   13796:	48 8d 43 01          	lea    0x1(%rbx),%rax
   1379a:	48 89 05 67 28 03 00 	mov    %rax,0x32867(%rip)        # 46008 <std::thread::ThreadId::new::COUNTER>
   137a1:	48 85 db             	test   %rbx,%rbx
   137a4:	74 63                	je     13809 <std::thread::Thread::new+0x119>
   137a6:	48 8d 3d 93 28 03 00 	lea    0x32893(%rip),%rdi        # 46040 <std::thread::ThreadId::new::GUARD>
   137ad:	ff 15 bd 25 03 00    	callq  *0x325bd(%rip)        # 45d70 <pthread_mutex_unlock@GLIBC_2.2.5>
   137b3:	bf 30 00 00 00       	mov    $0x30,%edi
   137b8:	be 08 00 00 00       	mov    $0x8,%esi
   137bd:	ff 15 c5 23 03 00    	callq  *0x323c5(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   137c3:	48 85 c0             	test   %rax,%rax
   137c6:	74 5c                	je     13824 <std::thread::Thread::new+0x134>
   137c8:	0f 28 05 71 28 02 00 	movaps 0x22871(%rip),%xmm0        # 36040 <_fini+0xfbc>
   137cf:	0f 11 00             	movups %xmm0,(%rax)
   137d2:	4c 89 78 10          	mov    %r15,0x10(%rax)
   137d6:	4c 89 70 18          	mov    %r14,0x18(%rax)
   137da:	48 89 58 20          	mov    %rbx,0x20(%rax)
   137de:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%rax)
   137e5:	48 83 c4 60          	add    $0x60,%rsp
   137e9:	5b                   	pop    %rbx
   137ea:	41 5e                	pop    %r14
   137ec:	41 5f                	pop    %r15
   137ee:	c3                   	retq   
   137ef:	48 8d 3d 38 41 02 00 	lea    0x24138(%rip),%rdi        # 3792e <str.6+0x60e>
   137f6:	48 8d 15 23 03 03 00 	lea    0x30323(%rip),%rdx        # 43b20 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x5c8>
   137fd:	be 37 00 00 00       	mov    $0x37,%esi
   13802:	e8 09 6c 00 00       	callq  1a410 <std::panicking::begin_panic>
   13807:	eb 6b                	jmp    13874 <std::thread::Thread::new+0x184>
   13809:	48 8d 3d ea 3d 02 00 	lea    0x23dea(%rip),%rdi        # 375fa <str.6+0x2da>
   13810:	48 8d 15 21 03 03 00 	lea    0x30321(%rip),%rdx        # 43b38 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x5e0>
   13817:	be 2b 00 00 00       	mov    $0x2b,%esi
   1381c:	ff 15 be 26 03 00    	callq  *0x326be(%rip)        # 45ee0 <_GLOBAL_OFFSET_TABLE_+0x550>
   13822:	eb 50                	jmp    13874 <std::thread::Thread::new+0x184>
   13824:	bf 30 00 00 00       	mov    $0x30,%edi
   13829:	be 08 00 00 00       	mov    $0x8,%esi
   1382e:	ff 15 f4 22 03 00    	callq  *0x322f4(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   13834:	0f 0b                	ud2    
   13836:	48 29 d8             	sub    %rbx,%rax
   13839:	0f 10 44 24 30       	movups 0x30(%rsp),%xmm0
   1383e:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   13843:	48 89 04 24          	mov    %rax,(%rsp)
   13847:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   1384c:	0f 11 44 24 10       	movups %xmm0,0x10(%rsp)
   13851:	48 8d 3d 0d 41 02 00 	lea    0x2410d(%rip),%rdi        # 37965 <str.6+0x645>
   13858:	48 8d 0d 01 00 03 00 	lea    0x30001(%rip),%rcx        # 43860 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x308>
   1385f:	4c 8d 05 ea 02 03 00 	lea    0x302ea(%rip),%r8        # 43b50 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x5f8>
   13866:	48 89 e2             	mov    %rsp,%rdx
   13869:	be 2f 00 00 00       	mov    $0x2f,%esi
   1386e:	ff 15 74 23 03 00    	callq  *0x32374(%rip)        # 45be8 <_GLOBAL_OFFSET_TABLE_+0x258>
   13874:	0f 0b                	ud2    
   13876:	48 89 c3             	mov    %rax,%rbx
   13879:	48 89 e7             	mov    %rsp,%rdi
   1387c:	e8 3f 32 ff ff       	callq  6ac0 <core::ptr::drop_in_place>
   13881:	eb 15                	jmp    13898 <std::thread::Thread::new+0x1a8>
   13883:	48 89 c3             	mov    %rax,%rbx
   13886:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
   1388b:	e8 e0 32 ff ff       	callq  6b70 <core::ptr::drop_in_place>
   13890:	48 89 e7             	mov    %rsp,%rdi
   13893:	e8 78 2e ff ff       	callq  6710 <core::ptr::drop_in_place>
   13898:	48 89 df             	mov    %rbx,%rdi
   1389b:	e8 b0 17 ff ff       	callq  5050 <_Unwind_Resume@plt>
   138a0:	0f 0b                	ud2    
   138a2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   138a9:	00 00 00 
   138ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000138b0 <std::env::current_dir>:
   138b0:	55                   	push   %rbp
   138b1:	41 57                	push   %r15
   138b3:	41 56                	push   %r14
   138b5:	41 55                	push   %r13
   138b7:	41 54                	push   %r12
   138b9:	53                   	push   %rbx
   138ba:	48 83 ec 18          	sub    $0x18,%rsp
   138be:	49 89 fe             	mov    %rdi,%r14
   138c1:	bb 00 02 00 00       	mov    $0x200,%ebx
   138c6:	bf 00 02 00 00       	mov    $0x200,%edi
   138cb:	be 01 00 00 00       	mov    $0x1,%esi
   138d0:	ff 15 b2 22 03 00    	callq  *0x322b2(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   138d6:	48 85 c0             	test   %rax,%rax
   138d9:	0f 84 13 02 00 00    	je     13af2 <std::env::current_dir+0x242>
   138df:	49 89 c7             	mov    %rax,%r15
   138e2:	48 89 04 24          	mov    %rax,(%rsp)
   138e6:	0f 28 05 b3 27 02 00 	movaps 0x227b3(%rip),%xmm0        # 360a0 <_fini+0x101c>
   138ed:	0f 11 44 24 08       	movups %xmm0,0x8(%rsp)
   138f2:	be 00 02 00 00       	mov    $0x200,%esi
   138f7:	48 89 c7             	mov    %rax,%rdi
   138fa:	ff 15 28 23 03 00    	callq  *0x32328(%rip)        # 45c28 <getcwd@GLIBC_2.2.5>
   13900:	48 85 c0             	test   %rax,%rax
   13903:	74 5d                	je     13962 <std::env::current_dir+0xb2>
   13905:	4c 89 ff             	mov    %r15,%rdi
   13908:	ff 15 42 22 03 00    	callq  *0x32242(%rip)        # 45b50 <strlen@GLIBC_2.2.5>
   1390e:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   13912:	0f 84 9c 01 00 00    	je     13ab4 <std::env::current_dir+0x204>
   13918:	49 89 c4             	mov    %rax,%r12
   1391b:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   13920:	48 39 c3             	cmp    %rax,%rbx
   13923:	0f 86 37 01 00 00    	jbe    13a60 <std::env::current_dir+0x1b0>
   13929:	4d 85 e4             	test   %r12,%r12
   1392c:	0f 84 0e 01 00 00    	je     13a40 <std::env::current_dir+0x190>
   13932:	ba 01 00 00 00       	mov    $0x1,%edx
   13937:	4c 89 ff             	mov    %r15,%rdi
   1393a:	48 89 de             	mov    %rbx,%rsi
   1393d:	4c 89 e1             	mov    %r12,%rcx
   13940:	ff 15 32 26 03 00    	callq  *0x32632(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
   13946:	49 89 c5             	mov    %rax,%r13
   13949:	48 85 c0             	test   %rax,%rax
   1394c:	0f 85 05 01 00 00    	jne    13a57 <std::env::current_dir+0x1a7>
   13952:	be 01 00 00 00       	mov    $0x1,%esi
   13957:	4c 89 e7             	mov    %r12,%rdi
   1395a:	ff 15 c8 21 03 00    	callq  *0x321c8(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   13960:	0f 0b                	ud2    
   13962:	ff 15 b8 20 03 00    	callq  *0x320b8(%rip)        # 45a20 <__errno_location@GLIBC_2.2.5>
   13968:	8b 00                	mov    (%rax),%eax
   1396a:	83 f8 22             	cmp    $0x22,%eax
   1396d:	0f 85 81 00 00 00    	jne    139f4 <std::env::current_dir+0x144>
   13973:	41 bc 00 02 00 00    	mov    $0x200,%r12d
   13979:	48 8d 2d e0 19 ff ff 	lea    -0xe620(%rip),%rbp        # 5360 <__rust_realloc>
   13980:	4c 8b 2d a1 22 03 00 	mov    0x322a1(%rip),%r13        # 45c28 <getcwd@GLIBC_2.2.5>
   13987:	4c 89 e3             	mov    %r12,%rbx
   1398a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   13990:	48 ff c3             	inc    %rbx
   13993:	0f 84 33 01 00 00    	je     13acc <std::env::current_dir+0x21c>
   13999:	4b 8d 04 24          	lea    (%r12,%r12,1),%rax
   1399d:	48 39 d8             	cmp    %rbx,%rax
   139a0:	48 0f 47 d8          	cmova  %rax,%rbx
   139a4:	48 83 fb 08          	cmp    $0x8,%rbx
   139a8:	b8 08 00 00 00       	mov    $0x8,%eax
   139ad:	48 0f 46 d8          	cmovbe %rax,%rbx
   139b1:	ba 01 00 00 00       	mov    $0x1,%edx
   139b6:	4c 89 ff             	mov    %r15,%rdi
   139b9:	4c 89 e6             	mov    %r12,%rsi
   139bc:	48 89 d9             	mov    %rbx,%rcx
   139bf:	ff d5                	callq  *%rbp
   139c1:	48 85 c0             	test   %rax,%rax
   139c4:	0f 84 18 01 00 00    	je     13ae2 <std::env::current_dir+0x232>
   139ca:	49 89 c7             	mov    %rax,%r15
   139cd:	48 89 c7             	mov    %rax,%rdi
   139d0:	48 89 de             	mov    %rbx,%rsi
   139d3:	41 ff d5             	callq  *%r13
   139d6:	48 85 c0             	test   %rax,%rax
   139d9:	0f 85 b4 00 00 00    	jne    13a93 <std::env::current_dir+0x1e3>
   139df:	ff 15 3b 20 03 00    	callq  *0x3203b(%rip)        # 45a20 <__errno_location@GLIBC_2.2.5>
   139e5:	8b 00                	mov    (%rax),%eax
   139e7:	4c 89 e1             	mov    %r12,%rcx
   139ea:	49 89 dc             	mov    %rbx,%r12
   139ed:	83 f8 22             	cmp    $0x22,%eax
   139f0:	74 9e                	je     13990 <std::env::current_dir+0xe0>
   139f2:	eb 07                	jmp    139fb <std::env::current_dir+0x14b>
   139f4:	bb 00 02 00 00       	mov    $0x200,%ebx
   139f9:	31 c9                	xor    %ecx,%ecx
   139fb:	4c 89 3c 24          	mov    %r15,(%rsp)
   139ff:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   13a04:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   13a09:	41 c6 46 08 00       	movb   $0x0,0x8(%r14)
   13a0e:	41 c6 46 0b 00       	movb   $0x0,0xb(%r14)
   13a13:	66 41 c7 46 09 00 00 	movw   $0x0,0x9(%r14)
   13a1a:	41 89 46 0c          	mov    %eax,0xc(%r14)
   13a1e:	49 c7 46 10 00 00 00 	movq   $0x0,0x10(%r14)
   13a25:	00 
   13a26:	49 c7 06 01 00 00 00 	movq   $0x1,(%r14)
   13a2d:	ba 01 00 00 00       	mov    $0x1,%edx
   13a32:	4c 89 ff             	mov    %r15,%rdi
   13a35:	48 89 de             	mov    %rbx,%rsi
   13a38:	ff 15 c2 21 03 00    	callq  *0x321c2(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   13a3e:	eb 41                	jmp    13a81 <std::env::current_dir+0x1d1>
   13a40:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   13a46:	ba 01 00 00 00       	mov    $0x1,%edx
   13a4b:	4c 89 ff             	mov    %r15,%rdi
   13a4e:	48 89 de             	mov    %rbx,%rsi
   13a51:	ff 15 a9 21 03 00    	callq  *0x321a9(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   13a57:	4c 89 2c 24          	mov    %r13,(%rsp)
   13a5b:	4c 89 64 24 08       	mov    %r12,0x8(%rsp)
   13a60:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   13a65:	49 89 46 18          	mov    %rax,0x18(%r14)
   13a69:	48 8b 04 24          	mov    (%rsp),%rax
   13a6d:	49 89 46 08          	mov    %rax,0x8(%r14)
   13a71:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   13a76:	49 89 46 10          	mov    %rax,0x10(%r14)
   13a7a:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
   13a81:	4c 89 f0             	mov    %r14,%rax
   13a84:	48 83 c4 18          	add    $0x18,%rsp
   13a88:	5b                   	pop    %rbx
   13a89:	41 5c                	pop    %r12
   13a8b:	41 5d                	pop    %r13
   13a8d:	41 5e                	pop    %r14
   13a8f:	41 5f                	pop    %r15
   13a91:	5d                   	pop    %rbp
   13a92:	c3                   	retq   
   13a93:	4c 89 3c 24          	mov    %r15,(%rsp)
   13a97:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   13a9c:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   13aa1:	4c 89 ff             	mov    %r15,%rdi
   13aa4:	ff 15 a6 20 03 00    	callq  *0x320a6(%rip)        # 45b50 <strlen@GLIBC_2.2.5>
   13aaa:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   13aae:	0f 85 64 fe ff ff    	jne    13918 <std::env::current_dir+0x68>
   13ab4:	48 8d 15 35 01 03 00 	lea    0x30135(%rip),%rdx        # 43bf0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x698>
   13abb:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   13ac2:	31 f6                	xor    %esi,%esi
   13ac4:	ff 15 66 1f 03 00    	callq  *0x31f66(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   13aca:	eb 14                	jmp    13ae0 <std::env::current_dir+0x230>
   13acc:	4c 89 3c 24          	mov    %r15,(%rsp)
   13ad0:	4c 89 64 24 08       	mov    %r12,0x8(%rsp)
   13ad5:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   13ada:	ff 15 08 20 03 00    	callq  *0x32008(%rip)        # 45ae8 <_GLOBAL_OFFSET_TABLE_+0x158>
   13ae0:	0f 0b                	ud2    
   13ae2:	be 01 00 00 00       	mov    $0x1,%esi
   13ae7:	48 89 df             	mov    %rbx,%rdi
   13aea:	ff 15 38 20 03 00    	callq  *0x32038(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   13af0:	0f 0b                	ud2    
   13af2:	bf 00 02 00 00       	mov    $0x200,%edi
   13af7:	be 01 00 00 00       	mov    $0x1,%esi
   13afc:	ff 15 26 20 03 00    	callq  *0x32026(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   13b02:	0f 0b                	ud2    
   13b04:	48 89 c3             	mov    %rax,%rbx
   13b07:	48 89 e7             	mov    %rsp,%rdi
   13b0a:	e8 31 2c ff ff       	callq  6740 <core::ptr::drop_in_place>
   13b0f:	48 89 df             	mov    %rbx,%rdi
   13b12:	e8 39 15 ff ff       	callq  5050 <_Unwind_Resume@plt>
   13b17:	0f 0b                	ud2    
   13b19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000013b20 <std::env::_var_os>:
   13b20:	55                   	push   %rbp
   13b21:	41 57                	push   %r15
   13b23:	41 56                	push   %r14
   13b25:	41 55                	push   %r13
   13b27:	41 54                	push   %r12
   13b29:	53                   	push   %rbx
   13b2a:	48 83 ec 78          	sub    $0x78,%rsp
   13b2e:	49 89 d5             	mov    %rdx,%r13
   13b31:	49 89 f4             	mov    %rsi,%r12
   13b34:	49 89 fe             	mov    %rdi,%r14
   13b37:	48 89 74 24 68       	mov    %rsi,0x68(%rsp)
   13b3c:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
   13b41:	49 89 d7             	mov    %rdx,%r15
   13b44:	49 ff c7             	inc    %r15
   13b47:	75 35                	jne    13b7e <std::env::_var_os+0x5e>
   13b49:	49 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%r15
   13b50:	be 01 00 00 00       	mov    $0x1,%esi
   13b55:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   13b5c:	ff 15 26 20 03 00    	callq  *0x32026(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   13b62:	48 89 c3             	mov    %rax,%rbx
   13b65:	48 85 c0             	test   %rax,%rax
   13b68:	75 2e                	jne    13b98 <std::env::_var_os+0x78>
   13b6a:	be 01 00 00 00       	mov    $0x1,%esi
   13b6f:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   13b76:	ff 15 ac 1f 03 00    	callq  *0x31fac(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   13b7c:	0f 0b                	ud2    
   13b7e:	be 01 00 00 00       	mov    $0x1,%esi
   13b83:	4c 89 ff             	mov    %r15,%rdi
   13b86:	ff 15 fc 1f 03 00    	callq  *0x31ffc(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   13b8c:	48 85 c0             	test   %rax,%rax
   13b8f:	0f 84 c4 01 00 00    	je     13d59 <std::env::_var_os+0x239>
   13b95:	48 89 c3             	mov    %rax,%rbx
   13b98:	48 89 df             	mov    %rbx,%rdi
   13b9b:	4c 89 e6             	mov    %r12,%rsi
   13b9e:	4c 89 ea             	mov    %r13,%rdx
   13ba1:	ff 15 59 21 03 00    	callq  *0x32159(%rip)        # 45d00 <memcpy@GLIBC_2.14>
   13ba7:	48 89 df             	mov    %rbx,%rdi
   13baa:	31 f6                	xor    %esi,%esi
   13bac:	4c 89 ea             	mov    %r13,%rdx
   13baf:	ff 15 bb 20 03 00    	callq  *0x320bb(%rip)        # 45c70 <memchr@GLIBC_2.2.5>
   13bb5:	48 85 c0             	test   %rax,%rax
   13bb8:	0f 85 e6 00 00 00    	jne    13ca4 <std::env::_var_os+0x184>
   13bbe:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   13bc3:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
   13bc8:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   13bcd:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   13bd2:	ff 15 78 21 03 00    	callq  *0x32178(%rip)        # 45d50 <_GLOBAL_OFFSET_TABLE_+0x3c0>
   13bd8:	49 89 c4             	mov    %rax,%r12
   13bdb:	49 89 d7             	mov    %rdx,%r15
   13bde:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   13be3:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
   13be8:	48 8d 1d d9 25 03 00 	lea    0x325d9(%rip),%rbx        # 461c8 <std::sys::unix::os::env_lock::ENV_LOCK>
   13bef:	48 89 df             	mov    %rbx,%rdi
   13bf2:	ff 15 c8 23 03 00    	callq  *0x323c8(%rip)        # 45fc0 <pthread_mutex_lock@GLIBC_2.2.5>
   13bf8:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   13bfd:	4c 89 e7             	mov    %r12,%rdi
   13c00:	ff 15 ba 1d 03 00    	callq  *0x31dba(%rip)        # 459c0 <getenv@GLIBC_2.2.5>
   13c06:	48 85 c0             	test   %rax,%rax
   13c09:	74 4f                	je     13c5a <std::env::_var_os+0x13a>
   13c0b:	48 89 c5             	mov    %rax,%rbp
   13c0e:	48 89 c7             	mov    %rax,%rdi
   13c11:	ff 15 39 1f 03 00    	callq  *0x31f39(%rip)        # 45b50 <strlen@GLIBC_2.2.5>
   13c17:	48 89 c3             	mov    %rax,%rbx
   13c1a:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   13c20:	48 85 c0             	test   %rax,%rax
   13c23:	74 24                	je     13c49 <std::env::_var_os+0x129>
   13c25:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
   13c29:	0f 84 12 01 00 00    	je     13d41 <std::env::_var_os+0x221>
   13c2f:	be 01 00 00 00       	mov    $0x1,%esi
   13c34:	48 89 df             	mov    %rbx,%rdi
   13c37:	ff 15 4b 1f 03 00    	callq  *0x31f4b(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   13c3d:	49 89 c5             	mov    %rax,%r13
   13c40:	48 85 c0             	test   %rax,%rax
   13c43:	0f 84 20 01 00 00    	je     13d69 <std::env::_var_os+0x249>
   13c49:	4c 89 ef             	mov    %r13,%rdi
   13c4c:	48 89 ee             	mov    %rbp,%rsi
   13c4f:	48 89 da             	mov    %rbx,%rdx
   13c52:	ff 15 a8 20 03 00    	callq  *0x320a8(%rip)        # 45d00 <memcpy@GLIBC_2.14>
   13c58:	eb 03                	jmp    13c5d <std::env::_var_os+0x13d>
   13c5a:	45 31 ed             	xor    %r13d,%r13d
   13c5d:	48 8d 3d 64 25 03 00 	lea    0x32564(%rip),%rdi        # 461c8 <std::sys::unix::os::env_lock::ENV_LOCK>
   13c64:	ff 15 06 21 03 00    	callq  *0x32106(%rip)        # 45d70 <pthread_mutex_unlock@GLIBC_2.2.5>
   13c6a:	41 c6 04 24 00       	movb   $0x0,(%r12)
   13c6f:	4d 85 ff             	test   %r15,%r15
   13c72:	74 13                	je     13c87 <std::env::_var_os+0x167>
   13c74:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
   13c79:	ba 01 00 00 00       	mov    $0x1,%edx
   13c7e:	4c 89 fe             	mov    %r15,%rsi
   13c81:	ff 15 79 1f 03 00    	callq  *0x31f79(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   13c87:	4d 89 2e             	mov    %r13,(%r14)
   13c8a:	49 89 5e 08          	mov    %rbx,0x8(%r14)
   13c8e:	49 89 5e 10          	mov    %rbx,0x10(%r14)
   13c92:	4c 89 f0             	mov    %r14,%rax
   13c95:	48 83 c4 78          	add    $0x78,%rsp
   13c99:	5b                   	pop    %rbx
   13c9a:	41 5c                	pop    %r12
   13c9c:	41 5d                	pop    %r13
   13c9e:	41 5e                	pop    %r14
   13ca0:	41 5f                	pop    %r15
   13ca2:	5d                   	pop    %rbp
   13ca3:	c3                   	retq   
   13ca4:	48 29 d8             	sub    %rbx,%rax
   13ca7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   13cac:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
   13cb1:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
   13cb6:	4c 89 6c 24 20       	mov    %r13,0x20(%rsp)
   13cbb:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   13cc0:	ff 15 5a 1e 03 00    	callq  *0x31e5a(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x190>
   13cc6:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   13ccb:	48 89 54 24 60       	mov    %rdx,0x60(%rsp)
   13cd0:	48 8d 44 24 68       	lea    0x68(%rsp),%rax
   13cd5:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   13cda:	48 8d 05 bf 33 00 00 	lea    0x33bf(%rip),%rax        # 170a0 <<std::path::Display as core::fmt::Debug>::fmt>
   13ce1:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   13ce6:	48 8d 44 24 58       	lea    0x58(%rsp),%rax
   13ceb:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   13cf0:	48 8d 05 a9 0d 00 00 	lea    0xda9(%rip),%rax        # 14aa0 <<std::io::error::Error as core::fmt::Display>::fmt>
   13cf7:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   13cfc:	48 8d 05 65 fe 02 00 	lea    0x2fe65(%rip),%rax        # 43b68 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x610>
   13d03:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   13d08:	48 c7 44 24 10 02 00 	movq   $0x2,0x10(%rsp)
   13d0f:	00 00 
   13d11:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   13d18:	00 00 
   13d1a:	48 8d 44 24 38       	lea    0x38(%rsp),%rax
   13d1f:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   13d24:	48 c7 44 24 30 02 00 	movq   $0x2,0x30(%rsp)
   13d2b:	00 00 
   13d2d:	48 8d 35 54 fe 02 00 	lea    0x2fe54(%rip),%rsi        # 43b88 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x630>
   13d34:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   13d39:	ff 15 a1 22 03 00    	callq  *0x322a1(%rip)        # 45fe0 <_GLOBAL_OFFSET_TABLE_+0x650>
   13d3f:	eb 16                	jmp    13d57 <std::env::_var_os+0x237>
   13d41:	48 8d 15 a8 fe 02 00 	lea    0x2fea8(%rip),%rdx        # 43bf0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x698>
   13d48:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   13d4f:	31 f6                	xor    %esi,%esi
   13d51:	ff 15 d9 1c 03 00    	callq  *0x31cd9(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   13d57:	0f 0b                	ud2    
   13d59:	be 01 00 00 00       	mov    $0x1,%esi
   13d5e:	4c 89 ff             	mov    %r15,%rdi
   13d61:	ff 15 c1 1d 03 00    	callq  *0x31dc1(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   13d67:	0f 0b                	ud2    
   13d69:	be 01 00 00 00       	mov    $0x1,%esi
   13d6e:	48 89 df             	mov    %rbx,%rdi
   13d71:	ff 15 b1 1d 03 00    	callq  *0x31db1(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   13d77:	0f 0b                	ud2    
   13d79:	48 89 c3             	mov    %rax,%rbx
   13d7c:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   13d81:	e8 ea 2d ff ff       	callq  6b70 <core::ptr::drop_in_place>
   13d86:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
   13d8b:	e8 00 2c ff ff       	callq  6990 <core::ptr::drop_in_place>
   13d90:	eb 0d                	jmp    13d9f <std::env::_var_os+0x27f>
   13d92:	48 89 c3             	mov    %rax,%rbx
   13d95:	48 8d 7c 24 58       	lea    0x58(%rsp),%rdi
   13d9a:	e8 41 31 ff ff       	callq  6ee0 <core::ptr::drop_in_place>
   13d9f:	48 89 df             	mov    %rbx,%rdi
   13da2:	e8 a9 12 ff ff       	callq  5050 <_Unwind_Resume@plt>
   13da7:	0f 0b                	ud2    
   13da9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000013db0 <std::env::current_exe>:
   13db0:	41 57                	push   %r15
   13db2:	41 56                	push   %r14
   13db4:	53                   	push   %rbx
   13db5:	48 83 ec 30          	sub    $0x30,%rsp
   13db9:	48 89 fb             	mov    %rdi,%rbx
   13dbc:	48 8d 35 ab 45 02 00 	lea    0x245ab(%rip),%rsi        # 3836e <str.6+0x104e>
   13dc3:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   13dc8:	ba 0e 00 00 00       	mov    $0xe,%edx
   13dcd:	ff 15 8d 1c 03 00    	callq  *0x31c8d(%rip)        # 45a60 <_GLOBAL_OFFSET_TABLE_+0xd0>
   13dd3:	83 7c 24 10 01       	cmpl   $0x1,0x10(%rsp)
   13dd8:	75 25                	jne    13dff <std::env::current_exe+0x4f>
   13dda:	0f b6 44 24 18       	movzbl 0x18(%rsp),%eax
   13ddf:	48 85 c0             	test   %rax,%rax
   13de2:	74 39                	je     13e1d <std::env::current_exe+0x6d>
   13de4:	83 f8 02             	cmp    $0x2,%eax
   13de7:	74 0a                	je     13df3 <std::env::current_exe+0x43>
   13de9:	8a 44 24 19          	mov    0x19(%rsp),%al
   13ded:	84 c0                	test   %al,%al
   13def:	75 0e                	jne    13dff <std::env::current_exe+0x4f>
   13df1:	eb 37                	jmp    13e2a <std::env::current_exe+0x7a>
   13df3:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   13df8:	8a 40 10             	mov    0x10(%rax),%al
   13dfb:	84 c0                	test   %al,%al
   13dfd:	74 2b                	je     13e2a <std::env::current_exe+0x7a>
   13dff:	0f 10 44 24 10       	movups 0x10(%rsp),%xmm0
   13e04:	0f 10 4c 24 20       	movups 0x20(%rsp),%xmm1
   13e09:	0f 11 4b 10          	movups %xmm1,0x10(%rbx)
   13e0d:	0f 11 03             	movups %xmm0,(%rbx)
   13e10:	48 89 d8             	mov    %rbx,%rax
   13e13:	48 83 c4 30          	add    $0x30,%rsp
   13e17:	5b                   	pop    %rbx
   13e18:	41 5e                	pop    %r14
   13e1a:	41 5f                	pop    %r15
   13e1c:	c3                   	retq   
   13e1d:	8b 7c 24 1c          	mov    0x1c(%rsp),%edi
   13e21:	e8 1a 84 00 00       	callq  1c240 <std::sys::unix::decode_error_kind>
   13e26:	84 c0                	test   %al,%al
   13e28:	75 d5                	jne    13dff <std::env::current_exe+0x4f>
   13e2a:	bf 2e 00 00 00       	mov    $0x2e,%edi
   13e2f:	be 01 00 00 00       	mov    $0x1,%esi
   13e34:	ff 15 4e 1d 03 00    	callq  *0x31d4e(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   13e3a:	48 85 c0             	test   %rax,%rax
   13e3d:	0f 84 b2 00 00 00    	je     13ef5 <std::env::current_exe+0x145>
   13e43:	49 89 c6             	mov    %rax,%r14
   13e46:	0f 10 05 4d 45 02 00 	movups 0x2454d(%rip),%xmm0        # 3839a <str.6+0x107a>
   13e4d:	0f 11 40 1e          	movups %xmm0,0x1e(%rax)
   13e51:	0f 10 05 34 45 02 00 	movups 0x24534(%rip),%xmm0        # 3838c <str.6+0x106c>
   13e58:	0f 11 40 10          	movups %xmm0,0x10(%rax)
   13e5c:	0f 10 05 19 45 02 00 	movups 0x24519(%rip),%xmm0        # 3837c <str.6+0x105c>
   13e63:	0f 11 00             	movups %xmm0,(%rax)
   13e66:	bf 18 00 00 00       	mov    $0x18,%edi
   13e6b:	be 08 00 00 00       	mov    $0x8,%esi
   13e70:	ff 15 12 1d 03 00    	callq  *0x31d12(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   13e76:	48 85 c0             	test   %rax,%rax
   13e79:	74 68                	je     13ee3 <std::env::current_exe+0x133>
   13e7b:	49 89 c7             	mov    %rax,%r15
   13e7e:	4c 89 30             	mov    %r14,(%rax)
   13e81:	0f 28 05 38 22 02 00 	movaps 0x22238(%rip),%xmm0        # 360c0 <_fini+0x103c>
   13e88:	0f 11 40 08          	movups %xmm0,0x8(%rax)
   13e8c:	bf 18 00 00 00       	mov    $0x18,%edi
   13e91:	be 08 00 00 00       	mov    $0x8,%esi
   13e96:	ff 15 ec 1c 03 00    	callq  *0x31cec(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   13e9c:	48 85 c0             	test   %rax,%rax
   13e9f:	74 42                	je     13ee3 <std::env::current_exe+0x133>
   13ea1:	4c 89 38             	mov    %r15,(%rax)
   13ea4:	48 8d 0d f5 fc 02 00 	lea    0x2fcf5(%rip),%rcx        # 43ba0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x648>
   13eab:	48 89 48 08          	mov    %rcx,0x8(%rax)
   13eaf:	c6 40 10 10          	movb   $0x10,0x10(%rax)
   13eb3:	8b 4c 24 09          	mov    0x9(%rsp),%ecx
   13eb7:	8b 54 24 0c          	mov    0xc(%rsp),%edx
   13ebb:	89 48 11             	mov    %ecx,0x11(%rax)
   13ebe:	89 50 14             	mov    %edx,0x14(%rax)
   13ec1:	48 89 43 10          	mov    %rax,0x10(%rbx)
   13ec5:	48 c7 43 08 02 00 00 	movq   $0x2,0x8(%rbx)
   13ecc:	00 
   13ecd:	48 c7 03 01 00 00 00 	movq   $0x1,(%rbx)
   13ed4:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   13ed9:	e8 72 21 ff ff       	callq  6050 <core::ptr::drop_in_place>
   13ede:	e9 2d ff ff ff       	jmpq   13e10 <std::env::current_exe+0x60>
   13ee3:	bf 18 00 00 00       	mov    $0x18,%edi
   13ee8:	be 08 00 00 00       	mov    $0x8,%esi
   13eed:	ff 15 35 1c 03 00    	callq  *0x31c35(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   13ef3:	0f 0b                	ud2    
   13ef5:	bf 2e 00 00 00       	mov    $0x2e,%edi
   13efa:	be 01 00 00 00       	mov    $0x1,%esi
   13eff:	ff 15 23 1c 03 00    	callq  *0x31c23(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   13f05:	0f 0b                	ud2    
   13f07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   13f0e:	00 00 

0000000000013f10 <std::error::Error::type_id>:
   13f10:	48 b8 1d 7c fa a7 76 	movabs $0x21ac0e76a7fa7c1d,%rax
   13f17:	0e ac 21 
   13f1a:	c3                   	retq   
   13f1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000013f20 <std::error::Error::backtrace>:
   13f20:	31 c0                	xor    %eax,%eax
   13f22:	c3                   	retq   
   13f23:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   13f2a:	00 00 00 
   13f2d:	0f 1f 00             	nopl   (%rax)

0000000000013f30 <std::error::Error::cause>:
   13f30:	31 c0                	xor    %eax,%eax
   13f32:	c3                   	retq   
   13f33:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   13f3a:	00 00 00 
   13f3d:	0f 1f 00             	nopl   (%rax)

0000000000013f40 <<std::error::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<dyn std::error::Error+core::marker::Sync+core::marker::Send>>::from::StringError as std::error::Error>::description>:
   13f40:	48 8b 07             	mov    (%rdi),%rax
   13f43:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   13f47:	c3                   	retq   
   13f48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   13f4f:	00 

0000000000013f50 <<std::error::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<dyn std::error::Error+core::marker::Sync+core::marker::Send>>::from::StringError as core::fmt::Display>::fmt>:
   13f50:	48 89 f2             	mov    %rsi,%rdx
   13f53:	48 8b 07             	mov    (%rdi),%rax
   13f56:	48 8b 77 10          	mov    0x10(%rdi),%rsi
   13f5a:	48 89 c7             	mov    %rax,%rdi
   13f5d:	ff 25 8d 1d 03 00    	jmpq   *0x31d8d(%rip)        # 45cf0 <_GLOBAL_OFFSET_TABLE_+0x360>
   13f63:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   13f6a:	00 00 00 
   13f6d:	0f 1f 00             	nopl   (%rax)

0000000000013f70 <<std::error::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<dyn std::error::Error+core::marker::Sync+core::marker::Send>>::from::StringError as core::fmt::Debug>::fmt>:
   13f70:	48 89 f2             	mov    %rsi,%rdx
   13f73:	48 8b 07             	mov    (%rdi),%rax
   13f76:	48 8b 77 10          	mov    0x10(%rdi),%rsi
   13f7a:	48 89 c7             	mov    %rax,%rdi
   13f7d:	ff 25 75 1d 03 00    	jmpq   *0x31d75(%rip)        # 45cf8 <_GLOBAL_OFFSET_TABLE_+0x368>
   13f83:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   13f8a:	00 00 00 
   13f8d:	0f 1f 00             	nopl   (%rax)

0000000000013f90 <std::ffi::c_str::CString::from_vec_unchecked>:
   13f90:	41 57                	push   %r15
   13f92:	41 56                	push   %r14
   13f94:	41 54                	push   %r12
   13f96:	53                   	push   %rbx
   13f97:	50                   	push   %rax
   13f98:	49 89 fe             	mov    %rdi,%r14
   13f9b:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
   13f9f:	4c 8b 7f 10          	mov    0x10(%rdi),%r15
   13fa3:	4c 39 fb             	cmp    %r15,%rbx
   13fa6:	75 4a                	jne    13ff2 <std::ffi::c_str::CString::from_vec_unchecked+0x62>
   13fa8:	4c 89 fb             	mov    %r15,%rbx
   13fab:	48 ff c3             	inc    %rbx
   13fae:	0f 84 02 01 00 00    	je     140b6 <std::ffi::c_str::CString::from_vec_unchecked+0x126>
   13fb4:	4d 85 ff             	test   %r15,%r15
   13fb7:	74 1b                	je     13fd4 <std::ffi::c_str::CString::from_vec_unchecked+0x44>
   13fb9:	49 8b 3e             	mov    (%r14),%rdi
   13fbc:	48 85 ff             	test   %rdi,%rdi
   13fbf:	74 13                	je     13fd4 <std::ffi::c_str::CString::from_vec_unchecked+0x44>
   13fc1:	ba 01 00 00 00       	mov    $0x1,%edx
   13fc6:	4c 89 fe             	mov    %r15,%rsi
   13fc9:	48 89 d9             	mov    %rbx,%rcx
   13fcc:	ff 15 a6 1f 03 00    	callq  *0x31fa6(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
   13fd2:	eb 0e                	jmp    13fe2 <std::ffi::c_str::CString::from_vec_unchecked+0x52>
   13fd4:	be 01 00 00 00       	mov    $0x1,%esi
   13fd9:	48 89 df             	mov    %rbx,%rdi
   13fdc:	ff 15 a6 1b 03 00    	callq  *0x31ba6(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   13fe2:	48 85 c0             	test   %rax,%rax
   13fe5:	0f 84 a1 00 00 00    	je     1408c <std::ffi::c_str::CString::from_vec_unchecked+0xfc>
   13feb:	49 89 06             	mov    %rax,(%r14)
   13fee:	49 89 5e 08          	mov    %rbx,0x8(%r14)
   13ff2:	49 39 df             	cmp    %rbx,%r15
   13ff5:	75 45                	jne    1403c <std::ffi::c_str::CString::from_vec_unchecked+0xac>
   13ff7:	4c 89 fb             	mov    %r15,%rbx
   13ffa:	48 ff c3             	inc    %rbx
   13ffd:	0f 84 bb 00 00 00    	je     140be <std::ffi::c_str::CString::from_vec_unchecked+0x12e>
   14003:	4b 8d 04 3f          	lea    (%r15,%r15,1),%rax
   14007:	48 39 d8             	cmp    %rbx,%rax
   1400a:	48 0f 46 c3          	cmovbe %rbx,%rax
   1400e:	48 83 f8 08          	cmp    $0x8,%rax
   14012:	41 bc 08 00 00 00    	mov    $0x8,%r12d
   14018:	4c 0f 47 e0          	cmova  %rax,%r12
   1401c:	4d 85 ff             	test   %r15,%r15
   1401f:	74 24                	je     14045 <std::ffi::c_str::CString::from_vec_unchecked+0xb5>
   14021:	49 8b 3e             	mov    (%r14),%rdi
   14024:	48 85 ff             	test   %rdi,%rdi
   14027:	74 1c                	je     14045 <std::ffi::c_str::CString::from_vec_unchecked+0xb5>
   14029:	ba 01 00 00 00       	mov    $0x1,%edx
   1402e:	4c 89 fe             	mov    %r15,%rsi
   14031:	4c 89 e1             	mov    %r12,%rcx
   14034:	ff 15 3e 1f 03 00    	callq  *0x31f3e(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
   1403a:	eb 17                	jmp    14053 <std::ffi::c_str::CString::from_vec_unchecked+0xc3>
   1403c:	49 8b 06             	mov    (%r14),%rax
   1403f:	49 8d 5f 01          	lea    0x1(%r15),%rbx
   14043:	eb 1a                	jmp    1405f <std::ffi::c_str::CString::from_vec_unchecked+0xcf>
   14045:	be 01 00 00 00       	mov    $0x1,%esi
   1404a:	4c 89 e7             	mov    %r12,%rdi
   1404d:	ff 15 35 1b 03 00    	callq  *0x31b35(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   14053:	48 85 c0             	test   %rax,%rax
   14056:	74 6e                	je     140c6 <std::ffi::c_str::CString::from_vec_unchecked+0x136>
   14058:	49 89 06             	mov    %rax,(%r14)
   1405b:	4d 89 66 08          	mov    %r12,0x8(%r14)
   1405f:	42 c6 04 38 00       	movb   $0x0,(%rax,%r15,1)
   14064:	49 89 5e 10          	mov    %rbx,0x10(%r14)
   14068:	49 8b 76 08          	mov    0x8(%r14),%rsi
   1406c:	48 39 de             	cmp    %rbx,%rsi
   1406f:	76 36                	jbe    140a7 <std::ffi::c_str::CString::from_vec_unchecked+0x117>
   14071:	ba 01 00 00 00       	mov    $0x1,%edx
   14076:	48 89 c7             	mov    %rax,%rdi
   14079:	48 85 db             	test   %rbx,%rbx
   1407c:	74 1e                	je     1409c <std::ffi::c_str::CString::from_vec_unchecked+0x10c>
   1407e:	48 89 d9             	mov    %rbx,%rcx
   14081:	ff 15 f1 1e 03 00    	callq  *0x31ef1(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
   14087:	48 85 c0             	test   %rax,%rax
   1408a:	75 1b                	jne    140a7 <std::ffi::c_str::CString::from_vec_unchecked+0x117>
   1408c:	be 01 00 00 00       	mov    $0x1,%esi
   14091:	48 89 df             	mov    %rbx,%rdi
   14094:	ff 15 8e 1a 03 00    	callq  *0x31a8e(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   1409a:	0f 0b                	ud2    
   1409c:	ff 15 5e 1b 03 00    	callq  *0x31b5e(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   140a2:	b8 01 00 00 00       	mov    $0x1,%eax
   140a7:	48 89 da             	mov    %rbx,%rdx
   140aa:	48 83 c4 08          	add    $0x8,%rsp
   140ae:	5b                   	pop    %rbx
   140af:	41 5c                	pop    %r12
   140b1:	41 5e                	pop    %r14
   140b3:	41 5f                	pop    %r15
   140b5:	c3                   	retq   
   140b6:	ff 15 2c 1a 03 00    	callq  *0x31a2c(%rip)        # 45ae8 <_GLOBAL_OFFSET_TABLE_+0x158>
   140bc:	eb 06                	jmp    140c4 <std::ffi::c_str::CString::from_vec_unchecked+0x134>
   140be:	ff 15 24 1a 03 00    	callq  *0x31a24(%rip)        # 45ae8 <_GLOBAL_OFFSET_TABLE_+0x158>
   140c4:	0f 0b                	ud2    
   140c6:	be 01 00 00 00       	mov    $0x1,%esi
   140cb:	4c 89 e7             	mov    %r12,%rdi
   140ce:	ff 15 54 1a 03 00    	callq  *0x31a54(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   140d4:	0f 0b                	ud2    
   140d6:	48 89 c3             	mov    %rax,%rbx
   140d9:	4c 89 f7             	mov    %r14,%rdi
   140dc:	e8 5f 26 ff ff       	callq  6740 <core::ptr::drop_in_place>
   140e1:	48 89 df             	mov    %rbx,%rdi
   140e4:	e8 67 0f ff ff       	callq  5050 <_Unwind_Resume@plt>
   140e9:	0f 0b                	ud2    
   140eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000140f0 <std::ffi::c_str::<impl core::convert::From<std::ffi::c_str::NulError> for std::io::error::Error>::from>:
   140f0:	41 57                	push   %r15
   140f2:	41 56                	push   %r14
   140f4:	53                   	push   %rbx
   140f5:	48 83 ec 10          	sub    $0x10,%rsp
   140f9:	49 89 fe             	mov    %rdi,%r14
   140fc:	bf 21 00 00 00       	mov    $0x21,%edi
   14101:	be 01 00 00 00       	mov    $0x1,%esi
   14106:	ff 15 7c 1a 03 00    	callq  *0x31a7c(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   1410c:	48 85 c0             	test   %rax,%rax
   1410f:	0f 84 c0 00 00 00    	je     141d5 <std::ffi::c_str::<impl core::convert::From<std::ffi::c_str::NulError> for std::io::error::Error>::from+0xe5>
   14115:	48 89 c3             	mov    %rax,%rbx
   14118:	8a 05 92 3a 02 00    	mov    0x23a92(%rip),%al        # 37bb0 <str.6+0x890>
   1411e:	88 43 20             	mov    %al,0x20(%rbx)
   14121:	0f 10 05 78 3a 02 00 	movups 0x23a78(%rip),%xmm0        # 37ba0 <str.6+0x880>
   14128:	0f 11 43 10          	movups %xmm0,0x10(%rbx)
   1412c:	0f 10 05 5d 3a 02 00 	movups 0x23a5d(%rip),%xmm0        # 37b90 <str.6+0x870>
   14133:	0f 11 03             	movups %xmm0,(%rbx)
   14136:	bf 18 00 00 00       	mov    $0x18,%edi
   1413b:	be 08 00 00 00       	mov    $0x8,%esi
   14140:	ff 15 42 1a 03 00    	callq  *0x31a42(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   14146:	48 85 c0             	test   %rax,%rax
   14149:	74 78                	je     141c3 <std::ffi::c_str::<impl core::convert::From<std::ffi::c_str::NulError> for std::io::error::Error>::from+0xd3>
   1414b:	49 89 c7             	mov    %rax,%r15
   1414e:	48 89 18             	mov    %rbx,(%rax)
   14151:	0f 28 05 78 1f 02 00 	movaps 0x21f78(%rip),%xmm0        # 360d0 <_fini+0x104c>
   14158:	0f 11 40 08          	movups %xmm0,0x8(%rax)
   1415c:	bf 18 00 00 00       	mov    $0x18,%edi
   14161:	be 08 00 00 00       	mov    $0x8,%esi
   14166:	ff 15 1c 1a 03 00    	callq  *0x31a1c(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   1416c:	48 85 c0             	test   %rax,%rax
   1416f:	74 52                	je     141c3 <std::ffi::c_str::<impl core::convert::From<std::ffi::c_str::NulError> for std::io::error::Error>::from+0xd3>
   14171:	48 89 c3             	mov    %rax,%rbx
   14174:	4c 89 38             	mov    %r15,(%rax)
   14177:	48 8d 05 22 fa 02 00 	lea    0x2fa22(%rip),%rax        # 43ba0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x648>
   1417e:	48 89 43 08          	mov    %rax,0x8(%rbx)
   14182:	c6 43 10 0b          	movb   $0xb,0x10(%rbx)
   14186:	8b 44 24 09          	mov    0x9(%rsp),%eax
   1418a:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
   1418e:	89 43 11             	mov    %eax,0x11(%rbx)
   14191:	89 4b 14             	mov    %ecx,0x14(%rbx)
   14194:	49 8b 7e 08          	mov    0x8(%r14),%rdi
   14198:	48 85 ff             	test   %rdi,%rdi
   1419b:	74 14                	je     141b1 <std::ffi::c_str::<impl core::convert::From<std::ffi::c_str::NulError> for std::io::error::Error>::from+0xc1>
   1419d:	49 8b 76 10          	mov    0x10(%r14),%rsi
   141a1:	48 85 f6             	test   %rsi,%rsi
   141a4:	74 0b                	je     141b1 <std::ffi::c_str::<impl core::convert::From<std::ffi::c_str::NulError> for std::io::error::Error>::from+0xc1>
   141a6:	ba 01 00 00 00       	mov    $0x1,%edx
   141ab:	ff 15 4f 1a 03 00    	callq  *0x31a4f(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   141b1:	b8 02 00 00 00       	mov    $0x2,%eax
   141b6:	48 89 da             	mov    %rbx,%rdx
   141b9:	48 83 c4 10          	add    $0x10,%rsp
   141bd:	5b                   	pop    %rbx
   141be:	41 5e                	pop    %r14
   141c0:	41 5f                	pop    %r15
   141c2:	c3                   	retq   
   141c3:	bf 18 00 00 00       	mov    $0x18,%edi
   141c8:	be 08 00 00 00       	mov    $0x8,%esi
   141cd:	ff 15 55 19 03 00    	callq  *0x31955(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   141d3:	0f 0b                	ud2    
   141d5:	bf 21 00 00 00       	mov    $0x21,%edi
   141da:	be 01 00 00 00       	mov    $0x1,%esi
   141df:	ff 15 43 19 03 00    	callq  *0x31943(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   141e5:	0f 0b                	ud2    
   141e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   141ee:	00 00 

00000000000141f0 <std::fs::OpenOptions::_open>:
   141f0:	55                   	push   %rbp
   141f1:	41 57                	push   %r15
   141f3:	41 56                	push   %r14
   141f5:	41 55                	push   %r13
   141f7:	41 54                	push   %r12
   141f9:	53                   	push   %rbx
   141fa:	48 83 ec 28          	sub    $0x28,%rsp
   141fe:	49 89 cc             	mov    %rcx,%r12
   14201:	49 89 d5             	mov    %rdx,%r13
   14204:	49 89 f6             	mov    %rsi,%r14
   14207:	49 89 ff             	mov    %rdi,%r15
   1420a:	48 89 cb             	mov    %rcx,%rbx
   1420d:	48 ff c3             	inc    %rbx
   14210:	75 35                	jne    14247 <std::fs::OpenOptions::_open+0x57>
   14212:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
   14219:	be 01 00 00 00       	mov    $0x1,%esi
   1421e:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   14225:	ff 15 5d 19 03 00    	callq  *0x3195d(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   1422b:	48 89 c5             	mov    %rax,%rbp
   1422e:	48 85 c0             	test   %rax,%rax
   14231:	75 2e                	jne    14261 <std::fs::OpenOptions::_open+0x71>
   14233:	be 01 00 00 00       	mov    $0x1,%esi
   14238:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   1423f:	ff 15 e3 18 03 00    	callq  *0x318e3(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   14245:	0f 0b                	ud2    
   14247:	be 01 00 00 00       	mov    $0x1,%esi
   1424c:	48 89 df             	mov    %rbx,%rdi
   1424f:	ff 15 33 19 03 00    	callq  *0x31933(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   14255:	48 85 c0             	test   %rax,%rax
   14258:	0f 84 db 00 00 00    	je     14339 <std::fs::OpenOptions::_open+0x149>
   1425e:	48 89 c5             	mov    %rax,%rbp
   14261:	48 89 ef             	mov    %rbp,%rdi
   14264:	4c 89 ee             	mov    %r13,%rsi
   14267:	4c 89 e2             	mov    %r12,%rdx
   1426a:	ff 15 90 1a 03 00    	callq  *0x31a90(%rip)        # 45d00 <memcpy@GLIBC_2.14>
   14270:	48 89 ef             	mov    %rbp,%rdi
   14273:	31 f6                	xor    %esi,%esi
   14275:	4c 89 e2             	mov    %r12,%rdx
   14278:	ff 15 f2 19 03 00    	callq  *0x319f2(%rip)        # 45c70 <memchr@GLIBC_2.2.5>
   1427e:	48 85 c0             	test   %rax,%rax
   14281:	74 36                	je     142b9 <std::fs::OpenOptions::_open+0xc9>
   14283:	48 29 e8             	sub    %rbp,%rax
   14286:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1428b:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
   14290:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   14295:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
   1429a:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   1429f:	ff 15 7b 18 03 00    	callq  *0x3187b(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x190>
   142a5:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   142aa:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   142af:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%rsp)
   142b6:	00 
   142b7:	eb 49                	jmp    14302 <std::fs::OpenOptions::_open+0x112>
   142b9:	48 89 6c 24 08       	mov    %rbp,0x8(%rsp)
   142be:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
   142c3:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   142c8:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   142cd:	ff 15 7d 1a 03 00    	callq  *0x31a7d(%rip)        # 45d50 <_GLOBAL_OFFSET_TABLE_+0x3c0>
   142d3:	48 89 c3             	mov    %rax,%rbx
   142d6:	48 89 d5             	mov    %rdx,%rbp
   142d9:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   142de:	48 89 c6             	mov    %rax,%rsi
   142e1:	4c 89 f1             	mov    %r14,%rcx
   142e4:	e8 17 74 00 00       	callq  1b700 <std::sys::unix::fs::File::open_c>
   142e9:	c6 03 00             	movb   $0x0,(%rbx)
   142ec:	48 85 ed             	test   %rbp,%rbp
   142ef:	74 11                	je     14302 <std::fs::OpenOptions::_open+0x112>
   142f1:	ba 01 00 00 00       	mov    $0x1,%edx
   142f6:	48 89 df             	mov    %rbx,%rdi
   142f9:	48 89 ee             	mov    %rbp,%rsi
   142fc:	ff 15 fe 18 03 00    	callq  *0x318fe(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   14302:	83 7c 24 08 01       	cmpl   $0x1,0x8(%rsp)
   14307:	75 11                	jne    1431a <std::fs::OpenOptions::_open+0x12a>
   14309:	0f 10 44 24 10       	movups 0x10(%rsp),%xmm0
   1430e:	41 0f 11 47 08       	movups %xmm0,0x8(%r15)
   14313:	b8 01 00 00 00       	mov    $0x1,%eax
   14318:	eb 0a                	jmp    14324 <std::fs::OpenOptions::_open+0x134>
   1431a:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   1431e:	41 89 47 04          	mov    %eax,0x4(%r15)
   14322:	31 c0                	xor    %eax,%eax
   14324:	41 89 07             	mov    %eax,(%r15)
   14327:	4c 89 f8             	mov    %r15,%rax
   1432a:	48 83 c4 28          	add    $0x28,%rsp
   1432e:	5b                   	pop    %rbx
   1432f:	41 5c                	pop    %r12
   14331:	41 5d                	pop    %r13
   14333:	41 5e                	pop    %r14
   14335:	41 5f                	pop    %r15
   14337:	5d                   	pop    %rbp
   14338:	c3                   	retq   
   14339:	be 01 00 00 00       	mov    $0x1,%esi
   1433e:	48 89 df             	mov    %rbx,%rdi
   14341:	ff 15 e1 17 03 00    	callq  *0x317e1(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   14347:	0f 0b                	ud2    
   14349:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000014350 <std::io::buffered::BufWriter<W>::flush_buf>:
   14350:	55                   	push   %rbp
   14351:	41 57                	push   %r15
   14353:	41 56                	push   %r14
   14355:	41 55                	push   %r13
   14357:	41 54                	push   %r12
   14359:	53                   	push   %rbx
   1435a:	48 83 ec 38          	sub    $0x38,%rsp
   1435e:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   14363:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   1436a:	00 00 
   1436c:	80 7f 18 01          	cmpb   $0x1,0x18(%rdi)
   14370:	0f 85 13 03 00 00    	jne    14689 <std::io::buffered::BufWriter<W>::flush_buf+0x339>
   14376:	49 89 fe             	mov    %rdi,%r14
   14379:	48 8b 77 10          	mov    0x10(%rdi),%rsi
   1437d:	48 85 f6             	test   %rsi,%rsi
   14380:	0f 84 a0 01 00 00    	je     14526 <std::io::buffered::BufWriter<W>::flush_buf+0x1d6>
   14386:	45 31 ed             	xor    %r13d,%r13d
   14389:	48 8b 1d 48 17 03 00 	mov    0x31748(%rip),%rbx        # 45ad8 <write@GLIBC_2.2.5>
   14390:	4c 8d 3d b9 0f ff ff 	lea    -0xf047(%rip),%r15        # 5350 <__rust_dealloc>
   14397:	e9 24 00 00 00       	jmpq   143c0 <std::io::buffered::BufWriter<W>::flush_buf+0x70>
   1439c:	0f 1f 40 00          	nopl   0x0(%rax)
   143a0:	be 18 00 00 00       	mov    $0x18,%esi
   143a5:	ba 08 00 00 00       	mov    $0x8,%edx
   143aa:	48 89 df             	mov    %rbx,%rdi
   143ad:	41 ff d7             	callq  *%r15
   143b0:	48 89 eb             	mov    %rbp,%rbx
   143b3:	49 8b 76 10          	mov    0x10(%r14),%rsi
   143b7:	4c 39 ee             	cmp    %r13,%rsi
   143ba:	0f 86 30 01 00 00    	jbe    144f0 <std::io::buffered::BufWriter<W>::flush_buf+0x1a0>
   143c0:	41 c6 46 19 01       	movb   $0x1,0x19(%r14)
   143c5:	48 89 f5             	mov    %rsi,%rbp
   143c8:	4c 29 ed             	sub    %r13,%rbp
   143cb:	0f 82 a1 02 00 00    	jb     14672 <std::io::buffered::BufWriter<W>::flush_buf+0x322>
   143d1:	49 8b 36             	mov    (%r14),%rsi
   143d4:	4c 01 ee             	add    %r13,%rsi
   143d7:	48 ba ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rdx
   143de:	ff ff 7f 
   143e1:	48 39 d5             	cmp    %rdx,%rbp
   143e4:	48 0f 42 d5          	cmovb  %rbp,%rdx
   143e8:	bf 01 00 00 00       	mov    $0x1,%edi
   143ed:	ff d3                	callq  *%rbx
   143ef:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   143f3:	74 0b                	je     14400 <std::io::buffered::BufWriter<W>::flush_buf+0xb0>
   143f5:	31 c9                	xor    %ecx,%ecx
   143f7:	31 d2                	xor    %edx,%edx
   143f9:	48 89 c5             	mov    %rax,%rbp
   143fc:	eb 4c                	jmp    1444a <std::io::buffered::BufWriter<W>::flush_buf+0xfa>
   143fe:	66 90                	xchg   %ax,%ax
   14400:	ff 15 1a 16 03 00    	callq  *0x3161a(%rip)        # 45a20 <__errno_location@GLIBC_2.2.5>
   14406:	8b 00                	mov    (%rax),%eax
   14408:	66 48 0f 6e c0       	movq   %rax,%xmm0
   1440d:	66 0f 74 05 5b 1d 02 	pcmpeqb 0x21d5b(%rip),%xmm0        # 36170 <_fini+0x10ec>
   14414:	00 
   14415:	66 0f d7 c8          	pmovmskb %xmm0,%ecx
   14419:	81 f9 ff ff 00 00    	cmp    $0xffff,%ecx
   1441f:	75 18                	jne    14439 <std::io::buffered::BufWriter<W>::flush_buf+0xe9>
   14421:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   14426:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   1442d:	00 00 
   1442f:	41 c6 46 19 00       	movb   $0x0,0x19(%r14)
   14434:	45 31 e4             	xor    %r12d,%r12d
   14437:	eb 47                	jmp    14480 <std::io::buffered::BufWriter<W>::flush_buf+0x130>
   14439:	48 c1 e0 20          	shl    $0x20,%rax
   1443d:	ba 01 00 00 00       	mov    $0x1,%edx
   14442:	b1 01                	mov    $0x1,%cl
   14444:	48 89 c5             	mov    %rax,%rbp
   14447:	45 31 e4             	xor    %r12d,%r12d
   1444a:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   1444f:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   14454:	4c 89 64 24 28       	mov    %r12,0x28(%rsp)
   14459:	41 c6 46 19 00       	movb   $0x0,0x19(%r14)
   1445e:	84 c9                	test   %cl,%cl
   14460:	74 1e                	je     14480 <std::io::buffered::BufWriter<W>::flush_buf+0x130>
   14462:	40 84 ed             	test   %bpl,%bpl
   14465:	74 3a                	je     144a1 <std::io::buffered::BufWriter<W>::flush_buf+0x151>
   14467:	40 80 fd 01          	cmp    $0x1,%bpl
   1446b:	74 24                	je     14491 <std::io::buffered::BufWriter<W>::flush_buf+0x141>
   1446d:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   14472:	80 78 10 0f          	cmpb   $0xf,0x10(%rax)
   14476:	74 47                	je     144bf <std::io::buffered::BufWriter<W>::flush_buf+0x16f>
   14478:	e9 92 01 00 00       	jmpq   1460f <std::io::buffered::BufWriter<W>::flush_buf+0x2bf>
   1447d:	0f 1f 00             	nopl   (%rax)
   14480:	48 85 ed             	test   %rbp,%rbp
   14483:	0f 84 c2 00 00 00    	je     1454b <std::io::buffered::BufWriter<W>::flush_buf+0x1fb>
   14489:	49 01 ed             	add    %rbp,%r13
   1448c:	e9 22 ff ff ff       	jmpq   143b3 <std::io::buffered::BufWriter<W>::flush_buf+0x63>
   14491:	48 89 e8             	mov    %rbp,%rax
   14494:	48 c1 e8 08          	shr    $0x8,%rax
   14498:	3c 0f                	cmp    $0xf,%al
   1449a:	74 19                	je     144b5 <std::io::buffered::BufWriter<W>::flush_buf+0x165>
   1449c:	e9 6e 01 00 00       	jmpq   1460f <std::io::buffered::BufWriter<W>::flush_buf+0x2bf>
   144a1:	48 89 ef             	mov    %rbp,%rdi
   144a4:	48 c1 ef 20          	shr    $0x20,%rdi
   144a8:	e8 93 7d 00 00       	callq  1c240 <std::sys::unix::decode_error_kind>
   144ad:	3c 0f                	cmp    $0xf,%al
   144af:	0f 85 5a 01 00 00    	jne    1460f <std::io::buffered::BufWriter<W>::flush_buf+0x2bf>
   144b5:	40 80 fd 02          	cmp    $0x2,%bpl
   144b9:	0f 82 f4 fe ff ff    	jb     143b3 <std::io::buffered::BufWriter<W>::flush_buf+0x63>
   144bf:	48 89 dd             	mov    %rbx,%rbp
   144c2:	48 8b 5c 24 28       	mov    0x28(%rsp),%rbx
   144c7:	48 8b 3b             	mov    (%rbx),%rdi
   144ca:	48 8b 43 08          	mov    0x8(%rbx),%rax
   144ce:	ff 10                	callq  *(%rax)
   144d0:	48 8b 43 08          	mov    0x8(%rbx),%rax
   144d4:	48 8b 70 08          	mov    0x8(%rax),%rsi
   144d8:	48 85 f6             	test   %rsi,%rsi
   144db:	0f 84 bf fe ff ff    	je     143a0 <std::io::buffered::BufWriter<W>::flush_buf+0x50>
   144e1:	48 8b 3b             	mov    (%rbx),%rdi
   144e4:	48 8b 50 10          	mov    0x10(%rax),%rdx
   144e8:	41 ff d7             	callq  *%r15
   144eb:	e9 b0 fe ff ff       	jmpq   143a0 <std::io::buffered::BufWriter<W>::flush_buf+0x50>
   144f0:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
   144f5:	4d 85 ed             	test   %r13,%r13
   144f8:	74 2c                	je     14526 <std::io::buffered::BufWriter<W>::flush_buf+0x1d6>
   144fa:	48 89 f3             	mov    %rsi,%rbx
   144fd:	4c 29 eb             	sub    %r13,%rbx
   14500:	0f 82 9e 01 00 00    	jb     146a4 <std::io::buffered::BufWriter<W>::flush_buf+0x354>
   14506:	49 c7 46 10 00 00 00 	movq   $0x0,0x10(%r14)
   1450d:	00 
   1450e:	74 16                	je     14526 <std::io::buffered::BufWriter<W>::flush_buf+0x1d6>
   14510:	49 8b 3e             	mov    (%r14),%rdi
   14513:	49 01 fd             	add    %rdi,%r13
   14516:	4c 89 ee             	mov    %r13,%rsi
   14519:	48 89 da             	mov    %rbx,%rdx
   1451c:	ff 15 4e 19 03 00    	callq  *0x3194e(%rip)        # 45e70 <memmove@GLIBC_2.2.5>
   14522:	49 89 5e 10          	mov    %rbx,0x10(%r14)
   14526:	40 b5 03             	mov    $0x3,%bpl
   14529:	4d 0f a4 fc 08       	shld   $0x8,%r15,%r12
   1452e:	49 c1 e7 08          	shl    $0x8,%r15
   14532:	40 0f b6 c5          	movzbl %bpl,%eax
   14536:	4c 09 f8             	or     %r15,%rax
   14539:	4c 89 e2             	mov    %r12,%rdx
   1453c:	48 83 c4 38          	add    $0x38,%rsp
   14540:	5b                   	pop    %rbx
   14541:	41 5c                	pop    %r12
   14543:	41 5d                	pop    %r13
   14545:	41 5e                	pop    %r14
   14547:	41 5f                	pop    %r15
   14549:	5d                   	pop    %rbp
   1454a:	c3                   	retq   
   1454b:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
   14550:	bf 21 00 00 00       	mov    $0x21,%edi
   14555:	be 01 00 00 00       	mov    $0x1,%esi
   1455a:	ff 15 28 16 03 00    	callq  *0x31628(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   14560:	48 85 c0             	test   %rax,%rax
   14563:	0f 84 5f 01 00 00    	je     146c8 <std::io::buffered::BufWriter<W>::flush_buf+0x378>
   14569:	48 89 c3             	mov    %rax,%rbx
   1456c:	8a 05 7d 36 02 00    	mov    0x2367d(%rip),%al        # 37bef <str.6+0x8cf>
   14572:	88 43 20             	mov    %al,0x20(%rbx)
   14575:	0f 10 05 63 36 02 00 	movups 0x23663(%rip),%xmm0        # 37bdf <str.6+0x8bf>
   1457c:	0f 11 43 10          	movups %xmm0,0x10(%rbx)
   14580:	f3 0f 6f 05 47 36 02 	movdqu 0x23647(%rip),%xmm0        # 37bcf <str.6+0x8af>
   14587:	00 
   14588:	f3 0f 7f 03          	movdqu %xmm0,(%rbx)
   1458c:	bf 18 00 00 00       	mov    $0x18,%edi
   14591:	be 08 00 00 00       	mov    $0x8,%esi
   14596:	ff 15 ec 15 03 00    	callq  *0x315ec(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   1459c:	48 85 c0             	test   %rax,%rax
   1459f:	0f 84 11 01 00 00    	je     146b6 <std::io::buffered::BufWriter<W>::flush_buf+0x366>
   145a5:	49 89 c4             	mov    %rax,%r12
   145a8:	48 89 18             	mov    %rbx,(%rax)
   145ab:	66 0f 6f 05 1d 1b 02 	movdqa 0x21b1d(%rip),%xmm0        # 360d0 <_fini+0x104c>
   145b2:	00 
   145b3:	f3 0f 7f 40 08       	movdqu %xmm0,0x8(%rax)
   145b8:	bf 18 00 00 00       	mov    $0x18,%edi
   145bd:	be 08 00 00 00       	mov    $0x8,%esi
   145c2:	ff 15 c0 15 03 00    	callq  *0x315c0(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   145c8:	48 85 c0             	test   %rax,%rax
   145cb:	0f 84 e5 00 00 00    	je     146b6 <std::io::buffered::BufWriter<W>::flush_buf+0x366>
   145d1:	49 89 c7             	mov    %rax,%r15
   145d4:	4c 89 20             	mov    %r12,(%rax)
   145d7:	48 8d 05 c2 f5 02 00 	lea    0x2f5c2(%rip),%rax        # 43ba0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x648>
   145de:	49 89 47 08          	mov    %rax,0x8(%r15)
   145e2:	41 c6 47 10 0e       	movb   $0xe,0x10(%r15)
   145e7:	8b 44 24 31          	mov    0x31(%rsp),%eax
   145eb:	8b 4c 24 34          	mov    0x34(%rsp),%ecx
   145ef:	41 89 47 11          	mov    %eax,0x11(%r15)
   145f3:	41 89 4f 14          	mov    %ecx,0x14(%r15)
   145f7:	4d 89 fc             	mov    %r15,%r12
   145fa:	49 c1 ec 08          	shr    $0x8,%r12
   145fe:	49 c1 e7 38          	shl    $0x38,%r15
   14602:	40 b5 02             	mov    $0x2,%bpl
   14605:	4d 85 ed             	test   %r13,%r13
   14608:	75 33                	jne    1463d <std::io::buffered::BufWriter<W>::flush_buf+0x2ed>
   1460a:	e9 1a ff ff ff       	jmpq   14529 <std::io::buffered::BufWriter<W>::flush_buf+0x1d9>
   1460f:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
   14614:	0f b6 44 24 2f       	movzbl 0x2f(%rsp),%eax
   14619:	c1 e0 10             	shl    $0x10,%eax
   1461c:	0f b7 4c 24 2d       	movzwl 0x2d(%rsp),%ecx
   14621:	09 c1                	or     %eax,%ecx
   14623:	48 c1 e1 20          	shl    $0x20,%rcx
   14627:	44 8b 64 24 29       	mov    0x29(%rsp),%r12d
   1462c:	49 09 cc             	or     %rcx,%r12
   1462f:	4c 8b 7c 24 21       	mov    0x21(%rsp),%r15
   14634:	4d 85 ed             	test   %r13,%r13
   14637:	0f 84 ec fe ff ff    	je     14529 <std::io::buffered::BufWriter<W>::flush_buf+0x1d9>
   1463d:	49 8b 76 10          	mov    0x10(%r14),%rsi
   14641:	48 89 f3             	mov    %rsi,%rbx
   14644:	4c 29 eb             	sub    %r13,%rbx
   14647:	72 5b                	jb     146a4 <std::io::buffered::BufWriter<W>::flush_buf+0x354>
   14649:	49 c7 46 10 00 00 00 	movq   $0x0,0x10(%r14)
   14650:	00 
   14651:	0f 84 d2 fe ff ff    	je     14529 <std::io::buffered::BufWriter<W>::flush_buf+0x1d9>
   14657:	49 8b 3e             	mov    (%r14),%rdi
   1465a:	49 01 fd             	add    %rdi,%r13
   1465d:	4c 89 ee             	mov    %r13,%rsi
   14660:	48 89 da             	mov    %rbx,%rdx
   14663:	ff 15 07 18 03 00    	callq  *0x31807(%rip)        # 45e70 <memmove@GLIBC_2.2.5>
   14669:	49 89 5e 10          	mov    %rbx,0x10(%r14)
   1466d:	e9 b7 fe ff ff       	jmpq   14529 <std::io::buffered::BufWriter<W>::flush_buf+0x1d9>
   14672:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
   14677:	48 8d 15 a2 f5 02 00 	lea    0x2f5a2(%rip),%rdx        # 43c20 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x6c8>
   1467e:	4c 89 ef             	mov    %r13,%rdi
   14681:	ff 15 71 17 03 00    	callq  *0x31771(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x468>
   14687:	0f 0b                	ud2    
   14689:	48 8d 3d 6a 2f 02 00 	lea    0x22f6a(%rip),%rdi        # 375fa <str.6+0x2da>
   14690:	48 8d 15 71 f5 02 00 	lea    0x2f571(%rip),%rdx        # 43c08 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x6b0>
   14697:	be 2b 00 00 00       	mov    $0x2b,%esi
   1469c:	ff 15 3e 18 03 00    	callq  *0x3183e(%rip)        # 45ee0 <_GLOBAL_OFFSET_TABLE_+0x550>
   146a2:	eb e3                	jmp    14687 <std::io::buffered::BufWriter<W>::flush_buf+0x337>
   146a4:	48 8d 15 15 f2 02 00 	lea    0x2f215(%rip),%rdx        # 438c0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x368>
   146ab:	4c 89 ef             	mov    %r13,%rdi
   146ae:	ff 15 7c 13 03 00    	callq  *0x3137c(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   146b4:	0f 0b                	ud2    
   146b6:	bf 18 00 00 00       	mov    $0x18,%edi
   146bb:	be 08 00 00 00       	mov    $0x8,%esi
   146c0:	ff 15 62 14 03 00    	callq  *0x31462(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   146c6:	0f 0b                	ud2    
   146c8:	bf 21 00 00 00       	mov    $0x21,%edi
   146cd:	be 01 00 00 00       	mov    $0x1,%esi
   146d2:	ff 15 50 14 03 00    	callq  *0x31450(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   146d8:	0f 0b                	ud2    
   146da:	49 89 c6             	mov    %rax,%r14
   146dd:	eb 1c                	jmp    146fb <std::io::buffered::BufWriter<W>::flush_buf+0x3ab>
   146df:	49 89 c6             	mov    %rax,%r14
   146e2:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
   146e7:	48 8b 3b             	mov    (%rbx),%rdi
   146ea:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   146ee:	e8 ed 51 ff ff       	callq  98e0 <alloc::alloc::box_free>
   146f3:	48 89 df             	mov    %rbx,%rdi
   146f6:	e8 05 52 ff ff       	callq  9900 <alloc::alloc::box_free>
   146fb:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   14700:	e8 eb 15 ff ff       	callq  5cf0 <core::ptr::drop_in_place>
   14705:	4c 89 f7             	mov    %r14,%rdi
   14708:	e8 43 09 ff ff       	callq  5050 <_Unwind_Resume@plt>
   1470d:	0f 0b                	ud2    
   1470f:	90                   	nop

0000000000014710 <<std::io::buffered::BufWriter<W> as std::io::Write>::write_all>:
   14710:	41 57                	push   %r15
   14712:	41 56                	push   %r14
   14714:	41 54                	push   %r12
   14716:	53                   	push   %rbx
   14717:	50                   	push   %rax
   14718:	49 89 d6             	mov    %rdx,%r14
   1471b:	49 89 f7             	mov    %rsi,%r15
   1471e:	48 89 fb             	mov    %rdi,%rbx
   14721:	48 8b 47 10          	mov    0x10(%rdi),%rax
   14725:	48 01 d0             	add    %rdx,%rax
   14728:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   1472c:	48 39 f0             	cmp    %rsi,%rax
   1472f:	76 14                	jbe    14745 <<std::io::buffered::BufWriter<W> as std::io::Write>::write_all+0x35>
   14731:	48 89 df             	mov    %rbx,%rdi
   14734:	e8 17 fc ff ff       	callq  14350 <std::io::buffered::BufWriter<W>::flush_buf>
   14739:	3c 03                	cmp    $0x3,%al
   1473b:	0f 85 c0 00 00 00    	jne    14801 <<std::io::buffered::BufWriter<W> as std::io::Write>::write_all+0xf1>
   14741:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   14745:	4c 39 f6             	cmp    %r14,%rsi
   14748:	76 68                	jbe    147b2 <<std::io::buffered::BufWriter<W> as std::io::Write>::write_all+0xa2>
   1474a:	48 8b 43 10          	mov    0x10(%rbx),%rax
   1474e:	48 89 f1             	mov    %rsi,%rcx
   14751:	48 29 c1             	sub    %rax,%rcx
   14754:	4c 39 f1             	cmp    %r14,%rcx
   14757:	0f 83 b2 00 00 00    	jae    1480f <<std::io::buffered::BufWriter<W> as std::io::Write>::write_all+0xff>
   1475d:	4c 01 f0             	add    %r14,%rax
   14760:	0f 82 32 01 00 00    	jb     14898 <<std::io::buffered::BufWriter<W> as std::io::Write>::write_all+0x188>
   14766:	48 8d 0c 36          	lea    (%rsi,%rsi,1),%rcx
   1476a:	48 39 c1             	cmp    %rax,%rcx
   1476d:	48 0f 47 c1          	cmova  %rcx,%rax
   14771:	48 83 f8 08          	cmp    $0x8,%rax
   14775:	41 bc 08 00 00 00    	mov    $0x8,%r12d
   1477b:	4c 0f 47 e0          	cmova  %rax,%r12
   1477f:	48 8b 3b             	mov    (%rbx),%rdi
   14782:	48 85 ff             	test   %rdi,%rdi
   14785:	0f 84 c8 00 00 00    	je     14853 <<std::io::buffered::BufWriter<W> as std::io::Write>::write_all+0x143>
   1478b:	ba 01 00 00 00       	mov    $0x1,%edx
   14790:	4c 89 e1             	mov    %r12,%rcx
   14793:	ff 15 df 17 03 00    	callq  *0x317df(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
   14799:	48 89 c7             	mov    %rax,%rdi
   1479c:	48 85 c0             	test   %rax,%rax
   1479f:	0f 84 c8 00 00 00    	je     1486d <<std::io::buffered::BufWriter<W> as std::io::Write>::write_all+0x15d>
   147a5:	48 89 3b             	mov    %rdi,(%rbx)
   147a8:	4c 89 63 08          	mov    %r12,0x8(%rbx)
   147ac:	48 8b 43 10          	mov    0x10(%rbx),%rax
   147b0:	eb 60                	jmp    14812 <<std::io::buffered::BufWriter<W> as std::io::Write>::write_all+0x102>
   147b2:	c6 43 19 01          	movb   $0x1,0x19(%rbx)
   147b6:	80 7b 18 01          	cmpb   $0x1,0x18(%rbx)
   147ba:	0f 85 bd 00 00 00    	jne    1487d <<std::io::buffered::BufWriter<W> as std::io::Write>::write_all+0x16d>
   147c0:	4c 89 ff             	mov    %r15,%rdi
   147c3:	4c 89 f6             	mov    %r14,%rsi
   147c6:	e8 25 10 00 00       	callq  157f0 <std::io::Write::write_all>
   147cb:	48 89 d1             	mov    %rdx,%rcx
   147ce:	48 89 d7             	mov    %rdx,%rdi
   147d1:	48 0f a4 c7 20       	shld   $0x20,%rax,%rdi
   147d6:	3c 03                	cmp    $0x3,%al
   147d8:	75 4f                	jne    14829 <<std::io::buffered::BufWriter<W> as std::io::Write>::write_all+0x119>
   147da:	48 89 c6             	mov    %rax,%rsi
   147dd:	48 0f ac ce 08       	shrd   $0x8,%rcx,%rsi
   147e2:	48 89 ca             	mov    %rcx,%rdx
   147e5:	48 c1 ea 08          	shr    $0x8,%rdx
   147e9:	48 c1 e1 38          	shl    $0x38,%rcx
   147ed:	89 ff                	mov    %edi,%edi
   147ef:	48 c1 e7 18          	shl    $0x18,%rdi
   147f3:	81 e6 ff ff ff 00    	and    $0xffffff,%esi
   147f9:	48 09 ce             	or     %rcx,%rsi
   147fc:	48 09 fe             	or     %rdi,%rsi
   147ff:	eb 33                	jmp    14834 <<std::io::buffered::BufWriter<W> as std::io::Write>::write_all+0x124>
   14801:	48 89 c6             	mov    %rax,%rsi
   14804:	48 0f ac d6 08       	shrd   $0x8,%rdx,%rsi
   14809:	48 c1 ea 08          	shr    $0x8,%rdx
   1480d:	eb 29                	jmp    14838 <<std::io::buffered::BufWriter<W> as std::io::Write>::write_all+0x128>
   1480f:	48 8b 3b             	mov    (%rbx),%rdi
   14812:	48 01 c7             	add    %rax,%rdi
   14815:	4c 89 fe             	mov    %r15,%rsi
   14818:	4c 89 f2             	mov    %r14,%rdx
   1481b:	ff 15 df 14 03 00    	callq  *0x314df(%rip)        # 45d00 <memcpy@GLIBC_2.14>
   14821:	4c 01 73 10          	add    %r14,0x10(%rbx)
   14825:	b0 03                	mov    $0x3,%al
   14827:	eb 0f                	jmp    14838 <<std::io::buffered::BufWriter<W> as std::io::Write>::write_all+0x128>
   14829:	84 c0                	test   %al,%al
   1482b:	75 ad                	jne    147da <<std::io::buffered::BufWriter<W> as std::io::Write>::write_all+0xca>
   1482d:	83 ff 09             	cmp    $0x9,%edi
   14830:	75 a8                	jne    147da <<std::io::buffered::BufWriter<W> as std::io::Write>::write_all+0xca>
   14832:	b0 03                	mov    $0x3,%al
   14834:	c6 43 19 00          	movb   $0x0,0x19(%rbx)
   14838:	48 0f a4 f2 08       	shld   $0x8,%rsi,%rdx
   1483d:	48 c1 e6 08          	shl    $0x8,%rsi
   14841:	0f b6 c0             	movzbl %al,%eax
   14844:	48 09 f0             	or     %rsi,%rax
   14847:	48 83 c4 08          	add    $0x8,%rsp
   1484b:	5b                   	pop    %rbx
   1484c:	41 5c                	pop    %r12
   1484e:	41 5e                	pop    %r14
   14850:	41 5f                	pop    %r15
   14852:	c3                   	retq   
   14853:	be 01 00 00 00       	mov    $0x1,%esi
   14858:	4c 89 e7             	mov    %r12,%rdi
   1485b:	ff 15 27 13 03 00    	callq  *0x31327(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   14861:	48 89 c7             	mov    %rax,%rdi
   14864:	48 85 c0             	test   %rax,%rax
   14867:	0f 85 38 ff ff ff    	jne    147a5 <<std::io::buffered::BufWriter<W> as std::io::Write>::write_all+0x95>
   1486d:	be 01 00 00 00       	mov    $0x1,%esi
   14872:	4c 89 e7             	mov    %r12,%rdi
   14875:	ff 15 ad 12 03 00    	callq  *0x312ad(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   1487b:	0f 0b                	ud2    
   1487d:	48 8d 3d 76 2d 02 00 	lea    0x22d76(%rip),%rdi        # 375fa <str.6+0x2da>
   14884:	48 8d 15 ad f3 02 00 	lea    0x2f3ad(%rip),%rdx        # 43c38 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x6e0>
   1488b:	be 2b 00 00 00       	mov    $0x2b,%esi
   14890:	ff 15 4a 16 03 00    	callq  *0x3164a(%rip)        # 45ee0 <_GLOBAL_OFFSET_TABLE_+0x550>
   14896:	0f 0b                	ud2    
   14898:	ff 15 4a 12 03 00    	callq  *0x3124a(%rip)        # 45ae8 <_GLOBAL_OFFSET_TABLE_+0x158>
   1489e:	0f 0b                	ud2    

00000000000148a0 <<std::io::error::Error as core::fmt::Debug>::fmt>:
   148a0:	ff 25 0a 15 03 00    	jmpq   *0x3150a(%rip)        # 45db0 <_GLOBAL_OFFSET_TABLE_+0x420>
   148a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   148ad:	00 00 00 

00000000000148b0 <<std::io::error::Repr as core::fmt::Debug>::fmt>:
   148b0:	41 57                	push   %r15
   148b2:	41 56                	push   %r14
   148b4:	53                   	push   %rbx
   148b5:	48 83 ec 30          	sub    $0x30,%rsp
   148b9:	0f b6 07             	movzbl (%rdi),%eax
   148bc:	48 85 c0             	test   %rax,%rax
   148bf:	74 4d                	je     1490e <<std::io::error::Repr as core::fmt::Debug>::fmt+0x5e>
   148c1:	83 f8 02             	cmp    $0x2,%eax
   148c4:	0f 84 29 01 00 00    	je     149f3 <<std::io::error::Repr as core::fmt::Debug>::fmt+0x143>
   148ca:	8a 47 01             	mov    0x1(%rdi),%al
   148cd:	88 44 24 08          	mov    %al,0x8(%rsp)
   148d1:	48 8d 15 98 2e 02 00 	lea    0x22e98(%rip),%rdx        # 37770 <str.6+0x450>
   148d8:	48 8d 5c 24 18       	lea    0x18(%rsp),%rbx
   148dd:	b9 04 00 00 00       	mov    $0x4,%ecx
   148e2:	48 89 df             	mov    %rbx,%rdi
   148e5:	ff 15 9d 15 03 00    	callq  *0x3159d(%rip)        # 45e88 <_GLOBAL_OFFSET_TABLE_+0x4f8>
   148eb:	48 8d 15 5e f3 02 00 	lea    0x2f35e(%rip),%rdx        # 43c50 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x6f8>
   148f2:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   148f7:	48 89 df             	mov    %rbx,%rdi
   148fa:	ff 15 38 14 03 00    	callq  *0x31438(%rip)        # 45d38 <_GLOBAL_OFFSET_TABLE_+0x3a8>
   14900:	48 89 c7             	mov    %rax,%rdi
   14903:	ff 15 ff 10 03 00    	callq  *0x310ff(%rip)        # 45a08 <_GLOBAL_OFFSET_TABLE_+0x78>
   14909:	e9 6a 01 00 00       	jmpq   14a78 <<std::io::error::Repr as core::fmt::Debug>::fmt+0x1c8>
   1490e:	8b 47 04             	mov    0x4(%rdi),%eax
   14911:	89 44 24 04          	mov    %eax,0x4(%rsp)
   14915:	48 8d 05 dd 33 02 00 	lea    0x233dd(%rip),%rax        # 37cf9 <str.6+0x9d9>
   1491c:	ba 02 00 00 00       	mov    $0x2,%edx
   14921:	48 89 f7             	mov    %rsi,%rdi
   14924:	48 89 c6             	mov    %rax,%rsi
   14927:	ff 15 13 11 03 00    	callq  *0x31113(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb0>
   1492d:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   14932:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   14937:	48 8d 35 36 2e 02 00 	lea    0x22e36(%rip),%rsi        # 37774 <str.6+0x454>
   1493e:	4c 8d 05 2b f3 02 00 	lea    0x2f32b(%rip),%r8        # 43c70 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x718>
   14945:	4c 8d 3d b4 b2 01 00 	lea    0x1b2b4(%rip),%r15        # 2fc00 <core::fmt::builders::DebugStruct::field>
   1494c:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   14951:	48 8d 4c 24 04       	lea    0x4(%rsp),%rcx
   14956:	ba 04 00 00 00       	mov    $0x4,%edx
   1495b:	41 ff d7             	callq  *%r15
   1495e:	48 89 c3             	mov    %rax,%rbx
   14961:	8b 7c 24 04          	mov    0x4(%rsp),%edi
   14965:	e8 d6 78 00 00       	callq  1c240 <std::sys::unix::decode_error_kind>
   1496a:	88 44 24 03          	mov    %al,0x3(%rsp)
   1496e:	48 8d 35 03 2e 02 00 	lea    0x22e03(%rip),%rsi        # 37778 <str.6+0x458>
   14975:	4c 8d 05 d4 f2 02 00 	lea    0x2f2d4(%rip),%r8        # 43c50 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x6f8>
   1497c:	48 8d 4c 24 03       	lea    0x3(%rsp),%rcx
   14981:	ba 04 00 00 00       	mov    $0x4,%edx
   14986:	48 89 df             	mov    %rbx,%rdi
   14989:	41 ff d7             	callq  *%r15
   1498c:	48 89 c3             	mov    %rax,%rbx
   1498f:	8b 74 24 04          	mov    0x4(%rsp),%esi
   14993:	4c 8d 74 24 18       	lea    0x18(%rsp),%r14
   14998:	4c 89 f7             	mov    %r14,%rdi
   1499b:	e8 e0 71 00 00       	callq  1bb80 <std::sys::unix::os::error_string>
   149a0:	48 8d 35 54 33 02 00 	lea    0x23354(%rip),%rsi        # 37cfb <str.6+0x9db>
   149a7:	4c 8d 05 e2 f2 02 00 	lea    0x2f2e2(%rip),%r8        # 43c90 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x738>
   149ae:	ba 07 00 00 00       	mov    $0x7,%edx
   149b3:	48 89 df             	mov    %rbx,%rdi
   149b6:	4c 89 f1             	mov    %r14,%rcx
   149b9:	41 ff d7             	callq  *%r15
   149bc:	48 89 c7             	mov    %rax,%rdi
   149bf:	ff 15 13 12 03 00    	callq  *0x31213(%rip)        # 45bd8 <_GLOBAL_OFFSET_TABLE_+0x248>
   149c5:	89 c3                	mov    %eax,%ebx
   149c7:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   149cc:	48 85 ff             	test   %rdi,%rdi
   149cf:	0f 84 a5 00 00 00    	je     14a7a <<std::io::error::Repr as core::fmt::Debug>::fmt+0x1ca>
   149d5:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   149da:	48 85 f6             	test   %rsi,%rsi
   149dd:	0f 84 97 00 00 00    	je     14a7a <<std::io::error::Repr as core::fmt::Debug>::fmt+0x1ca>
   149e3:	ba 01 00 00 00       	mov    $0x1,%edx
   149e8:	ff 15 12 12 03 00    	callq  *0x31212(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   149ee:	e9 87 00 00 00       	jmpq   14a7a <<std::io::error::Repr as core::fmt::Debug>::fmt+0x1ca>
   149f3:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
   149f7:	4c 8d 73 10          	lea    0x10(%rbx),%r14
   149fb:	48 8d 05 42 38 02 00 	lea    0x23842(%rip),%rax        # 38244 <str.6+0xf24>
   14a02:	ba 06 00 00 00       	mov    $0x6,%edx
   14a07:	48 89 f7             	mov    %rsi,%rdi
   14a0a:	48 89 c6             	mov    %rax,%rsi
   14a0d:	ff 15 2d 10 03 00    	callq  *0x3102d(%rip)        # 45a40 <_GLOBAL_OFFSET_TABLE_+0xb0>
   14a13:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   14a18:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   14a1d:	4c 89 74 24 08       	mov    %r14,0x8(%rsp)
   14a22:	48 8d 35 4f 2d 02 00 	lea    0x22d4f(%rip),%rsi        # 37778 <str.6+0x458>
   14a29:	4c 8d 05 e0 fa 02 00 	lea    0x2fae0(%rip),%r8        # 44510 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xfb8>
   14a30:	4c 8d 3d c9 b1 01 00 	lea    0x1b1c9(%rip),%r15        # 2fc00 <core::fmt::builders::DebugStruct::field>
   14a37:	4c 8d 74 24 18       	lea    0x18(%rsp),%r14
   14a3c:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
   14a41:	ba 04 00 00 00       	mov    $0x4,%edx
   14a46:	4c 89 f7             	mov    %r14,%rdi
   14a49:	41 ff d7             	callq  *%r15
   14a4c:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   14a51:	48 8d 35 e7 37 02 00 	lea    0x237e7(%rip),%rsi        # 3823f <str.6+0xf1f>
   14a58:	4c 8d 05 d1 fa 02 00 	lea    0x2fad1(%rip),%r8        # 44530 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xfd8>
   14a5f:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
   14a64:	ba 05 00 00 00       	mov    $0x5,%edx
   14a69:	4c 89 f7             	mov    %r14,%rdi
   14a6c:	41 ff d7             	callq  *%r15
   14a6f:	4c 89 f7             	mov    %r14,%rdi
   14a72:	ff 15 60 11 03 00    	callq  *0x31160(%rip)        # 45bd8 <_GLOBAL_OFFSET_TABLE_+0x248>
   14a78:	89 c3                	mov    %eax,%ebx
   14a7a:	89 d8                	mov    %ebx,%eax
   14a7c:	48 83 c4 30          	add    $0x30,%rsp
   14a80:	5b                   	pop    %rbx
   14a81:	41 5e                	pop    %r14
   14a83:	41 5f                	pop    %r15
   14a85:	c3                   	retq   
   14a86:	48 89 c3             	mov    %rax,%rbx
   14a89:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   14a8e:	e8 ad 1c ff ff       	callq  6740 <core::ptr::drop_in_place>
   14a93:	48 89 df             	mov    %rbx,%rdi
   14a96:	e8 b5 05 ff ff       	callq  5050 <_Unwind_Resume@plt>
   14a9b:	0f 0b                	ud2    
   14a9d:	0f 1f 00             	nopl   (%rax)

0000000000014aa0 <<std::io::error::Error as core::fmt::Display>::fmt>:
   14aa0:	41 56                	push   %r14
   14aa2:	53                   	push   %rbx
   14aa3:	48 83 ec 78          	sub    $0x78,%rsp
   14aa7:	49 89 f6             	mov    %rsi,%r14
   14aaa:	0f b6 07             	movzbl (%rdi),%eax
   14aad:	48 85 c0             	test   %rax,%rax
   14ab0:	74 51                	je     14b03 <<std::io::error::Error as core::fmt::Display>::fmt+0x63>
   14ab2:	83 f8 02             	cmp    $0x2,%eax
   14ab5:	74 31                	je     14ae8 <<std::io::error::Error as core::fmt::Display>::fmt+0x48>
   14ab7:	0f b6 57 01          	movzbl 0x1(%rdi),%edx
   14abb:	48 8d 05 2e 31 02 00 	lea    0x2312e(%rip),%rax        # 37bf0 <str.6+0x8d0>
   14ac2:	b9 16 00 00 00       	mov    $0x16,%ecx
   14ac7:	48 8d 35 f6 22 02 00 	lea    0x222f6(%rip),%rsi        # 36dc4 <_fini+0x1d40>
   14ace:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
   14ad2:	48 01 f2             	add    %rsi,%rdx
   14ad5:	ff e2                	jmpq   *%rdx
   14ad7:	48 8d 05 12 18 02 00 	lea    0x21812(%rip),%rax        # 362f0 <_fini+0x126c>
   14ade:	b9 10 00 00 00       	mov    $0x10,%ecx
   14ae3:	e9 ae 01 00 00       	jmpq   14c96 <<std::io::error::Error as core::fmt::Display>::fmt+0x1f6>
   14ae8:	48 8b 47 08          	mov    0x8(%rdi),%rax
   14aec:	48 8b 38             	mov    (%rax),%rdi
   14aef:	48 8b 40 08          	mov    0x8(%rax),%rax
   14af3:	48 8b 40 40          	mov    0x40(%rax),%rax
   14af7:	4c 89 f6             	mov    %r14,%rsi
   14afa:	48 83 c4 78          	add    $0x78,%rsp
   14afe:	5b                   	pop    %rbx
   14aff:	41 5e                	pop    %r14
   14b01:	ff e0                	jmpq   *%rax
   14b03:	8b 77 04             	mov    0x4(%rdi),%esi
   14b06:	89 74 24 0c          	mov    %esi,0xc(%rsp)
   14b0a:	48 8d 5c 24 10       	lea    0x10(%rsp),%rbx
   14b0f:	48 89 df             	mov    %rbx,%rdi
   14b12:	e8 69 70 00 00       	callq  1bb80 <std::sys::unix::os::error_string>
   14b17:	48 89 5c 24 28       	mov    %rbx,0x28(%rsp)
   14b1c:	48 8d 05 fd 81 ff ff 	lea    -0x7e03(%rip),%rax        # cd20 <<alloc::string::String as core::fmt::Display>::fmt>
   14b23:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   14b28:	48 8d 44 24 0c       	lea    0xc(%rsp),%rax
   14b2d:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   14b32:	48 8d 05 27 f7 01 00 	lea    0x1f727(%rip),%rax        # 34260 <core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt>
   14b39:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   14b3e:	48 8d 05 6b f1 02 00 	lea    0x2f16b(%rip),%rax        # 43cb0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x758>
   14b45:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   14b4a:	48 c7 44 24 50 03 00 	movq   $0x3,0x50(%rsp)
   14b51:	00 00 
   14b53:	48 c7 44 24 58 00 00 	movq   $0x0,0x58(%rsp)
   14b5a:	00 00 
   14b5c:	48 8d 44 24 28       	lea    0x28(%rsp),%rax
   14b61:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   14b66:	48 c7 44 24 70 02 00 	movq   $0x2,0x70(%rsp)
   14b6d:	00 00 
   14b6f:	48 8d 74 24 48       	lea    0x48(%rsp),%rsi
   14b74:	4c 89 f7             	mov    %r14,%rdi
   14b77:	ff 15 13 13 03 00    	callq  *0x31313(%rip)        # 45e90 <_GLOBAL_OFFSET_TABLE_+0x500>
   14b7d:	89 c3                	mov    %eax,%ebx
   14b7f:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   14b84:	48 85 ff             	test   %rdi,%rdi
   14b87:	0f 84 6a 01 00 00    	je     14cf7 <<std::io::error::Error as core::fmt::Display>::fmt+0x257>
   14b8d:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   14b92:	48 85 f6             	test   %rsi,%rsi
   14b95:	0f 84 5c 01 00 00    	je     14cf7 <<std::io::error::Error as core::fmt::Display>::fmt+0x257>
   14b9b:	ba 01 00 00 00       	mov    $0x1,%edx
   14ba0:	ff 15 5a 10 03 00    	callq  *0x3105a(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   14ba6:	e9 4c 01 00 00       	jmpq   14cf7 <<std::io::error::Error as core::fmt::Display>::fmt+0x257>
   14bab:	48 8d 05 36 31 02 00 	lea    0x23136(%rip),%rax        # 37ce8 <str.6+0x9c8>
   14bb2:	b9 11 00 00 00       	mov    $0x11,%ecx
   14bb7:	e9 da 00 00 00       	jmpq   14c96 <<std::io::error::Error as core::fmt::Display>::fmt+0x1f6>
   14bbc:	48 8d 05 13 31 02 00 	lea    0x23113(%rip),%rax        # 37cd6 <str.6+0x9b6>
   14bc3:	b9 12 00 00 00       	mov    $0x12,%ecx
   14bc8:	e9 c9 00 00 00       	jmpq   14c96 <<std::io::error::Error as core::fmt::Display>::fmt+0x1f6>
   14bcd:	48 8d 05 0c 17 02 00 	lea    0x2170c(%rip),%rax        # 362e0 <_fini+0x125c>
   14bd4:	b9 10 00 00 00       	mov    $0x10,%ecx
   14bd9:	e9 b8 00 00 00       	jmpq   14c96 <<std::io::error::Error as core::fmt::Display>::fmt+0x1f6>
   14bde:	48 8d 05 df 30 02 00 	lea    0x230df(%rip),%rax        # 37cc4 <str.6+0x9a4>
   14be5:	b9 12 00 00 00       	mov    $0x12,%ecx
   14bea:	e9 a7 00 00 00       	jmpq   14c96 <<std::io::error::Error as core::fmt::Display>::fmt+0x1f6>
   14bef:	48 8d 05 c1 30 02 00 	lea    0x230c1(%rip),%rax        # 37cb7 <str.6+0x997>
   14bf6:	b9 0d 00 00 00       	mov    $0xd,%ecx
   14bfb:	e9 96 00 00 00       	jmpq   14c96 <<std::io::error::Error as core::fmt::Display>::fmt+0x1f6>
   14c00:	48 8d 05 a2 30 02 00 	lea    0x230a2(%rip),%rax        # 37ca9 <str.6+0x989>
   14c07:	e9 85 00 00 00       	jmpq   14c91 <<std::io::error::Error as core::fmt::Display>::fmt+0x1f1>
   14c0c:	48 8d 05 81 30 02 00 	lea    0x23081(%rip),%rax        # 37c94 <str.6+0x974>
   14c13:	b9 15 00 00 00       	mov    $0x15,%ecx
   14c18:	eb 7c                	jmp    14c96 <<std::io::error::Error as core::fmt::Display>::fmt+0x1f6>
   14c1a:	48 8d 05 68 30 02 00 	lea    0x23068(%rip),%rax        # 37c89 <str.6+0x969>
   14c21:	b9 0b 00 00 00       	mov    $0xb,%ecx
   14c26:	eb 6e                	jmp    14c96 <<std::io::error::Error as core::fmt::Display>::fmt+0x1f6>
   14c28:	48 8d 05 45 30 02 00 	lea    0x23045(%rip),%rax        # 37c74 <str.6+0x954>
   14c2f:	b9 15 00 00 00       	mov    $0x15,%ecx
   14c34:	eb 60                	jmp    14c96 <<std::io::error::Error as core::fmt::Display>::fmt+0x1f6>
   14c36:	48 8d 05 22 30 02 00 	lea    0x23022(%rip),%rax        # 37c5f <str.6+0x93f>
   14c3d:	b9 15 00 00 00       	mov    $0x15,%ecx
   14c42:	eb 52                	jmp    14c96 <<std::io::error::Error as core::fmt::Display>::fmt+0x1f6>
   14c44:	48 8d 05 fd 2f 02 00 	lea    0x22ffd(%rip),%rax        # 37c48 <str.6+0x928>
   14c4b:	b9 17 00 00 00       	mov    $0x17,%ecx
   14c50:	eb 44                	jmp    14c96 <<std::io::error::Error as core::fmt::Display>::fmt+0x1f6>
   14c52:	48 8d 05 e3 2f 02 00 	lea    0x22fe3(%rip),%rax        # 37c3c <str.6+0x91c>
   14c59:	b9 0c 00 00 00       	mov    $0xc,%ecx
   14c5e:	eb 36                	jmp    14c96 <<std::io::error::Error as core::fmt::Display>::fmt+0x1f6>
   14c60:	48 8d 05 cc 2f 02 00 	lea    0x22fcc(%rip),%rax        # 37c33 <str.6+0x913>
   14c67:	b9 09 00 00 00       	mov    $0x9,%ecx
   14c6c:	eb 28                	jmp    14c96 <<std::io::error::Error as core::fmt::Display>::fmt+0x1f6>
   14c6e:	48 8d 05 b4 2f 02 00 	lea    0x22fb4(%rip),%rax        # 37c29 <str.6+0x909>
   14c75:	b9 0a 00 00 00       	mov    $0xa,%ecx
   14c7a:	eb 1a                	jmp    14c96 <<std::io::error::Error as core::fmt::Display>::fmt+0x1f6>
   14c7c:	48 8d 05 91 2f 02 00 	lea    0x22f91(%rip),%rax        # 37c14 <str.6+0x8f4>
   14c83:	b9 15 00 00 00       	mov    $0x15,%ecx
   14c88:	eb 0c                	jmp    14c96 <<std::io::error::Error as core::fmt::Display>::fmt+0x1f6>
   14c8a:	48 8d 05 75 2f 02 00 	lea    0x22f75(%rip),%rax        # 37c06 <str.6+0x8e6>
   14c91:	b9 0e 00 00 00       	mov    $0xe,%ecx
   14c96:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   14c9b:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   14ca0:	48 8d 44 24 28       	lea    0x28(%rsp),%rax
   14ca5:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   14caa:	48 8d 05 af 0b ff ff 	lea    -0xf451(%rip),%rax        # 5860 <<&T as core::fmt::Display>::fmt>
   14cb1:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   14cb6:	48 8d 05 e3 e8 02 00 	lea    0x2e8e3(%rip),%rax        # 435a0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x48>
   14cbd:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   14cc2:	48 c7 44 24 50 01 00 	movq   $0x1,0x50(%rsp)
   14cc9:	00 00 
   14ccb:	48 c7 44 24 58 00 00 	movq   $0x0,0x58(%rsp)
   14cd2:	00 00 
   14cd4:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   14cd9:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   14cde:	48 c7 44 24 70 01 00 	movq   $0x1,0x70(%rsp)
   14ce5:	00 00 
   14ce7:	48 8d 74 24 48       	lea    0x48(%rsp),%rsi
   14cec:	4c 89 f7             	mov    %r14,%rdi
   14cef:	ff 15 9b 11 03 00    	callq  *0x3119b(%rip)        # 45e90 <_GLOBAL_OFFSET_TABLE_+0x500>
   14cf5:	89 c3                	mov    %eax,%ebx
   14cf7:	89 d8                	mov    %ebx,%eax
   14cf9:	48 83 c4 78          	add    $0x78,%rsp
   14cfd:	5b                   	pop    %rbx
   14cfe:	41 5e                	pop    %r14
   14d00:	c3                   	retq   
   14d01:	48 89 c3             	mov    %rax,%rbx
   14d04:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   14d09:	e8 32 1a ff ff       	callq  6740 <core::ptr::drop_in_place>
   14d0e:	48 89 df             	mov    %rbx,%rdi
   14d11:	e8 3a 03 ff ff       	callq  5050 <_Unwind_Resume@plt>
   14d16:	0f 0b                	ud2    
   14d18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   14d1f:	00 

0000000000014d20 <std::io::impls::<impl std::io::Write for alloc::boxed::Box<W>>::write>:
   14d20:	53                   	push   %rbx
   14d21:	48 89 fb             	mov    %rdi,%rbx
   14d24:	48 8b 06             	mov    (%rsi),%rax
   14d27:	4c 8b 46 08          	mov    0x8(%rsi),%r8
   14d2b:	48 89 c6             	mov    %rax,%rsi
   14d2e:	41 ff 50 18          	callq  *0x18(%r8)
   14d32:	48 89 d8             	mov    %rbx,%rax
   14d35:	5b                   	pop    %rbx
   14d36:	c3                   	retq   
   14d37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   14d3e:	00 00 

0000000000014d40 <std::io::impls::<impl std::io::Write for alloc::boxed::Box<W>>::write_vectored>:
   14d40:	53                   	push   %rbx
   14d41:	48 89 fb             	mov    %rdi,%rbx
   14d44:	48 8b 06             	mov    (%rsi),%rax
   14d47:	4c 8b 46 08          	mov    0x8(%rsi),%r8
   14d4b:	48 89 c6             	mov    %rax,%rsi
   14d4e:	41 ff 50 20          	callq  *0x20(%r8)
   14d52:	48 89 d8             	mov    %rbx,%rax
   14d55:	5b                   	pop    %rbx
   14d56:	c3                   	retq   
   14d57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   14d5e:	00 00 

0000000000014d60 <std::io::impls::<impl std::io::Write for alloc::boxed::Box<W>>::is_write_vectored>:
   14d60:	48 8b 07             	mov    (%rdi),%rax
   14d63:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
   14d67:	48 89 c7             	mov    %rax,%rdi
   14d6a:	ff 61 28             	jmpq   *0x28(%rcx)
   14d6d:	0f 1f 00             	nopl   (%rax)

0000000000014d70 <std::io::impls::<impl std::io::Write for alloc::boxed::Box<W>>::flush>:
   14d70:	48 8b 07             	mov    (%rdi),%rax
   14d73:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
   14d77:	48 89 c7             	mov    %rax,%rdi
   14d7a:	ff 61 30             	jmpq   *0x30(%rcx)
   14d7d:	0f 1f 00             	nopl   (%rax)

0000000000014d80 <std::io::impls::<impl std::io::Write for alloc::boxed::Box<W>>::write_all>:
   14d80:	48 8b 07             	mov    (%rdi),%rax
   14d83:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
   14d87:	48 8b 49 38          	mov    0x38(%rcx),%rcx
   14d8b:	48 89 c7             	mov    %rax,%rdi
   14d8e:	ff e1                	jmpq   *%rcx

0000000000014d90 <std::io::impls::<impl std::io::Write for alloc::boxed::Box<W>>::write_fmt>:
   14d90:	48 83 ec 38          	sub    $0x38,%rsp
   14d94:	48 8b 07             	mov    (%rdi),%rax
   14d97:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
   14d9b:	0f 10 06             	movups (%rsi),%xmm0
   14d9e:	0f 10 4e 10          	movups 0x10(%rsi),%xmm1
   14da2:	0f 10 56 20          	movups 0x20(%rsi),%xmm2
   14da6:	0f 29 54 24 20       	movaps %xmm2,0x20(%rsp)
   14dab:	0f 29 4c 24 10       	movaps %xmm1,0x10(%rsp)
   14db0:	0f 29 04 24          	movaps %xmm0,(%rsp)
   14db4:	48 89 e6             	mov    %rsp,%rsi
   14db7:	48 89 c7             	mov    %rax,%rdi
   14dba:	ff 51 48             	callq  *0x48(%rcx)
   14dbd:	48 83 c4 38          	add    $0x38,%rsp
   14dc1:	c3                   	retq   
   14dc2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   14dc9:	00 00 00 
   14dcc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000014dd0 <<&std::io::stdio::Stdout as std::io::Write>::write_fmt>:
   14dd0:	41 56                	push   %r14
   14dd2:	53                   	push   %rbx
   14dd3:	48 83 ec 58          	sub    $0x58,%rsp
   14dd7:	48 89 f3             	mov    %rsi,%rbx
   14dda:	48 8b 07             	mov    (%rdi),%rax
   14ddd:	4c 8b 30             	mov    (%rax),%r14
   14de0:	4c 89 f7             	mov    %r14,%rdi
   14de3:	ff 15 d7 11 03 00    	callq  *0x311d7(%rip)        # 45fc0 <pthread_mutex_lock@GLIBC_2.2.5>
   14de9:	4c 89 34 24          	mov    %r14,(%rsp)
   14ded:	48 89 e0             	mov    %rsp,%rax
   14df0:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   14df5:	c6 44 24 10 03       	movb   $0x3,0x10(%rsp)
   14dfa:	0f 10 03             	movups (%rbx),%xmm0
   14dfd:	0f 10 4b 10          	movups 0x10(%rbx),%xmm1
   14e01:	0f 10 53 20          	movups 0x20(%rbx),%xmm2
   14e05:	0f 29 54 24 40       	movaps %xmm2,0x40(%rsp)
   14e0a:	0f 29 4c 24 30       	movaps %xmm1,0x30(%rsp)
   14e0f:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   14e14:	48 8d 35 a5 ef 02 00 	lea    0x2efa5(%rip),%rsi        # 43dc0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x868>
   14e1b:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   14e20:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
   14e25:	ff 15 d5 0f 03 00    	callq  *0x30fd5(%rip)        # 45e00 <_GLOBAL_OFFSET_TABLE_+0x470>
   14e2b:	8a 54 24 10          	mov    0x10(%rsp),%dl
   14e2f:	84 c0                	test   %al,%al
   14e31:	0f 84 af 00 00 00    	je     14ee6 <<&std::io::stdio::Stdout as std::io::Write>::write_fmt+0x116>
   14e37:	80 fa 03             	cmp    $0x3,%dl
   14e3a:	0f 85 f1 00 00 00    	jne    14f31 <<&std::io::stdio::Stdout as std::io::Write>::write_fmt+0x161>
   14e40:	bf 0f 00 00 00       	mov    $0xf,%edi
   14e45:	be 01 00 00 00       	mov    $0x1,%esi
   14e4a:	ff 15 38 0d 03 00    	callq  *0x30d38(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   14e50:	48 85 c0             	test   %rax,%rax
   14e53:	0f 84 33 01 00 00    	je     14f8c <<&std::io::stdio::Stdout as std::io::Write>::write_fmt+0x1bc>
   14e59:	49 89 c6             	mov    %rax,%r14
   14e5c:	48 8b 05 1d 2f 02 00 	mov    0x22f1d(%rip),%rax        # 37d80 <str.6+0xa60>
   14e63:	49 89 46 07          	mov    %rax,0x7(%r14)
   14e67:	48 8b 05 0b 2f 02 00 	mov    0x22f0b(%rip),%rax        # 37d79 <str.6+0xa59>
   14e6e:	49 89 06             	mov    %rax,(%r14)
   14e71:	bf 18 00 00 00       	mov    $0x18,%edi
   14e76:	be 08 00 00 00       	mov    $0x8,%esi
   14e7b:	ff 15 07 0d 03 00    	callq  *0x30d07(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   14e81:	48 85 c0             	test   %rax,%rax
   14e84:	0f 84 f0 00 00 00    	je     14f7a <<&std::io::stdio::Stdout as std::io::Write>::write_fmt+0x1aa>
   14e8a:	48 89 c3             	mov    %rax,%rbx
   14e8d:	4c 89 30             	mov    %r14,(%rax)
   14e90:	0f 28 05 f9 12 02 00 	movaps 0x212f9(%rip),%xmm0        # 36190 <_fini+0x110c>
   14e97:	0f 11 40 08          	movups %xmm0,0x8(%rax)
   14e9b:	bf 18 00 00 00       	mov    $0x18,%edi
   14ea0:	be 08 00 00 00       	mov    $0x8,%esi
   14ea5:	ff 15 dd 0c 03 00    	callq  *0x30cdd(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   14eab:	48 85 c0             	test   %rax,%rax
   14eae:	0f 84 c6 00 00 00    	je     14f7a <<&std::io::stdio::Stdout as std::io::Write>::write_fmt+0x1aa>
   14eb4:	48 89 c1             	mov    %rax,%rcx
   14eb7:	48 89 18             	mov    %rbx,(%rax)
   14eba:	48 8d 05 df ec 02 00 	lea    0x2ecdf(%rip),%rax        # 43ba0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x648>
   14ec1:	48 89 41 08          	mov    %rax,0x8(%rcx)
   14ec5:	c6 41 10 10          	movb   $0x10,0x10(%rcx)
   14ec9:	8b 44 24 20          	mov    0x20(%rsp),%eax
   14ecd:	8b 54 24 23          	mov    0x23(%rsp),%edx
   14ed1:	89 41 11             	mov    %eax,0x11(%rcx)
   14ed4:	89 51 14             	mov    %edx,0x14(%rcx)
   14ed7:	49 89 ce             	mov    %rcx,%r14
   14eda:	49 c1 ee 08          	shr    $0x8,%r14
   14ede:	48 c1 e1 38          	shl    $0x38,%rcx
   14ee2:	b3 02                	mov    $0x2,%bl
   14ee4:	eb 6d                	jmp    14f53 <<&std::io::stdio::Stdout as std::io::Write>::write_fmt+0x183>
   14ee6:	b3 03                	mov    $0x3,%bl
   14ee8:	80 fa 03             	cmp    $0x3,%dl
   14eeb:	77 05                	ja     14ef2 <<&std::io::stdio::Stdout as std::io::Write>::write_fmt+0x122>
   14eed:	80 fa 02             	cmp    $0x2,%dl
   14ef0:	75 3d                	jne    14f2f <<&std::io::stdio::Stdout as std::io::Write>::write_fmt+0x15f>
   14ef2:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   14ef7:	49 8b 3e             	mov    (%r14),%rdi
   14efa:	49 8b 46 08          	mov    0x8(%r14),%rax
   14efe:	ff 10                	callq  *(%rax)
   14f00:	49 8b 46 08          	mov    0x8(%r14),%rax
   14f04:	48 8b 70 08          	mov    0x8(%rax),%rsi
   14f08:	48 85 f6             	test   %rsi,%rsi
   14f0b:	74 0d                	je     14f1a <<&std::io::stdio::Stdout as std::io::Write>::write_fmt+0x14a>
   14f0d:	49 8b 3e             	mov    (%r14),%rdi
   14f10:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14f14:	ff 15 e6 0c 03 00    	callq  *0x30ce6(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   14f1a:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   14f1f:	be 18 00 00 00       	mov    $0x18,%esi
   14f24:	ba 08 00 00 00       	mov    $0x8,%edx
   14f29:	ff 15 d1 0c 03 00    	callq  *0x30cd1(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   14f2f:	eb 22                	jmp    14f53 <<&std::io::stdio::Stdout as std::io::Write>::write_fmt+0x183>
   14f31:	0f b6 44 24 1f       	movzbl 0x1f(%rsp),%eax
   14f36:	c1 e0 10             	shl    $0x10,%eax
   14f39:	0f b7 4c 24 1d       	movzwl 0x1d(%rsp),%ecx
   14f3e:	09 c1                	or     %eax,%ecx
   14f40:	48 c1 e1 20          	shl    $0x20,%rcx
   14f44:	44 8b 74 24 19       	mov    0x19(%rsp),%r14d
   14f49:	49 09 ce             	or     %rcx,%r14
   14f4c:	48 8b 4c 24 11       	mov    0x11(%rsp),%rcx
   14f51:	89 d3                	mov    %edx,%ebx
   14f53:	49 0f a4 ce 08       	shld   $0x8,%rcx,%r14
   14f58:	48 c1 e1 08          	shl    $0x8,%rcx
   14f5c:	0f b6 db             	movzbl %bl,%ebx
   14f5f:	48 09 cb             	or     %rcx,%rbx
   14f62:	48 8b 3c 24          	mov    (%rsp),%rdi
   14f66:	ff 15 04 0e 03 00    	callq  *0x30e04(%rip)        # 45d70 <pthread_mutex_unlock@GLIBC_2.2.5>
   14f6c:	48 89 d8             	mov    %rbx,%rax
   14f6f:	4c 89 f2             	mov    %r14,%rdx
   14f72:	48 83 c4 58          	add    $0x58,%rsp
   14f76:	5b                   	pop    %rbx
   14f77:	41 5e                	pop    %r14
   14f79:	c3                   	retq   
   14f7a:	bf 18 00 00 00       	mov    $0x18,%edi
   14f7f:	be 08 00 00 00       	mov    $0x8,%esi
   14f84:	ff 15 9e 0b 03 00    	callq  *0x30b9e(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   14f8a:	0f 0b                	ud2    
   14f8c:	bf 0f 00 00 00       	mov    $0xf,%edi
   14f91:	be 01 00 00 00       	mov    $0x1,%esi
   14f96:	ff 15 8c 0b 03 00    	callq  *0x30b8c(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   14f9c:	0f 0b                	ud2    
   14f9e:	48 89 c3             	mov    %rax,%rbx
   14fa1:	49 8b 3e             	mov    (%r14),%rdi
   14fa4:	49 8b 76 08          	mov    0x8(%r14),%rsi
   14fa8:	e8 33 49 ff ff       	callq  98e0 <alloc::alloc::box_free>
   14fad:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   14fb2:	e8 49 49 ff ff       	callq  9900 <alloc::alloc::box_free>
   14fb7:	eb 0d                	jmp    14fc6 <<&std::io::stdio::Stdout as std::io::Write>::write_fmt+0x1f6>
   14fb9:	48 89 c3             	mov    %rax,%rbx
   14fbc:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   14fc1:	e8 da 11 ff ff       	callq  61a0 <core::ptr::drop_in_place>
   14fc6:	48 89 e7             	mov    %rsp,%rdi
   14fc9:	e8 a2 1b ff ff       	callq  6b70 <core::ptr::drop_in_place>
   14fce:	48 89 df             	mov    %rbx,%rdi
   14fd1:	e8 7a 00 ff ff       	callq  5050 <_Unwind_Resume@plt>
   14fd6:	0f 0b                	ud2    
   14fd8:	48 89 c3             	mov    %rax,%rbx
   14fdb:	eb e9                	jmp    14fc6 <<&std::io::stdio::Stdout as std::io::Write>::write_fmt+0x1f6>
   14fdd:	0f 1f 00             	nopl   (%rax)

0000000000014fe0 <<std::io::stdio::StdoutLock as std::io::Write>::write_all>:
   14fe0:	55                   	push   %rbp
   14fe1:	41 57                	push   %r15
   14fe3:	41 56                	push   %r14
   14fe5:	41 55                	push   %r13
   14fe7:	41 54                	push   %r12
   14fe9:	53                   	push   %rbx
   14fea:	50                   	push   %rax
   14feb:	48 8b 2f             	mov    (%rdi),%rbp
   14fee:	48 83 7d 28 00       	cmpq   $0x0,0x28(%rbp)
   14ff3:	0f 85 25 01 00 00    	jne    1511e <<std::io::stdio::StdoutLock as std::io::Write>::write_all+0x13e>
   14ff9:	49 89 d5             	mov    %rdx,%r13
   14ffc:	49 89 f7             	mov    %rsi,%r15
   14fff:	4c 8d 75 28          	lea    0x28(%rbp),%r14
   15003:	48 c7 45 28 ff ff ff 	movq   $0xffffffffffffffff,0x28(%rbp)
   1500a:	ff 
   1500b:	4c 8d 65 30          	lea    0x30(%rbp),%r12
   1500f:	48 85 d2             	test   %rdx,%rdx
   15012:	74 50                	je     15064 <<std::io::stdio::StdoutLock as std::io::Write>::write_all+0x84>
   15014:	4c 89 ff             	mov    %r15,%rdi
   15017:	be 0a 00 00 00       	mov    $0xa,%esi
   1501c:	4c 89 ea             	mov    %r13,%rdx
   1501f:	ff 15 7b 0e 03 00    	callq  *0x30e7b(%rip)        # 45ea0 <memrchr@GLIBC_2.2.5>
   15025:	48 85 c0             	test   %rax,%rax
   15028:	74 3a                	je     15064 <<std::io::stdio::StdoutLock as std::io::Write>::write_all+0x84>
   1502a:	48 89 c3             	mov    %rax,%rbx
   1502d:	4c 29 fb             	sub    %r15,%rbx
   15030:	48 83 c3 01          	add    $0x1,%rbx
   15034:	4c 39 eb             	cmp    %r13,%rbx
   15037:	0f 87 06 01 00 00    	ja     15143 <<std::io::stdio::StdoutLock as std::io::Write>::write_all+0x163>
   1503d:	48 83 7d 40 00       	cmpq   $0x0,0x40(%rbp)
   15042:	74 50                	je     15094 <<std::io::stdio::StdoutLock as std::io::Write>::write_all+0xb4>
   15044:	4c 89 e7             	mov    %r12,%rdi
   15047:	4c 89 fe             	mov    %r15,%rsi
   1504a:	48 89 da             	mov    %rbx,%rdx
   1504d:	e8 be f6 ff ff       	callq  14710 <<std::io::buffered::BufWriter<W> as std::io::Write>::write_all>
   15052:	3c 03                	cmp    $0x3,%al
   15054:	75 7f                	jne    150d5 <<std::io::stdio::StdoutLock as std::io::Write>::write_all+0xf5>
   15056:	4c 89 e7             	mov    %r12,%rdi
   15059:	e8 f2 f2 ff ff       	callq  14350 <std::io::buffered::BufWriter<W>::flush_buf>
   1505e:	3c 03                	cmp    $0x3,%al
   15060:	74 5f                	je     150c1 <<std::io::stdio::StdoutLock as std::io::Write>::write_all+0xe1>
   15062:	eb 71                	jmp    150d5 <<std::io::stdio::StdoutLock as std::io::Write>::write_all+0xf5>
   15064:	48 8b 45 40          	mov    0x40(%rbp),%rax
   15068:	48 85 c0             	test   %rax,%rax
   1506b:	74 17                	je     15084 <<std::io::stdio::StdoutLock as std::io::Write>::write_all+0xa4>
   1506d:	49 8b 0c 24          	mov    (%r12),%rcx
   15071:	80 7c 08 ff 0a       	cmpb   $0xa,-0x1(%rax,%rcx,1)
   15076:	75 0c                	jne    15084 <<std::io::stdio::StdoutLock as std::io::Write>::write_all+0xa4>
   15078:	4c 89 e7             	mov    %r12,%rdi
   1507b:	e8 d0 f2 ff ff       	callq  14350 <std::io::buffered::BufWriter<W>::flush_buf>
   15080:	3c 03                	cmp    $0x3,%al
   15082:	75 51                	jne    150d5 <<std::io::stdio::StdoutLock as std::io::Write>::write_all+0xf5>
   15084:	4c 89 e7             	mov    %r12,%rdi
   15087:	4c 89 fe             	mov    %r15,%rsi
   1508a:	4c 89 ea             	mov    %r13,%rdx
   1508d:	e8 7e f6 ff ff       	callq  14710 <<std::io::buffered::BufWriter<W> as std::io::Write>::write_all>
   15092:	eb 41                	jmp    150d5 <<std::io::stdio::StdoutLock as std::io::Write>::write_all+0xf5>
   15094:	80 7d 48 01          	cmpb   $0x1,0x48(%rbp)
   15098:	0f 85 c0 00 00 00    	jne    1515e <<std::io::stdio::StdoutLock as std::io::Write>::write_all+0x17e>
   1509e:	4c 89 ff             	mov    %r15,%rdi
   150a1:	48 89 de             	mov    %rbx,%rsi
   150a4:	e8 47 07 00 00       	callq  157f0 <std::io::Write::write_all>
   150a9:	3c 03                	cmp    $0x3,%al
   150ab:	74 14                	je     150c1 <<std::io::stdio::StdoutLock as std::io::Write>::write_all+0xe1>
   150ad:	48 89 d1             	mov    %rdx,%rcx
   150b0:	48 89 d6             	mov    %rdx,%rsi
   150b3:	48 0f a4 c6 20       	shld   $0x20,%rax,%rsi
   150b8:	84 c0                	test   %al,%al
   150ba:	75 2c                	jne    150e8 <<std::io::stdio::StdoutLock as std::io::Write>::write_all+0x108>
   150bc:	83 fe 09             	cmp    $0x9,%esi
   150bf:	75 27                	jne    150e8 <<std::io::stdio::StdoutLock as std::io::Write>::write_all+0x108>
   150c1:	49 01 df             	add    %rbx,%r15
   150c4:	49 29 dd             	sub    %rbx,%r13
   150c7:	4c 89 e7             	mov    %r12,%rdi
   150ca:	4c 89 fe             	mov    %r15,%rsi
   150cd:	4c 89 ea             	mov    %r13,%rdx
   150d0:	e8 3b f6 ff ff       	callq  14710 <<std::io::buffered::BufWriter<W> as std::io::Write>::write_all>
   150d5:	49 83 06 01          	addq   $0x1,(%r14)
   150d9:	48 83 c4 08          	add    $0x8,%rsp
   150dd:	5b                   	pop    %rbx
   150de:	41 5c                	pop    %r12
   150e0:	41 5d                	pop    %r13
   150e2:	41 5e                	pop    %r14
   150e4:	41 5f                	pop    %r15
   150e6:	5d                   	pop    %rbp
   150e7:	c3                   	retq   
   150e8:	48 89 c7             	mov    %rax,%rdi
   150eb:	48 0f ac cf 08       	shrd   $0x8,%rcx,%rdi
   150f0:	81 e7 ff ff ff 00    	and    $0xffffff,%edi
   150f6:	48 89 ca             	mov    %rcx,%rdx
   150f9:	48 c1 ea 08          	shr    $0x8,%rdx
   150fd:	48 c1 e1 38          	shl    $0x38,%rcx
   15101:	48 09 f9             	or     %rdi,%rcx
   15104:	89 f6                	mov    %esi,%esi
   15106:	48 c1 e6 18          	shl    $0x18,%rsi
   1510a:	48 09 ce             	or     %rcx,%rsi
   1510d:	48 0f a4 f2 08       	shld   $0x8,%rsi,%rdx
   15112:	48 c1 e6 08          	shl    $0x8,%rsi
   15116:	0f b6 c0             	movzbl %al,%eax
   15119:	48 09 f0             	or     %rsi,%rax
   1511c:	eb b7                	jmp    150d5 <<std::io::stdio::StdoutLock as std::io::Write>::write_all+0xf5>
   1511e:	48 8d 3d ab 11 02 00 	lea    0x211ab(%rip),%rdi        # 362d0 <_fini+0x124c>
   15125:	48 8d 0d d4 e6 02 00 	lea    0x2e6d4(%rip),%rcx        # 43800 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2a8>
   1512c:	4c 8d 05 c5 eb 02 00 	lea    0x2ebc5(%rip),%r8        # 43cf8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x7a0>
   15133:	48 89 e2             	mov    %rsp,%rdx
   15136:	be 10 00 00 00       	mov    $0x10,%esi
   1513b:	ff 15 a7 0a 03 00    	callq  *0x30aa7(%rip)        # 45be8 <_GLOBAL_OFFSET_TABLE_+0x258>
   15141:	0f 0b                	ud2    
   15143:	48 8d 3d 3e 24 02 00 	lea    0x2243e(%rip),%rdi        # 37588 <str.6+0x268>
   1514a:	48 8d 15 1f e6 02 00 	lea    0x2e61f(%rip),%rdx        # 43770 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x218>
   15151:	be 23 00 00 00       	mov    $0x23,%esi
   15156:	ff 15 84 0d 03 00    	callq  *0x30d84(%rip)        # 45ee0 <_GLOBAL_OFFSET_TABLE_+0x550>
   1515c:	eb 19                	jmp    15177 <<std::io::stdio::StdoutLock as std::io::Write>::write_all+0x197>
   1515e:	48 8d 3d 95 24 02 00 	lea    0x22495(%rip),%rdi        # 375fa <str.6+0x2da>
   15165:	48 8d 15 cc ea 02 00 	lea    0x2eacc(%rip),%rdx        # 43c38 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x6e0>
   1516c:	be 2b 00 00 00       	mov    $0x2b,%esi
   15171:	ff 15 69 0d 03 00    	callq  *0x30d69(%rip)        # 45ee0 <_GLOBAL_OFFSET_TABLE_+0x550>
   15177:	0f 0b                	ud2    
   15179:	48 89 c3             	mov    %rax,%rbx
   1517c:	4c 89 f7             	mov    %r14,%rdi
   1517f:	e8 dc 0b ff ff       	callq  5d60 <core::ptr::drop_in_place>
   15184:	48 89 df             	mov    %rbx,%rdi
   15187:	e8 c4 fe fe ff       	callq  5050 <_Unwind_Resume@plt>
   1518c:	0f 0b                	ud2    
   1518e:	66 90                	xchg   %ax,%ax

0000000000015190 <std::io::stdio::set_panic>:
   15190:	41 57                	push   %r15
   15192:	41 56                	push   %r14
   15194:	53                   	push   %rbx
   15195:	48 83 ec 20          	sub    $0x20,%rsp
   15199:	48 89 f2             	mov    %rsi,%rdx
   1519c:	48 89 fe             	mov    %rdi,%rsi
   1519f:	48 85 ff             	test   %rdi,%rdi
   151a2:	75 0e                	jne    151b2 <std::io::stdio::set_panic+0x22>
   151a4:	8a 05 86 10 03 00    	mov    0x31086(%rip),%al        # 46230 <_ZN3std2io5stdio13LOCAL_STREAMS17h0b4e40a1b3779d2dE.0.0>
   151aa:	84 c0                	test   %al,%al
   151ac:	0f 84 89 00 00 00    	je     1523b <std::io::stdio::set_panic+0xab>
   151b2:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   151b7:	e8 14 e0 ff ff       	callq  131d0 <std::thread::local::LocalKey<T>::try_with>
   151bc:	83 7c 24 08 01       	cmpl   $0x1,0x8(%rsp)
   151c1:	74 7c                	je     1523f <std::io::stdio::set_panic+0xaf>
   151c3:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
   151c8:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   151cd:	48 85 db             	test   %rbx,%rbx
   151d0:	74 52                	je     15224 <std::io::stdio::set_panic+0x94>
   151d2:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   151d7:	4c 89 74 24 10       	mov    %r14,0x10(%rsp)
   151dc:	48 89 df             	mov    %rbx,%rdi
   151df:	41 ff 56 30          	callq  *0x30(%r14)
   151e3:	49 89 d7             	mov    %rdx,%r15
   151e6:	3c 03                	cmp    $0x3,%al
   151e8:	77 04                	ja     151ee <std::io::stdio::set_panic+0x5e>
   151ea:	3c 02                	cmp    $0x2,%al
   151ec:	75 36                	jne    15224 <std::io::stdio::set_panic+0x94>
   151ee:	49 8b 3f             	mov    (%r15),%rdi
   151f1:	49 8b 47 08          	mov    0x8(%r15),%rax
   151f5:	ff 10                	callq  *(%rax)
   151f7:	49 8b 47 08          	mov    0x8(%r15),%rax
   151fb:	48 8b 70 08          	mov    0x8(%rax),%rsi
   151ff:	48 85 f6             	test   %rsi,%rsi
   15202:	74 0d                	je     15211 <std::io::stdio::set_panic+0x81>
   15204:	49 8b 3f             	mov    (%r15),%rdi
   15207:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1520b:	ff 15 ef 09 03 00    	callq  *0x309ef(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   15211:	be 18 00 00 00       	mov    $0x18,%esi
   15216:	ba 08 00 00 00       	mov    $0x8,%edx
   1521b:	4c 89 ff             	mov    %r15,%rdi
   1521e:	ff 15 dc 09 03 00    	callq  *0x309dc(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   15224:	c6 05 05 10 03 00 01 	movb   $0x1,0x31005(%rip)        # 46230 <_ZN3std2io5stdio13LOCAL_STREAMS17h0b4e40a1b3779d2dE.0.0>
   1522b:	48 89 d8             	mov    %rbx,%rax
   1522e:	4c 89 f2             	mov    %r14,%rdx
   15231:	48 83 c4 20          	add    $0x20,%rsp
   15235:	5b                   	pop    %rbx
   15236:	41 5e                	pop    %r14
   15238:	41 5f                	pop    %r15
   1523a:	c3                   	retq   
   1523b:	31 db                	xor    %ebx,%ebx
   1523d:	eb ec                	jmp    1522b <std::io::stdio::set_panic+0x9b>
   1523f:	48 8d 3d 08 26 02 00 	lea    0x22608(%rip),%rdi        # 3784e <str.6+0x52e>
   15246:	48 8d 0d d3 e5 02 00 	lea    0x2e5d3(%rip),%rcx        # 43820 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2c8>
   1524d:	4c 8d 05 9c e8 02 00 	lea    0x2e89c(%rip),%r8        # 43af0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x598>
   15254:	48 89 e2             	mov    %rsp,%rdx
   15257:	be 46 00 00 00       	mov    $0x46,%esi
   1525c:	ff 15 86 09 03 00    	callq  *0x30986(%rip)        # 45be8 <_GLOBAL_OFFSET_TABLE_+0x258>
   15262:	0f 0b                	ud2    
   15264:	48 89 c3             	mov    %rax,%rbx
   15267:	49 8b 3f             	mov    (%r15),%rdi
   1526a:	49 8b 77 08          	mov    0x8(%r15),%rsi
   1526e:	e8 6d 46 ff ff       	callq  98e0 <alloc::alloc::box_free>
   15273:	4c 89 ff             	mov    %r15,%rdi
   15276:	e8 85 46 ff ff       	callq  9900 <alloc::alloc::box_free>
   1527b:	eb 03                	jmp    15280 <std::io::stdio::set_panic+0xf0>
   1527d:	48 89 c3             	mov    %rax,%rbx
   15280:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   15285:	e8 86 18 ff ff       	callq  6b10 <core::ptr::drop_in_place>
   1528a:	48 89 df             	mov    %rbx,%rdi
   1528d:	e8 be fd fe ff       	callq  5050 <_Unwind_Resume@plt>
   15292:	0f 0b                	ud2    
   15294:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1529b:	00 00 00 
   1529e:	66 90                	xchg   %ax,%ax

00000000000152a0 <std::io::stdio::_print>:
   152a0:	41 57                	push   %r15
   152a2:	41 56                	push   %r14
   152a4:	41 55                	push   %r13
   152a6:	41 54                	push   %r12
   152a8:	53                   	push   %rbx
   152a9:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
   152b0:	0f 10 07             	movups (%rdi),%xmm0
   152b3:	0f 10 4f 10          	movups 0x10(%rdi),%xmm1
   152b7:	0f 10 57 20          	movups 0x20(%rdi),%xmm2
   152bb:	0f 29 94 24 90 00 00 	movaps %xmm2,0x90(%rsp)
   152c2:	00 
   152c3:	0f 29 8c 24 80 00 00 	movaps %xmm1,0x80(%rsp)
   152ca:	00 
   152cb:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
   152d0:	48 8d 05 83 2a 02 00 	lea    0x22a83(%rip),%rax        # 37d5a <str.6+0xa3a>
   152d7:	48 89 84 24 a0 00 00 	mov    %rax,0xa0(%rsp)
   152de:	00 
   152df:	48 c7 84 24 a8 00 00 	movq   $0x6,0xa8(%rsp)
   152e6:	00 06 00 00 00 
   152eb:	8a 05 3f 0f 03 00    	mov    0x30f3f(%rip),%al        # 46230 <_ZN3std2io5stdio13LOCAL_STREAMS17h0b4e40a1b3779d2dE.0.0>
   152f1:	84 c0                	test   %al,%al
   152f3:	0f 84 70 01 00 00    	je     15469 <std::io::stdio::_print+0x1c9>
   152f9:	66 66 66 64 48 8b 04 	data16 data16 data16 mov %fs:0x0,%rax
   15300:	25 00 00 00 00 
   15305:	83 b8 20 ff ff ff 01 	cmpl   $0x1,-0xe0(%rax)
   1530c:	75 09                	jne    15317 <std::io::stdio::_print+0x77>
   1530e:	48 8d 98 28 ff ff ff 	lea    -0xd8(%rax),%rbx
   15315:	eb 11                	jmp    15328 <std::io::stdio::_print+0x88>
   15317:	e8 c4 e0 ff ff       	callq  133e0 <std::thread::local::fast::Key<T>::try_initialize>
   1531c:	48 89 c3             	mov    %rax,%rbx
   1531f:	48 85 c0             	test   %rax,%rax
   15322:	0f 84 41 01 00 00    	je     15469 <std::io::stdio::_print+0x1c9>
   15328:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   1532c:	0f 85 50 02 00 00    	jne    15582 <std::io::stdio::_print+0x2e2>
   15332:	4c 8b 63 08          	mov    0x8(%rbx),%r12
   15336:	4c 8b 6b 10          	mov    0x10(%rbx),%r13
   1533a:	4c 89 a4 24 b0 00 00 	mov    %r12,0xb0(%rsp)
   15341:	00 
   15342:	4c 89 ac 24 b8 00 00 	mov    %r13,0xb8(%rsp)
   15349:	00 
   1534a:	0f 57 c0             	xorps  %xmm0,%xmm0
   1534d:	0f 11 03             	movups %xmm0,(%rbx)
   15350:	4d 85 e4             	test   %r12,%r12
   15353:	0f 84 9d 00 00 00    	je     153f6 <std::io::stdio::_print+0x156>
   15359:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   1535e:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   15363:	0f 28 44 24 70       	movaps 0x70(%rsp),%xmm0
   15368:	0f 28 8c 24 80 00 00 	movaps 0x80(%rsp),%xmm1
   1536f:	00 
   15370:	0f 28 94 24 90 00 00 	movaps 0x90(%rsp),%xmm2
   15377:	00 
   15378:	0f 29 54 24 40       	movaps %xmm2,0x40(%rsp)
   1537d:	0f 29 4c 24 30       	movaps %xmm1,0x30(%rsp)
   15382:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   15387:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
   1538c:	4c 89 e7             	mov    %r12,%rdi
   1538f:	41 ff 55 48          	callq  *0x48(%r13)
   15393:	49 89 c7             	mov    %rax,%r15
   15396:	49 89 d6             	mov    %rdx,%r14
   15399:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   1539e:	48 89 54 24 58       	mov    %rdx,0x58(%rsp)
   153a3:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
   153a8:	4c 89 6c 24 28       	mov    %r13,0x28(%rsp)
   153ad:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   153b1:	0f 85 f2 01 00 00    	jne    155a9 <std::io::stdio::_print+0x309>
   153b7:	48 c7 03 ff ff ff ff 	movq   $0xffffffffffffffff,(%rbx)
   153be:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   153c2:	48 85 ff             	test   %rdi,%rdi
   153c5:	74 21                	je     153e8 <std::io::stdio::_print+0x148>
   153c7:	48 8b 43 10          	mov    0x10(%rbx),%rax
   153cb:	ff 10                	callq  *(%rax)
   153cd:	48 8b 43 10          	mov    0x10(%rbx),%rax
   153d1:	48 8b 70 08          	mov    0x8(%rax),%rsi
   153d5:	48 85 f6             	test   %rsi,%rsi
   153d8:	74 0e                	je     153e8 <std::io::stdio::_print+0x148>
   153da:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   153de:	48 8b 50 10          	mov    0x10(%rax),%rdx
   153e2:	ff 15 18 08 03 00    	callq  *0x30818(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   153e8:	4c 89 63 08          	mov    %r12,0x8(%rbx)
   153ec:	4c 89 6b 10          	mov    %r13,0x10(%rbx)
   153f0:	48 83 03 01          	addq   $0x1,(%rbx)
   153f4:	eb 62                	jmp    15458 <std::io::stdio::_print+0x1b8>
   153f6:	48 8b 05 6b 0c 03 00 	mov    0x30c6b(%rip),%rax        # 46068 <std::io::stdio::stdout::INSTANCE>
   153fd:	48 83 f8 03          	cmp    $0x3,%rax
   15401:	74 05                	je     15408 <std::io::stdio::_print+0x168>
   15403:	e8 a8 28 00 00       	callq  17cb0 <std::lazy::SyncOnceCell<T>::initialize>
   15408:	48 8d 05 61 0c 03 00 	lea    0x30c61(%rip),%rax        # 46070 <std::io::stdio::stdout::INSTANCE+0x8>
   1540f:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   15414:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   15419:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   1541e:	0f 28 44 24 70       	movaps 0x70(%rsp),%xmm0
   15423:	0f 28 8c 24 80 00 00 	movaps 0x80(%rsp),%xmm1
   1542a:	00 
   1542b:	0f 28 94 24 90 00 00 	movaps 0x90(%rsp),%xmm2
   15432:	00 
   15433:	0f 29 54 24 40       	movaps %xmm2,0x40(%rsp)
   15438:	0f 29 4c 24 30       	movaps %xmm1,0x30(%rsp)
   1543d:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   15442:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
   15447:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
   1544c:	ff 15 f6 07 03 00    	callq  *0x307f6(%rip)        # 45c48 <_GLOBAL_OFFSET_TABLE_+0x2b8>
   15452:	49 89 c7             	mov    %rax,%r15
   15455:	49 89 d6             	mov    %rdx,%r14
   15458:	4c 89 f1             	mov    %r14,%rcx
   1545b:	4c 0f a4 f9 38       	shld   $0x38,%r15,%rcx
   15460:	44 89 f8             	mov    %r15d,%eax
   15463:	24 fe                	and    $0xfe,%al
   15465:	3c 04                	cmp    $0x4,%al
   15467:	75 65                	jne    154ce <std::io::stdio::_print+0x22e>
   15469:	48 8b 05 f8 0b 03 00 	mov    0x30bf8(%rip),%rax        # 46068 <std::io::stdio::stdout::INSTANCE>
   15470:	48 83 f8 03          	cmp    $0x3,%rax
   15474:	75 6f                	jne    154e5 <std::io::stdio::_print+0x245>
   15476:	48 8d 05 f3 0b 03 00 	lea    0x30bf3(%rip),%rax        # 46070 <std::io::stdio::stdout::INSTANCE+0x8>
   1547d:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   15482:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   15487:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   1548c:	0f 28 44 24 70       	movaps 0x70(%rsp),%xmm0
   15491:	0f 28 8c 24 80 00 00 	movaps 0x80(%rsp),%xmm1
   15498:	00 
   15499:	0f 28 94 24 90 00 00 	movaps 0x90(%rsp),%xmm2
   154a0:	00 
   154a1:	0f 29 54 24 40       	movaps %xmm2,0x40(%rsp)
   154a6:	0f 29 4c 24 30       	movaps %xmm1,0x30(%rsp)
   154ab:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   154b0:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
   154b5:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
   154ba:	ff 15 88 07 03 00    	callq  *0x30788(%rip)        # 45c48 <_GLOBAL_OFFSET_TABLE_+0x2b8>
   154c0:	49 89 c7             	mov    %rax,%r15
   154c3:	49 89 d6             	mov    %rdx,%r14
   154c6:	48 89 c1             	mov    %rax,%rcx
   154c9:	48 0f ac d1 08       	shrd   $0x8,%rdx,%rcx
   154ce:	41 80 ff 03          	cmp    $0x3,%r15b
   154d2:	75 18                	jne    154ec <std::io::stdio::_print+0x24c>
   154d4:	48 81 c4 c0 00 00 00 	add    $0xc0,%rsp
   154db:	5b                   	pop    %rbx
   154dc:	41 5c                	pop    %r12
   154de:	41 5d                	pop    %r13
   154e0:	41 5e                	pop    %r14
   154e2:	41 5f                	pop    %r15
   154e4:	c3                   	retq   
   154e5:	e8 c6 27 00 00       	callq  17cb0 <std::lazy::SyncOnceCell<T>::initialize>
   154ea:	eb 8a                	jmp    15476 <std::io::stdio::_print+0x1d6>
   154ec:	44 88 7c 24 10       	mov    %r15b,0x10(%rsp)
   154f1:	89 4c 24 11          	mov    %ecx,0x11(%rsp)
   154f5:	48 89 c8             	mov    %rcx,%rax
   154f8:	48 c1 e8 30          	shr    $0x30,%rax
   154fc:	88 44 24 17          	mov    %al,0x17(%rsp)
   15500:	48 c1 e9 20          	shr    $0x20,%rcx
   15504:	66 89 4c 24 15       	mov    %cx,0x15(%rsp)
   15509:	4c 89 74 24 18       	mov    %r14,0x18(%rsp)
   1550e:	48 8d 84 24 a0 00 00 	lea    0xa0(%rsp),%rax
   15515:	00 
   15516:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   1551b:	48 8d 05 3e 03 ff ff 	lea    -0xfcc2(%rip),%rax        # 5860 <<&T as core::fmt::Display>::fmt>
   15522:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   15527:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   1552c:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   15531:	48 8d 05 68 f5 ff ff 	lea    -0xa98(%rip),%rax        # 14aa0 <<std::io::error::Error as core::fmt::Display>::fmt>
   15538:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   1553d:	48 8d 05 e4 e7 02 00 	lea    0x2e7e4(%rip),%rax        # 43d28 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x7d0>
   15544:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   15549:	48 c7 44 24 28 02 00 	movq   $0x2,0x28(%rsp)
   15550:	00 00 
   15552:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   15559:	00 00 
   1555b:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
   15560:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   15565:	48 c7 44 24 48 02 00 	movq   $0x2,0x48(%rsp)
   1556c:	00 00 
   1556e:	48 8d 35 d3 e7 02 00 	lea    0x2e7d3(%rip),%rsi        # 43d48 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x7f0>
   15575:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   1557a:	ff 15 60 0a 03 00    	callq  *0x30a60(%rip)        # 45fe0 <_GLOBAL_OFFSET_TABLE_+0x650>
   15580:	eb 4c                	jmp    155ce <std::io::stdio::_print+0x32e>
   15582:	48 8d 3d 47 0d 02 00 	lea    0x20d47(%rip),%rdi        # 362d0 <_fini+0x124c>
   15589:	48 8d 0d 70 e2 02 00 	lea    0x2e270(%rip),%rcx        # 43800 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2a8>
   15590:	4c 8d 05 c9 e7 02 00 	lea    0x2e7c9(%rip),%r8        # 43d60 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x808>
   15597:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   1559c:	be 10 00 00 00       	mov    $0x10,%esi
   155a1:	ff 15 41 06 03 00    	callq  *0x30641(%rip)        # 45be8 <_GLOBAL_OFFSET_TABLE_+0x258>
   155a7:	0f 0b                	ud2    
   155a9:	48 8d 3d 20 0d 02 00 	lea    0x20d20(%rip),%rdi        # 362d0 <_fini+0x124c>
   155b0:	48 8d 0d 49 e2 02 00 	lea    0x2e249(%rip),%rcx        # 43800 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2a8>
   155b7:	4c 8d 05 ba e7 02 00 	lea    0x2e7ba(%rip),%r8        # 43d78 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x820>
   155be:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   155c3:	be 10 00 00 00       	mov    $0x10,%esi
   155c8:	ff 15 1a 06 03 00    	callq  *0x3061a(%rip)        # 45be8 <_GLOBAL_OFFSET_TABLE_+0x258>
   155ce:	0f 0b                	ud2    
   155d0:	49 89 c6             	mov    %rax,%r14
   155d3:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   155d8:	e8 33 0e ff ff       	callq  6410 <core::ptr::drop_in_place>
   155dd:	eb 46                	jmp    15625 <std::io::stdio::_print+0x385>
   155df:	49 89 c6             	mov    %rax,%r14
   155e2:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   155e7:	e8 f4 18 ff ff       	callq  6ee0 <core::ptr::drop_in_place>
   155ec:	eb 50                	jmp    1563e <std::io::stdio::_print+0x39e>
   155ee:	49 89 c6             	mov    %rax,%r14
   155f1:	eb 4b                	jmp    1563e <std::io::stdio::_print+0x39e>
   155f3:	49 89 c6             	mov    %rax,%r14
   155f6:	48 8d bc 24 b0 00 00 	lea    0xb0(%rsp),%rdi
   155fd:	00 
   155fe:	e8 0d 0e ff ff       	callq  6410 <core::ptr::drop_in_place>
   15603:	eb 39                	jmp    1563e <std::io::stdio::_print+0x39e>
   15605:	49 89 c6             	mov    %rax,%r14
   15608:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   1560c:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   15610:	e8 cb 42 ff ff       	callq  98e0 <alloc::alloc::box_free>
   15615:	4c 89 63 08          	mov    %r12,0x8(%rbx)
   15619:	4c 89 6b 10          	mov    %r13,0x10(%rbx)
   1561d:	48 89 df             	mov    %rbx,%rdi
   15620:	e8 3b 07 ff ff       	callq  5d60 <core::ptr::drop_in_place>
   15625:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
   1562a:	e8 51 1d ff ff       	callq  7380 <core::ptr::drop_in_place>
   1562f:	eb 0d                	jmp    1563e <std::io::stdio::_print+0x39e>
   15631:	49 89 c6             	mov    %rax,%r14
   15634:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   15639:	e8 d2 14 ff ff       	callq  6b10 <core::ptr::drop_in_place>
   1563e:	4c 89 f7             	mov    %r14,%rdi
   15641:	e8 0a fa fe ff       	callq  5050 <_Unwind_Resume@plt>
   15646:	0f 0b                	ud2    
   15648:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1564f:	00 

0000000000015650 <std::io::Write::write_all>:
   15650:	55                   	push   %rbp
   15651:	41 57                	push   %r15
   15653:	41 56                	push   %r14
   15655:	41 55                	push   %r13
   15657:	41 54                	push   %r12
   15659:	53                   	push   %rbx
   1565a:	50                   	push   %rax
   1565b:	b1 03                	mov    $0x3,%cl
   1565d:	48 85 d2             	test   %rdx,%rdx
   15660:	0f 84 81 00 00 00    	je     156e7 <std::io::Write::write_all+0x97>
   15666:	48 89 d3             	mov    %rdx,%rbx
   15669:	49 89 f6             	mov    %rsi,%r14
   1566c:	49 bc ff ff ff ff ff 	movabs $0x7fffffffffffffff,%r12
   15673:	ff ff 7f 
   15676:	4c 8b 2d 5b 04 03 00 	mov    0x3045b(%rip),%r13        # 45ad8 <write@GLIBC_2.2.5>
   1567d:	4c 8b 3d 9c 03 03 00 	mov    0x3039c(%rip),%r15        # 45a20 <__errno_location@GLIBC_2.2.5>
   15684:	e9 20 00 00 00       	jmpq   156a9 <std::io::Write::write_all+0x59>
   15689:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   15690:	41 ff d7             	callq  *%r15
   15693:	8b 28                	mov    (%rax),%ebp
   15695:	89 ef                	mov    %ebp,%edi
   15697:	e8 a4 6b 00 00       	callq  1c240 <std::sys::unix::decode_error_kind>
   1569c:	3c 0f                	cmp    $0xf,%al
   1569e:	0f 85 e7 00 00 00    	jne    1578b <std::io::Write::write_all+0x13b>
   156a4:	48 85 db             	test   %rbx,%rbx
   156a7:	74 37                	je     156e0 <std::io::Write::write_all+0x90>
   156a9:	4c 39 e3             	cmp    %r12,%rbx
   156ac:	4c 89 e2             	mov    %r12,%rdx
   156af:	48 0f 42 d3          	cmovb  %rbx,%rdx
   156b3:	bf 02 00 00 00       	mov    $0x2,%edi
   156b8:	4c 89 f6             	mov    %r14,%rsi
   156bb:	41 ff d5             	callq  *%r13
   156be:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   156c2:	74 cc                	je     15690 <std::io::Write::write_all+0x40>
   156c4:	48 85 c0             	test   %rax,%rax
   156c7:	74 23                	je     156ec <std::io::Write::write_all+0x9c>
   156c9:	48 89 d9             	mov    %rbx,%rcx
   156cc:	48 29 c1             	sub    %rax,%rcx
   156cf:	0f 82 e1 00 00 00    	jb     157b6 <std::io::Write::write_all+0x166>
   156d5:	49 01 c6             	add    %rax,%r14
   156d8:	48 89 cb             	mov    %rcx,%rbx
   156db:	48 85 db             	test   %rbx,%rbx
   156de:	75 c9                	jne    156a9 <std::io::Write::write_all+0x59>
   156e0:	b1 03                	mov    $0x3,%cl
   156e2:	e9 ae 00 00 00       	jmpq   15795 <std::io::Write::write_all+0x145>
   156e7:	e9 a9 00 00 00       	jmpq   15795 <std::io::Write::write_all+0x145>
   156ec:	bf 1c 00 00 00       	mov    $0x1c,%edi
   156f1:	be 01 00 00 00       	mov    $0x1,%esi
   156f6:	ff 15 8c 04 03 00    	callq  *0x3048c(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   156fc:	48 85 c0             	test   %rax,%rax
   156ff:	0f 84 d8 00 00 00    	je     157dd <std::io::Write::write_all+0x18d>
   15705:	49 89 c6             	mov    %rax,%r14
   15708:	0f 10 05 0b 26 02 00 	movups 0x2260b(%rip),%xmm0        # 37d1a <str.6+0x9fa>
   1570f:	0f 11 40 0c          	movups %xmm0,0xc(%rax)
   15713:	0f 10 05 f4 25 02 00 	movups 0x225f4(%rip),%xmm0        # 37d0e <str.6+0x9ee>
   1571a:	0f 11 00             	movups %xmm0,(%rax)
   1571d:	bf 18 00 00 00       	mov    $0x18,%edi
   15722:	be 08 00 00 00       	mov    $0x8,%esi
   15727:	ff 15 5b 04 03 00    	callq  *0x3045b(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   1572d:	48 85 c0             	test   %rax,%rax
   15730:	0f 84 95 00 00 00    	je     157cb <std::io::Write::write_all+0x17b>
   15736:	48 89 c3             	mov    %rax,%rbx
   15739:	4c 89 30             	mov    %r14,(%rax)
   1573c:	0f 28 05 3d 0a 02 00 	movaps 0x20a3d(%rip),%xmm0        # 36180 <_fini+0x10fc>
   15743:	0f 11 40 08          	movups %xmm0,0x8(%rax)
   15747:	bf 18 00 00 00       	mov    $0x18,%edi
   1574c:	be 08 00 00 00       	mov    $0x8,%esi
   15751:	ff 15 31 04 03 00    	callq  *0x30431(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   15757:	48 85 c0             	test   %rax,%rax
   1575a:	74 6f                	je     157cb <std::io::Write::write_all+0x17b>
   1575c:	48 89 18             	mov    %rbx,(%rax)
   1575f:	48 8d 0d 3a e4 02 00 	lea    0x2e43a(%rip),%rcx        # 43ba0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x648>
   15766:	48 89 48 08          	mov    %rcx,0x8(%rax)
   1576a:	c6 40 10 0e          	movb   $0xe,0x10(%rax)
   1576e:	8b 4c 24 01          	mov    0x1(%rsp),%ecx
   15772:	8b 54 24 04          	mov    0x4(%rsp),%edx
   15776:	89 48 11             	mov    %ecx,0x11(%rax)
   15779:	89 50 14             	mov    %edx,0x14(%rax)
   1577c:	48 89 c2             	mov    %rax,%rdx
   1577f:	48 c1 ea 08          	shr    $0x8,%rdx
   15783:	48 c1 e0 38          	shl    $0x38,%rax
   15787:	b1 02                	mov    $0x2,%cl
   15789:	eb 0a                	jmp    15795 <std::io::Write::write_all+0x145>
   1578b:	89 e8                	mov    %ebp,%eax
   1578d:	48 c1 e0 18          	shl    $0x18,%rax
   15791:	31 d2                	xor    %edx,%edx
   15793:	31 c9                	xor    %ecx,%ecx
   15795:	48 0f a4 c2 08       	shld   $0x8,%rax,%rdx
   1579a:	48 c1 e0 08          	shl    $0x8,%rax
   1579e:	0f b6 c9             	movzbl %cl,%ecx
   157a1:	48 09 c1             	or     %rax,%rcx
   157a4:	48 89 c8             	mov    %rcx,%rax
   157a7:	48 83 c4 08          	add    $0x8,%rsp
   157ab:	5b                   	pop    %rbx
   157ac:	41 5c                	pop    %r12
   157ae:	41 5d                	pop    %r13
   157b0:	41 5e                	pop    %r14
   157b2:	41 5f                	pop    %r15
   157b4:	5d                   	pop    %rbp
   157b5:	c3                   	retq   
   157b6:	48 8d 15 eb e5 02 00 	lea    0x2e5eb(%rip),%rdx        # 43da8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x850>
   157bd:	48 89 c7             	mov    %rax,%rdi
   157c0:	48 89 de             	mov    %rbx,%rsi
   157c3:	ff 15 2f 06 03 00    	callq  *0x3062f(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x468>
   157c9:	0f 0b                	ud2    
   157cb:	bf 18 00 00 00       	mov    $0x18,%edi
   157d0:	be 08 00 00 00       	mov    $0x8,%esi
   157d5:	ff 15 4d 03 03 00    	callq  *0x3034d(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   157db:	0f 0b                	ud2    
   157dd:	bf 1c 00 00 00       	mov    $0x1c,%edi
   157e2:	be 01 00 00 00       	mov    $0x1,%esi
   157e7:	ff 15 3b 03 03 00    	callq  *0x3033b(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   157ed:	0f 0b                	ud2    
   157ef:	90                   	nop

00000000000157f0 <std::io::Write::write_all>:
   157f0:	55                   	push   %rbp
   157f1:	41 57                	push   %r15
   157f3:	41 56                	push   %r14
   157f5:	41 55                	push   %r13
   157f7:	41 54                	push   %r12
   157f9:	53                   	push   %rbx
   157fa:	50                   	push   %rax
   157fb:	b1 03                	mov    $0x3,%cl
   157fd:	48 85 f6             	test   %rsi,%rsi
   15800:	0f 84 81 00 00 00    	je     15887 <std::io::Write::write_all+0x97>
   15806:	48 89 f3             	mov    %rsi,%rbx
   15809:	49 89 fe             	mov    %rdi,%r14
   1580c:	49 bc ff ff ff ff ff 	movabs $0x7fffffffffffffff,%r12
   15813:	ff ff 7f 
   15816:	4c 8b 2d bb 02 03 00 	mov    0x302bb(%rip),%r13        # 45ad8 <write@GLIBC_2.2.5>
   1581d:	4c 8b 3d fc 01 03 00 	mov    0x301fc(%rip),%r15        # 45a20 <__errno_location@GLIBC_2.2.5>
   15824:	e9 20 00 00 00       	jmpq   15849 <std::io::Write::write_all+0x59>
   15829:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   15830:	41 ff d7             	callq  *%r15
   15833:	8b 28                	mov    (%rax),%ebp
   15835:	89 ef                	mov    %ebp,%edi
   15837:	e8 04 6a 00 00       	callq  1c240 <std::sys::unix::decode_error_kind>
   1583c:	3c 0f                	cmp    $0xf,%al
   1583e:	0f 85 e7 00 00 00    	jne    1592b <std::io::Write::write_all+0x13b>
   15844:	48 85 db             	test   %rbx,%rbx
   15847:	74 37                	je     15880 <std::io::Write::write_all+0x90>
   15849:	4c 39 e3             	cmp    %r12,%rbx
   1584c:	4c 89 e2             	mov    %r12,%rdx
   1584f:	48 0f 42 d3          	cmovb  %rbx,%rdx
   15853:	bf 01 00 00 00       	mov    $0x1,%edi
   15858:	4c 89 f6             	mov    %r14,%rsi
   1585b:	41 ff d5             	callq  *%r13
   1585e:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   15862:	74 cc                	je     15830 <std::io::Write::write_all+0x40>
   15864:	48 85 c0             	test   %rax,%rax
   15867:	74 23                	je     1588c <std::io::Write::write_all+0x9c>
   15869:	48 89 d9             	mov    %rbx,%rcx
   1586c:	48 29 c1             	sub    %rax,%rcx
   1586f:	0f 82 e1 00 00 00    	jb     15956 <std::io::Write::write_all+0x166>
   15875:	49 01 c6             	add    %rax,%r14
   15878:	48 89 cb             	mov    %rcx,%rbx
   1587b:	48 85 db             	test   %rbx,%rbx
   1587e:	75 c9                	jne    15849 <std::io::Write::write_all+0x59>
   15880:	b1 03                	mov    $0x3,%cl
   15882:	e9 ae 00 00 00       	jmpq   15935 <std::io::Write::write_all+0x145>
   15887:	e9 a9 00 00 00       	jmpq   15935 <std::io::Write::write_all+0x145>
   1588c:	bf 1c 00 00 00       	mov    $0x1c,%edi
   15891:	be 01 00 00 00       	mov    $0x1,%esi
   15896:	ff 15 ec 02 03 00    	callq  *0x302ec(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   1589c:	48 85 c0             	test   %rax,%rax
   1589f:	0f 84 d8 00 00 00    	je     1597d <std::io::Write::write_all+0x18d>
   158a5:	49 89 c6             	mov    %rax,%r14
   158a8:	0f 10 05 6b 24 02 00 	movups 0x2246b(%rip),%xmm0        # 37d1a <str.6+0x9fa>
   158af:	0f 11 40 0c          	movups %xmm0,0xc(%rax)
   158b3:	0f 10 05 54 24 02 00 	movups 0x22454(%rip),%xmm0        # 37d0e <str.6+0x9ee>
   158ba:	0f 11 00             	movups %xmm0,(%rax)
   158bd:	bf 18 00 00 00       	mov    $0x18,%edi
   158c2:	be 08 00 00 00       	mov    $0x8,%esi
   158c7:	ff 15 bb 02 03 00    	callq  *0x302bb(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   158cd:	48 85 c0             	test   %rax,%rax
   158d0:	0f 84 95 00 00 00    	je     1596b <std::io::Write::write_all+0x17b>
   158d6:	48 89 c3             	mov    %rax,%rbx
   158d9:	4c 89 30             	mov    %r14,(%rax)
   158dc:	0f 28 05 9d 08 02 00 	movaps 0x2089d(%rip),%xmm0        # 36180 <_fini+0x10fc>
   158e3:	0f 11 40 08          	movups %xmm0,0x8(%rax)
   158e7:	bf 18 00 00 00       	mov    $0x18,%edi
   158ec:	be 08 00 00 00       	mov    $0x8,%esi
   158f1:	ff 15 91 02 03 00    	callq  *0x30291(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   158f7:	48 85 c0             	test   %rax,%rax
   158fa:	74 6f                	je     1596b <std::io::Write::write_all+0x17b>
   158fc:	48 89 18             	mov    %rbx,(%rax)
   158ff:	48 8d 0d 9a e2 02 00 	lea    0x2e29a(%rip),%rcx        # 43ba0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x648>
   15906:	48 89 48 08          	mov    %rcx,0x8(%rax)
   1590a:	c6 40 10 0e          	movb   $0xe,0x10(%rax)
   1590e:	8b 4c 24 01          	mov    0x1(%rsp),%ecx
   15912:	8b 54 24 04          	mov    0x4(%rsp),%edx
   15916:	89 48 11             	mov    %ecx,0x11(%rax)
   15919:	89 50 14             	mov    %edx,0x14(%rax)
   1591c:	48 89 c2             	mov    %rax,%rdx
   1591f:	48 c1 ea 08          	shr    $0x8,%rdx
   15923:	48 c1 e0 38          	shl    $0x38,%rax
   15927:	b1 02                	mov    $0x2,%cl
   15929:	eb 0a                	jmp    15935 <std::io::Write::write_all+0x145>
   1592b:	89 e8                	mov    %ebp,%eax
   1592d:	48 c1 e0 18          	shl    $0x18,%rax
   15931:	31 d2                	xor    %edx,%edx
   15933:	31 c9                	xor    %ecx,%ecx
   15935:	48 0f a4 c2 08       	shld   $0x8,%rax,%rdx
   1593a:	48 c1 e0 08          	shl    $0x8,%rax
   1593e:	0f b6 c9             	movzbl %cl,%ecx
   15941:	48 09 c1             	or     %rax,%rcx
   15944:	48 89 c8             	mov    %rcx,%rax
   15947:	48 83 c4 08          	add    $0x8,%rsp
   1594b:	5b                   	pop    %rbx
   1594c:	41 5c                	pop    %r12
   1594e:	41 5d                	pop    %r13
   15950:	41 5e                	pop    %r14
   15952:	41 5f                	pop    %r15
   15954:	5d                   	pop    %rbp
   15955:	c3                   	retq   
   15956:	48 8d 15 4b e4 02 00 	lea    0x2e44b(%rip),%rdx        # 43da8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x850>
   1595d:	48 89 c7             	mov    %rax,%rdi
   15960:	48 89 de             	mov    %rbx,%rsi
   15963:	ff 15 8f 04 03 00    	callq  *0x3048f(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x468>
   15969:	0f 0b                	ud2    
   1596b:	bf 18 00 00 00       	mov    $0x18,%edi
   15970:	be 08 00 00 00       	mov    $0x8,%esi
   15975:	ff 15 ad 01 03 00    	callq  *0x301ad(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   1597b:	0f 0b                	ud2    
   1597d:	bf 1c 00 00 00       	mov    $0x1c,%edi
   15982:	be 01 00 00 00       	mov    $0x1,%esi
   15987:	ff 15 9b 01 03 00    	callq  *0x3019b(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   1598d:	0f 0b                	ud2    
   1598f:	90                   	nop

0000000000015990 <std::io::Write::write_all_vectored>:
   15990:	55                   	push   %rbp
   15991:	41 57                	push   %r15
   15993:	41 56                	push   %r14
   15995:	41 55                	push   %r13
   15997:	41 54                	push   %r12
   15999:	53                   	push   %rbx
   1599a:	48 83 ec 28          	sub    $0x28,%rsp
   1599e:	49 89 d5             	mov    %rdx,%r13
   159a1:	49 89 f7             	mov    %rsi,%r15
   159a4:	49 89 fe             	mov    %rdi,%r14
   159a7:	48 85 d2             	test   %rdx,%rdx
   159aa:	0f 84 df 01 00 00    	je     15b8f <std::io::Write::write_all_vectored+0x1ff>
   159b0:	4c 89 e8             	mov    %r13,%rax
   159b3:	48 c1 e0 04          	shl    $0x4,%rax
   159b7:	48 83 c0 f0          	add    $0xfffffffffffffff0,%rax
   159bb:	48 c1 e8 04          	shr    $0x4,%rax
   159bf:	48 83 c0 01          	add    $0x1,%rax
   159c3:	49 8d 4f 08          	lea    0x8(%r15),%rcx
   159c7:	31 ff                	xor    %edi,%edi
   159c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   159d0:	48 83 39 00          	cmpq   $0x0,(%rcx)
   159d4:	75 10                	jne    159e6 <std::io::Write::write_all_vectored+0x56>
   159d6:	48 83 c7 01          	add    $0x1,%rdi
   159da:	48 83 c1 10          	add    $0x10,%rcx
   159de:	48 39 f8             	cmp    %rdi,%rax
   159e1:	75 ed                	jne    159d0 <std::io::Write::write_all_vectored+0x40>
   159e3:	48 89 c7             	mov    %rax,%rdi
   159e6:	4c 39 ef             	cmp    %r13,%rdi
   159e9:	0f 87 9e 02 00 00    	ja     15c8d <std::io::Write::write_all_vectored+0x2fd>
   159ef:	b1 03                	mov    $0x3,%cl
   159f1:	49 29 fd             	sub    %rdi,%r13
   159f4:	0f 84 a2 01 00 00    	je     15b9c <std::io::Write::write_all_vectored+0x20c>
   159fa:	48 c1 e7 04          	shl    $0x4,%rdi
   159fe:	49 01 ff             	add    %rdi,%r15
   15a01:	4c 8d 64 24 08       	lea    0x8(%rsp),%r12
   15a06:	48 8d 2d 43 f9 fe ff 	lea    -0x106bd(%rip),%rbp        # 5350 <__rust_dealloc>
   15a0d:	eb 19                	jmp    15a28 <std::io::Write::write_all_vectored+0x98>
   15a0f:	90                   	nop
   15a10:	be 18 00 00 00       	mov    $0x18,%esi
   15a15:	ba 08 00 00 00       	mov    $0x8,%edx
   15a1a:	48 89 df             	mov    %rbx,%rdi
   15a1d:	ff d5                	callq  *%rbp
   15a1f:	4d 85 ed             	test   %r13,%r13
   15a22:	0f 84 79 01 00 00    	je     15ba1 <std::io::Write::write_all_vectored+0x211>
   15a28:	49 8b 36             	mov    (%r14),%rsi
   15a2b:	49 8b 46 08          	mov    0x8(%r14),%rax
   15a2f:	4c 89 e7             	mov    %r12,%rdi
   15a32:	4c 89 fa             	mov    %r15,%rdx
   15a35:	4c 89 e9             	mov    %r13,%rcx
   15a38:	ff 50 20             	callq  *0x20(%rax)
   15a3b:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   15a40:	48 83 f9 01          	cmp    $0x1,%rcx
   15a44:	75 3a                	jne    15a80 <std::io::Write::write_all_vectored+0xf0>
   15a46:	0f b6 5c 24 10       	movzbl 0x10(%rsp),%ebx
   15a4b:	48 85 db             	test   %rbx,%rbx
   15a4e:	0f 84 dc 00 00 00    	je     15b30 <std::io::Write::write_all_vectored+0x1a0>
   15a54:	83 fb 02             	cmp    $0x2,%ebx
   15a57:	0f 84 bd 00 00 00    	je     15b1a <std::io::Write::write_all_vectored+0x18a>
   15a5d:	8a 44 24 11          	mov    0x11(%rsp),%al
   15a61:	b9 01 00 00 00       	mov    $0x1,%ecx
   15a66:	3c 0f                	cmp    $0xf,%al
   15a68:	0f 84 e2 00 00 00    	je     15b50 <std::io::Write::write_all_vectored+0x1c0>
   15a6e:	e9 d8 01 00 00       	jmpq   15c4b <std::io::Write::write_all_vectored+0x2bb>
   15a73:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   15a7a:	00 00 00 
   15a7d:	0f 1f 00             	nopl   (%rax)
   15a80:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
   15a85:	48 85 db             	test   %rbx,%rbx
   15a88:	0f 84 1a 01 00 00    	je     15ba8 <std::io::Write::write_all_vectored+0x218>
   15a8e:	49 89 e8             	mov    %rbp,%r8
   15a91:	4c 89 ea             	mov    %r13,%rdx
   15a94:	48 c1 e2 04          	shl    $0x4,%rdx
   15a98:	48 83 c2 f0          	add    $0xfffffffffffffff0,%rdx
   15a9c:	48 c1 ea 04          	shr    $0x4,%rdx
   15aa0:	48 83 c2 01          	add    $0x1,%rdx
   15aa4:	49 8d 77 08          	lea    0x8(%r15),%rsi
   15aa8:	31 ff                	xor    %edi,%edi
   15aaa:	31 ed                	xor    %ebp,%ebp
   15aac:	0f 1f 40 00          	nopl   0x0(%rax)
   15ab0:	48 8b 06             	mov    (%rsi),%rax
   15ab3:	48 01 e8             	add    %rbp,%rax
   15ab6:	48 39 d8             	cmp    %rbx,%rax
   15ab9:	77 16                	ja     15ad1 <std::io::Write::write_all_vectored+0x141>
   15abb:	48 83 c7 01          	add    $0x1,%rdi
   15abf:	48 83 c6 10          	add    $0x10,%rsi
   15ac3:	48 89 c5             	mov    %rax,%rbp
   15ac6:	48 39 fa             	cmp    %rdi,%rdx
   15ac9:	75 e5                	jne    15ab0 <std::io::Write::write_all_vectored+0x120>
   15acb:	48 89 c5             	mov    %rax,%rbp
   15ace:	48 89 d7             	mov    %rdx,%rdi
   15ad1:	49 39 fd             	cmp    %rdi,%r13
   15ad4:	0f 82 b3 01 00 00    	jb     15c8d <std::io::Write::write_all_vectored+0x2fd>
   15ada:	48 89 fe             	mov    %rdi,%rsi
   15add:	48 c1 e6 04          	shl    $0x4,%rsi
   15ae1:	49 8d 14 37          	lea    (%r15,%rsi,1),%rdx
   15ae5:	49 29 fd             	sub    %rdi,%r13
   15ae8:	74 28                	je     15b12 <std::io::Write::write_all_vectored+0x182>
   15aea:	48 29 eb             	sub    %rbp,%rbx
   15aed:	49 8b 44 37 08       	mov    0x8(%r15,%rsi,1),%rax
   15af2:	48 29 d8             	sub    %rbx,%rax
   15af5:	0f 82 a4 01 00 00    	jb     15c9f <std::io::Write::write_all_vectored+0x30f>
   15afb:	49 8d 0c 37          	lea    (%r15,%rsi,1),%rcx
   15aff:	48 83 c1 08          	add    $0x8,%rcx
   15b03:	48 89 01             	mov    %rax,(%rcx)
   15b06:	48 01 1a             	add    %rbx,(%rdx)
   15b09:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   15b0e:	8a 5c 24 10          	mov    0x10(%rsp),%bl
   15b12:	49 89 d7             	mov    %rdx,%r15
   15b15:	4c 89 c5             	mov    %r8,%rbp
   15b18:	eb 36                	jmp    15b50 <std::io::Write::write_all_vectored+0x1c0>
   15b1a:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   15b1f:	8a 40 10             	mov    0x10(%rax),%al
   15b22:	b9 01 00 00 00       	mov    $0x1,%ecx
   15b27:	3c 0f                	cmp    $0xf,%al
   15b29:	74 25                	je     15b50 <std::io::Write::write_all_vectored+0x1c0>
   15b2b:	e9 1b 01 00 00       	jmpq   15c4b <std::io::Write::write_all_vectored+0x2bb>
   15b30:	8b 7c 24 14          	mov    0x14(%rsp),%edi
   15b34:	e8 07 67 00 00       	callq  1c240 <std::sys::unix::decode_error_kind>
   15b39:	b9 01 00 00 00       	mov    $0x1,%ecx
   15b3e:	3c 0f                	cmp    $0xf,%al
   15b40:	0f 85 05 01 00 00    	jne    15c4b <std::io::Write::write_all_vectored+0x2bb>
   15b46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   15b4d:	00 00 00 
   15b50:	48 85 c9             	test   %rcx,%rcx
   15b53:	0f 84 c6 fe ff ff    	je     15a1f <std::io::Write::write_all_vectored+0x8f>
   15b59:	80 fb 02             	cmp    $0x2,%bl
   15b5c:	0f 82 bd fe ff ff    	jb     15a1f <std::io::Write::write_all_vectored+0x8f>
   15b62:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   15b67:	48 8b 3b             	mov    (%rbx),%rdi
   15b6a:	48 8b 43 08          	mov    0x8(%rbx),%rax
   15b6e:	ff 10                	callq  *(%rax)
   15b70:	48 8b 43 08          	mov    0x8(%rbx),%rax
   15b74:	48 8b 70 08          	mov    0x8(%rax),%rsi
   15b78:	48 85 f6             	test   %rsi,%rsi
   15b7b:	0f 84 8f fe ff ff    	je     15a10 <std::io::Write::write_all_vectored+0x80>
   15b81:	48 8b 3b             	mov    (%rbx),%rdi
   15b84:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15b88:	ff d5                	callq  *%rbp
   15b8a:	e9 81 fe ff ff       	jmpq   15a10 <std::io::Write::write_all_vectored+0x80>
   15b8f:	31 ff                	xor    %edi,%edi
   15b91:	b1 03                	mov    $0x3,%cl
   15b93:	49 29 fd             	sub    %rdi,%r13
   15b96:	0f 85 5e fe ff ff    	jne    159fa <std::io::Write::write_all_vectored+0x6a>
   15b9c:	e9 cb 00 00 00       	jmpq   15c6c <std::io::Write::write_all_vectored+0x2dc>
   15ba1:	b1 03                	mov    $0x3,%cl
   15ba3:	e9 c4 00 00 00       	jmpq   15c6c <std::io::Write::write_all_vectored+0x2dc>
   15ba8:	bf 1c 00 00 00       	mov    $0x1c,%edi
   15bad:	be 01 00 00 00       	mov    $0x1,%esi
   15bb2:	ff 15 d0 ff 02 00    	callq  *0x2ffd0(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   15bb8:	48 85 c0             	test   %rax,%rax
   15bbb:	0f 84 0a 01 00 00    	je     15ccb <std::io::Write::write_all_vectored+0x33b>
   15bc1:	49 89 c6             	mov    %rax,%r14
   15bc4:	0f 10 05 4f 21 02 00 	movups 0x2214f(%rip),%xmm0        # 37d1a <str.6+0x9fa>
   15bcb:	0f 11 40 0c          	movups %xmm0,0xc(%rax)
   15bcf:	0f 10 05 38 21 02 00 	movups 0x22138(%rip),%xmm0        # 37d0e <str.6+0x9ee>
   15bd6:	0f 11 00             	movups %xmm0,(%rax)
   15bd9:	bf 18 00 00 00       	mov    $0x18,%edi
   15bde:	be 08 00 00 00       	mov    $0x8,%esi
   15be3:	ff 15 9f ff 02 00    	callq  *0x2ff9f(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   15be9:	48 85 c0             	test   %rax,%rax
   15bec:	0f 84 c7 00 00 00    	je     15cb9 <std::io::Write::write_all_vectored+0x329>
   15bf2:	48 89 c3             	mov    %rax,%rbx
   15bf5:	4c 89 30             	mov    %r14,(%rax)
   15bf8:	0f 28 05 81 05 02 00 	movaps 0x20581(%rip),%xmm0        # 36180 <_fini+0x10fc>
   15bff:	0f 11 40 08          	movups %xmm0,0x8(%rax)
   15c03:	bf 18 00 00 00       	mov    $0x18,%edi
   15c08:	be 08 00 00 00       	mov    $0x8,%esi
   15c0d:	ff 15 75 ff 02 00    	callq  *0x2ff75(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   15c13:	48 85 c0             	test   %rax,%rax
   15c16:	0f 84 9d 00 00 00    	je     15cb9 <std::io::Write::write_all_vectored+0x329>
   15c1c:	48 89 18             	mov    %rbx,(%rax)
   15c1f:	48 8d 0d 7a df 02 00 	lea    0x2df7a(%rip),%rcx        # 43ba0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x648>
   15c26:	48 89 48 08          	mov    %rcx,0x8(%rax)
   15c2a:	c6 40 10 0e          	movb   $0xe,0x10(%rax)
   15c2e:	8b 4c 24 21          	mov    0x21(%rsp),%ecx
   15c32:	8b 54 24 24          	mov    0x24(%rsp),%edx
   15c36:	89 48 11             	mov    %ecx,0x11(%rax)
   15c39:	89 50 14             	mov    %edx,0x14(%rax)
   15c3c:	48 89 c2             	mov    %rax,%rdx
   15c3f:	48 c1 ea 08          	shr    $0x8,%rdx
   15c43:	48 c1 e0 38          	shl    $0x38,%rax
   15c47:	b3 02                	mov    $0x2,%bl
   15c49:	eb 1f                	jmp    15c6a <std::io::Write::write_all_vectored+0x2da>
   15c4b:	0f b6 44 24 1f       	movzbl 0x1f(%rsp),%eax
   15c50:	c1 e0 10             	shl    $0x10,%eax
   15c53:	0f b7 4c 24 1d       	movzwl 0x1d(%rsp),%ecx
   15c58:	09 c1                	or     %eax,%ecx
   15c5a:	48 c1 e1 20          	shl    $0x20,%rcx
   15c5e:	8b 54 24 19          	mov    0x19(%rsp),%edx
   15c62:	48 09 ca             	or     %rcx,%rdx
   15c65:	48 8b 44 24 11       	mov    0x11(%rsp),%rax
   15c6a:	89 d9                	mov    %ebx,%ecx
   15c6c:	48 0f a4 c2 08       	shld   $0x8,%rax,%rdx
   15c71:	48 c1 e0 08          	shl    $0x8,%rax
   15c75:	0f b6 c9             	movzbl %cl,%ecx
   15c78:	48 09 c1             	or     %rax,%rcx
   15c7b:	48 89 c8             	mov    %rcx,%rax
   15c7e:	48 83 c4 28          	add    $0x28,%rsp
   15c82:	5b                   	pop    %rbx
   15c83:	41 5c                	pop    %r12
   15c85:	41 5d                	pop    %r13
   15c87:	41 5e                	pop    %r14
   15c89:	41 5f                	pop    %r15
   15c8b:	5d                   	pop    %rbp
   15c8c:	c3                   	retq   
   15c8d:	48 8d 15 fc e0 02 00 	lea    0x2e0fc(%rip),%rdx        # 43d90 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x838>
   15c94:	4c 89 ee             	mov    %r13,%rsi
   15c97:	ff 15 5b 01 03 00    	callq  *0x3015b(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x468>
   15c9d:	0f 0b                	ud2    
   15c9f:	48 8d 3d 57 26 02 00 	lea    0x22657(%rip),%rdi        # 382fd <str.6+0xfdd>
   15ca6:	48 8d 15 c3 e8 02 00 	lea    0x2e8c3(%rip),%rdx        # 44570 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1018>
   15cad:	be 23 00 00 00       	mov    $0x23,%esi
   15cb2:	e8 59 47 00 00       	callq  1a410 <std::panicking::begin_panic>
   15cb7:	0f 0b                	ud2    
   15cb9:	bf 18 00 00 00       	mov    $0x18,%edi
   15cbe:	be 08 00 00 00       	mov    $0x8,%esi
   15cc3:	ff 15 5f fe 02 00    	callq  *0x2fe5f(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   15cc9:	0f 0b                	ud2    
   15ccb:	bf 1c 00 00 00       	mov    $0x1c,%edi
   15cd0:	be 01 00 00 00       	mov    $0x1,%esi
   15cd5:	ff 15 4d fe 02 00    	callq  *0x2fe4d(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   15cdb:	0f 0b                	ud2    
   15cdd:	49 89 c6             	mov    %rax,%r14
   15ce0:	48 8b 3b             	mov    (%rbx),%rdi
   15ce3:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   15ce7:	e8 f4 3b ff ff       	callq  98e0 <alloc::alloc::box_free>
   15cec:	48 89 df             	mov    %rbx,%rdi
   15cef:	e8 0c 3c ff ff       	callq  9900 <alloc::alloc::box_free>
   15cf4:	4c 89 f7             	mov    %r14,%rdi
   15cf7:	e8 54 f3 fe ff       	callq  5050 <_Unwind_Resume@plt>
   15cfc:	0f 0b                	ud2    
   15cfe:	66 90                	xchg   %ax,%ax

0000000000015d00 <std::io::Write::write_all_vectored>:
   15d00:	55                   	push   %rbp
   15d01:	41 57                	push   %r15
   15d03:	41 56                	push   %r14
   15d05:	41 55                	push   %r13
   15d07:	41 54                	push   %r12
   15d09:	53                   	push   %rbx
   15d0a:	48 83 ec 28          	sub    $0x28,%rsp
   15d0e:	49 89 d7             	mov    %rdx,%r15
   15d11:	48 89 f5             	mov    %rsi,%rbp
   15d14:	48 85 d2             	test   %rdx,%rdx
   15d17:	0f 84 b8 01 00 00    	je     15ed5 <std::io::Write::write_all_vectored+0x1d5>
   15d1d:	4c 89 f8             	mov    %r15,%rax
   15d20:	48 c1 e0 04          	shl    $0x4,%rax
   15d24:	48 83 c0 f0          	add    $0xfffffffffffffff0,%rax
   15d28:	48 c1 e8 04          	shr    $0x4,%rax
   15d2c:	48 83 c0 01          	add    $0x1,%rax
   15d30:	48 8d 4d 08          	lea    0x8(%rbp),%rcx
   15d34:	31 ff                	xor    %edi,%edi
   15d36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   15d3d:	00 00 00 
   15d40:	48 83 39 00          	cmpq   $0x0,(%rcx)
   15d44:	75 10                	jne    15d56 <std::io::Write::write_all_vectored+0x56>
   15d46:	48 83 c7 01          	add    $0x1,%rdi
   15d4a:	48 83 c1 10          	add    $0x10,%rcx
   15d4e:	48 39 f8             	cmp    %rdi,%rax
   15d51:	75 ed                	jne    15d40 <std::io::Write::write_all_vectored+0x40>
   15d53:	48 89 c7             	mov    %rax,%rdi
   15d56:	4c 39 ff             	cmp    %r15,%rdi
   15d59:	0f 87 5a 02 00 00    	ja     15fb9 <std::io::Write::write_all_vectored+0x2b9>
   15d5f:	b1 03                	mov    $0x3,%cl
   15d61:	49 29 ff             	sub    %rdi,%r15
   15d64:	0f 84 78 01 00 00    	je     15ee2 <std::io::Write::write_all_vectored+0x1e2>
   15d6a:	48 c1 e7 04          	shl    $0x4,%rdi
   15d6e:	48 01 fd             	add    %rdi,%rbp
   15d71:	4c 8b 2d f0 fc 02 00 	mov    0x2fcf0(%rip),%r13        # 45a68 <writev@GLIBC_2.2.5>
   15d78:	4c 8d 25 d1 f5 fe ff 	lea    -0x10a2f(%rip),%r12        # 5350 <__rust_dealloc>
   15d7f:	eb 44                	jmp    15dc5 <std::io::Write::write_all_vectored+0xc5>
   15d81:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   15d88:	00 00 00 
   15d8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   15d90:	ff 15 8a fc 02 00    	callq  *0x2fc8a(%rip)        # 45a20 <__errno_location@GLIBC_2.2.5>
   15d96:	8b 18                	mov    (%rax),%ebx
   15d98:	48 89 d8             	mov    %rbx,%rax
   15d9b:	48 c1 e0 20          	shl    $0x20,%rax
   15d9f:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   15da4:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   15dab:	00 00 
   15dad:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   15db4:	00 00 
   15db6:	89 df                	mov    %ebx,%edi
   15db8:	e8 83 64 00 00       	callq  1c240 <std::sys::unix::decode_error_kind>
   15dbd:	3c 0f                	cmp    $0xf,%al
   15dbf:	0f 85 c9 01 00 00    	jne    15f8e <std::io::Write::write_all_vectored+0x28e>
   15dc5:	49 81 ff 00 04 00 00 	cmp    $0x400,%r15
   15dcc:	ba 00 04 00 00       	mov    $0x400,%edx
   15dd1:	41 0f 42 d7          	cmovb  %r15d,%edx
   15dd5:	bf 02 00 00 00       	mov    $0x2,%edi
   15dda:	48 89 ee             	mov    %rbp,%rsi
   15ddd:	41 ff d5             	callq  *%r13
   15de0:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   15de4:	74 aa                	je     15d90 <std::io::Write::write_all_vectored+0x90>
   15de6:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   15deb:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   15df2:	00 00 
   15df4:	48 85 c0             	test   %rax,%rax
   15df7:	0f 84 ea 00 00 00    	je     15ee7 <std::io::Write::write_all_vectored+0x1e7>
   15dfd:	4c 89 f9             	mov    %r15,%rcx
   15e00:	48 c1 e1 04          	shl    $0x4,%rcx
   15e04:	48 83 c1 f0          	add    $0xfffffffffffffff0,%rcx
   15e08:	48 c1 e9 04          	shr    $0x4,%rcx
   15e0c:	48 83 c1 01          	add    $0x1,%rcx
   15e10:	48 8d 75 08          	lea    0x8(%rbp),%rsi
   15e14:	31 ff                	xor    %edi,%edi
   15e16:	31 db                	xor    %ebx,%ebx
   15e18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   15e1f:	00 
   15e20:	48 8b 16             	mov    (%rsi),%rdx
   15e23:	48 01 da             	add    %rbx,%rdx
   15e26:	48 39 c2             	cmp    %rax,%rdx
   15e29:	77 16                	ja     15e41 <std::io::Write::write_all_vectored+0x141>
   15e2b:	48 83 c7 01          	add    $0x1,%rdi
   15e2f:	48 83 c6 10          	add    $0x10,%rsi
   15e33:	48 89 d3             	mov    %rdx,%rbx
   15e36:	48 39 f9             	cmp    %rdi,%rcx
   15e39:	75 e5                	jne    15e20 <std::io::Write::write_all_vectored+0x120>
   15e3b:	48 89 d3             	mov    %rdx,%rbx
   15e3e:	48 89 cf             	mov    %rcx,%rdi
   15e41:	49 39 ff             	cmp    %rdi,%r15
   15e44:	0f 82 6f 01 00 00    	jb     15fb9 <std::io::Write::write_all_vectored+0x2b9>
   15e4a:	49 29 ff             	sub    %rdi,%r15
   15e4d:	0f 84 37 01 00 00    	je     15f8a <std::io::Write::write_all_vectored+0x28a>
   15e53:	48 c1 e7 04          	shl    $0x4,%rdi
   15e57:	48 29 d8             	sub    %rbx,%rax
   15e5a:	48 8b 4c 3d 08       	mov    0x8(%rbp,%rdi,1),%rcx
   15e5f:	48 29 c1             	sub    %rax,%rcx
   15e62:	0f 82 63 01 00 00    	jb     15fcb <std::io::Write::write_all_vectored+0x2cb>
   15e68:	4c 8d 34 2f          	lea    (%rdi,%rbp,1),%r14
   15e6c:	48 8d 14 2f          	lea    (%rdi,%rbp,1),%rdx
   15e70:	48 83 c2 08          	add    $0x8,%rdx
   15e74:	48 89 0a             	mov    %rcx,(%rdx)
   15e77:	49 01 06             	add    %rax,(%r14)
   15e7a:	83 7c 24 08 01       	cmpl   $0x1,0x8(%rsp)
   15e7f:	75 4c                	jne    15ecd <std::io::Write::write_all_vectored+0x1cd>
   15e81:	80 7c 24 10 02       	cmpb   $0x2,0x10(%rsp)
   15e86:	72 3d                	jb     15ec5 <std::io::Write::write_all_vectored+0x1c5>
   15e88:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   15e8d:	48 8b 3b             	mov    (%rbx),%rdi
   15e90:	48 8b 43 08          	mov    0x8(%rbx),%rax
   15e94:	ff 10                	callq  *(%rax)
   15e96:	48 8b 43 08          	mov    0x8(%rbx),%rax
   15e9a:	48 8b 70 08          	mov    0x8(%rax),%rsi
   15e9e:	48 85 f6             	test   %rsi,%rsi
   15ea1:	74 0a                	je     15ead <std::io::Write::write_all_vectored+0x1ad>
   15ea3:	48 8b 3b             	mov    (%rbx),%rdi
   15ea6:	48 8b 50 10          	mov    0x10(%rax),%rdx
   15eaa:	41 ff d4             	callq  *%r12
   15ead:	be 18 00 00 00       	mov    $0x18,%esi
   15eb2:	ba 08 00 00 00       	mov    $0x8,%edx
   15eb7:	48 89 df             	mov    %rbx,%rdi
   15eba:	41 ff d4             	callq  *%r12
   15ebd:	4c 89 f5             	mov    %r14,%rbp
   15ec0:	e9 00 ff ff ff       	jmpq   15dc5 <std::io::Write::write_all_vectored+0xc5>
   15ec5:	4c 89 f5             	mov    %r14,%rbp
   15ec8:	e9 f8 fe ff ff       	jmpq   15dc5 <std::io::Write::write_all_vectored+0xc5>
   15ecd:	4c 89 f5             	mov    %r14,%rbp
   15ed0:	e9 f0 fe ff ff       	jmpq   15dc5 <std::io::Write::write_all_vectored+0xc5>
   15ed5:	31 ff                	xor    %edi,%edi
   15ed7:	b1 03                	mov    $0x3,%cl
   15ed9:	49 29 ff             	sub    %rdi,%r15
   15edc:	0f 85 88 fe ff ff    	jne    15d6a <std::io::Write::write_all_vectored+0x6a>
   15ee2:	e9 b1 00 00 00       	jmpq   15f98 <std::io::Write::write_all_vectored+0x298>
   15ee7:	bf 1c 00 00 00       	mov    $0x1c,%edi
   15eec:	be 01 00 00 00       	mov    $0x1,%esi
   15ef1:	ff 15 91 fc 02 00    	callq  *0x2fc91(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   15ef7:	48 85 c0             	test   %rax,%rax
   15efa:	0f 84 f7 00 00 00    	je     15ff7 <std::io::Write::write_all_vectored+0x2f7>
   15f00:	49 89 c6             	mov    %rax,%r14
   15f03:	0f 10 05 10 1e 02 00 	movups 0x21e10(%rip),%xmm0        # 37d1a <str.6+0x9fa>
   15f0a:	0f 11 40 0c          	movups %xmm0,0xc(%rax)
   15f0e:	0f 10 05 f9 1d 02 00 	movups 0x21df9(%rip),%xmm0        # 37d0e <str.6+0x9ee>
   15f15:	0f 11 00             	movups %xmm0,(%rax)
   15f18:	bf 18 00 00 00       	mov    $0x18,%edi
   15f1d:	be 08 00 00 00       	mov    $0x8,%esi
   15f22:	ff 15 60 fc 02 00    	callq  *0x2fc60(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   15f28:	48 85 c0             	test   %rax,%rax
   15f2b:	0f 84 b4 00 00 00    	je     15fe5 <std::io::Write::write_all_vectored+0x2e5>
   15f31:	48 89 c3             	mov    %rax,%rbx
   15f34:	4c 89 30             	mov    %r14,(%rax)
   15f37:	0f 28 05 42 02 02 00 	movaps 0x20242(%rip),%xmm0        # 36180 <_fini+0x10fc>
   15f3e:	0f 11 40 08          	movups %xmm0,0x8(%rax)
   15f42:	bf 18 00 00 00       	mov    $0x18,%edi
   15f47:	be 08 00 00 00       	mov    $0x8,%esi
   15f4c:	ff 15 36 fc 02 00    	callq  *0x2fc36(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   15f52:	48 85 c0             	test   %rax,%rax
   15f55:	0f 84 8a 00 00 00    	je     15fe5 <std::io::Write::write_all_vectored+0x2e5>
   15f5b:	48 89 18             	mov    %rbx,(%rax)
   15f5e:	48 8d 0d 3b dc 02 00 	lea    0x2dc3b(%rip),%rcx        # 43ba0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x648>
   15f65:	48 89 48 08          	mov    %rcx,0x8(%rax)
   15f69:	c6 40 10 0e          	movb   $0xe,0x10(%rax)
   15f6d:	8b 4c 24 21          	mov    0x21(%rsp),%ecx
   15f71:	8b 54 24 24          	mov    0x24(%rsp),%edx
   15f75:	89 48 11             	mov    %ecx,0x11(%rax)
   15f78:	89 50 14             	mov    %edx,0x14(%rax)
   15f7b:	48 89 c2             	mov    %rax,%rdx
   15f7e:	48 c1 ea 08          	shr    $0x8,%rdx
   15f82:	48 c1 e0 38          	shl    $0x38,%rax
   15f86:	b1 02                	mov    $0x2,%cl
   15f88:	eb 0e                	jmp    15f98 <std::io::Write::write_all_vectored+0x298>
   15f8a:	b1 03                	mov    $0x3,%cl
   15f8c:	eb 0a                	jmp    15f98 <std::io::Write::write_all_vectored+0x298>
   15f8e:	89 d8                	mov    %ebx,%eax
   15f90:	48 c1 e0 18          	shl    $0x18,%rax
   15f94:	31 d2                	xor    %edx,%edx
   15f96:	31 c9                	xor    %ecx,%ecx
   15f98:	48 0f a4 c2 08       	shld   $0x8,%rax,%rdx
   15f9d:	48 c1 e0 08          	shl    $0x8,%rax
   15fa1:	0f b6 c9             	movzbl %cl,%ecx
   15fa4:	48 09 c1             	or     %rax,%rcx
   15fa7:	48 89 c8             	mov    %rcx,%rax
   15faa:	48 83 c4 28          	add    $0x28,%rsp
   15fae:	5b                   	pop    %rbx
   15faf:	41 5c                	pop    %r12
   15fb1:	41 5d                	pop    %r13
   15fb3:	41 5e                	pop    %r14
   15fb5:	41 5f                	pop    %r15
   15fb7:	5d                   	pop    %rbp
   15fb8:	c3                   	retq   
   15fb9:	48 8d 15 d0 dd 02 00 	lea    0x2ddd0(%rip),%rdx        # 43d90 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x838>
   15fc0:	4c 89 fe             	mov    %r15,%rsi
   15fc3:	ff 15 2f fe 02 00    	callq  *0x2fe2f(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x468>
   15fc9:	0f 0b                	ud2    
   15fcb:	48 8d 3d 2b 23 02 00 	lea    0x2232b(%rip),%rdi        # 382fd <str.6+0xfdd>
   15fd2:	48 8d 15 97 e5 02 00 	lea    0x2e597(%rip),%rdx        # 44570 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1018>
   15fd9:	be 23 00 00 00       	mov    $0x23,%esi
   15fde:	e8 2d 44 00 00       	callq  1a410 <std::panicking::begin_panic>
   15fe3:	0f 0b                	ud2    
   15fe5:	bf 18 00 00 00       	mov    $0x18,%edi
   15fea:	be 08 00 00 00       	mov    $0x8,%esi
   15fef:	ff 15 33 fb 02 00    	callq  *0x2fb33(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   15ff5:	0f 0b                	ud2    
   15ff7:	bf 1c 00 00 00       	mov    $0x1c,%edi
   15ffc:	be 01 00 00 00       	mov    $0x1,%esi
   16001:	ff 15 21 fb 02 00    	callq  *0x2fb21(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   16007:	0f 0b                	ud2    
   16009:	49 89 c6             	mov    %rax,%r14
   1600c:	48 8b 3b             	mov    (%rbx),%rdi
   1600f:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   16013:	e8 c8 38 ff ff       	callq  98e0 <alloc::alloc::box_free>
   16018:	48 89 df             	mov    %rbx,%rdi
   1601b:	e8 e0 38 ff ff       	callq  9900 <alloc::alloc::box_free>
   16020:	4c 89 f7             	mov    %r14,%rdi
   16023:	e8 28 f0 fe ff       	callq  5050 <_Unwind_Resume@plt>
   16028:	0f 0b                	ud2    
   1602a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000016030 <std::io::Write::write_fmt>:
   16030:	41 56                	push   %r14
   16032:	53                   	push   %rbx
   16033:	48 83 ec 58          	sub    $0x58,%rsp
   16037:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   1603c:	c6 44 24 10 03       	movb   $0x3,0x10(%rsp)
   16041:	0f 10 06             	movups (%rsi),%xmm0
   16044:	0f 10 4e 10          	movups 0x10(%rsi),%xmm1
   16048:	0f 10 56 20          	movups 0x20(%rsi),%xmm2
   1604c:	0f 29 54 24 40       	movaps %xmm2,0x40(%rsp)
   16051:	0f 29 4c 24 30       	movaps %xmm1,0x30(%rsp)
   16056:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   1605b:	48 8d 35 8e dd 02 00 	lea    0x2dd8e(%rip),%rsi        # 43df0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x898>
   16062:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   16067:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
   1606c:	ff 15 8e fd 02 00    	callq  *0x2fd8e(%rip)        # 45e00 <_GLOBAL_OFFSET_TABLE_+0x470>
   16072:	8a 54 24 10          	mov    0x10(%rsp),%dl
   16076:	84 c0                	test   %al,%al
   16078:	0f 84 af 00 00 00    	je     1612d <std::io::Write::write_fmt+0xfd>
   1607e:	80 fa 03             	cmp    $0x3,%dl
   16081:	0f 85 f1 00 00 00    	jne    16178 <std::io::Write::write_fmt+0x148>
   16087:	bf 0f 00 00 00       	mov    $0xf,%edi
   1608c:	be 01 00 00 00       	mov    $0x1,%esi
   16091:	ff 15 f1 fa 02 00    	callq  *0x2faf1(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   16097:	48 85 c0             	test   %rax,%rax
   1609a:	0f 84 25 01 00 00    	je     161c5 <std::io::Write::write_fmt+0x195>
   160a0:	49 89 c6             	mov    %rax,%r14
   160a3:	48 8b 05 d6 1c 02 00 	mov    0x21cd6(%rip),%rax        # 37d80 <str.6+0xa60>
   160aa:	49 89 46 07          	mov    %rax,0x7(%r14)
   160ae:	48 8b 05 c4 1c 02 00 	mov    0x21cc4(%rip),%rax        # 37d79 <str.6+0xa59>
   160b5:	49 89 06             	mov    %rax,(%r14)
   160b8:	bf 18 00 00 00       	mov    $0x18,%edi
   160bd:	be 08 00 00 00       	mov    $0x8,%esi
   160c2:	ff 15 c0 fa 02 00    	callq  *0x2fac0(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   160c8:	48 85 c0             	test   %rax,%rax
   160cb:	0f 84 e2 00 00 00    	je     161b3 <std::io::Write::write_fmt+0x183>
   160d1:	48 89 c3             	mov    %rax,%rbx
   160d4:	4c 89 30             	mov    %r14,(%rax)
   160d7:	0f 28 05 b2 00 02 00 	movaps 0x200b2(%rip),%xmm0        # 36190 <_fini+0x110c>
   160de:	0f 11 40 08          	movups %xmm0,0x8(%rax)
   160e2:	bf 18 00 00 00       	mov    $0x18,%edi
   160e7:	be 08 00 00 00       	mov    $0x8,%esi
   160ec:	ff 15 96 fa 02 00    	callq  *0x2fa96(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   160f2:	48 85 c0             	test   %rax,%rax
   160f5:	0f 84 b8 00 00 00    	je     161b3 <std::io::Write::write_fmt+0x183>
   160fb:	48 89 c1             	mov    %rax,%rcx
   160fe:	48 89 18             	mov    %rbx,(%rax)
   16101:	48 8d 05 98 da 02 00 	lea    0x2da98(%rip),%rax        # 43ba0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x648>
   16108:	48 89 41 08          	mov    %rax,0x8(%rcx)
   1610c:	c6 41 10 10          	movb   $0x10,0x10(%rcx)
   16110:	8b 44 24 20          	mov    0x20(%rsp),%eax
   16114:	8b 54 24 23          	mov    0x23(%rsp),%edx
   16118:	89 41 11             	mov    %eax,0x11(%rcx)
   1611b:	89 51 14             	mov    %edx,0x14(%rcx)
   1611e:	48 89 ce             	mov    %rcx,%rsi
   16121:	48 c1 ee 08          	shr    $0x8,%rsi
   16125:	48 c1 e1 38          	shl    $0x38,%rcx
   16129:	b3 02                	mov    $0x2,%bl
   1612b:	eb 6c                	jmp    16199 <std::io::Write::write_fmt+0x169>
   1612d:	b3 03                	mov    $0x3,%bl
   1612f:	80 fa 03             	cmp    $0x3,%dl
   16132:	77 05                	ja     16139 <std::io::Write::write_fmt+0x109>
   16134:	80 fa 02             	cmp    $0x2,%dl
   16137:	75 3d                	jne    16176 <std::io::Write::write_fmt+0x146>
   16139:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   1613e:	49 8b 3e             	mov    (%r14),%rdi
   16141:	49 8b 46 08          	mov    0x8(%r14),%rax
   16145:	ff 10                	callq  *(%rax)
   16147:	49 8b 46 08          	mov    0x8(%r14),%rax
   1614b:	48 8b 70 08          	mov    0x8(%rax),%rsi
   1614f:	48 85 f6             	test   %rsi,%rsi
   16152:	74 0d                	je     16161 <std::io::Write::write_fmt+0x131>
   16154:	49 8b 3e             	mov    (%r14),%rdi
   16157:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1615b:	ff 15 9f fa 02 00    	callq  *0x2fa9f(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   16161:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   16166:	be 18 00 00 00       	mov    $0x18,%esi
   1616b:	ba 08 00 00 00       	mov    $0x8,%edx
   16170:	ff 15 8a fa 02 00    	callq  *0x2fa8a(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   16176:	eb 21                	jmp    16199 <std::io::Write::write_fmt+0x169>
   16178:	0f b6 44 24 1f       	movzbl 0x1f(%rsp),%eax
   1617d:	c1 e0 10             	shl    $0x10,%eax
   16180:	0f b7 4c 24 1d       	movzwl 0x1d(%rsp),%ecx
   16185:	09 c1                	or     %eax,%ecx
   16187:	48 c1 e1 20          	shl    $0x20,%rcx
   1618b:	8b 74 24 19          	mov    0x19(%rsp),%esi
   1618f:	48 09 ce             	or     %rcx,%rsi
   16192:	48 8b 4c 24 11       	mov    0x11(%rsp),%rcx
   16197:	89 d3                	mov    %edx,%ebx
   16199:	48 0f a4 ce 08       	shld   $0x8,%rcx,%rsi
   1619e:	48 c1 e1 08          	shl    $0x8,%rcx
   161a2:	0f b6 c3             	movzbl %bl,%eax
   161a5:	48 09 c8             	or     %rcx,%rax
   161a8:	48 89 f2             	mov    %rsi,%rdx
   161ab:	48 83 c4 58          	add    $0x58,%rsp
   161af:	5b                   	pop    %rbx
   161b0:	41 5e                	pop    %r14
   161b2:	c3                   	retq   
   161b3:	bf 18 00 00 00       	mov    $0x18,%edi
   161b8:	be 08 00 00 00       	mov    $0x8,%esi
   161bd:	ff 15 65 f9 02 00    	callq  *0x2f965(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   161c3:	0f 0b                	ud2    
   161c5:	bf 0f 00 00 00       	mov    $0xf,%edi
   161ca:	be 01 00 00 00       	mov    $0x1,%esi
   161cf:	ff 15 53 f9 02 00    	callq  *0x2f953(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   161d5:	0f 0b                	ud2    
   161d7:	48 89 c3             	mov    %rax,%rbx
   161da:	49 8b 3e             	mov    (%r14),%rdi
   161dd:	49 8b 76 08          	mov    0x8(%r14),%rsi
   161e1:	e8 fa 36 ff ff       	callq  98e0 <alloc::alloc::box_free>
   161e6:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   161eb:	e8 10 37 ff ff       	callq  9900 <alloc::alloc::box_free>
   161f0:	eb 0d                	jmp    161ff <std::io::Write::write_fmt+0x1cf>
   161f2:	48 89 c3             	mov    %rax,%rbx
   161f5:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   161fa:	e8 a1 ff fe ff       	callq  61a0 <core::ptr::drop_in_place>
   161ff:	48 89 df             	mov    %rbx,%rdi
   16202:	e8 49 ee fe ff       	callq  5050 <_Unwind_Resume@plt>
   16207:	0f 0b                	ud2    
   16209:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000016210 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str>:
   16210:	55                   	push   %rbp
   16211:	41 57                	push   %r15
   16213:	41 56                	push   %r14
   16215:	41 55                	push   %r13
   16217:	41 54                	push   %r12
   16219:	53                   	push   %rbx
   1621a:	50                   	push   %rax
   1621b:	48 89 fb             	mov    %rdi,%rbx
   1621e:	48 8b 3f             	mov    (%rdi),%rdi
   16221:	ff 15 49 f9 02 00    	callq  *0x2f949(%rip)        # 45b70 <_GLOBAL_OFFSET_TABLE_+0x1e0>
   16227:	49 89 c6             	mov    %rax,%r14
   1622a:	41 80 fe 03          	cmp    $0x3,%r14b
   1622e:	75 04                	jne    16234 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str+0x24>
   16230:	31 c0                	xor    %eax,%eax
   16232:	eb 78                	jmp    162ac <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str+0x9c>
   16234:	44 89 f5             	mov    %r14d,%ebp
   16237:	49 89 d4             	mov    %rdx,%r12
   1623a:	49 c1 ec 08          	shr    $0x8,%r12
   1623e:	49 0f ac d6 08       	shrd   $0x8,%rdx,%r14
   16243:	8a 43 08             	mov    0x8(%rbx),%al
   16246:	3c 03                	cmp    $0x3,%al
   16248:	77 04                	ja     1624e <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str+0x3e>
   1624a:	3c 02                	cmp    $0x2,%al
   1624c:	75 3d                	jne    1628b <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str+0x7b>
   1624e:	4c 8b 6b 10          	mov    0x10(%rbx),%r13
   16252:	49 8b 7d 00          	mov    0x0(%r13),%rdi
   16256:	49 8b 45 08          	mov    0x8(%r13),%rax
   1625a:	ff 10                	callq  *(%rax)
   1625c:	49 8b 45 08          	mov    0x8(%r13),%rax
   16260:	48 8b 70 08          	mov    0x8(%rax),%rsi
   16264:	48 85 f6             	test   %rsi,%rsi
   16267:	74 0e                	je     16277 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str+0x67>
   16269:	49 8b 7d 00          	mov    0x0(%r13),%rdi
   1626d:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16271:	ff 15 89 f9 02 00    	callq  *0x2f989(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   16277:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   1627b:	be 18 00 00 00       	mov    $0x18,%esi
   16280:	ba 08 00 00 00       	mov    $0x8,%edx
   16285:	ff 15 75 f9 02 00    	callq  *0x2f975(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   1628b:	40 88 6b 08          	mov    %bpl,0x8(%rbx)
   1628f:	4c 89 73 09          	mov    %r14,0x9(%rbx)
   16293:	44 89 63 11          	mov    %r12d,0x11(%rbx)
   16297:	4c 89 e0             	mov    %r12,%rax
   1629a:	48 c1 e8 30          	shr    $0x30,%rax
   1629e:	88 43 17             	mov    %al,0x17(%rbx)
   162a1:	49 c1 ec 20          	shr    $0x20,%r12
   162a5:	66 44 89 63 15       	mov    %r12w,0x15(%rbx)
   162aa:	b0 01                	mov    $0x1,%al
   162ac:	48 83 c4 08          	add    $0x8,%rsp
   162b0:	5b                   	pop    %rbx
   162b1:	41 5c                	pop    %r12
   162b3:	41 5d                	pop    %r13
   162b5:	41 5e                	pop    %r14
   162b7:	41 5f                	pop    %r15
   162b9:	5d                   	pop    %rbp
   162ba:	c3                   	retq   
   162bb:	49 89 c7             	mov    %rax,%r15
   162be:	49 8b 7d 00          	mov    0x0(%r13),%rdi
   162c2:	49 8b 75 08          	mov    0x8(%r13),%rsi
   162c6:	e8 15 36 ff ff       	callq  98e0 <alloc::alloc::box_free>
   162cb:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   162cf:	e8 2c 36 ff ff       	callq  9900 <alloc::alloc::box_free>
   162d4:	40 88 6b 08          	mov    %bpl,0x8(%rbx)
   162d8:	4c 89 e0             	mov    %r12,%rax
   162db:	48 c1 e8 30          	shr    $0x30,%rax
   162df:	88 43 17             	mov    %al,0x17(%rbx)
   162e2:	4c 89 e0             	mov    %r12,%rax
   162e5:	48 c1 e8 20          	shr    $0x20,%rax
   162e9:	66 89 43 15          	mov    %ax,0x15(%rbx)
   162ed:	44 89 63 11          	mov    %r12d,0x11(%rbx)
   162f1:	4c 89 73 09          	mov    %r14,0x9(%rbx)
   162f5:	4c 89 ff             	mov    %r15,%rdi
   162f8:	e8 53 ed fe ff       	callq  5050 <_Unwind_Resume@plt>
   162fd:	0f 0b                	ud2    
   162ff:	90                   	nop

0000000000016300 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str>:
   16300:	55                   	push   %rbp
   16301:	41 57                	push   %r15
   16303:	41 56                	push   %r14
   16305:	41 55                	push   %r13
   16307:	41 54                	push   %r12
   16309:	53                   	push   %rbx
   1630a:	50                   	push   %rax
   1630b:	48 89 fb             	mov    %rdi,%rbx
   1630e:	48 8b 3f             	mov    (%rdi),%rdi
   16311:	e8 3a f3 ff ff       	callq  15650 <std::io::Write::write_all>
   16316:	49 89 c6             	mov    %rax,%r14
   16319:	41 80 fe 03          	cmp    $0x3,%r14b
   1631d:	75 04                	jne    16323 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str+0x23>
   1631f:	31 c0                	xor    %eax,%eax
   16321:	eb 78                	jmp    1639b <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str+0x9b>
   16323:	44 89 f5             	mov    %r14d,%ebp
   16326:	49 89 d4             	mov    %rdx,%r12
   16329:	49 c1 ec 08          	shr    $0x8,%r12
   1632d:	49 0f ac d6 08       	shrd   $0x8,%rdx,%r14
   16332:	8a 43 08             	mov    0x8(%rbx),%al
   16335:	3c 03                	cmp    $0x3,%al
   16337:	77 04                	ja     1633d <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str+0x3d>
   16339:	3c 02                	cmp    $0x2,%al
   1633b:	75 3d                	jne    1637a <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str+0x7a>
   1633d:	4c 8b 6b 10          	mov    0x10(%rbx),%r13
   16341:	49 8b 7d 00          	mov    0x0(%r13),%rdi
   16345:	49 8b 45 08          	mov    0x8(%r13),%rax
   16349:	ff 10                	callq  *(%rax)
   1634b:	49 8b 45 08          	mov    0x8(%r13),%rax
   1634f:	48 8b 70 08          	mov    0x8(%rax),%rsi
   16353:	48 85 f6             	test   %rsi,%rsi
   16356:	74 0e                	je     16366 <<std::io::Write::write_fmt::Adaptor<T> as core::fmt::Write>::write_str+0x66>
   16358:	49 8b 7d 00          	mov    0x0(%r13),%rdi
   1635c:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16360:	ff 15 9a f8 02 00    	callq  *0x2f89a(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   16366:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   1636a:	be 18 00 00 00       	mov    $0x18,%esi
   1636f:	ba 08 00 00 00       	mov    $0x8,%edx
   16374:	ff 15 86 f8 02 00    	callq  *0x2f886(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   1637a:	40 88 6b 08          	mov    %bpl,0x8(%rbx)
   1637e:	4c 89 73 09          	mov    %r14,0x9(%rbx)
   16382:	44 89 63 11          	mov    %r12d,0x11(%rbx)
   16386:	4c 89 e0             	mov    %r12,%rax
   16389:	48 c1 e8 30          	shr    $0x30,%rax
   1638d:	88 43 17             	mov    %al,0x17(%rbx)
   16390:	49 c1 ec 20          	shr    $0x20,%r12
   16394:	66 44 89 63 15       	mov    %r12w,0x15(%rbx)
   16399:	b0 01                	mov    $0x1,%al
   1639b:	48 83 c4 08          	add    $0x8,%rsp
   1639f:	5b                   	pop    %rbx
   163a0:	41 5c                	pop    %r12
   163a2:	41 5d                	pop    %r13
   163a4:	41 5e                	pop    %r14
   163a6:	41 5f                	pop    %r15
   163a8:	5d                   	pop    %rbp
   163a9:	c3                   	retq   
   163aa:	49 89 c7             	mov    %rax,%r15
   163ad:	49 8b 7d 00          	mov    0x0(%r13),%rdi
   163b1:	49 8b 75 08          	mov    0x8(%r13),%rsi
   163b5:	e8 26 35 ff ff       	callq  98e0 <alloc::alloc::box_free>
   163ba:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   163be:	e8 3d 35 ff ff       	callq  9900 <alloc::alloc::box_free>
   163c3:	40 88 6b 08          	mov    %bpl,0x8(%rbx)
   163c7:	4c 89 e0             	mov    %r12,%rax
   163ca:	48 c1 e8 30          	shr    $0x30,%rax
   163ce:	88 43 17             	mov    %al,0x17(%rbx)
   163d1:	4c 89 e0             	mov    %r12,%rax
   163d4:	48 c1 e8 20          	shr    $0x20,%rax
   163d8:	66 89 43 15          	mov    %ax,0x15(%rbx)
   163dc:	44 89 63 11          	mov    %r12d,0x11(%rbx)
   163e0:	4c 89 73 09          	mov    %r14,0x9(%rbx)
   163e4:	4c 89 ff             	mov    %r15,%rdi
   163e7:	e8 64 ec fe ff       	callq  5050 <_Unwind_Resume@plt>
   163ec:	0f 0b                	ud2    
   163ee:	66 90                	xchg   %ax,%ax

00000000000163f0 <std::path::iter_after>:
   163f0:	55                   	push   %rbp
   163f1:	41 57                	push   %r15
   163f3:	41 56                	push   %r14
   163f5:	41 55                	push   %r13
   163f7:	41 54                	push   %r12
   163f9:	53                   	push   %rbx
   163fa:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
   16401:	49 89 d7             	mov    %rdx,%r15
   16404:	48 89 f3             	mov    %rsi,%rbx
   16407:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   1640c:	4c 8d 76 11          	lea    0x11(%rsi),%r14
   16410:	48 8d 6c 24 21       	lea    0x21(%rsp),%rbp
   16415:	4c 8d a4 24 90 00 00 	lea    0x90(%rsp),%r12
   1641c:	00 
   1641d:	4c 8d 2d bc 07 00 00 	lea    0x7bc(%rip),%r13        # 16be0 <<std::path::Components as core::iter::traits::iterator::Iterator>::next>
   16424:	e9 2a 00 00 00       	jmpq   16453 <std::path::iter_after+0x63>
   16429:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   16430:	0f 28 44 24 10       	movaps 0x10(%rsp),%xmm0
   16435:	0f 28 4c 24 20       	movaps 0x20(%rsp),%xmm1
   1643a:	0f 28 54 24 30       	movaps 0x30(%rsp),%xmm2
   1643f:	0f 28 5c 24 40       	movaps 0x40(%rsp),%xmm3
   16444:	0f 11 5b 30          	movups %xmm3,0x30(%rbx)
   16448:	0f 11 53 20          	movups %xmm2,0x20(%rbx)
   1644c:	0f 11 4b 10          	movups %xmm1,0x10(%rbx)
   16450:	0f 11 03             	movups %xmm0,(%rbx)
   16453:	0f 10 03             	movups (%rbx),%xmm0
   16456:	0f b6 43 10          	movzbl 0x10(%rbx),%eax
   1645a:	3c 06                	cmp    $0x6,%al
   1645c:	74 1c                	je     1647a <std::path::iter_after+0x8a>
   1645e:	49 8b 4e 1f          	mov    0x1f(%r14),%rcx
   16462:	48 89 4c 24 6f       	mov    %rcx,0x6f(%rsp)
   16467:	41 0f 10 0e          	movups (%r14),%xmm1
   1646b:	41 0f 10 56 10       	movups 0x10(%r14),%xmm2
   16470:	0f 29 54 24 60       	movaps %xmm2,0x60(%rsp)
   16475:	0f 29 4c 24 50       	movaps %xmm1,0x50(%rsp)
   1647a:	80 7b 38 00          	cmpb   $0x0,0x38(%rbx)
   1647e:	0f b7 4b 39          	movzwl 0x39(%rbx),%ecx
   16482:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   16487:	88 44 24 20          	mov    %al,0x20(%rsp)
   1648b:	0f 28 44 24 50       	movaps 0x50(%rsp),%xmm0
   16490:	0f 28 4c 24 60       	movaps 0x60(%rsp),%xmm1
   16495:	0f 11 4d 10          	movups %xmm1,0x10(%rbp)
   16499:	48 8b 44 24 6f       	mov    0x6f(%rsp),%rax
   1649e:	48 89 45 1f          	mov    %rax,0x1f(%rbp)
   164a2:	0f 11 45 00          	movups %xmm0,0x0(%rbp)
   164a6:	0f 95 44 24 48       	setne  0x48(%rsp)
   164ab:	66 89 4c 24 49       	mov    %cx,0x49(%rsp)
   164b0:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
   164b5:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   164ba:	41 ff d5             	callq  *%r13
   164bd:	48 8d bc 24 d8 00 00 	lea    0xd8(%rsp),%rdi
   164c4:	00 
   164c5:	4c 89 fe             	mov    %r15,%rsi
   164c8:	41 ff d5             	callq  *%r13
   164cb:	0f 10 84 24 d8 00 00 	movups 0xd8(%rsp),%xmm0
   164d2:	00 
   164d3:	0f 10 8c 24 e8 00 00 	movups 0xe8(%rsp),%xmm1
   164da:	00 
   164db:	0f 10 94 24 f8 00 00 	movups 0xf8(%rsp),%xmm2
   164e2:	00 
   164e3:	0f 10 9c 24 08 01 00 	movups 0x108(%rsp),%xmm3
   164ea:	00 
   164eb:	41 0f 11 5c 24 30    	movups %xmm3,0x30(%r12)
   164f1:	41 0f 11 54 24 20    	movups %xmm2,0x20(%r12)
   164f7:	41 0f 11 4c 24 10    	movups %xmm1,0x10(%r12)
   164fd:	41 0f 11 04 24       	movups %xmm0,(%r12)
   16502:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   16507:	48 8b 8c 24 90 00 00 	mov    0x90(%rsp),%rcx
   1650e:	00 
   1650f:	48 83 f8 05          	cmp    $0x5,%rax
   16513:	74 75                	je     1658a <std::path::iter_after+0x19a>
   16515:	83 f9 05             	cmp    $0x5,%ecx
   16518:	0f 84 8d 00 00 00    	je     165ab <std::path::iter_after+0x1bb>
   1651e:	48 39 c8             	cmp    %rcx,%rax
   16521:	75 60                	jne    16583 <std::path::iter_after+0x193>
   16523:	83 f8 04             	cmp    $0x4,%eax
   16526:	74 28                	je     16550 <std::path::iter_after+0x160>
   16528:	48 85 c0             	test   %rax,%rax
   1652b:	0f 85 ff fe ff ff    	jne    16430 <std::path::iter_after+0x40>
   16531:	48 8d 7c 24 58       	lea    0x58(%rsp),%rdi
   16536:	48 8d b4 24 98 00 00 	lea    0x98(%rsp),%rsi
   1653d:	00 
   1653e:	ff 15 84 f7 02 00    	callq  *0x2f784(%rip)        # 45cc8 <_GLOBAL_OFFSET_TABLE_+0x338>
   16544:	84 c0                	test   %al,%al
   16546:	0f 85 e4 fe ff ff    	jne    16430 <std::path::iter_after+0x40>
   1654c:	eb 35                	jmp    16583 <std::path::iter_after+0x193>
   1654e:	66 90                	xchg   %ax,%ax
   16550:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
   16555:	48 3b 94 24 a0 00 00 	cmp    0xa0(%rsp),%rdx
   1655c:	00 
   1655d:	75 24                	jne    16583 <std::path::iter_after+0x193>
   1655f:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
   16564:	48 8b b4 24 98 00 00 	mov    0x98(%rsp),%rsi
   1656b:	00 
   1656c:	48 39 f7             	cmp    %rsi,%rdi
   1656f:	0f 84 bb fe ff ff    	je     16430 <std::path::iter_after+0x40>
   16575:	ff 15 45 f8 02 00    	callq  *0x2f845(%rip)        # 45dc0 <bcmp@GLIBC_2.2.5>
   1657b:	85 c0                	test   %eax,%eax
   1657d:	0f 84 ad fe ff ff    	je     16430 <std::path::iter_after+0x40>
   16583:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   16588:	eb 1b                	jmp    165a5 <std::path::iter_after+0x1b5>
   1658a:	83 f9 05             	cmp    $0x5,%ecx
   1658d:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   16592:	75 11                	jne    165a5 <std::path::iter_after+0x1b5>
   16594:	0f 10 03             	movups (%rbx),%xmm0
   16597:	0f 10 4b 10          	movups 0x10(%rbx),%xmm1
   1659b:	0f 10 53 20          	movups 0x20(%rbx),%xmm2
   1659f:	0f 10 5b 30          	movups 0x30(%rbx),%xmm3
   165a3:	eb 1a                	jmp    165bf <std::path::iter_after+0x1cf>
   165a5:	c6 40 38 02          	movb   $0x2,0x38(%rax)
   165a9:	eb 23                	jmp    165ce <std::path::iter_after+0x1de>
   165ab:	0f 10 03             	movups (%rbx),%xmm0
   165ae:	0f 10 4b 10          	movups 0x10(%rbx),%xmm1
   165b2:	0f 10 53 20          	movups 0x20(%rbx),%xmm2
   165b6:	0f 10 5b 30          	movups 0x30(%rbx),%xmm3
   165ba:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   165bf:	0f 11 58 30          	movups %xmm3,0x30(%rax)
   165c3:	0f 11 50 20          	movups %xmm2,0x20(%rax)
   165c7:	0f 11 48 10          	movups %xmm1,0x10(%rax)
   165cb:	0f 11 00             	movups %xmm0,(%rax)
   165ce:	48 81 c4 18 01 00 00 	add    $0x118,%rsp
   165d5:	5b                   	pop    %rbx
   165d6:	41 5c                	pop    %r12
   165d8:	41 5d                	pop    %r13
   165da:	41 5e                	pop    %r14
   165dc:	41 5f                	pop    %r15
   165de:	5d                   	pop    %rbp
   165df:	c3                   	retq   

00000000000165e0 <<std::path::PrefixComponent as core::cmp::PartialEq>::eq>:
   165e0:	41 56                	push   %r14
   165e2:	53                   	push   %rbx
   165e3:	50                   	push   %rax
   165e4:	0f b6 47 10          	movzbl 0x10(%rdi),%eax
   165e8:	3a 46 10             	cmp    0x10(%rsi),%al
   165eb:	75 79                	jne    16666 <<std::path::PrefixComponent as core::cmp::PartialEq>::eq+0x86>
   165ed:	49 89 f6             	mov    %rsi,%r14
   165f0:	48 89 fb             	mov    %rdi,%rbx
   165f3:	48 8d 0d 12 08 02 00 	lea    0x20812(%rip),%rcx        # 36e0c <_fini+0x1d88>
   165fa:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   165fe:	48 01 c8             	add    %rcx,%rax
   16601:	ff e0                	jmpq   *%rax
   16603:	48 8b 53 20          	mov    0x20(%rbx),%rdx
   16607:	49 3b 56 20          	cmp    0x20(%r14),%rdx
   1660b:	75 59                	jne    16666 <<std::path::PrefixComponent as core::cmp::PartialEq>::eq+0x86>
   1660d:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   16611:	49 8b 76 18          	mov    0x18(%r14),%rsi
   16615:	48 39 f7             	cmp    %rsi,%rdi
   16618:	74 42                	je     1665c <<std::path::PrefixComponent as core::cmp::PartialEq>::eq+0x7c>
   1661a:	ff 15 a0 f7 02 00    	callq  *0x2f7a0(%rip)        # 45dc0 <bcmp@GLIBC_2.2.5>
   16620:	85 c0                	test   %eax,%eax
   16622:	eb 53                	jmp    16677 <<std::path::PrefixComponent as core::cmp::PartialEq>::eq+0x97>
   16624:	48 8b 53 20          	mov    0x20(%rbx),%rdx
   16628:	49 3b 56 20          	cmp    0x20(%r14),%rdx
   1662c:	75 38                	jne    16666 <<std::path::PrefixComponent as core::cmp::PartialEq>::eq+0x86>
   1662e:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   16632:	49 8b 76 18          	mov    0x18(%r14),%rsi
   16636:	48 39 f7             	cmp    %rsi,%rdi
   16639:	74 0a                	je     16645 <<std::path::PrefixComponent as core::cmp::PartialEq>::eq+0x65>
   1663b:	ff 15 7f f7 02 00    	callq  *0x2f77f(%rip)        # 45dc0 <bcmp@GLIBC_2.2.5>
   16641:	85 c0                	test   %eax,%eax
   16643:	75 21                	jne    16666 <<std::path::PrefixComponent as core::cmp::PartialEq>::eq+0x86>
   16645:	48 8b 53 30          	mov    0x30(%rbx),%rdx
   16649:	49 3b 56 30          	cmp    0x30(%r14),%rdx
   1664d:	75 17                	jne    16666 <<std::path::PrefixComponent as core::cmp::PartialEq>::eq+0x86>
   1664f:	48 8b 7b 28          	mov    0x28(%rbx),%rdi
   16653:	49 8b 76 28          	mov    0x28(%r14),%rsi
   16657:	48 39 f7             	cmp    %rsi,%rdi
   1665a:	75 be                	jne    1661a <<std::path::PrefixComponent as core::cmp::PartialEq>::eq+0x3a>
   1665c:	b0 01                	mov    $0x1,%al
   1665e:	48 83 c4 08          	add    $0x8,%rsp
   16662:	5b                   	pop    %rbx
   16663:	41 5e                	pop    %r14
   16665:	c3                   	retq   
   16666:	31 c0                	xor    %eax,%eax
   16668:	48 83 c4 08          	add    $0x8,%rsp
   1666c:	5b                   	pop    %rbx
   1666d:	41 5e                	pop    %r14
   1666f:	c3                   	retq   
   16670:	8a 43 11             	mov    0x11(%rbx),%al
   16673:	41 3a 46 11          	cmp    0x11(%r14),%al
   16677:	0f 94 c0             	sete   %al
   1667a:	48 83 c4 08          	add    $0x8,%rsp
   1667e:	5b                   	pop    %rbx
   1667f:	41 5e                	pop    %r14
   16681:	c3                   	retq   
   16682:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   16689:	00 00 00 
   1668c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000016690 <std::path::Components::len_before_body>:
   16690:	53                   	push   %rbx
   16691:	8a 57 39             	mov    0x39(%rdi),%dl
   16694:	31 c9                	xor    %ecx,%ecx
   16696:	31 c0                	xor    %eax,%eax
   16698:	80 fa 01             	cmp    $0x1,%dl
   1669b:	0f 95 c0             	setne  %al
   1669e:	be 00 00 00 00       	mov    $0x0,%esi
   166a3:	48 19 f6             	sbb    %rsi,%rsi
   166a6:	48 09 c6             	or     %rax,%rsi
   166a9:	80 fa 01             	cmp    $0x1,%dl
   166ac:	48 0f 44 f1          	cmove  %rcx,%rsi
   166b0:	48 83 c6 01          	add    $0x1,%rsi
   166b4:	b8 00 00 00 00       	mov    $0x0,%eax
   166b9:	48 83 fe 01          	cmp    $0x1,%rsi
   166bd:	0f 87 c4 00 00 00    	ja     16787 <std::path::Components::len_before_body+0xf7>
   166c3:	8a 47 38             	mov    0x38(%rdi),%al
   166c6:	31 c9                	xor    %ecx,%ecx
   166c8:	84 c0                	test   %al,%al
   166ca:	0f 95 c1             	setne  %cl
   166cd:	48 83 fe 01          	cmp    $0x1,%rsi
   166d1:	0f 87 ae 00 00 00    	ja     16785 <std::path::Components::len_before_body+0xf5>
   166d7:	84 c0                	test   %al,%al
   166d9:	0f 85 a6 00 00 00    	jne    16785 <std::path::Components::len_before_body+0xf5>
   166df:	8a 5f 10             	mov    0x10(%rdi),%bl
   166e2:	8d 43 fb             	lea    -0x5(%rbx),%eax
   166e5:	3c 01                	cmp    $0x1,%al
   166e7:	0f 87 98 00 00 00    	ja     16785 <std::path::Components::len_before_body+0xf5>
   166ed:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   166f1:	4c 8d 47 10          	lea    0x10(%rdi),%r8
   166f5:	31 c0                	xor    %eax,%eax
   166f7:	80 fb 06             	cmp    $0x6,%bl
   166fa:	4c 0f 44 c0          	cmove  %rax,%r8
   166fe:	74 69                	je     16769 <std::path::Components::len_before_body+0xd9>
   16700:	41 0f b6 18          	movzbl (%r8),%ebx
   16704:	b8 02 00 00 00       	mov    $0x2,%eax
   16709:	4c 8d 0d 14 07 02 00 	lea    0x20714(%rip),%r9        # 36e24 <_fini+0x1da0>
   16710:	49 63 1c 99          	movslq (%r9,%rbx,4),%rbx
   16714:	4c 01 cb             	add    %r9,%rbx
   16717:	ff e3                	jmpq   *%rbx
   16719:	49 8b 40 10          	mov    0x10(%r8),%rax
   1671d:	48 83 c0 04          	add    $0x4,%rax
   16721:	eb 3d                	jmp    16760 <std::path::Components::len_before_body+0xd0>
   16723:	b8 06 00 00 00       	mov    $0x6,%eax
   16728:	eb 36                	jmp    16760 <std::path::Components::len_before_body+0xd0>
   1672a:	4d 8b 48 10          	mov    0x10(%r8),%r9
   1672e:	49 8b 58 20          	mov    0x20(%r8),%rbx
   16732:	48 8d 43 01          	lea    0x1(%rbx),%rax
   16736:	48 85 db             	test   %rbx,%rbx
   16739:	48 0f 44 c3          	cmove  %rbx,%rax
   1673d:	4c 01 c8             	add    %r9,%rax
   16740:	48 83 c0 08          	add    $0x8,%rax
   16744:	eb 1a                	jmp    16760 <std::path::Components::len_before_body+0xd0>
   16746:	4d 8b 48 10          	mov    0x10(%r8),%r9
   1674a:	49 8b 58 20          	mov    0x20(%r8),%rbx
   1674e:	48 8d 43 01          	lea    0x1(%rbx),%rax
   16752:	48 85 db             	test   %rbx,%rbx
   16755:	48 0f 44 c3          	cmove  %rbx,%rax
   16759:	4c 01 c8             	add    %r9,%rax
   1675c:	48 83 c0 02          	add    $0x2,%rax
   16760:	48 39 c6             	cmp    %rax,%rsi
   16763:	0f 82 f3 00 00 00    	jb     1685c <std::path::Components::len_before_body+0x1cc>
   16769:	4c 8b 0f             	mov    (%rdi),%r9
   1676c:	4d 8d 04 01          	lea    (%r9,%rax,1),%r8
   16770:	45 31 d2             	xor    %r10d,%r10d
   16773:	48 39 f0             	cmp    %rsi,%rax
   16776:	41 0f 95 c3          	setne  %r11b
   1677a:	49 8d 5c 01 01       	lea    0x1(%r9,%rax,1),%rbx
   1677f:	49 0f 44 d8          	cmove  %r8,%rbx
   16783:	75 4a                	jne    167cf <std::path::Components::len_before_body+0x13f>
   16785:	31 c0                	xor    %eax,%eax
   16787:	84 d2                	test   %dl,%dl
   16789:	74 04                	je     1678f <std::path::Components::len_before_body+0xff>
   1678b:	31 d2                	xor    %edx,%edx
   1678d:	eb 10                	jmp    1679f <std::path::Components::len_before_body+0x10f>
   1678f:	48 8d 77 10          	lea    0x10(%rdi),%rsi
   16793:	31 d2                	xor    %edx,%edx
   16795:	80 7f 10 06          	cmpb   $0x6,0x10(%rdi)
   16799:	48 0f 44 f2          	cmove  %rdx,%rsi
   1679d:	75 08                	jne    167a7 <std::path::Components::len_before_body+0x117>
   1679f:	48 01 c8             	add    %rcx,%rax
   167a2:	48 01 d0             	add    %rdx,%rax
   167a5:	5b                   	pop    %rbx
   167a6:	c3                   	retq   
   167a7:	0f b6 3e             	movzbl (%rsi),%edi
   167aa:	ba 02 00 00 00       	mov    $0x2,%edx
   167af:	48 8d 1d 86 06 02 00 	lea    0x20686(%rip),%rbx        # 36e3c <_fini+0x1db8>
   167b6:	48 63 3c bb          	movslq (%rbx,%rdi,4),%rdi
   167ba:	48 01 df             	add    %rbx,%rdi
   167bd:	ff e7                	jmpq   *%rdi
   167bf:	48 8b 56 10          	mov    0x10(%rsi),%rdx
   167c3:	48 83 c2 04          	add    $0x4,%rdx
   167c7:	48 01 c8             	add    %rcx,%rax
   167ca:	48 01 d0             	add    %rdx,%rax
   167cd:	5b                   	pop    %rbx
   167ce:	c3                   	retq   
   167cf:	49 01 f1             	add    %rsi,%r9
   167d2:	41 8a 30             	mov    (%r8),%sil
   167d5:	4c 39 cb             	cmp    %r9,%rbx
   167d8:	74 63                	je     1683d <std::path::Components::len_before_body+0x1ad>
   167da:	40 80 fe 2e          	cmp    $0x2e,%sil
   167de:	75 5d                	jne    1683d <std::path::Components::len_before_body+0x1ad>
   167e0:	45 88 da             	mov    %r11b,%r10b
   167e3:	43 80 3c 10 2f       	cmpb   $0x2f,(%r8,%r10,1)
   167e8:	75 9b                	jne    16785 <std::path::Components::len_before_body+0xf5>
   167ea:	eb 66                	jmp    16852 <std::path::Components::len_before_body+0x1c2>
   167ec:	ba 06 00 00 00       	mov    $0x6,%edx
   167f1:	48 01 c8             	add    %rcx,%rax
   167f4:	48 01 d0             	add    %rdx,%rax
   167f7:	5b                   	pop    %rbx
   167f8:	c3                   	retq   
   167f9:	48 8b 56 10          	mov    0x10(%rsi),%rdx
   167fd:	48 8b 76 20          	mov    0x20(%rsi),%rsi
   16801:	48 8d 7e 01          	lea    0x1(%rsi),%rdi
   16805:	48 85 f6             	test   %rsi,%rsi
   16808:	48 0f 44 fe          	cmove  %rsi,%rdi
   1680c:	48 01 fa             	add    %rdi,%rdx
   1680f:	48 83 c2 08          	add    $0x8,%rdx
   16813:	48 01 c8             	add    %rcx,%rax
   16816:	48 01 d0             	add    %rdx,%rax
   16819:	5b                   	pop    %rbx
   1681a:	c3                   	retq   
   1681b:	48 8b 56 10          	mov    0x10(%rsi),%rdx
   1681f:	48 8b 76 20          	mov    0x20(%rsi),%rsi
   16823:	48 8d 7e 01          	lea    0x1(%rsi),%rdi
   16827:	48 85 f6             	test   %rsi,%rsi
   1682a:	48 0f 44 fe          	cmove  %rsi,%rdi
   1682e:	48 01 fa             	add    %rdi,%rdx
   16831:	48 83 c2 02          	add    $0x2,%rdx
   16835:	48 01 c8             	add    %rcx,%rax
   16838:	48 01 d0             	add    %rdx,%rax
   1683b:	5b                   	pop    %rbx
   1683c:	c3                   	retq   
   1683d:	31 c0                	xor    %eax,%eax
   1683f:	4c 39 cb             	cmp    %r9,%rbx
   16842:	0f 85 3f ff ff ff    	jne    16787 <std::path::Components::len_before_body+0xf7>
   16848:	40 80 fe 2e          	cmp    $0x2e,%sil
   1684c:	0f 85 35 ff ff ff    	jne    16787 <std::path::Components::len_before_body+0xf7>
   16852:	b8 01 00 00 00       	mov    $0x1,%eax
   16857:	e9 2b ff ff ff       	jmpq   16787 <std::path::Components::len_before_body+0xf7>
   1685c:	48 8d 15 bd d5 02 00 	lea    0x2d5bd(%rip),%rdx        # 43e20 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x8c8>
   16863:	48 89 c7             	mov    %rax,%rdi
   16866:	ff 15 8c f5 02 00    	callq  *0x2f58c(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x468>
   1686c:	0f 0b                	ud2    
   1686e:	66 90                	xchg   %ax,%ax

0000000000016870 <std::path::Components::as_path>:
   16870:	41 57                	push   %r15
   16872:	41 56                	push   %r14
   16874:	53                   	push   %rbx
   16875:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
   1687c:	4c 8b 37             	mov    (%rdi),%r14
   1687f:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
   16883:	8a 4f 10             	mov    0x10(%rdi),%cl
   16886:	80 f9 06             	cmp    $0x6,%cl
   16889:	74 1b                	je     168a6 <std::path::Components::as_path+0x36>
   1688b:	48 8b 47 30          	mov    0x30(%rdi),%rax
   1688f:	48 89 44 24 5f       	mov    %rax,0x5f(%rsp)
   16894:	0f 10 47 11          	movups 0x11(%rdi),%xmm0
   16898:	0f 10 4f 21          	movups 0x21(%rdi),%xmm1
   1689c:	0f 29 4c 24 50       	movaps %xmm1,0x50(%rsp)
   168a1:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
   168a6:	80 7f 38 00          	cmpb   $0x0,0x38(%rdi)
   168aa:	4c 89 34 24          	mov    %r14,(%rsp)
   168ae:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   168b3:	88 4c 24 10          	mov    %cl,0x10(%rsp)
   168b7:	0f 28 44 24 50       	movaps 0x50(%rsp),%xmm0
   168bc:	0f 11 44 24 21       	movups %xmm0,0x21(%rsp)
   168c1:	48 8b 44 24 5f       	mov    0x5f(%rsp),%rax
   168c6:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   168cb:	8a 57 39             	mov    0x39(%rdi),%dl
   168ce:	0f 28 44 24 40       	movaps 0x40(%rsp),%xmm0
   168d3:	0f 11 44 24 11       	movups %xmm0,0x11(%rsp)
   168d8:	0f 95 44 24 38       	setne  0x38(%rsp)
   168dd:	8a 47 3a             	mov    0x3a(%rdi),%al
   168e0:	88 54 24 39          	mov    %dl,0x39(%rsp)
   168e4:	88 44 24 3a          	mov    %al,0x3a(%rsp)
   168e8:	48 85 db             	test   %rbx,%rbx
   168eb:	0f 84 e5 00 00 00    	je     169d6 <std::path::Components::as_path+0x166>
   168f1:	80 fa 02             	cmp    $0x2,%dl
   168f4:	0f 85 dc 00 00 00    	jne    169d6 <std::path::Components::as_path+0x166>
   168fa:	80 f9 02             	cmp    $0x2,%cl
   168fd:	0f 86 7d 00 00 00    	jbe    16980 <std::path::Components::as_path+0x110>
   16903:	48 8d 0d 7f 14 02 00 	lea    0x2147f(%rip),%rcx        # 37d89 <str.6+0xa69>
   1690a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16910:	31 d2                	xor    %edx,%edx
   16912:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   16919:	00 00 00 
   1691c:	0f 1f 40 00          	nopl   0x0(%rax)
   16920:	41 80 3c 16 2f       	cmpb   $0x2f,(%r14,%rdx,1)
   16925:	74 19                	je     16940 <std::path::Components::as_path+0xd0>
   16927:	48 83 c2 01          	add    $0x1,%rdx
   1692b:	48 39 d3             	cmp    %rdx,%rbx
   1692e:	75 f0                	jne    16920 <std::path::Components::as_path+0xb0>
   16930:	48 89 da             	mov    %rbx,%rdx
   16933:	31 ff                	xor    %edi,%edi
   16935:	48 85 d2             	test   %rdx,%rdx
   16938:	75 10                	jne    1694a <std::path::Components::as_path+0xda>
   1693a:	e9 20 00 00 00       	jmpq   1695f <std::path::Components::as_path+0xef>
   1693f:	90                   	nop
   16940:	bf 01 00 00 00       	mov    $0x1,%edi
   16945:	48 85 d2             	test   %rdx,%rdx
   16948:	74 15                	je     1695f <std::path::Components::as_path+0xef>
   1694a:	48 83 fa 01          	cmp    $0x1,%rdx
   1694e:	0f 85 82 00 00 00    	jne    169d6 <std::path::Components::as_path+0x166>
   16954:	49 39 ce             	cmp    %rcx,%r14
   16957:	74 06                	je     1695f <std::path::Components::as_path+0xef>
   16959:	41 80 3e 2e          	cmpb   $0x2e,(%r14)
   1695d:	75 77                	jne    169d6 <std::path::Components::as_path+0x166>
   1695f:	48 01 d7             	add    %rdx,%rdi
   16962:	48 39 fb             	cmp    %rdi,%rbx
   16965:	0f 82 da 00 00 00    	jb     16a45 <std::path::Components::as_path+0x1d5>
   1696b:	49 01 fe             	add    %rdi,%r14
   1696e:	4c 89 34 24          	mov    %r14,(%rsp)
   16972:	48 29 fb             	sub    %rdi,%rbx
   16975:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   1697a:	75 94                	jne    16910 <std::path::Components::as_path+0xa0>
   1697c:	eb 56                	jmp    169d4 <std::path::Components::as_path+0x164>
   1697e:	66 90                	xchg   %ax,%ax
   16980:	31 c9                	xor    %ecx,%ecx
   16982:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   16989:	00 00 00 
   1698c:	0f 1f 40 00          	nopl   0x0(%rax)
   16990:	41 80 3c 0e 2f       	cmpb   $0x2f,(%r14,%rcx,1)
   16995:	74 19                	je     169b0 <std::path::Components::as_path+0x140>
   16997:	48 83 c1 01          	add    $0x1,%rcx
   1699b:	48 39 cb             	cmp    %rcx,%rbx
   1699e:	75 f0                	jne    16990 <std::path::Components::as_path+0x120>
   169a0:	48 89 d9             	mov    %rbx,%rcx
   169a3:	31 d2                	xor    %edx,%edx
   169a5:	48 85 c9             	test   %rcx,%rcx
   169a8:	74 10                	je     169ba <std::path::Components::as_path+0x14a>
   169aa:	e9 27 00 00 00       	jmpq   169d6 <std::path::Components::as_path+0x166>
   169af:	90                   	nop
   169b0:	ba 01 00 00 00       	mov    $0x1,%edx
   169b5:	48 85 c9             	test   %rcx,%rcx
   169b8:	75 1c                	jne    169d6 <std::path::Components::as_path+0x166>
   169ba:	48 39 d3             	cmp    %rdx,%rbx
   169bd:	0f 82 7d 00 00 00    	jb     16a40 <std::path::Components::as_path+0x1d0>
   169c3:	49 01 d6             	add    %rdx,%r14
   169c6:	4c 89 34 24          	mov    %r14,(%rsp)
   169ca:	48 29 d3             	sub    %rdx,%rbx
   169cd:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   169d2:	75 ac                	jne    16980 <std::path::Components::as_path+0x110>
   169d4:	31 db                	xor    %ebx,%ebx
   169d6:	3c 02                	cmp    $0x2,%al
   169d8:	75 53                	jne    16a2d <std::path::Components::as_path+0x1bd>
   169da:	48 89 e7             	mov    %rsp,%rdi
   169dd:	e8 ae fc ff ff       	callq  16690 <std::path::Components::len_before_body>
   169e2:	48 39 c3             	cmp    %rax,%rbx
   169e5:	76 46                	jbe    16a2d <std::path::Components::as_path+0x1bd>
   169e7:	4c 8d 74 24 40       	lea    0x40(%rsp),%r14
   169ec:	49 89 e7             	mov    %rsp,%r15
   169ef:	90                   	nop
   169f0:	4c 89 f7             	mov    %r14,%rdi
   169f3:	4c 89 fe             	mov    %r15,%rsi
   169f6:	e8 75 00 00 00       	callq  16a70 <std::path::Components::parse_next_component_back>
   169fb:	48 83 7c 24 48 05    	cmpq   $0x5,0x48(%rsp)
   16a01:	75 21                	jne    16a24 <std::path::Components::as_path+0x1b4>
   16a03:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   16a08:	48 89 f3             	mov    %rsi,%rbx
   16a0b:	48 2b 5c 24 40       	sub    0x40(%rsp),%rbx
   16a10:	72 45                	jb     16a57 <std::path::Components::as_path+0x1e7>
   16a12:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   16a17:	4c 89 ff             	mov    %r15,%rdi
   16a1a:	e8 71 fc ff ff       	callq  16690 <std::path::Components::len_before_body>
   16a1f:	48 39 c3             	cmp    %rax,%rbx
   16a22:	77 cc                	ja     169f0 <std::path::Components::as_path+0x180>
   16a24:	4c 8b 34 24          	mov    (%rsp),%r14
   16a28:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   16a2d:	4c 89 f0             	mov    %r14,%rax
   16a30:	48 89 da             	mov    %rbx,%rdx
   16a33:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
   16a3a:	5b                   	pop    %rbx
   16a3b:	41 5e                	pop    %r14
   16a3d:	41 5f                	pop    %r15
   16a3f:	c3                   	retq   
   16a40:	bf 01 00 00 00       	mov    $0x1,%edi
   16a45:	48 8d 15 1c d4 02 00 	lea    0x2d41c(%rip),%rdx        # 43e68 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x910>
   16a4c:	48 89 de             	mov    %rbx,%rsi
   16a4f:	ff 15 a3 f3 02 00    	callq  *0x2f3a3(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x468>
   16a55:	0f 0b                	ud2    
   16a57:	48 8d 15 22 d4 02 00 	lea    0x2d422(%rip),%rdx        # 43e80 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x928>
   16a5e:	48 89 df             	mov    %rbx,%rdi
   16a61:	ff 15 c9 ef 02 00    	callq  *0x2efc9(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   16a67:	0f 0b                	ud2    
   16a69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000016a70 <std::path::Components::parse_next_component_back>:
   16a70:	41 57                	push   %r15
   16a72:	41 56                	push   %r14
   16a74:	53                   	push   %rbx
   16a75:	48 83 ec 30          	sub    $0x30,%rsp
   16a79:	49 89 f6             	mov    %rsi,%r14
   16a7c:	49 89 ff             	mov    %rdi,%r15
   16a7f:	48 89 f7             	mov    %rsi,%rdi
   16a82:	e8 09 fc ff ff       	callq  16690 <std::path::Components::len_before_body>
   16a87:	49 8b 76 08          	mov    0x8(%r14),%rsi
   16a8b:	48 39 c6             	cmp    %rax,%rsi
   16a8e:	0f 82 1c 01 00 00    	jb     16bb0 <std::path::Components::parse_next_component_back+0x140>
   16a94:	4d 8b 1e             	mov    (%r14),%r11
   16a97:	4d 8d 04 03          	lea    (%r11,%rax,1),%r8
   16a9b:	4d 8d 14 33          	lea    (%r11,%rsi,1),%r10
   16a9f:	49 8d 3c 33          	lea    (%r11,%rsi,1),%rdi
   16aa3:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   16aa7:	48 89 c3             	mov    %rax,%rbx
   16aaa:	48 29 f3             	sub    %rsi,%rbx
   16aad:	45 31 c9             	xor    %r9d,%r9d
   16ab0:	31 d2                	xor    %edx,%edx
   16ab2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   16ab9:	00 00 00 
   16abc:	0f 1f 40 00          	nopl   0x0(%rax)
   16ac0:	48 39 d3             	cmp    %rdx,%rbx
   16ac3:	74 38                	je     16afd <std::path::Components::parse_next_component_back+0x8d>
   16ac5:	48 8d 4a ff          	lea    -0x1(%rdx),%rcx
   16ac9:	80 3c 17 2f          	cmpb   $0x2f,(%rdi,%rdx,1)
   16acd:	48 89 ca             	mov    %rcx,%rdx
   16ad0:	75 ee                	jne    16ac0 <std::path::Components::parse_next_component_back+0x50>
   16ad2:	4c 01 d0             	add    %r10,%rax
   16ad5:	4c 29 c0             	sub    %r8,%rax
   16ad8:	48 8d 3c 08          	lea    (%rax,%rcx,1),%rdi
   16adc:	48 83 c7 01          	add    $0x1,%rdi
   16ae0:	48 39 fe             	cmp    %rdi,%rsi
   16ae3:	0f 82 d9 00 00 00    	jb     16bc2 <std::path::Components::parse_next_component_back+0x152>
   16ae9:	4c 01 d8             	add    %r11,%rax
   16aec:	4c 8d 04 01          	lea    (%rcx,%rax,1),%r8
   16af0:	49 83 c0 01          	add    $0x1,%r8
   16af4:	41 b9 01 00 00 00    	mov    $0x1,%r9d
   16afa:	48 89 f8             	mov    %rdi,%rax
   16afd:	48 29 c6             	sub    %rax,%rsi
   16b00:	74 70                	je     16b72 <std::path::Components::parse_next_component_back+0x102>
   16b02:	b8 04 00 00 00       	mov    $0x4,%eax
   16b07:	48 83 fe 02          	cmp    $0x2,%rsi
   16b0b:	74 46                	je     16b53 <std::path::Components::parse_next_component_back+0xe3>
   16b0d:	48 83 fe 01          	cmp    $0x1,%rsi
   16b11:	75 64                	jne    16b77 <std::path::Components::parse_next_component_back+0x107>
   16b13:	48 8d 0d 6f 12 02 00 	lea    0x2126f(%rip),%rcx        # 37d89 <str.6+0xa69>
   16b1a:	49 39 c8             	cmp    %rcx,%r8
   16b1d:	74 06                	je     16b25 <std::path::Components::parse_next_component_back+0xb5>
   16b1f:	41 80 38 2e          	cmpb   $0x2e,(%r8)
   16b23:	75 52                	jne    16b77 <std::path::Components::parse_next_component_back+0x107>
   16b25:	41 8a 46 10          	mov    0x10(%r14),%al
   16b29:	31 c9                	xor    %ecx,%ecx
   16b2b:	3c 03                	cmp    $0x3,%al
   16b2d:	0f 92 c1             	setb   %cl
   16b30:	3c 06                	cmp    $0x6,%al
   16b32:	b8 02 00 00 00       	mov    $0x2,%eax
   16b37:	0f 45 c1             	cmovne %ecx,%eax
   16b3a:	31 c9                	xor    %ecx,%ecx
   16b3c:	a8 01                	test   $0x1,%al
   16b3e:	0f 94 c1             	sete   %cl
   16b41:	3c 02                	cmp    $0x2,%al
   16b43:	48 8d 4c 49 02       	lea    0x2(%rcx,%rcx,2),%rcx
   16b48:	b8 05 00 00 00       	mov    $0x5,%eax
   16b4d:	48 0f 45 c1          	cmovne %rcx,%rax
   16b51:	eb 24                	jmp    16b77 <std::path::Components::parse_next_component_back+0x107>
   16b53:	48 8d 0d 47 12 02 00 	lea    0x21247(%rip),%rcx        # 37da1 <str.6+0xa81>
   16b5a:	49 39 c8             	cmp    %rcx,%r8
   16b5d:	74 0c                	je     16b6b <std::path::Components::parse_next_component_back+0xfb>
   16b5f:	41 0f b7 08          	movzwl (%r8),%ecx
   16b63:	81 f9 2e 2e 00 00    	cmp    $0x2e2e,%ecx
   16b69:	75 0c                	jne    16b77 <std::path::Components::parse_next_component_back+0x107>
   16b6b:	b8 03 00 00 00       	mov    $0x3,%eax
   16b70:	eb 05                	jmp    16b77 <std::path::Components::parse_next_component_back+0x107>
   16b72:	b8 05 00 00 00       	mov    $0x5,%eax
   16b77:	49 01 f1             	add    %rsi,%r9
   16b7a:	4d 89 0f             	mov    %r9,(%r15)
   16b7d:	49 89 47 08          	mov    %rax,0x8(%r15)
   16b81:	4d 89 47 10          	mov    %r8,0x10(%r15)
   16b85:	49 89 77 18          	mov    %rsi,0x18(%r15)
   16b89:	0f 10 44 24 08       	movups 0x8(%rsp),%xmm0
   16b8e:	0f 10 4c 24 18       	movups 0x18(%rsp),%xmm1
   16b93:	41 0f 11 47 20       	movups %xmm0,0x20(%r15)
   16b98:	41 0f 11 4f 30       	movups %xmm1,0x30(%r15)
   16b9d:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   16ba2:	49 89 47 40          	mov    %rax,0x40(%r15)
   16ba6:	48 83 c4 30          	add    $0x30,%rsp
   16baa:	5b                   	pop    %rbx
   16bab:	41 5e                	pop    %r14
   16bad:	41 5f                	pop    %r15
   16baf:	c3                   	retq   
   16bb0:	48 8d 15 81 d2 02 00 	lea    0x2d281(%rip),%rdx        # 43e38 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x8e0>
   16bb7:	48 89 c7             	mov    %rax,%rdi
   16bba:	ff 15 38 f2 02 00    	callq  *0x2f238(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x468>
   16bc0:	0f 0b                	ud2    
   16bc2:	48 8d 15 87 d2 02 00 	lea    0x2d287(%rip),%rdx        # 43e50 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x8f8>
   16bc9:	ff 15 29 f2 02 00    	callq  *0x2f229(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x468>
   16bcf:	0f 0b                	ud2    
   16bd1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   16bd8:	00 00 00 
   16bdb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000016be0 <<std::path::Components as core::iter::traits::iterator::Iterator>::next>:
   16be0:	55                   	push   %rbp
   16be1:	41 57                	push   %r15
   16be3:	41 56                	push   %r14
   16be5:	41 55                	push   %r13
   16be7:	41 54                	push   %r12
   16be9:	53                   	push   %rbx
   16bea:	48 83 ec 68          	sub    $0x68,%rsp
   16bee:	48 89 f8             	mov    %rdi,%rax
   16bf1:	44 8a 5e 39          	mov    0x39(%rsi),%r11b
   16bf5:	44 8a 66 3a          	mov    0x3a(%rsi),%r12b
   16bf9:	45 38 e3             	cmp    %r12b,%r11b
   16bfc:	0f 87 73 04 00 00    	ja     17075 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x495>
   16c02:	41 80 fb 03          	cmp    $0x3,%r11b
   16c06:	0f 84 69 04 00 00    	je     17075 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x495>
   16c0c:	41 80 fc 03          	cmp    $0x3,%r12b
   16c10:	0f 84 5f 04 00 00    	je     17075 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x495>
   16c16:	48 8d 56 10          	lea    0x10(%rsi),%rdx
   16c1a:	8a 4e 10             	mov    0x10(%rsi),%cl
   16c1d:	8a 5e 38             	mov    0x38(%rsi),%bl
   16c20:	88 5c 24 07          	mov    %bl,0x7(%rsp)
   16c24:	31 ff                	xor    %edi,%edi
   16c26:	80 f9 03             	cmp    $0x3,%cl
   16c29:	40 0f 92 c7          	setb   %dil
   16c2d:	45 31 d2             	xor    %r10d,%r10d
   16c30:	80 f9 06             	cmp    $0x6,%cl
   16c33:	bd 02 00 00 00       	mov    $0x2,%ebp
   16c38:	0f 45 ef             	cmovne %edi,%ebp
   16c3b:	4c 0f 45 d2          	cmovne %rdx,%r10
   16c3f:	31 d2                	xor    %edx,%edx
   16c41:	40 f6 c5 01          	test   $0x1,%bpl
   16c45:	0f 94 c2             	sete   %dl
   16c48:	40 80 fd 02          	cmp    $0x2,%bpl
   16c4c:	48 8d 54 52 02       	lea    0x2(%rdx,%rdx,2),%rdx
   16c51:	bf 05 00 00 00       	mov    $0x5,%edi
   16c56:	48 0f 45 fa          	cmovne %rdx,%rdi
   16c5a:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   16c5f:	41 b6 27             	mov    $0x27,%r14b
   16c62:	41 d2 ee             	shr    %cl,%r14b
   16c65:	41 0f b6 d3          	movzbl %r11b,%edx
   16c69:	4c 8d 3d e4 01 02 00 	lea    0x201e4(%rip),%r15        # 36e54 <_fini+0x1dd0>
   16c70:	49 63 14 97          	movslq (%r15,%rdx,4),%rdx
   16c74:	4c 01 fa             	add    %r15,%rdx
   16c77:	ff e2                	jmpq   *%rdx
   16c79:	48 8d 3d d0 09 02 00 	lea    0x209d0(%rip),%rdi        # 37650 <str.6+0x330>
   16c80:	48 8d 15 11 d2 02 00 	lea    0x2d211(%rip),%rdx        # 43e98 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x940>
   16c87:	be 28 00 00 00       	mov    $0x28,%esi
   16c8c:	e8 7f 37 00 00       	callq  1a410 <std::panicking::begin_panic>
   16c91:	0f 0b                	ud2    
   16c93:	80 f9 06             	cmp    $0x6,%cl
   16c96:	75 0c                	jne    16ca4 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0xc4>
   16c98:	c6 46 39 01          	movb   $0x1,0x39(%rsi)
   16c9c:	41 b3 01             	mov    $0x1,%r11b
   16c9f:	e9 a6 02 00 00       	jmpq   16f4a <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x36a>
   16ca4:	41 0f b6 2a          	movzbl (%r10),%ebp
   16ca8:	48 8d 15 b5 01 02 00 	lea    0x201b5(%rip),%rdx        # 36e64 <_fini+0x1de0>
   16caf:	48 63 3c aa          	movslq (%rdx,%rbp,4),%rdi
   16cb3:	48 01 d7             	add    %rdx,%rdi
   16cb6:	ff e7                	jmpq   *%rdi
   16cb8:	c6 46 39 01          	movb   $0x1,0x39(%rsi)
   16cbc:	4c 8b 1e             	mov    (%rsi),%r11
   16cbf:	4c 8b 46 08          	mov    0x8(%rsi),%r8
   16cc3:	bf 02 00 00 00       	mov    $0x2,%edi
   16cc8:	48 8d 1d ad 01 02 00 	lea    0x201ad(%rip),%rbx        # 36e7c <_fini+0x1df8>
   16ccf:	48 63 14 ab          	movslq (%rbx,%rbp,4),%rdx
   16cd3:	48 01 da             	add    %rbx,%rdx
   16cd6:	ff e2                	jmpq   *%rdx
   16cd8:	49 8b 7a 10          	mov    0x10(%r10),%rdi
   16cdc:	48 83 c7 04          	add    $0x4,%rdi
   16ce0:	e9 ab 00 00 00       	jmpq   16d90 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x1b0>
   16ce5:	49 8b 52 10          	mov    0x10(%r10),%rdx
   16ce9:	48 83 c2 04          	add    $0x4,%rdx
   16ced:	eb 36                	jmp    16d25 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x145>
   16cef:	49 8b 52 10          	mov    0x10(%r10),%rdx
   16cf3:	49 8b 7a 20          	mov    0x20(%r10),%rdi
   16cf7:	48 8d 5f 01          	lea    0x1(%rdi),%rbx
   16cfb:	48 85 ff             	test   %rdi,%rdi
   16cfe:	48 0f 44 df          	cmove  %rdi,%rbx
   16d02:	48 01 da             	add    %rbx,%rdx
   16d05:	48 83 c2 08          	add    $0x8,%rdx
   16d09:	eb 1a                	jmp    16d25 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x145>
   16d0b:	49 8b 52 10          	mov    0x10(%r10),%rdx
   16d0f:	49 8b 7a 20          	mov    0x20(%r10),%rdi
   16d13:	48 8d 5f 01          	lea    0x1(%rdi),%rbx
   16d17:	48 85 ff             	test   %rdi,%rdi
   16d1a:	48 0f 44 df          	cmove  %rdi,%rbx
   16d1e:	48 01 da             	add    %rbx,%rdx
   16d21:	48 83 c2 02          	add    $0x2,%rdx
   16d25:	c6 46 39 01          	movb   $0x1,0x39(%rsi)
   16d29:	41 b3 01             	mov    $0x1,%r11b
   16d2c:	48 85 d2             	test   %rdx,%rdx
   16d2f:	0f 84 15 02 00 00    	je     16f4a <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x36a>
   16d35:	4c 8b 1e             	mov    (%rsi),%r11
   16d38:	4c 8b 46 08          	mov    0x8(%rsi),%r8
   16d3c:	bf 02 00 00 00       	mov    $0x2,%edi
   16d41:	48 8d 15 34 01 02 00 	lea    0x20134(%rip),%rdx        # 36e7c <_fini+0x1df8>
   16d48:	48 63 1c aa          	movslq (%rdx,%rbp,4),%rbx
   16d4c:	48 01 d3             	add    %rdx,%rbx
   16d4f:	ff e3                	jmpq   *%rbx
   16d51:	49 8b 52 10          	mov    0x10(%r10),%rdx
   16d55:	49 8b 7a 20          	mov    0x20(%r10),%rdi
   16d59:	48 8d 5f 01          	lea    0x1(%rdi),%rbx
   16d5d:	48 85 ff             	test   %rdi,%rdi
   16d60:	48 0f 44 df          	cmove  %rdi,%rbx
   16d64:	48 8d 3c 1a          	lea    (%rdx,%rbx,1),%rdi
   16d68:	48 83 c7 08          	add    $0x8,%rdi
   16d6c:	eb 22                	jmp    16d90 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x1b0>
   16d6e:	bf 06 00 00 00       	mov    $0x6,%edi
   16d73:	eb 1b                	jmp    16d90 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x1b0>
   16d75:	49 8b 52 10          	mov    0x10(%r10),%rdx
   16d79:	49 8b 7a 20          	mov    0x20(%r10),%rdi
   16d7d:	48 8d 5f 01          	lea    0x1(%rdi),%rbx
   16d81:	48 85 ff             	test   %rdi,%rdi
   16d84:	48 0f 44 df          	cmove  %rdi,%rbx
   16d88:	48 8d 3c 1a          	lea    (%rdx,%rbx,1),%rdi
   16d8c:	48 83 c7 02          	add    $0x2,%rdi
   16d90:	49 39 f8             	cmp    %rdi,%r8
   16d93:	0f 82 d3 00 00 00    	jb     16e6c <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x28c>
   16d99:	41 b9 02 00 00 00    	mov    $0x2,%r9d
   16d9f:	48 8d 15 ee 00 02 00 	lea    0x200ee(%rip),%rdx        # 36e94 <_fini+0x1e10>
   16da6:	48 63 1c aa          	movslq (%rdx,%rbp,4),%rbx
   16daa:	48 01 d3             	add    %rdx,%rbx
   16dad:	ff e3                	jmpq   *%rbx
   16daf:	4d 8b 4a 10          	mov    0x10(%r10),%r9
   16db3:	49 83 c1 04          	add    $0x4,%r9
   16db7:	eb 40                	jmp    16df9 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x219>
   16db9:	41 b9 06 00 00 00    	mov    $0x6,%r9d
   16dbf:	eb 38                	jmp    16df9 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x219>
   16dc1:	49 8b 52 10          	mov    0x10(%r10),%rdx
   16dc5:	49 8b 6a 20          	mov    0x20(%r10),%rbp
   16dc9:	48 8d 5d 01          	lea    0x1(%rbp),%rbx
   16dcd:	48 85 ed             	test   %rbp,%rbp
   16dd0:	48 0f 44 dd          	cmove  %rbp,%rbx
   16dd4:	4c 8d 0c 1a          	lea    (%rdx,%rbx,1),%r9
   16dd8:	49 83 c1 08          	add    $0x8,%r9
   16ddc:	eb 1b                	jmp    16df9 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x219>
   16dde:	49 8b 52 10          	mov    0x10(%r10),%rdx
   16de2:	49 8b 6a 20          	mov    0x20(%r10),%rbp
   16de6:	48 8d 5d 01          	lea    0x1(%rbp),%rbx
   16dea:	48 85 ed             	test   %rbp,%rbp
   16ded:	48 0f 44 dd          	cmove  %rbp,%rbx
   16df1:	4c 8d 0c 1a          	lea    (%rdx,%rbx,1),%r9
   16df5:	49 83 c1 02          	add    $0x2,%r9
   16df9:	4c 89 c5             	mov    %r8,%rbp
   16dfc:	4c 29 cd             	sub    %r9,%rbp
   16dff:	72 7d                	jb     16e7e <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x29e>
   16e01:	4d 01 d9             	add    %r11,%r9
   16e04:	4c 89 0e             	mov    %r9,(%rsi)
   16e07:	48 89 6e 08          	mov    %rbp,0x8(%rsi)
   16e0b:	48 8b 56 30          	mov    0x30(%rsi),%rdx
   16e0f:	48 89 54 24 2f       	mov    %rdx,0x2f(%rsp)
   16e14:	0f 10 46 11          	movups 0x11(%rsi),%xmm0
   16e18:	0f 10 4e 21          	movups 0x21(%rsi),%xmm1
   16e1c:	0f 29 4c 24 20       	movaps %xmm1,0x20(%rsp)
   16e21:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
   16e26:	0f 28 44 24 20       	movaps 0x20(%rsp),%xmm0
   16e2b:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   16e30:	48 8b 54 24 2f       	mov    0x2f(%rsp),%rdx
   16e35:	48 89 54 24 5f       	mov    %rdx,0x5f(%rsp)
   16e3a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   16e41:	4c 89 58 08          	mov    %r11,0x8(%rax)
   16e45:	48 89 78 10          	mov    %rdi,0x10(%rax)
   16e49:	88 48 18             	mov    %cl,0x18(%rax)
   16e4c:	0f 28 44 24 40       	movaps 0x40(%rsp),%xmm0
   16e51:	0f 28 4c 24 50       	movaps 0x50(%rsp),%xmm1
   16e56:	0f 11 40 19          	movups %xmm0,0x19(%rax)
   16e5a:	0f 11 48 29          	movups %xmm1,0x29(%rax)
   16e5e:	48 8b 4c 24 5f       	mov    0x5f(%rsp),%rcx
   16e63:	48 89 48 38          	mov    %rcx,0x38(%rax)
   16e67:	e9 10 02 00 00       	jmpq   1707c <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x49c>
   16e6c:	48 8d 15 6d d0 02 00 	lea    0x2d06d(%rip),%rdx        # 43ee0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x988>
   16e73:	4c 89 c6             	mov    %r8,%rsi
   16e76:	ff 15 b4 eb 02 00    	callq  *0x2ebb4(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   16e7c:	0f 0b                	ud2    
   16e7e:	48 8d 15 73 d0 02 00 	lea    0x2d073(%rip),%rdx        # 43ef8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x9a0>
   16e85:	4c 89 cf             	mov    %r9,%rdi
   16e88:	e9 05 02 00 00       	jmpq   17092 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x4b2>
   16e8d:	c6 46 39 02          	movb   $0x2,0x39(%rsi)
   16e91:	80 7c 24 07 00       	cmpb   $0x0,0x7(%rsp)
   16e96:	75 7b                	jne    16f13 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x333>
   16e98:	80 f9 06             	cmp    $0x6,%cl
   16e9b:	75 38                	jne    16ed5 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x2f5>
   16e9d:	48 8b 2e             	mov    (%rsi),%rbp
   16ea0:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   16ea4:	4c 8d 45 01          	lea    0x1(%rbp),%r8
   16ea8:	4c 89 c7             	mov    %r8,%rdi
   16eab:	41 b3 02             	mov    $0x2,%r11b
   16eae:	48 85 d2             	test   %rdx,%rdx
   16eb1:	48 0f 44 fd          	cmove  %rbp,%rdi
   16eb5:	0f 84 8f 00 00 00    	je     16f4a <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x36a>
   16ebb:	4c 8d 2c 2a          	lea    (%rdx,%rbp,1),%r13
   16ebf:	40 8a 6d 00          	mov    0x0(%rbp),%bpl
   16ec3:	4c 39 ef             	cmp    %r13,%rdi
   16ec6:	74 29                	je     16ef1 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x311>
   16ec8:	40 80 fd 2e          	cmp    $0x2e,%bpl
   16ecc:	75 23                	jne    16ef1 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x311>
   16ece:	80 3f 2f             	cmpb   $0x2f,(%rdi)
   16ed1:	75 77                	jne    16f4a <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x36a>
   16ed3:	eb 27                	jmp    16efc <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x31c>
   16ed5:	80 f9 05             	cmp    $0x5,%cl
   16ed8:	77 0b                	ja     16ee5 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x305>
   16eda:	44 89 f2             	mov    %r14d,%edx
   16edd:	41 b3 02             	mov    $0x2,%r11b
   16ee0:	80 e2 01             	and    $0x1,%dl
   16ee3:	75 65                	jne    16f4a <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x36a>
   16ee5:	48 c7 00 01 00 00 00 	movq   $0x1,(%rax)
   16eec:	e9 8b 01 00 00       	jmpq   1707c <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x49c>
   16ef1:	4c 39 ef             	cmp    %r13,%rdi
   16ef4:	75 54                	jne    16f4a <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x36a>
   16ef6:	40 80 fd 2e          	cmp    $0x2e,%bpl
   16efa:	75 4e                	jne    16f4a <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x36a>
   16efc:	48 83 c2 ff          	add    $0xffffffffffffffff,%rdx
   16f00:	4c 89 06             	mov    %r8,(%rsi)
   16f03:	48 89 56 08          	mov    %rdx,0x8(%rsi)
   16f07:	48 c7 00 02 00 00 00 	movq   $0x2,(%rax)
   16f0e:	e9 69 01 00 00       	jmpq   1707c <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x49c>
   16f13:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
   16f17:	48 85 c9             	test   %rcx,%rcx
   16f1a:	74 18                	je     16f34 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x354>
   16f1c:	48 83 06 01          	addq   $0x1,(%rsi)
   16f20:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
   16f24:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
   16f28:	48 c7 00 01 00 00 00 	movq   $0x1,(%rax)
   16f2f:	e9 48 01 00 00       	jmpq   1707c <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x49c>
   16f34:	48 8d 15 8d cf 02 00 	lea    0x2cf8d(%rip),%rdx        # 43ec8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x970>
   16f3b:	bf 01 00 00 00       	mov    $0x1,%edi
   16f40:	31 f6                	xor    %esi,%esi
   16f42:	ff 15 b0 ee 02 00    	callq  *0x2eeb0(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x468>
   16f48:	0f 0b                	ud2    
   16f4a:	45 38 e3             	cmp    %r12b,%r11b
   16f4d:	0f 87 22 01 00 00    	ja     17075 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x495>
   16f53:	41 80 fb 03          	cmp    $0x3,%r11b
   16f57:	0f 84 18 01 00 00    	je     17075 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x495>
   16f5d:	41 0f b6 d3          	movzbl %r11b,%edx
   16f61:	49 63 14 97          	movslq (%r15,%rdx,4),%rdx
   16f65:	4c 01 fa             	add    %r15,%rdx
   16f68:	ff e2                	jmpq   *%rdx
   16f6a:	4c 8b 46 08          	mov    0x8(%rsi),%r8
   16f6e:	4d 85 c0             	test   %r8,%r8
   16f71:	0f 84 fa 00 00 00    	je     17071 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x491>
   16f77:	48 8b 2e             	mov    (%rsi),%rbp
   16f7a:	31 ff                	xor    %edi,%edi
   16f7c:	31 d2                	xor    %edx,%edx
   16f7e:	66 90                	xchg   %ax,%ax
   16f80:	80 7c 15 00 2f       	cmpb   $0x2f,0x0(%rbp,%rdx,1)
   16f85:	74 19                	je     16fa0 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x3c0>
   16f87:	48 83 c2 01          	add    $0x1,%rdx
   16f8b:	49 39 d0             	cmp    %rdx,%r8
   16f8e:	75 f0                	jne    16f80 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x3a0>
   16f90:	4c 89 c2             	mov    %r8,%rdx
   16f93:	48 85 d2             	test   %rdx,%rdx
   16f96:	75 12                	jne    16faa <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x3ca>
   16f98:	41 bd 05 00 00 00    	mov    $0x5,%r13d
   16f9e:	eb 5e                	jmp    16ffe <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x41e>
   16fa0:	bf 01 00 00 00       	mov    $0x1,%edi
   16fa5:	48 85 d2             	test   %rdx,%rdx
   16fa8:	74 ee                	je     16f98 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x3b8>
   16faa:	41 bd 04 00 00 00    	mov    $0x4,%r13d
   16fb0:	48 83 fa 02          	cmp    $0x2,%rdx
   16fb4:	74 2a                	je     16fe0 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x400>
   16fb6:	48 83 fa 01          	cmp    $0x1,%rdx
   16fba:	75 42                	jne    16ffe <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x41e>
   16fbc:	4c 8d 0d c6 0d 02 00 	lea    0x20dc6(%rip),%r9        # 37d89 <str.6+0xa69>
   16fc3:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
   16fc8:	4c 39 cd             	cmp    %r9,%rbp
   16fcb:	74 31                	je     16ffe <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x41e>
   16fcd:	80 7d 00 2e          	cmpb   $0x2e,0x0(%rbp)
   16fd1:	41 bd 04 00 00 00    	mov    $0x4,%r13d
   16fd7:	75 25                	jne    16ffe <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x41e>
   16fd9:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
   16fde:	eb 1e                	jmp    16ffe <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x41e>
   16fe0:	48 8d 1d ba 0d 02 00 	lea    0x20dba(%rip),%rbx        # 37da1 <str.6+0xa81>
   16fe7:	48 39 dd             	cmp    %rbx,%rbp
   16fea:	74 0c                	je     16ff8 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x418>
   16fec:	0f b7 5d 00          	movzwl 0x0(%rbp),%ebx
   16ff0:	81 fb 2e 2e 00 00    	cmp    $0x2e2e,%ebx
   16ff6:	75 06                	jne    16ffe <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x41e>
   16ff8:	41 bd 03 00 00 00    	mov    $0x3,%r13d
   16ffe:	48 01 d7             	add    %rdx,%rdi
   17001:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
   17006:	48 89 5c 24 60       	mov    %rbx,0x60(%rsp)
   1700b:	0f 10 44 24 10       	movups 0x10(%rsp),%xmm0
   17010:	0f 10 4c 24 20       	movups 0x20(%rsp),%xmm1
   17015:	0f 29 4c 24 50       	movaps %xmm1,0x50(%rsp)
   1701a:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
   1701f:	48 89 5c 24 30       	mov    %rbx,0x30(%rsp)
   17024:	0f 29 4c 24 20       	movaps %xmm1,0x20(%rsp)
   17029:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   1702e:	4d 89 c1             	mov    %r8,%r9
   17031:	49 29 f9             	sub    %rdi,%r9
   17034:	72 55                	jb     1708b <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x4ab>
   17036:	48 01 ef             	add    %rbp,%rdi
   17039:	48 89 3e             	mov    %rdi,(%rsi)
   1703c:	4c 89 4e 08          	mov    %r9,0x8(%rsi)
   17040:	49 83 fd 05          	cmp    $0x5,%r13
   17044:	0f 84 00 ff ff ff    	je     16f4a <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x36a>
   1704a:	4c 89 28             	mov    %r13,(%rax)
   1704d:	48 89 68 08          	mov    %rbp,0x8(%rax)
   17051:	48 89 50 10          	mov    %rdx,0x10(%rax)
   17055:	0f 28 44 24 10       	movaps 0x10(%rsp),%xmm0
   1705a:	0f 28 4c 24 20       	movaps 0x20(%rsp),%xmm1
   1705f:	0f 11 40 18          	movups %xmm0,0x18(%rax)
   17063:	0f 11 48 28          	movups %xmm1,0x28(%rax)
   17067:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   1706c:	e9 f2 fd ff ff       	jmpq   16e63 <<std::path::Components as core::iter::traits::iterator::Iterator>::next+0x283>
   17071:	c6 46 39 03          	movb   $0x3,0x39(%rsi)
   17075:	48 c7 00 05 00 00 00 	movq   $0x5,(%rax)
   1707c:	48 83 c4 68          	add    $0x68,%rsp
   17080:	5b                   	pop    %rbx
   17081:	41 5c                	pop    %r12
   17083:	41 5d                	pop    %r13
   17085:	41 5e                	pop    %r14
   17087:	41 5f                	pop    %r15
   17089:	5d                   	pop    %rbp
   1708a:	c3                   	retq   
   1708b:	48 8d 15 1e ce 02 00 	lea    0x2ce1e(%rip),%rdx        # 43eb0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x958>
   17092:	4c 89 c6             	mov    %r8,%rsi
   17095:	ff 15 5d ed 02 00    	callq  *0x2ed5d(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x468>
   1709b:	0f 0b                	ud2    
   1709d:	0f 1f 00             	nopl   (%rax)

00000000000170a0 <<std::path::Display as core::fmt::Debug>::fmt>:
   170a0:	48 89 f2             	mov    %rsi,%rdx
   170a3:	48 8b 07             	mov    (%rdi),%rax
   170a6:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   170aa:	48 89 c7             	mov    %rax,%rdi
   170ad:	ff 25 dd eb 02 00    	jmpq   *0x2ebdd(%rip)        # 45c90 <_GLOBAL_OFFSET_TABLE_+0x300>
   170b3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   170ba:	00 00 00 
   170bd:	0f 1f 00             	nopl   (%rax)

00000000000170c0 <std::process::abort>:
   170c0:	50                   	push   %rax
   170c1:	e8 ca 51 00 00       	callq  1c290 <std::sys::unix::abort_internal>
   170c6:	0f 0b                	ud2    
   170c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   170cf:	00 

00000000000170d0 <std::sync::once::Once::call_once::{{closure}}>:
   170d0:	55                   	push   %rbp
   170d1:	41 57                	push   %r15
   170d3:	41 56                	push   %r14
   170d5:	41 55                	push   %r13
   170d7:	41 54                	push   %r12
   170d9:	53                   	push   %rbx
   170da:	48 83 ec 28          	sub    $0x28,%rsp
   170de:	48 8b 07             	mov    (%rdi),%rax
   170e1:	f6 00 01             	testb  $0x1,(%rax)
   170e4:	c6 00 00             	movb   $0x0,(%rax)
   170e7:	0f 84 e3 01 00 00    	je     172d0 <std::sync::once::Once::call_once::{{closure}}+0x200>
   170ed:	48 8d 1d ac f0 02 00 	lea    0x2f0ac(%rip),%rbx        # 461a0 <std::sys::unix::args::imp::LOCK>
   170f4:	48 89 df             	mov    %rbx,%rdi
   170f7:	ff 15 c3 ee 02 00    	callq  *0x2eec3(%rip)        # 45fc0 <pthread_mutex_lock@GLIBC_2.2.5>
   170fd:	48 c7 05 88 f0 02 00 	movq   $0x0,0x2f088(%rip)        # 46190 <std::sys::unix::args::imp::ARGC>
   17104:	00 00 00 00 
   17108:	48 c7 05 85 f0 02 00 	movq   $0x0,0x2f085(%rip)        # 46198 <std::sys::unix::args::imp::ARGV>
   1710f:	00 00 00 00 
   17113:	48 89 df             	mov    %rbx,%rdi
   17116:	ff 15 54 ec 02 00    	callq  *0x2ec54(%rip)        # 45d70 <pthread_mutex_unlock@GLIBC_2.2.5>
   1711c:	48 8b 1d cd f0 02 00 	mov    0x2f0cd(%rip),%rbx        # 461f0 <std::sys::unix::stack_overflow::imp::MAIN_ALTSTACK>
   17123:	48 85 db             	test   %rbx,%rbx
   17126:	74 4f                	je     17177 <std::sync::once::Once::call_once::{{closure}}+0xa7>
   17128:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   1712f:	00 00 
   17131:	c7 44 24 10 02 00 00 	movl   $0x2,0x10(%rsp)
   17138:	00 
   17139:	48 c7 44 24 18 00 20 	movq   $0x2000,0x18(%rsp)
   17140:	00 00 
   17142:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   17147:	31 f6                	xor    %esi,%esi
   17149:	ff 15 21 ee 02 00    	callq  *0x2ee21(%rip)        # 45f70 <sigaltstack@GLIBC_2.2.5>
   1714f:	48 8b 2d 9a ed 02 00 	mov    0x2ed9a(%rip),%rbp        # 45ef0 <sysconf@GLIBC_2.2.5>
   17156:	bf 1e 00 00 00       	mov    $0x1e,%edi
   1715b:	ff d5                	callq  *%rbp
   1715d:	48 29 c3             	sub    %rax,%rbx
   17160:	bf 1e 00 00 00       	mov    $0x1e,%edi
   17165:	ff d5                	callq  *%rbp
   17167:	48 8d b0 00 20 00 00 	lea    0x2000(%rax),%rsi
   1716e:	48 89 df             	mov    %rbx,%rdi
   17171:	ff 15 b1 ec 02 00    	callq  *0x2ecb1(%rip)        # 45e28 <munmap@GLIBC_2.2.5>
   17177:	bd 01 00 00 00       	mov    $0x1,%ebp
   1717c:	41 bd 0a 00 00 00    	mov    $0xa,%r13d
   17182:	48 8d 1d 37 ef 02 00 	lea    0x2ef37(%rip),%rbx        # 460c0 <std::sys_common::at_exit_imp::LOCK>
   17189:	4c 8b 35 30 ee 02 00 	mov    0x2ee30(%rip),%r14        # 45fc0 <pthread_mutex_lock@GLIBC_2.2.5>
   17190:	e9 48 00 00 00       	jmpq   171dd <std::sync::once::Once::call_once::{{closure}}+0x10d>
   17195:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1719c:	00 00 00 
   1719f:	90                   	nop
   171a0:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   171a5:	e8 36 00 ff ff       	callq  71e0 <core::ptr::drop_in_place>
   171aa:	be 18 00 00 00       	mov    $0x18,%esi
   171af:	ba 08 00 00 00       	mov    $0x8,%edx
   171b4:	4c 89 e7             	mov    %r12,%rdi
   171b7:	ff 15 43 ea 02 00    	callq  *0x2ea43(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   171bd:	41 bd 0a 00 00 00    	mov    $0xa,%r13d
   171c3:	4c 89 f3             	mov    %r14,%rbx
   171c6:	4c 8b 35 f3 ed 02 00 	mov    0x2edf3(%rip),%r14        # 45fc0 <pthread_mutex_lock@GLIBC_2.2.5>
   171cd:	48 83 fd 0a          	cmp    $0xa,%rbp
   171d1:	0f 97 c0             	seta   %al
   171d4:	44 08 f8             	or     %r15b,%al
   171d7:	0f 85 ca 00 00 00    	jne    172a7 <std::sync::once::Once::call_once::{{closure}}+0x1d7>
   171dd:	45 31 ff             	xor    %r15d,%r15d
   171e0:	48 83 fd 09          	cmp    $0x9,%rbp
   171e4:	41 0f 97 c7          	seta   %r15b
   171e8:	48 83 fd 0a          	cmp    $0xa,%rbp
   171ec:	48 8d 6d 01          	lea    0x1(%rbp),%rbp
   171f0:	49 0f 43 ed          	cmovae %r13,%rbp
   171f4:	48 89 df             	mov    %rbx,%rdi
   171f7:	41 ff d6             	callq  *%r14
   171fa:	4c 8b 25 e7 ee 02 00 	mov    0x2eee7(%rip),%r12        # 460e8 <std::sys_common::at_exit_imp::QUEUE>
   17201:	4c 89 3d e0 ee 02 00 	mov    %r15,0x2eee0(%rip)        # 460e8 <std::sys_common::at_exit_imp::QUEUE>
   17208:	48 89 df             	mov    %rbx,%rdi
   1720b:	ff 15 5f eb 02 00    	callq  *0x2eb5f(%rip)        # 45d70 <pthread_mutex_unlock@GLIBC_2.2.5>
   17211:	4d 85 e4             	test   %r12,%r12
   17214:	74 b7                	je     171cd <std::sync::once::Once::call_once::{{closure}}+0xfd>
   17216:	49 83 fc 01          	cmp    $0x1,%r12
   1721a:	0f 84 96 00 00 00    	je     172b6 <std::sync::once::Once::call_once::{{closure}}+0x1e6>
   17220:	49 89 de             	mov    %rbx,%r14
   17223:	49 8b 04 24          	mov    (%r12),%rax
   17227:	49 8b 4c 24 08       	mov    0x8(%r12),%rcx
   1722c:	49 8b 54 24 10       	mov    0x10(%r12),%rdx
   17231:	48 89 d6             	mov    %rdx,%rsi
   17234:	48 c1 e6 04          	shl    $0x4,%rsi
   17238:	48 01 c6             	add    %rax,%rsi
   1723b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   17240:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   17245:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1724a:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
   1724f:	48 85 d2             	test   %rdx,%rdx
   17252:	0f 85 18 00 00 00    	jne    17270 <std::sync::once::Once::call_once::{{closure}}+0x1a0>
   17258:	e9 43 ff ff ff       	jmpq   171a0 <std::sync::once::Once::call_once::{{closure}}+0xd0>
   1725d:	0f 1f 00             	nopl   (%rax)
   17260:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   17265:	48 3b 44 24 20       	cmp    0x20(%rsp),%rax
   1726a:	0f 84 30 ff ff ff    	je     171a0 <std::sync::once::Once::call_once::{{closure}}+0xd0>
   17270:	48 8d 48 10          	lea    0x10(%rax),%rcx
   17274:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   17279:	4c 8b 28             	mov    (%rax),%r13
   1727c:	4d 85 ed             	test   %r13,%r13
   1727f:	0f 84 1b ff ff ff    	je     171a0 <std::sync::once::Once::call_once::{{closure}}+0xd0>
   17285:	48 8b 58 08          	mov    0x8(%rax),%rbx
   17289:	4c 89 ef             	mov    %r13,%rdi
   1728c:	ff 53 18             	callq  *0x18(%rbx)
   1728f:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   17293:	48 85 f6             	test   %rsi,%rsi
   17296:	74 c8                	je     17260 <std::sync::once::Once::call_once::{{closure}}+0x190>
   17298:	48 8b 53 10          	mov    0x10(%rbx),%rdx
   1729c:	4c 89 ef             	mov    %r13,%rdi
   1729f:	ff 15 5b e9 02 00    	callq  *0x2e95b(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   172a5:	eb b9                	jmp    17260 <std::sync::once::Once::call_once::{{closure}}+0x190>
   172a7:	48 83 c4 28          	add    $0x28,%rsp
   172ab:	5b                   	pop    %rbx
   172ac:	41 5c                	pop    %r12
   172ae:	41 5d                	pop    %r13
   172b0:	41 5e                	pop    %r14
   172b2:	41 5f                	pop    %r15
   172b4:	5d                   	pop    %rbp
   172b5:	c3                   	retq   
   172b6:	48 8d 3d 65 0b 02 00 	lea    0x20b65(%rip),%rdi        # 37e22 <str.6+0xb02>
   172bd:	48 8d 15 2c cd 02 00 	lea    0x2cd2c(%rip),%rdx        # 43ff0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xa98>
   172c4:	be 1f 00 00 00       	mov    $0x1f,%esi
   172c9:	e8 42 31 00 00       	callq  1a410 <std::panicking::begin_panic>
   172ce:	0f 0b                	ud2    
   172d0:	48 8d 3d 23 03 02 00 	lea    0x20323(%rip),%rdi        # 375fa <str.6+0x2da>
   172d7:	48 8d 15 5a cc 02 00 	lea    0x2cc5a(%rip),%rdx        # 43f38 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x9e0>
   172de:	be 2b 00 00 00       	mov    $0x2b,%esi
   172e3:	ff 15 f7 eb 02 00    	callq  *0x2ebf7(%rip)        # 45ee0 <_GLOBAL_OFFSET_TABLE_+0x550>
   172e9:	0f 0b                	ud2    
   172eb:	49 89 c6             	mov    %rax,%r14
   172ee:	eb 18                	jmp    17308 <std::sync::once::Once::call_once::{{closure}}+0x238>
   172f0:	49 89 c6             	mov    %rax,%r14
   172f3:	4c 89 ef             	mov    %r13,%rdi
   172f6:	48 89 de             	mov    %rbx,%rsi
   172f9:	e8 e2 25 ff ff       	callq  98e0 <alloc::alloc::box_free>
   172fe:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   17303:	e8 d8 fe fe ff       	callq  71e0 <core::ptr::drop_in_place>
   17308:	4c 89 e7             	mov    %r12,%rdi
   1730b:	e8 f0 25 ff ff       	callq  9900 <alloc::alloc::box_free>
   17310:	4c 89 f7             	mov    %r14,%rdi
   17313:	e8 38 dd fe ff       	callq  5050 <_Unwind_Resume@plt>
   17318:	0f 0b                	ud2    
   1731a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000017320 <std::sync::once::Once::call_once_force::{{closure}}>:
   17320:	41 57                	push   %r15
   17322:	41 56                	push   %r14
   17324:	41 54                	push   %r12
   17326:	53                   	push   %rbx
   17327:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
   1732e:	48 8b 07             	mov    (%rdi),%rax
   17331:	4c 8b 38             	mov    (%rax),%r15
   17334:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1733b:	4d 85 ff             	test   %r15,%r15
   1733e:	0f 84 21 02 00 00    	je     17565 <std::sync::once::Once::call_once_force::{{closure}}+0x245>
   17344:	48 8d 1d 75 ed 02 00 	lea    0x2ed75(%rip),%rbx        # 460c0 <std::sys_common::at_exit_imp::LOCK>
   1734b:	48 89 df             	mov    %rbx,%rdi
   1734e:	ff 15 6c ec 02 00    	callq  *0x2ec6c(%rip)        # 45fc0 <pthread_mutex_lock@GLIBC_2.2.5>
   17354:	48 89 5c 24 50       	mov    %rbx,0x50(%rsp)
   17359:	48 8b 1d 88 ed 02 00 	mov    0x2ed88(%rip),%rbx        # 460e8 <std::sys_common::at_exit_imp::QUEUE>
   17360:	48 83 fb 01          	cmp    $0x1,%rbx
   17364:	0f 84 b8 00 00 00    	je     17422 <std::sync::once::Once::call_once_force::{{closure}}+0x102>
   1736a:	48 85 db             	test   %rbx,%rbx
   1736d:	75 31                	jne    173a0 <std::sync::once::Once::call_once_force::{{closure}}+0x80>
   1736f:	bf 18 00 00 00       	mov    $0x18,%edi
   17374:	be 08 00 00 00       	mov    $0x8,%esi
   17379:	ff 15 09 e8 02 00    	callq  *0x2e809(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   1737f:	48 85 c0             	test   %rax,%rax
   17382:	0f 84 12 02 00 00    	je     1759a <std::sync::once::Once::call_once_force::{{closure}}+0x27a>
   17388:	48 89 c3             	mov    %rax,%rbx
   1738b:	48 c7 00 08 00 00 00 	movq   $0x8,(%rax)
   17392:	0f 57 c0             	xorps  %xmm0,%xmm0
   17395:	0f 11 40 08          	movups %xmm0,0x8(%rax)
   17399:	48 89 05 48 ed 02 00 	mov    %rax,0x2ed48(%rip)        # 460e8 <std::sys_common::at_exit_imp::QUEUE>
   173a0:	48 c7 04 24 01 00 00 	movq   $0x1,(%rsp)
   173a7:	00 
   173a8:	4c 8d 25 c9 cd 02 00 	lea    0x2cdc9(%rip),%r12        # 44178 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xc20>
   173af:	4c 89 64 24 08       	mov    %r12,0x8(%rsp)
   173b4:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   173b8:	48 3b 73 08          	cmp    0x8(%rbx),%rsi
   173bc:	75 6d                	jne    1742b <std::sync::once::Once::call_once_force::{{closure}}+0x10b>
   173be:	48 89 f1             	mov    %rsi,%rcx
   173c1:	48 ff c1             	inc    %rcx
   173c4:	0f 84 c8 01 00 00    	je     17592 <std::sync::once::Once::call_once_force::{{closure}}+0x272>
   173ca:	48 8d 04 36          	lea    (%rsi,%rsi,1),%rax
   173ce:	48 39 c8             	cmp    %rcx,%rax
   173d1:	48 0f 47 c8          	cmova  %rax,%rcx
   173d5:	48 83 f9 04          	cmp    $0x4,%rcx
   173d9:	b8 04 00 00 00       	mov    $0x4,%eax
   173de:	48 0f 47 c1          	cmova  %rcx,%rax
   173e2:	ba 10 00 00 00       	mov    $0x10,%edx
   173e7:	31 c9                	xor    %ecx,%ecx
   173e9:	48 f7 e2             	mul    %rdx
   173ec:	49 89 c6             	mov    %rax,%r14
   173ef:	0f 90 c0             	seto   %al
   173f2:	0f 91 c1             	setno  %cl
   173f5:	48 c1 e1 03          	shl    $0x3,%rcx
   173f9:	48 85 f6             	test   %rsi,%rsi
   173fc:	74 32                	je     17430 <std::sync::once::Once::call_once_force::{{closure}}+0x110>
   173fe:	84 c0                	test   %al,%al
   17400:	0f 85 8c 01 00 00    	jne    17592 <std::sync::once::Once::call_once_force::{{closure}}+0x272>
   17406:	48 8b 3b             	mov    (%rbx),%rdi
   17409:	48 85 ff             	test   %rdi,%rdi
   1740c:	74 2a                	je     17438 <std::sync::once::Once::call_once_force::{{closure}}+0x118>
   1740e:	48 c1 e6 04          	shl    $0x4,%rsi
   17412:	74 24                	je     17438 <std::sync::once::Once::call_once_force::{{closure}}+0x118>
   17414:	48 89 ca             	mov    %rcx,%rdx
   17417:	4c 89 f1             	mov    %r14,%rcx
   1741a:	ff 15 58 eb 02 00    	callq  *0x2eb58(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
   17420:	eb 27                	jmp    17449 <std::sync::once::Once::call_once_force::{{closure}}+0x129>
   17422:	48 8d 3d 97 ec 02 00 	lea    0x2ec97(%rip),%rdi        # 460c0 <std::sys_common::at_exit_imp::LOCK>
   17429:	eb 54                	jmp    1747f <std::sync::once::Once::call_once_force::{{closure}}+0x15f>
   1742b:	48 8b 0b             	mov    (%rbx),%rcx
   1742e:	eb 34                	jmp    17464 <std::sync::once::Once::call_once_force::{{closure}}+0x144>
   17430:	84 c0                	test   %al,%al
   17432:	0f 85 5a 01 00 00    	jne    17592 <std::sync::once::Once::call_once_force::{{closure}}+0x272>
   17438:	4d 85 f6             	test   %r14,%r14
   1743b:	74 0f                	je     1744c <std::sync::once::Once::call_once_force::{{closure}}+0x12c>
   1743d:	4c 89 f7             	mov    %r14,%rdi
   17440:	48 89 ce             	mov    %rcx,%rsi
   17443:	ff 15 3f e7 02 00    	callq  *0x2e73f(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   17449:	48 89 c1             	mov    %rax,%rcx
   1744c:	48 85 c9             	test   %rcx,%rcx
   1744f:	0f 84 57 01 00 00    	je     175ac <std::sync::once::Once::call_once_force::{{closure}}+0x28c>
   17455:	48 89 0b             	mov    %rcx,(%rbx)
   17458:	49 c1 ee 04          	shr    $0x4,%r14
   1745c:	4c 89 73 08          	mov    %r14,0x8(%rbx)
   17460:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   17464:	48 c1 e6 04          	shl    $0x4,%rsi
   17468:	48 c7 04 31 01 00 00 	movq   $0x1,(%rcx,%rsi,1)
   1746f:	00 
   17470:	4c 89 64 31 08       	mov    %r12,0x8(%rcx,%rsi,1)
   17475:	48 83 43 10 01       	addq   $0x1,0x10(%rbx)
   1747a:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   1747f:	ff 15 eb e8 02 00    	callq  *0x2e8eb(%rip)        # 45d70 <pthread_mutex_unlock@GLIBC_2.2.5>
   17485:	bf 00 04 00 00       	mov    $0x400,%edi
   1748a:	be 01 00 00 00       	mov    $0x1,%esi
   1748f:	ff 15 f3 e6 02 00    	callq  *0x2e6f3(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   17495:	48 85 c0             	test   %rax,%rax
   17498:	0f 84 e2 00 00 00    	je     17580 <std::sync::once::Once::call_once_force::{{closure}}+0x260>
   1749e:	0f b7 4c 24 04       	movzwl 0x4(%rsp),%ecx
   174a3:	8b 14 24             	mov    (%rsp),%edx
   174a6:	0f 57 c0             	xorps  %xmm0,%xmm0
   174a9:	0f 29 04 24          	movaps %xmm0,(%rsp)
   174ad:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   174b2:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   174b7:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   174bc:	0f 28 05 1d ed 01 00 	movaps 0x1ed1d(%rip),%xmm0        # 361e0 <_fini+0x115c>
   174c3:	0f 11 44 24 38       	movups %xmm0,0x38(%rsp)
   174c8:	66 c7 44 24 48 01 00 	movw   $0x1,0x48(%rsp)
   174cf:	89 54 24 4a          	mov    %edx,0x4a(%rsp)
   174d3:	66 89 4c 24 4e       	mov    %cx,0x4e(%rsp)
   174d8:	48 8d 5c 24 50       	lea    0x50(%rsp),%rbx
   174dd:	48 89 df             	mov    %rbx,%rdi
   174e0:	ff 15 ca e6 02 00    	callq  *0x2e6ca(%rip)        # 45bb0 <pthread_mutexattr_init@GLIBC_2.2.5>
   174e6:	48 89 df             	mov    %rbx,%rdi
   174e9:	be 01 00 00 00       	mov    $0x1,%esi
   174ee:	ff 15 94 e8 02 00    	callq  *0x2e894(%rip)        # 45d88 <pthread_mutexattr_settype@GLIBC_2.2.5>
   174f4:	48 89 e7             	mov    %rsp,%rdi
   174f7:	48 89 de             	mov    %rbx,%rsi
   174fa:	ff 15 a0 ea 02 00    	callq  *0x2eaa0(%rip)        # 45fa0 <pthread_mutex_init@GLIBC_2.2.5>
   17500:	48 89 df             	mov    %rbx,%rdi
   17503:	ff 15 57 e6 02 00    	callq  *0x2e657(%rip)        # 45b60 <pthread_mutexattr_destroy@GLIBC_2.2.5>
   17509:	0f 28 04 24          	movaps (%rsp),%xmm0
   1750d:	0f 28 4c 24 10       	movaps 0x10(%rsp),%xmm1
   17512:	0f 28 54 24 20       	movaps 0x20(%rsp),%xmm2
   17517:	0f 28 5c 24 30       	movaps 0x30(%rsp),%xmm3
   1751c:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   17521:	0f 28 64 24 40       	movaps 0x40(%rsp),%xmm4
   17526:	0f 29 a4 24 90 00 00 	movaps %xmm4,0x90(%rsp)
   1752d:	00 
   1752e:	0f 29 9c 24 80 00 00 	movaps %xmm3,0x80(%rsp)
   17535:	00 
   17536:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
   1753b:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
   17540:	49 8b 07             	mov    (%r15),%rax
   17543:	0f 11 60 40          	movups %xmm4,0x40(%rax)
   17547:	0f 11 58 30          	movups %xmm3,0x30(%rax)
   1754b:	0f 11 50 20          	movups %xmm2,0x20(%rax)
   1754f:	0f 11 48 10          	movups %xmm1,0x10(%rax)
   17553:	0f 11 00             	movups %xmm0,(%rax)
   17556:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
   1755d:	5b                   	pop    %rbx
   1755e:	41 5c                	pop    %r12
   17560:	41 5e                	pop    %r14
   17562:	41 5f                	pop    %r15
   17564:	c3                   	retq   
   17565:	48 8d 3d 8e 00 02 00 	lea    0x2008e(%rip),%rdi        # 375fa <str.6+0x2da>
   1756c:	48 8d 15 05 ca 02 00 	lea    0x2ca05(%rip),%rdx        # 43f78 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xa20>
   17573:	be 2b 00 00 00       	mov    $0x2b,%esi
   17578:	ff 15 62 e9 02 00    	callq  *0x2e962(%rip)        # 45ee0 <_GLOBAL_OFFSET_TABLE_+0x550>
   1757e:	0f 0b                	ud2    
   17580:	bf 00 04 00 00       	mov    $0x400,%edi
   17585:	be 01 00 00 00       	mov    $0x1,%esi
   1758a:	ff 15 98 e5 02 00    	callq  *0x2e598(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   17590:	0f 0b                	ud2    
   17592:	ff 15 50 e5 02 00    	callq  *0x2e550(%rip)        # 45ae8 <_GLOBAL_OFFSET_TABLE_+0x158>
   17598:	0f 0b                	ud2    
   1759a:	bf 18 00 00 00       	mov    $0x18,%edi
   1759f:	be 08 00 00 00       	mov    $0x8,%esi
   175a4:	ff 15 7e e5 02 00    	callq  *0x2e57e(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   175aa:	0f 0b                	ud2    
   175ac:	be 08 00 00 00       	mov    $0x8,%esi
   175b1:	4c 89 f7             	mov    %r14,%rdi
   175b4:	ff 15 6e e5 02 00    	callq  *0x2e56e(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   175ba:	0f 0b                	ud2    
   175bc:	48 89 c3             	mov    %rax,%rbx
   175bf:	48 89 e7             	mov    %rsp,%rdi
   175c2:	e8 79 eb fe ff       	callq  6140 <core::ptr::drop_in_place>
   175c7:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
   175cc:	e8 9f f5 fe ff       	callq  6b70 <core::ptr::drop_in_place>
   175d1:	48 89 df             	mov    %rbx,%rdi
   175d4:	e8 77 da fe ff       	callq  5050 <_Unwind_Resume@plt>
   175d9:	0f 0b                	ud2    
   175db:	48 89 c3             	mov    %rax,%rbx
   175de:	eb e7                	jmp    175c7 <std::sync::once::Once::call_once_force::{{closure}}+0x2a7>

00000000000175e0 <std::sync::once::Once::call_inner>:
   175e0:	55                   	push   %rbp
   175e1:	41 57                	push   %r15
   175e3:	41 56                	push   %r14
   175e5:	41 55                	push   %r13
   175e7:	41 54                	push   %r12
   175e9:	53                   	push   %rbx
   175ea:	48 83 ec 38          	sub    $0x38,%rsp
   175ee:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   175f3:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
   175f8:	49 89 fc             	mov    %rdi,%r12
   175fb:	4c 8b 37             	mov    (%rdi),%r14
   175fe:	85 f6                	test   %esi,%esi
   17600:	0f 84 c6 01 00 00    	je     177cc <std::sync::once::Once::call_inner+0x1ec>
   17606:	45 31 ff             	xor    %r15d,%r15d
   17609:	48 8b 2d c8 e6 02 00 	mov    0x2e6c8(%rip),%rbp        # 45cd8 <syscall@GLIBC_2.2.5>
   17610:	49 89 e5             	mov    %rsp,%r13
   17613:	e9 0c 00 00 00       	jmpq   17624 <std::sync::once::Once::call_inner+0x44>
   17618:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1761f:	00 
   17620:	4d 8b 34 24          	mov    (%r12),%r14
   17624:	4c 89 f3             	mov    %r14,%rbx
   17627:	49 83 fe 02          	cmp    $0x2,%r14
   1762b:	73 23                	jae    17650 <std::sync::once::Once::call_inner+0x70>
   1762d:	48 89 d8             	mov    %rbx,%rax
   17630:	b9 02 00 00 00       	mov    $0x2,%ecx
   17635:	f0 49 0f b1 0c 24    	lock cmpxchg %rcx,(%r12)
   1763b:	49 89 c6             	mov    %rax,%r14
   1763e:	0f 85 e0 ff ff ff    	jne    17624 <std::sync::once::Once::call_inner+0x44>
   17644:	e9 3a 03 00 00       	jmpq   17983 <std::sync::once::Once::call_inner+0x3a3>
   17649:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17650:	48 83 fb 03          	cmp    $0x3,%rbx
   17654:	0f 84 6c 03 00 00    	je     179c6 <std::sync::once::Once::call_inner+0x3e6>
   1765a:	89 d8                	mov    %ebx,%eax
   1765c:	83 e0 03             	and    $0x3,%eax
   1765f:	83 f8 02             	cmp    $0x2,%eax
   17662:	0f 84 12 00 00 00    	je     1767a <std::sync::once::Once::call_inner+0x9a>
   17668:	e9 9e 03 00 00       	jmpq   17a0b <std::sync::once::Once::call_inner+0x42b>
   1766d:	0f 1f 00             	nopl   (%rax)
   17670:	89 d8                	mov    %ebx,%eax
   17672:	83 e0 03             	and    $0x3,%eax
   17675:	83 f8 02             	cmp    $0x2,%eax
   17678:	75 a6                	jne    17620 <std::sync::once::Once::call_inner+0x40>
   1767a:	66 66 66 64 48 8b 04 	data16 data16 data16 mov %fs:0x0,%rax
   17681:	25 00 00 00 00 
   17686:	49 89 c6             	mov    %rax,%r14
   17689:	83 b8 a0 ff ff ff 01 	cmpl   $0x1,-0x60(%rax)
   17690:	75 0e                	jne    176a0 <std::sync::once::Once::call_inner+0xc0>
   17692:	48 8d 80 a8 ff ff ff 	lea    -0x58(%rax),%rax
   17699:	e9 10 00 00 00       	jmpq   176ae <std::sync::once::Once::call_inner+0xce>
   1769e:	66 90                	xchg   %ax,%ax
   176a0:	e8 6b be ff ff       	callq  13510 <std::thread::local::fast::Key<T>::try_initialize>
   176a5:	48 85 c0             	test   %rax,%rax
   176a8:	0f 84 27 03 00 00    	je     179d5 <std::sync::once::Once::call_inner+0x3f5>
   176ae:	48 89 c7             	mov    %rax,%rdi
   176b1:	e8 5a 12 00 00       	callq  18910 <std::sys_common::thread_info::ThreadInfo::with::{{closure}}>
   176b6:	48 89 d9             	mov    %rbx,%rcx
   176b9:	48 83 e1 fc          	and    $0xfffffffffffffffc,%rcx
   176bd:	48 89 04 24          	mov    %rax,(%rsp)
   176c1:	c6 44 24 10 00       	movb   $0x0,0x10(%rsp)
   176c6:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   176cb:	48 89 d8             	mov    %rbx,%rax
   176ce:	48 8d 4c 24 02       	lea    0x2(%rsp),%rcx
   176d3:	f0 49 0f b1 0c 24    	lock cmpxchg %rcx,(%r12)
   176d9:	0f 84 bc 00 00 00    	je     1779b <std::sync::once::Once::call_inner+0x1bb>
   176df:	48 89 c3             	mov    %rax,%rbx
   176e2:	48 8b 04 24          	mov    (%rsp),%rax
   176e6:	48 85 c0             	test   %rax,%rax
   176e9:	74 85                	je     17670 <std::sync::once::Once::call_inner+0x90>
   176eb:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   176f0:	0f 85 7a ff ff ff    	jne    17670 <std::sync::once::Once::call_inner+0x90>
   176f6:	4c 89 ef             	mov    %r13,%rdi
   176f9:	e8 92 21 ff ff       	callq  9890 <alloc::sync::Arc<T>::drop_slow>
   176fe:	e9 6d ff ff ff       	jmpq   17670 <std::sync::once::Once::call_inner+0x90>
   17703:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1770a:	00 00 00 
   1770d:	0f 1f 00             	nopl   (%rax)
   17710:	4c 89 f0             	mov    %r14,%rax
   17713:	41 83 be a0 ff ff ff 	cmpl   $0x1,-0x60(%r14)
   1771a:	01 
   1771b:	75 13                	jne    17730 <std::sync::once::Once::call_inner+0x150>
   1771d:	48 8d 80 a8 ff ff ff 	lea    -0x58(%rax),%rax
   17724:	e9 15 00 00 00       	jmpq   1773e <std::sync::once::Once::call_inner+0x15e>
   17729:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17730:	e8 db bd ff ff       	callq  13510 <std::thread::local::fast::Key<T>::try_initialize>
   17735:	48 85 c0             	test   %rax,%rax
   17738:	0f 84 b2 02 00 00    	je     179f0 <std::sync::once::Once::call_inner+0x410>
   1773e:	48 89 c7             	mov    %rax,%rdi
   17741:	e8 ca 11 00 00       	callq  18910 <std::sys_common::thread_info::ThreadInfo::with::{{closure}}>
   17746:	48 89 c3             	mov    %rax,%rbx
   17749:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1774e:	f0 83 68 28 01       	lock subl $0x1,0x28(%rax)
   17753:	74 30                	je     17785 <std::sync::once::Once::call_inner+0x1a5>
   17755:	48 83 c3 28          	add    $0x28,%rbx
   17759:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17760:	bf ca 00 00 00       	mov    $0xca,%edi
   17765:	48 89 de             	mov    %rbx,%rsi
   17768:	ba 80 00 00 00       	mov    $0x80,%edx
   1776d:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   17772:	45 31 c0             	xor    %r8d,%r8d
   17775:	31 c0                	xor    %eax,%eax
   17777:	ff d5                	callq  *%rbp
   17779:	b8 01 00 00 00       	mov    $0x1,%eax
   1777e:	f0 44 0f b1 3b       	lock cmpxchg %r15d,(%rbx)
   17783:	75 db                	jne    17760 <std::sync::once::Once::call_inner+0x180>
   17785:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1778a:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   1778f:	75 0a                	jne    1779b <std::sync::once::Once::call_inner+0x1bb>
   17791:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   17796:	e8 f5 20 ff ff       	callq  9890 <alloc::sync::Arc<T>::drop_slow>
   1779b:	8a 44 24 10          	mov    0x10(%rsp),%al
   1779f:	84 c0                	test   %al,%al
   177a1:	0f 84 69 ff ff ff    	je     17710 <std::sync::once::Once::call_inner+0x130>
   177a7:	48 8b 04 24          	mov    (%rsp),%rax
   177ab:	48 85 c0             	test   %rax,%rax
   177ae:	0f 84 6c fe ff ff    	je     17620 <std::sync::once::Once::call_inner+0x40>
   177b4:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   177b9:	0f 85 61 fe ff ff    	jne    17620 <std::sync::once::Once::call_inner+0x40>
   177bf:	4c 89 ef             	mov    %r13,%rdi
   177c2:	e8 c9 20 ff ff       	callq  9890 <alloc::sync::Arc<T>::drop_slow>
   177c7:	e9 54 fe ff ff       	jmpq   17620 <std::sync::once::Once::call_inner+0x40>
   177cc:	31 db                	xor    %ebx,%ebx
   177ce:	b9 02 00 00 00       	mov    $0x2,%ecx
   177d3:	4c 8b 3d fe e4 02 00 	mov    0x2e4fe(%rip),%r15        # 45cd8 <syscall@GLIBC_2.2.5>
   177da:	4d 85 f6             	test   %r14,%r14
   177dd:	0f 84 bd 00 00 00    	je     178a0 <std::sync::once::Once::call_inner+0x2c0>
   177e3:	49 83 fe 03          	cmp    $0x3,%r14
   177e7:	0f 84 d9 01 00 00    	je     179c6 <std::sync::once::Once::call_inner+0x3e6>
   177ed:	49 83 fe 01          	cmp    $0x1,%r14
   177f1:	0f 84 2e 02 00 00    	je     17a25 <std::sync::once::Once::call_inner+0x445>
   177f7:	44 89 f0             	mov    %r14d,%eax
   177fa:	83 e0 03             	and    $0x3,%eax
   177fd:	83 f8 02             	cmp    $0x2,%eax
   17800:	0f 84 19 00 00 00    	je     1781f <std::sync::once::Once::call_inner+0x23f>
   17806:	e9 00 02 00 00       	jmpq   17a0b <std::sync::once::Once::call_inner+0x42b>
   1780b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   17810:	44 89 f0             	mov    %r14d,%eax
   17813:	83 e0 03             	and    $0x3,%eax
   17816:	83 f8 02             	cmp    $0x2,%eax
   17819:	0f 85 c1 00 00 00    	jne    178e0 <std::sync::once::Once::call_inner+0x300>
   1781f:	66 66 66 64 48 8b 04 	data16 data16 data16 mov %fs:0x0,%rax
   17826:	25 00 00 00 00 
   1782b:	49 89 c5             	mov    %rax,%r13
   1782e:	83 b8 a0 ff ff ff 01 	cmpl   $0x1,-0x60(%rax)
   17835:	75 09                	jne    17840 <std::sync::once::Once::call_inner+0x260>
   17837:	48 8d 80 a8 ff ff ff 	lea    -0x58(%rax),%rax
   1783e:	eb 0e                	jmp    1784e <std::sync::once::Once::call_inner+0x26e>
   17840:	e8 cb bc ff ff       	callq  13510 <std::thread::local::fast::Key<T>::try_initialize>
   17845:	48 85 c0             	test   %rax,%rax
   17848:	0f 84 87 01 00 00    	je     179d5 <std::sync::once::Once::call_inner+0x3f5>
   1784e:	48 89 c7             	mov    %rax,%rdi
   17851:	e8 ba 10 00 00       	callq  18910 <std::sys_common::thread_info::ThreadInfo::with::{{closure}}>
   17856:	4c 89 f1             	mov    %r14,%rcx
   17859:	48 83 e1 fc          	and    $0xfffffffffffffffc,%rcx
   1785d:	48 89 04 24          	mov    %rax,(%rsp)
   17861:	c6 44 24 10 00       	movb   $0x0,0x10(%rsp)
   17866:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   1786b:	4c 89 f0             	mov    %r14,%rax
   1786e:	48 8d 4c 24 02       	lea    0x2(%rsp),%rcx
   17873:	f0 49 0f b1 0c 24    	lock cmpxchg %rcx,(%r12)
   17879:	74 3b                	je     178b6 <std::sync::once::Once::call_inner+0x2d6>
   1787b:	49 89 c6             	mov    %rax,%r14
   1787e:	48 8b 04 24          	mov    (%rsp),%rax
   17882:	48 85 c0             	test   %rax,%rax
   17885:	74 89                	je     17810 <std::sync::once::Once::call_inner+0x230>
   17887:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   1788c:	75 82                	jne    17810 <std::sync::once::Once::call_inner+0x230>
   1788e:	48 89 e7             	mov    %rsp,%rdi
   17891:	e8 fa 1f ff ff       	callq  9890 <alloc::sync::Arc<T>::drop_slow>
   17896:	e9 75 ff ff ff       	jmpq   17810 <std::sync::once::Once::call_inner+0x230>
   1789b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   178a0:	31 c0                	xor    %eax,%eax
   178a2:	f0 49 0f b1 0c 24    	lock cmpxchg %rcx,(%r12)
   178a8:	49 89 c6             	mov    %rax,%r14
   178ab:	0f 85 29 ff ff ff    	jne    177da <std::sync::once::Once::call_inner+0x1fa>
   178b1:	e9 cd 00 00 00       	jmpq   17983 <std::sync::once::Once::call_inner+0x3a3>
   178b6:	8a 44 24 10          	mov    0x10(%rsp),%al
   178ba:	84 c0                	test   %al,%al
   178bc:	4c 8d 74 24 18       	lea    0x18(%rsp),%r14
   178c1:	74 35                	je     178f8 <std::sync::once::Once::call_inner+0x318>
   178c3:	48 8b 04 24          	mov    (%rsp),%rax
   178c7:	48 85 c0             	test   %rax,%rax
   178ca:	74 14                	je     178e0 <std::sync::once::Once::call_inner+0x300>
   178cc:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   178d1:	75 0d                	jne    178e0 <std::sync::once::Once::call_inner+0x300>
   178d3:	48 89 e7             	mov    %rsp,%rdi
   178d6:	e8 b5 1f ff ff       	callq  9890 <alloc::sync::Arc<T>::drop_slow>
   178db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   178e0:	4d 8b 34 24          	mov    (%r12),%r14
   178e4:	b9 02 00 00 00       	mov    $0x2,%ecx
   178e9:	e9 ec fe ff ff       	jmpq   177da <std::sync::once::Once::call_inner+0x1fa>
   178ee:	66 90                	xchg   %ax,%ax
   178f0:	8a 44 24 10          	mov    0x10(%rsp),%al
   178f4:	84 c0                	test   %al,%al
   178f6:	75 cb                	jne    178c3 <std::sync::once::Once::call_inner+0x2e3>
   178f8:	4c 89 e8             	mov    %r13,%rax
   178fb:	41 83 bd a0 ff ff ff 	cmpl   $0x1,-0x60(%r13)
   17902:	01 
   17903:	75 0b                	jne    17910 <std::sync::once::Once::call_inner+0x330>
   17905:	48 8d 80 a8 ff ff ff 	lea    -0x58(%rax),%rax
   1790c:	eb 10                	jmp    1791e <std::sync::once::Once::call_inner+0x33e>
   1790e:	66 90                	xchg   %ax,%ax
   17910:	e8 fb bb ff ff       	callq  13510 <std::thread::local::fast::Key<T>::try_initialize>
   17915:	48 85 c0             	test   %rax,%rax
   17918:	0f 84 d2 00 00 00    	je     179f0 <std::sync::once::Once::call_inner+0x410>
   1791e:	48 89 c7             	mov    %rax,%rdi
   17921:	e8 ea 0f 00 00       	callq  18910 <std::sys_common::thread_info::ThreadInfo::with::{{closure}}>
   17926:	48 89 c5             	mov    %rax,%rbp
   17929:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1792e:	f0 83 68 28 01       	lock subl $0x1,0x28(%rax)
   17933:	74 31                	je     17966 <std::sync::once::Once::call_inner+0x386>
   17935:	48 83 c5 28          	add    $0x28,%rbp
   17939:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17940:	bf ca 00 00 00       	mov    $0xca,%edi
   17945:	48 89 ee             	mov    %rbp,%rsi
   17948:	ba 80 00 00 00       	mov    $0x80,%edx
   1794d:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   17952:	45 31 c0             	xor    %r8d,%r8d
   17955:	31 c0                	xor    %eax,%eax
   17957:	41 ff d7             	callq  *%r15
   1795a:	b8 01 00 00 00       	mov    $0x1,%eax
   1795f:	f0 0f b1 5d 00       	lock cmpxchg %ebx,0x0(%rbp)
   17964:	75 da                	jne    17940 <std::sync::once::Once::call_inner+0x360>
   17966:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1796b:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   17970:	0f 85 7a ff ff ff    	jne    178f0 <std::sync::once::Once::call_inner+0x310>
   17976:	4c 89 f7             	mov    %r14,%rdi
   17979:	e8 12 1f ff ff       	callq  9890 <alloc::sync::Arc<T>::drop_slow>
   1797e:	e9 6d ff ff ff       	jmpq   178f0 <std::sync::once::Once::call_inner+0x310>
   17983:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   17988:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
   1798f:	00 00 
   17991:	48 83 fb 01          	cmp    $0x1,%rbx
   17995:	0f 94 44 24 08       	sete   0x8(%rsp)
   1799a:	48 c7 04 24 03 00 00 	movq   $0x3,(%rsp)
   179a1:	00 
   179a2:	48 89 e6             	mov    %rsp,%rsi
   179a5:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
   179aa:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   179af:	ff 50 18             	callq  *0x18(%rax)
   179b2:	48 8b 04 24          	mov    (%rsp),%rax
   179b6:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   179bb:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   179c0:	ff 15 ba e0 02 00    	callq  *0x2e0ba(%rip)        # 45a80 <_GLOBAL_OFFSET_TABLE_+0xf0>
   179c6:	48 83 c4 38          	add    $0x38,%rsp
   179ca:	5b                   	pop    %rbx
   179cb:	41 5c                	pop    %r12
   179cd:	41 5d                	pop    %r13
   179cf:	41 5e                	pop    %r14
   179d1:	41 5f                	pop    %r15
   179d3:	5d                   	pop    %rbp
   179d4:	c3                   	retq   
   179d5:	48 8d 3d d7 fe 01 00 	lea    0x1fed7(%rip),%rdi        # 378b3 <str.6+0x593>
   179dc:	48 8d 15 25 c1 02 00 	lea    0x2c125(%rip),%rdx        # 43b08 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x5b0>
   179e3:	be 5e 00 00 00       	mov    $0x5e,%esi
   179e8:	ff 15 ba e3 02 00    	callq  *0x2e3ba(%rip)        # 45da8 <_GLOBAL_OFFSET_TABLE_+0x418>
   179ee:	0f 0b                	ud2    
   179f0:	48 8d 3d bc fe 01 00 	lea    0x1febc(%rip),%rdi        # 378b3 <str.6+0x593>
   179f7:	48 8d 15 0a c1 02 00 	lea    0x2c10a(%rip),%rdx        # 43b08 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x5b0>
   179fe:	be 5e 00 00 00       	mov    $0x5e,%esi
   17a03:	ff 15 9f e3 02 00    	callq  *0x2e39f(%rip)        # 45da8 <_GLOBAL_OFFSET_TABLE_+0x418>
   17a09:	0f 0b                	ud2    
   17a0b:	48 8d 3d ad 03 02 00 	lea    0x203ad(%rip),%rdi        # 37dbf <str.6+0xa9f>
   17a12:	48 8d 15 77 c5 02 00 	lea    0x2c577(%rip),%rdx        # 43f90 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xa38>
   17a19:	be 39 00 00 00       	mov    $0x39,%esi
   17a1e:	e8 ed 29 00 00       	callq  1a410 <std::panicking::begin_panic>
   17a23:	0f 0b                	ud2    
   17a25:	48 8d 3d cc 03 02 00 	lea    0x203cc(%rip),%rdi        # 37df8 <str.6+0xad8>
   17a2c:	48 8d 15 75 c5 02 00 	lea    0x2c575(%rip),%rdx        # 43fa8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xa50>
   17a33:	be 2a 00 00 00       	mov    $0x2a,%esi
   17a38:	e8 d3 29 00 00       	callq  1a410 <std::panicking::begin_panic>
   17a3d:	0f 0b                	ud2    
   17a3f:	eb 11                	jmp    17a52 <std::sync::once::Once::call_inner+0x472>
   17a41:	48 89 c3             	mov    %rax,%rbx
   17a44:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   17a49:	e8 d2 eb fe ff       	callq  6620 <core::ptr::drop_in_place>
   17a4e:	eb 0d                	jmp    17a5d <std::sync::once::Once::call_inner+0x47d>
   17a50:	eb 00                	jmp    17a52 <std::sync::once::Once::call_inner+0x472>
   17a52:	48 89 c3             	mov    %rax,%rbx
   17a55:	48 89 e7             	mov    %rsp,%rdi
   17a58:	e8 d3 f8 fe ff       	callq  7330 <core::ptr::drop_in_place>
   17a5d:	48 89 df             	mov    %rbx,%rdi
   17a60:	e8 eb d5 fe ff       	callq  5050 <_Unwind_Resume@plt>
   17a65:	0f 0b                	ud2    
   17a67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   17a6e:	00 00 

0000000000017a70 <<std::sync::once::WaiterQueue as core::ops::drop::Drop>::drop>:
   17a70:	41 57                	push   %r15
   17a72:	41 56                	push   %r14
   17a74:	53                   	push   %rbx
   17a75:	48 83 ec 70          	sub    $0x70,%rsp
   17a79:	48 8b 0f             	mov    (%rdi),%rcx
   17a7c:	48 8b 47 08          	mov    0x8(%rdi),%rax
   17a80:	48 87 01             	xchg   %rax,(%rcx)
   17a83:	89 c1                	mov    %eax,%ecx
   17a85:	83 e1 03             	and    $0x3,%ecx
   17a88:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   17a8d:	48 83 f9 02          	cmp    $0x2,%rcx
   17a91:	0f 85 bc 00 00 00    	jne    17b53 <<std::sync::once::WaiterQueue as core::ops::drop::Drop>::drop+0xe3>
   17a97:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
   17a9b:	0f 84 8d 00 00 00    	je     17b2e <<std::sync::once::WaiterQueue as core::ops::drop::Drop>::drop+0xbe>
   17aa1:	4c 8b 35 30 e2 02 00 	mov    0x2e230(%rip),%r14        # 45cd8 <syscall@GLIBC_2.2.5>
   17aa8:	4c 8d 7c 24 20       	lea    0x20(%rsp),%r15
   17aad:	eb 09                	jmp    17ab8 <<std::sync::once::WaiterQueue as core::ops::drop::Drop>::drop+0x48>
   17aaf:	90                   	nop
   17ab0:	48 89 d8             	mov    %rbx,%rax
   17ab3:	48 85 db             	test   %rbx,%rbx
   17ab6:	74 76                	je     17b2e <<std::sync::once::WaiterQueue as core::ops::drop::Drop>::drop+0xbe>
   17ab8:	48 8b 58 08          	mov    0x8(%rax),%rbx
   17abc:	48 8b 08             	mov    (%rax),%rcx
   17abf:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   17ac6:	48 85 c9             	test   %rcx,%rcx
   17ac9:	74 6d                	je     17b38 <<std::sync::once::WaiterQueue as core::ops::drop::Drop>::drop+0xc8>
   17acb:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   17ad0:	c6 40 10 01          	movb   $0x1,0x10(%rax)
   17ad4:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   17ad9:	b8 01 00 00 00       	mov    $0x1,%eax
   17ade:	87 46 28             	xchg   %eax,0x28(%rsi)
   17ae1:	83 f8 ff             	cmp    $0xffffffff,%eax
   17ae4:	74 1a                	je     17b00 <<std::sync::once::WaiterQueue as core::ops::drop::Drop>::drop+0x90>
   17ae6:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   17aeb:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   17af0:	75 be                	jne    17ab0 <<std::sync::once::WaiterQueue as core::ops::drop::Drop>::drop+0x40>
   17af2:	eb 30                	jmp    17b24 <<std::sync::once::WaiterQueue as core::ops::drop::Drop>::drop+0xb4>
   17af4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   17afb:	00 00 00 
   17afe:	66 90                	xchg   %ax,%ax
   17b00:	48 83 c6 28          	add    $0x28,%rsi
   17b04:	bf ca 00 00 00       	mov    $0xca,%edi
   17b09:	ba 81 00 00 00       	mov    $0x81,%edx
   17b0e:	b9 01 00 00 00       	mov    $0x1,%ecx
   17b13:	31 c0                	xor    %eax,%eax
   17b15:	41 ff d6             	callq  *%r14
   17b18:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   17b1d:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   17b22:	75 8c                	jne    17ab0 <<std::sync::once::WaiterQueue as core::ops::drop::Drop>::drop+0x40>
   17b24:	4c 89 ff             	mov    %r15,%rdi
   17b27:	e8 64 1d ff ff       	callq  9890 <alloc::sync::Arc<T>::drop_slow>
   17b2c:	eb 82                	jmp    17ab0 <<std::sync::once::WaiterQueue as core::ops::drop::Drop>::drop+0x40>
   17b2e:	48 83 c4 70          	add    $0x70,%rsp
   17b32:	5b                   	pop    %rbx
   17b33:	41 5e                	pop    %r14
   17b35:	41 5f                	pop    %r15
   17b37:	c3                   	retq   
   17b38:	48 8d 3d bb fa 01 00 	lea    0x1fabb(%rip),%rdi        # 375fa <str.6+0x2da>
   17b3f:	48 8d 15 92 c4 02 00 	lea    0x2c492(%rip),%rdx        # 43fd8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xa80>
   17b46:	be 2b 00 00 00       	mov    $0x2b,%esi
   17b4b:	ff 15 8f e3 02 00    	callq  *0x2e38f(%rip)        # 45ee0 <_GLOBAL_OFFSET_TABLE_+0x550>
   17b51:	0f 0b                	ud2    
   17b53:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   17b58:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   17b5d:	48 8d 05 9c fe 01 00 	lea    0x1fe9c(%rip),%rax        # 37a00 <str.6+0x6e0>
   17b64:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   17b69:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   17b6e:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   17b73:	48 8d 05 f6 da fe ff 	lea    -0x1250a(%rip),%rax        # 5670 <<&T as core::fmt::Debug>::fmt>
   17b7a:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   17b7f:	48 8d 4c 24 18       	lea    0x18(%rsp),%rcx
   17b84:	48 89 4c 24 60       	mov    %rcx,0x60(%rsp)
   17b89:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   17b8e:	48 8d 05 2b bb 02 00 	lea    0x2bb2b(%rip),%rax        # 436c0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x168>
   17b95:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   17b9a:	48 c7 44 24 28 03 00 	movq   $0x3,0x28(%rsp)
   17ba1:	00 00 
   17ba3:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   17baa:	00 00 
   17bac:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
   17bb1:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   17bb6:	48 c7 44 24 48 02 00 	movq   $0x2,0x48(%rsp)
   17bbd:	00 00 
   17bbf:	48 8d 35 fa c3 02 00 	lea    0x2c3fa(%rip),%rsi        # 43fc0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xa68>
   17bc6:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   17bcb:	ff 15 0f e4 02 00    	callq  *0x2e40f(%rip)        # 45fe0 <_GLOBAL_OFFSET_TABLE_+0x650>
   17bd1:	0f 0b                	ud2    
   17bd3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   17bda:	00 00 00 
   17bdd:	0f 1f 00             	nopl   (%rax)

0000000000017be0 <std::time::SystemTime::now>:
   17be0:	53                   	push   %rbx
   17be1:	48 83 ec 20          	sub    $0x20,%rsp
   17be5:	0f 57 c0             	xorps  %xmm0,%xmm0
   17be8:	0f 29 04 24          	movaps %xmm0,(%rsp)
   17bec:	48 89 e6             	mov    %rsp,%rsi
   17bef:	31 ff                	xor    %edi,%edi
   17bf1:	ff 15 d1 de 02 00    	callq  *0x2ded1(%rip)        # 45ac8 <clock_gettime@GLIBC_2.17>
   17bf7:	83 f8 ff             	cmp    $0xffffffff,%eax
   17bfa:	74 0f                	je     17c0b <std::time::SystemTime::now+0x2b>
   17bfc:	48 8b 04 24          	mov    (%rsp),%rax
   17c00:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   17c05:	48 83 c4 20          	add    $0x20,%rsp
   17c09:	5b                   	pop    %rbx
   17c0a:	c3                   	retq   
   17c0b:	ff 15 0f de 02 00    	callq  *0x2de0f(%rip)        # 45a20 <__errno_location@GLIBC_2.2.5>
   17c11:	8b 00                	mov    (%rax),%eax
   17c13:	48 c1 e0 20          	shl    $0x20,%rax
   17c17:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   17c1c:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   17c23:	00 00 
   17c25:	48 8d 3d f9 f9 01 00 	lea    0x1f9f9(%rip),%rdi        # 37625 <str.6+0x305>
   17c2c:	48 8d 0d 0d bc 02 00 	lea    0x2bc0d(%rip),%rcx        # 43840 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2e8>
   17c33:	4c 8d 05 4e ca 02 00 	lea    0x2ca4e(%rip),%r8        # 44688 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1130>
   17c3a:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   17c3f:	be 2b 00 00 00       	mov    $0x2b,%esi
   17c44:	ff 15 9e df 02 00    	callq  *0x2df9e(%rip)        # 45be8 <_GLOBAL_OFFSET_TABLE_+0x258>
   17c4a:	0f 0b                	ud2    
   17c4c:	48 89 c3             	mov    %rax,%rbx
   17c4f:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   17c54:	e8 87 f2 fe ff       	callq  6ee0 <core::ptr::drop_in_place>
   17c59:	48 89 df             	mov    %rbx,%rdi
   17c5c:	e8 ef d3 fe ff       	callq  5050 <_Unwind_Resume@plt>
   17c61:	0f 0b                	ud2    
   17c63:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   17c6a:	00 00 00 
   17c6d:	0f 1f 00             	nopl   (%rax)

0000000000017c70 <std::time::SystemTime::duration_since>:
   17c70:	53                   	push   %rbx
   17c71:	48 83 ec 30          	sub    $0x30,%rsp
   17c75:	48 89 fb             	mov    %rdi,%rbx
   17c78:	48 89 14 24          	mov    %rdx,(%rsp)
   17c7c:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   17c81:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   17c86:	48 89 e2             	mov    %rsp,%rdx
   17c89:	e8 d2 44 00 00       	callq  1c160 <std::sys::unix::time::Timespec::sub_timespec>
   17c8e:	0f 28 44 24 10       	movaps 0x10(%rsp),%xmm0
   17c93:	8b 44 24 20          	mov    0x20(%rsp),%eax
   17c97:	89 43 10             	mov    %eax,0x10(%rbx)
   17c9a:	0f 11 03             	movups %xmm0,(%rbx)
   17c9d:	48 89 d8             	mov    %rbx,%rax
   17ca0:	48 83 c4 30          	add    $0x30,%rsp
   17ca4:	5b                   	pop    %rbx
   17ca5:	c3                   	retq   
   17ca6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   17cad:	00 00 00 

0000000000017cb0 <std::lazy::SyncOnceCell<T>::initialize>:
   17cb0:	48 83 ec 28          	sub    $0x28,%rsp
   17cb4:	48 8d 05 b5 e3 02 00 	lea    0x2e3b5(%rip),%rax        # 46070 <std::io::stdio::stdout::INSTANCE+0x8>
   17cbb:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   17cc0:	48 8b 05 a1 e3 02 00 	mov    0x2e3a1(%rip),%rax        # 46068 <std::io::stdio::stdout::INSTANCE>
   17cc7:	48 83 f8 03          	cmp    $0x3,%rax
   17ccb:	75 05                	jne    17cd2 <std::lazy::SyncOnceCell<T>::initialize+0x22>
   17ccd:	48 83 c4 28          	add    $0x28,%rsp
   17cd1:	c3                   	retq   
   17cd2:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   17cd7:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   17cdc:	48 89 e0             	mov    %rsp,%rax
   17cdf:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   17ce4:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
   17ce9:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   17cee:	48 8d 3d 73 e3 02 00 	lea    0x2e373(%rip),%rdi        # 46068 <std::io::stdio::stdout::INSTANCE>
   17cf5:	48 8d 0d 54 c2 02 00 	lea    0x2c254(%rip),%rcx        # 43f50 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x9f8>
   17cfc:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   17d01:	be 01 00 00 00       	mov    $0x1,%esi
   17d06:	ff 15 dc e1 02 00    	callq  *0x2e1dc(%rip)        # 45ee8 <_GLOBAL_OFFSET_TABLE_+0x558>
   17d0c:	48 83 c4 28          	add    $0x28,%rsp
   17d10:	c3                   	retq   
   17d11:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   17d18:	00 00 00 
   17d1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000017d20 <<std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt>:
   17d20:	41 57                	push   %r15
   17d22:	41 56                	push   %r14
   17d24:	41 55                	push   %r13
   17d26:	41 54                	push   %r12
   17d28:	53                   	push   %rbx
   17d29:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
   17d30:	49 89 f6             	mov    %rsi,%r14
   17d33:	8a 1f                	mov    (%rdi),%bl
   17d35:	88 5c 24 0d          	mov    %bl,0xd(%rsp)
   17d39:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   17d3e:	ff 15 34 df 02 00    	callq  *0x2df34(%rip)        # 45c78 <_GLOBAL_OFFSET_TABLE_+0x2e8>
   17d44:	83 7c 24 10 01       	cmpl   $0x1,0x10(%rsp)
   17d49:	75 13                	jne    17d5e <<std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt+0x3e>
   17d4b:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   17d50:	e8 fb e2 fe ff       	callq  6050 <core::ptr::drop_in_place>
   17d55:	45 31 ed             	xor    %r13d,%r13d
   17d58:	8a 5c 24 0d          	mov    0xd(%rsp),%bl
   17d5c:	eb 12                	jmp    17d70 <<std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt+0x50>
   17d5e:	4c 8b 6c 24 18       	mov    0x18(%rsp),%r13
   17d63:	0f 10 44 24 20       	movups 0x20(%rsp),%xmm0
   17d68:	0f 29 84 24 a0 00 00 	movaps %xmm0,0xa0(%rsp)
   17d6f:	00 
   17d70:	88 5c 24 58          	mov    %bl,0x58(%rsp)
   17d74:	4c 89 6c 24 40       	mov    %r13,0x40(%rsp)
   17d79:	0f 28 84 24 a0 00 00 	movaps 0xa0(%rsp),%xmm0
   17d80:	00 
   17d81:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
   17d86:	48 8d 05 7b c2 02 00 	lea    0x2c27b(%rip),%rax        # 44008 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xab0>
   17d8d:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   17d92:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
   17d99:	00 00 
   17d9b:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   17da2:	00 00 
   17da4:	4c 8d 25 ad f4 01 00 	lea    0x1f4ad(%rip),%r12        # 37258 <_fini+0x21d4>
   17dab:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
   17db0:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   17db7:	00 00 
   17db9:	4c 8d 7c 24 10       	lea    0x10(%rsp),%r15
   17dbe:	4c 89 f7             	mov    %r14,%rdi
   17dc1:	4c 89 fe             	mov    %r15,%rsi
   17dc4:	ff 15 c6 e0 02 00    	callq  *0x2e0c6(%rip)        # 45e90 <_GLOBAL_OFFSET_TABLE_+0x500>
   17dca:	84 c0                	test   %al,%al
   17dcc:	0f 85 aa 00 00 00    	jne    17e7c <<std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt+0x15c>
   17dd2:	4c 89 74 24 78       	mov    %r14,0x78(%rsp)
   17dd7:	48 c7 84 24 80 00 00 	movq   $0x0,0x80(%rsp)
   17dde:	00 00 00 00 00 
   17de3:	88 9c 24 98 00 00 00 	mov    %bl,0x98(%rsp)
   17dea:	48 8d 44 24 40       	lea    0x40(%rsp),%rax
   17def:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
   17df6:	00 
   17df7:	48 8d 05 1a c2 02 00 	lea    0x2c21a(%rip),%rax        # 44018 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xac0>
   17dfe:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
   17e05:	00 
   17e06:	48 c7 44 24 60 00 00 	movq   $0x0,0x60(%rsp)
   17e0d:	00 00 
   17e0f:	c6 44 24 0e 00       	movb   $0x0,0xe(%rsp)
   17e14:	84 db                	test   %bl,%bl
   17e16:	0f 95 44 24 0f       	setne  0xf(%rsp)
   17e1b:	48 8d 44 24 0d       	lea    0xd(%rsp),%rax
   17e20:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   17e25:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
   17e2a:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   17e2f:	48 8d 44 24 0f       	lea    0xf(%rsp),%rax
   17e34:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   17e39:	48 8d 44 24 78       	lea    0x78(%rsp),%rax
   17e3e:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   17e43:	48 8d 44 24 0e       	lea    0xe(%rsp),%rax
   17e48:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   17e4d:	4c 89 7c 24 68       	mov    %r15,0x68(%rsp)
   17e52:	48 8d 05 87 c5 02 00 	lea    0x2c587(%rip),%rax        # 443e0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xe88>
   17e59:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   17e5e:	48 8d 3d ab 46 00 00 	lea    0x46ab(%rip),%rdi        # 1c510 <std::backtrace_rs::backtrace::libunwind::trace::trace_fn>
   17e65:	48 8d 74 24 68       	lea    0x68(%rsp),%rsi
   17e6a:	ff 15 a8 db 02 00    	callq  *0x2dba8(%rip)        # 45a18 <_Unwind_Backtrace@GCC_3.3>
   17e70:	80 7c 24 0e 00       	cmpb   $0x0,0xe(%rsp)
   17e75:	74 37                	je     17eae <<std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt+0x18e>
   17e77:	4c 8b 6c 24 40       	mov    0x40(%rsp),%r13
   17e7c:	4d 85 ed             	test   %r13,%r13
   17e7f:	74 18                	je     17e99 <<std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt+0x179>
   17e81:	48 8b 74 24 48       	mov    0x48(%rsp),%rsi
   17e86:	48 85 f6             	test   %rsi,%rsi
   17e89:	74 0e                	je     17e99 <<std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt+0x179>
   17e8b:	ba 01 00 00 00       	mov    $0x1,%edx
   17e90:	4c 89 ef             	mov    %r13,%rdi
   17e93:	ff 15 67 dd 02 00    	callq  *0x2dd67(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   17e99:	b1 01                	mov    $0x1,%cl
   17e9b:	89 c8                	mov    %ecx,%eax
   17e9d:	48 81 c4 b0 00 00 00 	add    $0xb0,%rsp
   17ea4:	5b                   	pop    %rbx
   17ea5:	41 5c                	pop    %r12
   17ea7:	41 5d                	pop    %r13
   17ea9:	41 5e                	pop    %r14
   17eab:	41 5f                	pop    %r15
   17ead:	c3                   	retq   
   17eae:	80 7c 24 0d 00       	cmpb   $0x0,0xd(%rsp)
   17eb3:	75 3e                	jne    17ef3 <<std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt+0x1d3>
   17eb5:	48 8d 05 84 c1 02 00 	lea    0x2c184(%rip),%rax        # 44040 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xae8>
   17ebc:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   17ec1:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
   17ec8:	00 00 
   17eca:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   17ed1:	00 00 
   17ed3:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
   17ed8:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   17edf:	00 00 
   17ee1:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   17ee6:	4c 89 f7             	mov    %r14,%rdi
   17ee9:	ff 15 a1 df 02 00    	callq  *0x2dfa1(%rip)        # 45e90 <_GLOBAL_OFFSET_TABLE_+0x500>
   17eef:	84 c0                	test   %al,%al
   17ef1:	75 84                	jne    17e77 <<std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt+0x157>
   17ef3:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   17ef8:	48 85 ff             	test   %rdi,%rdi
   17efb:	74 15                	je     17f12 <<std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt+0x1f2>
   17efd:	48 8b 74 24 48       	mov    0x48(%rsp),%rsi
   17f02:	48 85 f6             	test   %rsi,%rsi
   17f05:	74 0b                	je     17f12 <<std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt+0x1f2>
   17f07:	ba 01 00 00 00       	mov    $0x1,%edx
   17f0c:	ff 15 ee dc 02 00    	callq  *0x2dcee(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   17f12:	31 c9                	xor    %ecx,%ecx
   17f14:	eb 85                	jmp    17e9b <<std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt+0x17b>
   17f16:	48 89 c3             	mov    %rax,%rbx
   17f19:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   17f1e:	e8 cd eb fe ff       	callq  6af0 <core::ptr::drop_in_place>
   17f23:	48 89 df             	mov    %rbx,%rdi
   17f26:	e8 25 d1 fe ff       	callq  5050 <_Unwind_Resume@plt>
   17f2b:	0f 0b                	ud2    
   17f2d:	0f 1f 00             	nopl   (%rax)

0000000000017f30 <std::sys_common::backtrace::_print_fmt::{{closure}}>:
   17f30:	48 83 ec 18          	sub    $0x18,%rsp
   17f34:	48 89 f0             	mov    %rsi,%rax
   17f37:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
   17f3b:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   17f40:	0f 10 02             	movups (%rdx),%xmm0
   17f43:	0f 29 04 24          	movaps %xmm0,(%rsp)
   17f47:	48 8b 0f             	mov    (%rdi),%rcx
   17f4a:	48 85 c9             	test   %rcx,%rcx
   17f4d:	48 0f 45 cf          	cmovne %rdi,%rcx
   17f51:	8b 57 18             	mov    0x18(%rdi),%edx
   17f54:	48 89 e6             	mov    %rsp,%rsi
   17f57:	48 89 c7             	mov    %rax,%rdi
   17f5a:	e8 d1 03 00 00       	callq  18330 <std::sys_common::backtrace::output_filename>
   17f5f:	48 83 c4 18          	add    $0x18,%rsp
   17f63:	c3                   	retq   
   17f64:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   17f6b:	00 00 00 
   17f6e:	66 90                	xchg   %ax,%ax

0000000000017f70 <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}>:
   17f70:	41 57                	push   %r15
   17f72:	41 56                	push   %r14
   17f74:	41 54                	push   %r12
   17f76:	53                   	push   %rbx
   17f77:	48 81 ec c8 00 00 00 	sub    $0xc8,%rsp
   17f7e:	49 89 f6             	mov    %rsi,%r14
   17f81:	48 89 fb             	mov    %rdi,%rbx
   17f84:	48 8b 07             	mov    (%rdi),%rax
   17f87:	c6 00 01             	movb   $0x1,(%rax)
   17f8a:	48 8b 47 08          	mov    0x8(%rdi),%rax
   17f8e:	80 38 00             	cmpb   $0x0,(%rax)
   17f91:	0f 85 f9 00 00 00    	jne    18090 <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}+0x120>
   17f97:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   17f9c:	4c 89 f6             	mov    %r14,%rsi
   17f9f:	e8 1c 2d 00 00       	callq  1acc0 <std::backtrace_rs::symbolize::Symbol::name>
   17fa4:	83 7c 24 30 04       	cmpl   $0x4,0x30(%rsp)
   17fa9:	0f 84 e1 00 00 00    	je     18090 <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}+0x120>
   17faf:	0f 10 44 24 20       	movups 0x20(%rsp),%xmm0
   17fb4:	0f 10 4c 24 30       	movups 0x30(%rsp),%xmm1
   17fb9:	0f 10 54 24 40       	movups 0x40(%rsp),%xmm2
   17fbe:	0f 10 5c 24 50       	movups 0x50(%rsp),%xmm3
   17fc3:	0f 29 8c 24 80 00 00 	movaps %xmm1,0x80(%rsp)
   17fca:	00 
   17fcb:	0f 10 4c 24 60       	movups 0x60(%rsp),%xmm1
   17fd0:	0f 29 8c 24 b0 00 00 	movaps %xmm1,0xb0(%rsp)
   17fd7:	00 
   17fd8:	0f 29 9c 24 a0 00 00 	movaps %xmm3,0xa0(%rsp)
   17fdf:	00 
   17fe0:	0f 29 94 24 90 00 00 	movaps %xmm2,0x90(%rsp)
   17fe7:	00 
   17fe8:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
   17fed:	83 bc 24 80 00 00 00 	cmpl   $0x3,0x80(%rsp)
   17ff4:	03 
   17ff5:	74 20                	je     18017 <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}+0xa7>
   17ff7:	48 8d bc 24 80 00 00 	lea    0x80(%rsp),%rdi
   17ffe:	00 
   17fff:	ff 15 cb dd 02 00    	callq  *0x2ddcb(%rip)        # 45dd0 <_GLOBAL_OFFSET_TABLE_+0x440>
   18005:	48 85 c0             	test   %rax,%rax
   18008:	74 0d                	je     18017 <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}+0xa7>
   1800a:	49 89 c7             	mov    %rax,%r15
   1800d:	49 89 d4             	mov    %rdx,%r12
   18010:	4d 85 ff             	test   %r15,%r15
   18013:	75 2d                	jne    18042 <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}+0xd2>
   18015:	eb 79                	jmp    18090 <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}+0x120>
   18017:	48 8b 74 24 70       	mov    0x70(%rsp),%rsi
   1801c:	48 8b 54 24 78       	mov    0x78(%rsp),%rdx
   18021:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   18026:	ff 15 a4 db 02 00    	callq  *0x2dba4(%rip)        # 45bd0 <_GLOBAL_OFFSET_TABLE_+0x240>
   1802c:	83 7c 24 08 01       	cmpl   $0x1,0x8(%rsp)
   18031:	74 5d                	je     18090 <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}+0x120>
   18033:	4c 8b 7c 24 10       	mov    0x10(%rsp),%r15
   18038:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
   1803d:	4d 85 ff             	test   %r15,%r15
   18040:	74 4e                	je     18090 <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}+0x120>
   18042:	48 8d 15 8a fe 01 00 	lea    0x1fe8a(%rip),%rdx        # 37ed3 <str.6+0xbb3>
   18049:	b9 1c 00 00 00       	mov    $0x1c,%ecx
   1804e:	4c 89 ff             	mov    %r15,%rdi
   18051:	4c 89 e6             	mov    %r12,%rsi
   18054:	e8 37 f4 fe ff       	callq  7490 <core::str::<impl str>::contains>
   18059:	84 c0                	test   %al,%al
   1805b:	74 0c                	je     18069 <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}+0xf9>
   1805d:	48 8b 43 10          	mov    0x10(%rbx),%rax
   18061:	c6 00 01             	movb   $0x1,(%rax)
   18064:	e9 11 01 00 00       	jmpq   1817a <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}+0x20a>
   18069:	48 8d 15 7f fe 01 00 	lea    0x1fe7f(%rip),%rdx        # 37eef <str.6+0xbcf>
   18070:	b9 1a 00 00 00       	mov    $0x1a,%ecx
   18075:	4c 89 ff             	mov    %r15,%rdi
   18078:	4c 89 e6             	mov    %r12,%rsi
   1807b:	e8 10 f4 fe ff       	callq  7490 <core::str::<impl str>::contains>
   18080:	84 c0                	test   %al,%al
   18082:	74 0c                	je     18090 <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}+0x120>
   18084:	48 8b 43 18          	mov    0x18(%rbx),%rax
   18088:	c6 00 01             	movb   $0x1,(%rax)
   1808b:	e9 ea 00 00 00       	jmpq   1817a <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}+0x20a>
   18090:	48 8b 43 18          	mov    0x18(%rbx),%rax
   18094:	80 38 00             	cmpb   $0x0,(%rax)
   18097:	0f 84 dd 00 00 00    	je     1817a <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}+0x20a>
   1809d:	48 8b 43 20          	mov    0x20(%rbx),%rax
   180a1:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   180a6:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   180ad:	00 00 
   180af:	48 8b 43 28          	mov    0x28(%rbx),%rax
   180b3:	48 8b 00             	mov    (%rax),%rax
   180b6:	83 38 01             	cmpl   $0x1,(%rax)
   180b9:	75 06                	jne    180c1 <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}+0x151>
   180bb:	4c 8b 78 08          	mov    0x8(%rax),%r15
   180bf:	eb 0d                	jmp    180ce <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}+0x15e>
   180c1:	48 8b 78 08          	mov    0x8(%rax),%rdi
   180c5:	ff 15 75 dc 02 00    	callq  *0x2dc75(%rip)        # 45d40 <_Unwind_GetIP@GCC_3.0>
   180cb:	49 89 c7             	mov    %rax,%r15
   180ce:	48 8d 7c 24 70       	lea    0x70(%rsp),%rdi
   180d3:	4c 89 f6             	mov    %r14,%rsi
   180d6:	e8 e5 2b 00 00       	callq  1acc0 <std::backtrace_rs::symbolize::Symbol::name>
   180db:	41 83 3e 01          	cmpl   $0x1,(%r14)
   180df:	75 10                	jne    180f1 <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}+0x181>
   180e1:	48 c7 44 24 20 02 00 	movq   $0x2,0x20(%rsp)
   180e8:	00 00 
   180ea:	45 31 c0             	xor    %r8d,%r8d
   180ed:	31 c0                	xor    %eax,%eax
   180ef:	eb 5b                	jmp    1814c <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}+0x1dc>
   180f1:	49 8d 56 10          	lea    0x10(%r14),%rdx
   180f5:	45 8b 46 20          	mov    0x20(%r14),%r8d
   180f9:	31 c0                	xor    %eax,%eax
   180fb:	b9 00 00 00 00       	mov    $0x0,%ecx
   18100:	41 83 f8 02          	cmp    $0x2,%r8d
   18104:	48 0f 45 ca          	cmovne %rdx,%rcx
   18108:	75 12                	jne    1811c <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}+0x1ac>
   1810a:	48 c7 44 24 20 02 00 	movq   $0x2,0x20(%rsp)
   18111:	00 00 
   18113:	45 8b 4e 24          	mov    0x24(%r14),%r9d
   18117:	45 31 c0             	xor    %r8d,%r8d
   1811a:	eb 30                	jmp    1814c <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}+0x1dc>
   1811c:	48 8b 01             	mov    (%rcx),%rax
   1811f:	48 85 c0             	test   %rax,%rax
   18122:	74 12                	je     18136 <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}+0x1c6>
   18124:	48 8b 49 08          	mov    0x8(%rcx),%rcx
   18128:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1812d:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   18132:	31 c0                	xor    %eax,%eax
   18134:	eb 05                	jmp    1813b <std::sys_common::backtrace::_print_fmt::{{closure}}::{{closure}}+0x1cb>
   18136:	b8 02 00 00 00       	mov    $0x2,%eax
   1813b:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   18140:	45 8b 4e 24          	mov    0x24(%r14),%r9d
   18144:	41 8b 46 28          	mov    0x28(%r14),%eax
   18148:	45 8b 56 2c          	mov    0x2c(%r14),%r10d
   1814c:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   18151:	48 8d 54 24 70       	lea    0x70(%rsp),%rdx
   18156:	48 8d 4c 24 20       	lea    0x20(%rsp),%rcx
   1815b:	4c 89 fe             	mov    %r15,%rsi
   1815e:	41 52                	push   %r10
   18160:	50                   	push   %rax
   18161:	e8 6a 2c 00 00       	callq  1add0 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column>
   18166:	48 83 c4 10          	add    $0x10,%rsp
   1816a:	48 8b 4b 30          	mov    0x30(%rbx),%rcx
   1816e:	88 01                	mov    %al,(%rcx)
   18170:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   18175:	48 83 40 08 01       	addq   $0x1,0x8(%rax)
   1817a:	48 81 c4 c8 00 00 00 	add    $0xc8,%rsp
   18181:	5b                   	pop    %rbx
   18182:	41 5c                	pop    %r12
   18184:	41 5e                	pop    %r14
   18186:	41 5f                	pop    %r15
   18188:	c3                   	retq   
   18189:	48 89 c3             	mov    %rax,%rbx
   1818c:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   18191:	e8 ba ef fe ff       	callq  7150 <core::ptr::drop_in_place>
   18196:	48 89 df             	mov    %rbx,%rdi
   18199:	e8 b2 ce fe ff       	callq  5050 <_Unwind_Resume@plt>
   1819e:	0f 0b                	ud2    

00000000000181a0 <std::sys_common::backtrace::_print_fmt::{{closure}}>:
   181a0:	53                   	push   %rbx
   181a1:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   181a8:	48 89 fb             	mov    %rdi,%rbx
   181ab:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
   181b0:	48 8b 07             	mov    (%rdi),%rax
   181b3:	80 38 00             	cmpb   $0x0,(%rax)
   181b6:	75 0a                	jne    181c2 <std::sys_common::backtrace::_print_fmt::{{closure}}+0x22>
   181b8:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
   181bc:	48 83 39 64          	cmpq   $0x64,(%rcx)
   181c0:	77 5d                	ja     1821f <std::sys_common::backtrace::_print_fmt::{{closure}}+0x7f>
   181c2:	c6 44 24 1e 00       	movb   $0x0,0x1e(%rsp)
   181c7:	c6 44 24 1f 00       	movb   $0x0,0x1f(%rsp)
   181cc:	0f 10 43 10          	movups 0x10(%rbx),%xmm0
   181d0:	48 8b 4b 20          	mov    0x20(%rbx),%rcx
   181d4:	48 8d 54 24 1e       	lea    0x1e(%rsp),%rdx
   181d9:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   181de:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   181e3:	48 8d 44 24 1f       	lea    0x1f(%rsp),%rax
   181e8:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   181ed:	0f 11 44 24 50       	movups %xmm0,0x50(%rsp)
   181f2:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   181f7:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   181fc:	48 89 4c 24 68       	mov    %rcx,0x68(%rsp)
   18201:	48 8d 15 00 c2 02 00 	lea    0x2c200(%rip),%rdx        # 44408 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xeb0>
   18208:	48 8d 44 24 38       	lea    0x38(%rsp),%rax
   1820d:	48 89 f7             	mov    %rsi,%rdi
   18210:	48 89 c6             	mov    %rax,%rsi
   18213:	e8 08 46 00 00       	callq  1c820 <std::backtrace_rs::symbolize::gimli::resolve>
   18218:	80 7c 24 1f 00       	cmpb   $0x0,0x1f(%rsp)
   1821d:	74 0b                	je     1822a <std::sys_common::backtrace::_print_fmt::{{closure}}+0x8a>
   1821f:	31 c0                	xor    %eax,%eax
   18221:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
   18228:	5b                   	pop    %rbx
   18229:	c3                   	retq   
   1822a:	80 7c 24 1e 00       	cmpb   $0x0,0x1e(%rsp)
   1822f:	75 7e                	jne    182af <std::sys_common::backtrace::_print_fmt::{{closure}}+0x10f>
   18231:	48 8b 43 10          	mov    0x10(%rbx),%rax
   18235:	80 38 00             	cmpb   $0x0,(%rax)
   18238:	74 75                	je     182af <std::sys_common::backtrace::_print_fmt::{{closure}}+0x10f>
   1823a:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1823e:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   18243:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   1824a:	00 00 
   1824c:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   18251:	83 38 01             	cmpl   $0x1,(%rax)
   18254:	75 06                	jne    1825c <std::sys_common::backtrace::_print_fmt::{{closure}}+0xbc>
   18256:	48 8b 70 08          	mov    0x8(%rax),%rsi
   1825a:	eb 0d                	jmp    18269 <std::sys_common::backtrace::_print_fmt::{{closure}}+0xc9>
   1825c:	48 8b 78 08          	mov    0x8(%rax),%rdi
   18260:	ff 15 da da 02 00    	callq  *0x2dada(%rip)        # 45d40 <_Unwind_GetIP@GCC_3.0>
   18266:	48 89 c6             	mov    %rax,%rsi
   18269:	48 c7 44 24 48 04 00 	movq   $0x4,0x48(%rsp)
   18270:	00 00 
   18272:	48 c7 84 24 88 00 00 	movq   $0x2,0x88(%rsp)
   18279:	00 02 00 00 00 
   1827e:	c7 04 24 00 00 00 00 	movl   $0x0,(%rsp)
   18285:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
   1828a:	48 8d 54 24 38       	lea    0x38(%rsp),%rdx
   1828f:	48 8d 8c 24 88 00 00 	lea    0x88(%rsp),%rcx
   18296:	00 
   18297:	45 31 c0             	xor    %r8d,%r8d
   1829a:	e8 31 2b 00 00       	callq  1add0 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column>
   1829f:	48 8b 4b 20          	mov    0x20(%rbx),%rcx
   182a3:	88 01                	mov    %al,(%rcx)
   182a5:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   182aa:	48 83 40 08 01       	addq   $0x1,0x8(%rax)
   182af:	48 8b 43 08          	mov    0x8(%rbx),%rax
   182b3:	48 83 00 01          	addq   $0x1,(%rax)
   182b7:	48 8b 43 20          	mov    0x20(%rbx),%rax
   182bb:	80 38 00             	cmpb   $0x0,(%rax)
   182be:	0f 94 c0             	sete   %al
   182c1:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
   182c8:	5b                   	pop    %rbx
   182c9:	c3                   	retq   
   182ca:	48 89 c3             	mov    %rax,%rbx
   182cd:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
   182d2:	e8 79 ee fe ff       	callq  7150 <core::ptr::drop_in_place>
   182d7:	48 89 df             	mov    %rbx,%rdi
   182da:	e8 71 cd fe ff       	callq  5050 <_Unwind_Resume@plt>
   182df:	0f 0b                	ud2    
   182e1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   182e8:	00 00 00 
   182eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000182f0 <std::sys_common::backtrace::__rust_end_short_backtrace>:
   182f0:	48 83 ec 18          	sub    $0x18,%rsp
   182f4:	48 8b 47 10          	mov    0x10(%rdi),%rax
   182f8:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   182fd:	0f 10 07             	movups (%rdi),%xmm0
   18300:	0f 29 04 24          	movaps %xmm0,(%rsp)
   18304:	48 89 e7             	mov    %rsp,%rdi
   18307:	e8 34 21 00 00       	callq  1a440 <std::panicking::begin_panic::{{closure}}>
   1830c:	0f 0b                	ud2    
   1830e:	66 90                	xchg   %ax,%ax

0000000000018310 <std::sys_common::backtrace::__rust_end_short_backtrace>:
   18310:	48 83 ec 18          	sub    $0x18,%rsp
   18314:	48 8b 47 10          	mov    0x10(%rdi),%rax
   18318:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1831d:	0f 10 07             	movups (%rdi),%xmm0
   18320:	0f 29 04 24          	movaps %xmm0,(%rsp)
   18324:	48 89 e7             	mov    %rsp,%rdi
   18327:	e8 94 1e 00 00       	callq  1a1c0 <std::panicking::begin_panic_handler::{{closure}}>
   1832c:	0f 0b                	ud2    
   1832e:	66 90                	xchg   %ax,%ax

0000000000018330 <std::sys_common::backtrace::output_filename>:
   18330:	41 57                	push   %r15
   18332:	41 56                	push   %r14
   18334:	41 55                	push   %r13
   18336:	41 54                	push   %r12
   18338:	53                   	push   %rbx
   18339:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
   18340:	49 89 fe             	mov    %rdi,%r14
   18343:	83 3e 01             	cmpl   $0x1,(%rsi)
   18346:	75 2a                	jne    18372 <std::sys_common::backtrace::output_filename+0x42>
   18348:	48 8d 1d ba fb 01 00 	lea    0x1fbba(%rip),%rbx        # 37f09 <str.6+0xbe9>
   1834f:	48 89 5c 24 48       	mov    %rbx,0x48(%rsp)
   18354:	48 c7 44 24 50 09 00 	movq   $0x9,0x50(%rsp)
   1835b:	00 00 
   1835d:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   18364:	00 00 
   18366:	41 bf 09 00 00 00    	mov    $0x9,%r15d
   1836c:	84 d2                	test   %dl,%dl
   1836e:	75 21                	jne    18391 <std::sys_common::backtrace::output_filename+0x61>
   18370:	eb 54                	jmp    183c6 <std::sys_common::backtrace::output_filename+0x96>
   18372:	48 8b 5e 08          	mov    0x8(%rsi),%rbx
   18376:	4c 8b 7e 10          	mov    0x10(%rsi),%r15
   1837a:	48 89 5c 24 48       	mov    %rbx,0x48(%rsp)
   1837f:	4c 89 7c 24 50       	mov    %r15,0x50(%rsp)
   18384:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   1838b:	00 00 
   1838d:	84 d2                	test   %dl,%dl
   1838f:	74 2c                	je     183bd <std::sys_common::backtrace::output_filename+0x8d>
   18391:	48 89 df             	mov    %rbx,%rdi
   18394:	4c 89 fe             	mov    %r15,%rsi
   18397:	ff 15 03 da 02 00    	callq  *0x2da03(%rip)        # 45da0 <_GLOBAL_OFFSET_TABLE_+0x410>
   1839d:	48 89 c7             	mov    %rax,%rdi
   183a0:	48 89 d6             	mov    %rdx,%rsi
   183a3:	4c 89 f2             	mov    %r14,%rdx
   183a6:	ff 15 74 da 02 00    	callq  *0x2da74(%rip)        # 45e20 <_GLOBAL_OFFSET_TABLE_+0x490>
   183ac:	48 81 c4 f0 00 00 00 	add    $0xf0,%rsp
   183b3:	5b                   	pop    %rbx
   183b4:	41 5c                	pop    %r12
   183b6:	41 5d                	pop    %r13
   183b8:	41 5e                	pop    %r14
   183ba:	41 5f                	pop    %r15
   183bc:	c3                   	retq   
   183bd:	4d 85 ff             	test   %r15,%r15
   183c0:	0f 84 7f 01 00 00    	je     18545 <std::sys_common::backtrace::output_filename+0x215>
   183c6:	48 85 c9             	test   %rcx,%rcx
   183c9:	74 c6                	je     18391 <std::sys_common::backtrace::output_filename+0x61>
   183cb:	80 3b 2f             	cmpb   $0x2f,(%rbx)
   183ce:	75 c1                	jne    18391 <std::sys_common::backtrace::output_filename+0x61>
   183d0:	48 8b 01             	mov    (%rcx),%rax
   183d3:	48 8b 49 10          	mov    0x10(%rcx),%rcx
   183d7:	48 89 5c 24 60       	mov    %rbx,0x60(%rsp)
   183dc:	4c 89 7c 24 68       	mov    %r15,0x68(%rsp)
   183e1:	c6 44 24 70 06       	movb   $0x6,0x70(%rsp)
   183e6:	66 c7 84 24 98 00 00 	movw   $0x1,0x98(%rsp)
   183ed:	00 01 00 
   183f0:	c6 84 24 9a 00 00 00 	movb   $0x2,0x9a(%rsp)
   183f7:	02 
   183f8:	48 85 c9             	test   %rcx,%rcx
   183fb:	74 07                	je     18404 <std::sys_common::backtrace::output_filename+0xd4>
   183fd:	b2 01                	mov    $0x1,%dl
   183ff:	80 38 2f             	cmpb   $0x2f,(%rax)
   18402:	74 02                	je     18406 <std::sys_common::backtrace::output_filename+0xd6>
   18404:	31 d2                	xor    %edx,%edx
   18406:	48 89 04 24          	mov    %rax,(%rsp)
   1840a:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   1840f:	c6 44 24 10 06       	movb   $0x6,0x10(%rsp)
   18414:	48 8b 84 24 a1 00 00 	mov    0xa1(%rsp),%rax
   1841b:	00 
   1841c:	48 8b 8c 24 a8 00 00 	mov    0xa8(%rsp),%rcx
   18423:	00 
   18424:	48 89 44 24 11       	mov    %rax,0x11(%rsp)
   18429:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   1842e:	88 54 24 38          	mov    %dl,0x38(%rsp)
   18432:	66 c7 44 24 39 00 02 	movw   $0x200,0x39(%rsp)
   18439:	4c 8d ac 24 b0 00 00 	lea    0xb0(%rsp),%r13
   18440:	00 
   18441:	4c 8d 64 24 60       	lea    0x60(%rsp),%r12
   18446:	48 89 e2             	mov    %rsp,%rdx
   18449:	4c 89 ef             	mov    %r13,%rdi
   1844c:	4c 89 e6             	mov    %r12,%rsi
   1844f:	e8 9c df ff ff       	callq  163f0 <std::path::iter_after>
   18454:	80 bc 24 e8 00 00 00 	cmpb   $0x2,0xe8(%rsp)
   1845b:	02 
   1845c:	0f 84 2f ff ff ff    	je     18391 <std::sys_common::backtrace::output_filename+0x61>
   18462:	0f 10 84 24 b0 00 00 	movups 0xb0(%rsp),%xmm0
   18469:	00 
   1846a:	0f 10 8c 24 c0 00 00 	movups 0xc0(%rsp),%xmm1
   18471:	00 
   18472:	0f 10 94 24 d0 00 00 	movups 0xd0(%rsp),%xmm2
   18479:	00 
   1847a:	0f 10 9c 24 e0 00 00 	movups 0xe0(%rsp),%xmm3
   18481:	00 
   18482:	0f 29 5c 24 30       	movaps %xmm3,0x30(%rsp)
   18487:	0f 29 54 24 20       	movaps %xmm2,0x20(%rsp)
   1848c:	0f 29 4c 24 10       	movaps %xmm1,0x10(%rsp)
   18491:	0f 29 04 24          	movaps %xmm0,(%rsp)
   18495:	48 89 e7             	mov    %rsp,%rdi
   18498:	ff 15 22 da 02 00    	callq  *0x2da22(%rip)        # 45ec0 <_GLOBAL_OFFSET_TABLE_+0x530>
   1849e:	48 85 c0             	test   %rax,%rax
   184a1:	0f 84 ea fe ff ff    	je     18391 <std::sys_common::backtrace::output_filename+0x61>
   184a7:	48 89 e7             	mov    %rsp,%rdi
   184aa:	48 89 c6             	mov    %rax,%rsi
   184ad:	ff 15 1d d7 02 00    	callq  *0x2d71d(%rip)        # 45bd0 <_GLOBAL_OFFSET_TABLE_+0x240>
   184b3:	83 3c 24 01          	cmpl   $0x1,(%rsp)
   184b7:	0f 84 d4 fe ff ff    	je     18391 <std::sys_common::backtrace::output_filename+0x61>
   184bd:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   184c2:	48 85 c0             	test   %rax,%rax
   184c5:	0f 84 c6 fe ff ff    	je     18391 <std::sys_common::backtrace::output_filename+0x61>
   184cb:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   184d0:	48 89 84 24 b0 00 00 	mov    %rax,0xb0(%rsp)
   184d7:	00 
   184d8:	48 89 8c 24 b8 00 00 	mov    %rcx,0xb8(%rsp)
   184df:	00 
   184e0:	48 8d 05 9d f2 01 00 	lea    0x1f29d(%rip),%rax        # 37784 <str.6+0x464>
   184e7:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   184ec:	48 8d 05 9d 95 01 00 	lea    0x1959d(%rip),%rax        # 31a90 <<char as core::fmt::Display>::fmt>
   184f3:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   184f8:	4c 89 6c 24 70       	mov    %r13,0x70(%rsp)
   184fd:	48 8d 05 5c d3 fe ff 	lea    -0x12ca4(%rip),%rax        # 5860 <<&T as core::fmt::Display>::fmt>
   18504:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   18509:	48 8d 05 40 bb 02 00 	lea    0x2bb40(%rip),%rax        # 44050 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xaf8>
   18510:	48 89 04 24          	mov    %rax,(%rsp)
   18514:	48 c7 44 24 08 02 00 	movq   $0x2,0x8(%rsp)
   1851b:	00 00 
   1851d:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   18524:	00 00 
   18526:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
   1852b:	48 c7 44 24 28 02 00 	movq   $0x2,0x28(%rsp)
   18532:	00 00 
   18534:	48 89 e6             	mov    %rsp,%rsi
   18537:	4c 89 f7             	mov    %r14,%rdi
   1853a:	ff 15 50 d9 02 00    	callq  *0x2d950(%rip)        # 45e90 <_GLOBAL_OFFSET_TABLE_+0x500>
   18540:	e9 67 fe ff ff       	jmpq   183ac <std::sys_common::backtrace::output_filename+0x7c>
   18545:	45 31 ff             	xor    %r15d,%r15d
   18548:	e9 44 fe ff ff       	jmpq   18391 <std::sys_common::backtrace::output_filename+0x61>
   1854d:	48 89 c3             	mov    %rax,%rbx
   18550:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   18555:	e8 36 e3 fe ff       	callq  6890 <core::ptr::drop_in_place>
   1855a:	48 89 df             	mov    %rbx,%rdi
   1855d:	e8 ee ca fe ff       	callq  5050 <_Unwind_Resume@plt>
   18562:	0f 0b                	ud2    
   18564:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1856b:	00 00 00 
   1856e:	66 90                	xchg   %ax,%ax

0000000000018570 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt>:
   18570:	55                   	push   %rbp
   18571:	41 57                	push   %r15
   18573:	41 56                	push   %r14
   18575:	41 55                	push   %r13
   18577:	41 54                	push   %r12
   18579:	53                   	push   %rbx
   1857a:	48 83 ec 68          	sub    $0x68,%rsp
   1857e:	49 89 d7             	mov    %rdx,%r15
   18581:	48 89 f5             	mov    %rsi,%rbp
   18584:	48 89 fb             	mov    %rdi,%rbx
   18587:	48 8d 35 06 f4 01 00 	lea    0x1f406(%rip),%rsi        # 37994 <str.6+0x674>
   1858e:	ba 01 00 00 00       	mov    $0x1,%edx
   18593:	4c 89 ff             	mov    %r15,%rdi
   18596:	ff 15 ac d4 02 00    	callq  *0x2d4ac(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   1859c:	b1 01                	mov    $0x1,%cl
   1859e:	84 c0                	test   %al,%al
   185a0:	0f 85 54 03 00 00    	jne    188fa <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x38a>
   185a6:	48 89 df             	mov    %rbx,%rdi
   185a9:	48 89 ee             	mov    %rbp,%rsi
   185ac:	ff 15 ee d7 02 00    	callq  *0x2d7ee(%rip)        # 45da0 <_GLOBAL_OFFSET_TABLE_+0x410>
   185b2:	48 89 c7             	mov    %rax,%rdi
   185b5:	48 89 d6             	mov    %rdx,%rsi
   185b8:	ff 15 7a d6 02 00    	callq  *0x2d67a(%rip)        # 45c38 <_GLOBAL_OFFSET_TABLE_+0x2a8>
   185be:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   185c3:	48 89 54 24 48       	mov    %rdx,0x48(%rsp)
   185c8:	48 89 e7             	mov    %rsp,%rdi
   185cb:	48 8d 74 24 40       	lea    0x40(%rsp),%rsi
   185d0:	ff 15 e2 d9 02 00    	callq  *0x2d9e2(%rip)        # 45fb8 <_GLOBAL_OFFSET_TABLE_+0x628>
   185d6:	48 8b 04 24          	mov    (%rsp),%rax
   185da:	48 85 c0             	test   %rax,%rax
   185dd:	0f 84 fc 02 00 00    	je     188df <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x36f>
   185e3:	4c 8d 35 76 6f 01 00 	lea    0x16f76(%rip),%r14        # 2f560 <<core::char::EscapeDebug as core::iter::traits::iterator::Iterator>::next>
   185ea:	48 8d 1d bb e8 01 00 	lea    0x1e8bb(%rip),%rbx        # 36eac <_fini+0x1e28>
   185f1:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
   185f6:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
   185fb:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   18600:	48 01 c1             	add    %rax,%rcx
   18603:	48 89 04 24          	mov    %rax,(%rsp)
   18607:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   1860c:	c7 44 24 10 04 00 00 	movl   $0x4,0x10(%rsp)
   18613:	00 
   18614:	c7 44 24 28 04 00 00 	movl   $0x4,0x28(%rsp)
   1861b:	00 
   1861c:	b9 04 00 00 00       	mov    $0x4,%ecx
   18621:	83 f9 04             	cmp    $0x4,%ecx
   18624:	0f 84 50 00 00 00    	je     1867a <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x10a>
   1862a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   18630:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   18635:	41 ff d6             	callq  *%r14
   18638:	3d 00 00 11 00       	cmp    $0x110000,%eax
   1863d:	0f 85 6b 01 00 00    	jne    187ae <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x23e>
   18643:	c7 44 24 10 04 00 00 	movl   $0x4,0x10(%rsp)
   1864a:	00 
   1864b:	48 8b 0c 24          	mov    (%rsp),%rcx
   1864f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   18654:	48 39 c8             	cmp    %rcx,%rax
   18657:	75 33                	jne    1868c <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x11c>
   18659:	e9 32 01 00 00       	jmpq   18790 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x220>
   1865e:	66 90                	xchg   %ax,%ax
   18660:	44 89 ee             	mov    %r13d,%esi
   18663:	89 4c 24 10          	mov    %ecx,0x10(%rsp)
   18667:	89 74 24 14          	mov    %esi,0x14(%rsp)
   1866b:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   18670:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   18675:	83 f9 04             	cmp    $0x4,%ecx
   18678:	75 b6                	jne    18630 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0xc0>
   1867a:	48 8b 0c 24          	mov    (%rsp),%rcx
   1867e:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   18683:	48 39 c8             	cmp    %rcx,%rax
   18686:	0f 84 04 01 00 00    	je     18790 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x220>
   1868c:	48 8d 71 01          	lea    0x1(%rcx),%rsi
   18690:	48 89 34 24          	mov    %rsi,(%rsp)
   18694:	0f b6 11             	movzbl (%rcx),%edx
   18697:	84 d2                	test   %dl,%dl
   18699:	78 35                	js     186d0 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x160>
   1869b:	41 89 d5             	mov    %edx,%r13d
   1869e:	b9 02 00 00 00       	mov    $0x2,%ecx
   186a3:	41 8d 45 f7          	lea    -0x9(%r13),%eax
   186a7:	83 f8 1e             	cmp    $0x1e,%eax
   186aa:	0f 87 c3 00 00 00    	ja     18773 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x203>
   186b0:	be 74 00 00 00       	mov    $0x74,%esi
   186b5:	48 63 3c 83          	movslq (%rbx,%rax,4),%rdi
   186b9:	48 01 df             	add    %rbx,%rdi
   186bc:	ff e7                	jmpq   *%rdi
   186be:	be 6e 00 00 00       	mov    $0x6e,%esi
   186c3:	e9 9b ff ff ff       	jmpq   18663 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0xf3>
   186c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   186cf:	00 
   186d0:	48 39 c6             	cmp    %rax,%rsi
   186d3:	74 56                	je     1872b <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x1bb>
   186d5:	48 8d 79 02          	lea    0x2(%rcx),%rdi
   186d9:	48 89 3c 24          	mov    %rdi,(%rsp)
   186dd:	44 0f b6 69 01       	movzbl 0x1(%rcx),%r13d
   186e2:	41 83 e5 3f          	and    $0x3f,%r13d
   186e6:	89 d1                	mov    %edx,%ecx
   186e8:	83 e1 1f             	and    $0x1f,%ecx
   186eb:	80 fa df             	cmp    $0xdf,%dl
   186ee:	76 4b                	jbe    1873b <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x1cb>
   186f0:	48 39 c7             	cmp    %rax,%rdi
   186f3:	74 55                	je     1874a <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x1da>
   186f5:	48 8d 77 01          	lea    0x1(%rdi),%rsi
   186f9:	48 89 34 24          	mov    %rsi,(%rsp)
   186fd:	0f b6 3f             	movzbl (%rdi),%edi
   18700:	83 e7 3f             	and    $0x3f,%edi
   18703:	41 c1 e5 06          	shl    $0x6,%r13d
   18707:	41 09 fd             	or     %edi,%r13d
   1870a:	80 fa f0             	cmp    $0xf0,%dl
   1870d:	72 4c                	jb     1875b <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x1eb>
   1870f:	48 39 c6             	cmp    %rax,%rsi
   18712:	0f 84 09 01 00 00    	je     18821 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x2b1>
   18718:	48 8d 46 01          	lea    0x1(%rsi),%rax
   1871c:	48 89 04 24          	mov    %rax,(%rsp)
   18720:	0f b6 06             	movzbl (%rsi),%eax
   18723:	83 e0 3f             	and    $0x3f,%eax
   18726:	e9 f8 00 00 00       	jmpq   18823 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x2b3>
   1872b:	45 31 ed             	xor    %r13d,%r13d
   1872e:	48 89 c7             	mov    %rax,%rdi
   18731:	89 d1                	mov    %edx,%ecx
   18733:	83 e1 1f             	and    $0x1f,%ecx
   18736:	80 fa df             	cmp    $0xdf,%dl
   18739:	77 b5                	ja     186f0 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x180>
   1873b:	c1 e1 06             	shl    $0x6,%ecx
   1873e:	eb 1e                	jmp    1875e <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x1ee>
   18740:	be 72 00 00 00       	mov    $0x72,%esi
   18745:	e9 19 ff ff ff       	jmpq   18663 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0xf3>
   1874a:	31 ff                	xor    %edi,%edi
   1874c:	48 89 c6             	mov    %rax,%rsi
   1874f:	41 c1 e5 06          	shl    $0x6,%r13d
   18753:	41 09 fd             	or     %edi,%r13d
   18756:	80 fa f0             	cmp    $0xf0,%dl
   18759:	73 b4                	jae    1870f <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x19f>
   1875b:	c1 e1 0c             	shl    $0xc,%ecx
   1875e:	41 09 cd             	or     %ecx,%r13d
   18761:	b9 02 00 00 00       	mov    $0x2,%ecx
   18766:	41 8d 45 f7          	lea    -0x9(%r13),%eax
   1876a:	83 f8 1e             	cmp    $0x1e,%eax
   1876d:	0f 86 3d ff ff ff    	jbe    186b0 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x140>
   18773:	41 83 fd 5c          	cmp    $0x5c,%r13d
   18777:	0f 84 e3 fe ff ff    	je     18660 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0xf0>
   1877d:	41 81 fd 00 00 11 00 	cmp    $0x110000,%r13d
   18784:	75 4d                	jne    187d3 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x263>
   18786:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1878d:	00 00 00 
   18790:	83 7c 24 28 04       	cmpl   $0x4,0x28(%rsp)
   18795:	0f 84 24 01 00 00    	je     188bf <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x34f>
   1879b:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
   187a0:	41 ff d6             	callq  *%r14
   187a3:	3d 00 00 11 00       	cmp    $0x110000,%eax
   187a8:	0f 84 11 01 00 00    	je     188bf <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x34f>
   187ae:	4c 89 ff             	mov    %r15,%rdi
   187b1:	89 c6                	mov    %eax,%esi
   187b3:	ff 15 df d5 02 00    	callq  *0x2d5df(%rip)        # 45d98 <_GLOBAL_OFFSET_TABLE_+0x408>
   187b9:	84 c0                	test   %al,%al
   187bb:	0f 85 37 01 00 00    	jne    188f8 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x388>
   187c1:	8b 4c 24 10          	mov    0x10(%rsp),%ecx
   187c5:	83 f9 04             	cmp    $0x4,%ecx
   187c8:	0f 85 62 fe ff ff    	jne    18630 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0xc0>
   187ce:	e9 a7 fe ff ff       	jmpq   1867a <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x10a>
   187d3:	44 89 ef             	mov    %r13d,%edi
   187d6:	ff 15 2c d5 02 00    	callq  *0x2d52c(%rip)        # 45d08 <_GLOBAL_OFFSET_TABLE_+0x378>
   187dc:	84 c0                	test   %al,%al
   187de:	75 16                	jne    187f6 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x286>
   187e0:	44 89 ef             	mov    %r13d,%edi
   187e3:	ff 15 ff d1 02 00    	callq  *0x2d1ff(%rip)        # 459e8 <_GLOBAL_OFFSET_TABLE_+0x58>
   187e9:	b9 01 00 00 00       	mov    $0x1,%ecx
   187ee:	84 c0                	test   %al,%al
   187f0:	0f 85 6a fe ff ff    	jne    18660 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0xf0>
   187f6:	44 89 e8             	mov    %r13d,%eax
   187f9:	41 83 cd 01          	or     $0x1,%r13d
   187fd:	41 0f bd d5          	bsr    %r13d,%edx
   18801:	83 f2 1c             	xor    $0x1c,%edx
   18804:	c1 ea 02             	shr    $0x2,%edx
   18807:	83 f2 07             	xor    $0x7,%edx
   1880a:	48 b9 00 00 00 00 05 	movabs $0x500000000,%rcx
   18811:	00 00 00 
   18814:	48 09 c8             	or     %rcx,%rax
   18817:	b9 03 00 00 00       	mov    $0x3,%ecx
   1881c:	e9 42 fe ff ff       	jmpq   18663 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0xf3>
   18821:	31 c0                	xor    %eax,%eax
   18823:	83 e1 07             	and    $0x7,%ecx
   18826:	c1 e1 12             	shl    $0x12,%ecx
   18829:	41 c1 e5 06          	shl    $0x6,%r13d
   1882d:	41 09 cd             	or     %ecx,%r13d
   18830:	41 09 c5             	or     %eax,%r13d
   18833:	b9 02 00 00 00       	mov    $0x2,%ecx
   18838:	41 8d 45 f7          	lea    -0x9(%r13),%eax
   1883c:	83 f8 1e             	cmp    $0x1e,%eax
   1883f:	0f 86 6b fe ff ff    	jbe    186b0 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x140>
   18845:	e9 29 ff ff ff       	jmpq   18773 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x203>
   1884a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   18850:	48 89 6c 24 50       	mov    %rbp,0x50(%rsp)
   18855:	48 83 c5 01          	add    $0x1,%rbp
   18859:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
   1885e:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   18863:	48 8d 05 16 d0 fe ff 	lea    -0x12fea(%rip),%rax        # 5880 <<&T as core::fmt::UpperHex>::fmt>
   1886a:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   1886f:	48 8d 05 fa b7 02 00 	lea    0x2b7fa(%rip),%rax        # 44070 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xb18>
   18876:	48 89 04 24          	mov    %rax,(%rsp)
   1887a:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   18881:	00 00 
   18883:	48 8d 05 8e f6 01 00 	lea    0x1f68e(%rip),%rax        # 37f18 <str.6+0xbf8>
   1888a:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1888f:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
   18896:	00 00 
   18898:	48 8d 44 24 58       	lea    0x58(%rsp),%rax
   1889d:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   188a2:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
   188a9:	00 00 
   188ab:	4c 89 ff             	mov    %r15,%rdi
   188ae:	48 89 e6             	mov    %rsp,%rsi
   188b1:	ff 15 d9 d5 02 00    	callq  *0x2d5d9(%rip)        # 45e90 <_GLOBAL_OFFSET_TABLE_+0x500>
   188b7:	49 83 c4 ff          	add    $0xffffffffffffffff,%r12
   188bb:	84 c0                	test   %al,%al
   188bd:	75 39                	jne    188f8 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x388>
   188bf:	4d 85 e4             	test   %r12,%r12
   188c2:	75 8c                	jne    18850 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x2e0>
   188c4:	48 89 e7             	mov    %rsp,%rdi
   188c7:	48 8d 74 24 40       	lea    0x40(%rsp),%rsi
   188cc:	ff 15 e6 d6 02 00    	callq  *0x2d6e6(%rip)        # 45fb8 <_GLOBAL_OFFSET_TABLE_+0x628>
   188d2:	48 8b 04 24          	mov    (%rsp),%rax
   188d6:	48 85 c0             	test   %rax,%rax
   188d9:	0f 85 12 fd ff ff    	jne    185f1 <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x81>
   188df:	48 8d 35 ae f0 01 00 	lea    0x1f0ae(%rip),%rsi        # 37994 <str.6+0x674>
   188e6:	ba 01 00 00 00       	mov    $0x1,%edx
   188eb:	4c 89 ff             	mov    %r15,%rdi
   188ee:	ff 15 54 d1 02 00    	callq  *0x2d154(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   188f4:	89 c1                	mov    %eax,%ecx
   188f6:	eb 02                	jmp    188fa <<std::sys_common::os_str_bytes::Slice as core::fmt::Debug>::fmt+0x38a>
   188f8:	b1 01                	mov    $0x1,%cl
   188fa:	89 c8                	mov    %ecx,%eax
   188fc:	48 83 c4 68          	add    $0x68,%rsp
   18900:	5b                   	pop    %rbx
   18901:	41 5c                	pop    %r12
   18903:	41 5d                	pop    %r13
   18905:	41 5e                	pop    %r14
   18907:	41 5f                	pop    %r15
   18909:	5d                   	pop    %rbp
   1890a:	c3                   	retq   
   1890b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000018910 <std::sys_common::thread_info::ThreadInfo::with::{{closure}}>:
   18910:	41 56                	push   %r14
   18912:	53                   	push   %rbx
   18913:	48 83 ec 48          	sub    $0x48,%rsp
   18917:	48 8b 07             	mov    (%rdi),%rax
   1891a:	48 8d 48 01          	lea    0x1(%rax),%rcx
   1891e:	48 85 c9             	test   %rcx,%rcx
   18921:	0f 8e ae 00 00 00    	jle    189d5 <std::sys_common::thread_info::ThreadInfo::with::{{closure}}+0xc5>
   18927:	48 89 fb             	mov    %rdi,%rbx
   1892a:	48 83 7f 08 02       	cmpq   $0x2,0x8(%rdi)
   1892f:	48 89 07             	mov    %rax,(%rdi)
   18932:	75 78                	jne    189ac <std::sys_common::thread_info::ThreadInfo::with::{{closure}}+0x9c>
   18934:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   1893b:	00 00 
   1893d:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   18942:	ff 15 38 d6 02 00    	callq  *0x2d638(%rip)        # 45f80 <_GLOBAL_OFFSET_TABLE_+0x5f0>
   18948:	0f 10 44 24 10       	movups 0x10(%rsp),%xmm0
   1894d:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   18954:	00 00 
   18956:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
   1895b:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   18960:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   18964:	0f 85 d8 00 00 00    	jne    18a42 <std::sys_common::thread_info::ThreadInfo::with::{{closure}}+0x132>
   1896a:	4c 8d 73 08          	lea    0x8(%rbx),%r14
   1896e:	48 c7 03 ff ff ff ff 	movq   $0xffffffffffffffff,(%rbx)
   18975:	83 7b 08 02          	cmpl   $0x2,0x8(%rbx)
   18979:	74 14                	je     1898f <std::sys_common::thread_info::ThreadInfo::with::{{closure}}+0x7f>
   1897b:	48 8b 43 20          	mov    0x20(%rbx),%rax
   1897f:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   18984:	75 09                	jne    1898f <std::sys_common::thread_info::ThreadInfo::with::{{closure}}+0x7f>
   18986:	48 8d 7b 20          	lea    0x20(%rbx),%rdi
   1898a:	e8 01 0f ff ff       	callq  9890 <alloc::sync::Arc<T>::drop_slow>
   1898f:	0f 10 44 24 10       	movups 0x10(%rsp),%xmm0
   18994:	0f 10 4c 24 20       	movups 0x20(%rsp),%xmm1
   18999:	41 0f 11 4e 10       	movups %xmm1,0x10(%r14)
   1899e:	41 0f 11 06          	movups %xmm0,(%r14)
   189a2:	48 8b 03             	mov    (%rbx),%rax
   189a5:	48 83 c0 01          	add    $0x1,%rax
   189a9:	48 89 03             	mov    %rax,(%rbx)
   189ac:	48 85 c0             	test   %rax,%rax
   189af:	75 4b                	jne    189fc <std::sys_common::thread_info::ThreadInfo::with::{{closure}}+0xec>
   189b1:	48 c7 03 ff ff ff ff 	movq   $0xffffffffffffffff,(%rbx)
   189b8:	83 7b 08 02          	cmpl   $0x2,0x8(%rbx)
   189bc:	74 65                	je     18a23 <std::sys_common::thread_info::ThreadInfo::with::{{closure}}+0x113>
   189be:	48 8b 43 20          	mov    0x20(%rbx),%rax
   189c2:	f0 48 83 00 01       	lock addq $0x1,(%rax)
   189c7:	7e 75                	jle    18a3e <std::sys_common::thread_info::ThreadInfo::with::{{closure}}+0x12e>
   189c9:	48 83 03 01          	addq   $0x1,(%rbx)
   189cd:	48 83 c4 48          	add    $0x48,%rsp
   189d1:	5b                   	pop    %rbx
   189d2:	41 5e                	pop    %r14
   189d4:	c3                   	retq   
   189d5:	48 8d 3d cc e9 01 00 	lea    0x1e9cc(%rip),%rdi        # 373a8 <str.6+0x88>
   189dc:	48 8d 0d 9d ae 02 00 	lea    0x2ae9d(%rip),%rcx        # 43880 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x328>
   189e3:	4c 8d 05 96 b6 02 00 	lea    0x2b696(%rip),%r8        # 44080 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xb28>
   189ea:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   189ef:	be 18 00 00 00       	mov    $0x18,%esi
   189f4:	ff 15 ee d1 02 00    	callq  *0x2d1ee(%rip)        # 45be8 <_GLOBAL_OFFSET_TABLE_+0x258>
   189fa:	eb 6b                	jmp    18a67 <std::sys_common::thread_info::ThreadInfo::with::{{closure}}+0x157>
   189fc:	48 8d 3d cd d8 01 00 	lea    0x1d8cd(%rip),%rdi        # 362d0 <_fini+0x124c>
   18a03:	48 8d 0d f6 ad 02 00 	lea    0x2adf6(%rip),%rcx        # 43800 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2a8>
   18a0a:	4c 8d 05 9f b6 02 00 	lea    0x2b69f(%rip),%r8        # 440b0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xb58>
   18a11:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   18a16:	be 10 00 00 00       	mov    $0x10,%esi
   18a1b:	ff 15 c7 d1 02 00    	callq  *0x2d1c7(%rip)        # 45be8 <_GLOBAL_OFFSET_TABLE_+0x258>
   18a21:	eb 44                	jmp    18a67 <std::sys_common::thread_info::ThreadInfo::with::{{closure}}+0x157>
   18a23:	48 8d 3d d0 eb 01 00 	lea    0x1ebd0(%rip),%rdi        # 375fa <str.6+0x2da>
   18a2a:	48 8d 15 97 b6 02 00 	lea    0x2b697(%rip),%rdx        # 440c8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xb70>
   18a31:	be 2b 00 00 00       	mov    $0x2b,%esi
   18a36:	ff 15 a4 d4 02 00    	callq  *0x2d4a4(%rip)        # 45ee0 <_GLOBAL_OFFSET_TABLE_+0x550>
   18a3c:	eb 29                	jmp    18a67 <std::sys_common::thread_info::ThreadInfo::with::{{closure}}+0x157>
   18a3e:	0f 0b                	ud2    
   18a40:	0f 0b                	ud2    
   18a42:	48 8d 3d 87 d8 01 00 	lea    0x1d887(%rip),%rdi        # 362d0 <_fini+0x124c>
   18a49:	48 8d 0d b0 ad 02 00 	lea    0x2adb0(%rip),%rcx        # 43800 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2a8>
   18a50:	4c 8d 05 41 b6 02 00 	lea    0x2b641(%rip),%r8        # 44098 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xb40>
   18a57:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   18a5c:	be 10 00 00 00       	mov    $0x10,%esi
   18a61:	ff 15 81 d1 02 00    	callq  *0x2d181(%rip)        # 45be8 <_GLOBAL_OFFSET_TABLE_+0x258>
   18a67:	0f 0b                	ud2    
   18a69:	49 89 c6             	mov    %rax,%r14
   18a6c:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   18a71:	e8 aa d6 fe ff       	callq  6120 <core::ptr::drop_in_place>
   18a76:	eb 12                	jmp    18a8a <std::sys_common::thread_info::ThreadInfo::with::{{closure}}+0x17a>
   18a78:	49 89 c6             	mov    %rax,%r14
   18a7b:	48 89 df             	mov    %rbx,%rdi
   18a7e:	e8 dd d2 fe ff       	callq  5d60 <core::ptr::drop_in_place>
   18a83:	eb 05                	jmp    18a8a <std::sys_common::thread_info::ThreadInfo::with::{{closure}}+0x17a>
   18a85:	eb 00                	jmp    18a87 <std::sys_common::thread_info::ThreadInfo::with::{{closure}}+0x177>
   18a87:	49 89 c6             	mov    %rax,%r14
   18a8a:	4c 89 f7             	mov    %r14,%rdi
   18a8d:	e8 be c5 fe ff       	callq  5050 <_Unwind_Resume@plt>
   18a92:	0f 0b                	ud2    
   18a94:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   18a9b:	00 00 00 
   18a9e:	66 90                	xchg   %ax,%ax

0000000000018aa0 <std::sys_common::thread_info::set>:
   18aa0:	41 57                	push   %r15
   18aa2:	41 56                	push   %r14
   18aa4:	53                   	push   %rbx
   18aa5:	48 83 ec 50          	sub    $0x50,%rsp
   18aa9:	49 89 f6             	mov    %rsi,%r14
   18aac:	48 89 fb             	mov    %rdi,%rbx
   18aaf:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   18ab4:	66 66 66 64 48 8b 04 	data16 data16 data16 mov %fs:0x0,%rax
   18abb:	25 00 00 00 00 
   18ac0:	49 89 c7             	mov    %rax,%r15
   18ac3:	83 b8 a0 ff ff ff 01 	cmpl   $0x1,-0x60(%rax)
   18aca:	75 09                	jne    18ad5 <std::sys_common::thread_info::set+0x35>
   18acc:	48 8d 80 a8 ff ff ff 	lea    -0x58(%rax),%rax
   18ad3:	eb 0e                	jmp    18ae3 <std::sys_common::thread_info::set+0x43>
   18ad5:	e8 36 aa ff ff       	callq  13510 <std::thread::local::fast::Key<T>::try_initialize>
   18ada:	48 85 c0             	test   %rax,%rax
   18add:	0f 84 25 01 00 00    	je     18c08 <std::sys_common::thread_info::set+0x168>
   18ae3:	48 8b 08             	mov    (%rax),%rcx
   18ae6:	48 83 c1 01          	add    $0x1,%rcx
   18aea:	48 85 c9             	test   %rcx,%rcx
   18aed:	0f 8e b1 00 00 00    	jle    18ba4 <std::sys_common::thread_info::set+0x104>
   18af3:	48 83 78 08 02       	cmpq   $0x2,0x8(%rax)
   18af8:	0f 85 cb 00 00 00    	jne    18bc9 <std::sys_common::thread_info::set+0x129>
   18afe:	48 8b 43 10          	mov    0x10(%rbx),%rax
   18b02:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   18b07:	0f 10 03             	movups (%rbx),%xmm0
   18b0a:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   18b0f:	4c 89 74 24 28       	mov    %r14,0x28(%rsp)
   18b14:	4c 89 f8             	mov    %r15,%rax
   18b17:	41 83 bf a0 ff ff ff 	cmpl   $0x1,-0x60(%r15)
   18b1e:	01 
   18b1f:	75 09                	jne    18b2a <std::sys_common::thread_info::set+0x8a>
   18b21:	48 8d 98 a8 ff ff ff 	lea    -0x58(%rax),%rbx
   18b28:	eb 11                	jmp    18b3b <std::sys_common::thread_info::set+0x9b>
   18b2a:	e8 e1 a9 ff ff       	callq  13510 <std::thread::local::fast::Key<T>::try_initialize>
   18b2f:	48 89 c3             	mov    %rax,%rbx
   18b32:	48 85 c0             	test   %rax,%rax
   18b35:	0f 84 f2 00 00 00    	je     18c2d <std::sys_common::thread_info::set+0x18d>
   18b3b:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   18b40:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   18b45:	0f 28 44 24 10       	movaps 0x10(%rsp),%xmm0
   18b4a:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
   18b4f:	4c 89 74 24 48       	mov    %r14,0x48(%rsp)
   18b54:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   18b58:	0f 85 85 00 00 00    	jne    18be3 <std::sys_common::thread_info::set+0x143>
   18b5e:	48 c7 03 ff ff ff ff 	movq   $0xffffffffffffffff,(%rbx)
   18b65:	4c 8d 73 08          	lea    0x8(%rbx),%r14
   18b69:	83 7b 08 02          	cmpl   $0x2,0x8(%rbx)
   18b6d:	74 14                	je     18b83 <std::sys_common::thread_info::set+0xe3>
   18b6f:	48 8b 43 20          	mov    0x20(%rbx),%rax
   18b73:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   18b78:	75 09                	jne    18b83 <std::sys_common::thread_info::set+0xe3>
   18b7a:	48 8d 7b 20          	lea    0x20(%rbx),%rdi
   18b7e:	e8 0d 0d ff ff       	callq  9890 <alloc::sync::Arc<T>::drop_slow>
   18b83:	0f 28 44 24 30       	movaps 0x30(%rsp),%xmm0
   18b88:	0f 28 4c 24 40       	movaps 0x40(%rsp),%xmm1
   18b8d:	41 0f 11 4e 10       	movups %xmm1,0x10(%r14)
   18b92:	41 0f 11 06          	movups %xmm0,(%r14)
   18b96:	48 83 03 01          	addq   $0x1,(%rbx)
   18b9a:	48 83 c4 50          	add    $0x50,%rsp
   18b9e:	5b                   	pop    %rbx
   18b9f:	41 5e                	pop    %r14
   18ba1:	41 5f                	pop    %r15
   18ba3:	c3                   	retq   
   18ba4:	48 8d 3d fd e7 01 00 	lea    0x1e7fd(%rip),%rdi        # 373a8 <str.6+0x88>
   18bab:	48 8d 0d ce ac 02 00 	lea    0x2acce(%rip),%rcx        # 43880 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x328>
   18bb2:	4c 8d 05 27 b5 02 00 	lea    0x2b527(%rip),%r8        # 440e0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xb88>
   18bb9:	48 89 e2             	mov    %rsp,%rdx
   18bbc:	be 18 00 00 00       	mov    $0x18,%esi
   18bc1:	ff 15 21 d0 02 00    	callq  *0x2d021(%rip)        # 45be8 <_GLOBAL_OFFSET_TABLE_+0x258>
   18bc7:	eb 62                	jmp    18c2b <std::sys_common::thread_info::set+0x18b>
   18bc9:	48 8d 3d a9 f3 01 00 	lea    0x1f3a9(%rip),%rdi        # 37f79 <str.6+0xc59>
   18bd0:	48 8d 15 21 b5 02 00 	lea    0x2b521(%rip),%rdx        # 440f8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xba0>
   18bd7:	be 26 00 00 00       	mov    $0x26,%esi
   18bdc:	e8 2f 18 00 00       	callq  1a410 <std::panicking::begin_panic>
   18be1:	eb 48                	jmp    18c2b <std::sys_common::thread_info::set+0x18b>
   18be3:	48 8d 3d e6 d6 01 00 	lea    0x1d6e6(%rip),%rdi        # 362d0 <_fini+0x124c>
   18bea:	48 8d 0d 0f ac 02 00 	lea    0x2ac0f(%rip),%rcx        # 43800 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2a8>
   18bf1:	4c 8d 05 18 b5 02 00 	lea    0x2b518(%rip),%r8        # 44110 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xbb8>
   18bf8:	48 89 e2             	mov    %rsp,%rdx
   18bfb:	be 10 00 00 00       	mov    $0x10,%esi
   18c00:	ff 15 e2 cf 02 00    	callq  *0x2cfe2(%rip)        # 45be8 <_GLOBAL_OFFSET_TABLE_+0x258>
   18c06:	eb 23                	jmp    18c2b <std::sys_common::thread_info::set+0x18b>
   18c08:	48 8d 3d 3f ec 01 00 	lea    0x1ec3f(%rip),%rdi        # 3784e <str.6+0x52e>
   18c0f:	48 8d 0d 0a ac 02 00 	lea    0x2ac0a(%rip),%rcx        # 43820 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2c8>
   18c16:	4c 8d 05 d3 ae 02 00 	lea    0x2aed3(%rip),%r8        # 43af0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x598>
   18c1d:	48 89 e2             	mov    %rsp,%rdx
   18c20:	be 46 00 00 00       	mov    $0x46,%esi
   18c25:	ff 15 bd cf 02 00    	callq  *0x2cfbd(%rip)        # 45be8 <_GLOBAL_OFFSET_TABLE_+0x258>
   18c2b:	0f 0b                	ud2    
   18c2d:	f0 49 83 2e 01       	lock subq $0x1,(%r14)
   18c32:	75 0a                	jne    18c3e <std::sys_common::thread_info::set+0x19e>
   18c34:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
   18c39:	e8 52 0c ff ff       	callq  9890 <alloc::sync::Arc<T>::drop_slow>
   18c3e:	48 8d 3d 09 ec 01 00 	lea    0x1ec09(%rip),%rdi        # 3784e <str.6+0x52e>
   18c45:	48 8d 0d d4 ab 02 00 	lea    0x2abd4(%rip),%rcx        # 43820 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2c8>
   18c4c:	4c 8d 05 9d ae 02 00 	lea    0x2ae9d(%rip),%r8        # 43af0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x598>
   18c53:	48 89 e2             	mov    %rsp,%rdx
   18c56:	be 46 00 00 00       	mov    $0x46,%esi
   18c5b:	ff 15 87 cf 02 00    	callq  *0x2cf87(%rip)        # 45be8 <_GLOBAL_OFFSET_TABLE_+0x258>
   18c61:	0f 0b                	ud2    
   18c63:	48 89 c3             	mov    %rax,%rbx
   18c66:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
   18c6b:	e8 b0 d4 fe ff       	callq  6120 <core::ptr::drop_in_place>
   18c70:	eb 1c                	jmp    18c8e <std::sys_common::thread_info::set+0x1ee>
   18c72:	48 89 c3             	mov    %rax,%rbx
   18c75:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   18c7a:	e8 81 db fe ff       	callq  6800 <core::ptr::drop_in_place>
   18c7f:	eb 0d                	jmp    18c8e <std::sys_common::thread_info::set+0x1ee>
   18c81:	48 89 c3             	mov    %rax,%rbx
   18c84:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   18c89:	e8 f2 d7 fe ff       	callq  6480 <core::ptr::drop_in_place>
   18c8e:	48 89 df             	mov    %rbx,%rdi
   18c91:	e8 ba c3 fe ff       	callq  5050 <_Unwind_Resume@plt>
   18c96:	0f 0b                	ud2    
   18c98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   18c9f:	00 

0000000000018ca0 <std::sys_common::thread_local_dtor::register_dtor_fallback>:
   18ca0:	55                   	push   %rbp
   18ca1:	41 57                	push   %r15
   18ca3:	41 56                	push   %r14
   18ca5:	41 54                	push   %r12
   18ca7:	53                   	push   %rbx
   18ca8:	48 83 ec 70          	sub    $0x70,%rsp
   18cac:	49 89 f6             	mov    %rsi,%r14
   18caf:	49 89 ff             	mov    %rdi,%r15
   18cb2:	48 8b 3d 57 d3 02 00 	mov    0x2d357(%rip),%rdi        # 46010 <std::sys_common::thread_local_dtor::register_dtor_fallback::DTORS>
   18cb9:	48 85 ff             	test   %rdi,%rdi
   18cbc:	0f 85 83 00 00 00    	jne    18d45 <std::sys_common::thread_local_dtor::register_dtor_fallback+0xa5>
   18cc2:	48 8b 35 4f d3 02 00 	mov    0x2d34f(%rip),%rsi        # 46018 <std::sys_common::thread_local_dtor::register_dtor_fallback::DTORS+0x8>
   18cc9:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%rsp)
   18cd0:	00 
   18cd1:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   18cd6:	ff 15 54 d1 02 00    	callq  *0x2d154(%rip)        # 45e30 <pthread_key_create@GLIBC_2.2.5>
   18cdc:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   18ce0:	85 c0                	test   %eax,%eax
   18ce2:	0f 85 a5 02 00 00    	jne    18f8d <std::sys_common::thread_local_dtor::register_dtor_fallback+0x2ed>
   18ce8:	8b 5c 24 08          	mov    0x8(%rsp),%ebx
   18cec:	85 db                	test   %ebx,%ebx
   18cee:	75 3a                	jne    18d2a <std::sys_common::thread_local_dtor::register_dtor_fallback+0x8a>
   18cf0:	48 8b 35 21 d3 02 00 	mov    0x2d321(%rip),%rsi        # 46018 <std::sys_common::thread_local_dtor::register_dtor_fallback::DTORS+0x8>
   18cf7:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%rsp)
   18cfe:	00 
   18cff:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   18d04:	ff 15 26 d1 02 00    	callq  *0x2d126(%rip)        # 45e30 <pthread_key_create@GLIBC_2.2.5>
   18d0a:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   18d0e:	85 c0                	test   %eax,%eax
   18d10:	0f 85 77 02 00 00    	jne    18f8d <std::sys_common::thread_local_dtor::register_dtor_fallback+0x2ed>
   18d16:	8b 5c 24 08          	mov    0x8(%rsp),%ebx
   18d1a:	31 ff                	xor    %edi,%edi
   18d1c:	ff 15 0e d2 02 00    	callq  *0x2d20e(%rip)        # 45f30 <pthread_key_delete@GLIBC_2.2.5>
   18d22:	85 db                	test   %ebx,%ebx
   18d24:	0f 84 0d 03 00 00    	je     19037 <std::sys_common::thread_local_dtor::register_dtor_fallback+0x397>
   18d2a:	89 df                	mov    %ebx,%edi
   18d2c:	31 c0                	xor    %eax,%eax
   18d2e:	f0 48 0f b1 3d d9 d2 	lock cmpxchg %rdi,0x2d2d9(%rip)        # 46010 <std::sys_common::thread_local_dtor::register_dtor_fallback::DTORS>
   18d35:	02 00 
   18d37:	74 0c                	je     18d45 <std::sys_common::thread_local_dtor::register_dtor_fallback+0xa5>
   18d39:	48 89 c3             	mov    %rax,%rbx
   18d3c:	ff 15 ee d1 02 00    	callq  *0x2d1ee(%rip)        # 45f30 <pthread_key_delete@GLIBC_2.2.5>
   18d42:	48 89 df             	mov    %rbx,%rdi
   18d45:	ff 15 1d d0 02 00    	callq  *0x2d01d(%rip)        # 45d68 <pthread_getspecific@GLIBC_2.2.5>
   18d4b:	48 85 c0             	test   %rax,%rax
   18d4e:	74 15                	je     18d65 <std::sys_common::thread_local_dtor::register_dtor_fallback+0xc5>
   18d50:	48 8b 3d b9 d2 02 00 	mov    0x2d2b9(%rip),%rdi        # 46010 <std::sys_common::thread_local_dtor::register_dtor_fallback::DTORS>
   18d57:	48 85 ff             	test   %rdi,%rdi
   18d5a:	0f 85 5e 01 00 00    	jne    18ebe <std::sys_common::thread_local_dtor::register_dtor_fallback+0x21e>
   18d60:	e9 d6 00 00 00       	jmpq   18e3b <std::sys_common::thread_local_dtor::register_dtor_fallback+0x19b>
   18d65:	bf 18 00 00 00       	mov    $0x18,%edi
   18d6a:	be 08 00 00 00       	mov    $0x8,%esi
   18d6f:	ff 15 13 ce 02 00    	callq  *0x2ce13(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   18d75:	48 85 c0             	test   %rax,%rax
   18d78:	0f 84 a7 02 00 00    	je     19025 <std::sys_common::thread_local_dtor::register_dtor_fallback+0x385>
   18d7e:	48 89 c3             	mov    %rax,%rbx
   18d81:	48 c7 00 08 00 00 00 	movq   $0x8,(%rax)
   18d88:	0f 57 c0             	xorps  %xmm0,%xmm0
   18d8b:	0f 11 40 08          	movups %xmm0,0x8(%rax)
   18d8f:	48 8b 3d 7a d2 02 00 	mov    0x2d27a(%rip),%rdi        # 46010 <std::sys_common::thread_local_dtor::register_dtor_fallback::DTORS>
   18d96:	48 85 ff             	test   %rdi,%rdi
   18d99:	0f 85 83 00 00 00    	jne    18e22 <std::sys_common::thread_local_dtor::register_dtor_fallback+0x182>
   18d9f:	48 8b 35 72 d2 02 00 	mov    0x2d272(%rip),%rsi        # 46018 <std::sys_common::thread_local_dtor::register_dtor_fallback::DTORS+0x8>
   18da6:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%rsp)
   18dad:	00 
   18dae:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   18db3:	ff 15 77 d0 02 00    	callq  *0x2d077(%rip)        # 45e30 <pthread_key_create@GLIBC_2.2.5>
   18db9:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   18dbd:	85 c0                	test   %eax,%eax
   18dbf:	0f 85 c8 01 00 00    	jne    18f8d <std::sys_common::thread_local_dtor::register_dtor_fallback+0x2ed>
   18dc5:	8b 6c 24 08          	mov    0x8(%rsp),%ebp
   18dc9:	85 ed                	test   %ebp,%ebp
   18dcb:	75 3a                	jne    18e07 <std::sys_common::thread_local_dtor::register_dtor_fallback+0x167>
   18dcd:	48 8b 35 44 d2 02 00 	mov    0x2d244(%rip),%rsi        # 46018 <std::sys_common::thread_local_dtor::register_dtor_fallback::DTORS+0x8>
   18dd4:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%rsp)
   18ddb:	00 
   18ddc:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   18de1:	ff 15 49 d0 02 00    	callq  *0x2d049(%rip)        # 45e30 <pthread_key_create@GLIBC_2.2.5>
   18de7:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   18deb:	85 c0                	test   %eax,%eax
   18ded:	0f 85 9a 01 00 00    	jne    18f8d <std::sys_common::thread_local_dtor::register_dtor_fallback+0x2ed>
   18df3:	8b 6c 24 08          	mov    0x8(%rsp),%ebp
   18df7:	31 ff                	xor    %edi,%edi
   18df9:	ff 15 31 d1 02 00    	callq  *0x2d131(%rip)        # 45f30 <pthread_key_delete@GLIBC_2.2.5>
   18dff:	85 ed                	test   %ebp,%ebp
   18e01:	0f 84 30 02 00 00    	je     19037 <std::sys_common::thread_local_dtor::register_dtor_fallback+0x397>
   18e07:	89 ef                	mov    %ebp,%edi
   18e09:	31 c0                	xor    %eax,%eax
   18e0b:	f0 48 0f b1 3d fc d1 	lock cmpxchg %rdi,0x2d1fc(%rip)        # 46010 <std::sys_common::thread_local_dtor::register_dtor_fallback::DTORS>
   18e12:	02 00 
   18e14:	74 0c                	je     18e22 <std::sys_common::thread_local_dtor::register_dtor_fallback+0x182>
   18e16:	49 89 c4             	mov    %rax,%r12
   18e19:	ff 15 11 d1 02 00    	callq  *0x2d111(%rip)        # 45f30 <pthread_key_delete@GLIBC_2.2.5>
   18e1f:	4c 89 e7             	mov    %r12,%rdi
   18e22:	48 89 de             	mov    %rbx,%rsi
   18e25:	ff 15 7d cd 02 00    	callq  *0x2cd7d(%rip)        # 45ba8 <pthread_setspecific@GLIBC_2.2.5>
   18e2b:	48 8b 3d de d1 02 00 	mov    0x2d1de(%rip),%rdi        # 46010 <std::sys_common::thread_local_dtor::register_dtor_fallback::DTORS>
   18e32:	48 85 ff             	test   %rdi,%rdi
   18e35:	0f 85 83 00 00 00    	jne    18ebe <std::sys_common::thread_local_dtor::register_dtor_fallback+0x21e>
   18e3b:	48 8b 35 d6 d1 02 00 	mov    0x2d1d6(%rip),%rsi        # 46018 <std::sys_common::thread_local_dtor::register_dtor_fallback::DTORS+0x8>
   18e42:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%rsp)
   18e49:	00 
   18e4a:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   18e4f:	ff 15 db cf 02 00    	callq  *0x2cfdb(%rip)        # 45e30 <pthread_key_create@GLIBC_2.2.5>
   18e55:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   18e59:	85 c0                	test   %eax,%eax
   18e5b:	0f 85 2c 01 00 00    	jne    18f8d <std::sys_common::thread_local_dtor::register_dtor_fallback+0x2ed>
   18e61:	8b 5c 24 08          	mov    0x8(%rsp),%ebx
   18e65:	85 db                	test   %ebx,%ebx
   18e67:	75 3a                	jne    18ea3 <std::sys_common::thread_local_dtor::register_dtor_fallback+0x203>
   18e69:	48 8b 35 a8 d1 02 00 	mov    0x2d1a8(%rip),%rsi        # 46018 <std::sys_common::thread_local_dtor::register_dtor_fallback::DTORS+0x8>
   18e70:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%rsp)
   18e77:	00 
   18e78:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   18e7d:	ff 15 ad cf 02 00    	callq  *0x2cfad(%rip)        # 45e30 <pthread_key_create@GLIBC_2.2.5>
   18e83:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   18e87:	85 c0                	test   %eax,%eax
   18e89:	0f 85 fe 00 00 00    	jne    18f8d <std::sys_common::thread_local_dtor::register_dtor_fallback+0x2ed>
   18e8f:	8b 5c 24 08          	mov    0x8(%rsp),%ebx
   18e93:	31 ff                	xor    %edi,%edi
   18e95:	ff 15 95 d0 02 00    	callq  *0x2d095(%rip)        # 45f30 <pthread_key_delete@GLIBC_2.2.5>
   18e9b:	85 db                	test   %ebx,%ebx
   18e9d:	0f 84 94 01 00 00    	je     19037 <std::sys_common::thread_local_dtor::register_dtor_fallback+0x397>
   18ea3:	89 df                	mov    %ebx,%edi
   18ea5:	31 c0                	xor    %eax,%eax
   18ea7:	f0 48 0f b1 3d 60 d1 	lock cmpxchg %rdi,0x2d160(%rip)        # 46010 <std::sys_common::thread_local_dtor::register_dtor_fallback::DTORS>
   18eae:	02 00 
   18eb0:	74 0c                	je     18ebe <std::sys_common::thread_local_dtor::register_dtor_fallback+0x21e>
   18eb2:	48 89 c3             	mov    %rax,%rbx
   18eb5:	ff 15 75 d0 02 00    	callq  *0x2d075(%rip)        # 45f30 <pthread_key_delete@GLIBC_2.2.5>
   18ebb:	48 89 df             	mov    %rbx,%rdi
   18ebe:	ff 15 a4 ce 02 00    	callq  *0x2cea4(%rip)        # 45d68 <pthread_getspecific@GLIBC_2.2.5>
   18ec4:	48 89 c3             	mov    %rax,%rbx
   18ec7:	48 8b 70 10          	mov    0x10(%rax),%rsi
   18ecb:	48 3b 70 08          	cmp    0x8(%rax),%rsi
   18ecf:	75 64                	jne    18f35 <std::sys_common::thread_local_dtor::register_dtor_fallback+0x295>
   18ed1:	48 89 f1             	mov    %rsi,%rcx
   18ed4:	48 ff c1             	inc    %rcx
   18ed7:	0f 84 30 01 00 00    	je     1900d <std::sys_common::thread_local_dtor::register_dtor_fallback+0x36d>
   18edd:	48 8d 04 36          	lea    (%rsi,%rsi,1),%rax
   18ee1:	48 39 c8             	cmp    %rcx,%rax
   18ee4:	48 0f 47 c8          	cmova  %rax,%rcx
   18ee8:	48 83 f9 04          	cmp    $0x4,%rcx
   18eec:	b8 04 00 00 00       	mov    $0x4,%eax
   18ef1:	48 0f 47 c1          	cmova  %rcx,%rax
   18ef5:	ba 10 00 00 00       	mov    $0x10,%edx
   18efa:	31 c9                	xor    %ecx,%ecx
   18efc:	48 f7 e2             	mul    %rdx
   18eff:	49 89 c4             	mov    %rax,%r12
   18f02:	0f 90 c0             	seto   %al
   18f05:	0f 91 c1             	setno  %cl
   18f08:	48 c1 e1 03          	shl    $0x3,%rcx
   18f0c:	48 85 f6             	test   %rsi,%rsi
   18f0f:	74 29                	je     18f3a <std::sys_common::thread_local_dtor::register_dtor_fallback+0x29a>
   18f11:	84 c0                	test   %al,%al
   18f13:	0f 85 f4 00 00 00    	jne    1900d <std::sys_common::thread_local_dtor::register_dtor_fallback+0x36d>
   18f19:	48 8b 3b             	mov    (%rbx),%rdi
   18f1c:	48 85 ff             	test   %rdi,%rdi
   18f1f:	74 21                	je     18f42 <std::sys_common::thread_local_dtor::register_dtor_fallback+0x2a2>
   18f21:	48 c1 e6 04          	shl    $0x4,%rsi
   18f25:	74 1b                	je     18f42 <std::sys_common::thread_local_dtor::register_dtor_fallback+0x2a2>
   18f27:	48 89 ca             	mov    %rcx,%rdx
   18f2a:	4c 89 e1             	mov    %r12,%rcx
   18f2d:	ff 15 45 d0 02 00    	callq  *0x2d045(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
   18f33:	eb 1e                	jmp    18f53 <std::sys_common::thread_local_dtor::register_dtor_fallback+0x2b3>
   18f35:	48 8b 0b             	mov    (%rbx),%rcx
   18f38:	eb 34                	jmp    18f6e <std::sys_common::thread_local_dtor::register_dtor_fallback+0x2ce>
   18f3a:	84 c0                	test   %al,%al
   18f3c:	0f 85 cb 00 00 00    	jne    1900d <std::sys_common::thread_local_dtor::register_dtor_fallback+0x36d>
   18f42:	4d 85 e4             	test   %r12,%r12
   18f45:	74 0f                	je     18f56 <std::sys_common::thread_local_dtor::register_dtor_fallback+0x2b6>
   18f47:	4c 89 e7             	mov    %r12,%rdi
   18f4a:	48 89 ce             	mov    %rcx,%rsi
   18f4d:	ff 15 35 cc 02 00    	callq  *0x2cc35(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   18f53:	48 89 c1             	mov    %rax,%rcx
   18f56:	48 85 c9             	test   %rcx,%rcx
   18f59:	0f 84 b6 00 00 00    	je     19015 <std::sys_common::thread_local_dtor::register_dtor_fallback+0x375>
   18f5f:	48 89 0b             	mov    %rcx,(%rbx)
   18f62:	49 c1 ec 04          	shr    $0x4,%r12
   18f66:	4c 89 63 08          	mov    %r12,0x8(%rbx)
   18f6a:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   18f6e:	48 c1 e6 04          	shl    $0x4,%rsi
   18f72:	4c 89 3c 31          	mov    %r15,(%rcx,%rsi,1)
   18f76:	4c 89 74 31 08       	mov    %r14,0x8(%rcx,%rsi,1)
   18f7b:	48 83 43 10 01       	addq   $0x1,0x10(%rbx)
   18f80:	48 83 c4 70          	add    $0x70,%rsp
   18f84:	5b                   	pop    %rbx
   18f85:	41 5c                	pop    %r12
   18f87:	41 5e                	pop    %r14
   18f89:	41 5f                	pop    %r15
   18f8b:	5d                   	pop    %rbp
   18f8c:	c3                   	retq   
   18f8d:	48 8d 44 24 0c       	lea    0xc(%rsp),%rax
   18f92:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   18f97:	48 8d 05 16 e8 01 00 	lea    0x1e816(%rip),%rax        # 377b4 <str.6+0x494>
   18f9e:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   18fa3:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   18fa8:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   18fad:	48 8d 05 1c c7 fe ff 	lea    -0x138e4(%rip),%rax        # 56d0 <<&T as core::fmt::Debug>::fmt>
   18fb4:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   18fb9:	48 8d 4c 24 18       	lea    0x18(%rsp),%rcx
   18fbe:	48 89 4c 24 60       	mov    %rcx,0x60(%rsp)
   18fc3:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   18fc8:	48 8d 05 f1 a6 02 00 	lea    0x2a6f1(%rip),%rax        # 436c0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x168>
   18fcf:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   18fd4:	48 c7 44 24 28 03 00 	movq   $0x3,0x28(%rsp)
   18fdb:	00 00 
   18fdd:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   18fe4:	00 00 
   18fe6:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
   18feb:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   18ff0:	48 c7 44 24 48 02 00 	movq   $0x2,0x48(%rsp)
   18ff7:	00 00 
   18ff9:	48 8d 35 70 b6 02 00 	lea    0x2b670(%rip),%rsi        # 44670 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1118>
   19000:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   19005:	ff 15 d5 cf 02 00    	callq  *0x2cfd5(%rip)        # 45fe0 <_GLOBAL_OFFSET_TABLE_+0x650>
   1900b:	0f 0b                	ud2    
   1900d:	ff 15 d5 ca 02 00    	callq  *0x2cad5(%rip)        # 45ae8 <_GLOBAL_OFFSET_TABLE_+0x158>
   19013:	0f 0b                	ud2    
   19015:	be 08 00 00 00       	mov    $0x8,%esi
   1901a:	4c 89 e7             	mov    %r12,%rdi
   1901d:	ff 15 05 cb 02 00    	callq  *0x2cb05(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   19023:	0f 0b                	ud2    
   19025:	bf 18 00 00 00       	mov    $0x18,%edi
   1902a:	be 08 00 00 00       	mov    $0x8,%esi
   1902f:	ff 15 f3 ca 02 00    	callq  *0x2caf3(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   19035:	0f 0b                	ud2    
   19037:	48 8d 05 ea b0 02 00 	lea    0x2b0ea(%rip),%rax        # 44128 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xbd0>
   1903e:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   19043:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
   1904a:	00 00 
   1904c:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   19053:	00 00 
   19055:	48 8d 05 fc e1 01 00 	lea    0x1e1fc(%rip),%rax        # 37258 <_fini+0x21d4>
   1905c:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   19061:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
   19068:	00 00 
   1906a:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   1906f:	e8 fc 04 00 00       	callq  19570 <std::sys_common::util::abort>
   19074:	0f 0b                	ud2    
   19076:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1907d:	00 00 00 

0000000000019080 <std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors>:
   19080:	55                   	push   %rbp
   19081:	41 57                	push   %r15
   19083:	41 56                	push   %r14
   19085:	41 55                	push   %r13
   19087:	41 54                	push   %r12
   19089:	53                   	push   %rbx
   1908a:	48 83 ec 68          	sub    $0x68,%rsp
   1908e:	48 85 ff             	test   %rdi,%rdi
   19091:	0f 84 65 01 00 00    	je     191fc <std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors+0x17c>
   19097:	49 89 fc             	mov    %rdi,%r12
   1909a:	e9 28 00 00 00       	jmpq   190c7 <std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors+0x47>
   1909f:	90                   	nop
   190a0:	31 f6                	xor    %esi,%esi
   190a2:	ff 15 00 cb 02 00    	callq  *0x2cb00(%rip)        # 45ba8 <pthread_setspecific@GLIBC_2.2.5>
   190a8:	be 18 00 00 00       	mov    $0x18,%esi
   190ad:	ba 08 00 00 00       	mov    $0x8,%edx
   190b2:	4c 89 e7             	mov    %r12,%rdi
   190b5:	ff 15 45 cb 02 00    	callq  *0x2cb45(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   190bb:	49 89 dc             	mov    %rbx,%r12
   190be:	48 85 db             	test   %rbx,%rbx
   190c1:	0f 84 35 01 00 00    	je     191fc <std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors+0x17c>
   190c7:	4d 8b 3c 24          	mov    (%r12),%r15
   190cb:	4d 8b 6c 24 08       	mov    0x8(%r12),%r13
   190d0:	4d 8b 74 24 10       	mov    0x10(%r12),%r14
   190d5:	49 c1 e6 04          	shl    $0x4,%r14
   190d9:	4b 8d 2c 37          	lea    (%r15,%r14,1),%rbp
   190dd:	4c 89 7c 24 08       	mov    %r15,0x8(%rsp)
   190e2:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
   190e7:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
   190ec:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   190f1:	4c 89 fb             	mov    %r15,%rbx
   190f4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   190fb:	00 00 00 
   190fe:	66 90                	xchg   %ax,%ax
   19100:	4d 85 f6             	test   %r14,%r14
   19103:	74 22                	je     19127 <std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors+0xa7>
   19105:	48 8b 43 08          	mov    0x8(%rbx),%rax
   19109:	48 85 c0             	test   %rax,%rax
   1910c:	74 12                	je     19120 <std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors+0xa0>
   1910e:	48 8b 3b             	mov    (%rbx),%rdi
   19111:	48 83 c3 10          	add    $0x10,%rbx
   19115:	49 83 c6 f0          	add    $0xfffffffffffffff0,%r14
   19119:	ff d0                	callq  *%rax
   1911b:	e9 e0 ff ff ff       	jmpq   19100 <std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors+0x80>
   19120:	48 83 c3 10          	add    $0x10,%rbx
   19124:	48 89 dd             	mov    %rbx,%rbp
   19127:	48 89 6c 24 18       	mov    %rbp,0x18(%rsp)
   1912c:	4d 85 ed             	test   %r13,%r13
   1912f:	74 17                	je     19148 <std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors+0xc8>
   19131:	49 c1 e5 04          	shl    $0x4,%r13
   19135:	74 11                	je     19148 <std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors+0xc8>
   19137:	ba 08 00 00 00       	mov    $0x8,%edx
   1913c:	4c 89 ff             	mov    %r15,%rdi
   1913f:	4c 89 ee             	mov    %r13,%rsi
   19142:	ff 15 b8 ca 02 00    	callq  *0x2cab8(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   19148:	48 8b 05 c1 ce 02 00 	mov    0x2cec1(%rip),%rax        # 46010 <std::sys_common::thread_local_dtor::register_dtor_fallback::DTORS>
   1914f:	48 85 c0             	test   %rax,%rax
   19152:	75 0d                	jne    19161 <std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors+0xe1>
   19154:	48 8d 3d b5 ce 02 00 	lea    0x2ceb5(%rip),%rdi        # 46010 <std::sys_common::thread_local_dtor::register_dtor_fallback::DTORS>
   1915b:	ff 15 37 ca 02 00    	callq  *0x2ca37(%rip)        # 45b98 <_GLOBAL_OFFSET_TABLE_+0x208>
   19161:	89 c7                	mov    %eax,%edi
   19163:	ff 15 ff cb 02 00    	callq  *0x2cbff(%rip)        # 45d68 <pthread_getspecific@GLIBC_2.2.5>
   19169:	48 89 c3             	mov    %rax,%rbx
   1916c:	48 8b 3d 9d ce 02 00 	mov    0x2ce9d(%rip),%rdi        # 46010 <std::sys_common::thread_local_dtor::register_dtor_fallback::DTORS>
   19173:	48 85 ff             	test   %rdi,%rdi
   19176:	0f 85 24 ff ff ff    	jne    190a0 <std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors+0x20>
   1917c:	48 8b 35 95 ce 02 00 	mov    0x2ce95(%rip),%rsi        # 46018 <std::sys_common::thread_local_dtor::register_dtor_fallback::DTORS+0x8>
   19183:	c7 04 24 00 00 00 00 	movl   $0x0,(%rsp)
   1918a:	48 89 e7             	mov    %rsp,%rdi
   1918d:	ff 15 9d cc 02 00    	callq  *0x2cc9d(%rip)        # 45e30 <pthread_key_create@GLIBC_2.2.5>
   19193:	89 44 24 04          	mov    %eax,0x4(%rsp)
   19197:	85 c0                	test   %eax,%eax
   19199:	75 70                	jne    1920b <std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors+0x18b>
   1919b:	8b 2c 24             	mov    (%rsp),%ebp
   1919e:	85 ed                	test   %ebp,%ebp
   191a0:	75 36                	jne    191d8 <std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors+0x158>
   191a2:	48 8b 35 6f ce 02 00 	mov    0x2ce6f(%rip),%rsi        # 46018 <std::sys_common::thread_local_dtor::register_dtor_fallback::DTORS+0x8>
   191a9:	c7 04 24 00 00 00 00 	movl   $0x0,(%rsp)
   191b0:	48 89 e7             	mov    %rsp,%rdi
   191b3:	ff 15 77 cc 02 00    	callq  *0x2cc77(%rip)        # 45e30 <pthread_key_create@GLIBC_2.2.5>
   191b9:	89 44 24 04          	mov    %eax,0x4(%rsp)
   191bd:	85 c0                	test   %eax,%eax
   191bf:	0f 85 c9 00 00 00    	jne    1928e <std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors+0x20e>
   191c5:	8b 2c 24             	mov    (%rsp),%ebp
   191c8:	31 ff                	xor    %edi,%edi
   191ca:	ff 15 60 cd 02 00    	callq  *0x2cd60(%rip)        # 45f30 <pthread_key_delete@GLIBC_2.2.5>
   191d0:	85 ed                	test   %ebp,%ebp
   191d2:	0f 84 36 01 00 00    	je     1930e <std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors+0x28e>
   191d8:	89 ef                	mov    %ebp,%edi
   191da:	31 c0                	xor    %eax,%eax
   191dc:	f0 48 0f b1 3d 2b ce 	lock cmpxchg %rdi,0x2ce2b(%rip)        # 46010 <std::sys_common::thread_local_dtor::register_dtor_fallback::DTORS>
   191e3:	02 00 
   191e5:	0f 84 b5 fe ff ff    	je     190a0 <std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors+0x20>
   191eb:	49 89 c5             	mov    %rax,%r13
   191ee:	ff 15 3c cd 02 00    	callq  *0x2cd3c(%rip)        # 45f30 <pthread_key_delete@GLIBC_2.2.5>
   191f4:	4c 89 ef             	mov    %r13,%rdi
   191f7:	e9 a4 fe ff ff       	jmpq   190a0 <std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors+0x20>
   191fc:	48 83 c4 68          	add    $0x68,%rsp
   19200:	5b                   	pop    %rbx
   19201:	41 5c                	pop    %r12
   19203:	41 5d                	pop    %r13
   19205:	41 5e                	pop    %r14
   19207:	41 5f                	pop    %r15
   19209:	5d                   	pop    %rbp
   1920a:	c3                   	retq   
   1920b:	48 8d 44 24 04       	lea    0x4(%rsp),%rax
   19210:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   19215:	48 8d 05 98 e5 01 00 	lea    0x1e598(%rip),%rax        # 377b4 <str.6+0x494>
   1921c:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   19221:	48 8d 44 24 38       	lea    0x38(%rsp),%rax
   19226:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1922b:	48 8d 05 9e c4 fe ff 	lea    -0x13b62(%rip),%rax        # 56d0 <<&T as core::fmt::Debug>::fmt>
   19232:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   19237:	48 8d 4c 24 40       	lea    0x40(%rsp),%rcx
   1923c:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
   19241:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   19246:	48 8d 05 73 a4 02 00 	lea    0x2a473(%rip),%rax        # 436c0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x168>
   1924d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   19252:	48 c7 44 24 10 03 00 	movq   $0x3,0x10(%rsp)
   19259:	00 00 
   1925b:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   19262:	00 00 
   19264:	48 8d 44 24 48       	lea    0x48(%rsp),%rax
   19269:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1926e:	48 c7 44 24 30 02 00 	movq   $0x2,0x30(%rsp)
   19275:	00 00 
   19277:	48 8d 35 f2 b3 02 00 	lea    0x2b3f2(%rip),%rsi        # 44670 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1118>
   1927e:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   19283:	ff 15 57 cd 02 00    	callq  *0x2cd57(%rip)        # 45fe0 <_GLOBAL_OFFSET_TABLE_+0x650>
   19289:	e9 bd 00 00 00       	jmpq   1934b <std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors+0x2cb>
   1928e:	48 8d 44 24 04       	lea    0x4(%rsp),%rax
   19293:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   19298:	48 8d 05 15 e5 01 00 	lea    0x1e515(%rip),%rax        # 377b4 <str.6+0x494>
   1929f:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   192a4:	48 8d 44 24 38       	lea    0x38(%rsp),%rax
   192a9:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   192ae:	48 8d 05 1b c4 fe ff 	lea    -0x13be5(%rip),%rax        # 56d0 <<&T as core::fmt::Debug>::fmt>
   192b5:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   192ba:	48 8d 4c 24 40       	lea    0x40(%rsp),%rcx
   192bf:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
   192c4:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   192c9:	48 8d 05 f0 a3 02 00 	lea    0x2a3f0(%rip),%rax        # 436c0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x168>
   192d0:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   192d5:	48 c7 44 24 10 03 00 	movq   $0x3,0x10(%rsp)
   192dc:	00 00 
   192de:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   192e5:	00 00 
   192e7:	48 8d 44 24 48       	lea    0x48(%rsp),%rax
   192ec:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   192f1:	48 c7 44 24 30 02 00 	movq   $0x2,0x30(%rsp)
   192f8:	00 00 
   192fa:	48 8d 35 6f b3 02 00 	lea    0x2b36f(%rip),%rsi        # 44670 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1118>
   19301:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   19306:	ff 15 d4 cc 02 00    	callq  *0x2ccd4(%rip)        # 45fe0 <_GLOBAL_OFFSET_TABLE_+0x650>
   1930c:	eb 3d                	jmp    1934b <std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors+0x2cb>
   1930e:	48 8d 05 13 ae 02 00 	lea    0x2ae13(%rip),%rax        # 44128 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xbd0>
   19315:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1931a:	48 c7 44 24 10 01 00 	movq   $0x1,0x10(%rsp)
   19321:	00 00 
   19323:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   1932a:	00 00 
   1932c:	48 8d 05 25 df 01 00 	lea    0x1df25(%rip),%rax        # 37258 <_fini+0x21d4>
   19333:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   19338:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   1933f:	00 00 
   19341:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   19346:	e8 25 02 00 00       	callq  19570 <std::sys_common::util::abort>
   1934b:	0f 0b                	ud2    
   1934d:	48 89 c5             	mov    %rax,%rbp
   19350:	eb 17                	jmp    19369 <std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors+0x2e9>
   19352:	48 89 c5             	mov    %rax,%rbp
   19355:	eb 12                	jmp    19369 <std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors+0x2e9>
   19357:	48 89 c5             	mov    %rax,%rbp
   1935a:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   1935f:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   19364:	e8 07 d6 fe ff       	callq  6970 <core::ptr::drop_in_place>
   19369:	4c 89 e7             	mov    %r12,%rdi
   1936c:	e8 8f 05 ff ff       	callq  9900 <alloc::alloc::box_free>
   19371:	48 89 ef             	mov    %rbp,%rdi
   19374:	e8 d7 bc fe ff       	callq  5050 <_Unwind_Resume@plt>
   19379:	0f 0b                	ud2    
   1937b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000019380 <std::sys_common::thread_local_key::StaticKey::lazy_init>:
   19380:	55                   	push   %rbp
   19381:	53                   	push   %rbx
   19382:	48 83 ec 68          	sub    $0x68,%rsp
   19386:	48 89 fb             	mov    %rdi,%rbx
   19389:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   1938d:	c7 04 24 00 00 00 00 	movl   $0x0,(%rsp)
   19394:	48 89 e7             	mov    %rsp,%rdi
   19397:	ff 15 93 ca 02 00    	callq  *0x2ca93(%rip)        # 45e30 <pthread_key_create@GLIBC_2.2.5>
   1939d:	89 44 24 04          	mov    %eax,0x4(%rsp)
   193a1:	85 c0                	test   %eax,%eax
   193a3:	75 57                	jne    193fc <std::sys_common::thread_local_key::StaticKey::lazy_init+0x7c>
   193a5:	8b 2c 24             	mov    (%rsp),%ebp
   193a8:	85 ed                	test   %ebp,%ebp
   193aa:	75 2f                	jne    193db <std::sys_common::thread_local_key::StaticKey::lazy_init+0x5b>
   193ac:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   193b0:	c7 04 24 00 00 00 00 	movl   $0x0,(%rsp)
   193b7:	48 89 e7             	mov    %rsp,%rdi
   193ba:	ff 15 70 ca 02 00    	callq  *0x2ca70(%rip)        # 45e30 <pthread_key_create@GLIBC_2.2.5>
   193c0:	89 44 24 04          	mov    %eax,0x4(%rsp)
   193c4:	85 c0                	test   %eax,%eax
   193c6:	75 34                	jne    193fc <std::sys_common::thread_local_key::StaticKey::lazy_init+0x7c>
   193c8:	8b 2c 24             	mov    (%rsp),%ebp
   193cb:	31 ff                	xor    %edi,%edi
   193cd:	ff 15 5d cb 02 00    	callq  *0x2cb5d(%rip)        # 45f30 <pthread_key_delete@GLIBC_2.2.5>
   193d3:	85 ed                	test   %ebp,%ebp
   193d5:	0f 84 a1 00 00 00    	je     1947c <std::sys_common::thread_local_key::StaticKey::lazy_init+0xfc>
   193db:	89 ef                	mov    %ebp,%edi
   193dd:	31 c0                	xor    %eax,%eax
   193df:	f0 48 0f b1 3b       	lock cmpxchg %rdi,(%rbx)
   193e4:	74 0c                	je     193f2 <std::sys_common::thread_local_key::StaticKey::lazy_init+0x72>
   193e6:	48 89 c3             	mov    %rax,%rbx
   193e9:	ff 15 41 cb 02 00    	callq  *0x2cb41(%rip)        # 45f30 <pthread_key_delete@GLIBC_2.2.5>
   193ef:	48 89 df             	mov    %rbx,%rdi
   193f2:	48 89 f8             	mov    %rdi,%rax
   193f5:	48 83 c4 68          	add    $0x68,%rsp
   193f9:	5b                   	pop    %rbx
   193fa:	5d                   	pop    %rbp
   193fb:	c3                   	retq   
   193fc:	48 8d 44 24 04       	lea    0x4(%rsp),%rax
   19401:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   19406:	48 8d 05 a7 e3 01 00 	lea    0x1e3a7(%rip),%rax        # 377b4 <str.6+0x494>
   1940d:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   19412:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   19417:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1941c:	48 8d 05 ad c2 fe ff 	lea    -0x13d53(%rip),%rax        # 56d0 <<&T as core::fmt::Debug>::fmt>
   19423:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   19428:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
   1942d:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
   19432:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   19437:	48 8d 05 82 a2 02 00 	lea    0x2a282(%rip),%rax        # 436c0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x168>
   1943e:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   19443:	48 c7 44 24 20 03 00 	movq   $0x3,0x20(%rsp)
   1944a:	00 00 
   1944c:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   19453:	00 00 
   19455:	48 8d 44 24 48       	lea    0x48(%rsp),%rax
   1945a:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1945f:	48 c7 44 24 40 02 00 	movq   $0x2,0x40(%rsp)
   19466:	00 00 
   19468:	48 8d 35 01 b2 02 00 	lea    0x2b201(%rip),%rsi        # 44670 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1118>
   1946f:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   19474:	ff 15 66 cb 02 00    	callq  *0x2cb66(%rip)        # 45fe0 <_GLOBAL_OFFSET_TABLE_+0x650>
   1947a:	0f 0b                	ud2    
   1947c:	48 8d 05 a5 ac 02 00 	lea    0x2aca5(%rip),%rax        # 44128 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xbd0>
   19483:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   19488:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
   1948f:	00 00 
   19491:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   19498:	00 00 
   1949a:	48 8d 05 b7 dd 01 00 	lea    0x1ddb7(%rip),%rax        # 37258 <_fini+0x21d4>
   194a1:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   194a6:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   194ad:	00 00 
   194af:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   194b4:	e8 b7 00 00 00       	callq  19570 <std::sys_common::util::abort>
   194b9:	0f 0b                	ud2    
   194bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000194c0 <std::sys_common::util::dumb_print>:
   194c0:	41 56                	push   %r14
   194c2:	53                   	push   %rbx
   194c3:	48 83 ec 48          	sub    $0x48,%rsp
   194c7:	0f 10 07             	movups (%rdi),%xmm0
   194ca:	0f 10 4f 10          	movups 0x10(%rdi),%xmm1
   194ce:	0f 10 57 20          	movups 0x20(%rdi),%xmm2
   194d2:	0f 29 54 24 30       	movaps %xmm2,0x30(%rsp)
   194d7:	0f 29 4c 24 20       	movaps %xmm1,0x20(%rsp)
   194dc:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   194e1:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   194e6:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   194eb:	e8 40 cb ff ff       	callq  16030 <std::io::Write::write_fmt>
   194f0:	48 89 d3             	mov    %rdx,%rbx
   194f3:	3c 03                	cmp    $0x3,%al
   194f5:	77 0c                	ja     19503 <std::sys_common::util::dumb_print+0x43>
   194f7:	3c 02                	cmp    $0x2,%al
   194f9:	74 08                	je     19503 <std::sys_common::util::dumb_print+0x43>
   194fb:	48 83 c4 48          	add    $0x48,%rsp
   194ff:	5b                   	pop    %rbx
   19500:	41 5e                	pop    %r14
   19502:	c3                   	retq   
   19503:	48 8b 3b             	mov    (%rbx),%rdi
   19506:	48 8b 43 08          	mov    0x8(%rbx),%rax
   1950a:	ff 10                	callq  *(%rax)
   1950c:	48 8b 43 08          	mov    0x8(%rbx),%rax
   19510:	48 8b 70 08          	mov    0x8(%rax),%rsi
   19514:	48 85 f6             	test   %rsi,%rsi
   19517:	74 0d                	je     19526 <std::sys_common::util::dumb_print+0x66>
   19519:	48 8b 3b             	mov    (%rbx),%rdi
   1951c:	48 8b 50 10          	mov    0x10(%rax),%rdx
   19520:	ff 15 da c6 02 00    	callq  *0x2c6da(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   19526:	be 18 00 00 00       	mov    $0x18,%esi
   1952b:	ba 08 00 00 00       	mov    $0x8,%edx
   19530:	48 89 df             	mov    %rbx,%rdi
   19533:	ff 15 c7 c6 02 00    	callq  *0x2c6c7(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   19539:	48 83 c4 48          	add    $0x48,%rsp
   1953d:	5b                   	pop    %rbx
   1953e:	41 5e                	pop    %r14
   19540:	c3                   	retq   
   19541:	49 89 c6             	mov    %rax,%r14
   19544:	48 8b 3b             	mov    (%rbx),%rdi
   19547:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   1954b:	e8 90 03 ff ff       	callq  98e0 <alloc::alloc::box_free>
   19550:	48 89 df             	mov    %rbx,%rdi
   19553:	e8 a8 03 ff ff       	callq  9900 <alloc::alloc::box_free>
   19558:	4c 89 f7             	mov    %r14,%rdi
   1955b:	e8 f0 ba fe ff       	callq  5050 <_Unwind_Resume@plt>
   19560:	0f 0b                	ud2    
   19562:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   19569:	00 00 00 
   1956c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000019570 <std::sys_common::util::abort>:
   19570:	48 83 ec 48          	sub    $0x48,%rsp
   19574:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   19579:	48 8d 05 f0 6d 01 00 	lea    0x16df0(%rip),%rax        # 30370 <<core::fmt::Arguments as core::fmt::Debug>::fmt>
   19580:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   19585:	48 8d 05 ac ab 02 00 	lea    0x2abac(%rip),%rax        # 44138 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xbe0>
   1958c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   19591:	48 c7 44 24 20 02 00 	movq   $0x2,0x20(%rsp)
   19598:	00 00 
   1959a:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   195a1:	00 00 
   195a3:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   195a8:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   195ad:	48 c7 44 24 40 01 00 	movq   $0x1,0x40(%rsp)
   195b4:	00 00 
   195b6:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   195bb:	e8 00 ff ff ff       	callq  194c0 <std::sys_common::util::dumb_print>
   195c0:	e8 cb 2c 00 00       	callq  1c290 <std::sys::unix::abort_internal>
   195c5:	0f 0b                	ud2    
   195c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   195ce:	00 00 

00000000000195d0 <std::sys_common::util::report_overflow>:
   195d0:	53                   	push   %rbx
   195d1:	48 83 ec 60          	sub    $0x60,%rsp
   195d5:	66 66 66 64 48 8b 04 	data16 data16 data16 mov %fs:0x0,%rax
   195dc:	25 00 00 00 00 
   195e1:	83 b8 a0 ff ff ff 01 	cmpl   $0x1,-0x60(%rax)
   195e8:	75 09                	jne    195f3 <std::sys_common::util::report_overflow+0x23>
   195ea:	48 8d b8 a8 ff ff ff 	lea    -0x58(%rax),%rdi
   195f1:	eb 11                	jmp    19604 <std::sys_common::util::report_overflow+0x34>
   195f3:	e8 18 9f ff ff       	callq  13510 <std::thread::local::fast::Key<T>::try_initialize>
   195f8:	48 89 c7             	mov    %rax,%rdi
   195fb:	48 85 c0             	test   %rax,%rax
   195fe:	0f 84 cd 00 00 00    	je     196d1 <std::sys_common::util::report_overflow+0x101>
   19604:	e8 07 f3 ff ff       	callq  18910 <std::sys_common::thread_info::ThreadInfo::with::{{closure}}>
   19609:	48 89 c3             	mov    %rax,%rbx
   1960c:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   19611:	48 83 c0 10          	add    $0x10,%rax
   19615:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
   19619:	48 85 c9             	test   %rcx,%rcx
   1961c:	48 0f 44 c1          	cmove  %rcx,%rax
   19620:	74 13                	je     19635 <std::sys_common::util::report_overflow+0x65>
   19622:	48 8b 78 08          	mov    0x8(%rax),%rdi
   19626:	48 83 ef 01          	sub    $0x1,%rdi
   1962a:	0f 82 90 00 00 00    	jb     196c0 <std::sys_common::util::report_overflow+0xf0>
   19630:	48 8b 00             	mov    (%rax),%rax
   19633:	eb 02                	jmp    19637 <std::sys_common::util::report_overflow+0x67>
   19635:	31 c0                	xor    %eax,%eax
   19637:	48 85 c0             	test   %rax,%rax
   1963a:	48 8d 0d c8 e8 01 00 	lea    0x1e8c8(%rip),%rcx        # 37f09 <str.6+0xbe9>
   19641:	48 0f 45 c8          	cmovne %rax,%rcx
   19645:	b8 09 00 00 00       	mov    $0x9,%eax
   1964a:	48 0f 45 c7          	cmovne %rdi,%rax
   1964e:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   19653:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   19658:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   1965d:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   19662:	48 8d 05 f7 c1 fe ff 	lea    -0x13e09(%rip),%rax        # 5860 <<&T as core::fmt::Display>::fmt>
   19669:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1966e:	48 8d 05 e3 aa 02 00 	lea    0x2aae3(%rip),%rax        # 44158 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xc00>
   19675:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1967a:	48 c7 44 24 38 02 00 	movq   $0x2,0x38(%rsp)
   19681:	00 00 
   19683:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   1968a:	00 00 
   1968c:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   19691:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   19696:	48 c7 44 24 58 01 00 	movq   $0x1,0x58(%rsp)
   1969d:	00 00 
   1969f:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
   196a4:	e8 17 fe ff ff       	callq  194c0 <std::sys_common::util::dumb_print>
   196a9:	f0 48 83 2b 01       	lock subq $0x1,(%rbx)
   196ae:	75 0a                	jne    196ba <std::sys_common::util::report_overflow+0xea>
   196b0:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   196b5:	e8 d6 01 ff ff       	callq  9890 <alloc::sync::Arc<T>::drop_slow>
   196ba:	48 83 c4 60          	add    $0x60,%rsp
   196be:	5b                   	pop    %rbx
   196bf:	c3                   	retq   
   196c0:	48 8d 15 29 a5 02 00 	lea    0x2a529(%rip),%rdx        # 43bf0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x698>
   196c7:	31 f6                	xor    %esi,%esi
   196c9:	ff 15 61 c3 02 00    	callq  *0x2c361(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   196cf:	0f 0b                	ud2    
   196d1:	48 8d 3d db e1 01 00 	lea    0x1e1db(%rip),%rdi        # 378b3 <str.6+0x593>
   196d8:	48 8d 15 29 a4 02 00 	lea    0x2a429(%rip),%rdx        # 43b08 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x5b0>
   196df:	be 5e 00 00 00       	mov    $0x5e,%esi
   196e4:	ff 15 be c6 02 00    	callq  *0x2c6be(%rip)        # 45da8 <_GLOBAL_OFFSET_TABLE_+0x418>
   196ea:	0f 0b                	ud2    
   196ec:	48 89 c3             	mov    %rax,%rbx
   196ef:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   196f4:	e8 87 cd fe ff       	callq  6480 <core::ptr::drop_in_place>
   196f9:	48 89 df             	mov    %rbx,%rdi
   196fc:	e8 4f b9 fe ff       	callq  5050 <_Unwind_Resume@plt>
   19701:	0f 0b                	ud2    
   19703:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1970a:	00 00 00 
   1970d:	0f 1f 00             	nopl   (%rax)

0000000000019710 <std::alloc::default_alloc_error_hook>:
   19710:	48 83 ec 48          	sub    $0x48,%rsp
   19714:	48 89 3c 24          	mov    %rdi,(%rsp)
   19718:	48 89 e0             	mov    %rsp,%rax
   1971b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   19720:	48 8d 05 99 ad 01 00 	lea    0x1ad99(%rip),%rax        # 344c0 <core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt>
   19727:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1972c:	48 8d 05 65 aa 02 00 	lea    0x2aa65(%rip),%rax        # 44198 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xc40>
   19733:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   19738:	48 c7 44 24 20 02 00 	movq   $0x2,0x20(%rsp)
   1973f:	00 00 
   19741:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   19748:	00 00 
   1974a:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   1974f:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   19754:	48 c7 44 24 40 01 00 	movq   $0x1,0x40(%rsp)
   1975b:	00 00 
   1975d:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   19762:	e8 59 fd ff ff       	callq  194c0 <std::sys_common::util::dumb_print>
   19767:	48 83 c4 48          	add    $0x48,%rsp
   1976b:	c3                   	retq   
   1976c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000019770 <rust_oom>:
   19770:	50                   	push   %rax
   19771:	48 8b 05 b0 c9 02 00 	mov    0x2c9b0(%rip),%rax        # 46128 <std::alloc::HOOK>
   19778:	48 85 c0             	test   %rax,%rax
   1977b:	48 8d 0d 8e ff ff ff 	lea    -0x72(%rip),%rcx        # 19710 <std::alloc::default_alloc_error_hook>
   19782:	48 0f 45 c8          	cmovne %rax,%rcx
   19786:	ff d1                	callq  *%rcx
   19788:	ff 15 3a c4 02 00    	callq  *0x2c43a(%rip)        # 45bc8 <_GLOBAL_OFFSET_TABLE_+0x238>
   1978e:	0f 0b                	ud2    

0000000000019790 <__rdl_alloc>:
   19790:	50                   	push   %rax
   19791:	48 89 fa             	mov    %rdi,%rdx
   19794:	48 83 fe 10          	cmp    $0x10,%rsi
   19798:	77 0f                	ja     197a9 <__rdl_alloc+0x19>
   1979a:	48 39 d6             	cmp    %rdx,%rsi
   1979d:	77 0a                	ja     197a9 <__rdl_alloc+0x19>
   1979f:	48 89 d7             	mov    %rdx,%rdi
   197a2:	58                   	pop    %rax
   197a3:	ff 25 e7 c5 02 00    	jmpq   *0x2c5e7(%rip)        # 45d90 <malloc@GLIBC_2.2.5>
   197a9:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   197b0:	00 
   197b1:	48 83 fe 08          	cmp    $0x8,%rsi
   197b5:	b8 08 00 00 00       	mov    $0x8,%eax
   197ba:	48 0f 47 c6          	cmova  %rsi,%rax
   197be:	48 89 e7             	mov    %rsp,%rdi
   197c1:	48 89 c6             	mov    %rax,%rsi
   197c4:	ff 15 7e c7 02 00    	callq  *0x2c77e(%rip)        # 45f48 <posix_memalign@GLIBC_2.2.5>
   197ca:	85 c0                	test   %eax,%eax
   197cc:	75 06                	jne    197d4 <__rdl_alloc+0x44>
   197ce:	48 8b 04 24          	mov    (%rsp),%rax
   197d2:	59                   	pop    %rcx
   197d3:	c3                   	retq   
   197d4:	31 c0                	xor    %eax,%eax
   197d6:	59                   	pop    %rcx
   197d7:	c3                   	retq   
   197d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   197df:	00 

00000000000197e0 <__rdl_dealloc>:
   197e0:	ff 25 fa c1 02 00    	jmpq   *0x2c1fa(%rip)        # 459e0 <free@GLIBC_2.2.5>
   197e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   197ed:	00 00 00 

00000000000197f0 <__rdl_realloc>:
   197f0:	41 57                	push   %r15
   197f2:	41 56                	push   %r14
   197f4:	41 54                	push   %r12
   197f6:	53                   	push   %rbx
   197f7:	50                   	push   %rax
   197f8:	48 89 cb             	mov    %rcx,%rbx
   197fb:	49 89 f7             	mov    %rsi,%r15
   197fe:	49 89 fe             	mov    %rdi,%r14
   19801:	48 83 fa 10          	cmp    $0x10,%rdx
   19805:	77 1c                	ja     19823 <__rdl_realloc+0x33>
   19807:	48 39 da             	cmp    %rbx,%rdx
   1980a:	77 17                	ja     19823 <__rdl_realloc+0x33>
   1980c:	4c 89 f7             	mov    %r14,%rdi
   1980f:	48 89 de             	mov    %rbx,%rsi
   19812:	48 83 c4 08          	add    $0x8,%rsp
   19816:	5b                   	pop    %rbx
   19817:	41 5c                	pop    %r12
   19819:	41 5e                	pop    %r14
   1981b:	41 5f                	pop    %r15
   1981d:	ff 25 f5 c5 02 00    	jmpq   *0x2c5f5(%rip)        # 45e18 <realloc@GLIBC_2.2.5>
   19823:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   1982a:	00 
   1982b:	48 83 fa 08          	cmp    $0x8,%rdx
   1982f:	be 08 00 00 00       	mov    $0x8,%esi
   19834:	48 0f 47 f2          	cmova  %rdx,%rsi
   19838:	48 89 e7             	mov    %rsp,%rdi
   1983b:	48 89 da             	mov    %rbx,%rdx
   1983e:	ff 15 04 c7 02 00    	callq  *0x2c704(%rip)        # 45f48 <posix_memalign@GLIBC_2.2.5>
   19844:	89 c1                	mov    %eax,%ecx
   19846:	31 c0                	xor    %eax,%eax
   19848:	85 c9                	test   %ecx,%ecx
   1984a:	75 2b                	jne    19877 <__rdl_realloc+0x87>
   1984c:	4c 8b 24 24          	mov    (%rsp),%r12
   19850:	4d 85 e4             	test   %r12,%r12
   19853:	74 22                	je     19877 <__rdl_realloc+0x87>
   19855:	49 39 df             	cmp    %rbx,%r15
   19858:	4c 0f 47 fb          	cmova  %rbx,%r15
   1985c:	4c 89 e7             	mov    %r12,%rdi
   1985f:	4c 89 f6             	mov    %r14,%rsi
   19862:	4c 89 fa             	mov    %r15,%rdx
   19865:	ff 15 95 c4 02 00    	callq  *0x2c495(%rip)        # 45d00 <memcpy@GLIBC_2.14>
   1986b:	4c 89 f7             	mov    %r14,%rdi
   1986e:	ff 15 6c c1 02 00    	callq  *0x2c16c(%rip)        # 459e0 <free@GLIBC_2.2.5>
   19874:	4c 89 e0             	mov    %r12,%rax
   19877:	48 83 c4 08          	add    $0x8,%rsp
   1987b:	5b                   	pop    %rbx
   1987c:	41 5c                	pop    %r12
   1987e:	41 5e                	pop    %r14
   19880:	41 5f                	pop    %r15
   19882:	c3                   	retq   
   19883:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1988a:	00 00 00 
   1988d:	0f 1f 00             	nopl   (%rax)

0000000000019890 <__rdl_alloc_zeroed>:
   19890:	41 56                	push   %r14
   19892:	53                   	push   %rbx
   19893:	50                   	push   %rax
   19894:	48 89 fb             	mov    %rdi,%rbx
   19897:	48 83 fe 10          	cmp    $0x10,%rsi
   1989b:	77 1a                	ja     198b7 <__rdl_alloc_zeroed+0x27>
   1989d:	48 39 de             	cmp    %rbx,%rsi
   198a0:	77 15                	ja     198b7 <__rdl_alloc_zeroed+0x27>
   198a2:	be 01 00 00 00       	mov    $0x1,%esi
   198a7:	48 89 df             	mov    %rbx,%rdi
   198aa:	48 83 c4 08          	add    $0x8,%rsp
   198ae:	5b                   	pop    %rbx
   198af:	41 5e                	pop    %r14
   198b1:	ff 25 f1 c3 02 00    	jmpq   *0x2c3f1(%rip)        # 45ca8 <calloc@GLIBC_2.2.5>
   198b7:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   198be:	00 
   198bf:	48 83 fe 08          	cmp    $0x8,%rsi
   198c3:	b8 08 00 00 00       	mov    $0x8,%eax
   198c8:	48 0f 47 c6          	cmova  %rsi,%rax
   198cc:	48 89 e7             	mov    %rsp,%rdi
   198cf:	48 89 c6             	mov    %rax,%rsi
   198d2:	48 89 da             	mov    %rbx,%rdx
   198d5:	ff 15 6d c6 02 00    	callq  *0x2c66d(%rip)        # 45f48 <posix_memalign@GLIBC_2.2.5>
   198db:	89 c1                	mov    %eax,%ecx
   198dd:	31 c0                	xor    %eax,%eax
   198df:	85 c9                	test   %ecx,%ecx
   198e1:	75 1a                	jne    198fd <__rdl_alloc_zeroed+0x6d>
   198e3:	4c 8b 34 24          	mov    (%rsp),%r14
   198e7:	4d 85 f6             	test   %r14,%r14
   198ea:	74 11                	je     198fd <__rdl_alloc_zeroed+0x6d>
   198ec:	4c 89 f7             	mov    %r14,%rdi
   198ef:	31 f6                	xor    %esi,%esi
   198f1:	48 89 da             	mov    %rbx,%rdx
   198f4:	ff 15 16 c3 02 00    	callq  *0x2c316(%rip)        # 45c10 <memset@GLIBC_2.2.5>
   198fa:	4c 89 f0             	mov    %r14,%rax
   198fd:	48 83 c4 08          	add    $0x8,%rsp
   19901:	5b                   	pop    %rbx
   19902:	41 5e                	pop    %r14
   19904:	c3                   	retq   
   19905:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1990c:	00 00 00 
   1990f:	90                   	nop

0000000000019910 <__rust_drop_panic>:
   19910:	48 83 ec 38          	sub    $0x38,%rsp
   19914:	48 8d 05 9d a8 02 00 	lea    0x2a89d(%rip),%rax        # 441b8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xc60>
   1991b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   19920:	48 c7 44 24 10 01 00 	movq   $0x1,0x10(%rsp)
   19927:	00 00 
   19929:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   19930:	00 00 
   19932:	48 8d 05 1f d9 01 00 	lea    0x1d91f(%rip),%rax        # 37258 <_fini+0x21d4>
   19939:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1993e:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   19945:	00 00 
   19947:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   1994c:	e8 1f fc ff ff       	callq  19570 <std::sys_common::util::abort>
   19951:	0f 0b                	ud2    
   19953:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1995a:	00 00 00 
   1995d:	0f 1f 00             	nopl   (%rax)

0000000000019960 <__rust_foreign_exception>:
   19960:	48 83 ec 38          	sub    $0x38,%rsp
   19964:	48 8d 05 5d a8 02 00 	lea    0x2a85d(%rip),%rax        # 441c8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xc70>
   1996b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   19970:	48 c7 44 24 10 01 00 	movq   $0x1,0x10(%rsp)
   19977:	00 00 
   19979:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   19980:	00 00 
   19982:	48 8d 05 cf d8 01 00 	lea    0x1d8cf(%rip),%rax        # 37258 <_fini+0x21d4>
   19989:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1998e:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   19995:	00 00 
   19997:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   1999c:	e8 cf fb ff ff       	callq  19570 <std::sys_common::util::abort>
   199a1:	0f 0b                	ud2    
   199a3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   199aa:	00 00 00 
   199ad:	0f 1f 00             	nopl   (%rax)

00000000000199b0 <std::panicking::default_hook>:
   199b0:	55                   	push   %rbp
   199b1:	41 57                	push   %r15
   199b3:	41 56                	push   %r14
   199b5:	53                   	push   %rbx
   199b6:	48 83 ec 78          	sub    $0x78,%rsp
   199ba:	49 89 ff             	mov    %rdi,%r15
   199bd:	66 66 66 64 48 8b 04 	data16 data16 data16 mov %fs:0x0,%rax
   199c4:	25 00 00 00 00 
   199c9:	49 89 c6             	mov    %rax,%r14
   199cc:	83 b8 e0 ff ff ff 01 	cmpl   $0x1,-0x20(%rax)
   199d3:	75 09                	jne    199de <std::panicking::default_hook+0x2e>
   199d5:	48 8d 80 e8 ff ff ff 	lea    -0x18(%rax),%rax
   199dc:	eb 0e                	jmp    199ec <std::panicking::default_hook+0x3c>
   199de:	e8 fd 9a ff ff       	callq  134e0 <std::thread::local::fast::Key<T>::try_initialize>
   199e3:	48 85 c0             	test   %rax,%rax
   199e6:	0f 84 66 03 00 00    	je     19d52 <std::panicking::default_hook+0x3a2>
   199ec:	b1 01                	mov    $0x1,%cl
   199ee:	48 83 38 01          	cmpq   $0x1,(%rax)
   199f2:	0f 86 8f 00 00 00    	jbe    19a87 <std::panicking::default_hook+0xd7>
   199f8:	88 4c 24 07          	mov    %cl,0x7(%rsp)
   199fc:	4c 89 ff             	mov    %r15,%rdi
   199ff:	ff 15 eb c1 02 00    	callq  *0x2c1eb(%rip)        # 45bf0 <_GLOBAL_OFFSET_TABLE_+0x260>
   19a05:	48 85 c0             	test   %rax,%rax
   19a08:	0f 84 29 03 00 00    	je     19d37 <std::panicking::default_hook+0x387>
   19a0e:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   19a13:	4c 89 ff             	mov    %r15,%rdi
   19a16:	ff 15 5c c3 02 00    	callq  *0x2c35c(%rip)        # 45d78 <_GLOBAL_OFFSET_TABLE_+0x3e8>
   19a1c:	48 89 c3             	mov    %rax,%rbx
   19a1f:	48 89 c7             	mov    %rax,%rdi
   19a22:	ff 52 18             	callq  *0x18(%rdx)
   19a25:	48 85 db             	test   %rbx,%rbx
   19a28:	0f 84 e6 00 00 00    	je     19b14 <std::panicking::default_hook+0x164>
   19a2e:	48 b9 f4 bc c7 ec 1e 	movabs $0x7ef2a91eecc7bcf4,%rcx
   19a35:	a9 f2 7e 
   19a38:	48 39 c8             	cmp    %rcx,%rax
   19a3b:	0f 85 d3 00 00 00    	jne    19b14 <std::panicking::default_hook+0x164>
   19a41:	48 8b 03             	mov    (%rbx),%rax
   19a44:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
   19a48:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   19a4d:	48 89 4c 24 50       	mov    %rcx,0x50(%rsp)
   19a52:	4c 89 f0             	mov    %r14,%rax
   19a55:	41 83 be a0 ff ff ff 	cmpl   $0x1,-0x60(%r14)
   19a5c:	01 
   19a5d:	0f 84 05 01 00 00    	je     19b68 <std::panicking::default_hook+0x1b8>
   19a63:	e8 a8 9a ff ff       	callq  13510 <std::thread::local::fast::Key<T>::try_initialize>
   19a68:	48 89 c7             	mov    %rax,%rdi
   19a6b:	48 85 c0             	test   %rax,%rax
   19a6e:	0f 85 fb 00 00 00    	jne    19b6f <std::panicking::default_hook+0x1bf>
   19a74:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   19a7b:	00 00 
   19a7d:	45 31 f6             	xor    %r14d,%r14d
   19a80:	31 c0                	xor    %eax,%eax
   19a82:	e9 1b 01 00 00       	jmpq   19ba2 <std::panicking::default_hook+0x1f2>
   19a87:	48 8b 05 8a c6 02 00 	mov    0x2c68a(%rip),%rax        # 46118 <std::sys_common::backtrace::rust_backtrace_env::ENABLED>
   19a8e:	48 83 f8 02          	cmp    $0x2,%rax
   19a92:	0f 84 3b 02 00 00    	je     19cd3 <std::panicking::default_hook+0x323>
   19a98:	48 83 f8 01          	cmp    $0x1,%rax
   19a9c:	0f 84 2a 02 00 00    	je     19ccc <std::panicking::default_hook+0x31c>
   19aa2:	48 85 c0             	test   %rax,%rax
   19aa5:	0f 85 4d ff ff ff    	jne    199f8 <std::panicking::default_hook+0x48>
   19aab:	48 8d 35 76 e0 01 00 	lea    0x1e076(%rip),%rsi        # 37b28 <str.6+0x808>
   19ab2:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   19ab7:	ba 0e 00 00 00       	mov    $0xe,%edx
   19abc:	ff 15 f6 c3 02 00    	callq  *0x2c3f6(%rip)        # 45eb8 <_GLOBAL_OFFSET_TABLE_+0x528>
   19ac2:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   19ac7:	48 85 ff             	test   %rdi,%rdi
   19aca:	0f 84 0a 02 00 00    	je     19cda <std::panicking::default_hook+0x32a>
   19ad0:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   19ad5:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   19ada:	48 83 f8 04          	cmp    $0x4,%rax
   19ade:	0f 84 fb 01 00 00    	je     19cdf <std::panicking::default_hook+0x32f>
   19ae4:	48 83 f8 01          	cmp    $0x1,%rax
   19ae8:	0f 85 0d 02 00 00    	jne    19cfb <std::panicking::default_hook+0x34b>
   19aee:	40 b5 04             	mov    $0x4,%bpl
   19af1:	bb 01 00 00 00       	mov    $0x1,%ebx
   19af6:	48 8d 05 39 e0 01 00 	lea    0x1e039(%rip),%rax        # 37b36 <str.6+0x816>
   19afd:	48 39 c7             	cmp    %rax,%rdi
   19b00:	0f 84 fc 01 00 00    	je     19d02 <std::panicking::default_hook+0x352>
   19b06:	80 3f 30             	cmpb   $0x30,(%rdi)
   19b09:	0f 85 ec 01 00 00    	jne    19cfb <std::panicking::default_hook+0x34b>
   19b0f:	e9 ee 01 00 00       	jmpq   19d02 <std::panicking::default_hook+0x352>
   19b14:	4c 89 ff             	mov    %r15,%rdi
   19b17:	ff 15 5b c2 02 00    	callq  *0x2c25b(%rip)        # 45d78 <_GLOBAL_OFFSET_TABLE_+0x3e8>
   19b1d:	48 89 c3             	mov    %rax,%rbx
   19b20:	48 89 c7             	mov    %rax,%rdi
   19b23:	ff 52 18             	callq  *0x18(%rdx)
   19b26:	48 8d 15 e3 de 01 00 	lea    0x1dee3(%rip),%rdx        # 37a10 <str.6+0x6f0>
   19b2d:	b9 08 00 00 00       	mov    $0x8,%ecx
   19b32:	48 85 db             	test   %rbx,%rbx
   19b35:	74 16                	je     19b4d <std::panicking::default_hook+0x19d>
   19b37:	48 be 0b 38 d0 04 32 	movabs $0x7ebaa3204d0380b,%rsi
   19b3e:	aa eb 07 
   19b41:	48 39 f0             	cmp    %rsi,%rax
   19b44:	75 07                	jne    19b4d <std::panicking::default_hook+0x19d>
   19b46:	48 8b 13             	mov    (%rbx),%rdx
   19b49:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
   19b4d:	48 89 54 24 48       	mov    %rdx,0x48(%rsp)
   19b52:	48 89 4c 24 50       	mov    %rcx,0x50(%rsp)
   19b57:	4c 89 f0             	mov    %r14,%rax
   19b5a:	41 83 be a0 ff ff ff 	cmpl   $0x1,-0x60(%r14)
   19b61:	01 
   19b62:	0f 85 fb fe ff ff    	jne    19a63 <std::panicking::default_hook+0xb3>
   19b68:	48 8d b8 a8 ff ff ff 	lea    -0x58(%rax),%rdi
   19b6f:	e8 9c ed ff ff       	callq  18910 <std::sys_common::thread_info::ThreadInfo::with::{{closure}}>
   19b74:	49 89 c6             	mov    %rax,%r14
   19b77:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   19b7c:	48 83 c0 10          	add    $0x10,%rax
   19b80:	49 8b 4e 10          	mov    0x10(%r14),%rcx
   19b84:	48 85 c9             	test   %rcx,%rcx
   19b87:	48 0f 44 c1          	cmove  %rcx,%rax
   19b8b:	74 13                	je     19ba0 <std::panicking::default_hook+0x1f0>
   19b8d:	48 8b 78 08          	mov    0x8(%rax),%rdi
   19b91:	48 83 ef 01          	sub    $0x1,%rdi
   19b95:	0f 82 de 01 00 00    	jb     19d79 <std::panicking::default_hook+0x3c9>
   19b9b:	48 8b 00             	mov    (%rax),%rax
   19b9e:	eb 02                	jmp    19ba2 <std::panicking::default_hook+0x1f2>
   19ba0:	31 c0                	xor    %eax,%eax
   19ba2:	48 85 c0             	test   %rax,%rax
   19ba5:	48 8d 0d c8 e4 01 00 	lea    0x1e4c8(%rip),%rcx        # 38074 <str.6+0xd54>
   19bac:	48 0f 45 c8          	cmovne %rax,%rcx
   19bb0:	b8 09 00 00 00       	mov    $0x9,%eax
   19bb5:	48 0f 45 c7          	cmovne %rdi,%rax
   19bb9:	48 89 4c 24 68       	mov    %rcx,0x68(%rsp)
   19bbe:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   19bc3:	48 8d 44 24 68       	lea    0x68(%rsp),%rax
   19bc8:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   19bcd:	48 8d 44 24 48       	lea    0x48(%rsp),%rax
   19bd2:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   19bd7:	48 8d 44 24 40       	lea    0x40(%rsp),%rax
   19bdc:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   19be1:	48 8d 44 24 07       	lea    0x7(%rsp),%rax
   19be6:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   19beb:	31 ff                	xor    %edi,%edi
   19bed:	ff 15 fd bd 02 00    	callq  *0x2bdfd(%rip)        # 459f0 <_GLOBAL_OFFSET_TABLE_+0x60>
   19bf3:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   19bf8:	48 89 54 24 60       	mov    %rdx,0x60(%rsp)
   19bfd:	48 85 c0             	test   %rax,%rax
   19c00:	74 60                	je     19c62 <std::panicking::default_hook+0x2b2>
   19c02:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   19c07:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   19c0c:	48 8d 15 35 a6 02 00 	lea    0x2a635(%rip),%rdx        # 44248 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xcf0>
   19c13:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   19c18:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
   19c1d:	e8 be 01 00 00       	callq  19de0 <std::panicking::default_hook::{{closure}}>
   19c22:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   19c27:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
   19c2c:	ff 15 be bd 02 00    	callq  *0x2bdbe(%rip)        # 459f0 <_GLOBAL_OFFSET_TABLE_+0x60>
   19c32:	48 89 c3             	mov    %rax,%rbx
   19c35:	48 85 c0             	test   %rax,%rax
   19c38:	74 1e                	je     19c58 <std::panicking::default_hook+0x2a8>
   19c3a:	49 89 d7             	mov    %rdx,%r15
   19c3d:	48 89 df             	mov    %rbx,%rdi
   19c40:	ff 12                	callq  *(%rdx)
   19c42:	49 8b 77 08          	mov    0x8(%r15),%rsi
   19c46:	48 85 f6             	test   %rsi,%rsi
   19c49:	74 0d                	je     19c58 <std::panicking::default_hook+0x2a8>
   19c4b:	49 8b 57 10          	mov    0x10(%r15),%rdx
   19c4f:	48 89 df             	mov    %rbx,%rdi
   19c52:	ff 15 a8 bf 02 00    	callq  *0x2bfa8(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   19c58:	40 b5 01             	mov    $0x1,%bpl
   19c5b:	4d 85 f6             	test   %r14,%r14
   19c5e:	75 1f                	jne    19c7f <std::panicking::default_hook+0x2cf>
   19c60:	eb 2e                	jmp    19c90 <std::panicking::default_hook+0x2e0>
   19c62:	48 8d 15 87 a5 02 00 	lea    0x2a587(%rip),%rdx        # 441f0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xc98>
   19c69:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   19c6e:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   19c73:	e8 68 01 00 00       	callq  19de0 <std::panicking::default_hook::{{closure}}>
   19c78:	31 ed                	xor    %ebp,%ebp
   19c7a:	4d 85 f6             	test   %r14,%r14
   19c7d:	74 11                	je     19c90 <std::panicking::default_hook+0x2e0>
   19c7f:	f0 49 83 2e 01       	lock subq $0x1,(%r14)
   19c84:	75 0a                	jne    19c90 <std::panicking::default_hook+0x2e0>
   19c86:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   19c8b:	e8 00 fc fe ff       	callq  9890 <alloc::sync::Arc<T>::drop_slow>
   19c90:	48 8b 5c 24 58       	mov    0x58(%rsp),%rbx
   19c95:	48 85 db             	test   %rbx,%rbx
   19c98:	0f 94 c0             	sete   %al
   19c9b:	40 08 c5             	or     %al,%bpl
   19c9e:	75 21                	jne    19cc1 <std::panicking::default_hook+0x311>
   19ca0:	4c 8b 7c 24 60       	mov    0x60(%rsp),%r15
   19ca5:	48 89 df             	mov    %rbx,%rdi
   19ca8:	41 ff 17             	callq  *(%r15)
   19cab:	49 8b 77 08          	mov    0x8(%r15),%rsi
   19caf:	48 85 f6             	test   %rsi,%rsi
   19cb2:	74 0d                	je     19cc1 <std::panicking::default_hook+0x311>
   19cb4:	49 8b 57 10          	mov    0x10(%r15),%rdx
   19cb8:	48 89 df             	mov    %rbx,%rdi
   19cbb:	ff 15 3f bf 02 00    	callq  *0x2bf3f(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   19cc1:	48 83 c4 78          	add    $0x78,%rsp
   19cc5:	5b                   	pop    %rbx
   19cc6:	41 5e                	pop    %r14
   19cc8:	41 5f                	pop    %r15
   19cca:	5d                   	pop    %rbp
   19ccb:	c3                   	retq   
   19ccc:	b1 04                	mov    $0x4,%cl
   19cce:	e9 25 fd ff ff       	jmpq   199f8 <std::panicking::default_hook+0x48>
   19cd3:	31 c9                	xor    %ecx,%ecx
   19cd5:	e9 1e fd ff ff       	jmpq   199f8 <std::panicking::default_hook+0x48>
   19cda:	40 b5 05             	mov    $0x5,%bpl
   19cdd:	eb 33                	jmp    19d12 <std::panicking::default_hook+0x362>
   19cdf:	40 b5 01             	mov    $0x1,%bpl
   19ce2:	bb 03 00 00 00       	mov    $0x3,%ebx
   19ce7:	48 8d 05 92 da 01 00 	lea    0x1da92(%rip),%rax        # 37780 <str.6+0x460>
   19cee:	48 39 c7             	cmp    %rax,%rdi
   19cf1:	74 0f                	je     19d02 <std::panicking::default_hook+0x352>
   19cf3:	81 3f 66 75 6c 6c    	cmpl   $0x6c6c7566,(%rdi)
   19cf9:	74 07                	je     19d02 <std::panicking::default_hook+0x352>
   19cfb:	bb 02 00 00 00       	mov    $0x2,%ebx
   19d00:	31 ed                	xor    %ebp,%ebp
   19d02:	48 85 f6             	test   %rsi,%rsi
   19d05:	74 0b                	je     19d12 <std::panicking::default_hook+0x362>
   19d07:	ba 01 00 00 00       	mov    $0x1,%edx
   19d0c:	ff 15 ee be 02 00    	callq  *0x2beee(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   19d12:	40 80 fd 05          	cmp    $0x5,%bpl
   19d16:	40 0f b6 c5          	movzbl %bpl,%eax
   19d1a:	b9 04 00 00 00       	mov    $0x4,%ecx
   19d1f:	0f 45 c8             	cmovne %eax,%ecx
   19d22:	b8 01 00 00 00       	mov    $0x1,%eax
   19d27:	48 0f 45 c3          	cmovne %rbx,%rax
   19d2b:	48 87 05 e6 c3 02 00 	xchg   %rax,0x2c3e6(%rip)        # 46118 <std::sys_common::backtrace::rust_backtrace_env::ENABLED>
   19d32:	e9 c1 fc ff ff       	jmpq   199f8 <std::panicking::default_hook+0x48>
   19d37:	48 8d 3d bc d8 01 00 	lea    0x1d8bc(%rip),%rdi        # 375fa <str.6+0x2da>
   19d3e:	48 8d 15 93 a4 02 00 	lea    0x2a493(%rip),%rdx        # 441d8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xc80>
   19d45:	be 2b 00 00 00       	mov    $0x2b,%esi
   19d4a:	ff 15 90 c1 02 00    	callq  *0x2c190(%rip)        # 45ee0 <_GLOBAL_OFFSET_TABLE_+0x550>
   19d50:	0f 0b                	ud2    
   19d52:	48 8d 3d f5 da 01 00 	lea    0x1daf5(%rip),%rdi        # 3784e <str.6+0x52e>
   19d59:	48 8d 0d c0 9a 02 00 	lea    0x29ac0(%rip),%rcx        # 43820 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2c8>
   19d60:	4c 8d 05 89 9d 02 00 	lea    0x29d89(%rip),%r8        # 43af0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x598>
   19d67:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   19d6c:	be 46 00 00 00       	mov    $0x46,%esi
   19d71:	ff 15 71 be 02 00    	callq  *0x2be71(%rip)        # 45be8 <_GLOBAL_OFFSET_TABLE_+0x258>
   19d77:	0f 0b                	ud2    
   19d79:	48 8d 15 70 9e 02 00 	lea    0x29e70(%rip),%rdx        # 43bf0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x698>
   19d80:	31 f6                	xor    %esi,%esi
   19d82:	ff 15 a8 bc 02 00    	callq  *0x2bca8(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   19d88:	0f 0b                	ud2    
   19d8a:	eb 31                	jmp    19dbd <std::panicking::default_hook+0x40d>
   19d8c:	49 89 c6             	mov    %rax,%r14
   19d8f:	48 89 df             	mov    %rbx,%rdi
   19d92:	4c 89 fe             	mov    %r15,%rsi
   19d95:	e8 46 fb fe ff       	callq  98e0 <alloc::alloc::box_free>
   19d9a:	eb 24                	jmp    19dc0 <std::panicking::default_hook+0x410>
   19d9c:	49 89 c6             	mov    %rax,%r14
   19d9f:	48 89 df             	mov    %rbx,%rdi
   19da2:	4c 89 fe             	mov    %r15,%rsi
   19da5:	e8 36 fb fe ff       	callq  98e0 <alloc::alloc::box_free>
   19daa:	eb 1e                	jmp    19dca <std::panicking::default_hook+0x41a>
   19dac:	eb 0f                	jmp    19dbd <std::panicking::default_hook+0x40d>
   19dae:	49 89 c6             	mov    %rax,%r14
   19db1:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
   19db6:	e8 55 cd fe ff       	callq  6b10 <core::ptr::drop_in_place>
   19dbb:	eb 03                	jmp    19dc0 <std::panicking::default_hook+0x410>
   19dbd:	49 89 c6             	mov    %rax,%r14
   19dc0:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   19dc5:	e8 86 ce fe ff       	callq  6c50 <core::ptr::drop_in_place>
   19dca:	4c 89 f7             	mov    %r14,%rdi
   19dcd:	e8 7e b2 fe ff       	callq  5050 <_Unwind_Resume@plt>
   19dd2:	0f 0b                	ud2    
   19dd4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   19ddb:	00 00 00 
   19dde:	66 90                	xchg   %ax,%ax

0000000000019de0 <std::panicking::default_hook::{{closure}}>:
   19de0:	41 57                	push   %r15
   19de2:	41 56                	push   %r14
   19de4:	41 55                	push   %r13
   19de6:	41 54                	push   %r12
   19de8:	53                   	push   %rbx
   19de9:	48 83 ec 70          	sub    $0x70,%rsp
   19ded:	49 89 f7             	mov    %rsi,%r15
   19df0:	48 89 fb             	mov    %rdi,%rbx
   19df3:	48 8b 07             	mov    (%rdi),%rax
   19df6:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
   19dfa:	48 8b 77 10          	mov    0x10(%rdi),%rsi
   19dfe:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   19e03:	48 8d 05 56 ba fe ff 	lea    -0x145aa(%rip),%rax        # 5860 <<&T as core::fmt::Display>::fmt>
   19e0a:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   19e0f:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   19e14:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   19e19:	48 89 74 24 30       	mov    %rsi,0x30(%rsp)
   19e1e:	48 8d 05 2b ba fe ff 	lea    -0x145d5(%rip),%rax        # 5850 <<&T as core::fmt::Display>::fmt>
   19e25:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   19e2a:	48 8d 05 6f a4 02 00 	lea    0x2a46f(%rip),%rax        # 442a0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xd48>
   19e31:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   19e36:	48 c7 44 24 48 04 00 	movq   $0x4,0x48(%rsp)
   19e3d:	00 00 
   19e3f:	48 c7 44 24 50 00 00 	movq   $0x0,0x50(%rsp)
   19e46:	00 00 
   19e48:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   19e4d:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   19e52:	48 c7 44 24 68 03 00 	movq   $0x3,0x68(%rsp)
   19e59:	00 00 
   19e5b:	4c 8b 6a 48          	mov    0x48(%rdx),%r13
   19e5f:	4c 8d 74 24 40       	lea    0x40(%rsp),%r14
   19e64:	4c 89 ff             	mov    %r15,%rdi
   19e67:	4c 89 f6             	mov    %r14,%rsi
   19e6a:	41 ff d5             	callq  *%r13
   19e6d:	49 89 d4             	mov    %rdx,%r12
   19e70:	3c 03                	cmp    $0x3,%al
   19e72:	77 04                	ja     19e78 <std::panicking::default_hook::{{closure}}+0x98>
   19e74:	3c 02                	cmp    $0x2,%al
   19e76:	75 3a                	jne    19eb2 <std::panicking::default_hook::{{closure}}+0xd2>
   19e78:	49 8b 3c 24          	mov    (%r12),%rdi
   19e7c:	49 8b 44 24 08       	mov    0x8(%r12),%rax
   19e81:	ff 10                	callq  *(%rax)
   19e83:	49 8b 44 24 08       	mov    0x8(%r12),%rax
   19e88:	48 8b 70 08          	mov    0x8(%rax),%rsi
   19e8c:	48 85 f6             	test   %rsi,%rsi
   19e8f:	74 0e                	je     19e9f <std::panicking::default_hook::{{closure}}+0xbf>
   19e91:	49 8b 3c 24          	mov    (%r12),%rdi
   19e95:	48 8b 50 10          	mov    0x10(%rax),%rdx
   19e99:	ff 15 61 bd 02 00    	callq  *0x2bd61(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   19e9f:	be 18 00 00 00       	mov    $0x18,%esi
   19ea4:	ba 08 00 00 00       	mov    $0x8,%edx
   19ea9:	4c 89 e7             	mov    %r12,%rdi
   19eac:	ff 15 4e bd 02 00    	callq  *0x2bd4e(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   19eb2:	48 8b 43 18          	mov    0x18(%rbx),%rax
   19eb6:	8a 18                	mov    (%rax),%bl
   19eb8:	8d 43 fd             	lea    -0x3(%rbx),%eax
   19ebb:	0f b6 c8             	movzbl %al,%ecx
   19ebe:	48 8d 51 01          	lea    0x1(%rcx),%rdx
   19ec2:	31 c0                	xor    %eax,%eax
   19ec4:	80 f9 02             	cmp    $0x2,%cl
   19ec7:	48 0f 42 c2          	cmovb  %rdx,%rax
   19ecb:	48 85 c0             	test   %rax,%rax
   19ece:	0f 84 9b 00 00 00    	je     19f6f <std::panicking::default_hook::{{closure}}+0x18f>
   19ed4:	83 f8 01             	cmp    $0x1,%eax
   19ed7:	0f 84 43 01 00 00    	je     1a020 <std::panicking::default_hook::{{closure}}+0x240>
   19edd:	31 c0                	xor    %eax,%eax
   19edf:	86 05 3b c1 02 00    	xchg   %al,0x2c13b(%rip)        # 46020 <std::panicking::default_hook::{{closure}}::FIRST_PANIC>
   19ee5:	84 c0                	test   %al,%al
   19ee7:	0f 84 33 01 00 00    	je     1a020 <std::panicking::default_hook::{{closure}}+0x240>
   19eed:	48 8d 05 ec a3 02 00 	lea    0x2a3ec(%rip),%rax        # 442e0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xd88>
   19ef4:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   19ef9:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
   19f00:	00 00 
   19f02:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   19f09:	00 00 
   19f0b:	48 8d 05 46 d3 01 00 	lea    0x1d346(%rip),%rax        # 37258 <_fini+0x21d4>
   19f12:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   19f17:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   19f1e:	00 00 
   19f20:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   19f25:	4c 89 ff             	mov    %r15,%rdi
   19f28:	41 ff d5             	callq  *%r13
   19f2b:	48 89 d3             	mov    %rdx,%rbx
   19f2e:	3c 03                	cmp    $0x3,%al
   19f30:	77 08                	ja     19f3a <std::panicking::default_hook::{{closure}}+0x15a>
   19f32:	3c 02                	cmp    $0x2,%al
   19f34:	0f 85 e6 00 00 00    	jne    1a020 <std::panicking::default_hook::{{closure}}+0x240>
   19f3a:	48 8b 3b             	mov    (%rbx),%rdi
   19f3d:	48 8b 43 08          	mov    0x8(%rbx),%rax
   19f41:	ff 10                	callq  *(%rax)
   19f43:	48 8b 43 08          	mov    0x8(%rbx),%rax
   19f47:	48 8b 70 08          	mov    0x8(%rax),%rsi
   19f4b:	48 85 f6             	test   %rsi,%rsi
   19f4e:	74 0d                	je     19f5d <std::panicking::default_hook::{{closure}}+0x17d>
   19f50:	48 8b 3b             	mov    (%rbx),%rdi
   19f53:	48 8b 50 10          	mov    0x10(%rax),%rdx
   19f57:	ff 15 a3 bc 02 00    	callq  *0x2bca3(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   19f5d:	be 18 00 00 00       	mov    $0x18,%esi
   19f62:	ba 08 00 00 00       	mov    $0x8,%edx
   19f67:	48 89 df             	mov    %rbx,%rdi
   19f6a:	e9 ab 00 00 00       	jmpq   1a01a <std::panicking::default_hook::{{closure}}+0x23a>
   19f6f:	48 8d 3d 7a c1 02 00 	lea    0x2c17a(%rip),%rdi        # 460f0 <std::sys_common::backtrace::lock::LOCK>
   19f76:	ff 15 44 c0 02 00    	callq  *0x2c044(%rip)        # 45fc0 <pthread_mutex_lock@GLIBC_2.2.5>
   19f7c:	88 5c 24 0f          	mov    %bl,0xf(%rsp)
   19f80:	48 8d 44 24 0f       	lea    0xf(%rsp),%rax
   19f85:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   19f8a:	48 8d 05 8f dd ff ff 	lea    -0x2271(%rip),%rax        # 17d20 <<std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt>
   19f91:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   19f96:	48 8d 05 03 96 02 00 	lea    0x29603(%rip),%rax        # 435a0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x48>
   19f9d:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   19fa2:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
   19fa9:	00 00 
   19fab:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   19fb2:	00 00 
   19fb4:	4c 89 74 24 30       	mov    %r14,0x30(%rsp)
   19fb9:	48 c7 44 24 38 01 00 	movq   $0x1,0x38(%rsp)
   19fc0:	00 00 
   19fc2:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   19fc7:	4c 89 ff             	mov    %r15,%rdi
   19fca:	41 ff d5             	callq  *%r13
   19fcd:	48 89 c3             	mov    %rax,%rbx
   19fd0:	49 89 d7             	mov    %rdx,%r15
   19fd3:	48 8d 3d 16 c1 02 00 	lea    0x2c116(%rip),%rdi        # 460f0 <std::sys_common::backtrace::lock::LOCK>
   19fda:	ff 15 90 bd 02 00    	callq  *0x2bd90(%rip)        # 45d70 <pthread_mutex_unlock@GLIBC_2.2.5>
   19fe0:	80 fb 03             	cmp    $0x3,%bl
   19fe3:	77 05                	ja     19fea <std::panicking::default_hook::{{closure}}+0x20a>
   19fe5:	80 fb 02             	cmp    $0x2,%bl
   19fe8:	75 36                	jne    1a020 <std::panicking::default_hook::{{closure}}+0x240>
   19fea:	49 8b 3f             	mov    (%r15),%rdi
   19fed:	49 8b 47 08          	mov    0x8(%r15),%rax
   19ff1:	ff 10                	callq  *(%rax)
   19ff3:	49 8b 47 08          	mov    0x8(%r15),%rax
   19ff7:	48 8b 70 08          	mov    0x8(%rax),%rsi
   19ffb:	48 85 f6             	test   %rsi,%rsi
   19ffe:	74 0d                	je     1a00d <std::panicking::default_hook::{{closure}}+0x22d>
   1a000:	49 8b 3f             	mov    (%r15),%rdi
   1a003:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1a007:	ff 15 f3 bb 02 00    	callq  *0x2bbf3(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   1a00d:	be 18 00 00 00       	mov    $0x18,%esi
   1a012:	ba 08 00 00 00       	mov    $0x8,%edx
   1a017:	4c 89 ff             	mov    %r15,%rdi
   1a01a:	ff 15 e0 bb 02 00    	callq  *0x2bbe0(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   1a020:	48 83 c4 70          	add    $0x70,%rsp
   1a024:	5b                   	pop    %rbx
   1a025:	41 5c                	pop    %r12
   1a027:	41 5d                	pop    %r13
   1a029:	41 5e                	pop    %r14
   1a02b:	41 5f                	pop    %r15
   1a02d:	c3                   	retq   
   1a02e:	49 89 c6             	mov    %rax,%r14
   1a031:	48 8b 3b             	mov    (%rbx),%rdi
   1a034:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   1a038:	e8 a3 f8 fe ff       	callq  98e0 <alloc::alloc::box_free>
   1a03d:	48 89 df             	mov    %rbx,%rdi
   1a040:	eb 28                	jmp    1a06a <std::panicking::default_hook::{{closure}}+0x28a>
   1a042:	49 89 c6             	mov    %rax,%r14
   1a045:	49 8b 3f             	mov    (%r15),%rdi
   1a048:	49 8b 77 08          	mov    0x8(%r15),%rsi
   1a04c:	e8 8f f8 fe ff       	callq  98e0 <alloc::alloc::box_free>
   1a051:	4c 89 ff             	mov    %r15,%rdi
   1a054:	eb 14                	jmp    1a06a <std::panicking::default_hook::{{closure}}+0x28a>
   1a056:	49 89 c6             	mov    %rax,%r14
   1a059:	49 8b 3c 24          	mov    (%r12),%rdi
   1a05d:	49 8b 74 24 08       	mov    0x8(%r12),%rsi
   1a062:	e8 79 f8 fe ff       	callq  98e0 <alloc::alloc::box_free>
   1a067:	4c 89 e7             	mov    %r12,%rdi
   1a06a:	e8 91 f8 fe ff       	callq  9900 <alloc::alloc::box_free>
   1a06f:	eb 08                	jmp    1a079 <std::panicking::default_hook::{{closure}}+0x299>
   1a071:	49 89 c6             	mov    %rax,%r14
   1a074:	e8 07 cb fe ff       	callq  6b80 <core::ptr::drop_in_place>
   1a079:	4c 89 f7             	mov    %r14,%rdi
   1a07c:	e8 cf af fe ff       	callq  5050 <_Unwind_Resume@plt>
   1a081:	0f 0b                	ud2    
   1a083:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1a08a:	00 00 00 
   1a08d:	0f 1f 00             	nopl   (%rax)

000000000001a090 <std::panicking::try::cleanup>:
   1a090:	41 56                	push   %r14
   1a092:	53                   	push   %rbx
   1a093:	48 83 ec 18          	sub    $0x18,%rsp
   1a097:	ff 15 73 be 02 00    	callq  *0x2be73(%rip)        # 45f10 <_GLOBAL_OFFSET_TABLE_+0x580>
   1a09d:	48 89 c3             	mov    %rax,%rbx
   1a0a0:	49 89 d6             	mov    %rdx,%r14
   1a0a3:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1a0a8:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   1a0ad:	48 8d 05 d4 c0 02 00 	lea    0x2c0d4(%rip),%rax        # 46188 <std::panicking::panic_count::GLOBAL_PANIC_COUNT>
   1a0b4:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   1a0b9:	66 66 66 64 48 8b 04 	data16 data16 data16 mov %fs:0x0,%rax
   1a0c0:	25 00 00 00 00 
   1a0c5:	83 b8 e0 ff ff ff 01 	cmpl   $0x1,-0x20(%rax)
   1a0cc:	75 09                	jne    1a0d7 <std::panicking::try::cleanup+0x47>
   1a0ce:	48 8d 80 e8 ff ff ff 	lea    -0x18(%rax),%rax
   1a0d5:	eb 0a                	jmp    1a0e1 <std::panicking::try::cleanup+0x51>
   1a0d7:	e8 04 94 ff ff       	callq  134e0 <std::thread::local::fast::Key<T>::try_initialize>
   1a0dc:	48 85 c0             	test   %rax,%rax
   1a0df:	74 12                	je     1a0f3 <std::panicking::try::cleanup+0x63>
   1a0e1:	48 83 00 ff          	addq   $0xffffffffffffffff,(%rax)
   1a0e5:	48 89 d8             	mov    %rbx,%rax
   1a0e8:	4c 89 f2             	mov    %r14,%rdx
   1a0eb:	48 83 c4 18          	add    $0x18,%rsp
   1a0ef:	5b                   	pop    %rbx
   1a0f0:	41 5e                	pop    %r14
   1a0f2:	c3                   	retq   
   1a0f3:	48 8d 3d 54 d7 01 00 	lea    0x1d754(%rip),%rdi        # 3784e <str.6+0x52e>
   1a0fa:	48 8d 0d 1f 97 02 00 	lea    0x2971f(%rip),%rcx        # 43820 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2c8>
   1a101:	4c 8d 05 e8 99 02 00 	lea    0x299e8(%rip),%r8        # 43af0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x598>
   1a108:	48 89 e2             	mov    %rsp,%rdx
   1a10b:	be 46 00 00 00       	mov    $0x46,%esi
   1a110:	ff 15 d2 ba 02 00    	callq  *0x2bad2(%rip)        # 45be8 <_GLOBAL_OFFSET_TABLE_+0x258>
   1a116:	0f 0b                	ud2    
   1a118:	48 89 c3             	mov    %rax,%rbx
   1a11b:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   1a120:	e8 1b c0 fe ff       	callq  6140 <core::ptr::drop_in_place>
   1a125:	48 89 df             	mov    %rbx,%rdi
   1a128:	e8 23 af fe ff       	callq  5050 <_Unwind_Resume@plt>
   1a12d:	0f 0b                	ud2    
   1a12f:	90                   	nop

000000000001a130 <std::panicking::begin_panic_fmt>:
   1a130:	53                   	push   %rbx
   1a131:	48 83 ec 20          	sub    $0x20,%rsp
   1a135:	48 89 fb             	mov    %rdi,%rbx
   1a138:	48 89 f7             	mov    %rsi,%rdi
   1a13b:	ff 15 17 b9 02 00    	callq  *0x2b917(%rip)        # 45a58 <_GLOBAL_OFFSET_TABLE_+0xc8>
   1a141:	48 8d 0d 10 d1 01 00 	lea    0x1d110(%rip),%rcx        # 37258 <_fini+0x21d4>
   1a148:	48 89 0c 24          	mov    %rcx,(%rsp)
   1a14c:	48 8d 0d b5 95 02 00 	lea    0x295b5(%rip),%rcx        # 43708 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1b0>
   1a153:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   1a158:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
   1a15d:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1a162:	48 89 e7             	mov    %rsp,%rdi
   1a165:	ff 15 4d ba 02 00    	callq  *0x2ba4d(%rip)        # 45bb8 <_GLOBAL_OFFSET_TABLE_+0x228>
   1a16b:	0f 0b                	ud2    
   1a16d:	0f 1f 00             	nopl   (%rax)

000000000001a170 <rust_begin_unwind>:
   1a170:	41 56                	push   %r14
   1a172:	53                   	push   %rbx
   1a173:	48 83 ec 18          	sub    $0x18,%rsp
   1a177:	48 89 fb             	mov    %rdi,%rbx
   1a17a:	ff 15 70 ba 02 00    	callq  *0x2ba70(%rip)        # 45bf0 <_GLOBAL_OFFSET_TABLE_+0x260>
   1a180:	48 8d 35 69 a1 02 00 	lea    0x2a169(%rip),%rsi        # 442f0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xd98>
   1a187:	48 89 c7             	mov    %rax,%rdi
   1a18a:	e8 11 ec fe ff       	callq  8da0 <core::option::Option<T>::unwrap>
   1a18f:	49 89 c6             	mov    %rax,%r14
   1a192:	48 89 df             	mov    %rbx,%rdi
   1a195:	ff 15 ad b9 02 00    	callq  *0x2b9ad(%rip)        # 45b48 <_GLOBAL_OFFSET_TABLE_+0x1b8>
   1a19b:	48 89 c7             	mov    %rax,%rdi
   1a19e:	e8 cd eb fe ff       	callq  8d70 <core::option::Option<T>::unwrap>
   1a1a3:	48 89 04 24          	mov    %rax,(%rsp)
   1a1a7:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   1a1ac:	4c 89 74 24 10       	mov    %r14,0x10(%rsp)
   1a1b1:	48 89 e7             	mov    %rsp,%rdi
   1a1b4:	e8 57 e1 ff ff       	callq  18310 <std::sys_common::backtrace::__rust_end_short_backtrace>
   1a1b9:	0f 0b                	ud2    
   1a1bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001a1c0 <std::panicking::begin_panic_handler::{{closure}}>:
   1a1c0:	53                   	push   %rbx
   1a1c1:	48 83 ec 20          	sub    $0x20,%rsp
   1a1c5:	48 89 fb             	mov    %rdi,%rbx
   1a1c8:	48 8b 07             	mov    (%rdi),%rax
   1a1cb:	48 89 04 24          	mov    %rax,(%rsp)
   1a1cf:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   1a1d6:	00 00 
   1a1d8:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   1a1dc:	ff 15 66 b9 02 00    	callq  *0x2b966(%rip)        # 45b48 <_GLOBAL_OFFSET_TABLE_+0x1b8>
   1a1e2:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
   1a1e6:	48 8d 35 33 a1 02 00 	lea    0x2a133(%rip),%rsi        # 44320 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xdc8>
   1a1ed:	48 89 e7             	mov    %rsp,%rdi
   1a1f0:	48 89 c2             	mov    %rax,%rdx
   1a1f3:	ff 15 8f ba 02 00    	callq  *0x2ba8f(%rip)        # 45c88 <_GLOBAL_OFFSET_TABLE_+0x2f8>
   1a1f9:	0f 0b                	ud2    
   1a1fb:	48 89 c3             	mov    %rax,%rbx
   1a1fe:	48 89 e7             	mov    %rsp,%rdi
   1a201:	e8 8a c9 fe ff       	callq  6b90 <core::ptr::drop_in_place>
   1a206:	48 89 df             	mov    %rbx,%rdi
   1a209:	e8 42 ae fe ff       	callq  5050 <_Unwind_Resume@plt>
   1a20e:	0f 0b                	ud2    

000000000001a210 <<std::panicking::begin_panic_handler::PanicPayload as core::panic::BoxMeUp>::take_box>:
   1a210:	41 56                	push   %r14
   1a212:	53                   	push   %rbx
   1a213:	48 83 ec 58          	sub    $0x58,%rsp
   1a217:	48 89 fb             	mov    %rdi,%rbx
   1a21a:	4c 8b 77 08          	mov    0x8(%rdi),%r14
   1a21e:	4d 85 f6             	test   %r14,%r14
   1a221:	0f 85 94 00 00 00    	jne    1a2bb <<std::panicking::begin_panic_handler::PanicPayload as core::panic::BoxMeUp>::take_box+0xab>
   1a227:	48 8b 03             	mov    (%rbx),%rax
   1a22a:	48 c7 04 24 01 00 00 	movq   $0x1,(%rsp)
   1a231:	00 
   1a232:	0f 57 c0             	xorps  %xmm0,%xmm0
   1a235:	0f 11 44 24 08       	movups %xmm0,0x8(%rsp)
   1a23a:	48 89 e1             	mov    %rsp,%rcx
   1a23d:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   1a242:	0f 10 00             	movups (%rax),%xmm0
   1a245:	0f 10 48 10          	movups 0x10(%rax),%xmm1
   1a249:	0f 10 50 20          	movups 0x20(%rax),%xmm2
   1a24d:	0f 29 54 24 40       	movaps %xmm2,0x40(%rsp)
   1a252:	0f 29 4c 24 30       	movaps %xmm1,0x30(%rsp)
   1a257:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   1a25c:	48 8d 35 7d 93 02 00 	lea    0x2937d(%rip),%rsi        # 435e0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x88>
   1a263:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   1a268:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
   1a26d:	ff 15 8d bb 02 00    	callq  *0x2bb8d(%rip)        # 45e00 <_GLOBAL_OFFSET_TABLE_+0x470>
   1a273:	4c 8d 73 08          	lea    0x8(%rbx),%r14
   1a277:	0f 10 04 24          	movups (%rsp),%xmm0
   1a27b:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   1a280:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1a285:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1a28a:	49 8b 3e             	mov    (%r14),%rdi
   1a28d:	48 85 ff             	test   %rdi,%rdi
   1a290:	74 14                	je     1a2a6 <<std::panicking::begin_panic_handler::PanicPayload as core::panic::BoxMeUp>::take_box+0x96>
   1a292:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   1a296:	48 85 f6             	test   %rsi,%rsi
   1a299:	74 0b                	je     1a2a6 <<std::panicking::begin_panic_handler::PanicPayload as core::panic::BoxMeUp>::take_box+0x96>
   1a29b:	ba 01 00 00 00       	mov    $0x1,%edx
   1a2a0:	ff 15 5a b9 02 00    	callq  *0x2b95a(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   1a2a6:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   1a2ab:	49 89 46 10          	mov    %rax,0x10(%r14)
   1a2af:	0f 28 44 24 20       	movaps 0x20(%rsp),%xmm0
   1a2b4:	41 0f 11 06          	movups %xmm0,(%r14)
   1a2b8:	4d 8b 36             	mov    (%r14),%r14
   1a2bb:	0f 10 43 10          	movups 0x10(%rbx),%xmm0
   1a2bf:	0f 29 04 24          	movaps %xmm0,(%rsp)
   1a2c3:	48 c7 43 08 01 00 00 	movq   $0x1,0x8(%rbx)
   1a2ca:	00 
   1a2cb:	0f 57 c0             	xorps  %xmm0,%xmm0
   1a2ce:	0f 11 43 10          	movups %xmm0,0x10(%rbx)
   1a2d2:	0f 28 04 24          	movaps (%rsp),%xmm0
   1a2d6:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   1a2db:	bf 18 00 00 00       	mov    $0x18,%edi
   1a2e0:	be 08 00 00 00       	mov    $0x8,%esi
   1a2e5:	ff 15 9d b8 02 00    	callq  *0x2b89d(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   1a2eb:	48 85 c0             	test   %rax,%rax
   1a2ee:	74 1b                	je     1a30b <<std::panicking::begin_panic_handler::PanicPayload as core::panic::BoxMeUp>::take_box+0xfb>
   1a2f0:	4c 89 30             	mov    %r14,(%rax)
   1a2f3:	0f 28 44 24 20       	movaps 0x20(%rsp),%xmm0
   1a2f8:	0f 11 40 08          	movups %xmm0,0x8(%rax)
   1a2fc:	48 8d 15 45 a0 02 00 	lea    0x2a045(%rip),%rdx        # 44348 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xdf0>
   1a303:	48 83 c4 58          	add    $0x58,%rsp
   1a307:	5b                   	pop    %rbx
   1a308:	41 5e                	pop    %r14
   1a30a:	c3                   	retq   
   1a30b:	bf 18 00 00 00       	mov    $0x18,%edi
   1a310:	be 08 00 00 00       	mov    $0x8,%esi
   1a315:	ff 15 0d b8 02 00    	callq  *0x2b80d(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   1a31b:	0f 0b                	ud2    
   1a31d:	48 89 c3             	mov    %rax,%rbx
   1a320:	48 89 e7             	mov    %rsp,%rdi
   1a323:	e8 18 c4 fe ff       	callq  6740 <core::ptr::drop_in_place>
   1a328:	48 89 df             	mov    %rbx,%rdi
   1a32b:	e8 20 ad fe ff       	callq  5050 <_Unwind_Resume@plt>
   1a330:	0f 0b                	ud2    
   1a332:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1a339:	00 00 00 
   1a33c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001a340 <<std::panicking::begin_panic_handler::PanicPayload as core::panic::BoxMeUp>::get>:
   1a340:	41 56                	push   %r14
   1a342:	53                   	push   %rbx
   1a343:	48 83 ec 58          	sub    $0x58,%rsp
   1a347:	4c 8d 77 08          	lea    0x8(%rdi),%r14
   1a34b:	48 83 7f 08 00       	cmpq   $0x0,0x8(%rdi)
   1a350:	0f 85 90 00 00 00    	jne    1a3e6 <<std::panicking::begin_panic_handler::PanicPayload as core::panic::BoxMeUp>::get+0xa6>
   1a356:	48 89 fb             	mov    %rdi,%rbx
   1a359:	48 8b 07             	mov    (%rdi),%rax
   1a35c:	48 c7 04 24 01 00 00 	movq   $0x1,(%rsp)
   1a363:	00 
   1a364:	0f 57 c0             	xorps  %xmm0,%xmm0
   1a367:	0f 11 44 24 08       	movups %xmm0,0x8(%rsp)
   1a36c:	48 89 e1             	mov    %rsp,%rcx
   1a36f:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   1a374:	0f 10 00             	movups (%rax),%xmm0
   1a377:	0f 10 48 10          	movups 0x10(%rax),%xmm1
   1a37b:	0f 10 50 20          	movups 0x20(%rax),%xmm2
   1a37f:	0f 29 54 24 40       	movaps %xmm2,0x40(%rsp)
   1a384:	0f 29 4c 24 30       	movaps %xmm1,0x30(%rsp)
   1a389:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   1a38e:	48 8d 35 4b 92 02 00 	lea    0x2924b(%rip),%rsi        # 435e0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x88>
   1a395:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   1a39a:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
   1a39f:	ff 15 5b ba 02 00    	callq  *0x2ba5b(%rip)        # 45e00 <_GLOBAL_OFFSET_TABLE_+0x470>
   1a3a5:	0f 10 04 24          	movups (%rsp),%xmm0
   1a3a9:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   1a3ae:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1a3b3:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1a3b8:	49 8b 3e             	mov    (%r14),%rdi
   1a3bb:	48 85 ff             	test   %rdi,%rdi
   1a3be:	74 14                	je     1a3d4 <<std::panicking::begin_panic_handler::PanicPayload as core::panic::BoxMeUp>::get+0x94>
   1a3c0:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   1a3c4:	48 85 f6             	test   %rsi,%rsi
   1a3c7:	74 0b                	je     1a3d4 <<std::panicking::begin_panic_handler::PanicPayload as core::panic::BoxMeUp>::get+0x94>
   1a3c9:	ba 01 00 00 00       	mov    $0x1,%edx
   1a3ce:	ff 15 2c b8 02 00    	callq  *0x2b82c(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   1a3d4:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   1a3d9:	49 89 46 10          	mov    %rax,0x10(%r14)
   1a3dd:	0f 28 44 24 20       	movaps 0x20(%rsp),%xmm0
   1a3e2:	41 0f 11 06          	movups %xmm0,(%r14)
   1a3e6:	48 8d 15 5b 9f 02 00 	lea    0x29f5b(%rip),%rdx        # 44348 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xdf0>
   1a3ed:	4c 89 f0             	mov    %r14,%rax
   1a3f0:	48 83 c4 58          	add    $0x58,%rsp
   1a3f4:	5b                   	pop    %rbx
   1a3f5:	41 5e                	pop    %r14
   1a3f7:	c3                   	retq   
   1a3f8:	48 89 c3             	mov    %rax,%rbx
   1a3fb:	48 89 e7             	mov    %rsp,%rdi
   1a3fe:	e8 3d c3 fe ff       	callq  6740 <core::ptr::drop_in_place>
   1a403:	48 89 df             	mov    %rbx,%rdi
   1a406:	e8 45 ac fe ff       	callq  5050 <_Unwind_Resume@plt>
   1a40b:	0f 0b                	ud2    
   1a40d:	0f 1f 00             	nopl   (%rax)

000000000001a410 <std::panicking::begin_panic>:
   1a410:	41 56                	push   %r14
   1a412:	53                   	push   %rbx
   1a413:	48 83 ec 18          	sub    $0x18,%rsp
   1a417:	49 89 f6             	mov    %rsi,%r14
   1a41a:	48 89 fb             	mov    %rdi,%rbx
   1a41d:	48 89 d7             	mov    %rdx,%rdi
   1a420:	ff 15 32 b6 02 00    	callq  *0x2b632(%rip)        # 45a58 <_GLOBAL_OFFSET_TABLE_+0xc8>
   1a426:	48 89 1c 24          	mov    %rbx,(%rsp)
   1a42a:	4c 89 74 24 08       	mov    %r14,0x8(%rsp)
   1a42f:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1a434:	48 89 e7             	mov    %rsp,%rdi
   1a437:	e8 b4 de ff ff       	callq  182f0 <std::sys_common::backtrace::__rust_end_short_backtrace>
   1a43c:	0f 0b                	ud2    
   1a43e:	66 90                	xchg   %ax,%ax

000000000001a440 <std::panicking::begin_panic::{{closure}}>:
   1a440:	48 83 ec 18          	sub    $0x18,%rsp
   1a444:	0f 10 07             	movups (%rdi),%xmm0
   1a447:	0f 11 44 24 08       	movups %xmm0,0x8(%rsp)
   1a44c:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
   1a450:	48 8d 35 11 9f 02 00 	lea    0x29f11(%rip),%rsi        # 44368 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xe10>
   1a457:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   1a45c:	31 d2                	xor    %edx,%edx
   1a45e:	ff 15 24 b8 02 00    	callq  *0x2b824(%rip)        # 45c88 <_GLOBAL_OFFSET_TABLE_+0x2f8>
   1a464:	0f 0b                	ud2    
   1a466:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1a46d:	00 00 00 

000000000001a470 <<std::panicking::begin_panic::PanicPayload<A> as core::panic::BoxMeUp>::take_box>:
   1a470:	41 56                	push   %r14
   1a472:	53                   	push   %rbx
   1a473:	50                   	push   %rax
   1a474:	48 8b 1f             	mov    (%rdi),%rbx
   1a477:	4c 8b 77 08          	mov    0x8(%rdi),%r14
   1a47b:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   1a482:	48 85 db             	test   %rbx,%rbx
   1a485:	74 2b                	je     1a4b2 <<std::panicking::begin_panic::PanicPayload<A> as core::panic::BoxMeUp>::take_box+0x42>
   1a487:	bf 10 00 00 00       	mov    $0x10,%edi
   1a48c:	be 08 00 00 00       	mov    $0x8,%esi
   1a491:	ff 15 f1 b6 02 00    	callq  *0x2b6f1(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   1a497:	48 85 c0             	test   %rax,%rax
   1a49a:	74 1e                	je     1a4ba <<std::panicking::begin_panic::PanicPayload<A> as core::panic::BoxMeUp>::take_box+0x4a>
   1a49c:	48 89 18             	mov    %rbx,(%rax)
   1a49f:	4c 89 70 08          	mov    %r14,0x8(%rax)
   1a4a3:	48 8d 15 e6 9e 02 00 	lea    0x29ee6(%rip),%rdx        # 44390 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xe38>
   1a4aa:	48 83 c4 08          	add    $0x8,%rsp
   1a4ae:	5b                   	pop    %rbx
   1a4af:	41 5e                	pop    %r14
   1a4b1:	c3                   	retq   
   1a4b2:	ff 15 10 b7 02 00    	callq  *0x2b710(%rip)        # 45bc8 <_GLOBAL_OFFSET_TABLE_+0x238>
   1a4b8:	0f 0b                	ud2    
   1a4ba:	bf 10 00 00 00       	mov    $0x10,%edi
   1a4bf:	be 08 00 00 00       	mov    $0x8,%esi
   1a4c4:	ff 15 5e b6 02 00    	callq  *0x2b65e(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   1a4ca:	0f 0b                	ud2    
   1a4cc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001a4d0 <<std::panicking::begin_panic::PanicPayload<A> as core::panic::BoxMeUp>::get>:
   1a4d0:	50                   	push   %rax
   1a4d1:	48 83 3f 00          	cmpq   $0x0,(%rdi)
   1a4d5:	74 0c                	je     1a4e3 <<std::panicking::begin_panic::PanicPayload<A> as core::panic::BoxMeUp>::get+0x13>
   1a4d7:	48 89 f8             	mov    %rdi,%rax
   1a4da:	48 8d 15 af 9e 02 00 	lea    0x29eaf(%rip),%rdx        # 44390 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xe38>
   1a4e1:	59                   	pop    %rcx
   1a4e2:	c3                   	retq   
   1a4e3:	ff 15 df b6 02 00    	callq  *0x2b6df(%rip)        # 45bc8 <_GLOBAL_OFFSET_TABLE_+0x238>
   1a4e9:	0f 0b                	ud2    
   1a4eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001a4f0 <std::panicking::rust_panic_with_hook>:
   1a4f0:	55                   	push   %rbp
   1a4f1:	41 57                	push   %r15
   1a4f3:	41 56                	push   %r14
   1a4f5:	41 55                	push   %r13
   1a4f7:	41 54                	push   %r12
   1a4f9:	53                   	push   %rbx
   1a4fa:	48 83 ec 38          	sub    $0x38,%rsp
   1a4fe:	49 89 cc             	mov    %rcx,%r12
   1a501:	49 89 d5             	mov    %rdx,%r13
   1a504:	49 89 f6             	mov    %rsi,%r14
   1a507:	49 89 ff             	mov    %rdi,%r15
   1a50a:	48 8d 05 77 bc 02 00 	lea    0x2bc77(%rip),%rax        # 46188 <std::panicking::panic_count::GLOBAL_PANIC_COUNT>
   1a511:	f0 48 83 00 01       	lock addq $0x1,(%rax)
   1a516:	66 66 66 64 48 8b 04 	data16 data16 data16 mov %fs:0x0,%rax
   1a51d:	25 00 00 00 00 
   1a522:	83 b8 e0 ff ff ff 01 	cmpl   $0x1,-0x20(%rax)
   1a529:	75 09                	jne    1a534 <std::panicking::rust_panic_with_hook+0x44>
   1a52b:	48 8d 80 e8 ff ff ff 	lea    -0x18(%rax),%rax
   1a532:	eb 31                	jmp    1a565 <std::panicking::rust_panic_with_hook+0x75>
   1a534:	e8 a7 8f ff ff       	callq  134e0 <std::thread::local::fast::Key<T>::try_initialize>
   1a539:	48 85 c0             	test   %rax,%rax
   1a53c:	75 27                	jne    1a565 <std::panicking::rust_panic_with_hook+0x75>
   1a53e:	48 8d 3d 09 d3 01 00 	lea    0x1d309(%rip),%rdi        # 3784e <str.6+0x52e>
   1a545:	48 8d 0d d4 92 02 00 	lea    0x292d4(%rip),%rcx        # 43820 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2c8>
   1a54c:	4c 8d 05 9d 95 02 00 	lea    0x2959d(%rip),%r8        # 43af0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x598>
   1a553:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   1a558:	be 46 00 00 00       	mov    $0x46,%esi
   1a55d:	ff 15 85 b6 02 00    	callq  *0x2b685(%rip)        # 45be8 <_GLOBAL_OFFSET_TABLE_+0x258>
   1a563:	0f 0b                	ud2    
   1a565:	48 8b 18             	mov    (%rax),%rbx
   1a568:	48 83 c3 01          	add    $0x1,%rbx
   1a56c:	48 89 18             	mov    %rbx,(%rax)
   1a56f:	48 83 fb 02          	cmp    $0x2,%rbx
   1a573:	76 41                	jbe    1a5b6 <std::panicking::rust_panic_with_hook+0xc6>
   1a575:	48 8d 05 34 9e 02 00 	lea    0x29e34(%rip),%rax        # 443b0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xe58>
   1a57c:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1a581:	48 c7 44 24 10 01 00 	movq   $0x1,0x10(%rsp)
   1a588:	00 00 
   1a58a:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   1a591:	00 00 
   1a593:	48 8d 05 be cc 01 00 	lea    0x1ccbe(%rip),%rax        # 37258 <_fini+0x21d4>
   1a59a:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1a59f:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   1a5a6:	00 00 
   1a5a8:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   1a5ad:	e8 0e ef ff ff       	callq  194c0 <std::sys_common::util::dumb_print>
   1a5b2:	0f 0b                	ud2    
   1a5b4:	0f 0b                	ud2    
   1a5b6:	48 8d 2d 9b cc 01 00 	lea    0x1cc9b(%rip),%rbp        # 37258 <_fini+0x21d4>
   1a5bd:	48 89 6c 24 08       	mov    %rbp,0x8(%rsp)
   1a5c2:	48 8d 05 3f 91 02 00 	lea    0x2913f(%rip),%rax        # 43708 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1b0>
   1a5c9:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1a5ce:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   1a5d3:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
   1a5d8:	48 8d 3d 51 bb 02 00 	lea    0x2bb51(%rip),%rdi        # 46130 <std::panicking::HOOK_LOCK>
   1a5df:	ff 15 bb b6 02 00    	callq  *0x2b6bb(%rip)        # 45ca0 <pthread_rwlock_rdlock@GLIBC_2.2.5>
   1a5e5:	85 c0                	test   %eax,%eax
   1a5e7:	74 28                	je     1a611 <std::panicking::rust_panic_with_hook+0x121>
   1a5e9:	83 f8 23             	cmp    $0x23,%eax
   1a5ec:	0f 84 e3 00 00 00    	je     1a6d5 <std::panicking::rust_panic_with_hook+0x1e5>
   1a5f2:	83 f8 0b             	cmp    $0xb,%eax
   1a5f5:	75 27                	jne    1a61e <std::panicking::rust_panic_with_hook+0x12e>
   1a5f7:	48 8d 3d b6 dd 01 00 	lea    0x1ddb6(%rip),%rdi        # 383b4 <str.6+0x1094>
   1a5fe:	48 8d 15 b3 9f 02 00 	lea    0x29fb3(%rip),%rdx        # 445b8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1060>
   1a605:	be 24 00 00 00       	mov    $0x24,%esi
   1a60a:	e8 01 fe ff ff       	callq  1a410 <std::panicking::begin_panic>
   1a60f:	0f 0b                	ud2    
   1a611:	80 3d 58 bb 02 00 00 	cmpb   $0x0,0x2bb58(%rip)        # 46170 <std::panicking::HOOK_LOCK+0x40>
   1a618:	0f 85 aa 00 00 00    	jne    1a6c8 <std::panicking::rust_panic_with_hook+0x1d8>
   1a61e:	49 89 ed             	mov    %rbp,%r13
   1a621:	f0 48 83 05 3e bb 02 	lock addq $0x1,0x2bb3e(%rip)        # 46168 <std::panicking::HOOK_LOCK+0x38>
   1a628:	00 01 
   1a62a:	48 8b 2d 4f bb 02 00 	mov    0x2bb4f(%rip),%rbp        # 46180 <std::panicking::HOOK+0x8>
   1a631:	48 85 ed             	test   %rbp,%rbp
   1a634:	75 1d                	jne    1a653 <std::panicking::rust_panic_with_hook+0x163>
   1a636:	4c 89 ff             	mov    %r15,%rdi
   1a639:	41 ff 56 20          	callq  *0x20(%r14)
   1a63d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1a642:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   1a647:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   1a64c:	e8 5f f3 ff ff       	callq  199b0 <std::panicking::default_hook>
   1a651:	eb 23                	jmp    1a676 <std::panicking::rust_panic_with_hook+0x186>
   1a653:	4c 8b 25 1e bb 02 00 	mov    0x2bb1e(%rip),%r12        # 46178 <std::panicking::HOOK>
   1a65a:	4c 89 ff             	mov    %r15,%rdi
   1a65d:	41 ff 56 20          	callq  *0x20(%r14)
   1a661:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1a666:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   1a66b:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   1a670:	4c 89 e7             	mov    %r12,%rdi
   1a673:	ff 55 18             	callq  *0x18(%rbp)
   1a676:	f0 48 83 2d e9 ba 02 	lock subq $0x1,0x2bae9(%rip)        # 46168 <std::panicking::HOOK_LOCK+0x38>
   1a67d:	00 01 
   1a67f:	48 8d 3d aa ba 02 00 	lea    0x2baaa(%rip),%rdi        # 46130 <std::panicking::HOOK_LOCK>
   1a686:	ff 15 3c b7 02 00    	callq  *0x2b73c(%rip)        # 45dc8 <pthread_rwlock_unlock@GLIBC_2.2.5>
   1a68c:	48 83 fb 01          	cmp    $0x1,%rbx
   1a690:	76 28                	jbe    1a6ba <std::panicking::rust_panic_with_hook+0x1ca>
   1a692:	48 8d 05 27 9d 02 00 	lea    0x29d27(%rip),%rax        # 443c0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xe68>
   1a699:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1a69e:	48 c7 44 24 10 01 00 	movq   $0x1,0x10(%rsp)
   1a6a5:	00 00 
   1a6a7:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   1a6ae:	00 00 
   1a6b0:	4c 89 6c 24 28       	mov    %r13,0x28(%rsp)
   1a6b5:	e9 e5 fe ff ff       	jmpq   1a59f <std::panicking::rust_panic_with_hook+0xaf>
   1a6ba:	4c 89 ff             	mov    %r15,%rdi
   1a6bd:	4c 89 f6             	mov    %r14,%rsi
   1a6c0:	ff 15 32 b3 02 00    	callq  *0x2b332(%rip)        # 459f8 <_GLOBAL_OFFSET_TABLE_+0x68>
   1a6c6:	0f 0b                	ud2    
   1a6c8:	48 8d 3d 61 ba 02 00 	lea    0x2ba61(%rip),%rdi        # 46130 <std::panicking::HOOK_LOCK>
   1a6cf:	ff 15 f3 b6 02 00    	callq  *0x2b6f3(%rip)        # 45dc8 <pthread_rwlock_unlock@GLIBC_2.2.5>
   1a6d5:	48 8d 3d 1e dd 01 00 	lea    0x1dd1e(%rip),%rdi        # 383fa <str.6+0x10da>
   1a6dc:	48 8d 15 ed 9e 02 00 	lea    0x29eed(%rip),%rdx        # 445d0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1078>
   1a6e3:	be 29 00 00 00       	mov    $0x29,%esi
   1a6e8:	e8 23 fd ff ff       	callq  1a410 <std::panicking::begin_panic>
   1a6ed:	0f 0b                	ud2    
   1a6ef:	90                   	nop

000000000001a6f0 <rust_panic>:
   1a6f0:	48 83 ec 58          	sub    $0x58,%rsp
   1a6f4:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   1a6f9:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   1a6fe:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   1a703:	ff 15 ef b4 02 00    	callq  *0x2b4ef(%rip)        # 45bf8 <_GLOBAL_OFFSET_TABLE_+0x268>
   1a709:	89 44 24 04          	mov    %eax,0x4(%rsp)
   1a70d:	48 8d 44 24 04       	lea    0x4(%rsp),%rax
   1a712:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1a717:	48 8d 05 72 9c 01 00 	lea    0x19c72(%rip),%rax        # 34390 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt>
   1a71e:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1a723:	48 8d 05 a6 9c 02 00 	lea    0x29ca6(%rip),%rax        # 443d0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xe78>
   1a72a:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1a72f:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
   1a736:	00 00 
   1a738:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   1a73f:	00 00 
   1a741:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
   1a746:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1a74b:	48 c7 44 24 50 01 00 	movq   $0x1,0x50(%rsp)
   1a752:	00 00 
   1a754:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
   1a759:	e8 12 ee ff ff       	callq  19570 <std::sys_common::util::abort>
   1a75e:	0f 0b                	ud2    

000000000001a760 <std::rt::lang_start_internal>:
   1a760:	55                   	push   %rbp
   1a761:	41 57                	push   %r15
   1a763:	41 56                	push   %r14
   1a765:	41 55                	push   %r13
   1a767:	41 54                	push   %r12
   1a769:	53                   	push   %rbx
   1a76a:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
   1a771:	49 89 f6             	mov    %rsi,%r14
   1a774:	49 89 ff             	mov    %rdi,%r15
   1a777:	48 c7 44 24 50 00 00 	movq   $0x0,0x50(%rsp)
   1a77e:	00 00 
   1a780:	0f 28 05 69 ba 01 00 	movaps 0x1ba69(%rip),%xmm0        # 361f0 <_fini+0x116c>
   1a787:	0f 11 44 24 58       	movups %xmm0,0x58(%rsp)
   1a78c:	4c 8d 64 24 50       	lea    0x50(%rsp),%r12
   1a791:	48 8b 2d b0 b6 02 00 	mov    0x2b6b0(%rip),%rbp        # 45e48 <poll@GLIBC_2.2.5>
   1a798:	48 8b 1d 81 b2 02 00 	mov    0x2b281(%rip),%rbx        # 45a20 <__errno_location@GLIBC_2.2.5>
   1a79f:	90                   	nop
   1a7a0:	be 03 00 00 00       	mov    $0x3,%esi
   1a7a5:	4c 89 e7             	mov    %r12,%rdi
   1a7a8:	31 d2                	xor    %edx,%edx
   1a7aa:	ff d5                	callq  *%rbp
   1a7ac:	83 f8 ff             	cmp    $0xffffffff,%eax
   1a7af:	75 0f                	jne    1a7c0 <std::rt::lang_start_internal+0x60>
   1a7b1:	ff d3                	callq  *%rbx
   1a7b3:	83 38 04             	cmpl   $0x4,(%rax)
   1a7b6:	74 e8                	je     1a7a0 <std::rt::lang_start_internal+0x40>
   1a7b8:	ff 15 52 b2 02 00    	callq  *0x2b252(%rip)        # 45a10 <abort@GLIBC_2.2.5>
   1a7be:	0f 0b                	ud2    
   1a7c0:	f6 44 24 56 20       	testb  $0x20,0x56(%rsp)
   1a7c5:	74 1b                	je     1a7e2 <std::rt::lang_start_internal+0x82>
   1a7c7:	48 8d 3d dc db 01 00 	lea    0x1dbdc(%rip),%rdi        # 383aa <str.6+0x108a>
   1a7ce:	be 02 00 00 00       	mov    $0x2,%esi
   1a7d3:	31 d2                	xor    %edx,%edx
   1a7d5:	31 c0                	xor    %eax,%eax
   1a7d7:	ff 15 f3 b6 02 00    	callq  *0x2b6f3(%rip)        # 45ed0 <open@GLIBC_2.2.5>
   1a7dd:	83 f8 ff             	cmp    $0xffffffff,%eax
   1a7e0:	74 d6                	je     1a7b8 <std::rt::lang_start_internal+0x58>
   1a7e2:	f6 44 24 5e 20       	testb  $0x20,0x5e(%rsp)
   1a7e7:	74 1b                	je     1a804 <std::rt::lang_start_internal+0xa4>
   1a7e9:	48 8d 3d ba db 01 00 	lea    0x1dbba(%rip),%rdi        # 383aa <str.6+0x108a>
   1a7f0:	be 02 00 00 00       	mov    $0x2,%esi
   1a7f5:	31 d2                	xor    %edx,%edx
   1a7f7:	31 c0                	xor    %eax,%eax
   1a7f9:	ff 15 d1 b6 02 00    	callq  *0x2b6d1(%rip)        # 45ed0 <open@GLIBC_2.2.5>
   1a7ff:	83 f8 ff             	cmp    $0xffffffff,%eax
   1a802:	74 b4                	je     1a7b8 <std::rt::lang_start_internal+0x58>
   1a804:	f6 44 24 66 20       	testb  $0x20,0x66(%rsp)
   1a809:	74 1b                	je     1a826 <std::rt::lang_start_internal+0xc6>
   1a80b:	48 8d 3d 98 db 01 00 	lea    0x1db98(%rip),%rdi        # 383aa <str.6+0x108a>
   1a812:	be 02 00 00 00       	mov    $0x2,%esi
   1a817:	31 d2                	xor    %edx,%edx
   1a819:	31 c0                	xor    %eax,%eax
   1a81b:	ff 15 af b6 02 00    	callq  *0x2b6af(%rip)        # 45ed0 <open@GLIBC_2.2.5>
   1a821:	83 f8 ff             	cmp    $0xffffffff,%eax
   1a824:	74 92                	je     1a7b8 <std::rt::lang_start_internal+0x58>
   1a826:	be 01 00 00 00       	mov    $0x1,%esi
   1a82b:	bf 0d 00 00 00       	mov    $0xd,%edi
   1a830:	ff 15 82 b4 02 00    	callq  *0x2b482(%rip)        # 45cb8 <signal@GLIBC_2.2.5>
   1a836:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1a83a:	0f 84 cc 02 00 00    	je     1ab0c <std::rt::lang_start_internal+0x3ac>
   1a840:	bf 1e 00 00 00       	mov    $0x1e,%edi
   1a845:	ff 15 a5 b6 02 00    	callq  *0x2b6a5(%rip)        # 45ef0 <sysconf@GLIBC_2.2.5>
   1a84b:	48 89 05 a6 b9 02 00 	mov    %rax,0x2b9a6(%rip)        # 461f8 <std::sys::unix::thread::guard::PAGE_SIZE>
   1a852:	48 8b 2d 9f b9 02 00 	mov    0x2b99f(%rip),%rbp        # 461f8 <std::sys::unix::thread::guard::PAGE_SIZE>
   1a859:	48 85 ed             	test   %rbp,%rbp
   1a85c:	0f 84 c4 02 00 00    	je     1ab26 <std::rt::lang_start_internal+0x3c6>
   1a862:	49 89 c4             	mov    %rax,%r12
   1a865:	0f 57 c0             	xorps  %xmm0,%xmm0
   1a868:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
   1a86d:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
   1a872:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   1a877:	48 c7 84 24 80 00 00 	movq   $0x0,0x80(%rsp)
   1a87e:	00 00 00 00 00 
   1a883:	ff 15 0f b6 02 00    	callq  *0x2b60f(%rip)        # 45e98 <pthread_self@GLIBC_2.2.5>
   1a889:	48 8d 74 24 50       	lea    0x50(%rsp),%rsi
   1a88e:	48 89 c7             	mov    %rax,%rdi
   1a891:	ff 15 91 b1 02 00    	callq  *0x2b191(%rip)        # 45a28 <pthread_getattr_np@GLIBC_2.2.5>
   1a897:	85 c0                	test   %eax,%eax
   1a899:	74 08                	je     1a8a3 <std::rt::lang_start_internal+0x143>
   1a89b:	45 31 e4             	xor    %r12d,%r12d
   1a89e:	e9 87 00 00 00       	jmpq   1a92a <std::rt::lang_start_internal+0x1ca>
   1a8a3:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   1a8aa:	00 00 
   1a8ac:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   1a8b3:	00 00 
   1a8b5:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
   1a8ba:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
   1a8bf:	4c 8d 6c 24 28       	lea    0x28(%rsp),%r13
   1a8c4:	4c 89 ea             	mov    %r13,%rdx
   1a8c7:	ff 15 8b b3 02 00    	callq  *0x2b38b(%rip)        # 45c58 <pthread_attr_getstack@GLIBC_2.2.5>
   1a8cd:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
   1a8d1:	85 c0                	test   %eax,%eax
   1a8d3:	0f 85 79 02 00 00    	jne    1ab52 <std::rt::lang_start_internal+0x3f2>
   1a8d9:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
   1a8de:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
   1a8e3:	ff 15 2f b6 02 00    	callq  *0x2b62f(%rip)        # 45f18 <pthread_attr_destroy@GLIBC_2.2.5>
   1a8e9:	89 44 24 28          	mov    %eax,0x28(%rsp)
   1a8ed:	85 c0                	test   %eax,%eax
   1a8ef:	0f 85 e1 02 00 00    	jne    1abd6 <std::rt::lang_start_internal+0x476>
   1a8f5:	48 89 d8             	mov    %rbx,%rax
   1a8f8:	48 09 e8             	or     %rbp,%rax
   1a8fb:	48 c1 e8 20          	shr    $0x20,%rax
   1a8ff:	74 0a                	je     1a90b <std::rt::lang_start_internal+0x1ab>
   1a901:	48 89 d8             	mov    %rbx,%rax
   1a904:	31 d2                	xor    %edx,%edx
   1a906:	48 f7 f5             	div    %rbp
   1a909:	eb 06                	jmp    1a911 <std::rt::lang_start_internal+0x1b1>
   1a90b:	89 d8                	mov    %ebx,%eax
   1a90d:	31 d2                	xor    %edx,%edx
   1a90f:	f7 f5                	div    %ebp
   1a911:	48 01 dd             	add    %rbx,%rbp
   1a914:	48 29 d5             	sub    %rdx,%rbp
   1a917:	48 85 d2             	test   %rdx,%rdx
   1a91a:	48 0f 44 eb          	cmove  %rbx,%rbp
   1a91e:	48 89 eb             	mov    %rbp,%rbx
   1a921:	4c 29 e3             	sub    %r12,%rbx
   1a924:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   1a92a:	0f 57 c0             	xorps  %xmm0,%xmm0
   1a92d:	0f 29 84 24 d0 00 00 	movaps %xmm0,0xd0(%rsp)
   1a934:	00 
   1a935:	0f 29 84 24 c0 00 00 	movaps %xmm0,0xc0(%rsp)
   1a93c:	00 
   1a93d:	0f 29 84 24 b0 00 00 	movaps %xmm0,0xb0(%rsp)
   1a944:	00 
   1a945:	0f 29 84 24 a0 00 00 	movaps %xmm0,0xa0(%rsp)
   1a94c:	00 
   1a94d:	0f 29 84 24 90 00 00 	movaps %xmm0,0x90(%rsp)
   1a954:	00 
   1a955:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
   1a95c:	00 
   1a95d:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
   1a962:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
   1a967:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   1a96c:	48 c7 84 24 e0 00 00 	movq   $0x0,0xe0(%rsp)
   1a973:	00 00 00 00 00 
   1a978:	48 8d 54 24 50       	lea    0x50(%rsp),%rdx
   1a97d:	bf 0b 00 00 00       	mov    $0xb,%edi
   1a982:	31 f6                	xor    %esi,%esi
   1a984:	ff 15 e6 b0 02 00    	callq  *0x2b0e6(%rip)        # 45a70 <sigaction@GLIBC_2.2.5>
   1a98a:	48 83 7c 24 50 00    	cmpq   $0x0,0x50(%rsp)
   1a990:	75 30                	jne    1a9c2 <std::rt::lang_start_internal+0x262>
   1a992:	c7 84 24 d8 00 00 00 	movl   $0x8000004,0xd8(%rsp)
   1a999:	04 00 00 08 
   1a99d:	48 8d 05 3c 13 00 00 	lea    0x133c(%rip),%rax        # 1bce0 <std::sys::unix::stack_overflow::imp::signal_handler>
   1a9a4:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   1a9a9:	48 8d 74 24 50       	lea    0x50(%rsp),%rsi
   1a9ae:	bf 0b 00 00 00       	mov    $0xb,%edi
   1a9b3:	31 d2                	xor    %edx,%edx
   1a9b5:	ff 15 b5 b0 02 00    	callq  *0x2b0b5(%rip)        # 45a70 <sigaction@GLIBC_2.2.5>
   1a9bb:	c6 05 6f b8 02 00 01 	movb   $0x1,0x2b86f(%rip)        # 46231 <_ZN3std3sys4unix14stack_overflow3imp13NEED_ALTSTACK17hb61d576fcc5bc78fE.0.0>
   1a9c2:	48 8d 54 24 50       	lea    0x50(%rsp),%rdx
   1a9c7:	bf 07 00 00 00       	mov    $0x7,%edi
   1a9cc:	31 f6                	xor    %esi,%esi
   1a9ce:	ff 15 9c b0 02 00    	callq  *0x2b09c(%rip)        # 45a70 <sigaction@GLIBC_2.2.5>
   1a9d4:	48 83 7c 24 50 00    	cmpq   $0x0,0x50(%rsp)
   1a9da:	75 30                	jne    1aa0c <std::rt::lang_start_internal+0x2ac>
   1a9dc:	c7 84 24 d8 00 00 00 	movl   $0x8000004,0xd8(%rsp)
   1a9e3:	04 00 00 08 
   1a9e7:	48 8d 05 f2 12 00 00 	lea    0x12f2(%rip),%rax        # 1bce0 <std::sys::unix::stack_overflow::imp::signal_handler>
   1a9ee:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   1a9f3:	48 8d 74 24 50       	lea    0x50(%rsp),%rsi
   1a9f8:	bf 07 00 00 00       	mov    $0x7,%edi
   1a9fd:	31 d2                	xor    %edx,%edx
   1a9ff:	ff 15 6b b0 02 00    	callq  *0x2b06b(%rip)        # 45a70 <sigaction@GLIBC_2.2.5>
   1aa05:	c6 05 25 b8 02 00 01 	movb   $0x1,0x2b825(%rip)        # 46231 <_ZN3std3sys4unix14stack_overflow3imp13NEED_ALTSTACK17hb61d576fcc5bc78fE.0.0>
   1aa0c:	e8 5f 15 00 00       	callq  1bf70 <std::sys::unix::stack_overflow::imp::make_handler>
   1aa11:	48 89 05 d8 b7 02 00 	mov    %rax,0x2b7d8(%rip)        # 461f0 <std::sys::unix::stack_overflow::imp::MAIN_ALTSTACK>
   1aa18:	bf 04 00 00 00       	mov    $0x4,%edi
   1aa1d:	be 01 00 00 00       	mov    $0x1,%esi
   1aa22:	ff 15 60 b1 02 00    	callq  *0x2b160(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   1aa28:	48 85 c0             	test   %rax,%rax
   1aa2b:	0f 84 0f 01 00 00    	je     1ab40 <std::rt::lang_start_internal+0x3e0>
   1aa31:	c7 00 6d 61 69 6e    	movl   $0x6e69616d,(%rax)
   1aa37:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   1aa3c:	0f 28 05 6d b6 01 00 	movaps 0x1b66d(%rip),%xmm0        # 360b0 <_fini+0x102c>
   1aa43:	0f 11 44 24 58       	movups %xmm0,0x58(%rsp)
   1aa48:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
   1aa4d:	ff 15 2d b5 02 00    	callq  *0x2b52d(%rip)        # 45f80 <_GLOBAL_OFFSET_TABLE_+0x5f0>
   1aa53:	4c 89 64 24 50       	mov    %r12,0x50(%rsp)
   1aa58:	48 89 5c 24 58       	mov    %rbx,0x58(%rsp)
   1aa5d:	48 89 6c 24 60       	mov    %rbp,0x60(%rsp)
   1aa62:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
   1aa67:	48 89 c6             	mov    %rax,%rsi
   1aa6a:	ff 15 b0 b1 02 00    	callq  *0x2b1b0(%rip)        # 45c20 <_GLOBAL_OFFSET_TABLE_+0x290>
   1aa70:	4c 89 ff             	mov    %r15,%rdi
   1aa73:	41 ff 56 18          	callq  *0x18(%r14)
   1aa77:	89 44 24 54          	mov    %eax,0x54(%rsp)
   1aa7b:	c7 44 24 50 00 00 00 	movl   $0x0,0x50(%rsp)
   1aa82:	00 
   1aa83:	48 8b 05 96 b6 02 00 	mov    0x2b696(%rip),%rax        # 46120 <std::sys_common::cleanup::CLEANUP>
   1aa8a:	48 83 f8 03          	cmp    $0x3,%rax
   1aa8e:	74 30                	je     1aac0 <std::rt::lang_start_internal+0x360>
   1aa90:	c6 44 24 30 01       	movb   $0x1,0x30(%rsp)
   1aa95:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
   1aa9a:	48 89 84 24 e8 00 00 	mov    %rax,0xe8(%rsp)
   1aaa1:	00 
   1aaa2:	48 8d 3d 77 b6 02 00 	lea    0x2b677(%rip),%rdi        # 46120 <std::sys_common::cleanup::CLEANUP>
   1aaa9:	48 8d 0d 60 94 02 00 	lea    0x29460(%rip),%rcx        # 43f10 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x9b8>
   1aab0:	48 8d 94 24 e8 00 00 	lea    0xe8(%rsp),%rdx
   1aab7:	00 
   1aab8:	31 f6                	xor    %esi,%esi
   1aaba:	ff 15 28 b4 02 00    	callq  *0x2b428(%rip)        # 45ee8 <_GLOBAL_OFFSET_TABLE_+0x558>
   1aac0:	83 7c 24 50 01       	cmpl   $0x1,0x50(%rsp)
   1aac5:	75 2c                	jne    1aaf3 <std::rt::lang_start_internal+0x393>
   1aac7:	4c 8b 7c 24 58       	mov    0x58(%rsp),%r15
   1aacc:	48 8b 5c 24 60       	mov    0x60(%rsp),%rbx
   1aad1:	4c 89 ff             	mov    %r15,%rdi
   1aad4:	ff 13                	callq  *(%rbx)
   1aad6:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   1aada:	bd 65 00 00 00       	mov    $0x65,%ebp
   1aadf:	48 85 f6             	test   %rsi,%rsi
   1aae2:	74 13                	je     1aaf7 <std::rt::lang_start_internal+0x397>
   1aae4:	48 8b 53 10          	mov    0x10(%rbx),%rdx
   1aae8:	4c 89 ff             	mov    %r15,%rdi
   1aaeb:	ff 15 0f b1 02 00    	callq  *0x2b10f(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   1aaf1:	eb 04                	jmp    1aaf7 <std::rt::lang_start_internal+0x397>
   1aaf3:	8b 6c 24 54          	mov    0x54(%rsp),%ebp
   1aaf7:	48 63 c5             	movslq %ebp,%rax
   1aafa:	48 81 c4 18 01 00 00 	add    $0x118,%rsp
   1ab01:	5b                   	pop    %rbx
   1ab02:	41 5c                	pop    %r12
   1ab04:	41 5d                	pop    %r13
   1ab06:	41 5e                	pop    %r14
   1ab08:	41 5f                	pop    %r15
   1ab0a:	5d                   	pop    %rbp
   1ab0b:	c3                   	retq   
   1ab0c:	48 8d 3d ea d9 01 00 	lea    0x1d9ea(%rip),%rdi        # 384fd <str.6+0x11dd>
   1ab13:	48 8d 15 86 9b 02 00 	lea    0x29b86(%rip),%rdx        # 446a0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1148>
   1ab1a:	be 47 00 00 00       	mov    $0x47,%esi
   1ab1f:	e8 ec f8 ff ff       	callq  1a410 <std::panicking::begin_panic>
   1ab24:	0f 0b                	ud2    
   1ab26:	48 8d 3d ce c9 01 00 	lea    0x1c9ce(%rip),%rdi        # 374fb <str.6+0x1db>
   1ab2d:	48 8d 15 24 9b 02 00 	lea    0x29b24(%rip),%rdx        # 44658 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1100>
   1ab34:	be 20 00 00 00       	mov    $0x20,%esi
   1ab39:	e8 d2 f8 ff ff       	callq  1a410 <std::panicking::begin_panic>
   1ab3e:	0f 0b                	ud2    
   1ab40:	bf 04 00 00 00       	mov    $0x4,%edi
   1ab45:	be 01 00 00 00       	mov    $0x1,%esi
   1ab4a:	ff 15 d8 af 02 00    	callq  *0x2afd8(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   1ab50:	0f 0b                	ud2    
   1ab52:	48 8d 44 24 1c       	lea    0x1c(%rsp),%rax
   1ab57:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1ab5c:	48 8d 05 51 cc 01 00 	lea    0x1cc51(%rip),%rax        # 377b4 <str.6+0x494>
   1ab63:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1ab68:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   1ab6d:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1ab72:	48 8d 05 57 ab fe ff 	lea    -0x154a9(%rip),%rax        # 56d0 <<&T as core::fmt::Debug>::fmt>
   1ab79:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1ab7e:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
   1ab83:	48 89 4c 24 40       	mov    %rcx,0x40(%rsp)
   1ab88:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1ab8d:	48 8d 05 2c 8b 02 00 	lea    0x28b2c(%rip),%rax        # 436c0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x168>
   1ab94:	48 89 84 24 e8 00 00 	mov    %rax,0xe8(%rsp)
   1ab9b:	00 
   1ab9c:	48 c7 84 24 f0 00 00 	movq   $0x3,0xf0(%rsp)
   1aba3:	00 03 00 00 00 
   1aba8:	48 c7 84 24 f8 00 00 	movq   $0x0,0xf8(%rsp)
   1abaf:	00 00 00 00 00 
   1abb4:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
   1abb9:	48 89 84 24 08 01 00 	mov    %rax,0x108(%rsp)
   1abc0:	00 
   1abc1:	48 c7 84 24 10 01 00 	movq   $0x2,0x110(%rsp)
   1abc8:	00 02 00 00 00 
   1abcd:	48 8d 35 54 9a 02 00 	lea    0x29a54(%rip),%rsi        # 44628 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x10d0>
   1abd4:	eb 7d                	jmp    1ac53 <std::rt::lang_start_internal+0x4f3>
   1abd6:	4c 89 6c 24 08       	mov    %r13,0x8(%rsp)
   1abdb:	48 8d 05 d2 cb 01 00 	lea    0x1cbd2(%rip),%rax        # 377b4 <str.6+0x494>
   1abe2:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1abe7:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   1abec:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1abf1:	48 8d 05 d8 aa fe ff 	lea    -0x15528(%rip),%rax        # 56d0 <<&T as core::fmt::Debug>::fmt>
   1abf8:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1abfd:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
   1ac02:	48 89 4c 24 40       	mov    %rcx,0x40(%rsp)
   1ac07:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1ac0c:	48 8d 05 ad 8a 02 00 	lea    0x28aad(%rip),%rax        # 436c0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x168>
   1ac13:	48 89 84 24 e8 00 00 	mov    %rax,0xe8(%rsp)
   1ac1a:	00 
   1ac1b:	48 c7 84 24 f0 00 00 	movq   $0x3,0xf0(%rsp)
   1ac22:	00 03 00 00 00 
   1ac27:	48 c7 84 24 f8 00 00 	movq   $0x0,0xf8(%rsp)
   1ac2e:	00 00 00 00 00 
   1ac33:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
   1ac38:	48 89 84 24 08 01 00 	mov    %rax,0x108(%rsp)
   1ac3f:	00 
   1ac40:	48 c7 84 24 10 01 00 	movq   $0x2,0x110(%rsp)
   1ac47:	00 02 00 00 00 
   1ac4c:	48 8d 35 ed 99 02 00 	lea    0x299ed(%rip),%rsi        # 44640 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x10e8>
   1ac53:	48 8d bc 24 e8 00 00 	lea    0xe8(%rsp),%rdi
   1ac5a:	00 
   1ac5b:	ff 15 7f b3 02 00    	callq  *0x2b37f(%rip)        # 45fe0 <_GLOBAL_OFFSET_TABLE_+0x650>
   1ac61:	0f 0b                	ud2    
   1ac63:	49 89 c6             	mov    %rax,%r14
   1ac66:	4c 89 ff             	mov    %r15,%rdi
   1ac69:	48 89 de             	mov    %rbx,%rsi
   1ac6c:	e8 6f ec fe ff       	callq  98e0 <alloc::alloc::box_free>
   1ac71:	eb 0d                	jmp    1ac80 <std::rt::lang_start_internal+0x520>
   1ac73:	49 89 c6             	mov    %rax,%r14
   1ac76:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
   1ac7b:	e8 40 bf fe ff       	callq  6bc0 <core::ptr::drop_in_place>
   1ac80:	4c 89 f7             	mov    %r14,%rdi
   1ac83:	e8 c8 a3 fe ff       	callq  5050 <_Unwind_Resume@plt>
   1ac88:	0f 0b                	ud2    
   1ac8a:	48 89 c7             	mov    %rax,%rdi
   1ac8d:	ff 15 25 ae 02 00    	callq  *0x2ae25(%rip)        # 45ab8 <_GLOBAL_OFFSET_TABLE_+0x128>
   1ac93:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   1ac98:	48 89 54 24 60       	mov    %rdx,0x60(%rsp)
   1ac9d:	c7 44 24 50 01 00 00 	movl   $0x1,0x50(%rsp)
   1aca4:	00 
   1aca5:	48 8b 05 74 b4 02 00 	mov    0x2b474(%rip),%rax        # 46120 <std::sys_common::cleanup::CLEANUP>
   1acac:	48 83 f8 03          	cmp    $0x3,%rax
   1acb0:	0f 85 da fd ff ff    	jne    1aa90 <std::rt::lang_start_internal+0x330>
   1acb6:	e9 05 fe ff ff       	jmpq   1aac0 <std::rt::lang_start_internal+0x360>
   1acbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001acc0 <std::backtrace_rs::symbolize::Symbol::name>:
   1acc0:	41 57                	push   %r15
   1acc2:	41 56                	push   %r14
   1acc4:	41 54                	push   %r12
   1acc6:	53                   	push   %rbx
   1acc7:	48 83 ec 78          	sub    $0x78,%rsp
   1accb:	48 89 fb             	mov    %rdi,%rbx
   1acce:	83 3e 01             	cmpl   $0x1,(%rsi)
   1acd1:	75 0a                	jne    1acdd <std::backtrace_rs::symbolize::Symbol::name+0x1d>
   1acd3:	4c 8b 76 10          	mov    0x10(%rsi),%r14
   1acd7:	4c 8b 7e 18          	mov    0x18(%rsi),%r15
   1acdb:	eb 1c                	jmp    1acf9 <std::backtrace_rs::symbolize::Symbol::name+0x39>
   1acdd:	48 8b 46 30          	mov    0x30(%rsi),%rax
   1ace1:	48 83 c6 30          	add    $0x30,%rsi
   1ace5:	48 85 c0             	test   %rax,%rax
   1ace8:	48 0f 44 f0          	cmove  %rax,%rsi
   1acec:	0f 84 c6 00 00 00    	je     1adb8 <std::backtrace_rs::symbolize::Symbol::name+0xf8>
   1acf2:	4c 8b 36             	mov    (%rsi),%r14
   1acf5:	4c 8b 7e 08          	mov    0x8(%rsi),%r15
   1acf9:	48 89 e7             	mov    %rsp,%rdi
   1acfc:	4c 89 f6             	mov    %r14,%rsi
   1acff:	4c 89 fa             	mov    %r15,%rdx
   1ad02:	ff 15 c8 ae 02 00    	callq  *0x2aec8(%rip)        # 45bd0 <_GLOBAL_OFFSET_TABLE_+0x240>
   1ad08:	83 3c 24 01          	cmpl   $0x1,(%rsp)
   1ad0c:	41 bc 03 00 00 00    	mov    $0x3,%r12d
   1ad12:	74 4d                	je     1ad61 <std::backtrace_rs::symbolize::Symbol::name+0xa1>
   1ad14:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1ad19:	48 85 f6             	test   %rsi,%rsi
   1ad1c:	74 43                	je     1ad61 <std::backtrace_rs::symbolize::Symbol::name+0xa1>
   1ad1e:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   1ad23:	48 89 e7             	mov    %rsp,%rdi
   1ad26:	ff 15 34 af 02 00    	callq  *0x2af34(%rip)        # 45c60 <_GLOBAL_OFFSET_TABLE_+0x2d0>
   1ad2c:	48 8b 04 24          	mov    (%rsp),%rax
   1ad30:	48 83 f8 03          	cmp    $0x3,%rax
   1ad34:	74 2b                	je     1ad61 <std::backtrace_rs::symbolize::Symbol::name+0xa1>
   1ad36:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
   1ad3b:	48 89 4c 24 70       	mov    %rcx,0x70(%rsp)
   1ad40:	0f 10 44 24 08       	movups 0x8(%rsp),%xmm0
   1ad45:	0f 10 4c 24 18       	movups 0x18(%rsp),%xmm1
   1ad4a:	0f 10 54 24 28       	movups 0x28(%rsp),%xmm2
   1ad4f:	0f 29 54 24 60       	movaps %xmm2,0x60(%rsp)
   1ad54:	0f 29 4c 24 50       	movaps %xmm1,0x50(%rsp)
   1ad59:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
   1ad5e:	49 89 c4             	mov    %rax,%r12
   1ad61:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   1ad66:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1ad6b:	0f 28 44 24 40       	movaps 0x40(%rsp),%xmm0
   1ad70:	0f 28 4c 24 50       	movaps 0x50(%rsp),%xmm1
   1ad75:	0f 28 54 24 60       	movaps 0x60(%rsp),%xmm2
   1ad7a:	0f 29 54 24 20       	movaps %xmm2,0x20(%rsp)
   1ad7f:	0f 29 4c 24 10       	movaps %xmm1,0x10(%rsp)
   1ad84:	0f 29 04 24          	movaps %xmm0,(%rsp)
   1ad88:	4c 89 33             	mov    %r14,(%rbx)
   1ad8b:	4c 89 7b 08          	mov    %r15,0x8(%rbx)
   1ad8f:	4c 89 63 10          	mov    %r12,0x10(%rbx)
   1ad93:	0f 28 04 24          	movaps (%rsp),%xmm0
   1ad97:	0f 28 4c 24 10       	movaps 0x10(%rsp),%xmm1
   1ad9c:	0f 28 54 24 20       	movaps 0x20(%rsp),%xmm2
   1ada1:	0f 11 43 18          	movups %xmm0,0x18(%rbx)
   1ada5:	0f 11 4b 28          	movups %xmm1,0x28(%rbx)
   1ada9:	0f 11 53 38          	movups %xmm2,0x38(%rbx)
   1adad:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   1adb2:	48 89 43 48          	mov    %rax,0x48(%rbx)
   1adb6:	eb 08                	jmp    1adc0 <std::backtrace_rs::symbolize::Symbol::name+0x100>
   1adb8:	48 c7 43 10 04 00 00 	movq   $0x4,0x10(%rbx)
   1adbf:	00 
   1adc0:	48 83 c4 78          	add    $0x78,%rsp
   1adc4:	5b                   	pop    %rbx
   1adc5:	41 5c                	pop    %r12
   1adc7:	41 5e                	pop    %r14
   1adc9:	41 5f                	pop    %r15
   1adcb:	c3                   	retq   
   1adcc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001add0 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column>:
   1add0:	55                   	push   %rbp
   1add1:	41 57                	push   %r15
   1add3:	41 56                	push   %r14
   1add5:	41 55                	push   %r13
   1add7:	41 54                	push   %r12
   1add9:	53                   	push   %rbx
   1adda:	48 81 ec 68 01 00 00 	sub    $0x168,%rsp
   1ade1:	45 89 ce             	mov    %r9d,%r14d
   1ade4:	45 89 c5             	mov    %r8d,%r13d
   1ade7:	48 89 fb             	mov    %rdi,%rbx
   1adea:	0f 10 02             	movups (%rdx),%xmm0
   1aded:	0f 29 84 24 40 01 00 	movaps %xmm0,0x140(%rsp)
   1adf4:	00 
   1adf5:	48 8b 6a 10          	mov    0x10(%rdx),%rbp
   1adf9:	0f 10 42 28          	movups 0x28(%rdx),%xmm0
   1adfd:	0f 29 84 24 10 01 00 	movaps %xmm0,0x110(%rsp)
   1ae04:	00 
   1ae05:	0f 10 42 38          	movups 0x38(%rdx),%xmm0
   1ae09:	0f 29 84 24 20 01 00 	movaps %xmm0,0x120(%rsp)
   1ae10:	00 
   1ae11:	48 8b 42 48          	mov    0x48(%rdx),%rax
   1ae15:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
   1ae1c:	00 
   1ae1d:	0f 10 42 18          	movups 0x18(%rdx),%xmm0
   1ae21:	0f 29 84 24 00 01 00 	movaps %xmm0,0x100(%rsp)
   1ae28:	00 
   1ae29:	4c 8b 21             	mov    (%rcx),%r12
   1ae2c:	0f 10 41 08          	movups 0x8(%rcx),%xmm0
   1ae30:	0f 29 84 24 50 01 00 	movaps %xmm0,0x150(%rsp)
   1ae37:	00 
   1ae38:	48 89 b4 24 f8 00 00 	mov    %rsi,0xf8(%rsp)
   1ae3f:	00 
   1ae40:	48 8b 07             	mov    (%rdi),%rax
   1ae43:	48 85 f6             	test   %rsi,%rsi
   1ae46:	75 12                	jne    1ae5a <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x8a>
   1ae48:	80 78 20 00          	cmpb   $0x0,0x20(%rax)
   1ae4c:	75 0c                	jne    1ae5a <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x8a>
   1ae4e:	48 83 43 08 01       	addq   $0x1,0x8(%rbx)
   1ae53:	31 c0                	xor    %eax,%eax
   1ae55:	e9 ee 03 00 00       	jmpq   1b248 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x478>
   1ae5a:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
   1ae5f:	48 8b 38             	mov    (%rax),%rdi
   1ae62:	0f 84 d0 00 00 00    	je     1af38 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x168>
   1ae68:	48 8d 05 d9 95 02 00 	lea    0x295d9(%rip),%rax        # 44448 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xef0>
   1ae6f:	48 89 04 24          	mov    %rax,(%rsp)
   1ae73:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   1ae7a:	00 00 
   1ae7c:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   1ae83:	00 00 
   1ae85:	48 8d 05 cc c3 01 00 	lea    0x1c3cc(%rip),%rax        # 37258 <_fini+0x21d4>
   1ae8c:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1ae91:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   1ae98:	00 00 
   1ae9a:	48 89 e6             	mov    %rsp,%rsi
   1ae9d:	ff 15 ed af 02 00    	callq  *0x2afed(%rip)        # 45e90 <_GLOBAL_OFFSET_TABLE_+0x500>
   1aea3:	84 c0                	test   %al,%al
   1aea5:	0f 85 9b 03 00 00    	jne    1b246 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x476>
   1aeab:	48 8b 03             	mov    (%rbx),%rax
   1aeae:	80 78 20 01          	cmpb   $0x1,0x20(%rax)
   1aeb2:	0f 85 7a 01 00 00    	jne    1b032 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x262>
   1aeb8:	4c 8b 38             	mov    (%rax),%r15
   1aebb:	48 8d 3d 5e cb 01 00 	lea    0x1cb5e(%rip),%rdi        # 37a20 <str.6+0x700>
   1aec2:	ff 15 e8 ad 02 00    	callq  *0x2ade8(%rip)        # 45cb0 <_GLOBAL_OFFSET_TABLE_+0x320>
   1aec8:	48 8d 0d d1 86 02 00 	lea    0x286d1(%rip),%rcx        # 435a0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x48>
   1aecf:	48 89 4c 24 50       	mov    %rcx,0x50(%rsp)
   1aed4:	48 8d 35 85 a9 fe ff 	lea    -0x1567b(%rip),%rsi        # 5860 <<&T as core::fmt::Display>::fmt>
   1aedb:	48 89 74 24 58       	mov    %rsi,0x58(%rsp)
   1aee0:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   1aee5:	48 89 54 24 68       	mov    %rdx,0x68(%rsp)
   1aeea:	48 89 0c 24          	mov    %rcx,(%rsp)
   1aeee:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   1aef5:	00 00 
   1aef7:	48 8d 05 7a d2 01 00 	lea    0x1d27a(%rip),%rax        # 38178 <str.6+0xe58>
   1aefe:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1af03:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
   1af0a:	00 00 
   1af0c:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
   1af11:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1af16:	48 c7 44 24 28 02 00 	movq   $0x2,0x28(%rsp)
   1af1d:	00 00 
   1af1f:	48 89 e6             	mov    %rsp,%rsi
   1af22:	4c 89 ff             	mov    %r15,%rdi
   1af25:	ff 15 65 af 02 00    	callq  *0x2af65(%rip)        # 45e90 <_GLOBAL_OFFSET_TABLE_+0x500>
   1af2b:	84 c0                	test   %al,%al
   1af2d:	0f 84 ff 00 00 00    	je     1b032 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x262>
   1af33:	e9 0e 03 00 00       	jmpq   1b246 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x476>
   1af38:	48 83 c0 08          	add    $0x8,%rax
   1af3c:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   1af41:	48 8d 05 78 95 01 00 	lea    0x19578(%rip),%rax        # 344c0 <core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt>
   1af48:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   1af4d:	48 8d 05 04 95 02 00 	lea    0x29504(%rip),%rax        # 44458 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xf00>
   1af54:	48 89 04 24          	mov    %rax,(%rsp)
   1af58:	48 c7 44 24 08 02 00 	movq   $0x2,0x8(%rsp)
   1af5f:	00 00 
   1af61:	48 8d 05 48 d2 01 00 	lea    0x1d248(%rip),%rax        # 381b0 <str.6+0xe90>
   1af68:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1af6d:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
   1af74:	00 00 
   1af76:	4c 8d 7c 24 50       	lea    0x50(%rsp),%r15
   1af7b:	4c 89 7c 24 20       	mov    %r15,0x20(%rsp)
   1af80:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
   1af87:	00 00 
   1af89:	48 89 e6             	mov    %rsp,%rsi
   1af8c:	ff 15 fe ae 02 00    	callq  *0x2aefe(%rip)        # 45e90 <_GLOBAL_OFFSET_TABLE_+0x500>
   1af92:	84 c0                	test   %al,%al
   1af94:	0f 85 ac 02 00 00    	jne    1b246 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x476>
   1af9a:	48 8b 03             	mov    (%rbx),%rax
   1af9d:	80 78 20 01          	cmpb   $0x1,0x20(%rax)
   1afa1:	0f 85 8b 00 00 00    	jne    1b032 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x262>
   1afa7:	48 8b 00             	mov    (%rax),%rax
   1afaa:	48 89 84 24 f0 00 00 	mov    %rax,0xf0(%rsp)
   1afb1:	00 
   1afb2:	48 8d 3d 6f ca 01 00 	lea    0x1ca6f(%rip),%rdi        # 37a28 <str.6+0x708>
   1afb9:	ff 15 f1 ac 02 00    	callq  *0x2acf1(%rip)        # 45cb0 <_GLOBAL_OFFSET_TABLE_+0x320>
   1afbf:	48 8d 8c 24 f8 00 00 	lea    0xf8(%rsp),%rcx
   1afc6:	00 
   1afc7:	48 89 4c 24 50       	mov    %rcx,0x50(%rsp)
   1afcc:	48 8d 0d fd dd fe ff 	lea    -0x12203(%rip),%rcx        # 8dd0 <<*mut T as core::fmt::Debug>::fmt>
   1afd3:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
   1afd8:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   1afdd:	48 89 54 24 68       	mov    %rdx,0x68(%rsp)
   1afe2:	48 8d 05 8f 94 02 00 	lea    0x2948f(%rip),%rax        # 44478 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xf20>
   1afe9:	48 89 04 24          	mov    %rax,(%rsp)
   1afed:	48 c7 44 24 08 02 00 	movq   $0x2,0x8(%rsp)
   1aff4:	00 00 
   1aff6:	48 8d 05 7b d1 01 00 	lea    0x1d17b(%rip),%rax        # 38178 <str.6+0xe58>
   1affd:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1b002:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
   1b009:	00 00 
   1b00b:	4c 89 7c 24 20       	mov    %r15,0x20(%rsp)
   1b010:	48 c7 44 24 28 02 00 	movq   $0x2,0x28(%rsp)
   1b017:	00 00 
   1b019:	48 89 e6             	mov    %rsp,%rsi
   1b01c:	48 8b bc 24 f0 00 00 	mov    0xf0(%rsp),%rdi
   1b023:	00 
   1b024:	ff 15 66 ae 02 00    	callq  *0x2ae66(%rip)        # 45e90 <_GLOBAL_OFFSET_TABLE_+0x500>
   1b02a:	84 c0                	test   %al,%al
   1b02c:	0f 85 14 02 00 00    	jne    1b246 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x476>
   1b032:	0f 28 84 24 40 01 00 	movaps 0x140(%rsp),%xmm0
   1b039:	00 
   1b03a:	0f 29 84 24 b0 00 00 	movaps %xmm0,0xb0(%rsp)
   1b041:	00 
   1b042:	48 8b 84 24 30 01 00 	mov    0x130(%rsp),%rax
   1b049:	00 
   1b04a:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   1b051:	00 
   1b052:	0f 28 84 24 00 01 00 	movaps 0x100(%rsp),%xmm0
   1b059:	00 
   1b05a:	0f 28 8c 24 10 01 00 	movaps 0x110(%rsp),%xmm1
   1b061:	00 
   1b062:	0f 28 94 24 20 01 00 	movaps 0x120(%rsp),%xmm2
   1b069:	00 
   1b06a:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
   1b06f:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
   1b074:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   1b079:	48 8b 03             	mov    (%rbx),%rax
   1b07c:	48 83 fd 04          	cmp    $0x4,%rbp
   1b080:	0f 84 ab 00 00 00    	je     1b131 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x361>
   1b086:	0f b6 48 20          	movzbl 0x20(%rax),%ecx
   1b08a:	48 83 f9 01          	cmp    $0x1,%rcx
   1b08e:	0f 84 e8 00 00 00    	je     1b17c <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x3ac>
   1b094:	48 85 c9             	test   %rcx,%rcx
   1b097:	0f 85 94 00 00 00    	jne    1b131 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x361>
   1b09d:	0f 28 84 24 b0 00 00 	movaps 0xb0(%rsp),%xmm0
   1b0a4:	00 
   1b0a5:	0f 29 04 24          	movaps %xmm0,(%rsp)
   1b0a9:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
   1b0ae:	0f 28 44 24 50       	movaps 0x50(%rsp),%xmm0
   1b0b3:	0f 28 4c 24 60       	movaps 0x60(%rsp),%xmm1
   1b0b8:	0f 28 54 24 70       	movaps 0x70(%rsp),%xmm2
   1b0bd:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
   1b0c2:	0f 11 4c 24 28       	movups %xmm1,0x28(%rsp)
   1b0c7:	0f 11 54 24 38       	movups %xmm2,0x38(%rsp)
   1b0cc:	48 8b 8c 24 80 00 00 	mov    0x80(%rsp),%rcx
   1b0d3:	00 
   1b0d4:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
   1b0d9:	48 8b 38             	mov    (%rax),%rdi
   1b0dc:	48 89 e0             	mov    %rsp,%rax
   1b0df:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
   1b0e6:	00 
   1b0e7:	48 8d 05 72 14 00 00 	lea    0x1472(%rip),%rax        # 1c560 <<std::backtrace_rs::symbolize::SymbolName as core::fmt::Display>::fmt>
   1b0ee:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   1b0f5:	00 
   1b0f6:	48 8d 05 a3 84 02 00 	lea    0x284a3(%rip),%rax        # 435a0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x48>
   1b0fd:	48 89 84 24 c0 00 00 	mov    %rax,0xc0(%rsp)
   1b104:	00 
   1b105:	48 c7 84 24 c8 00 00 	movq   $0x1,0xc8(%rsp)
   1b10c:	00 01 00 00 00 
   1b111:	48 8d 05 80 c8 01 00 	lea    0x1c880(%rip),%rax        # 37998 <str.6+0x678>
   1b118:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
   1b11f:	00 
   1b120:	48 c7 84 24 d8 00 00 	movq   $0x1,0xd8(%rsp)
   1b127:	00 01 00 00 00 
   1b12c:	e9 cb 00 00 00       	jmpq   1b1fc <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x42c>
   1b131:	48 8b 38             	mov    (%rax),%rdi
   1b134:	48 8d 05 5d 93 02 00 	lea    0x2935d(%rip),%rax        # 44498 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xf40>
   1b13b:	48 89 04 24          	mov    %rax,(%rsp)
   1b13f:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   1b146:	00 00 
   1b148:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   1b14f:	00 00 
   1b151:	48 8d 05 00 c1 01 00 	lea    0x1c100(%rip),%rax        # 37258 <_fini+0x21d4>
   1b158:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1b15d:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   1b164:	00 00 
   1b166:	48 89 e6             	mov    %rsp,%rsi
   1b169:	ff 15 21 ad 02 00    	callq  *0x2ad21(%rip)        # 45e90 <_GLOBAL_OFFSET_TABLE_+0x500>
   1b16f:	84 c0                	test   %al,%al
   1b171:	0f 84 b3 00 00 00    	je     1b22a <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x45a>
   1b177:	e9 ca 00 00 00       	jmpq   1b246 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x476>
   1b17c:	0f 28 84 24 b0 00 00 	movaps 0xb0(%rsp),%xmm0
   1b183:	00 
   1b184:	0f 29 04 24          	movaps %xmm0,(%rsp)
   1b188:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
   1b18d:	0f 28 44 24 50       	movaps 0x50(%rsp),%xmm0
   1b192:	0f 28 4c 24 60       	movaps 0x60(%rsp),%xmm1
   1b197:	0f 28 54 24 70       	movaps 0x70(%rsp),%xmm2
   1b19c:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
   1b1a1:	0f 11 4c 24 28       	movups %xmm1,0x28(%rsp)
   1b1a6:	0f 11 54 24 38       	movups %xmm2,0x38(%rsp)
   1b1ab:	48 8b 8c 24 80 00 00 	mov    0x80(%rsp),%rcx
   1b1b2:	00 
   1b1b3:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
   1b1b8:	48 8b 38             	mov    (%rax),%rdi
   1b1bb:	48 89 e0             	mov    %rsp,%rax
   1b1be:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
   1b1c5:	00 
   1b1c6:	48 8d 05 93 13 00 00 	lea    0x1393(%rip),%rax        # 1c560 <<std::backtrace_rs::symbolize::SymbolName as core::fmt::Display>::fmt>
   1b1cd:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   1b1d4:	00 
   1b1d5:	48 8d 05 c4 83 02 00 	lea    0x283c4(%rip),%rax        # 435a0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x48>
   1b1dc:	48 89 84 24 c0 00 00 	mov    %rax,0xc0(%rsp)
   1b1e3:	00 
   1b1e4:	48 c7 84 24 c8 00 00 	movq   $0x1,0xc8(%rsp)
   1b1eb:	00 01 00 00 00 
   1b1f0:	48 c7 84 24 d0 00 00 	movq   $0x0,0xd0(%rsp)
   1b1f7:	00 00 00 00 00 
   1b1fc:	48 8d 84 24 90 00 00 	lea    0x90(%rsp),%rax
   1b203:	00 
   1b204:	48 89 84 24 e0 00 00 	mov    %rax,0xe0(%rsp)
   1b20b:	00 
   1b20c:	48 c7 84 24 e8 00 00 	movq   $0x1,0xe8(%rsp)
   1b213:	00 01 00 00 00 
   1b218:	48 8d b4 24 c0 00 00 	lea    0xc0(%rsp),%rsi
   1b21f:	00 
   1b220:	ff 15 6a ac 02 00    	callq  *0x2ac6a(%rip)        # 45e90 <_GLOBAL_OFFSET_TABLE_+0x500>
   1b226:	84 c0                	test   %al,%al
   1b228:	75 1c                	jne    1b246 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x476>
   1b22a:	48 8b 03             	mov    (%rbx),%rax
   1b22d:	48 8b 38             	mov    (%rax),%rdi
   1b230:	48 8d 35 97 cd 01 00 	lea    0x1cd97(%rip),%rsi        # 37fce <str.6+0xcae>
   1b237:	ba 01 00 00 00       	mov    $0x1,%edx
   1b23c:	ff 15 06 a8 02 00    	callq  *0x2a806(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   1b242:	84 c0                	test   %al,%al
   1b244:	74 14                	je     1b25a <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x48a>
   1b246:	b0 01                	mov    $0x1,%al
   1b248:	48 81 c4 68 01 00 00 	add    $0x168,%rsp
   1b24f:	5b                   	pop    %rbx
   1b250:	41 5c                	pop    %r12
   1b252:	41 5d                	pop    %r13
   1b254:	41 5e                	pop    %r14
   1b256:	41 5f                	pop    %r15
   1b258:	5d                   	pop    %rbp
   1b259:	c3                   	retq   
   1b25a:	0f 28 84 24 50 01 00 	movaps 0x150(%rsp),%xmm0
   1b261:	00 
   1b262:	0f 29 84 24 90 00 00 	movaps %xmm0,0x90(%rsp)
   1b269:	00 
   1b26a:	41 83 fd 01          	cmp    $0x1,%r13d
   1b26e:	0f 85 da fb ff ff    	jne    1ae4e <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x7e>
   1b274:	49 83 fc 02          	cmp    $0x2,%r12
   1b278:	0f 84 d0 fb ff ff    	je     1ae4e <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x7e>
   1b27e:	0f 28 84 24 90 00 00 	movaps 0x90(%rsp),%xmm0
   1b285:	00 
   1b286:	0f 29 84 24 c0 00 00 	movaps %xmm0,0xc0(%rsp)
   1b28d:	00 
   1b28e:	44 89 b4 24 ac 00 00 	mov    %r14d,0xac(%rsp)
   1b295:	00 
   1b296:	48 8b 03             	mov    (%rbx),%rax
   1b299:	80 78 20 01          	cmpb   $0x1,0x20(%rax)
   1b29d:	75 7e                	jne    1b31d <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x54d>
   1b29f:	48 8b 28             	mov    (%rax),%rbp
   1b2a2:	48 8d 3d 7f c7 01 00 	lea    0x1c77f(%rip),%rdi        # 37a28 <str.6+0x708>
   1b2a9:	ff 15 01 aa 02 00    	callq  *0x2aa01(%rip)        # 45cb0 <_GLOBAL_OFFSET_TABLE_+0x320>
   1b2af:	48 8d 0d ea 82 02 00 	lea    0x282ea(%rip),%rcx        # 435a0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x48>
   1b2b6:	48 89 4c 24 50       	mov    %rcx,0x50(%rsp)
   1b2bb:	48 8d 35 9e a5 fe ff 	lea    -0x15a62(%rip),%rsi        # 5860 <<&T as core::fmt::Display>::fmt>
   1b2c2:	48 89 74 24 58       	mov    %rsi,0x58(%rsp)
   1b2c7:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   1b2cc:	48 89 54 24 68       	mov    %rdx,0x68(%rsp)
   1b2d1:	48 89 0c 24          	mov    %rcx,(%rsp)
   1b2d5:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   1b2dc:	00 00 
   1b2de:	48 8d 05 93 ce 01 00 	lea    0x1ce93(%rip),%rax        # 38178 <str.6+0xe58>
   1b2e5:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1b2ea:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
   1b2f1:	00 00 
   1b2f3:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
   1b2f8:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1b2fd:	48 c7 44 24 28 02 00 	movq   $0x2,0x28(%rsp)
   1b304:	00 00 
   1b306:	48 89 e6             	mov    %rsp,%rsi
   1b309:	48 89 ef             	mov    %rbp,%rdi
   1b30c:	ff 15 7e ab 02 00    	callq  *0x2ab7e(%rip)        # 45e90 <_GLOBAL_OFFSET_TABLE_+0x500>
   1b312:	84 c0                	test   %al,%al
   1b314:	0f 85 2c ff ff ff    	jne    1b246 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x476>
   1b31a:	48 8b 03             	mov    (%rbx),%rax
   1b31d:	48 8b 38             	mov    (%rax),%rdi
   1b320:	48 8d 05 81 91 02 00 	lea    0x29181(%rip),%rax        # 444a8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xf50>
   1b327:	48 89 04 24          	mov    %rax,(%rsp)
   1b32b:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   1b332:	00 00 
   1b334:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   1b33b:	00 00 
   1b33d:	48 8d 2d 14 bf 01 00 	lea    0x1bf14(%rip),%rbp        # 37258 <_fini+0x21d4>
   1b344:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   1b349:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   1b350:	00 00 
   1b352:	48 89 e6             	mov    %rsp,%rsi
   1b355:	ff 15 35 ab 02 00    	callq  *0x2ab35(%rip)        # 45e90 <_GLOBAL_OFFSET_TABLE_+0x500>
   1b35b:	84 c0                	test   %al,%al
   1b35d:	0f 85 e3 fe ff ff    	jne    1b246 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x476>
   1b363:	48 8b 03             	mov    (%rbx),%rax
   1b366:	48 8b 78 10          	mov    0x10(%rax),%rdi
   1b36a:	48 8b 48 18          	mov    0x18(%rax),%rcx
   1b36e:	48 8b 30             	mov    (%rax),%rsi
   1b371:	48 89 34 24          	mov    %rsi,(%rsp)
   1b375:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   1b37a:	4c 89 64 24 08       	mov    %r12,0x8(%rsp)
   1b37f:	0f 28 84 24 c0 00 00 	movaps 0xc0(%rsp),%xmm0
   1b386:	00 
   1b387:	0f 11 44 24 10       	movups %xmm0,0x10(%rsp)
   1b38c:	ff 51 18             	callq  *0x18(%rcx)
   1b38f:	84 c0                	test   %al,%al
   1b391:	0f 85 af fe ff ff    	jne    1b246 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x476>
   1b397:	48 8b 03             	mov    (%rbx),%rax
   1b39a:	48 8b 38             	mov    (%rax),%rdi
   1b39d:	48 8d 84 24 ac 00 00 	lea    0xac(%rsp),%rax
   1b3a4:	00 
   1b3a5:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   1b3aa:	4c 8d 35 df 8f 01 00 	lea    0x18fdf(%rip),%r14        # 34390 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt>
   1b3b1:	4c 89 74 24 58       	mov    %r14,0x58(%rsp)
   1b3b6:	4c 8d 3d fb 90 02 00 	lea    0x290fb(%rip),%r15        # 444b8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xf60>
   1b3bd:	4c 89 3c 24          	mov    %r15,(%rsp)
   1b3c1:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   1b3c8:	00 00 
   1b3ca:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   1b3d1:	00 00 
   1b3d3:	4c 8d 64 24 50       	lea    0x50(%rsp),%r12
   1b3d8:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
   1b3dd:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
   1b3e4:	00 00 
   1b3e6:	48 89 e6             	mov    %rsp,%rsi
   1b3e9:	ff 15 a1 aa 02 00    	callq  *0x2aaa1(%rip)        # 45e90 <_GLOBAL_OFFSET_TABLE_+0x500>
   1b3ef:	84 c0                	test   %al,%al
   1b3f1:	0f 85 4f fe ff ff    	jne    1b246 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x476>
   1b3f7:	83 bc 24 a0 01 00 00 	cmpl   $0x1,0x1a0(%rsp)
   1b3fe:	01 
   1b3ff:	75 5b                	jne    1b45c <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x68c>
   1b401:	8b 84 24 a8 01 00 00 	mov    0x1a8(%rsp),%eax
   1b408:	89 84 24 b0 00 00 00 	mov    %eax,0xb0(%rsp)
   1b40f:	48 8b 03             	mov    (%rbx),%rax
   1b412:	48 8b 38             	mov    (%rax),%rdi
   1b415:	48 8d 84 24 b0 00 00 	lea    0xb0(%rsp),%rax
   1b41c:	00 
   1b41d:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   1b422:	4c 89 74 24 58       	mov    %r14,0x58(%rsp)
   1b427:	4c 89 3c 24          	mov    %r15,(%rsp)
   1b42b:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   1b432:	00 00 
   1b434:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   1b43b:	00 00 
   1b43d:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
   1b442:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
   1b449:	00 00 
   1b44b:	48 89 e6             	mov    %rsp,%rsi
   1b44e:	ff 15 3c aa 02 00    	callq  *0x2aa3c(%rip)        # 45e90 <_GLOBAL_OFFSET_TABLE_+0x500>
   1b454:	84 c0                	test   %al,%al
   1b456:	0f 85 ea fd ff ff    	jne    1b246 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x476>
   1b45c:	48 8b 03             	mov    (%rbx),%rax
   1b45f:	48 8b 38             	mov    (%rax),%rdi
   1b462:	48 8d 05 5f 90 02 00 	lea    0x2905f(%rip),%rax        # 444c8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xf70>
   1b469:	48 89 04 24          	mov    %rax,(%rsp)
   1b46d:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   1b474:	00 00 
   1b476:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   1b47d:	00 00 
   1b47f:	48 89 6c 24 20       	mov    %rbp,0x20(%rsp)
   1b484:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   1b48b:	00 00 
   1b48d:	48 89 e6             	mov    %rsp,%rsi
   1b490:	ff 15 fa a9 02 00    	callq  *0x2a9fa(%rip)        # 45e90 <_GLOBAL_OFFSET_TABLE_+0x500>
   1b496:	84 c0                	test   %al,%al
   1b498:	0f 84 b0 f9 ff ff    	je     1ae4e <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x7e>
   1b49e:	e9 a3 fd ff ff       	jmpq   1b246 <std::backtrace_rs::print::BacktraceFrameFmt::print_raw_with_column+0x476>
   1b4a3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1b4aa:	00 00 00 
   1b4ad:	0f 1f 00             	nopl   (%rax)

000000000001b4b0 <<std::ffi::c_str::NulError as core::fmt::Debug>::fmt>:
   1b4b0:	41 57                	push   %r15
   1b4b2:	41 56                	push   %r14
   1b4b4:	53                   	push   %rbx
   1b4b5:	48 83 ec 20          	sub    $0x20,%rsp
   1b4b9:	48 89 fb             	mov    %rdi,%rbx
   1b4bc:	4c 8d 7f 08          	lea    0x8(%rdi),%r15
   1b4c0:	48 8d 15 89 c5 01 00 	lea    0x1c589(%rip),%rdx        # 37a50 <str.6+0x730>
   1b4c7:	4c 8d 74 24 08       	lea    0x8(%rsp),%r14
   1b4cc:	b9 08 00 00 00       	mov    $0x8,%ecx
   1b4d1:	4c 89 f7             	mov    %r14,%rdi
   1b4d4:	ff 15 ae a9 02 00    	callq  *0x2a9ae(%rip)        # 45e88 <_GLOBAL_OFFSET_TABLE_+0x4f8>
   1b4da:	48 89 1c 24          	mov    %rbx,(%rsp)
   1b4de:	48 8d 15 e3 84 02 00 	lea    0x284e3(%rip),%rdx        # 439c8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x470>
   1b4e5:	48 8d 1d 14 49 01 00 	lea    0x14914(%rip),%rbx        # 2fe00 <core::fmt::builders::DebugTuple::field>
   1b4ec:	48 89 e6             	mov    %rsp,%rsi
   1b4ef:	4c 89 f7             	mov    %r14,%rdi
   1b4f2:	ff d3                	callq  *%rbx
   1b4f4:	4c 89 3c 24          	mov    %r15,(%rsp)
   1b4f8:	48 8d 15 f1 8f 02 00 	lea    0x28ff1(%rip),%rdx        # 444f0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xf98>
   1b4ff:	48 89 e6             	mov    %rsp,%rsi
   1b502:	4c 89 f7             	mov    %r14,%rdi
   1b505:	ff d3                	callq  *%rbx
   1b507:	4c 89 f7             	mov    %r14,%rdi
   1b50a:	ff 15 f8 a4 02 00    	callq  *0x2a4f8(%rip)        # 45a08 <_GLOBAL_OFFSET_TABLE_+0x78>
   1b510:	48 83 c4 20          	add    $0x20,%rsp
   1b514:	5b                   	pop    %rbx
   1b515:	41 5e                	pop    %r14
   1b517:	41 5f                	pop    %r15
   1b519:	c3                   	retq   
   1b51a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001b520 <<std::io::error::ErrorKind as core::fmt::Debug>::fmt>:
   1b520:	53                   	push   %rbx
   1b521:	48 83 ec 20          	sub    $0x20,%rsp
   1b525:	0f b6 07             	movzbl (%rdi),%eax
   1b528:	48 8d 0d f9 b9 01 00 	lea    0x1b9f9(%rip),%rcx        # 36f28 <_fini+0x1ea4>
   1b52f:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   1b533:	48 01 c8             	add    %rcx,%rax
   1b536:	ff e0                	jmpq   *%rax
   1b538:	48 8d 15 29 c5 01 00 	lea    0x1c529(%rip),%rdx        # 37a68 <str.6+0x748>
   1b53f:	e9 b1 00 00 00       	jmpq   1b5f5 <<std::io::error::ErrorKind as core::fmt::Debug>::fmt+0xd5>
   1b544:	48 8d 15 05 ae 01 00 	lea    0x1ae05(%rip),%rdx        # 36350 <_fini+0x12cc>
   1b54b:	eb 4e                	jmp    1b59b <<std::io::error::ErrorKind as core::fmt::Debug>::fmt+0x7b>
   1b54d:	48 8d 15 89 cd 01 00 	lea    0x1cd89(%rip),%rdx        # 382dd <str.6+0xfbd>
   1b554:	eb 1d                	jmp    1b573 <<std::io::error::ErrorKind as core::fmt::Debug>::fmt+0x53>
   1b556:	48 8d 15 71 cd 01 00 	lea    0x1cd71(%rip),%rdx        # 382ce <str.6+0xfae>
   1b55d:	48 8d 5c 24 08       	lea    0x8(%rsp),%rbx
   1b562:	b9 0f 00 00 00       	mov    $0xf,%ecx
   1b567:	e9 df 00 00 00       	jmpq   1b64b <<std::io::error::ErrorKind as core::fmt::Debug>::fmt+0x12b>
   1b56c:	48 8d 15 4a cd 01 00 	lea    0x1cd4a(%rip),%rdx        # 382bd <str.6+0xf9d>
   1b573:	48 8d 5c 24 08       	lea    0x8(%rsp),%rbx
   1b578:	b9 11 00 00 00       	mov    $0x11,%ecx
   1b57d:	e9 c9 00 00 00       	jmpq   1b64b <<std::io::error::ErrorKind as core::fmt::Debug>::fmt+0x12b>
   1b582:	48 8d 15 28 cd 01 00 	lea    0x1cd28(%rip),%rdx        # 382b1 <str.6+0xf91>
   1b589:	eb 4e                	jmp    1b5d9 <<std::io::error::ErrorKind as core::fmt::Debug>::fmt+0xb9>
   1b58b:	48 8d 15 16 cd 01 00 	lea    0x1cd16(%rip),%rdx        # 382a8 <str.6+0xf88>
   1b592:	eb 74                	jmp    1b608 <<std::io::error::ErrorKind as core::fmt::Debug>::fmt+0xe8>
   1b594:	48 8d 15 a5 ad 01 00 	lea    0x1ada5(%rip),%rdx        # 36340 <_fini+0x12bc>
   1b59b:	48 8d 5c 24 08       	lea    0x8(%rsp),%rbx
   1b5a0:	b9 10 00 00 00       	mov    $0x10,%ecx
   1b5a5:	e9 a1 00 00 00       	jmpq   1b64b <<std::io::error::ErrorKind as core::fmt::Debug>::fmt+0x12b>
   1b5aa:	48 8d 15 ed cc 01 00 	lea    0x1cced(%rip),%rdx        # 3829e <str.6+0xf7e>
   1b5b1:	eb 13                	jmp    1b5c6 <<std::io::error::ErrorKind as core::fmt::Debug>::fmt+0xa6>
   1b5b3:	48 8d 15 d7 cc 01 00 	lea    0x1ccd7(%rip),%rdx        # 38291 <str.6+0xf71>
   1b5ba:	e9 82 00 00 00       	jmpq   1b641 <<std::io::error::ErrorKind as core::fmt::Debug>::fmt+0x121>
   1b5bf:	48 8d 15 c1 cc 01 00 	lea    0x1ccc1(%rip),%rdx        # 38287 <str.6+0xf67>
   1b5c6:	48 8d 5c 24 08       	lea    0x8(%rsp),%rbx
   1b5cb:	b9 0a 00 00 00       	mov    $0xa,%ecx
   1b5d0:	eb 79                	jmp    1b64b <<std::io::error::ErrorKind as core::fmt::Debug>::fmt+0x12b>
   1b5d2:	48 8d 15 a2 cc 01 00 	lea    0x1cca2(%rip),%rdx        # 3827b <str.6+0xf5b>
   1b5d9:	48 8d 5c 24 08       	lea    0x8(%rsp),%rbx
   1b5de:	b9 0c 00 00 00       	mov    $0xc,%ecx
   1b5e3:	eb 66                	jmp    1b64b <<std::io::error::ErrorKind as core::fmt::Debug>::fmt+0x12b>
   1b5e5:	48 8d 15 84 cc 01 00 	lea    0x1cc84(%rip),%rdx        # 38270 <str.6+0xf50>
   1b5ec:	eb 2d                	jmp    1b61b <<std::io::error::ErrorKind as core::fmt::Debug>::fmt+0xfb>
   1b5ee:	48 8d 15 6b c4 01 00 	lea    0x1c46b(%rip),%rdx        # 37a60 <str.6+0x740>
   1b5f5:	48 8d 5c 24 08       	lea    0x8(%rsp),%rbx
   1b5fa:	b9 08 00 00 00       	mov    $0x8,%ecx
   1b5ff:	eb 4a                	jmp    1b64b <<std::io::error::ErrorKind as core::fmt::Debug>::fmt+0x12b>
   1b601:	48 8d 15 5f cc 01 00 	lea    0x1cc5f(%rip),%rdx        # 38267 <str.6+0xf47>
   1b608:	48 8d 5c 24 08       	lea    0x8(%rsp),%rbx
   1b60d:	b9 09 00 00 00       	mov    $0x9,%ecx
   1b612:	eb 37                	jmp    1b64b <<std::io::error::ErrorKind as core::fmt::Debug>::fmt+0x12b>
   1b614:	48 8d 15 41 cc 01 00 	lea    0x1cc41(%rip),%rdx        # 3825c <str.6+0xf3c>
   1b61b:	48 8d 5c 24 08       	lea    0x8(%rsp),%rbx
   1b620:	b9 0b 00 00 00       	mov    $0xb,%ecx
   1b625:	eb 24                	jmp    1b64b <<std::io::error::ErrorKind as core::fmt::Debug>::fmt+0x12b>
   1b627:	48 8d 15 29 cc 01 00 	lea    0x1cc29(%rip),%rdx        # 38257 <str.6+0xf37>
   1b62e:	48 8d 5c 24 08       	lea    0x8(%rsp),%rbx
   1b633:	b9 05 00 00 00       	mov    $0x5,%ecx
   1b638:	eb 11                	jmp    1b64b <<std::io::error::ErrorKind as core::fmt::Debug>::fmt+0x12b>
   1b63a:	48 8d 15 09 cc 01 00 	lea    0x1cc09(%rip),%rdx        # 3824a <str.6+0xf2a>
   1b641:	48 8d 5c 24 08       	lea    0x8(%rsp),%rbx
   1b646:	b9 0d 00 00 00       	mov    $0xd,%ecx
   1b64b:	48 89 df             	mov    %rbx,%rdi
   1b64e:	ff 15 34 a8 02 00    	callq  *0x2a834(%rip)        # 45e88 <_GLOBAL_OFFSET_TABLE_+0x4f8>
   1b654:	48 89 df             	mov    %rbx,%rdi
   1b657:	ff 15 ab a3 02 00    	callq  *0x2a3ab(%rip)        # 45a08 <_GLOBAL_OFFSET_TABLE_+0x78>
   1b65d:	48 83 c4 20          	add    $0x20,%rsp
   1b661:	5b                   	pop    %rbx
   1b662:	c3                   	retq   
   1b663:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1b66a:	00 00 00 
   1b66d:	0f 1f 00             	nopl   (%rax)

000000000001b670 <<std::time::SystemTimeError as core::fmt::Debug>::fmt>:
   1b670:	41 56                	push   %r14
   1b672:	53                   	push   %rbx
   1b673:	48 83 ec 28          	sub    $0x28,%rsp
   1b677:	48 89 fb             	mov    %rdi,%rbx
   1b67a:	48 8d 15 6d cc 01 00 	lea    0x1cc6d(%rip),%rdx        # 382ee <str.6+0xfce>
   1b681:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
   1b686:	b9 0f 00 00 00       	mov    $0xf,%ecx
   1b68b:	4c 89 f7             	mov    %r14,%rdi
   1b68e:	ff 15 f4 a7 02 00    	callq  *0x2a7f4(%rip)        # 45e88 <_GLOBAL_OFFSET_TABLE_+0x4f8>
   1b694:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   1b699:	48 8d 15 b0 8e 02 00 	lea    0x28eb0(%rip),%rdx        # 44550 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xff8>
   1b6a0:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   1b6a5:	4c 89 f7             	mov    %r14,%rdi
   1b6a8:	ff 15 8a a6 02 00    	callq  *0x2a68a(%rip)        # 45d38 <_GLOBAL_OFFSET_TABLE_+0x3a8>
   1b6ae:	4c 89 f7             	mov    %r14,%rdi
   1b6b1:	ff 15 51 a3 02 00    	callq  *0x2a351(%rip)        # 45a08 <_GLOBAL_OFFSET_TABLE_+0x78>
   1b6b7:	48 83 c4 28          	add    $0x28,%rsp
   1b6bb:	5b                   	pop    %rbx
   1b6bc:	41 5e                	pop    %r14
   1b6be:	c3                   	retq   
   1b6bf:	90                   	nop

000000000001b6c0 <std::sys::unix::args::imp::ARGV_INIT_ARRAY::init_wrapper>:
   1b6c0:	41 57                	push   %r15
   1b6c2:	41 56                	push   %r14
   1b6c4:	53                   	push   %rbx
   1b6c5:	49 89 f7             	mov    %rsi,%r15
   1b6c8:	48 63 df             	movslq %edi,%rbx
   1b6cb:	4c 8d 35 ce aa 02 00 	lea    0x2aace(%rip),%r14        # 461a0 <std::sys::unix::args::imp::LOCK>
   1b6d2:	4c 89 f7             	mov    %r14,%rdi
   1b6d5:	ff 15 e5 a8 02 00    	callq  *0x2a8e5(%rip)        # 45fc0 <pthread_mutex_lock@GLIBC_2.2.5>
   1b6db:	48 89 1d ae aa 02 00 	mov    %rbx,0x2aaae(%rip)        # 46190 <std::sys::unix::args::imp::ARGC>
   1b6e2:	4c 89 3d af aa 02 00 	mov    %r15,0x2aaaf(%rip)        # 46198 <std::sys::unix::args::imp::ARGV>
   1b6e9:	4c 89 f7             	mov    %r14,%rdi
   1b6ec:	5b                   	pop    %rbx
   1b6ed:	41 5e                	pop    %r14
   1b6ef:	41 5f                	pop    %r15
   1b6f1:	ff 25 79 a6 02 00    	jmpq   *0x2a679(%rip)        # 45d70 <pthread_mutex_unlock@GLIBC_2.2.5>
   1b6f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1b6fe:	00 00 

000000000001b700 <std::sys::unix::fs::File::open_c>:
   1b700:	55                   	push   %rbp
   1b701:	41 57                	push   %r15
   1b703:	41 56                	push   %r14
   1b705:	41 55                	push   %r13
   1b707:	41 54                	push   %r12
   1b709:	53                   	push   %rbx
   1b70a:	50                   	push   %rax
   1b70b:	49 89 f7             	mov    %rsi,%r15
   1b70e:	49 89 fe             	mov    %rdi,%r14
   1b711:	8a 59 09             	mov    0x9(%rcx),%bl
   1b714:	8a 41 0a             	mov    0xa(%rcx),%al
   1b717:	80 79 08 00          	cmpb   $0x0,0x8(%rcx)
   1b71b:	74 0f                	je     1b72c <std::sys::unix::fs::File::open_c+0x2c>
   1b71d:	84 db                	test   %bl,%bl
   1b71f:	74 39                	je     1b75a <std::sys::unix::fs::File::open_c+0x5a>
   1b721:	84 c0                	test   %al,%al
   1b723:	75 39                	jne    1b75e <std::sys::unix::fs::File::open_c+0x5e>
   1b725:	bf 02 00 00 00       	mov    $0x2,%edi
   1b72a:	eb 26                	jmp    1b752 <std::sys::unix::fs::File::open_c+0x52>
   1b72c:	31 f6                	xor    %esi,%esi
   1b72e:	84 c0                	test   %al,%al
   1b730:	40 0f 95 c6          	setne  %sil
   1b734:	c1 e6 0a             	shl    $0xa,%esi
   1b737:	83 ce 01             	or     $0x1,%esi
   1b73a:	84 db                	test   %bl,%bl
   1b73c:	bf 01 04 00 00       	mov    $0x401,%edi
   1b741:	0f 45 fe             	cmovne %esi,%edi
   1b744:	89 c2                	mov    %eax,%edx
   1b746:	08 da                	or     %bl,%dl
   1b748:	74 27                	je     1b771 <std::sys::unix::fs::File::open_c+0x71>
   1b74a:	84 db                	test   %bl,%bl
   1b74c:	74 47                	je     1b795 <std::sys::unix::fs::File::open_c+0x95>
   1b74e:	84 c0                	test   %al,%al
   1b750:	75 11                	jne    1b763 <std::sys::unix::fs::File::open_c+0x63>
   1b752:	8a 51 0b             	mov    0xb(%rcx),%dl
   1b755:	8a 59 0d             	mov    0xd(%rcx),%bl
   1b758:	eb 53                	jmp    1b7ad <std::sys::unix::fs::File::open_c+0xad>
   1b75a:	84 c0                	test   %al,%al
   1b75c:	74 33                	je     1b791 <std::sys::unix::fs::File::open_c+0x91>
   1b75e:	bf 02 04 00 00       	mov    $0x402,%edi
   1b763:	8a 51 0b             	mov    0xb(%rcx),%dl
   1b766:	8a 59 0d             	mov    0xd(%rcx),%bl
   1b769:	84 d2                	test   %dl,%dl
   1b76b:	74 40                	je     1b7ad <std::sys::unix::fs::File::open_c+0xad>
   1b76d:	84 db                	test   %bl,%bl
   1b76f:	75 3c                	jne    1b7ad <std::sys::unix::fs::File::open_c+0xad>
   1b771:	48 b8 00 00 00 00 16 	movabs $0x1600000000,%rax
   1b778:	00 00 00 
   1b77b:	49 89 46 08          	mov    %rax,0x8(%r14)
   1b77f:	49 c7 46 10 00 00 00 	movq   $0x0,0x10(%r14)
   1b786:	00 
   1b787:	bb 01 00 00 00       	mov    $0x1,%ebx
   1b78c:	e9 ab 00 00 00       	jmpq   1b83c <std::sys::unix::fs::File::open_c+0x13c>
   1b791:	31 ff                	xor    %edi,%edi
   1b793:	eb 09                	jmp    1b79e <std::sys::unix::fs::File::open_c+0x9e>
   1b795:	bf 01 04 00 00       	mov    $0x401,%edi
   1b79a:	84 c0                	test   %al,%al
   1b79c:	75 c5                	jne    1b763 <std::sys::unix::fs::File::open_c+0x63>
   1b79e:	8a 51 0b             	mov    0xb(%rcx),%dl
   1b7a1:	8a 59 0d             	mov    0xd(%rcx),%bl
   1b7a4:	8a 41 0c             	mov    0xc(%rcx),%al
   1b7a7:	08 d0                	or     %dl,%al
   1b7a9:	08 d8                	or     %bl,%al
   1b7ab:	75 c4                	jne    1b771 <std::sys::unix::fs::File::open_c+0x71>
   1b7ad:	80 79 0c 00          	cmpb   $0x0,0xc(%rcx)
   1b7b1:	74 0f                	je     1b7c2 <std::sys::unix::fs::File::open_c+0xc2>
   1b7b3:	84 db                	test   %bl,%bl
   1b7b5:	75 13                	jne    1b7ca <std::sys::unix::fs::File::open_c+0xca>
   1b7b7:	0f b6 d2             	movzbl %dl,%edx
   1b7ba:	c1 e2 09             	shl    $0x9,%edx
   1b7bd:	83 ca 40             	or     $0x40,%edx
   1b7c0:	eb 0d                	jmp    1b7cf <std::sys::unix::fs::File::open_c+0xcf>
   1b7c2:	84 db                	test   %bl,%bl
   1b7c4:	0f 84 95 00 00 00    	je     1b85f <std::sys::unix::fs::File::open_c+0x15f>
   1b7ca:	ba c0 00 00 00       	mov    $0xc0,%edx
   1b7cf:	bd fc ff f7 ff       	mov    $0xfff7fffc,%ebp
   1b7d4:	23 29                	and    (%rcx),%ebp
   1b7d6:	09 d7                	or     %edx,%edi
   1b7d8:	09 fd                	or     %edi,%ebp
   1b7da:	81 cd 00 00 08 00    	or     $0x80000,%ebp
   1b7e0:	44 8b 61 04          	mov    0x4(%rcx),%r12d
   1b7e4:	31 db                	xor    %ebx,%ebx
   1b7e6:	4c 89 ff             	mov    %r15,%rdi
   1b7e9:	89 ee                	mov    %ebp,%esi
   1b7eb:	44 89 e2             	mov    %r12d,%edx
   1b7ee:	31 c0                	xor    %eax,%eax
   1b7f0:	ff 15 6a a6 02 00    	callq  *0x2a66a(%rip)        # 45e60 <open64@GLIBC_2.2.5>
   1b7f6:	83 f8 ff             	cmp    $0xffffffff,%eax
   1b7f9:	75 3d                	jne    1b838 <std::sys::unix::fs::File::open_c+0x138>
   1b7fb:	4c 89 34 24          	mov    %r14,(%rsp)
   1b7ff:	4c 8b 35 1a a2 02 00 	mov    0x2a21a(%rip),%r14        # 45a20 <__errno_location@GLIBC_2.2.5>
   1b806:	4c 8b 2d 53 a6 02 00 	mov    0x2a653(%rip),%r13        # 45e60 <open64@GLIBC_2.2.5>
   1b80d:	0f 1f 00             	nopl   (%rax)
   1b810:	41 ff d6             	callq  *%r14
   1b813:	8b 18                	mov    (%rax),%ebx
   1b815:	89 df                	mov    %ebx,%edi
   1b817:	e8 24 0a 00 00       	callq  1c240 <std::sys::unix::decode_error_kind>
   1b81c:	3c 0f                	cmp    $0xf,%al
   1b81e:	75 2e                	jne    1b84e <std::sys::unix::fs::File::open_c+0x14e>
   1b820:	4c 89 ff             	mov    %r15,%rdi
   1b823:	89 ee                	mov    %ebp,%esi
   1b825:	44 89 e2             	mov    %r12d,%edx
   1b828:	31 c0                	xor    %eax,%eax
   1b82a:	41 ff d5             	callq  *%r13
   1b82d:	83 f8 ff             	cmp    $0xffffffff,%eax
   1b830:	74 de                	je     1b810 <std::sys::unix::fs::File::open_c+0x110>
   1b832:	4c 8b 34 24          	mov    (%rsp),%r14
   1b836:	31 db                	xor    %ebx,%ebx
   1b838:	41 89 46 04          	mov    %eax,0x4(%r14)
   1b83c:	41 89 1e             	mov    %ebx,(%r14)
   1b83f:	48 83 c4 08          	add    $0x8,%rsp
   1b843:	5b                   	pop    %rbx
   1b844:	41 5c                	pop    %r12
   1b846:	41 5d                	pop    %r13
   1b848:	41 5e                	pop    %r14
   1b84a:	41 5f                	pop    %r15
   1b84c:	5d                   	pop    %rbp
   1b84d:	c3                   	retq   
   1b84e:	48 c1 e3 20          	shl    $0x20,%rbx
   1b852:	4c 8b 34 24          	mov    (%rsp),%r14
   1b856:	49 89 5e 08          	mov    %rbx,0x8(%r14)
   1b85a:	e9 20 ff ff ff       	jmpq   1b77f <std::sys::unix::fs::File::open_c+0x7f>
   1b85f:	0f b6 d2             	movzbl %dl,%edx
   1b862:	c1 e2 09             	shl    $0x9,%edx
   1b865:	e9 65 ff ff ff       	jmpq   1b7cf <std::sys::unix::fs::File::open_c+0xcf>
   1b86a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001b870 <std::sys::unix::fs::readlink>:
   1b870:	55                   	push   %rbp
   1b871:	41 57                	push   %r15
   1b873:	41 56                	push   %r14
   1b875:	41 55                	push   %r13
   1b877:	41 54                	push   %r12
   1b879:	53                   	push   %rbx
   1b87a:	48 83 ec 48          	sub    $0x48,%rsp
   1b87e:	49 89 d4             	mov    %rdx,%r12
   1b881:	49 89 f6             	mov    %rsi,%r14
   1b884:	49 89 ff             	mov    %rdi,%r15
   1b887:	48 89 d3             	mov    %rdx,%rbx
   1b88a:	48 ff c3             	inc    %rbx
   1b88d:	75 35                	jne    1b8c4 <std::sys::unix::fs::readlink+0x54>
   1b88f:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
   1b896:	be 01 00 00 00       	mov    $0x1,%esi
   1b89b:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   1b8a2:	ff 15 e0 a2 02 00    	callq  *0x2a2e0(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   1b8a8:	48 89 c5             	mov    %rax,%rbp
   1b8ab:	48 85 c0             	test   %rax,%rax
   1b8ae:	75 2e                	jne    1b8de <std::sys::unix::fs::readlink+0x6e>
   1b8b0:	be 01 00 00 00       	mov    $0x1,%esi
   1b8b5:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   1b8bc:	ff 15 66 a2 02 00    	callq  *0x2a266(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   1b8c2:	0f 0b                	ud2    
   1b8c4:	be 01 00 00 00       	mov    $0x1,%esi
   1b8c9:	48 89 df             	mov    %rbx,%rdi
   1b8cc:	ff 15 b6 a2 02 00    	callq  *0x2a2b6(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   1b8d2:	48 85 c0             	test   %rax,%rax
   1b8d5:	0f 84 76 02 00 00    	je     1bb51 <std::sys::unix::fs::readlink+0x2e1>
   1b8db:	48 89 c5             	mov    %rax,%rbp
   1b8de:	48 89 ef             	mov    %rbp,%rdi
   1b8e1:	4c 89 f6             	mov    %r14,%rsi
   1b8e4:	4c 89 e2             	mov    %r12,%rdx
   1b8e7:	ff 15 13 a4 02 00    	callq  *0x2a413(%rip)        # 45d00 <memcpy@GLIBC_2.14>
   1b8ed:	48 89 ef             	mov    %rbp,%rdi
   1b8f0:	31 f6                	xor    %esi,%esi
   1b8f2:	4c 89 e2             	mov    %r12,%rdx
   1b8f5:	ff 15 75 a3 02 00    	callq  *0x2a375(%rip)        # 45c70 <memchr@GLIBC_2.2.5>
   1b8fb:	48 85 c0             	test   %rax,%rax
   1b8fe:	74 36                	je     1b936 <std::sys::unix::fs::readlink+0xc6>
   1b900:	48 29 e8             	sub    %rbp,%rax
   1b903:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1b908:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
   1b90d:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   1b912:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
   1b917:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   1b91c:	ff 15 fe a1 02 00    	callq  *0x2a1fe(%rip)        # 45b20 <_GLOBAL_OFFSET_TABLE_+0x190>
   1b922:	49 89 57 10          	mov    %rdx,0x10(%r15)
   1b926:	49 89 47 08          	mov    %rax,0x8(%r15)
   1b92a:	49 c7 07 01 00 00 00 	movq   $0x1,(%r15)
   1b931:	e9 5f 01 00 00       	jmpq   1ba95 <std::sys::unix::fs::readlink+0x225>
   1b936:	48 89 6c 24 08       	mov    %rbp,0x8(%rsp)
   1b93b:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
   1b940:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   1b945:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   1b94a:	ff 15 00 a4 02 00    	callq  *0x2a400(%rip)        # 45d50 <_GLOBAL_OFFSET_TABLE_+0x3c0>
   1b950:	49 89 c4             	mov    %rax,%r12
   1b953:	48 89 d5             	mov    %rdx,%rbp
   1b956:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1b95b:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
   1b960:	bb 00 01 00 00       	mov    $0x100,%ebx
   1b965:	bf 00 01 00 00       	mov    $0x100,%edi
   1b96a:	be 01 00 00 00       	mov    $0x1,%esi
   1b96f:	ff 15 13 a2 02 00    	callq  *0x2a213(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   1b975:	48 85 c0             	test   %rax,%rax
   1b978:	0f 84 e3 01 00 00    	je     1bb61 <std::sys::unix::fs::readlink+0x2f1>
   1b97e:	49 89 c5             	mov    %rax,%r13
   1b981:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1b986:	0f 28 05 e3 a8 01 00 	movaps 0x1a8e3(%rip),%xmm0        # 36270 <_fini+0x11ec>
   1b98d:	0f 11 44 24 10       	movups %xmm0,0x10(%rsp)
   1b992:	ba 00 01 00 00       	mov    $0x100,%edx
   1b997:	4c 89 e7             	mov    %r12,%rdi
   1b99a:	48 89 c6             	mov    %rax,%rsi
   1b99d:	ff 15 1d a1 02 00    	callq  *0x2a11d(%rip)        # 45ac0 <readlink@GLIBC_2.2.5>
   1b9a3:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1b9a7:	0f 84 9b 00 00 00    	je     1ba48 <std::sys::unix::fs::readlink+0x1d8>
   1b9ad:	48 89 6c 24 28       	mov    %rbp,0x28(%rsp)
   1b9b2:	4c 89 7c 24 30       	mov    %r15,0x30(%rsp)
   1b9b7:	bb 00 01 00 00       	mov    $0x100,%ebx
   1b9bc:	4c 8b 7c 24 08       	mov    0x8(%rsp),%r15
   1b9c1:	4c 8b 35 f8 a0 02 00 	mov    0x2a0f8(%rip),%r14        # 45ac0 <readlink@GLIBC_2.2.5>
   1b9c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1b9cf:	00 
   1b9d0:	48 89 c5             	mov    %rax,%rbp
   1b9d3:	48 39 c3             	cmp    %rax,%rbx
   1b9d6:	0f 85 cb 00 00 00    	jne    1baa7 <std::sys::unix::fs::readlink+0x237>
   1b9dc:	48 8d 5d 01          	lea    0x1(%rbp),%rbx
   1b9e0:	48 89 e8             	mov    %rbp,%rax
   1b9e3:	48 01 e8             	add    %rbp,%rax
   1b9e6:	48 39 d8             	cmp    %rbx,%rax
   1b9e9:	48 0f 47 d8          	cmova  %rax,%rbx
   1b9ed:	48 83 fb 08          	cmp    $0x8,%rbx
   1b9f1:	b8 08 00 00 00       	mov    $0x8,%eax
   1b9f6:	48 0f 46 d8          	cmovbe %rax,%rbx
   1b9fa:	ba 01 00 00 00       	mov    $0x1,%edx
   1b9ff:	4c 89 ef             	mov    %r13,%rdi
   1ba02:	48 89 ee             	mov    %rbp,%rsi
   1ba05:	48 89 d9             	mov    %rbx,%rcx
   1ba08:	ff 15 6a a5 02 00    	callq  *0x2a56a(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
   1ba0e:	48 85 c0             	test   %rax,%rax
   1ba11:	0f 84 35 01 00 00    	je     1bb4c <std::sys::unix::fs::readlink+0x2dc>
   1ba17:	49 89 c5             	mov    %rax,%r13
   1ba1a:	4c 89 e7             	mov    %r12,%rdi
   1ba1d:	48 89 c6             	mov    %rax,%rsi
   1ba20:	48 89 da             	mov    %rbx,%rdx
   1ba23:	41 ff d6             	callq  *%r14
   1ba26:	4d 89 ef             	mov    %r13,%r15
   1ba29:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1ba2d:	75 a1                	jne    1b9d0 <std::sys::unix::fs::readlink+0x160>
   1ba2f:	4c 89 6c 24 08       	mov    %r13,0x8(%rsp)
   1ba34:	48 89 6c 24 18       	mov    %rbp,0x18(%rsp)
   1ba39:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
   1ba3e:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
   1ba43:	48 8b 6c 24 28       	mov    0x28(%rsp),%rbp
   1ba48:	ff 15 d2 9f 02 00    	callq  *0x29fd2(%rip)        # 45a20 <__errno_location@GLIBC_2.2.5>
   1ba4e:	8b 00                	mov    (%rax),%eax
   1ba50:	48 c1 e0 20          	shl    $0x20,%rax
   1ba54:	49 89 47 08          	mov    %rax,0x8(%r15)
   1ba58:	49 c7 47 10 00 00 00 	movq   $0x0,0x10(%r15)
   1ba5f:	00 
   1ba60:	49 c7 07 01 00 00 00 	movq   $0x1,(%r15)
   1ba67:	ba 01 00 00 00       	mov    $0x1,%edx
   1ba6c:	4c 89 ef             	mov    %r13,%rdi
   1ba6f:	48 89 de             	mov    %rbx,%rsi
   1ba72:	ff 15 88 a1 02 00    	callq  *0x2a188(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   1ba78:	41 c6 04 24 00       	movb   $0x0,(%r12)
   1ba7d:	48 85 ed             	test   %rbp,%rbp
   1ba80:	74 13                	je     1ba95 <std::sys::unix::fs::readlink+0x225>
   1ba82:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
   1ba87:	ba 01 00 00 00       	mov    $0x1,%edx
   1ba8c:	48 89 ee             	mov    %rbp,%rsi
   1ba8f:	ff 15 6b a1 02 00    	callq  *0x2a16b(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   1ba95:	4c 89 f8             	mov    %r15,%rax
   1ba98:	48 83 c4 48          	add    $0x48,%rsp
   1ba9c:	5b                   	pop    %rbx
   1ba9d:	41 5c                	pop    %r12
   1ba9f:	41 5d                	pop    %r13
   1baa1:	41 5e                	pop    %r14
   1baa3:	41 5f                	pop    %r15
   1baa5:	5d                   	pop    %rbp
   1baa6:	c3                   	retq   
   1baa7:	4c 89 7c 24 08       	mov    %r15,0x8(%rsp)
   1baac:	48 89 6c 24 18       	mov    %rbp,0x18(%rsp)
   1bab1:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
   1bab6:	48 39 eb             	cmp    %rbp,%rbx
   1bab9:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
   1babe:	76 52                	jbe    1bb12 <std::sys::unix::fs::readlink+0x2a2>
   1bac0:	48 85 ed             	test   %rbp,%rbp
   1bac3:	74 2c                	je     1baf1 <std::sys::unix::fs::readlink+0x281>
   1bac5:	ba 01 00 00 00       	mov    $0x1,%edx
   1baca:	4c 89 ef             	mov    %r13,%rdi
   1bacd:	48 89 de             	mov    %rbx,%rsi
   1bad0:	48 89 e9             	mov    %rbp,%rcx
   1bad3:	ff 15 9f a4 02 00    	callq  *0x2a49f(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
   1bad9:	49 89 c6             	mov    %rax,%r14
   1badc:	48 85 c0             	test   %rax,%rax
   1badf:	75 27                	jne    1bb08 <std::sys::unix::fs::readlink+0x298>
   1bae1:	be 01 00 00 00       	mov    $0x1,%esi
   1bae6:	48 89 ef             	mov    %rbp,%rdi
   1bae9:	ff 15 39 a0 02 00    	callq  *0x2a039(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   1baef:	0f 0b                	ud2    
   1baf1:	41 be 01 00 00 00    	mov    $0x1,%r14d
   1baf7:	ba 01 00 00 00       	mov    $0x1,%edx
   1bafc:	4c 89 ef             	mov    %r13,%rdi
   1baff:	48 89 de             	mov    %rbx,%rsi
   1bb02:	ff 15 f8 a0 02 00    	callq  *0x2a0f8(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   1bb08:	4c 89 74 24 08       	mov    %r14,0x8(%rsp)
   1bb0d:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
   1bb12:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1bb17:	49 89 47 18          	mov    %rax,0x18(%r15)
   1bb1b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1bb20:	49 89 47 08          	mov    %rax,0x8(%r15)
   1bb24:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1bb29:	49 89 47 10          	mov    %rax,0x10(%r15)
   1bb2d:	49 c7 07 00 00 00 00 	movq   $0x0,(%r15)
   1bb34:	48 8b 6c 24 28       	mov    0x28(%rsp),%rbp
   1bb39:	41 c6 04 24 00       	movb   $0x0,(%r12)
   1bb3e:	48 85 ed             	test   %rbp,%rbp
   1bb41:	0f 85 3b ff ff ff    	jne    1ba82 <std::sys::unix::fs::readlink+0x212>
   1bb47:	e9 49 ff ff ff       	jmpq   1ba95 <std::sys::unix::fs::readlink+0x225>
   1bb4c:	4c 89 7c 24 08       	mov    %r15,0x8(%rsp)
   1bb51:	be 01 00 00 00       	mov    $0x1,%esi
   1bb56:	48 89 df             	mov    %rbx,%rdi
   1bb59:	ff 15 c9 9f 02 00    	callq  *0x29fc9(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   1bb5f:	0f 0b                	ud2    
   1bb61:	bf 00 01 00 00       	mov    $0x100,%edi
   1bb66:	be 01 00 00 00       	mov    $0x1,%esi
   1bb6b:	ff 15 b7 9f 02 00    	callq  *0x29fb7(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   1bb71:	0f 0b                	ud2    
   1bb73:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1bb7a:	00 00 00 
   1bb7d:	0f 1f 00             	nopl   (%rax)

000000000001bb80 <std::sys::unix::os::error_string>:
   1bb80:	41 57                	push   %r15
   1bb82:	41 56                	push   %r14
   1bb84:	41 54                	push   %r12
   1bb86:	53                   	push   %rbx
   1bb87:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
   1bb8e:	89 f0                	mov    %esi,%eax
   1bb90:	49 89 fe             	mov    %rdi,%r14
   1bb93:	0f 57 c0             	xorps  %xmm0,%xmm0
   1bb96:	0f 29 84 24 a0 00 00 	movaps %xmm0,0xa0(%rsp)
   1bb9d:	00 
   1bb9e:	0f 29 84 24 90 00 00 	movaps %xmm0,0x90(%rsp)
   1bba5:	00 
   1bba6:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
   1bbad:	00 
   1bbae:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
   1bbb3:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
   1bbb8:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   1bbbd:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
   1bbc2:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
   1bbc7:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
   1bbcc:	ba 80 00 00 00       	mov    $0x80,%edx
   1bbd1:	89 c7                	mov    %eax,%edi
   1bbd3:	ff 15 d7 9e 02 00    	callq  *0x29ed7(%rip)        # 45ab0 <__xpg_strerror_r@GLIBC_2.3.4>
   1bbd9:	85 c0                	test   %eax,%eax
   1bbdb:	0f 88 97 00 00 00    	js     1bc78 <std::sys::unix::os::error_string+0xf8>
   1bbe1:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
   1bbe6:	ff 15 64 9f 02 00    	callq  *0x29f64(%rip)        # 45b50 <strlen@GLIBC_2.2.5>
   1bbec:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1bbf0:	0f 84 9c 00 00 00    	je     1bc92 <std::sys::unix::os::error_string+0x112>
   1bbf6:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   1bbfb:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
   1bc00:	48 89 c2             	mov    %rax,%rdx
   1bc03:	ff 15 c7 9f 02 00    	callq  *0x29fc7(%rip)        # 45bd0 <_GLOBAL_OFFSET_TABLE_+0x240>
   1bc09:	83 7c 24 08 01       	cmpl   $0x1,0x8(%rsp)
   1bc0e:	0f 84 96 00 00 00    	je     1bcaa <std::sys::unix::os::error_string+0x12a>
   1bc14:	4c 8b 7c 24 10       	mov    0x10(%rsp),%r15
   1bc19:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   1bc1e:	48 85 db             	test   %rbx,%rbx
   1bc21:	74 26                	je     1bc49 <std::sys::unix::os::error_string+0xc9>
   1bc23:	be 01 00 00 00       	mov    $0x1,%esi
   1bc28:	48 89 df             	mov    %rbx,%rdi
   1bc2b:	ff 15 57 9f 02 00    	callq  *0x29f57(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   1bc31:	49 89 c4             	mov    %rax,%r12
   1bc34:	48 85 c0             	test   %rax,%rax
   1bc37:	75 16                	jne    1bc4f <std::sys::unix::os::error_string+0xcf>
   1bc39:	be 01 00 00 00       	mov    $0x1,%esi
   1bc3e:	48 89 df             	mov    %rbx,%rdi
   1bc41:	ff 15 e1 9e 02 00    	callq  *0x29ee1(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   1bc47:	0f 0b                	ud2    
   1bc49:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   1bc4f:	4c 89 e7             	mov    %r12,%rdi
   1bc52:	4c 89 fe             	mov    %r15,%rsi
   1bc55:	48 89 da             	mov    %rbx,%rdx
   1bc58:	ff 15 a2 a0 02 00    	callq  *0x2a0a2(%rip)        # 45d00 <memcpy@GLIBC_2.14>
   1bc5e:	4d 89 26             	mov    %r12,(%r14)
   1bc61:	49 89 5e 08          	mov    %rbx,0x8(%r14)
   1bc65:	49 89 5e 10          	mov    %rbx,0x10(%r14)
   1bc69:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
   1bc70:	5b                   	pop    %rbx
   1bc71:	41 5c                	pop    %r12
   1bc73:	41 5e                	pop    %r14
   1bc75:	41 5f                	pop    %r15
   1bc77:	c3                   	retq   
   1bc78:	48 8d 3d bf c6 01 00 	lea    0x1c6bf(%rip),%rdi        # 3833e <str.6+0x101e>
   1bc7f:	48 8d 15 02 89 02 00 	lea    0x28902(%rip),%rdx        # 44588 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1030>
   1bc86:	be 12 00 00 00       	mov    $0x12,%esi
   1bc8b:	e8 80 e7 ff ff       	callq  1a410 <std::panicking::begin_panic>
   1bc90:	0f 0b                	ud2    
   1bc92:	48 8d 15 57 7f 02 00 	lea    0x27f57(%rip),%rdx        # 43bf0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x698>
   1bc99:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   1bca0:	31 f6                	xor    %esi,%esi
   1bca2:	ff 15 88 9d 02 00    	callq  *0x29d88(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   1bca8:	0f 0b                	ud2    
   1bcaa:	0f 10 44 24 10       	movups 0x10(%rsp),%xmm0
   1bcaf:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   1bcb4:	48 8d 3d 6a b9 01 00 	lea    0x1b96a(%rip),%rdi        # 37625 <str.6+0x305>
   1bcbb:	48 8d 0d de 7b 02 00 	lea    0x27bde(%rip),%rcx        # 438a0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x348>
   1bcc2:	4c 8d 05 d7 88 02 00 	lea    0x288d7(%rip),%r8        # 445a0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1048>
   1bcc9:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
   1bcce:	be 2b 00 00 00       	mov    $0x2b,%esi
   1bcd3:	ff 15 0f 9f 02 00    	callq  *0x29f0f(%rip)        # 45be8 <_GLOBAL_OFFSET_TABLE_+0x258>
   1bcd9:	0f 0b                	ud2    
   1bcdb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001bce0 <std::sys::unix::stack_overflow::imp::signal_handler>:
   1bce0:	55                   	push   %rbp
   1bce1:	41 57                	push   %r15
   1bce3:	41 56                	push   %r14
   1bce5:	53                   	push   %rbx
   1bce6:	48 81 ec c8 00 00 00 	sub    $0xc8,%rsp
   1bced:	49 89 f7             	mov    %rsi,%r15
   1bcf0:	41 89 fe             	mov    %edi,%r14d
   1bcf3:	66 66 66 64 48 8b 04 	data16 data16 data16 mov %fs:0x0,%rax
   1bcfa:	25 00 00 00 00 
   1bcff:	83 b8 a0 ff ff ff 01 	cmpl   $0x1,-0x60(%rax)
   1bd06:	75 09                	jne    1bd11 <std::sys::unix::stack_overflow::imp::signal_handler+0x31>
   1bd08:	48 8d a8 a8 ff ff ff 	lea    -0x58(%rax),%rbp
   1bd0f:	eb 11                	jmp    1bd22 <std::sys::unix::stack_overflow::imp::signal_handler+0x42>
   1bd11:	e8 fa 77 ff ff       	callq  13510 <std::thread::local::fast::Key<T>::try_initialize>
   1bd16:	48 89 c5             	mov    %rax,%rbp
   1bd19:	48 85 c0             	test   %rax,%rax
   1bd1c:	0f 84 48 01 00 00    	je     1be6a <std::sys::unix::stack_overflow::imp::signal_handler+0x18a>
   1bd22:	48 8b 45 00          	mov    0x0(%rbp),%rax
   1bd26:	48 8d 48 01          	lea    0x1(%rax),%rcx
   1bd2a:	48 85 c9             	test   %rcx,%rcx
   1bd2d:	0f 8e 7f 01 00 00    	jle    1beb2 <std::sys::unix::stack_overflow::imp::signal_handler+0x1d2>
   1bd33:	48 83 7d 08 02       	cmpq   $0x2,0x8(%rbp)
   1bd38:	75 7a                	jne    1bdb4 <std::sys::unix::stack_overflow::imp::signal_handler+0xd4>
   1bd3a:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   1bd41:	00 00 
   1bd43:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1bd48:	ff 15 32 a2 02 00    	callq  *0x2a232(%rip)        # 45f80 <_GLOBAL_OFFSET_TABLE_+0x5f0>
   1bd4e:	0f 10 44 24 10       	movups 0x10(%rsp),%xmm0
   1bd53:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   1bd5a:	00 00 
   1bd5c:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
   1bd61:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1bd66:	48 83 7d 00 00       	cmpq   $0x0,0x0(%rbp)
   1bd6b:	0f 85 aa 01 00 00    	jne    1bf1b <std::sys::unix::stack_overflow::imp::signal_handler+0x23b>
   1bd71:	48 8d 5d 08          	lea    0x8(%rbp),%rbx
   1bd75:	48 c7 45 00 ff ff ff 	movq   $0xffffffffffffffff,0x0(%rbp)
   1bd7c:	ff 
   1bd7d:	83 7d 08 02          	cmpl   $0x2,0x8(%rbp)
   1bd81:	74 14                	je     1bd97 <std::sys::unix::stack_overflow::imp::signal_handler+0xb7>
   1bd83:	48 8b 45 20          	mov    0x20(%rbp),%rax
   1bd87:	f0 48 83 28 01       	lock subq $0x1,(%rax)
   1bd8c:	75 09                	jne    1bd97 <std::sys::unix::stack_overflow::imp::signal_handler+0xb7>
   1bd8e:	48 8d 7d 20          	lea    0x20(%rbp),%rdi
   1bd92:	e8 f9 da fe ff       	callq  9890 <alloc::sync::Arc<T>::drop_slow>
   1bd97:	0f 10 44 24 10       	movups 0x10(%rsp),%xmm0
   1bd9c:	0f 10 4c 24 20       	movups 0x20(%rsp),%xmm1
   1bda1:	0f 11 4b 10          	movups %xmm1,0x10(%rbx)
   1bda5:	0f 11 03             	movups %xmm0,(%rbx)
   1bda8:	48 8b 45 00          	mov    0x0(%rbp),%rax
   1bdac:	48 83 c0 01          	add    $0x1,%rax
   1bdb0:	48 89 45 00          	mov    %rax,0x0(%rbp)
   1bdb4:	48 85 c0             	test   %rax,%rax
   1bdb7:	0f 85 37 01 00 00    	jne    1bef4 <std::sys::unix::stack_overflow::imp::signal_handler+0x214>
   1bdbd:	48 c7 45 00 ff ff ff 	movq   $0xffffffffffffffff,0x0(%rbp)
   1bdc4:	ff 
   1bdc5:	48 8b 45 08          	mov    0x8(%rbp),%rax
   1bdc9:	48 83 f8 01          	cmp    $0x1,%rax
   1bdcd:	74 0d                	je     1bddc <std::sys::unix::stack_overflow::imp::signal_handler+0xfc>
   1bdcf:	83 f8 02             	cmp    $0x2,%eax
   1bdd2:	0f 84 01 01 00 00    	je     1bed9 <std::sys::unix::stack_overflow::imp::signal_handler+0x1f9>
   1bdd8:	31 c9                	xor    %ecx,%ecx
   1bdda:	eb 0d                	jmp    1bde9 <std::sys::unix::stack_overflow::imp::signal_handler+0x109>
   1bddc:	48 8b 55 10          	mov    0x10(%rbp),%rdx
   1bde0:	48 8b 45 18          	mov    0x18(%rbp),%rax
   1bde4:	b9 01 00 00 00       	mov    $0x1,%ecx
   1bde9:	48 c7 45 00 00 00 00 	movq   $0x0,0x0(%rbp)
   1bdf0:	00 
   1bdf1:	48 85 c9             	test   %rcx,%rcx
   1bdf4:	48 0f 44 c1          	cmove  %rcx,%rax
   1bdf8:	48 0f 44 d1          	cmove  %rcx,%rdx
   1bdfc:	49 8b 4f 10          	mov    0x10(%r15),%rcx
   1be00:	48 39 ca             	cmp    %rcx,%rdx
   1be03:	77 05                	ja     1be0a <std::sys::unix::stack_overflow::imp::signal_handler+0x12a>
   1be05:	48 39 c1             	cmp    %rax,%rcx
   1be08:	72 64                	jb     1be6e <std::sys::unix::stack_overflow::imp::signal_handler+0x18e>
   1be0a:	0f 57 c0             	xorps  %xmm0,%xmm0
   1be0d:	0f 29 84 24 90 00 00 	movaps %xmm0,0x90(%rsp)
   1be14:	00 
   1be15:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
   1be1c:	00 
   1be1d:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
   1be22:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
   1be27:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   1be2c:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
   1be31:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
   1be36:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   1be3b:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   1be40:	48 c7 84 24 a0 00 00 	movq   $0x0,0xa0(%rsp)
   1be47:	00 00 00 00 00 
   1be4c:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   1be51:	44 89 f7             	mov    %r14d,%edi
   1be54:	31 d2                	xor    %edx,%edx
   1be56:	ff 15 14 9c 02 00    	callq  *0x29c14(%rip)        # 45a70 <sigaction@GLIBC_2.2.5>
   1be5c:	48 81 c4 c8 00 00 00 	add    $0xc8,%rsp
   1be63:	5b                   	pop    %rbx
   1be64:	41 5e                	pop    %r14
   1be66:	41 5f                	pop    %r15
   1be68:	5d                   	pop    %rbp
   1be69:	c3                   	retq   
   1be6a:	31 c9                	xor    %ecx,%ecx
   1be6c:	eb 83                	jmp    1bdf1 <std::sys::unix::stack_overflow::imp::signal_handler+0x111>
   1be6e:	e8 5d d7 ff ff       	callq  195d0 <std::sys_common::util::report_overflow>
   1be73:	48 8d 05 6e 87 02 00 	lea    0x2876e(%rip),%rax        # 445e8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1090>
   1be7a:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1be7f:	48 c7 44 24 18 01 00 	movq   $0x1,0x18(%rsp)
   1be86:	00 00 
   1be88:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   1be8f:	00 00 
   1be91:	48 8d 05 c0 b3 01 00 	lea    0x1b3c0(%rip),%rax        # 37258 <_fini+0x21d4>
   1be98:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1be9d:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   1bea4:	00 00 
   1bea6:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1beab:	e8 c0 d6 ff ff       	callq  19570 <std::sys_common::util::abort>
   1beb0:	0f 0b                	ud2    
   1beb2:	48 8d 3d ef b4 01 00 	lea    0x1b4ef(%rip),%rdi        # 373a8 <str.6+0x88>
   1beb9:	48 8d 0d c0 79 02 00 	lea    0x279c0(%rip),%rcx        # 43880 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x328>
   1bec0:	4c 8d 05 b9 81 02 00 	lea    0x281b9(%rip),%r8        # 44080 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xb28>
   1bec7:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   1becc:	be 18 00 00 00       	mov    $0x18,%esi
   1bed1:	ff 15 11 9d 02 00    	callq  *0x29d11(%rip)        # 45be8 <_GLOBAL_OFFSET_TABLE_+0x258>
   1bed7:	eb 67                	jmp    1bf40 <std::sys::unix::stack_overflow::imp::signal_handler+0x260>
   1bed9:	48 8d 3d 1a b7 01 00 	lea    0x1b71a(%rip),%rdi        # 375fa <str.6+0x2da>
   1bee0:	48 8d 15 e1 81 02 00 	lea    0x281e1(%rip),%rdx        # 440c8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xb70>
   1bee7:	be 2b 00 00 00       	mov    $0x2b,%esi
   1beec:	ff 15 ee 9f 02 00    	callq  *0x29fee(%rip)        # 45ee0 <_GLOBAL_OFFSET_TABLE_+0x550>
   1bef2:	eb 4c                	jmp    1bf40 <std::sys::unix::stack_overflow::imp::signal_handler+0x260>
   1bef4:	48 8d 3d d5 a3 01 00 	lea    0x1a3d5(%rip),%rdi        # 362d0 <_fini+0x124c>
   1befb:	48 8d 0d fe 78 02 00 	lea    0x278fe(%rip),%rcx        # 43800 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2a8>
   1bf02:	4c 8d 05 a7 81 02 00 	lea    0x281a7(%rip),%r8        # 440b0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xb58>
   1bf09:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   1bf0e:	be 10 00 00 00       	mov    $0x10,%esi
   1bf13:	ff 15 cf 9c 02 00    	callq  *0x29ccf(%rip)        # 45be8 <_GLOBAL_OFFSET_TABLE_+0x258>
   1bf19:	eb 25                	jmp    1bf40 <std::sys::unix::stack_overflow::imp::signal_handler+0x260>
   1bf1b:	48 8d 3d ae a3 01 00 	lea    0x1a3ae(%rip),%rdi        # 362d0 <_fini+0x124c>
   1bf22:	48 8d 0d d7 78 02 00 	lea    0x278d7(%rip),%rcx        # 43800 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2a8>
   1bf29:	4c 8d 05 68 81 02 00 	lea    0x28168(%rip),%r8        # 44098 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xb40>
   1bf30:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   1bf35:	be 10 00 00 00       	mov    $0x10,%esi
   1bf3a:	ff 15 a8 9c 02 00    	callq  *0x29ca8(%rip)        # 45be8 <_GLOBAL_OFFSET_TABLE_+0x258>
   1bf40:	0f 0b                	ud2    
   1bf42:	48 89 c3             	mov    %rax,%rbx
   1bf45:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1bf4a:	e8 d1 a1 fe ff       	callq  6120 <core::ptr::drop_in_place>
   1bf4f:	eb 12                	jmp    1bf63 <std::sys::unix::stack_overflow::imp::signal_handler+0x283>
   1bf51:	eb 0d                	jmp    1bf60 <std::sys::unix::stack_overflow::imp::signal_handler+0x280>
   1bf53:	48 89 c3             	mov    %rax,%rbx
   1bf56:	48 89 ef             	mov    %rbp,%rdi
   1bf59:	e8 02 9e fe ff       	callq  5d60 <core::ptr::drop_in_place>
   1bf5e:	eb 03                	jmp    1bf63 <std::sys::unix::stack_overflow::imp::signal_handler+0x283>
   1bf60:	48 89 c3             	mov    %rax,%rbx
   1bf63:	48 89 df             	mov    %rbx,%rdi
   1bf66:	e8 e5 90 fe ff       	callq  5050 <_Unwind_Resume@plt>
   1bf6b:	0f 0b                	ud2    
   1bf6d:	0f 1f 00             	nopl   (%rax)

000000000001bf70 <std::sys::unix::stack_overflow::imp::make_handler>:
   1bf70:	53                   	push   %rbx
   1bf71:	48 83 ec 20          	sub    $0x20,%rsp
   1bf75:	8a 05 b6 a2 02 00    	mov    0x2a2b6(%rip),%al        # 46231 <_ZN3std3sys4unix14stack_overflow3imp13NEED_ALTSTACK17hb61d576fcc5bc78fE.0.0>
   1bf7b:	84 c0                	test   %al,%al
   1bf7d:	0f 84 b9 00 00 00    	je     1c03c <std::sys::unix::stack_overflow::imp::make_handler+0xcc>
   1bf83:	0f 57 c0             	xorps  %xmm0,%xmm0
   1bf86:	0f 29 04 24          	movaps %xmm0,(%rsp)
   1bf8a:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   1bf91:	00 00 
   1bf93:	31 db                	xor    %ebx,%ebx
   1bf95:	48 89 e6             	mov    %rsp,%rsi
   1bf98:	31 ff                	xor    %edi,%edi
   1bf9a:	ff 15 d0 9f 02 00    	callq  *0x29fd0(%rip)        # 45f70 <sigaltstack@GLIBC_2.2.5>
   1bfa0:	f6 44 24 08 02       	testb  $0x2,0x8(%rsp)
   1bfa5:	0f 84 88 00 00 00    	je     1c033 <std::sys::unix::stack_overflow::imp::make_handler+0xc3>
   1bfab:	bf 1e 00 00 00       	mov    $0x1e,%edi
   1bfb0:	ff 15 3a 9f 02 00    	callq  *0x29f3a(%rip)        # 45ef0 <sysconf@GLIBC_2.2.5>
   1bfb6:	48 8d b0 00 20 00 00 	lea    0x2000(%rax),%rsi
   1bfbd:	bf 00 00 00 00       	mov    $0x0,%edi
   1bfc2:	ba 03 00 00 00       	mov    $0x3,%edx
   1bfc7:	b9 22 00 00 00       	mov    $0x22,%ecx
   1bfcc:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
   1bfd2:	45 31 c9             	xor    %r9d,%r9d
   1bfd5:	ff 15 8d 9b 02 00    	callq  *0x29b8d(%rip)        # 45b68 <mmap@GLIBC_2.2.5>
   1bfdb:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1bfdf:	74 66                	je     1c047 <std::sys::unix::stack_overflow::imp::make_handler+0xd7>
   1bfe1:	48 89 c3             	mov    %rax,%rbx
   1bfe4:	bf 1e 00 00 00       	mov    $0x1e,%edi
   1bfe9:	ff 15 01 9f 02 00    	callq  *0x29f01(%rip)        # 45ef0 <sysconf@GLIBC_2.2.5>
   1bfef:	48 89 df             	mov    %rbx,%rdi
   1bff2:	48 89 c6             	mov    %rax,%rsi
   1bff5:	31 d2                	xor    %edx,%edx
   1bff7:	ff 15 cb 9e 02 00    	callq  *0x29ecb(%rip)        # 45ec8 <mprotect@GLIBC_2.2.5>
   1bffd:	85 c0                	test   %eax,%eax
   1bfff:	75 60                	jne    1c061 <std::sys::unix::stack_overflow::imp::make_handler+0xf1>
   1c001:	bf 1e 00 00 00       	mov    $0x1e,%edi
   1c006:	ff 15 e4 9e 02 00    	callq  *0x29ee4(%rip)        # 45ef0 <sysconf@GLIBC_2.2.5>
   1c00c:	48 01 c3             	add    %rax,%rbx
   1c00f:	48 89 1c 24          	mov    %rbx,(%rsp)
   1c013:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%rsp)
   1c01a:	00 
   1c01b:	48 c7 44 24 10 00 20 	movq   $0x2000,0x10(%rsp)
   1c022:	00 00 
   1c024:	48 89 e7             	mov    %rsp,%rdi
   1c027:	31 f6                	xor    %esi,%esi
   1c029:	ff 15 41 9f 02 00    	callq  *0x29f41(%rip)        # 45f70 <sigaltstack@GLIBC_2.2.5>
   1c02f:	48 8b 1c 24          	mov    (%rsp),%rbx
   1c033:	48 89 d8             	mov    %rbx,%rax
   1c036:	48 83 c4 20          	add    $0x20,%rsp
   1c03a:	5b                   	pop    %rbx
   1c03b:	c3                   	retq   
   1c03c:	31 db                	xor    %ebx,%ebx
   1c03e:	48 89 d8             	mov    %rbx,%rax
   1c041:	48 83 c4 20          	add    $0x20,%rsp
   1c045:	5b                   	pop    %rbx
   1c046:	c3                   	retq   
   1c047:	48 8d 3d e3 c3 01 00 	lea    0x1c3e3(%rip),%rdi        # 38431 <str.6+0x1111>
   1c04e:	48 8d 15 a3 85 02 00 	lea    0x285a3(%rip),%rdx        # 445f8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x10a0>
   1c055:	be 27 00 00 00       	mov    $0x27,%esi
   1c05a:	e8 b1 e3 ff ff       	callq  1a410 <std::panicking::begin_panic>
   1c05f:	0f 0b                	ud2    
   1c061:	48 8d 3d 1a c4 01 00 	lea    0x1c41a(%rip),%rdi        # 38482 <str.6+0x1162>
   1c068:	48 8d 15 a1 85 02 00 	lea    0x285a1(%rip),%rdx        # 44610 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x10b8>
   1c06f:	be 2d 00 00 00       	mov    $0x2d,%esi
   1c074:	e8 97 e3 ff ff       	callq  1a410 <std::panicking::begin_panic>
   1c079:	0f 0b                	ud2    
   1c07b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001c080 <<std::sys::unix::stdio::Stderr as std::io::Write>::write>:
   1c080:	53                   	push   %rbx
   1c081:	48 89 fb             	mov    %rdi,%rbx
   1c084:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
   1c08b:	ff ff 7f 
   1c08e:	48 39 c1             	cmp    %rax,%rcx
   1c091:	48 0f 42 c1          	cmovb  %rcx,%rax
   1c095:	bf 02 00 00 00       	mov    $0x2,%edi
   1c09a:	48 89 d6             	mov    %rdx,%rsi
   1c09d:	48 89 c2             	mov    %rax,%rdx
   1c0a0:	ff 15 32 9a 02 00    	callq  *0x29a32(%rip)        # 45ad8 <write@GLIBC_2.2.5>
   1c0a6:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1c0aa:	74 0e                	je     1c0ba <<std::sys::unix::stdio::Stderr as std::io::Write>::write+0x3a>
   1c0ac:	48 89 43 08          	mov    %rax,0x8(%rbx)
   1c0b0:	31 c0                	xor    %eax,%eax
   1c0b2:	48 89 03             	mov    %rax,(%rbx)
   1c0b5:	48 89 d8             	mov    %rbx,%rax
   1c0b8:	5b                   	pop    %rbx
   1c0b9:	c3                   	retq   
   1c0ba:	ff 15 60 99 02 00    	callq  *0x29960(%rip)        # 45a20 <__errno_location@GLIBC_2.2.5>
   1c0c0:	8b 00                	mov    (%rax),%eax
   1c0c2:	48 c1 e0 20          	shl    $0x20,%rax
   1c0c6:	48 89 43 08          	mov    %rax,0x8(%rbx)
   1c0ca:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   1c0d1:	00 
   1c0d2:	b8 01 00 00 00       	mov    $0x1,%eax
   1c0d7:	48 89 03             	mov    %rax,(%rbx)
   1c0da:	48 89 d8             	mov    %rbx,%rax
   1c0dd:	5b                   	pop    %rbx
   1c0de:	c3                   	retq   
   1c0df:	90                   	nop

000000000001c0e0 <<std::sys::unix::stdio::Stderr as std::io::Write>::write_vectored>:
   1c0e0:	53                   	push   %rbx
   1c0e1:	48 89 fb             	mov    %rdi,%rbx
   1c0e4:	48 81 f9 00 04 00 00 	cmp    $0x400,%rcx
   1c0eb:	b8 00 04 00 00       	mov    $0x400,%eax
   1c0f0:	0f 42 c1             	cmovb  %ecx,%eax
   1c0f3:	bf 02 00 00 00       	mov    $0x2,%edi
   1c0f8:	48 89 d6             	mov    %rdx,%rsi
   1c0fb:	89 c2                	mov    %eax,%edx
   1c0fd:	ff 15 65 99 02 00    	callq  *0x29965(%rip)        # 45a68 <writev@GLIBC_2.2.5>
   1c103:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1c107:	74 0e                	je     1c117 <<std::sys::unix::stdio::Stderr as std::io::Write>::write_vectored+0x37>
   1c109:	48 89 43 08          	mov    %rax,0x8(%rbx)
   1c10d:	31 c0                	xor    %eax,%eax
   1c10f:	48 89 03             	mov    %rax,(%rbx)
   1c112:	48 89 d8             	mov    %rbx,%rax
   1c115:	5b                   	pop    %rbx
   1c116:	c3                   	retq   
   1c117:	ff 15 03 99 02 00    	callq  *0x29903(%rip)        # 45a20 <__errno_location@GLIBC_2.2.5>
   1c11d:	8b 00                	mov    (%rax),%eax
   1c11f:	48 c1 e0 20          	shl    $0x20,%rax
   1c123:	48 89 43 08          	mov    %rax,0x8(%rbx)
   1c127:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   1c12e:	00 
   1c12f:	b8 01 00 00 00       	mov    $0x1,%eax
   1c134:	48 89 03             	mov    %rax,(%rbx)
   1c137:	48 89 d8             	mov    %rbx,%rax
   1c13a:	5b                   	pop    %rbx
   1c13b:	c3                   	retq   
   1c13c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001c140 <<std::sys::unix::stdio::Stderr as std::io::Write>::is_write_vectored>:
   1c140:	b0 01                	mov    $0x1,%al
   1c142:	c3                   	retq   
   1c143:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1c14a:	00 00 00 
   1c14d:	0f 1f 00             	nopl   (%rax)

000000000001c150 <<std::sys::unix::stdio::Stderr as std::io::Write>::flush>:
   1c150:	b8 03 00 00 00       	mov    $0x3,%eax
   1c155:	31 d2                	xor    %edx,%edx
   1c157:	c3                   	retq   
   1c158:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1c15f:	00 

000000000001c160 <std::sys::unix::time::Timespec::sub_timespec>:
   1c160:	41 56                	push   %r14
   1c162:	53                   	push   %rbx
   1c163:	48 83 ec 18          	sub    $0x18,%rsp
   1c167:	48 89 f0             	mov    %rsi,%rax
   1c16a:	49 89 fe             	mov    %rdi,%r14
   1c16d:	48 8b 0e             	mov    (%rsi),%rcx
   1c170:	4c 8b 46 08          	mov    0x8(%rsi),%r8
   1c174:	48 8b 7a 08          	mov    0x8(%rdx),%rdi
   1c178:	31 db                	xor    %ebx,%ebx
   1c17a:	48 2b 0a             	sub    (%rdx),%rcx
   1c17d:	0f 95 c3             	setne  %bl
   1c180:	be ff 00 00 00       	mov    $0xff,%esi
   1c185:	0f 4d f3             	cmovge %ebx,%esi
   1c188:	49 39 f8             	cmp    %rdi,%r8
   1c18b:	0f 9c c3             	setl   %bl
   1c18e:	f6 db                	neg    %bl
   1c190:	40 84 f6             	test   %sil,%sil
   1c193:	0f b6 db             	movzbl %bl,%ebx
   1c196:	0f 45 de             	cmovne %esi,%ebx
   1c199:	80 fb 02             	cmp    $0x2,%bl
   1c19c:	73 4e                	jae    1c1ec <std::sys::unix::time::Timespec::sub_timespec+0x8c>
   1c19e:	44 89 c2             	mov    %r8d,%edx
   1c1a1:	29 fa                	sub    %edi,%edx
   1c1a3:	8d 82 00 ca 9a 3b    	lea    0x3b9aca00(%rdx),%eax
   1c1a9:	31 f6                	xor    %esi,%esi
   1c1ab:	49 39 f8             	cmp    %rdi,%r8
   1c1ae:	40 0f 9c c6          	setl   %sil
   1c1b2:	0f 4d c2             	cmovge %edx,%eax
   1c1b5:	48 29 f1             	sub    %rsi,%rcx
   1c1b8:	89 c2                	mov    %eax,%edx
   1c1ba:	c1 ea 09             	shr    $0x9,%edx
   1c1bd:	48 69 d2 83 4b 04 00 	imul   $0x44b83,%rdx,%rdx
   1c1c4:	48 c1 ea 27          	shr    $0x27,%rdx
   1c1c8:	48 01 d1             	add    %rdx,%rcx
   1c1cb:	72 51                	jb     1c21e <std::sys::unix::time::Timespec::sub_timespec+0xbe>
   1c1cd:	69 d2 00 ca 9a 3b    	imul   $0x3b9aca00,%edx,%edx
   1c1d3:	29 d0                	sub    %edx,%eax
   1c1d5:	49 89 4e 08          	mov    %rcx,0x8(%r14)
   1c1d9:	41 89 46 10          	mov    %eax,0x10(%r14)
   1c1dd:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
   1c1e4:	48 83 c4 18          	add    $0x18,%rsp
   1c1e8:	5b                   	pop    %rbx
   1c1e9:	41 5e                	pop    %r14
   1c1eb:	c3                   	retq   
   1c1ec:	48 89 e7             	mov    %rsp,%rdi
   1c1ef:	48 89 d6             	mov    %rdx,%rsi
   1c1f2:	48 89 c2             	mov    %rax,%rdx
   1c1f5:	e8 66 ff ff ff       	callq  1c160 <std::sys::unix::time::Timespec::sub_timespec>
   1c1fa:	48 8b 04 24          	mov    (%rsp),%rax
   1c1fe:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1c203:	8b 54 24 10          	mov    0x10(%rsp),%edx
   1c207:	49 89 4e 08          	mov    %rcx,0x8(%r14)
   1c20b:	41 89 56 10          	mov    %edx,0x10(%r14)
   1c20f:	48 83 f0 01          	xor    $0x1,%rax
   1c213:	49 89 06             	mov    %rax,(%r14)
   1c216:	48 83 c4 18          	add    $0x18,%rsp
   1c21a:	5b                   	pop    %rbx
   1c21b:	41 5e                	pop    %r14
   1c21d:	c3                   	retq   
   1c21e:	48 8d 3d d5 b1 01 00 	lea    0x1b1d5(%rip),%rdi        # 373fa <str.6+0xda>
   1c225:	48 8d 15 c4 74 02 00 	lea    0x274c4(%rip),%rdx        # 436f0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x198>
   1c22c:	be 19 00 00 00       	mov    $0x19,%esi
   1c231:	ff 15 a9 9c 02 00    	callq  *0x29ca9(%rip)        # 45ee0 <_GLOBAL_OFFSET_TABLE_+0x550>
   1c237:	0f 0b                	ud2    
   1c239:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001c240 <std::sys::unix::decode_error_kind>:
   1c240:	b1 10                	mov    $0x10,%cl
   1c242:	83 c7 ff             	add    $0xffffffff,%edi
   1c245:	83 ff 6e             	cmp    $0x6e,%edi
   1c248:	77 1d                	ja     1c267 <std::sys::unix::decode_error_kind+0x27>
   1c24a:	b0 02                	mov    $0x2,%al
   1c24c:	48 8d 15 1d ad 01 00 	lea    0x1ad1d(%rip),%rdx        # 36f70 <_fini+0x1eec>
   1c253:	48 63 34 ba          	movslq (%rdx,%rdi,4),%rsi
   1c257:	48 01 d6             	add    %rdx,%rsi
   1c25a:	ff e6                	jmpq   *%rsi
   1c25c:	b0 01                	mov    $0x1,%al
   1c25e:	c3                   	retq   
   1c25f:	31 c0                	xor    %eax,%eax
   1c261:	c3                   	retq   
   1c262:	b0 0f                	mov    $0xf,%al
   1c264:	c3                   	retq   
   1c265:	b1 0a                	mov    $0xa,%cl
   1c267:	89 c8                	mov    %ecx,%eax
   1c269:	c3                   	retq   
   1c26a:	b0 09                	mov    $0x9,%al
   1c26c:	c3                   	retq   
   1c26d:	b0 0b                	mov    $0xb,%al
   1c26f:	c3                   	retq   
   1c270:	b0 06                	mov    $0x6,%al
   1c272:	c3                   	retq   
   1c273:	b0 07                	mov    $0x7,%al
   1c275:	c3                   	retq   
   1c276:	b0 04                	mov    $0x4,%al
   1c278:	c3                   	retq   
   1c279:	b0 03                	mov    $0x3,%al
   1c27b:	c3                   	retq   
   1c27c:	b0 05                	mov    $0x5,%al
   1c27e:	c3                   	retq   
   1c27f:	b0 0d                	mov    $0xd,%al
   1c281:	c3                   	retq   
   1c282:	b0 08                	mov    $0x8,%al
   1c284:	c3                   	retq   
   1c285:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1c28c:	00 00 00 
   1c28f:	90                   	nop

000000000001c290 <std::sys::unix::abort_internal>:
   1c290:	50                   	push   %rax
   1c291:	ff 15 79 97 02 00    	callq  *0x29779(%rip)        # 45a10 <abort@GLIBC_2.2.5>
   1c297:	0f 0b                	ud2    
   1c299:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001c2a0 <std::sys::unix::fs::try_statx>:
   1c2a0:	55                   	push   %rbp
   1c2a1:	41 57                	push   %r15
   1c2a3:	41 56                	push   %r14
   1c2a5:	53                   	push   %rbx
   1c2a6:	48 81 ec 08 01 00 00 	sub    $0x108,%rsp
   1c2ad:	48 89 fb             	mov    %rdi,%rbx
   1c2b0:	8a 05 7c 9f 02 00    	mov    0x29f7c(%rip),%al        # 46232 <_ZN3std3sys4unix2fs9try_statx11STATX_STATE17h9ee81358210a5460E.0.0>
   1c2b6:	3c 01                	cmp    $0x1,%al
   1c2b8:	0f 84 15 02 00 00    	je     1c4d3 <std::sys::unix::fs::try_statx+0x233>
   1c2be:	41 89 cf             	mov    %ecx,%r15d
   1c2c1:	49 89 d6             	mov    %rdx,%r14
   1c2c4:	89 f5                	mov    %esi,%ebp
   1c2c6:	84 c0                	test   %al,%al
   1c2c8:	75 41                	jne    1c30b <std::sys::unix::fs::try_statx+0x6b>
   1c2ca:	bf 4c 01 00 00       	mov    $0x14c,%edi
   1c2cf:	41 b8 ff 0f 00 00    	mov    $0xfff,%r8d
   1c2d5:	be 00 00 00 00       	mov    $0x0,%esi
   1c2da:	ba 00 00 00 00       	mov    $0x0,%edx
   1c2df:	31 c9                	xor    %ecx,%ecx
   1c2e1:	45 31 c9             	xor    %r9d,%r9d
   1c2e4:	31 c0                	xor    %eax,%eax
   1c2e6:	ff 15 ec 99 02 00    	callq  *0x299ec(%rip)        # 45cd8 <syscall@GLIBC_2.2.5>
   1c2ec:	83 f8 ff             	cmp    $0xffffffff,%eax
   1c2ef:	0f 85 d7 01 00 00    	jne    1c4cc <std::sys::unix::fs::try_statx+0x22c>
   1c2f5:	ff 15 25 97 02 00    	callq  *0x29725(%rip)        # 45a20 <__errno_location@GLIBC_2.2.5>
   1c2fb:	83 38 0e             	cmpl   $0xe,(%rax)
   1c2fe:	0f 85 c8 01 00 00    	jne    1c4cc <std::sys::unix::fs::try_statx+0x22c>
   1c304:	c6 05 27 9f 02 00 02 	movb   $0x2,0x29f27(%rip)        # 46232 <_ZN3std3sys4unix2fs9try_statx11STATX_STATE17h9ee81358210a5460E.0.0>
   1c30b:	0f 57 c0             	xorps  %xmm0,%xmm0
   1c30e:	0f 29 84 24 f0 00 00 	movaps %xmm0,0xf0(%rsp)
   1c315:	00 
   1c316:	0f 29 84 24 e0 00 00 	movaps %xmm0,0xe0(%rsp)
   1c31d:	00 
   1c31e:	0f 29 84 24 d0 00 00 	movaps %xmm0,0xd0(%rsp)
   1c325:	00 
   1c326:	0f 29 84 24 c0 00 00 	movaps %xmm0,0xc0(%rsp)
   1c32d:	00 
   1c32e:	0f 29 84 24 b0 00 00 	movaps %xmm0,0xb0(%rsp)
   1c335:	00 
   1c336:	0f 29 84 24 a0 00 00 	movaps %xmm0,0xa0(%rsp)
   1c33d:	00 
   1c33e:	0f 29 84 24 90 00 00 	movaps %xmm0,0x90(%rsp)
   1c345:	00 
   1c346:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
   1c34d:	00 
   1c34e:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
   1c353:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
   1c358:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   1c35d:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
   1c362:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
   1c367:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   1c36c:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   1c371:	0f 29 04 24          	movaps %xmm0,(%rsp)
   1c375:	48 63 f5             	movslq %ebp,%rsi
   1c378:	44 89 f9             	mov    %r15d,%ecx
   1c37b:	49 89 e1             	mov    %rsp,%r9
   1c37e:	bf 4c 01 00 00       	mov    $0x14c,%edi
   1c383:	41 b8 ff 0f 00 00    	mov    $0xfff,%r8d
   1c389:	4c 89 f2             	mov    %r14,%rdx
   1c38c:	31 c0                	xor    %eax,%eax
   1c38e:	ff 15 44 99 02 00    	callq  *0x29944(%rip)        # 45cd8 <syscall@GLIBC_2.2.5>
   1c394:	83 f8 ff             	cmp    $0xffffffff,%eax
   1c397:	0f 84 4b 01 00 00    	je     1c4e8 <std::sys::unix::fs::try_statx+0x248>
   1c39d:	8b 8c 24 88 00 00 00 	mov    0x88(%rsp),%ecx
   1c3a4:	8b 84 24 8c 00 00 00 	mov    0x8c(%rsp),%eax
   1c3ab:	89 ca                	mov    %ecx,%edx
   1c3ad:	c1 e2 08             	shl    $0x8,%edx
   1c3b0:	81 e2 00 ff 0f 00    	and    $0xfff00,%edx
   1c3b6:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx
   1c3bc:	48 c1 e1 20          	shl    $0x20,%rcx
   1c3c0:	48 09 d1             	or     %rdx,%rcx
   1c3c3:	0f b6 d0             	movzbl %al,%edx
   1c3c6:	48 09 ca             	or     %rcx,%rdx
   1c3c9:	48 c1 e0 0c          	shl    $0xc,%rax
   1c3cd:	48 25 00 00 f0 ff    	and    $0xfffffffffff00000,%rax
   1c3d3:	48 09 d0             	or     %rdx,%rax
   1c3d6:	8b 94 24 80 00 00 00 	mov    0x80(%rsp),%edx
   1c3dd:	8b 8c 24 84 00 00 00 	mov    0x84(%rsp),%ecx
   1c3e4:	89 d6                	mov    %edx,%esi
   1c3e6:	c1 e6 08             	shl    $0x8,%esi
   1c3e9:	81 e6 00 ff 0f 00    	and    $0xfff00,%esi
   1c3ef:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx
   1c3f5:	48 c1 e2 20          	shl    $0x20,%rdx
   1c3f9:	48 09 f2             	or     %rsi,%rdx
   1c3fc:	0f b6 f1             	movzbl %cl,%esi
   1c3ff:	48 09 d6             	or     %rdx,%rsi
   1c402:	48 c1 e1 0c          	shl    $0xc,%rcx
   1c406:	48 81 e1 00 00 f0 ff 	and    $0xfffffffffff00000,%rcx
   1c40d:	48 09 f1             	or     %rsi,%rcx
   1c410:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   1c417:	48 89 43 08          	mov    %rax,0x8(%rbx)
   1c41b:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   1c420:	48 89 43 10          	mov    %rax,0x10(%rbx)
   1c424:	8b 44 24 10          	mov    0x10(%rsp),%eax
   1c428:	48 89 43 18          	mov    %rax,0x18(%rbx)
   1c42c:	0f b7 44 24 1c       	movzwl 0x1c(%rsp),%eax
   1c431:	89 43 20             	mov    %eax,0x20(%rbx)
   1c434:	48 8b 44 24 14       	mov    0x14(%rsp),%rax
   1c439:	48 89 43 24          	mov    %rax,0x24(%rbx)
   1c43d:	c7 43 2c 00 00 00 00 	movl   $0x0,0x2c(%rbx)
   1c444:	48 89 4b 30          	mov    %rcx,0x30(%rbx)
   1c448:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1c44d:	48 89 43 38          	mov    %rax,0x38(%rbx)
   1c451:	8b 44 24 04          	mov    0x4(%rsp),%eax
   1c455:	48 89 43 40          	mov    %rax,0x40(%rbx)
   1c459:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   1c45e:	48 89 43 48          	mov    %rax,0x48(%rbx)
   1c462:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   1c467:	48 89 43 50          	mov    %rax,0x50(%rbx)
   1c46b:	8b 44 24 48          	mov    0x48(%rsp),%eax
   1c46f:	48 89 43 58          	mov    %rax,0x58(%rbx)
   1c473:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   1c478:	48 89 43 60          	mov    %rax,0x60(%rbx)
   1c47c:	8b 44 24 78          	mov    0x78(%rsp),%eax
   1c480:	48 89 43 68          	mov    %rax,0x68(%rbx)
   1c484:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   1c489:	48 89 43 70          	mov    %rax,0x70(%rbx)
   1c48d:	8b 44 24 68          	mov    0x68(%rsp),%eax
   1c491:	48 89 43 78          	mov    %rax,0x78(%rbx)
   1c495:	8b 04 24             	mov    (%rsp),%eax
   1c498:	0f 57 c0             	xorps  %xmm0,%xmm0
   1c49b:	0f 11 83 80 00 00 00 	movups %xmm0,0x80(%rbx)
   1c4a2:	48 c7 83 90 00 00 00 	movq   $0x0,0x90(%rbx)
   1c4a9:	00 00 00 00 
   1c4ad:	48 c7 83 98 00 00 00 	movq   $0x1,0x98(%rbx)
   1c4b4:	01 00 00 00 
   1c4b8:	0f 28 44 24 50       	movaps 0x50(%rsp),%xmm0
   1c4bd:	0f 11 83 a0 00 00 00 	movups %xmm0,0xa0(%rbx)
   1c4c4:	89 83 b0 00 00 00    	mov    %eax,0xb0(%rbx)
   1c4ca:	eb 0e                	jmp    1c4da <std::sys::unix::fs::try_statx+0x23a>
   1c4cc:	c6 05 5f 9d 02 00 01 	movb   $0x1,0x29d5f(%rip)        # 46232 <_ZN3std3sys4unix2fs9try_statx11STATX_STATE17h9ee81358210a5460E.0.0>
   1c4d3:	48 c7 03 02 00 00 00 	movq   $0x2,(%rbx)
   1c4da:	48 81 c4 08 01 00 00 	add    $0x108,%rsp
   1c4e1:	5b                   	pop    %rbx
   1c4e2:	41 5e                	pop    %r14
   1c4e4:	41 5f                	pop    %r15
   1c4e6:	5d                   	pop    %rbp
   1c4e7:	c3                   	retq   
   1c4e8:	ff 15 32 95 02 00    	callq  *0x29532(%rip)        # 45a20 <__errno_location@GLIBC_2.2.5>
   1c4ee:	8b 00                	mov    (%rax),%eax
   1c4f0:	48 c1 e0 20          	shl    $0x20,%rax
   1c4f4:	48 c7 03 01 00 00 00 	movq   $0x1,(%rbx)
   1c4fb:	48 89 43 08          	mov    %rax,0x8(%rbx)
   1c4ff:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   1c506:	00 
   1c507:	eb d1                	jmp    1c4da <std::sys::unix::fs::try_statx+0x23a>
   1c509:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001c510 <std::backtrace_rs::backtrace::libunwind::trace::trace_fn>:
   1c510:	53                   	push   %rbx
   1c511:	48 83 ec 20          	sub    $0x20,%rsp
   1c515:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   1c51c:	00 
   1c51d:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   1c522:	48 8b 3e             	mov    (%rsi),%rdi
   1c525:	48 8b 46 08          	mov    0x8(%rsi),%rax
   1c529:	48 89 e6             	mov    %rsp,%rsi
   1c52c:	ff 50 18             	callq  *0x18(%rax)
   1c52f:	34 01                	xor    $0x1,%al
   1c531:	0f b6 c0             	movzbl %al,%eax
   1c534:	8d 04 c0             	lea    (%rax,%rax,8),%eax
   1c537:	48 83 c4 20          	add    $0x20,%rsp
   1c53b:	5b                   	pop    %rbx
   1c53c:	c3                   	retq   
   1c53d:	48 89 c3             	mov    %rax,%rbx
   1c540:	bf 01 00 00 00       	mov    $0x1,%edi
   1c545:	e8 f6 aa fe ff       	callq  7040 <core::ptr::drop_in_place>
   1c54a:	48 89 df             	mov    %rbx,%rdi
   1c54d:	e8 fe 8a fe ff       	callq  5050 <_Unwind_Resume@plt>
   1c552:	0f 0b                	ud2    
   1c554:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1c55b:	00 00 00 
   1c55e:	66 90                	xchg   %ax,%ax

000000000001c560 <<std::backtrace_rs::symbolize::SymbolName as core::fmt::Display>::fmt>:
   1c560:	55                   	push   %rbp
   1c561:	41 57                	push   %r15
   1c563:	41 56                	push   %r14
   1c565:	41 55                	push   %r13
   1c567:	41 54                	push   %r12
   1c569:	53                   	push   %rbx
   1c56a:	48 83 ec 38          	sub    $0x38,%rsp
   1c56e:	49 89 f6             	mov    %rsi,%r14
   1c571:	83 7f 10 03          	cmpl   $0x3,0x10(%rdi)
   1c575:	0f 85 8c 00 00 00    	jne    1c607 <<std::backtrace_rs::symbolize::SymbolName as core::fmt::Display>::fmt+0xa7>
   1c57b:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
   1c57f:	48 85 db             	test   %rbx,%rbx
   1c582:	0f 84 b5 00 00 00    	je     1c63d <<std::backtrace_rs::symbolize::SymbolName as core::fmt::Display>::fmt+0xdd>
   1c588:	4c 8b 3f             	mov    (%rdi),%r15
   1c58b:	4c 8d 25 ae 52 01 00 	lea    0x152ae(%rip),%r12        # 31840 <<str as core::fmt::Display>::fmt>
   1c592:	48 8d 6c 24 20       	lea    0x20(%rsp),%rbp
   1c597:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1c59e:	00 00 
   1c5a0:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   1c5a5:	4c 89 fe             	mov    %r15,%rsi
   1c5a8:	48 89 da             	mov    %rbx,%rdx
   1c5ab:	ff 15 1f 96 02 00    	callq  *0x2961f(%rip)        # 45bd0 <_GLOBAL_OFFSET_TABLE_+0x240>
   1c5b1:	83 7c 24 08 01       	cmpl   $0x1,0x8(%rsp)
   1c5b6:	75 6a                	jne    1c622 <<std::backtrace_rs::symbolize::SymbolName as core::fmt::Display>::fmt+0xc2>
   1c5b8:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   1c5bd:	0f 10 00             	movups (%rax),%xmm0
   1c5c0:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   1c5c5:	be 03 00 00 00       	mov    $0x3,%esi
   1c5ca:	48 8d 3d 22 ba 01 00 	lea    0x1ba22(%rip),%rdi        # 37ff3 <str.6+0xcd3>
   1c5d1:	4c 89 f2             	mov    %r14,%rdx
   1c5d4:	41 ff d4             	callq  *%r12
   1c5d7:	84 c0                	test   %al,%al
   1c5d9:	75 5e                	jne    1c639 <<std::backtrace_rs::symbolize::SymbolName as core::fmt::Display>::fmt+0xd9>
   1c5db:	48 89 ef             	mov    %rbp,%rdi
   1c5de:	ff 15 54 99 02 00    	callq  *0x29954(%rip)        # 45f38 <_GLOBAL_OFFSET_TABLE_+0x5a8>
   1c5e4:	48 85 c0             	test   %rax,%rax
   1c5e7:	74 54                	je     1c63d <<std::backtrace_rs::symbolize::SymbolName as core::fmt::Display>::fmt+0xdd>
   1c5e9:	49 89 d5             	mov    %rdx,%r13
   1c5ec:	48 89 ef             	mov    %rbp,%rdi
   1c5ef:	ff 15 1b 98 02 00    	callq  *0x2981b(%rip)        # 45e10 <_GLOBAL_OFFSET_TABLE_+0x480>
   1c5f5:	4c 01 e8             	add    %r13,%rax
   1c5f8:	48 39 c3             	cmp    %rax,%rbx
   1c5fb:	72 51                	jb     1c64e <<std::backtrace_rs::symbolize::SymbolName as core::fmt::Display>::fmt+0xee>
   1c5fd:	49 01 c7             	add    %rax,%r15
   1c600:	48 29 c3             	sub    %rax,%rbx
   1c603:	75 9b                	jne    1c5a0 <<std::backtrace_rs::symbolize::SymbolName as core::fmt::Display>::fmt+0x40>
   1c605:	eb 36                	jmp    1c63d <<std::backtrace_rs::symbolize::SymbolName as core::fmt::Display>::fmt+0xdd>
   1c607:	48 83 c7 10          	add    $0x10,%rdi
   1c60b:	4c 89 f6             	mov    %r14,%rsi
   1c60e:	48 83 c4 38          	add    $0x38,%rsp
   1c612:	5b                   	pop    %rbx
   1c613:	41 5c                	pop    %r12
   1c615:	41 5d                	pop    %r13
   1c617:	41 5e                	pop    %r14
   1c619:	41 5f                	pop    %r15
   1c61b:	5d                   	pop    %rbp
   1c61c:	ff 25 9e 96 02 00    	jmpq   *0x2969e(%rip)        # 45cc0 <_GLOBAL_OFFSET_TABLE_+0x330>
   1c622:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   1c627:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   1c62c:	4c 89 f2             	mov    %r14,%rdx
   1c62f:	ff 15 bb 96 02 00    	callq  *0x296bb(%rip)        # 45cf0 <_GLOBAL_OFFSET_TABLE_+0x360>
   1c635:	84 c0                	test   %al,%al
   1c637:	74 04                	je     1c63d <<std::backtrace_rs::symbolize::SymbolName as core::fmt::Display>::fmt+0xdd>
   1c639:	b0 01                	mov    $0x1,%al
   1c63b:	eb 02                	jmp    1c63f <<std::backtrace_rs::symbolize::SymbolName as core::fmt::Display>::fmt+0xdf>
   1c63d:	31 c0                	xor    %eax,%eax
   1c63f:	48 83 c4 38          	add    $0x38,%rsp
   1c643:	5b                   	pop    %rbx
   1c644:	41 5c                	pop    %r12
   1c646:	41 5d                	pop    %r13
   1c648:	41 5e                	pop    %r14
   1c64a:	41 5f                	pop    %r15
   1c64c:	5d                   	pop    %rbp
   1c64d:	c3                   	retq   
   1c64e:	48 8d 15 db 7d 02 00 	lea    0x27ddb(%rip),%rdx        # 44430 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0xed8>
   1c655:	48 89 c7             	mov    %rax,%rdi
   1c658:	48 89 de             	mov    %rbx,%rsi
   1c65b:	ff 15 97 97 02 00    	callq  *0x29797(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x468>
   1c661:	0f 0b                	ud2    
   1c663:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1c66a:	00 00 00 
   1c66d:	0f 1f 00             	nopl   (%rax)

000000000001c670 <std::backtrace_rs::symbolize::gimli::stash::Stash::allocate>:
   1c670:	41 57                	push   %r15
   1c672:	41 56                	push   %r14
   1c674:	41 54                	push   %r12
   1c676:	53                   	push   %rbx
   1c677:	48 83 ec 18          	sub    $0x18,%rsp
   1c67b:	48 89 f3             	mov    %rsi,%rbx
   1c67e:	49 89 fc             	mov    %rdi,%r12
   1c681:	4c 8b 77 10          	mov    0x10(%rdi),%r14
   1c685:	48 85 f6             	test   %rsi,%rsi
   1c688:	74 1e                	je     1c6a8 <std::backtrace_rs::symbolize::gimli::stash::Stash::allocate+0x38>
   1c68a:	be 01 00 00 00       	mov    $0x1,%esi
   1c68f:	48 89 df             	mov    %rbx,%rdi
   1c692:	ff 15 70 95 02 00    	callq  *0x29570(%rip)        # 45c08 <_GLOBAL_OFFSET_TABLE_+0x278>
   1c698:	48 85 c0             	test   %rax,%rax
   1c69b:	0f 84 3d 01 00 00    	je     1c7de <std::backtrace_rs::symbolize::gimli::stash::Stash::allocate+0x16e>
   1c6a1:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
   1c6a6:	eb 08                	jmp    1c6b0 <std::backtrace_rs::symbolize::gimli::stash::Stash::allocate+0x40>
   1c6a8:	b8 01 00 00 00       	mov    $0x1,%eax
   1c6ad:	4c 89 f6             	mov    %r14,%rsi
   1c6b0:	48 89 04 24          	mov    %rax,(%rsp)
   1c6b4:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   1c6b9:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
   1c6be:	49 3b 74 24 08       	cmp    0x8(%r12),%rsi
   1c6c3:	75 6c                	jne    1c731 <std::backtrace_rs::symbolize::gimli::stash::Stash::allocate+0xc1>
   1c6c5:	48 89 f1             	mov    %rsi,%rcx
   1c6c8:	48 ff c1             	inc    %rcx
   1c6cb:	0f 84 f3 00 00 00    	je     1c7c4 <std::backtrace_rs::symbolize::gimli::stash::Stash::allocate+0x154>
   1c6d1:	48 8d 04 36          	lea    (%rsi,%rsi,1),%rax
   1c6d5:	48 39 c8             	cmp    %rcx,%rax
   1c6d8:	48 0f 47 c8          	cmova  %rax,%rcx
   1c6dc:	48 83 f9 04          	cmp    $0x4,%rcx
   1c6e0:	b8 04 00 00 00       	mov    $0x4,%eax
   1c6e5:	48 0f 47 c1          	cmova  %rcx,%rax
   1c6e9:	ba 18 00 00 00       	mov    $0x18,%edx
   1c6ee:	31 c9                	xor    %ecx,%ecx
   1c6f0:	48 f7 e2             	mul    %rdx
   1c6f3:	49 89 c7             	mov    %rax,%r15
   1c6f6:	0f 90 c0             	seto   %al
   1c6f9:	0f 91 c1             	setno  %cl
   1c6fc:	48 c1 e1 03          	shl    $0x3,%rcx
   1c700:	48 85 f6             	test   %rsi,%rsi
   1c703:	74 32                	je     1c737 <std::backtrace_rs::symbolize::gimli::stash::Stash::allocate+0xc7>
   1c705:	84 c0                	test   %al,%al
   1c707:	0f 85 b7 00 00 00    	jne    1c7c4 <std::backtrace_rs::symbolize::gimli::stash::Stash::allocate+0x154>
   1c70d:	49 8b 3c 24          	mov    (%r12),%rdi
   1c711:	48 85 ff             	test   %rdi,%rdi
   1c714:	74 29                	je     1c73f <std::backtrace_rs::symbolize::gimli::stash::Stash::allocate+0xcf>
   1c716:	48 c1 e6 03          	shl    $0x3,%rsi
   1c71a:	48 8d 34 76          	lea    (%rsi,%rsi,2),%rsi
   1c71e:	48 85 f6             	test   %rsi,%rsi
   1c721:	74 1c                	je     1c73f <std::backtrace_rs::symbolize::gimli::stash::Stash::allocate+0xcf>
   1c723:	48 89 ca             	mov    %rcx,%rdx
   1c726:	4c 89 f9             	mov    %r15,%rcx
   1c729:	ff 15 49 98 02 00    	callq  *0x29849(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
   1c72f:	eb 1f                	jmp    1c750 <std::backtrace_rs::symbolize::gimli::stash::Stash::allocate+0xe0>
   1c731:	49 8b 0c 24          	mov    (%r12),%rcx
   1c735:	eb 47                	jmp    1c77e <std::backtrace_rs::symbolize::gimli::stash::Stash::allocate+0x10e>
   1c737:	84 c0                	test   %al,%al
   1c739:	0f 85 85 00 00 00    	jne    1c7c4 <std::backtrace_rs::symbolize::gimli::stash::Stash::allocate+0x154>
   1c73f:	4d 85 ff             	test   %r15,%r15
   1c742:	74 0f                	je     1c753 <std::backtrace_rs::symbolize::gimli::stash::Stash::allocate+0xe3>
   1c744:	4c 89 ff             	mov    %r15,%rdi
   1c747:	48 89 ce             	mov    %rcx,%rsi
   1c74a:	ff 15 38 94 02 00    	callq  *0x29438(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   1c750:	48 89 c1             	mov    %rax,%rcx
   1c753:	48 85 c9             	test   %rcx,%rcx
   1c756:	0f 84 92 00 00 00    	je     1c7ee <std::backtrace_rs::symbolize::gimli::stash::Stash::allocate+0x17e>
   1c75c:	48 ba ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rdx
   1c763:	aa aa aa 
   1c766:	4c 89 f8             	mov    %r15,%rax
   1c769:	48 f7 e2             	mul    %rdx
   1c76c:	49 89 0c 24          	mov    %rcx,(%r12)
   1c770:	48 c1 ea 04          	shr    $0x4,%rdx
   1c774:	49 89 54 24 08       	mov    %rdx,0x8(%r12)
   1c779:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
   1c77e:	48 8d 04 76          	lea    (%rsi,%rsi,2),%rax
   1c782:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   1c787:	48 89 54 c1 10       	mov    %rdx,0x10(%rcx,%rax,8)
   1c78c:	0f 10 04 24          	movups (%rsp),%xmm0
   1c790:	0f 11 04 c1          	movups %xmm0,(%rcx,%rax,8)
   1c794:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
   1c799:	48 83 c6 01          	add    $0x1,%rsi
   1c79d:	49 89 74 24 10       	mov    %rsi,0x10(%r12)
   1c7a2:	4c 39 f6             	cmp    %r14,%rsi
   1c7a5:	76 25                	jbe    1c7cc <std::backtrace_rs::symbolize::gimli::stash::Stash::allocate+0x15c>
   1c7a7:	49 8b 0c 24          	mov    (%r12),%rcx
   1c7ab:	4b 8d 14 76          	lea    (%r14,%r14,2),%rdx
   1c7af:	48 8b 04 d1          	mov    (%rcx,%rdx,8),%rax
   1c7b3:	48 8b 54 d1 10       	mov    0x10(%rcx,%rdx,8),%rdx
   1c7b8:	48 83 c4 18          	add    $0x18,%rsp
   1c7bc:	5b                   	pop    %rbx
   1c7bd:	41 5c                	pop    %r12
   1c7bf:	41 5e                	pop    %r14
   1c7c1:	41 5f                	pop    %r15
   1c7c3:	c3                   	retq   
   1c7c4:	ff 15 1e 93 02 00    	callq  *0x2931e(%rip)        # 45ae8 <_GLOBAL_OFFSET_TABLE_+0x158>
   1c7ca:	0f 0b                	ud2    
   1c7cc:	48 8d 15 e5 7e 02 00 	lea    0x27ee5(%rip),%rdx        # 446b8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1160>
   1c7d3:	4c 89 f7             	mov    %r14,%rdi
   1c7d6:	ff 15 bc 94 02 00    	callq  *0x294bc(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   1c7dc:	0f 0b                	ud2    
   1c7de:	be 01 00 00 00       	mov    $0x1,%esi
   1c7e3:	48 89 df             	mov    %rbx,%rdi
   1c7e6:	ff 15 3c 93 02 00    	callq  *0x2933c(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   1c7ec:	0f 0b                	ud2    
   1c7ee:	be 08 00 00 00       	mov    $0x8,%esi
   1c7f3:	4c 89 ff             	mov    %r15,%rdi
   1c7f6:	ff 15 2c 93 02 00    	callq  *0x2932c(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   1c7fc:	0f 0b                	ud2    
   1c7fe:	48 89 c3             	mov    %rax,%rbx
   1c801:	48 89 e7             	mov    %rsp,%rdi
   1c804:	e8 37 9f fe ff       	callq  6740 <core::ptr::drop_in_place>
   1c809:	48 89 df             	mov    %rbx,%rdi
   1c80c:	e8 3f 88 fe ff       	callq  5050 <_Unwind_Resume@plt>
   1c811:	0f 0b                	ud2    
   1c813:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1c81a:	00 00 00 
   1c81d:	0f 1f 00             	nopl   (%rax)

000000000001c820 <std::backtrace_rs::symbolize::gimli::resolve>:
   1c820:	55                   	push   %rbp
   1c821:	48 89 e5             	mov    %rsp,%rbp
   1c824:	41 57                	push   %r15
   1c826:	41 56                	push   %r14
   1c828:	41 55                	push   %r13
   1c82a:	41 54                	push   %r12
   1c82c:	53                   	push   %rbx
   1c82d:	48 83 e4 e0          	and    $0xffffffffffffffe0,%rsp
   1c831:	48 81 ec a0 07 00 00 	sub    $0x7a0,%rsp
   1c838:	48 89 94 24 10 01 00 	mov    %rdx,0x110(%rsp)
   1c83f:	00 
   1c840:	48 89 b4 24 08 01 00 	mov    %rsi,0x108(%rsp)
   1c847:	00 
   1c848:	83 3f 01             	cmpl   $0x1,(%rdi)
   1c84b:	75 06                	jne    1c853 <std::backtrace_rs::symbolize::gimli::resolve+0x33>
   1c84d:	48 8b 47 08          	mov    0x8(%rdi),%rax
   1c851:	eb 0a                	jmp    1c85d <std::backtrace_rs::symbolize::gimli::resolve+0x3d>
   1c853:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   1c857:	ff 15 e3 94 02 00    	callq  *0x294e3(%rip)        # 45d40 <_Unwind_GetIP@GCC_3.0>
   1c85d:	4c 8d 70 ff          	lea    -0x1(%rax),%r14
   1c861:	48 85 c0             	test   %rax,%rax
   1c864:	4c 0f 44 f0          	cmove  %rax,%r14
   1c868:	4c 8b 05 91 99 02 00 	mov    0x29991(%rip),%r8        # 46200 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE>
   1c86f:	4d 85 c0             	test   %r8,%r8
   1c872:	74 15                	je     1c889 <std::backtrace_rs::symbolize::gimli::resolve+0x69>
   1c874:	48 8b 35 95 99 02 00 	mov    0x29995(%rip),%rsi        # 46210 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x10>
   1c87b:	48 85 f6             	test   %rsi,%rsi
   1c87e:	0f 85 c8 01 00 00    	jne    1ca4c <std::backtrace_rs::symbolize::gimli::resolve+0x22c>
   1c884:	e9 af 0a 00 00       	jmpq   1d338 <std::backtrace_rs::symbolize::gimli::resolve+0xb18>
   1c889:	bf 20 06 00 00       	mov    $0x620,%edi
   1c88e:	be 08 00 00 00       	mov    $0x8,%esi
   1c893:	ff 15 ef 92 02 00    	callq  *0x292ef(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   1c899:	48 85 c0             	test   %rax,%rax
   1c89c:	0f 84 2e 1f 00 00    	je     1e7d0 <std::backtrace_rs::symbolize::gimli::resolve+0x1fb0>
   1c8a2:	49 89 c7             	mov    %rax,%r15
   1c8a5:	48 c7 84 24 70 01 00 	movq   $0x8,0x170(%rsp)
   1c8ac:	00 08 00 00 00 
   1c8b1:	0f 57 c0             	xorps  %xmm0,%xmm0
   1c8b4:	0f 11 84 24 78 01 00 	movups %xmm0,0x178(%rsp)
   1c8bb:	00 
   1c8bc:	48 8d 3d bd 78 00 00 	lea    0x78bd(%rip),%rdi        # 24180 <std::backtrace_rs::symbolize::gimli::callback>
   1c8c3:	48 8d b4 24 70 01 00 	lea    0x170(%rsp),%rsi
   1c8ca:	00 
   1c8cb:	ff 15 f7 90 02 00    	callq  *0x290f7(%rip)        # 459c8 <dl_iterate_phdr@GLIBC_2.2.5>
   1c8d1:	0f 10 84 24 70 01 00 	movups 0x170(%rsp),%xmm0
   1c8d8:	00 
   1c8d9:	0f 29 84 24 00 03 00 	movaps %xmm0,0x300(%rsp)
   1c8e0:	00 
   1c8e1:	48 8b 84 24 80 01 00 	mov    0x180(%rsp),%rax
   1c8e8:	00 
   1c8e9:	48 89 84 24 10 03 00 	mov    %rax,0x310(%rsp)
   1c8f0:	00 
   1c8f1:	48 8b 1d 08 99 02 00 	mov    0x29908(%rip),%rbx        # 46200 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE>
   1c8f8:	48 85 db             	test   %rbx,%rbx
   1c8fb:	0f 84 ff 00 00 00    	je     1ca00 <std::backtrace_rs::symbolize::gimli::resolve+0x1e0>
   1c901:	4d 89 f5             	mov    %r14,%r13
   1c904:	48 8b 05 05 99 02 00 	mov    0x29905(%rip),%rax        # 46210 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x10>
   1c90b:	48 85 c0             	test   %rax,%rax
   1c90e:	74 54                	je     1c964 <std::backtrace_rs::symbolize::gimli::resolve+0x144>
   1c910:	4c 6b f0 38          	imul   $0x38,%rax,%r14
   1c914:	49 01 de             	add    %rbx,%r14
   1c917:	4c 8d 25 32 8a fe ff 	lea    -0x175ce(%rip),%r12        # 5350 <__rust_dealloc>
   1c91e:	eb 09                	jmp    1c929 <std::backtrace_rs::symbolize::gimli::resolve+0x109>
   1c920:	48 83 c3 38          	add    $0x38,%rbx
   1c924:	4c 39 f3             	cmp    %r14,%rbx
   1c927:	74 3b                	je     1c964 <std::backtrace_rs::symbolize::gimli::resolve+0x144>
   1c929:	48 8b 3b             	mov    (%rbx),%rdi
   1c92c:	48 85 ff             	test   %rdi,%rdi
   1c92f:	74 11                	je     1c942 <std::backtrace_rs::symbolize::gimli::resolve+0x122>
   1c931:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   1c935:	48 85 f6             	test   %rsi,%rsi
   1c938:	74 08                	je     1c942 <std::backtrace_rs::symbolize::gimli::resolve+0x122>
   1c93a:	ba 01 00 00 00       	mov    $0x1,%edx
   1c93f:	41 ff d4             	callq  *%r12
   1c942:	48 8b 73 20          	mov    0x20(%rbx),%rsi
   1c946:	48 85 f6             	test   %rsi,%rsi
   1c949:	74 d5                	je     1c920 <std::backtrace_rs::symbolize::gimli::resolve+0x100>
   1c94b:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   1c94f:	48 85 ff             	test   %rdi,%rdi
   1c952:	74 cc                	je     1c920 <std::backtrace_rs::symbolize::gimli::resolve+0x100>
   1c954:	48 c1 e6 04          	shl    $0x4,%rsi
   1c958:	74 c6                	je     1c920 <std::backtrace_rs::symbolize::gimli::resolve+0x100>
   1c95a:	ba 08 00 00 00       	mov    $0x8,%edx
   1c95f:	41 ff d4             	callq  *%r12
   1c962:	eb bc                	jmp    1c920 <std::backtrace_rs::symbolize::gimli::resolve+0x100>
   1c964:	48 8b 05 9d 98 02 00 	mov    0x2989d(%rip),%rax        # 46208 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x8>
   1c96b:	48 85 c0             	test   %rax,%rax
   1c96e:	74 20                	je     1c990 <std::backtrace_rs::symbolize::gimli::resolve+0x170>
   1c970:	48 6b f0 38          	imul   $0x38,%rax,%rsi
   1c974:	48 85 f6             	test   %rsi,%rsi
   1c977:	74 17                	je     1c990 <std::backtrace_rs::symbolize::gimli::resolve+0x170>
   1c979:	48 8b 3d 80 98 02 00 	mov    0x29880(%rip),%rdi        # 46200 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE>
   1c980:	48 85 ff             	test   %rdi,%rdi
   1c983:	74 0b                	je     1c990 <std::backtrace_rs::symbolize::gimli::resolve+0x170>
   1c985:	ba 08 00 00 00       	mov    $0x8,%edx
   1c98a:	ff 15 70 92 02 00    	callq  *0x29270(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   1c990:	48 8b 3d 81 98 02 00 	mov    0x29881(%rip),%rdi        # 46218 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x18>
   1c997:	48 69 1d 86 98 02 00 	imul   $0x188,0x29886(%rip),%rbx        # 46228 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x28>
   1c99e:	88 01 00 00 
   1c9a2:	4d 89 ee             	mov    %r13,%r14
   1c9a5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1c9ac:	00 00 00 
   1c9af:	90                   	nop
   1c9b0:	48 85 db             	test   %rbx,%rbx
   1c9b3:	74 1c                	je     1c9d1 <std::backtrace_rs::symbolize::gimli::resolve+0x1b1>
   1c9b5:	4c 8d a7 88 01 00 00 	lea    0x188(%rdi),%r12
   1c9bc:	48 83 c7 08          	add    $0x8,%rdi
   1c9c0:	48 81 c3 78 fe ff ff 	add    $0xfffffffffffffe78,%rbx
   1c9c7:	e8 c4 a3 fe ff       	callq  6d90 <core::ptr::drop_in_place>
   1c9cc:	4c 89 e7             	mov    %r12,%rdi
   1c9cf:	eb df                	jmp    1c9b0 <std::backtrace_rs::symbolize::gimli::resolve+0x190>
   1c9d1:	48 8b 05 48 98 02 00 	mov    0x29848(%rip),%rax        # 46220 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x20>
   1c9d8:	48 85 c0             	test   %rax,%rax
   1c9db:	74 23                	je     1ca00 <std::backtrace_rs::symbolize::gimli::resolve+0x1e0>
   1c9dd:	48 8b 3d 34 98 02 00 	mov    0x29834(%rip),%rdi        # 46218 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x18>
   1c9e4:	48 85 ff             	test   %rdi,%rdi
   1c9e7:	74 17                	je     1ca00 <std::backtrace_rs::symbolize::gimli::resolve+0x1e0>
   1c9e9:	48 69 f0 88 01 00 00 	imul   $0x188,%rax,%rsi
   1c9f0:	48 85 f6             	test   %rsi,%rsi
   1c9f3:	74 0b                	je     1ca00 <std::backtrace_rs::symbolize::gimli::resolve+0x1e0>
   1c9f5:	ba 08 00 00 00       	mov    $0x8,%edx
   1c9fa:	ff 15 00 92 02 00    	callq  *0x29200(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   1ca00:	48 8b 84 24 10 03 00 	mov    0x310(%rsp),%rax
   1ca07:	00 
   1ca08:	48 89 05 01 98 02 00 	mov    %rax,0x29801(%rip)        # 46210 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x10>
   1ca0f:	0f 28 84 24 00 03 00 	movaps 0x300(%rsp),%xmm0
   1ca16:	00 
   1ca17:	0f 11 05 e2 97 02 00 	movups %xmm0,0x297e2(%rip)        # 46200 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE>
   1ca1e:	4c 89 3d f3 97 02 00 	mov    %r15,0x297f3(%rip)        # 46218 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x18>
   1ca25:	66 0f 6f 05 93 98 01 	movdqa 0x19893(%rip),%xmm0        # 362c0 <_fini+0x123c>
   1ca2c:	00 
   1ca2d:	f3 0f 7f 05 eb 97 02 	movdqu %xmm0,0x297eb(%rip)        # 46220 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x20>
   1ca34:	00 
   1ca35:	4c 8b 05 c4 97 02 00 	mov    0x297c4(%rip),%r8        # 46200 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE>
   1ca3c:	48 8b 35 cd 97 02 00 	mov    0x297cd(%rip),%rsi        # 46210 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x10>
   1ca43:	48 85 f6             	test   %rsi,%rsi
   1ca46:	0f 84 ec 08 00 00    	je     1d338 <std::backtrace_rs::symbolize::gimli::resolve+0xb18>
   1ca4c:	4c 8d 0c f5 f8 ff ff 	lea    -0x8(,%rsi,8),%r9
   1ca53:	ff 
   1ca54:	49 c1 e9 03          	shr    $0x3,%r9
   1ca58:	45 31 e4             	xor    %r12d,%r12d
   1ca5b:	4c 89 c2             	mov    %r8,%rdx
   1ca5e:	48 8b 42 18          	mov    0x18(%rdx),%rax
   1ca62:	48 8b 7a 28          	mov    0x28(%rdx),%rdi
   1ca66:	4c 8b 6a 30          	mov    0x30(%rdx),%r13
   1ca6a:	48 83 c2 38          	add    $0x38,%rdx
   1ca6e:	48 c1 e7 04          	shl    $0x4,%rdi
   1ca72:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1ca79:	00 00 00 
   1ca7c:	0f 1f 40 00          	nopl   0x0(%rax)
   1ca80:	48 85 ff             	test   %rdi,%rdi
   1ca83:	74 2b                	je     1cab0 <std::backtrace_rs::symbolize::gimli::resolve+0x290>
   1ca85:	48 89 c3             	mov    %rax,%rbx
   1ca88:	48 83 c0 10          	add    $0x10,%rax
   1ca8c:	48 8b 0b             	mov    (%rbx),%rcx
   1ca8f:	4c 01 e9             	add    %r13,%rcx
   1ca92:	48 83 c7 f0          	add    $0xfffffffffffffff0,%rdi
   1ca96:	4c 39 f1             	cmp    %r14,%rcx
   1ca99:	77 e5                	ja     1ca80 <std::backtrace_rs::symbolize::gimli::resolve+0x260>
   1ca9b:	48 03 4b 08          	add    0x8(%rbx),%rcx
   1ca9f:	4c 39 f1             	cmp    %r14,%rcx
   1caa2:	76 dc                	jbe    1ca80 <std::backtrace_rs::symbolize::gimli::resolve+0x260>
   1caa4:	eb 1c                	jmp    1cac2 <std::backtrace_rs::symbolize::gimli::resolve+0x2a2>
   1caa6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1caad:	00 00 00 
   1cab0:	49 8d 44 24 01       	lea    0x1(%r12),%rax
   1cab5:	4d 39 cc             	cmp    %r9,%r12
   1cab8:	49 89 c4             	mov    %rax,%r12
   1cabb:	75 a1                	jne    1ca5e <std::backtrace_rs::symbolize::gimli::resolve+0x23e>
   1cabd:	e9 76 08 00 00       	jmpq   1d338 <std::backtrace_rs::symbolize::gimli::resolve+0xb18>
   1cac2:	4c 89 74 24 30       	mov    %r14,0x30(%rsp)
   1cac7:	4c 8b 35 5a 97 02 00 	mov    0x2975a(%rip),%r14        # 46228 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x28>
   1cace:	4d 85 f6             	test   %r14,%r14
   1cad1:	74 37                	je     1cb0a <std::backtrace_rs::symbolize::gimli::resolve+0x2ea>
   1cad3:	48 8b 1d 3e 97 02 00 	mov    0x2973e(%rip),%rbx        # 46218 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x18>
   1cada:	4a 8d 0c f5 f8 ff ff 	lea    -0x8(,%r14,8),%rcx
   1cae1:	ff 
   1cae2:	48 c1 e9 03          	shr    $0x3,%rcx
   1cae6:	48 83 c1 01          	add    $0x1,%rcx
   1caea:	45 31 ff             	xor    %r15d,%r15d
   1caed:	31 c0                	xor    %eax,%eax
   1caef:	90                   	nop
   1caf0:	4e 39 24 3b          	cmp    %r12,(%rbx,%r15,1)
   1caf4:	0f 84 15 01 00 00    	je     1cc0f <std::backtrace_rs::symbolize::gimli::resolve+0x3ef>
   1cafa:	48 83 c0 01          	add    $0x1,%rax
   1cafe:	49 81 c7 88 01 00 00 	add    $0x188,%r15
   1cb05:	48 39 c1             	cmp    %rax,%rcx
   1cb08:	75 e6                	jne    1caf0 <std::backtrace_rs::symbolize::gimli::resolve+0x2d0>
   1cb0a:	4c 39 e6             	cmp    %r12,%rsi
   1cb0d:	0f 86 ab 1c 00 00    	jbe    1e7be <std::backtrace_rs::symbolize::gimli::resolve+0x1f9e>
   1cb13:	49 6b c4 38          	imul   $0x38,%r12,%rax
   1cb17:	49 8b 34 00          	mov    (%r8,%rax,1),%rsi
   1cb1b:	49 8b 54 00 10       	mov    0x10(%r8,%rax,1),%rdx
   1cb20:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
   1cb27:	00 
   1cb28:	e8 73 1f 00 00       	callq  1eaa0 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new>
   1cb2d:	48 8b 9c 24 70 01 00 	mov    0x170(%rsp),%rbx
   1cb34:	00 
   1cb35:	48 8d b4 24 78 01 00 	lea    0x178(%rsp),%rsi
   1cb3c:	00 
   1cb3d:	48 8d bc 24 98 04 00 	lea    0x498(%rsp),%rdi
   1cb44:	00 
   1cb45:	ba 78 01 00 00       	mov    $0x178,%edx
   1cb4a:	ff 15 b0 91 02 00    	callq  *0x291b0(%rip)        # 45d00 <memcpy@GLIBC_2.14>
   1cb50:	48 85 db             	test   %rbx,%rbx
   1cb53:	0f 84 df 07 00 00    	je     1d338 <std::backtrace_rs::symbolize::gimli::resolve+0xb18>
   1cb59:	4c 8d bc 24 10 06 00 	lea    0x610(%rsp),%r15
   1cb60:	00 
   1cb61:	48 8d b4 24 98 04 00 	lea    0x498(%rsp),%rsi
   1cb68:	00 
   1cb69:	4c 8b 35 90 91 02 00 	mov    0x29190(%rip),%r14        # 45d00 <memcpy@GLIBC_2.14>
   1cb70:	ba 78 01 00 00       	mov    $0x178,%edx
   1cb75:	4c 89 ff             	mov    %r15,%rdi
   1cb78:	41 ff d6             	callq  *%r14
   1cb7b:	48 89 9c 24 00 03 00 	mov    %rbx,0x300(%rsp)
   1cb82:	00 
   1cb83:	48 8d bc 24 08 03 00 	lea    0x308(%rsp),%rdi
   1cb8a:	00 
   1cb8b:	ba 78 01 00 00       	mov    $0x178,%edx
   1cb90:	4c 89 fe             	mov    %r15,%rsi
   1cb93:	41 ff d6             	callq  *%r14
   1cb96:	48 83 3d 8a 96 02 00 	cmpq   $0x4,0x2968a(%rip)        # 46228 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x28>
   1cb9d:	04 
   1cb9e:	75 42                	jne    1cbe2 <std::backtrace_rs::symbolize::gimli::resolve+0x3c2>
   1cba0:	48 c7 05 7d 96 02 00 	movq   $0x3,0x2967d(%rip)        # 46228 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x28>
   1cba7:	03 00 00 00 
   1cbab:	be 98 04 00 00       	mov    $0x498,%esi
   1cbb0:	48 03 35 61 96 02 00 	add    0x29661(%rip),%rsi        # 46218 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x18>
   1cbb7:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
   1cbbe:	00 
   1cbbf:	ba 88 01 00 00       	mov    $0x188,%edx
   1cbc4:	ff 15 36 91 02 00    	callq  *0x29136(%rip)        # 45d00 <memcpy@GLIBC_2.14>
   1cbca:	48 83 bc 24 78 01 00 	cmpq   $0x0,0x178(%rsp)
   1cbd1:	00 00 
   1cbd3:	74 0d                	je     1cbe2 <std::backtrace_rs::symbolize::gimli::resolve+0x3c2>
   1cbd5:	48 8d bc 24 78 01 00 	lea    0x178(%rsp),%rdi
   1cbdc:	00 
   1cbdd:	e8 ae a1 fe ff       	callq  6d90 <core::ptr::drop_in_place>
   1cbe2:	4c 89 a4 24 70 01 00 	mov    %r12,0x170(%rsp)
   1cbe9:	00 
   1cbea:	48 8d bc 24 78 01 00 	lea    0x178(%rsp),%rdi
   1cbf1:	00 
   1cbf2:	48 8d b4 24 00 03 00 	lea    0x300(%rsp),%rsi
   1cbf9:	00 
   1cbfa:	ba 80 01 00 00       	mov    $0x180,%edx
   1cbff:	ff 15 fb 90 02 00    	callq  *0x290fb(%rip)        # 45d00 <memcpy@GLIBC_2.14>
   1cc05:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
   1cc0c:	00 
   1cc0d:	eb 70                	jmp    1cc7f <std::backtrace_rs::symbolize::gimli::resolve+0x45f>
   1cc0f:	4d 85 ff             	test   %r15,%r15
   1cc12:	74 70                	je     1cc84 <std::backtrace_rs::symbolize::gimli::resolve+0x464>
   1cc14:	4e 8d 24 3b          	lea    (%rbx,%r15,1),%r12
   1cc18:	48 8d bc 24 00 03 00 	lea    0x300(%rsp),%rdi
   1cc1f:	00 
   1cc20:	ba 88 01 00 00       	mov    $0x188,%edx
   1cc25:	4c 89 e6             	mov    %r12,%rsi
   1cc28:	ff 15 d2 90 02 00    	callq  *0x290d2(%rip)        # 45d00 <memcpy@GLIBC_2.14>
   1cc2e:	49 69 d6 88 01 00 00 	imul   $0x188,%r14,%rdx
   1cc35:	4c 29 fa             	sub    %r15,%rdx
   1cc38:	48 81 c2 78 fe ff ff 	add    $0xfffffffffffffe78,%rdx
   1cc3f:	4a 8d 34 3b          	lea    (%rbx,%r15,1),%rsi
   1cc43:	48 81 c6 88 01 00 00 	add    $0x188,%rsi
   1cc4a:	4c 89 e7             	mov    %r12,%rdi
   1cc4d:	ff 15 1d 92 02 00    	callq  *0x2921d(%rip)        # 45e70 <memmove@GLIBC_2.2.5>
   1cc53:	49 83 c6 ff          	add    $0xffffffffffffffff,%r14
   1cc57:	4c 89 35 ca 95 02 00 	mov    %r14,0x295ca(%rip)        # 46228 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x28>
   1cc5e:	4c 8d a4 24 70 01 00 	lea    0x170(%rsp),%r12
   1cc65:	00 
   1cc66:	ba 88 01 00 00       	mov    $0x188,%edx
   1cc6b:	4c 89 e7             	mov    %r12,%rdi
   1cc6e:	48 8d b4 24 00 03 00 	lea    0x300(%rsp),%rsi
   1cc75:	00 
   1cc76:	ff 15 84 90 02 00    	callq  *0x29084(%rip)        # 45d00 <memcpy@GLIBC_2.14>
   1cc7c:	4c 89 e7             	mov    %r12,%rdi
   1cc7f:	e8 3c c8 fe ff       	callq  94c0 <alloc::vec::Vec<T>::insert>
   1cc84:	48 83 3d 9c 95 02 00 	cmpq   $0x0,0x2959c(%rip)        # 46228 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x28>
   1cc8b:	00 
   1cc8c:	0f 84 19 1b 00 00    	je     1e7ab <std::backtrace_rs::symbolize::gimli::resolve+0x1f8b>
   1cc92:	4c 8b 74 24 30       	mov    0x30(%rsp),%r14
   1cc97:	4d 29 ee             	sub    %r13,%r14
   1cc9a:	4c 8b 05 77 95 02 00 	mov    0x29577(%rip),%r8        # 46218 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x18>
   1cca1:	49 8b 70 18          	mov    0x18(%r8),%rsi
   1cca5:	41 b9 03 00 00 00    	mov    $0x3,%r9d
   1ccab:	48 85 f6             	test   %rsi,%rsi
   1ccae:	4c 89 84 24 a0 00 00 	mov    %r8,0xa0(%rsp)
   1ccb5:	00 
   1ccb6:	4c 89 74 24 30       	mov    %r14,0x30(%rsp)
   1ccbb:	0f 84 41 01 00 00    	je     1ce02 <std::backtrace_rs::symbolize::gimli::resolve+0x5e2>
   1ccc1:	4d 8b 68 08          	mov    0x8(%r8),%r13
   1ccc5:	45 31 ff             	xor    %r15d,%r15d
   1ccc8:	48 83 fe 01          	cmp    $0x1,%rsi
   1cccc:	0f 85 ba 05 00 00    	jne    1d28c <std::backtrace_rs::symbolize::gimli::resolve+0xa6c>
   1ccd2:	4c 89 f8             	mov    %r15,%rax
   1ccd5:	48 c1 e0 05          	shl    $0x5,%rax
   1ccd9:	4d 3b 74 05 10       	cmp    0x10(%r13,%rax,1),%r14
   1ccde:	49 83 df ff          	sbb    $0xffffffffffffffff,%r15
   1cce2:	4c 39 fe             	cmp    %r15,%rsi
   1cce5:	0f 82 f7 1a 00 00    	jb     1e7e2 <std::backtrace_rs::symbolize::gimli::resolve+0x1fc2>
   1cceb:	4d 85 ff             	test   %r15,%r15
   1ccee:	0f 84 0e 01 00 00    	je     1ce02 <std::backtrace_rs::symbolize::gimli::resolve+0x5e2>
   1ccf4:	49 c1 e7 05          	shl    $0x5,%r15
   1ccf8:	4d 01 ef             	add    %r13,%r15
   1ccfb:	49 8d 50 38          	lea    0x38(%r8),%rdx
   1ccff:	48 89 54 24 50       	mov    %rdx,0x50(%rsp)
   1cd04:	e9 1d 00 00 00       	jmpq   1cd26 <std::backtrace_rs::symbolize::gimli::resolve+0x506>
   1cd09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1cd10:	4c 8b 84 24 a0 00 00 	mov    0xa0(%rsp),%r8
   1cd17:	00 
   1cd18:	48 8b 54 24 50       	mov    0x50(%rsp),%rdx
   1cd1d:	4d 39 fd             	cmp    %r15,%r13
   1cd20:	0f 84 de 00 00 00    	je     1ce04 <std::backtrace_rs::symbolize::gimli::resolve+0x5e4>
   1cd26:	4d 39 77 e8          	cmp    %r14,-0x18(%r15)
   1cd2a:	0f 82 d4 00 00 00    	jb     1ce04 <std::backtrace_rs::symbolize::gimli::resolve+0x5e4>
   1cd30:	4c 89 f8             	mov    %r15,%rax
   1cd33:	49 83 c7 e0          	add    $0xffffffffffffffe0,%r15
   1cd37:	4c 39 70 f8          	cmp    %r14,-0x8(%rax)
   1cd3b:	72 e0                	jb     1cd1d <std::backtrace_rs::symbolize::gimli::resolve+0x4fd>
   1cd3d:	49 8b 3f             	mov    (%r15),%rdi
   1cd40:	49 8b 70 30          	mov    0x30(%r8),%rsi
   1cd44:	48 39 fe             	cmp    %rdi,%rsi
   1cd47:	0f 86 4f 1a 00 00    	jbe    1e79c <std::backtrace_rs::symbolize::gimli::resolve+0x1f7c>
   1cd4d:	4d 8b 60 20          	mov    0x20(%r8),%r12
   1cd51:	48 89 f8             	mov    %rdi,%rax
   1cd54:	48 c1 e0 09          	shl    $0x9,%rax
   1cd58:	48 8d 04 f8          	lea    (%rax,%rdi,8),%rax
   1cd5c:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1cd61:	49 8d 1c 04          	lea    (%r12,%rax,1),%rbx
   1cd65:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
   1cd6c:	00 
   1cd6d:	48 89 de             	mov    %rbx,%rsi
   1cd70:	e8 fb 38 ff ff       	callq  10670 <addr2line::ResUnit<R>::parse_functions>
   1cd75:	83 bc 24 70 01 00 00 	cmpl   $0x1,0x170(%rsp)
   1cd7c:	01 
   1cd7d:	74 91                	je     1cd10 <std::backtrace_rs::symbolize::gimli::resolve+0x4f0>
   1cd7f:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   1cd84:	48 89 9c 24 88 00 00 	mov    %rbx,0x88(%rsp)
   1cd8b:	00 
   1cd8c:	48 8b 84 24 78 01 00 	mov    0x178(%rsp),%rax
   1cd93:	00 
   1cd94:	48 8b 48 18          	mov    0x18(%rax),%rcx
   1cd98:	48 85 c9             	test   %rcx,%rcx
   1cd9b:	4c 8b 84 24 a0 00 00 	mov    0xa0(%rsp),%r8
   1cda2:	00 
   1cda3:	48 8b 54 24 50       	mov    0x50(%rsp),%rdx
   1cda8:	0f 84 6f ff ff ff    	je     1cd1d <std::backtrace_rs::symbolize::gimli::resolve+0x4fd>
   1cdae:	48 8b 40 10          	mov    0x10(%rax),%rax
   1cdb2:	45 31 e4             	xor    %r12d,%r12d
   1cdb5:	48 83 f9 01          	cmp    $0x1,%rcx
   1cdb9:	75 2e                	jne    1cde9 <std::backtrace_rs::symbolize::gimli::resolve+0x5c9>
   1cdbb:	4b 8d 1c 64          	lea    (%r12,%r12,2),%rbx
   1cdbf:	4c 39 34 d8          	cmp    %r14,(%rax,%rbx,8)
   1cdc3:	0f 87 54 ff ff ff    	ja     1cd1d <std::backtrace_rs::symbolize::gimli::resolve+0x4fd>
   1cdc9:	4c 39 74 d8 08       	cmp    %r14,0x8(%rax,%rbx,8)
   1cdce:	0f 86 49 ff ff ff    	jbe    1cd1d <std::backtrace_rs::symbolize::gimli::resolve+0x4fd>
   1cdd4:	e9 6e 05 00 00       	jmpq   1d347 <std::backtrace_rs::symbolize::gimli::resolve+0xb27>
   1cdd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1cde0:	48 29 d9             	sub    %rbx,%rcx
   1cde3:	48 83 f9 01          	cmp    $0x1,%rcx
   1cde7:	76 d2                	jbe    1cdbb <std::backtrace_rs::symbolize::gimli::resolve+0x59b>
   1cde9:	48 89 cb             	mov    %rcx,%rbx
   1cdec:	48 d1 eb             	shr    %rbx
   1cdef:	4a 8d 34 23          	lea    (%rbx,%r12,1),%rsi
   1cdf3:	48 8d 3c 76          	lea    (%rsi,%rsi,2),%rdi
   1cdf7:	4c 39 34 f8          	cmp    %r14,(%rax,%rdi,8)
   1cdfb:	77 e3                	ja     1cde0 <std::backtrace_rs::symbolize::gimli::resolve+0x5c0>
   1cdfd:	49 89 f4             	mov    %rsi,%r12
   1ce00:	eb de                	jmp    1cde0 <std::backtrace_rs::symbolize::gimli::resolve+0x5c0>
   1ce02:	eb 06                	jmp    1ce0a <std::backtrace_rs::symbolize::gimli::resolve+0x5ea>
   1ce04:	41 b9 03 00 00 00    	mov    $0x3,%r9d
   1ce0a:	4c 89 bc 24 70 01 00 	mov    %r15,0x170(%rsp)
   1ce11:	00 
   1ce12:	4c 89 94 24 78 01 00 	mov    %r10,0x178(%rsp)
   1ce19:	00 
   1ce1a:	4c 89 b4 24 80 01 00 	mov    %r14,0x180(%rsp)
   1ce21:	00 
   1ce22:	48 89 bc 24 88 01 00 	mov    %rdi,0x188(%rsp)
   1ce29:	00 
   1ce2a:	48 89 b4 24 90 01 00 	mov    %rsi,0x190(%rsp)
   1ce31:	00 
   1ce32:	48 89 bc 24 98 01 00 	mov    %rdi,0x198(%rsp)
   1ce39:	00 
   1ce3a:	48 89 84 24 a0 01 00 	mov    %rax,0x1a0(%rsp)
   1ce41:	00 
   1ce42:	48 89 9c 24 a8 01 00 	mov    %rbx,0x1a8(%rsp)
   1ce49:	00 
   1ce4a:	48 89 94 24 b0 01 00 	mov    %rdx,0x1b0(%rsp)
   1ce51:	00 
   1ce52:	44 89 8c 24 b8 01 00 	mov    %r9d,0x1b8(%rsp)
   1ce59:	00 
   1ce5a:	89 8c 24 bc 01 00 00 	mov    %ecx,0x1bc(%rsp)
   1ce61:	44 89 9c 24 c0 01 00 	mov    %r11d,0x1c0(%rsp)
   1ce68:	00 
   1ce69:	44 89 84 24 c4 01 00 	mov    %r8d,0x1c4(%rsp)
   1ce70:	00 
   1ce71:	41 83 f9 03          	cmp    $0x3,%r9d
   1ce75:	0f 85 d5 00 00 00    	jne    1cf50 <std::backtrace_rs::symbolize::gimli::resolve+0x730>
   1ce7b:	4c 8b 74 24 30       	mov    0x30(%rsp),%r14
   1ce80:	48 8b 8c 24 a0 00 00 	mov    0xa0(%rsp),%rcx
   1ce87:	00 
   1ce88:	48 8b 81 48 01 00 00 	mov    0x148(%rcx),%rax
   1ce8f:	4c 8b 81 58 01 00 00 	mov    0x158(%rcx),%r8
   1ce96:	4c 89 c1             	mov    %r8,%rcx
   1ce99:	4d 85 c0             	test   %r8,%r8
   1ce9c:	74 1a                	je     1ceb8 <std::backtrace_rs::symbolize::gimli::resolve+0x698>
   1ce9e:	31 c9                	xor    %ecx,%ecx
   1cea0:	49 83 f8 01          	cmp    $0x1,%r8
   1cea4:	0f 85 20 04 00 00    	jne    1d2ca <std::backtrace_rs::symbolize::gimli::resolve+0xaaa>
   1ceaa:	48 8d 14 49          	lea    (%rcx,%rcx,2),%rdx
   1ceae:	4c 39 34 d0          	cmp    %r14,(%rax,%rdx,8)
   1ceb2:	74 0e                	je     1cec2 <std::backtrace_rs::symbolize::gimli::resolve+0x6a2>
   1ceb4:	48 83 d1 00          	adc    $0x0,%rcx
   1ceb8:	48 83 e9 01          	sub    $0x1,%rcx
   1cebc:	0f 82 76 04 00 00    	jb     1d338 <std::backtrace_rs::symbolize::gimli::resolve+0xb18>
   1cec2:	49 39 c8             	cmp    %rcx,%r8
   1cec5:	0f 86 6d 04 00 00    	jbe    1d338 <std::backtrace_rs::symbolize::gimli::resolve+0xb18>
   1cecb:	48 8d 0c 49          	lea    (%rcx,%rcx,2),%rcx
   1cecf:	48 8b 14 c8          	mov    (%rax,%rcx,8),%rdx
   1ced3:	4c 39 f2             	cmp    %r14,%rdx
   1ced6:	0f 87 5c 04 00 00    	ja     1d338 <std::backtrace_rs::symbolize::gimli::resolve+0xb18>
   1cedc:	48 03 54 c8 08       	add    0x8(%rax,%rcx,8),%rdx
   1cee1:	4c 39 f2             	cmp    %r14,%rdx
   1cee4:	0f 82 4e 04 00 00    	jb     1d338 <std::backtrace_rs::symbolize::gimli::resolve+0xb18>
   1ceea:	48 8b bc 24 a0 00 00 	mov    0xa0(%rsp),%rdi
   1cef1:	00 
   1cef2:	48 81 c7 38 01 00 00 	add    $0x138,%rdi
   1cef9:	8b 74 c8 10          	mov    0x10(%rax,%rcx,8),%esi
   1cefd:	ff 15 a5 90 02 00    	callq  *0x290a5(%rip)        # 45fa8 <_GLOBAL_OFFSET_TABLE_+0x618>
   1cf03:	48 85 c0             	test   %rax,%rax
   1cf06:	0f 84 2c 04 00 00    	je     1d338 <std::backtrace_rs::symbolize::gimli::resolve+0xb18>
   1cf0c:	48 c7 84 24 70 01 00 	movq   $0x1,0x170(%rsp)
   1cf13:	00 01 00 00 00 
   1cf18:	4c 89 b4 24 78 01 00 	mov    %r14,0x178(%rsp)
   1cf1f:	00 
   1cf20:	48 89 84 24 80 01 00 	mov    %rax,0x180(%rsp)
   1cf27:	00 
   1cf28:	48 89 94 24 88 01 00 	mov    %rdx,0x188(%rsp)
   1cf2f:	00 
   1cf30:	48 8d b4 24 70 01 00 	lea    0x170(%rsp),%rsi
   1cf37:	00 
   1cf38:	48 8b bc 24 08 01 00 	mov    0x108(%rsp),%rdi
   1cf3f:	00 
   1cf40:	48 8b 84 24 10 01 00 	mov    0x110(%rsp),%rax
   1cf47:	00 
   1cf48:	ff 50 18             	callq  *0x18(%rax)
   1cf4b:	e9 e8 03 00 00       	jmpq   1d338 <std::backtrace_rs::symbolize::gimli::resolve+0xb18>
   1cf50:	31 f6                	xor    %esi,%esi
   1cf52:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1cf59:	00 00 00 
   1cf5c:	0f 1f 40 00          	nopl   0x0(%rax)
   1cf60:	c7 84 24 10 03 00 00 	movl   $0x2,0x310(%rsp)
   1cf67:	02 00 00 00 
   1cf6b:	0f 10 a4 24 a8 01 00 	movups 0x1a8(%rsp),%xmm4
   1cf72:	00 
   1cf73:	0f 10 ac 24 b8 01 00 	movups 0x1b8(%rsp),%xmm5
   1cf7a:	00 
   1cf7b:	66 0f 6f 84 24 10 03 	movdqa 0x310(%rsp),%xmm0
   1cf82:	00 00 
   1cf84:	0f 28 8c 24 00 03 00 	movaps 0x300(%rsp),%xmm1
   1cf8b:	00 
   1cf8c:	0f 11 8c 24 a8 01 00 	movups %xmm1,0x1a8(%rsp)
   1cf93:	00 
   1cf94:	f3 0f 7f 84 24 b8 01 	movdqu %xmm0,0x1b8(%rsp)
   1cf9b:	00 00 
   1cf9d:	66 41 0f 7e c6       	movd   %xmm0,%r14d
   1cfa2:	48 39 f8             	cmp    %rdi,%rax
   1cfa5:	0f 84 e5 00 00 00    	je     1d090 <std::backtrace_rs::symbolize::gimli::resolve+0x870>
   1cfab:	48 8d 48 f8          	lea    -0x8(%rax),%rcx
   1cfaf:	48 89 8c 24 a0 01 00 	mov    %rcx,0x1a0(%rsp)
   1cfb6:	00 
   1cfb7:	48 8b 58 f8          	mov    -0x8(%rax),%rbx
   1cfbb:	48 85 db             	test   %rbx,%rbx
   1cfbe:	0f 84 cc 00 00 00    	je     1d090 <std::backtrace_rs::symbolize::gimli::resolve+0x870>
   1cfc4:	44 8b 7b 20          	mov    0x20(%rbx),%r15d
   1cfc8:	44 8b 63 24          	mov    0x24(%rbx),%r12d
   1cfcc:	45 31 ed             	xor    %r13d,%r13d
   1cfcf:	45 85 ff             	test   %r15d,%r15d
   1cfd2:	41 0f 95 c2          	setne  %r10b
   1cfd6:	31 c0                	xor    %eax,%eax
   1cfd8:	45 85 e4             	test   %r12d,%r12d
   1cfdb:	0f 95 c2             	setne  %dl
   1cfde:	48 83 7b 18 00       	cmpq   $0x0,0x18(%rbx)
   1cfe3:	0f 84 26 02 00 00    	je     1d20f <std::backtrace_rs::symbolize::gimli::resolve+0x9ef>
   1cfe9:	88 54 24 10          	mov    %dl,0x10(%rsp)
   1cfed:	44 88 94 24 88 00 00 	mov    %r10b,0x88(%rsp)
   1cff4:	00 
   1cff5:	48 89 b4 24 98 00 00 	mov    %rsi,0x98(%rsp)
   1cffc:	00 
   1cffd:	0f 29 6c 24 20       	movaps %xmm5,0x20(%rsp)
   1d002:	0f 29 64 24 50       	movaps %xmm4,0x50(%rsp)
   1d007:	48 8b b4 24 70 01 00 	mov    0x170(%rsp),%rsi
   1d00e:	00 
   1d00f:	48 8b 94 24 78 01 00 	mov    0x178(%rsp),%rdx
   1d016:	00 
   1d017:	48 8d bc 24 00 03 00 	lea    0x300(%rsp),%rdi
   1d01e:	00 
   1d01f:	e8 1c 00 ff ff       	callq  d040 <addr2line::ResUnit<R>::parse_lines>
   1d024:	48 83 bc 24 00 03 00 	cmpq   $0x1,0x300(%rsp)
   1d02b:	00 01 
   1d02d:	0f 84 c3 02 00 00    	je     1d2f6 <std::backtrace_rs::symbolize::gimli::resolve+0xad6>
   1d033:	48 8b 84 24 08 03 00 	mov    0x308(%rsp),%rax
   1d03a:	00 
   1d03b:	48 85 c0             	test   %rax,%rax
   1d03e:	0f 84 d5 01 00 00    	je     1d219 <std::backtrace_rs::symbolize::gimli::resolve+0x9f9>
   1d044:	4c 8b 4b 18          	mov    0x18(%rbx),%r9
   1d048:	4c 39 48 08          	cmp    %r9,0x8(%rax)
   1d04c:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   1d051:	0f 28 64 24 50       	movaps 0x50(%rsp),%xmm4
   1d056:	0f 28 6c 24 20       	movaps 0x20(%rsp),%xmm5
   1d05b:	44 0f b6 94 24 88 00 	movzbl 0x88(%rsp),%r10d
   1d062:	00 00 
   1d064:	0f b6 54 24 10       	movzbl 0x10(%rsp),%edx
   1d069:	0f 86 ce 01 00 00    	jbe    1d23d <std::backtrace_rs::symbolize::gimli::resolve+0xa1d>
   1d06f:	4c 8b 00             	mov    (%rax),%r8
   1d072:	4b 8d 04 49          	lea    (%r9,%r9,2),%rax
   1d076:	4d 8b 0c c0          	mov    (%r8,%rax,8),%r9
   1d07a:	4d 8b 44 c0 10       	mov    0x10(%r8,%rax,8),%r8
   1d07f:	e9 bc 01 00 00       	jmpq   1d240 <std::backtrace_rs::symbolize::gimli::resolve+0xa20>
   1d084:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1d08b:	00 00 00 
   1d08e:	66 90                	xchg   %ax,%ax
   1d090:	48 8b 84 24 80 01 00 	mov    0x180(%rsp),%rax
   1d097:	00 
   1d098:	4c 8b 78 08          	mov    0x8(%rax),%r15
   1d09c:	4c 8b 60 10          	mov    0x10(%rax),%r12
   1d0a0:	4d 85 ff             	test   %r15,%r15
   1d0a3:	74 1b                	je     1d0c0 <std::backtrace_rs::symbolize::gimli::resolve+0x8a0>
   1d0a5:	48 8b 84 24 70 01 00 	mov    0x170(%rsp),%rax
   1d0ac:	00 
   1d0ad:	0f b7 98 00 02 00 00 	movzwl 0x200(%rax),%ebx
   1d0b4:	41 83 fe 03          	cmp    $0x3,%r14d
   1d0b8:	75 10                	jne    1d0ca <std::backtrace_rs::symbolize::gimli::resolve+0x8aa>
   1d0ba:	e9 51 00 00 00       	jmpq   1d110 <std::backtrace_rs::symbolize::gimli::resolve+0x8f0>
   1d0bf:	90                   	nop
   1d0c0:	66 bb 02 00          	mov    $0x2,%bx
   1d0c4:	41 83 fe 03          	cmp    $0x3,%r14d
   1d0c8:	74 46                	je     1d110 <std::backtrace_rs::symbolize::gimli::resolve+0x8f0>
   1d0ca:	48 8b b4 24 90 01 00 	mov    0x190(%rsp),%rsi
   1d0d1:	00 
   1d0d2:	48 85 f6             	test   %rsi,%rsi
   1d0d5:	74 39                	je     1d110 <std::backtrace_rs::symbolize::gimli::resolve+0x8f0>
   1d0d7:	48 c1 e6 03          	shl    $0x3,%rsi
   1d0db:	48 85 f6             	test   %rsi,%rsi
   1d0de:	74 30                	je     1d110 <std::backtrace_rs::symbolize::gimli::resolve+0x8f0>
   1d0e0:	48 8b bc 24 88 01 00 	mov    0x188(%rsp),%rdi
   1d0e7:	00 
   1d0e8:	ba 08 00 00 00       	mov    $0x8,%edx
   1d0ed:	0f 29 64 24 50       	movaps %xmm4,0x50(%rsp)
   1d0f2:	0f 29 6c 24 20       	movaps %xmm5,0x20(%rsp)
   1d0f7:	ff 15 03 8b 02 00    	callq  *0x28b03(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   1d0fd:	0f 28 6c 24 20       	movaps 0x20(%rsp),%xmm5
   1d102:	0f 28 64 24 50       	movaps 0x50(%rsp),%xmm4
   1d107:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1d10e:	00 00 
   1d110:	48 8b 84 24 40 03 00 	mov    0x340(%rsp),%rax
   1d117:	00 
   1d118:	48 89 84 24 b0 01 00 	mov    %rax,0x1b0(%rsp)
   1d11f:	00 
   1d120:	f3 0f 6f 84 24 00 03 	movdqu 0x300(%rsp),%xmm0
   1d127:	00 00 
   1d129:	0f 10 8c 24 10 03 00 	movups 0x310(%rsp),%xmm1
   1d130:	00 
   1d131:	0f 10 94 24 20 03 00 	movups 0x320(%rsp),%xmm2
   1d138:	00 
   1d139:	0f 10 9c 24 30 03 00 	movups 0x330(%rsp),%xmm3
   1d140:	00 
   1d141:	0f 29 9c 24 a0 01 00 	movaps %xmm3,0x1a0(%rsp)
   1d148:	00 
   1d149:	0f 29 94 24 90 01 00 	movaps %xmm2,0x190(%rsp)
   1d150:	00 
   1d151:	0f 29 8c 24 80 01 00 	movaps %xmm1,0x180(%rsp)
   1d158:	00 
   1d159:	66 0f 7f 84 24 70 01 	movdqa %xmm0,0x170(%rsp)
   1d160:	00 00 
   1d162:	c7 84 24 b8 01 00 00 	movl   $0x3,0x1b8(%rsp)
   1d169:	03 00 00 00 
   1d16d:	8b 84 24 a0 04 00 00 	mov    0x4a0(%rsp),%eax
   1d174:	48 8d 8c 24 bc 01 00 	lea    0x1bc(%rsp),%rcx
   1d17b:	00 
   1d17c:	89 41 08             	mov    %eax,0x8(%rcx)
   1d17f:	48 8b 84 24 98 04 00 	mov    0x498(%rsp),%rax
   1d186:	00 
   1d187:	48 89 01             	mov    %rax,(%rcx)
   1d18a:	41 bd 03 00 00 00    	mov    $0x3,%r13d
   1d190:	66 83 fb 02          	cmp    $0x2,%bx
   1d194:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   1d199:	75 03                	jne    1d19e <std::backtrace_rs::symbolize::gimli::resolve+0x97e>
   1d19b:	45 31 ff             	xor    %r15d,%r15d
   1d19e:	48 c7 84 24 00 03 00 	movq   $0x0,0x300(%rsp)
   1d1a5:	00 00 00 00 00 
   1d1aa:	48 89 b4 24 08 03 00 	mov    %rsi,0x308(%rsp)
   1d1b1:	00 
   1d1b2:	0f 11 a4 24 10 03 00 	movups %xmm4,0x310(%rsp)
   1d1b9:	00 
   1d1ba:	0f 11 ac 24 20 03 00 	movups %xmm5,0x320(%rsp)
   1d1c1:	00 
   1d1c2:	4c 89 bc 24 30 03 00 	mov    %r15,0x330(%rsp)
   1d1c9:	00 
   1d1ca:	4c 89 a4 24 38 03 00 	mov    %r12,0x338(%rsp)
   1d1d1:	00 
   1d1d2:	48 8b bc 24 08 01 00 	mov    0x108(%rsp),%rdi
   1d1d9:	00 
   1d1da:	48 8d b4 24 00 03 00 	lea    0x300(%rsp),%rsi
   1d1e1:	00 
   1d1e2:	48 8b 84 24 10 01 00 	mov    0x110(%rsp),%rax
   1d1e9:	00 
   1d1ea:	ff 50 18             	callq  *0x18(%rax)
   1d1ed:	41 83 fd 03          	cmp    $0x3,%r13d
   1d1f1:	0f 84 41 01 00 00    	je     1d338 <std::backtrace_rs::symbolize::gimli::resolve+0xb18>
   1d1f7:	48 8b bc 24 98 01 00 	mov    0x198(%rsp),%rdi
   1d1fe:	00 
   1d1ff:	48 8b 84 24 a0 01 00 	mov    0x1a0(%rsp),%rax
   1d206:	00 
   1d207:	40 b6 01             	mov    $0x1,%sil
   1d20a:	e9 51 fd ff ff       	jmpq   1cf60 <std::backtrace_rs::symbolize::gimli::resolve+0x740>
   1d20f:	45 31 c9             	xor    %r9d,%r9d
   1d212:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   1d217:	eb 29                	jmp    1d242 <std::backtrace_rs::symbolize::gimli::resolve+0xa22>
   1d219:	45 31 c9             	xor    %r9d,%r9d
   1d21c:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   1d221:	0f 28 64 24 50       	movaps 0x50(%rsp),%xmm4
   1d226:	0f 28 6c 24 20       	movaps 0x20(%rsp),%xmm5
   1d22b:	31 c0                	xor    %eax,%eax
   1d22d:	44 0f b6 94 24 88 00 	movzbl 0x88(%rsp),%r10d
   1d234:	00 00 
   1d236:	0f b6 54 24 10       	movzbl 0x10(%rsp),%edx
   1d23b:	eb 05                	jmp    1d242 <std::backtrace_rs::symbolize::gimli::resolve+0xa22>
   1d23d:	45 31 c9             	xor    %r9d,%r9d
   1d240:	31 c0                	xor    %eax,%eax
   1d242:	45 88 d5             	mov    %r10b,%r13b
   1d245:	88 d0                	mov    %dl,%al
   1d247:	4c 89 8c 24 a8 01 00 	mov    %r9,0x1a8(%rsp)
   1d24e:	00 
   1d24f:	4c 89 84 24 b0 01 00 	mov    %r8,0x1b0(%rsp)
   1d256:	00 
   1d257:	44 89 ac 24 b8 01 00 	mov    %r13d,0x1b8(%rsp)
   1d25e:	00 
   1d25f:	44 89 bc 24 bc 01 00 	mov    %r15d,0x1bc(%rsp)
   1d266:	00 
   1d267:	89 84 24 c0 01 00 00 	mov    %eax,0x1c0(%rsp)
   1d26e:	44 89 a4 24 c4 01 00 	mov    %r12d,0x1c4(%rsp)
   1d275:	00 
   1d276:	4c 8b 7b 08          	mov    0x8(%rbx),%r15
   1d27a:	4c 8b 63 10          	mov    0x10(%rbx),%r12
   1d27e:	4d 85 ff             	test   %r15,%r15
   1d281:	0f 85 17 ff ff ff    	jne    1d19e <std::backtrace_rs::symbolize::gimli::resolve+0x97e>
   1d287:	e9 0f ff ff ff       	jmpq   1d19b <std::backtrace_rs::symbolize::gimli::resolve+0x97b>
   1d28c:	48 89 f0             	mov    %rsi,%rax
   1d28f:	e9 19 00 00 00       	jmpq   1d2ad <std::backtrace_rs::symbolize::gimli::resolve+0xa8d>
   1d294:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1d29b:	00 00 00 
   1d29e:	66 90                	xchg   %ax,%ax
   1d2a0:	48 29 c8             	sub    %rcx,%rax
   1d2a3:	48 83 f8 01          	cmp    $0x1,%rax
   1d2a7:	0f 86 25 fa ff ff    	jbe    1ccd2 <std::backtrace_rs::symbolize::gimli::resolve+0x4b2>
   1d2ad:	48 89 c1             	mov    %rax,%rcx
   1d2b0:	48 d1 e9             	shr    %rcx
   1d2b3:	4a 8d 14 39          	lea    (%rcx,%r15,1),%rdx
   1d2b7:	48 89 d7             	mov    %rdx,%rdi
   1d2ba:	48 c1 e7 05          	shl    $0x5,%rdi
   1d2be:	4d 39 74 3d 10       	cmp    %r14,0x10(%r13,%rdi,1)
   1d2c3:	77 db                	ja     1d2a0 <std::backtrace_rs::symbolize::gimli::resolve+0xa80>
   1d2c5:	49 89 d7             	mov    %rdx,%r15
   1d2c8:	eb d6                	jmp    1d2a0 <std::backtrace_rs::symbolize::gimli::resolve+0xa80>
   1d2ca:	4c 89 c6             	mov    %r8,%rsi
   1d2cd:	eb 0e                	jmp    1d2dd <std::backtrace_rs::symbolize::gimli::resolve+0xabd>
   1d2cf:	90                   	nop
   1d2d0:	48 29 fe             	sub    %rdi,%rsi
   1d2d3:	48 83 fe 01          	cmp    $0x1,%rsi
   1d2d7:	0f 86 cd fb ff ff    	jbe    1ceaa <std::backtrace_rs::symbolize::gimli::resolve+0x68a>
   1d2dd:	48 89 f7             	mov    %rsi,%rdi
   1d2e0:	48 d1 ef             	shr    %rdi
   1d2e3:	48 8d 14 0f          	lea    (%rdi,%rcx,1),%rdx
   1d2e7:	48 8d 1c 52          	lea    (%rdx,%rdx,2),%rbx
   1d2eb:	4c 39 34 d8          	cmp    %r14,(%rax,%rbx,8)
   1d2ef:	77 df                	ja     1d2d0 <std::backtrace_rs::symbolize::gimli::resolve+0xab0>
   1d2f1:	48 89 d1             	mov    %rdx,%rcx
   1d2f4:	eb da                	jmp    1d2d0 <std::backtrace_rs::symbolize::gimli::resolve+0xab0>
   1d2f6:	41 83 fe 03          	cmp    $0x3,%r14d
   1d2fa:	74 29                	je     1d325 <std::backtrace_rs::symbolize::gimli::resolve+0xb05>
   1d2fc:	48 8b b4 24 90 01 00 	mov    0x190(%rsp),%rsi
   1d303:	00 
   1d304:	48 85 f6             	test   %rsi,%rsi
   1d307:	74 1c                	je     1d325 <std::backtrace_rs::symbolize::gimli::resolve+0xb05>
   1d309:	48 c1 e6 03          	shl    $0x3,%rsi
   1d30d:	48 85 f6             	test   %rsi,%rsi
   1d310:	74 13                	je     1d325 <std::backtrace_rs::symbolize::gimli::resolve+0xb05>
   1d312:	48 8b bc 24 88 01 00 	mov    0x188(%rsp),%rdi
   1d319:	00 
   1d31a:	ba 08 00 00 00       	mov    $0x8,%edx
   1d31f:	ff 15 db 88 02 00    	callq  *0x288db(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   1d325:	f6 84 24 98 00 00 00 	testb  $0x1,0x98(%rsp)
   1d32c:	01 
   1d32d:	4c 8b 74 24 30       	mov    0x30(%rsp),%r14
   1d332:	0f 84 48 fb ff ff    	je     1ce80 <std::backtrace_rs::symbolize::gimli::resolve+0x660>
   1d338:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   1d33c:	5b                   	pop    %rbx
   1d33d:	41 5c                	pop    %r12
   1d33f:	41 5d                	pop    %r13
   1d341:	41 5e                	pop    %r14
   1d343:	41 5f                	pop    %r15
   1d345:	5d                   	pop    %rbp
   1d346:	c3                   	retq   
   1d347:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
   1d34e:	00 
   1d34f:	48 8b b4 24 88 00 00 	mov    0x88(%rsp),%rsi
   1d356:	00 
   1d357:	e8 e4 fc fe ff       	callq  d040 <addr2line::ResUnit<R>::parse_lines>
   1d35c:	48 83 bc 24 70 01 00 	cmpq   $0x1,0x170(%rsp)
   1d363:	00 01 
   1d365:	0f 84 15 fb ff ff    	je     1ce80 <std::backtrace_rs::symbolize::gimli::resolve+0x660>
   1d36b:	4c 8b 84 24 78 01 00 	mov    0x178(%rsp),%r8
   1d372:	00 
   1d373:	41 bf 02 00 00 00    	mov    $0x2,%r15d
   1d379:	4d 85 c0             	test   %r8,%r8
   1d37c:	0f 84 c3 00 00 00    	je     1d445 <std::backtrace_rs::symbolize::gimli::resolve+0xc25>
   1d382:	49 8b 70 18          	mov    0x18(%r8),%rsi
   1d386:	48 85 f6             	test   %rsi,%rsi
   1d389:	48 8b 54 24 50       	mov    0x50(%rsp),%rdx
   1d38e:	0f 84 ac 00 00 00    	je     1d440 <std::backtrace_rs::symbolize::gimli::resolve+0xc20>
   1d394:	49 89 db             	mov    %rbx,%r11
   1d397:	4d 8b 48 10          	mov    0x10(%r8),%r9
   1d39b:	31 ff                	xor    %edi,%edi
   1d39d:	48 83 fe 01          	cmp    $0x1,%rsi
   1d3a1:	0f 85 a8 00 00 00    	jne    1d44f <std::backtrace_rs::symbolize::gimli::resolve+0xc2f>
   1d3a7:	48 89 f8             	mov    %rdi,%rax
   1d3aa:	48 c1 e0 05          	shl    $0x5,%rax
   1d3ae:	4d 39 34 01          	cmp    %r14,(%r9,%rax,1)
   1d3b2:	0f 87 c5 00 00 00    	ja     1d47d <std::backtrace_rs::symbolize::gimli::resolve+0xc5d>
   1d3b8:	4d 39 74 01 08       	cmp    %r14,0x8(%r9,%rax,1)
   1d3bd:	4c 89 db             	mov    %r11,%rbx
   1d3c0:	76 7e                	jbe    1d440 <std::backtrace_rs::symbolize::gimli::resolve+0xc20>
   1d3c2:	48 39 f7             	cmp    %rsi,%rdi
   1d3c5:	0f 83 db 14 00 00    	jae    1e8a6 <std::backtrace_rs::symbolize::gimli::resolve+0x2086>
   1d3cb:	49 8b 74 01 18       	mov    0x18(%r9,%rax,1),%rsi
   1d3d0:	48 85 f6             	test   %rsi,%rsi
   1d3d3:	74 6b                	je     1d440 <std::backtrace_rs::symbolize::gimli::resolve+0xc20>
   1d3d5:	4d 8b 4c 01 10       	mov    0x10(%r9,%rax,1),%r9
   1d3da:	31 ff                	xor    %edi,%edi
   1d3dc:	48 83 fe 01          	cmp    $0x1,%rsi
   1d3e0:	0f 85 9c 00 00 00    	jne    1d482 <std::backtrace_rs::symbolize::gimli::resolve+0xc62>
   1d3e6:	48 8d 04 7f          	lea    (%rdi,%rdi,2),%rax
   1d3ea:	4d 39 34 c1          	cmp    %r14,(%r9,%rax,8)
   1d3ee:	4c 89 db             	mov    %r11,%rbx
   1d3f1:	74 0f                	je     1d402 <std::backtrace_rs::symbolize::gimli::resolve+0xbe2>
   1d3f3:	0f 92 c0             	setb   %al
   1d3f6:	0f b6 c0             	movzbl %al,%eax
   1d3f9:	48 01 c7             	add    %rax,%rdi
   1d3fc:	74 42                	je     1d440 <std::backtrace_rs::symbolize::gimli::resolve+0xc20>
   1d3fe:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   1d402:	48 39 f7             	cmp    %rsi,%rdi
   1d405:	0f 83 aa 14 00 00    	jae    1e8b5 <std::backtrace_rs::symbolize::gimli::resolve+0x2095>
   1d40b:	48 8d 34 7f          	lea    (%rdi,%rdi,2),%rsi
   1d40f:	49 8b 44 f1 08       	mov    0x8(%r9,%rsi,8),%rax
   1d414:	49 39 40 08          	cmp    %rax,0x8(%r8)
   1d418:	0f 86 8f 00 00 00    	jbe    1d4ad <std::backtrace_rs::symbolize::gimli::resolve+0xc8d>
   1d41e:	49 8b 08             	mov    (%r8),%rcx
   1d421:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
   1d425:	48 8b 3c c1          	mov    (%rcx,%rax,8),%rdi
   1d429:	48 89 bc 24 00 01 00 	mov    %rdi,0x100(%rsp)
   1d430:	00 
   1d431:	48 8b 44 c1 10       	mov    0x10(%rcx,%rax,8),%rax
   1d436:	48 89 84 24 50 01 00 	mov    %rax,0x150(%rsp)
   1d43d:	00 
   1d43e:	eb 77                	jmp    1d4b7 <std::backtrace_rs::symbolize::gimli::resolve+0xc97>
   1d440:	e9 a1 00 00 00       	jmpq   1d4e6 <std::backtrace_rs::symbolize::gimli::resolve+0xcc6>
   1d445:	48 8b 54 24 50       	mov    0x50(%rsp),%rdx
   1d44a:	e9 97 00 00 00       	jmpq   1d4e6 <std::backtrace_rs::symbolize::gimli::resolve+0xcc6>
   1d44f:	48 89 f3             	mov    %rsi,%rbx
   1d452:	eb 0d                	jmp    1d461 <std::backtrace_rs::symbolize::gimli::resolve+0xc41>
   1d454:	48 29 cb             	sub    %rcx,%rbx
   1d457:	48 83 fb 01          	cmp    $0x1,%rbx
   1d45b:	0f 86 46 ff ff ff    	jbe    1d3a7 <std::backtrace_rs::symbolize::gimli::resolve+0xb87>
   1d461:	48 89 d9             	mov    %rbx,%rcx
   1d464:	48 d1 e9             	shr    %rcx
   1d467:	4c 8d 14 39          	lea    (%rcx,%rdi,1),%r10
   1d46b:	4c 89 d0             	mov    %r10,%rax
   1d46e:	48 c1 e0 05          	shl    $0x5,%rax
   1d472:	4d 39 34 01          	cmp    %r14,(%r9,%rax,1)
   1d476:	77 dc                	ja     1d454 <std::backtrace_rs::symbolize::gimli::resolve+0xc34>
   1d478:	4c 89 d7             	mov    %r10,%rdi
   1d47b:	eb d7                	jmp    1d454 <std::backtrace_rs::symbolize::gimli::resolve+0xc34>
   1d47d:	4c 89 db             	mov    %r11,%rbx
   1d480:	eb 64                	jmp    1d4e6 <std::backtrace_rs::symbolize::gimli::resolve+0xcc6>
   1d482:	48 89 f3             	mov    %rsi,%rbx
   1d485:	eb 0d                	jmp    1d494 <std::backtrace_rs::symbolize::gimli::resolve+0xc74>
   1d487:	48 29 c3             	sub    %rax,%rbx
   1d48a:	48 83 fb 01          	cmp    $0x1,%rbx
   1d48e:	0f 86 52 ff ff ff    	jbe    1d3e6 <std::backtrace_rs::symbolize::gimli::resolve+0xbc6>
   1d494:	48 89 d8             	mov    %rbx,%rax
   1d497:	48 d1 e8             	shr    %rax
   1d49a:	4c 8d 14 38          	lea    (%rax,%rdi,1),%r10
   1d49e:	4b 8d 0c 52          	lea    (%r10,%r10,2),%rcx
   1d4a2:	4d 39 34 c9          	cmp    %r14,(%r9,%rcx,8)
   1d4a6:	77 df                	ja     1d487 <std::backtrace_rs::symbolize::gimli::resolve+0xc67>
   1d4a8:	4c 89 d7             	mov    %r10,%rdi
   1d4ab:	eb da                	jmp    1d487 <std::backtrace_rs::symbolize::gimli::resolve+0xc67>
   1d4ad:	31 c0                	xor    %eax,%eax
   1d4af:	48 89 84 24 00 01 00 	mov    %rax,0x100(%rsp)
   1d4b6:	00 
   1d4b7:	41 8b 4c f1 10       	mov    0x10(%r9,%rsi,8),%ecx
   1d4bc:	41 8b 44 f1 14       	mov    0x14(%r9,%rsi,8),%eax
   1d4c1:	45 31 ff             	xor    %r15d,%r15d
   1d4c4:	89 8c 24 d4 00 00 00 	mov    %ecx,0xd4(%rsp)
   1d4cb:	85 c9                	test   %ecx,%ecx
   1d4cd:	41 0f 95 c7          	setne  %r15b
   1d4d1:	31 c9                	xor    %ecx,%ecx
   1d4d3:	89 84 24 dc 00 00 00 	mov    %eax,0xdc(%rsp)
   1d4da:	85 c0                	test   %eax,%eax
   1d4dc:	0f 95 c1             	setne  %cl
   1d4df:	89 8c 24 d8 00 00 00 	mov    %ecx,0xd8(%rsp)
   1d4e6:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
   1d4ed:	00 
   1d4ee:	48 8b b4 24 88 00 00 	mov    0x88(%rsp),%rsi
   1d4f5:	00 
   1d4f6:	e8 75 31 ff ff       	callq  10670 <addr2line::ResUnit<R>::parse_functions>
   1d4fb:	48 83 bc 24 70 01 00 	cmpq   $0x1,0x170(%rsp)
   1d502:	00 01 
   1d504:	0f 84 76 f9 ff ff    	je     1ce80 <std::backtrace_rs::symbolize::gimli::resolve+0x660>
   1d50a:	48 8b 84 24 78 01 00 	mov    0x178(%rsp),%rax
   1d511:	00 
   1d512:	48 8b 70 18          	mov    0x18(%rax),%rsi
   1d516:	49 39 f4             	cmp    %rsi,%r12
   1d519:	0f 83 66 13 00 00    	jae    1e885 <std::backtrace_rs::symbolize::gimli::resolve+0x2065>
   1d51f:	48 8b 70 08          	mov    0x8(%rax),%rsi
   1d523:	48 8b 48 10          	mov    0x10(%rax),%rcx
   1d527:	48 8b 7c d9 10       	mov    0x10(%rcx,%rbx,8),%rdi
   1d52c:	48 39 f7             	cmp    %rsi,%rdi
   1d52f:	0f 83 62 13 00 00    	jae    1e897 <std::backtrace_rs::symbolize::gimli::resolve+0x2077>
   1d535:	4c 8b 28             	mov    (%rax),%r13
   1d538:	4c 8d 14 ff          	lea    (%rdi,%rdi,8),%r10
   1d53c:	4b 8b 44 d5 08       	mov    0x8(%r13,%r10,8),%rax
   1d541:	48 83 f8 02          	cmp    $0x2,%rax
   1d545:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   1d54a:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   1d54f:	0f 85 10 07 00 00    	jne    1dc65 <std::backtrace_rs::symbolize::gimli::resolve+0x1445>
   1d555:	4e 8d 0c d5 08 00 00 	lea    0x8(,%r10,8),%r9
   1d55c:	00 
   1d55d:	4d 01 e9             	add    %r13,%r9
   1d560:	4b 8b 5c d5 00       	mov    0x0(%r13,%r10,8),%rbx
   1d565:	48 8b 44 0f 18       	mov    0x18(%rdi,%rcx,1),%rax
   1d56a:	4c 8b 5c 0f 30       	mov    0x30(%rdi,%rcx,1),%r11
   1d56f:	45 31 c0             	xor    %r8d,%r8d
   1d572:	80 7c 0f 39 08       	cmpb   $0x8,0x39(%rdi,%rcx,1)
   1d577:	41 0f 94 c0          	sete   %r8b
   1d57b:	48 89 c2             	mov    %rax,%rdx
   1d57e:	4c 29 da             	sub    %r11,%rdx
   1d581:	4a 8d 14 c2          	lea    (%rdx,%r8,8),%rdx
   1d585:	48 83 c2 04          	add    $0x4,%rdx
   1d589:	31 f6                	xor    %esi,%esi
   1d58b:	48 89 74 24 40       	mov    %rsi,0x40(%rsp)
   1d590:	48 89 9c 24 98 00 00 	mov    %rbx,0x98(%rsp)
   1d597:	00 
   1d598:	41 bc 37 00 00 00    	mov    $0x37,%r12d
   1d59e:	48 29 d3             	sub    %rdx,%rbx
   1d5a1:	44 89 7c 24 1c       	mov    %r15d,0x1c(%rsp)
   1d5a6:	0f 82 78 06 00 00    	jb     1dc24 <std::backtrace_rs::symbolize::gimli::resolve+0x1404>
   1d5ac:	49 39 db             	cmp    %rbx,%r11
   1d5af:	0f 86 6f 06 00 00    	jbe    1dc24 <std::backtrace_rs::symbolize::gimli::resolve+0x1404>
   1d5b5:	4c 89 4c 24 78       	mov    %r9,0x78(%rsp)
   1d5ba:	48 8b 94 24 a0 00 00 	mov    0xa0(%rsp),%rdx
   1d5c1:	00 
   1d5c2:	48 8b 72 20          	mov    0x20(%rdx),%rsi
   1d5c6:	48 89 b4 24 c0 00 00 	mov    %rsi,0xc0(%rsp)
   1d5cd:	00 
   1d5ce:	48 8b 52 30          	mov    0x30(%rdx),%rdx
   1d5d2:	48 89 94 24 b8 00 00 	mov    %rdx,0xb8(%rsp)
   1d5d9:	00 
   1d5da:	4c 8d 4c 0f 18       	lea    0x18(%rdi,%rcx,1),%r9
   1d5df:	4c 8d 7c 0f 40       	lea    0x40(%rdi,%rcx,1),%r15
   1d5e4:	48 8b 74 0f 28       	mov    0x28(%rdi,%rcx,1),%rsi
   1d5e9:	4c 8d 24 1e          	lea    (%rsi,%rbx,1),%r12
   1d5ed:	4c 89 a4 24 00 03 00 	mov    %r12,0x300(%rsp)
   1d5f4:	00 
   1d5f5:	4c 89 da             	mov    %r11,%rdx
   1d5f8:	48 29 da             	sub    %rbx,%rdx
   1d5fb:	48 89 94 24 08 03 00 	mov    %rdx,0x308(%rsp)
   1d602:	00 
   1d603:	4c 89 8c 24 10 03 00 	mov    %r9,0x310(%rsp)
   1d60a:	00 
   1d60b:	4c 89 bc 24 c8 00 00 	mov    %r15,0xc8(%rsp)
   1d612:	00 
   1d613:	4c 89 bc 24 18 03 00 	mov    %r15,0x318(%rsp)
   1d61a:	00 
   1d61b:	48 c7 84 24 20 03 00 	movq   $0x0,0x320(%rsp)
   1d622:	00 00 00 00 00 
   1d627:	0f 84 a8 00 00 00    	je     1d6d5 <std::backtrace_rs::symbolize::gimli::resolve+0xeb5>
   1d62d:	48 01 f9             	add    %rdi,%rcx
   1d630:	48 83 c1 08          	add    $0x8,%rcx
   1d634:	48 89 8c 24 b0 00 00 	mov    %rcx,0xb0(%rsp)
   1d63b:	00 
   1d63c:	4a 8d 3c c5 04 00 00 	lea    0x4(,%r8,8),%rdi
   1d643:	00 
   1d644:	49 29 fb             	sub    %rdi,%r11
   1d647:	49 29 c3             	sub    %rax,%r11
   1d64a:	4c 01 de             	add    %r11,%rsi
   1d64d:	48 01 c7             	add    %rax,%rdi
   1d650:	48 8b 94 24 98 00 00 	mov    0x98(%rsp),%rdx
   1d657:	00 
   1d658:	49 89 d1             	mov    %rdx,%r9
   1d65b:	49 f7 d1             	not    %r9
   1d65e:	31 c0                	xor    %eax,%eax
   1d660:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1d665:	31 c0                	xor    %eax,%eax
   1d667:	31 c9                	xor    %ecx,%ecx
   1d669:	44 8b 7c 24 1c       	mov    0x1c(%rsp),%r15d
   1d66e:	4c 8d 24 16          	lea    (%rsi,%rdx,1),%r12
   1d672:	49 83 c4 01          	add    $0x1,%r12
   1d676:	49 8d 1c 39          	lea    (%r9,%rdi,1),%rbx
   1d67a:	4c 89 a4 24 00 03 00 	mov    %r12,0x300(%rsp)
   1d681:	00 
   1d682:	48 89 9c 24 08 03 00 	mov    %rbx,0x308(%rsp)
   1d689:	00 
   1d68a:	0f b6 14 16          	movzbl (%rsi,%rdx,1),%edx
   1d68e:	83 f9 3f             	cmp    $0x3f,%ecx
   1d691:	75 05                	jne    1d698 <std::backtrace_rs::symbolize::gimli::resolve+0xe78>
   1d693:	80 fa 01             	cmp    $0x1,%dl
   1d696:	77 52                	ja     1d6ea <std::backtrace_rs::symbolize::gimli::resolve+0xeca>
   1d698:	0f b6 da             	movzbl %dl,%ebx
   1d69b:	89 da                	mov    %ebx,%edx
   1d69d:	83 e2 7f             	and    $0x7f,%edx
   1d6a0:	48 d3 e2             	shl    %cl,%rdx
   1d6a3:	48 09 d0             	or     %rdx,%rax
   1d6a6:	84 db                	test   %bl,%bl
   1d6a8:	79 4b                	jns    1d6f5 <std::backtrace_rs::symbolize::gimli::resolve+0xed5>
   1d6aa:	83 c1 07             	add    $0x7,%ecx
   1d6ad:	48 83 c6 01          	add    $0x1,%rsi
   1d6b1:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   1d6b5:	48 8b 94 24 98 00 00 	mov    0x98(%rsp),%rdx
   1d6bc:	00 
   1d6bd:	48 39 fa             	cmp    %rdi,%rdx
   1d6c0:	75 ac                	jne    1d66e <std::backtrace_rs::symbolize::gimli::resolve+0xe4e>
   1d6c2:	48 01 d6             	add    %rdx,%rsi
   1d6c5:	48 89 74 24 40       	mov    %rsi,0x40(%rsp)
   1d6ca:	41 bc 13 00 00 00    	mov    $0x13,%r12d
   1d6d0:	e9 4a 05 00 00       	jmpq   1dc1f <std::backtrace_rs::symbolize::gimli::resolve+0x13ff>
   1d6d5:	4c 89 64 24 40       	mov    %r12,0x40(%rsp)
   1d6da:	41 bc 13 00 00 00    	mov    $0x13,%r12d
   1d6e0:	44 8b 7c 24 1c       	mov    0x1c(%rsp),%r15d
   1d6e5:	e9 35 05 00 00       	jmpq   1dc1f <std::backtrace_rs::symbolize::gimli::resolve+0x13ff>
   1d6ea:	41 bc 06 00 00 00    	mov    $0x6,%r12d
   1d6f0:	e9 2a 05 00 00       	jmpq   1dc1f <std::backtrace_rs::symbolize::gimli::resolve+0x13ff>
   1d6f5:	48 85 c0             	test   %rax,%rax
   1d6f8:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   1d6fd:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   1d702:	0f 84 e5 11 00 00    	je     1e8ed <std::backtrace_rs::symbolize::gimli::resolve+0x20cd>
   1d708:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   1d70c:	48 3b 4c 32 50       	cmp    0x50(%rdx,%rsi,1),%rcx
   1d711:	0f 83 2e 02 00 00    	jae    1d945 <std::backtrace_rs::symbolize::gimli::resolve+0x1125>
   1d717:	4c 89 54 24 68       	mov    %r10,0x68(%rsp)
   1d71c:	4c 89 6c 24 70       	mov    %r13,0x70(%rsp)
   1d721:	48 6b f9 70          	imul   $0x70,%rcx,%rdi
   1d725:	48 8b 84 24 c8 00 00 	mov    0xc8(%rsp),%rax
   1d72c:	00 
   1d72d:	48 03 38             	add    (%rax),%rdi
   1d730:	80 7f 6a 01          	cmpb   $0x1,0x6a(%rdi)
   1d734:	4c 8b bc 24 b0 00 00 	mov    0xb0(%rsp),%r15
   1d73b:	00 
   1d73c:	75 0c                	jne    1d74a <std::backtrace_rs::symbolize::gimli::resolve+0xf2a>
   1d73e:	48 c7 84 24 20 03 00 	movq   $0x1,0x320(%rsp)
   1d745:	00 01 00 00 00 
   1d74a:	48 83 c7 08          	add    $0x8,%rdi
   1d74e:	ff 15 3c 83 02 00    	callq  *0x2833c(%rip)        # 45a90 <_GLOBAL_OFFSET_TABLE_+0x100>
   1d754:	49 89 d5             	mov    %rdx,%r13
   1d757:	48 85 d2             	test   %rdx,%rdx
   1d75a:	0f 84 79 02 00 00    	je     1d9d9 <std::backtrace_rs::symbolize::gimli::resolve+0x11b9>
   1d760:	49 89 c4             	mov    %rax,%r12
   1d763:	49 c1 e5 04          	shl    $0x4,%r13
   1d767:	49 01 c5             	add    %rax,%r13
   1d76a:	31 db                	xor    %ebx,%ebx
   1d76c:	eb 26                	jmp    1d794 <std::backtrace_rs::symbolize::gimli::resolve+0xf74>
   1d76e:	66 83 f8 03          	cmp    $0x3,%ax
   1d772:	0f 84 e4 00 00 00    	je     1d85c <std::backtrace_rs::symbolize::gimli::resolve+0x103c>
   1d778:	66 83 f8 31          	cmp    $0x31,%ax
   1d77c:	75 09                	jne    1d787 <std::backtrace_rs::symbolize::gimli::resolve+0xf67>
   1d77e:	48 85 db             	test   %rbx,%rbx
   1d781:	0f 84 3c 01 00 00    	je     1d8c3 <std::backtrace_rs::symbolize::gimli::resolve+0x10a3>
   1d787:	49 83 c4 10          	add    $0x10,%r12
   1d78b:	4d 39 ec             	cmp    %r13,%r12
   1d78e:	0f 84 47 02 00 00    	je     1d9db <std::backtrace_rs::symbolize::gimli::resolve+0x11bb>
   1d794:	49 8b 0c 24          	mov    (%r12),%rcx
   1d798:	48 8b 84 24 10 03 00 	mov    0x310(%rsp),%rax
   1d79f:	00 
   1d7a0:	8b 50 20             	mov    0x20(%rax),%edx
   1d7a3:	45 0f b7 4c 24 0a    	movzwl 0xa(%r12),%r9d
   1d7a9:	45 8b 44 24 08       	mov    0x8(%r12),%r8d
   1d7ae:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
   1d7b5:	00 
   1d7b6:	48 8d b4 24 00 03 00 	lea    0x300(%rsp),%rsi
   1d7bd:	00 
   1d7be:	e8 0d d0 fe ff       	callq  a7d0 <gimli::read::unit::parse_attribute>
   1d7c3:	83 bc 24 70 01 00 00 	cmpl   $0x1,0x170(%rsp)
   1d7ca:	01 
   1d7cb:	0f 84 16 04 00 00    	je     1dbe7 <std::backtrace_rs::symbolize::gimli::resolve+0x13c7>
   1d7d1:	0f b7 84 24 90 01 00 	movzwl 0x190(%rsp),%eax
   1d7d8:	00 
   1d7d9:	66 83 f8 46          	cmp    $0x46,%ax
   1d7dd:	7e 8f                	jle    1d76e <std::backtrace_rs::symbolize::gimli::resolve+0xf4e>
   1d7df:	66 83 f8 47          	cmp    $0x47,%ax
   1d7e3:	74 99                	je     1d77e <std::backtrace_rs::symbolize::gimli::resolve+0xf5e>
   1d7e5:	0f b7 c8             	movzwl %ax,%ecx
   1d7e8:	81 f9 07 20 00 00    	cmp    $0x2007,%ecx
   1d7ee:	74 06                	je     1d7f6 <std::backtrace_rs::symbolize::gimli::resolve+0xfd6>
   1d7f0:	66 83 f8 6e          	cmp    $0x6e,%ax
   1d7f4:	75 91                	jne    1d787 <std::backtrace_rs::symbolize::gimli::resolve+0xf67>
   1d7f6:	48 8d bc 24 98 04 00 	lea    0x498(%rsp),%rdi
   1d7fd:	00 
   1d7fe:	48 8d b4 24 78 01 00 	lea    0x178(%rsp),%rsi
   1d805:	00 
   1d806:	e8 05 e2 fe ff       	callq  ba10 <gimli::read::unit::Attribute<R>::value>
   1d80b:	48 8b 8c 24 98 04 00 	mov    0x498(%rsp),%rcx
   1d812:	00 
   1d813:	4c 8b 84 24 a0 04 00 	mov    0x4a0(%rsp),%r8
   1d81a:	00 
   1d81b:	4c 8b 8c 24 a8 04 00 	mov    0x4a8(%rsp),%r9
   1d822:	00 
   1d823:	48 8d bc 24 10 06 00 	lea    0x610(%rsp),%rdi
   1d82a:	00 
   1d82b:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   1d830:	4c 89 fa             	mov    %r15,%rdx
   1d833:	e8 78 e9 fe ff       	callq  c1b0 <gimli::read::dwarf::Dwarf<R>::attr_string>
   1d838:	48 83 bc 24 10 06 00 	cmpq   $0x0,0x610(%rsp)
   1d83f:	00 00 
   1d841:	0f 85 40 ff ff ff    	jne    1d787 <std::backtrace_rs::symbolize::gimli::resolve+0xf67>
   1d847:	48 8b 9c 24 18 06 00 	mov    0x618(%rsp),%rbx
   1d84e:	00 
   1d84f:	4c 8b b4 24 20 06 00 	mov    0x620(%rsp),%r14
   1d856:	00 
   1d857:	e9 2b ff ff ff       	jmpq   1d787 <std::backtrace_rs::symbolize::gimli::resolve+0xf67>
   1d85c:	48 85 db             	test   %rbx,%rbx
   1d85f:	0f 85 22 ff ff ff    	jne    1d787 <std::backtrace_rs::symbolize::gimli::resolve+0xf67>
   1d865:	48 8d bc 24 98 04 00 	lea    0x498(%rsp),%rdi
   1d86c:	00 
   1d86d:	48 8d b4 24 78 01 00 	lea    0x178(%rsp),%rsi
   1d874:	00 
   1d875:	e8 96 e1 fe ff       	callq  ba10 <gimli::read::unit::Attribute<R>::value>
   1d87a:	48 8b 8c 24 98 04 00 	mov    0x498(%rsp),%rcx
   1d881:	00 
   1d882:	4c 8b 84 24 a0 04 00 	mov    0x4a0(%rsp),%r8
   1d889:	00 
   1d88a:	4c 8b 8c 24 a8 04 00 	mov    0x4a8(%rsp),%r9
   1d891:	00 
   1d892:	48 8d bc 24 10 06 00 	lea    0x610(%rsp),%rdi
   1d899:	00 
   1d89a:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   1d89f:	4c 89 fa             	mov    %r15,%rdx
   1d8a2:	e8 09 e9 fe ff       	callq  c1b0 <gimli::read::dwarf::Dwarf<R>::attr_string>
   1d8a7:	83 bc 24 10 06 00 00 	cmpl   $0x1,0x610(%rsp)
   1d8ae:	01 
   1d8af:	4c 8b b4 24 20 06 00 	mov    0x620(%rsp),%r14
   1d8b6:	00 
   1d8b7:	74 7d                	je     1d936 <std::backtrace_rs::symbolize::gimli::resolve+0x1116>
   1d8b9:	48 8b 9c 24 18 06 00 	mov    0x618(%rsp),%rbx
   1d8c0:	00 
   1d8c1:	eb 75                	jmp    1d938 <std::backtrace_rs::symbolize::gimli::resolve+0x1118>
   1d8c3:	48 8d bc 24 98 04 00 	lea    0x498(%rsp),%rdi
   1d8ca:	00 
   1d8cb:	48 8d b4 24 78 01 00 	lea    0x178(%rsp),%rsi
   1d8d2:	00 
   1d8d3:	e8 38 e1 fe ff       	callq  ba10 <gimli::read::unit::Attribute<R>::value>
   1d8d8:	48 8b b4 24 98 04 00 	mov    0x498(%rsp),%rsi
   1d8df:	00 
   1d8e0:	48 8b 94 24 a0 04 00 	mov    0x4a0(%rsp),%rdx
   1d8e7:	00 
   1d8e8:	48 8d bc 24 10 06 00 	lea    0x610(%rsp),%rdi
   1d8ef:	00 
   1d8f0:	4c 89 f9             	mov    %r15,%rcx
   1d8f3:	4c 8b 44 24 50       	mov    0x50(%rsp),%r8
   1d8f8:	4c 8b 8c 24 c0 00 00 	mov    0xc0(%rsp),%r9
   1d8ff:	00 
   1d900:	6a 10                	pushq  $0x10
   1d902:	ff b4 24 c0 00 00 00 	pushq  0xc0(%rsp)
   1d909:	e8 72 53 ff ff       	callq  12c80 <addr2line::name_attr>
   1d90e:	48 83 c4 10          	add    $0x10,%rsp
   1d912:	48 8b 9c 24 18 06 00 	mov    0x618(%rsp),%rbx
   1d919:	00 
   1d91a:	4c 8b b4 24 20 06 00 	mov    0x620(%rsp),%r14
   1d921:	00 
   1d922:	48 83 bc 24 10 06 00 	cmpq   $0x1,0x610(%rsp)
   1d929:	00 01 
   1d92b:	0f 85 56 fe ff ff    	jne    1d787 <std::backtrace_rs::symbolize::gimli::resolve+0xf67>
   1d931:	e9 c1 02 00 00       	jmpq   1dbf7 <std::backtrace_rs::symbolize::gimli::resolve+0x13d7>
   1d936:	31 db                	xor    %ebx,%ebx
   1d938:	4c 8b bc 24 b0 00 00 	mov    0xb0(%rsp),%r15
   1d93f:	00 
   1d940:	e9 42 fe ff ff       	jmpq   1d787 <std::backtrace_rs::symbolize::gimli::resolve+0xf67>
   1d945:	48 8b 4c 32 58       	mov    0x58(%rdx,%rsi,1),%rcx
   1d94a:	41 bc 12 00 00 00    	mov    $0x12,%r12d
   1d950:	48 85 c9             	test   %rcx,%rcx
   1d953:	0f 84 bf 02 00 00    	je     1dc18 <std::backtrace_rs::symbolize::gimli::resolve+0x13f8>
   1d959:	4c 89 54 24 68       	mov    %r10,0x68(%rsp)
   1d95e:	4c 89 6c 24 70       	mov    %r13,0x70(%rsp)
   1d963:	4c 8b 4c 32 60       	mov    0x60(%rdx,%rsi,1),%r9
   1d968:	31 d2                	xor    %edx,%edx
   1d96a:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
   1d96f:	49 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%r8
   1d976:	44 0f b7 91 32 05 00 	movzwl 0x532(%rcx),%r10d
   1d97d:	00 
   1d97e:	48 8d 79 f0          	lea    -0x10(%rcx),%rdi
   1d982:	4c 89 d6             	mov    %r10,%rsi
   1d985:	48 f7 de             	neg    %rsi
   1d988:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
   1d98f:	48 8d 14 1e          	lea    (%rsi,%rbx,1),%rdx
   1d993:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   1d997:	74 26                	je     1d9bf <std::backtrace_rs::symbolize::gimli::resolve+0x119f>
   1d999:	31 d2                	xor    %edx,%edx
   1d99b:	48 39 44 d9 10       	cmp    %rax,0x10(%rcx,%rbx,8)
   1d9a0:	0f 95 c2             	setne  %dl
   1d9a3:	49 0f 47 d0          	cmova  %r8,%rdx
   1d9a7:	48 83 c3 01          	add    $0x1,%rbx
   1d9ab:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   1d9af:	74 11                	je     1d9c2 <std::backtrace_rs::symbolize::gimli::resolve+0x11a2>
   1d9b1:	48 83 c7 70          	add    $0x70,%rdi
   1d9b5:	48 85 d2             	test   %rdx,%rdx
   1d9b8:	75 d5                	jne    1d98f <std::backtrace_rs::symbolize::gimli::resolve+0x116f>
   1d9ba:	e9 71 fd ff ff       	jmpq   1d730 <std::backtrace_rs::symbolize::gimli::resolve+0xf10>
   1d9bf:	4c 89 d3             	mov    %r10,%rbx
   1d9c2:	4d 85 c9             	test   %r9,%r9
   1d9c5:	0f 84 b2 0d 00 00    	je     1e77d <std::backtrace_rs::symbolize::gimli::resolve+0x1f5d>
   1d9cb:	49 83 c1 ff          	add    $0xffffffffffffffff,%r9
   1d9cf:	48 8b 8c d9 38 05 00 	mov    0x538(%rcx,%rbx,8),%rcx
   1d9d6:	00 
   1d9d7:	eb 9d                	jmp    1d976 <std::backtrace_rs::symbolize::gimli::resolve+0x1156>
   1d9d9:	31 db                	xor    %ebx,%ebx
   1d9db:	4c 89 b4 24 38 01 00 	mov    %r14,0x138(%rsp)
   1d9e2:	00 
   1d9e3:	48 89 5c 24 40       	mov    %rbx,0x40(%rsp)
   1d9e8:	48 c7 84 24 18 01 00 	movq   $0x8,0x118(%rsp)
   1d9ef:	00 08 00 00 00 
   1d9f4:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1d9f8:	f3 0f 7f 84 24 20 01 	movdqu %xmm0,0x120(%rsp)
   1d9ff:	00 00 
   1da01:	48 c7 84 24 e0 00 00 	movq   $0x8,0xe0(%rsp)
   1da08:	00 08 00 00 00 
   1da0d:	f3 0f 7f 84 24 e8 00 	movdqu %xmm0,0xe8(%rsp)
   1da14:	00 00 
   1da16:	48 83 ec 08          	sub    $0x8,%rsp
   1da1a:	48 8d 84 24 e8 00 00 	lea    0xe8(%rsp),%rax
   1da21:	00 
   1da22:	48 8d 9c 24 20 01 00 	lea    0x120(%rsp),%rbx
   1da29:	00 
   1da2a:	48 8d bc 24 08 03 00 	lea    0x308(%rsp),%rdi
   1da31:	00 
   1da32:	31 f6                	xor    %esi,%esi
   1da34:	4c 89 fa             	mov    %r15,%rdx
   1da37:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
   1da3c:	4c 8b 84 24 c8 00 00 	mov    0xc8(%rsp),%r8
   1da43:	00 
   1da44:	4c 8b 8c 24 c0 00 00 	mov    0xc0(%rsp),%r9
   1da4b:	00 
   1da4c:	6a 00                	pushq  $0x0
   1da4e:	50                   	push   %rax
   1da4f:	53                   	push   %rbx
   1da50:	e8 eb 3f ff ff       	callq  11a40 <addr2line::Function<R>::parse_children>
   1da55:	48 83 c4 20          	add    $0x20,%rsp
   1da59:	3c 46                	cmp    $0x46,%al
   1da5b:	0f 85 1c 01 00 00    	jne    1db7d <std::backtrace_rs::symbolize::gimli::resolve+0x135d>
   1da61:	48 8b 84 24 e0 00 00 	mov    0xe0(%rsp),%rax
   1da68:	00 
   1da69:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1da6e:	48 8b 84 24 f0 00 00 	mov    0xf0(%rsp),%rax
   1da75:	00 
   1da76:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1da7b:	48 83 f8 15          	cmp    $0x15,%rax
   1da7f:	0f 83 f8 03 00 00    	jae    1de7d <std::backtrace_rs::symbolize::gimli::resolve+0x165d>
   1da85:	48 83 7c 24 38 02    	cmpq   $0x2,0x38(%rsp)
   1da8b:	0f 82 3c 0b 00 00    	jb     1e5cd <std::backtrace_rs::symbolize::gimli::resolve+0x1dad>
   1da91:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   1da96:	48 8d 78 ff          	lea    -0x1(%rax),%rdi
   1da9a:	49 89 fe             	mov    %rdi,%r14
   1da9d:	49 c1 e6 05          	shl    $0x5,%r14
   1daa1:	4c 03 74 24 20       	add    0x20(%rsp),%r14
   1daa6:	45 31 ff             	xor    %r15d,%r15d
   1daa9:	eb 20                	jmp    1dacb <std::backtrace_rs::symbolize::gimli::resolve+0x12ab>
   1daab:	4c 89 10             	mov    %r10,(%rax)
   1daae:	4c 89 48 08          	mov    %r9,0x8(%rax)
   1dab2:	4c 89 60 10          	mov    %r12,0x10(%rax)
   1dab6:	4c 89 40 18          	mov    %r8,0x18(%rax)
   1daba:	49 83 c6 e0          	add    $0xffffffffffffffe0,%r14
   1dabe:	49 83 c7 01          	add    $0x1,%r15
   1dac2:	48 85 ff             	test   %rdi,%rdi
   1dac5:	0f 84 02 0b 00 00    	je     1e5cd <std::backtrace_rs::symbolize::gimli::resolve+0x1dad>
   1dacb:	48 89 fb             	mov    %rdi,%rbx
   1dace:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   1dad2:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
   1dad7:	48 29 fe             	sub    %rdi,%rsi
   1dada:	0f 82 e4 0d 00 00    	jb     1e8c4 <std::backtrace_rs::symbolize::gimli::resolve+0x20a4>
   1dae0:	48 83 fe 02          	cmp    $0x2,%rsi
   1dae4:	72 d4                	jb     1daba <std::backtrace_rs::symbolize::gimli::resolve+0x129a>
   1dae6:	48 89 f9             	mov    %rdi,%rcx
   1dae9:	48 c1 e1 05          	shl    $0x5,%rcx
   1daed:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   1daf2:	4c 8d 1c 0a          	lea    (%rdx,%rcx,1),%r11
   1daf6:	48 c1 e3 05          	shl    $0x5,%rbx
   1dafa:	48 8d 04 1a          	lea    (%rdx,%rbx,1),%rax
   1dafe:	4c 8b 64 0a 10       	mov    0x10(%rdx,%rcx,1),%r12
   1db03:	4d 8b 13             	mov    (%r11),%r10
   1db06:	4c 39 64 1a 10       	cmp    %r12,0x10(%rdx,%rbx,1)
   1db0b:	72 07                	jb     1db14 <std::backtrace_rs::symbolize::gimli::resolve+0x12f4>
   1db0d:	77 ab                	ja     1daba <std::backtrace_rs::symbolize::gimli::resolve+0x129a>
   1db0f:	4c 39 10             	cmp    %r10,(%rax)
   1db12:	73 a6                	jae    1daba <std::backtrace_rs::symbolize::gimli::resolve+0x129a>
   1db14:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   1db19:	4c 8b 4c 0a 08       	mov    0x8(%rdx,%rcx,1),%r9
   1db1e:	4c 8b 44 0a 18       	mov    0x18(%rdx,%rcx,1),%r8
   1db23:	f3 0f 6f 00          	movdqu (%rax),%xmm0
   1db27:	0f 10 48 10          	movups 0x10(%rax),%xmm1
   1db2b:	41 0f 11 4b 10       	movups %xmm1,0x10(%r11)
   1db30:	f3 41 0f 7f 03       	movdqu %xmm0,(%r11)
   1db35:	48 83 fe 03          	cmp    $0x3,%rsi
   1db39:	0f 82 6c ff ff ff    	jb     1daab <std::backtrace_rs::symbolize::gimli::resolve+0x128b>
   1db3f:	4c 89 fe             	mov    %r15,%rsi
   1db42:	4c 89 f0             	mov    %r14,%rax
   1db45:	eb 1f                	jmp    1db66 <std::backtrace_rs::symbolize::gimli::resolve+0x1346>
   1db47:	f3 0f 6f 40 20       	movdqu 0x20(%rax),%xmm0
   1db4c:	0f 10 48 30          	movups 0x30(%rax),%xmm1
   1db50:	0f 11 48 10          	movups %xmm1,0x10(%rax)
   1db54:	f3 0f 7f 00          	movdqu %xmm0,(%rax)
   1db58:	48 83 c0 20          	add    $0x20,%rax
   1db5c:	48 83 c6 ff          	add    $0xffffffffffffffff,%rsi
   1db60:	0f 84 45 ff ff ff    	je     1daab <std::backtrace_rs::symbolize::gimli::resolve+0x128b>
   1db66:	4c 39 60 30          	cmp    %r12,0x30(%rax)
   1db6a:	72 db                	jb     1db47 <std::backtrace_rs::symbolize::gimli::resolve+0x1327>
   1db6c:	0f 87 39 ff ff ff    	ja     1daab <std::backtrace_rs::symbolize::gimli::resolve+0x128b>
   1db72:	4c 39 50 20          	cmp    %r10,0x20(%rax)
   1db76:	72 cf                	jb     1db47 <std::backtrace_rs::symbolize::gimli::resolve+0x1327>
   1db78:	e9 2e ff ff ff       	jmpq   1daab <std::backtrace_rs::symbolize::gimli::resolve+0x128b>
   1db7d:	48 89 d3             	mov    %rdx,%rbx
   1db80:	49 89 c4             	mov    %rax,%r12
   1db83:	48 8b b4 24 e8 00 00 	mov    0xe8(%rsp),%rsi
   1db8a:	00 
   1db8b:	48 85 f6             	test   %rsi,%rsi
   1db8e:	74 1e                	je     1dbae <std::backtrace_rs::symbolize::gimli::resolve+0x138e>
   1db90:	48 8b bc 24 e0 00 00 	mov    0xe0(%rsp),%rdi
   1db97:	00 
   1db98:	48 85 ff             	test   %rdi,%rdi
   1db9b:	74 11                	je     1dbae <std::backtrace_rs::symbolize::gimli::resolve+0x138e>
   1db9d:	48 c1 e6 05          	shl    $0x5,%rsi
   1dba1:	74 0b                	je     1dbae <std::backtrace_rs::symbolize::gimli::resolve+0x138e>
   1dba3:	ba 08 00 00 00       	mov    $0x8,%edx
   1dba8:	ff 15 52 80 02 00    	callq  *0x28052(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   1dbae:	48 8b 84 24 20 01 00 	mov    0x120(%rsp),%rax
   1dbb5:	00 
   1dbb6:	48 85 c0             	test   %rax,%rax
   1dbb9:	74 25                	je     1dbe0 <std::backtrace_rs::symbolize::gimli::resolve+0x13c0>
   1dbbb:	48 8b bc 24 18 01 00 	mov    0x118(%rsp),%rdi
   1dbc2:	00 
   1dbc3:	48 85 ff             	test   %rdi,%rdi
   1dbc6:	74 18                	je     1dbe0 <std::backtrace_rs::symbolize::gimli::resolve+0x13c0>
   1dbc8:	48 c1 e0 03          	shl    $0x3,%rax
   1dbcc:	48 8d 34 80          	lea    (%rax,%rax,4),%rsi
   1dbd0:	48 85 f6             	test   %rsi,%rsi
   1dbd3:	74 0b                	je     1dbe0 <std::backtrace_rs::symbolize::gimli::resolve+0x13c0>
   1dbd5:	ba 08 00 00 00       	mov    $0x8,%edx
   1dbda:	ff 15 20 80 02 00    	callq  *0x28020(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   1dbe0:	48 89 5c 24 40       	mov    %rbx,0x40(%rsp)
   1dbe5:	eb 1b                	jmp    1dc02 <std::backtrace_rs::symbolize::gimli::resolve+0x13e2>
   1dbe7:	48 8b 9c 24 78 01 00 	mov    0x178(%rsp),%rbx
   1dbee:	00 
   1dbef:	4c 8b b4 24 80 01 00 	mov    0x180(%rsp),%r14
   1dbf6:	00 
   1dbf7:	49 89 dc             	mov    %rbx,%r12
   1dbfa:	4c 89 f0             	mov    %r14,%rax
   1dbfd:	4c 89 74 24 40       	mov    %r14,0x40(%rsp)
   1dc02:	4c 8b 74 24 30       	mov    0x30(%rsp),%r14
   1dc07:	44 8b 7c 24 1c       	mov    0x1c(%rsp),%r15d
   1dc0c:	4c 8b 6c 24 70       	mov    0x70(%rsp),%r13
   1dc11:	4c 8b 54 24 68       	mov    0x68(%rsp),%r10
   1dc16:	eb 07                	jmp    1dc1f <std::backtrace_rs::symbolize::gimli::resolve+0x13ff>
   1dc18:	31 c0                	xor    %eax,%eax
   1dc1a:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1dc1f:	4c 8b 4c 24 78       	mov    0x78(%rsp),%r9
   1dc24:	49 8b 01             	mov    (%r9),%rax
   1dc27:	48 83 f8 02          	cmp    $0x2,%rax
   1dc2b:	75 38                	jne    1dc65 <std::backtrace_rs::symbolize::gimli::resolve+0x1445>
   1dc2d:	b8 01 00 00 00       	mov    $0x1,%eax
   1dc32:	49 89 01             	mov    %rax,(%r9)
   1dc35:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   1dc3a:	4b 89 44 d5 18       	mov    %rax,0x18(%r13,%r10,8)
   1dc3f:	4f 89 64 d5 10       	mov    %r12,0x10(%r13,%r10,8)
   1dc44:	4b 89 4c d5 20       	mov    %rcx,0x20(%r13,%r10,8)
   1dc49:	4b 89 54 d5 28       	mov    %rdx,0x28(%r13,%r10,8)
   1dc4e:	4f 89 7c d5 30       	mov    %r15,0x30(%r13,%r10,8)
   1dc53:	4b 89 74 d5 38       	mov    %rsi,0x38(%r13,%r10,8)
   1dc58:	4b 89 5c d5 40       	mov    %rbx,0x40(%r13,%r10,8)
   1dc5d:	49 8b 01             	mov    (%r9),%rax
   1dc60:	44 8b 7c 24 1c       	mov    0x1c(%rsp),%r15d
   1dc65:	48 85 c0             	test   %rax,%rax
   1dc68:	0f 85 12 f2 ff ff    	jne    1ce80 <std::backtrace_rs::symbolize::gimli::resolve+0x660>
   1dc6e:	44 89 7c 24 1c       	mov    %r15d,0x1c(%rsp)
   1dc73:	4e 8d 34 d5 10 00 00 	lea    0x10(,%r10,8),%r14
   1dc7a:	00 
   1dc7b:	4d 01 ee             	add    %r13,%r14
   1dc7e:	48 c7 84 24 70 01 00 	movq   $0x8,0x170(%rsp)
   1dc85:	00 08 00 00 00 
   1dc8a:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1dc8e:	f3 0f 7f 84 24 78 01 	movdqu %xmm0,0x178(%rsp)
   1dc95:	00 00 
   1dc97:	4f 8b 7c d5 38       	mov    0x38(%r13,%r10,8),%r15
   1dc9c:	4f 8b 4c d5 40       	mov    0x40(%r13,%r10,8),%r9
   1dca1:	31 f6                	xor    %esi,%esi
   1dca3:	bf 08 00 00 00       	mov    $0x8,%edi
   1dca8:	45 31 ed             	xor    %r13d,%r13d
   1dcab:	4c 8b 54 24 50       	mov    0x50(%rsp),%r10
   1dcb0:	eb 1e                	jmp    1dcd0 <std::backtrace_rs::symbolize::gimli::resolve+0x14b0>
   1dcb2:	4a 89 1c ef          	mov    %rbx,(%rdi,%r13,8)
   1dcb6:	49 83 c5 01          	add    $0x1,%r13
   1dcba:	4c 89 ac 24 80 01 00 	mov    %r13,0x180(%rsp)
   1dcc1:	00 
   1dcc2:	49 83 c4 01          	add    $0x1,%r12
   1dcc6:	4d 29 e1             	sub    %r12,%r9
   1dcc9:	49 c1 e4 05          	shl    $0x5,%r12
   1dccd:	4d 01 e7             	add    %r12,%r15
   1dcd0:	49 83 f9 01          	cmp    $0x1,%r9
   1dcd4:	74 44                	je     1dd1a <std::backtrace_rs::symbolize::gimli::resolve+0x14fa>
   1dcd6:	4d 85 c9             	test   %r9,%r9
   1dcd9:	0f 84 61 01 00 00    	je     1de40 <std::backtrace_rs::symbolize::gimli::resolve+0x1620>
   1dcdf:	4c 89 c8             	mov    %r9,%rax
   1dce2:	45 31 e4             	xor    %r12d,%r12d
   1dce5:	eb 0c                	jmp    1dcf3 <std::backtrace_rs::symbolize::gimli::resolve+0x14d3>
   1dce7:	4d 89 c4             	mov    %r8,%r12
   1dcea:	48 29 c8             	sub    %rcx,%rax
   1dced:	48 83 f8 01          	cmp    $0x1,%rax
   1dcf1:	76 2a                	jbe    1dd1d <std::backtrace_rs::symbolize::gimli::resolve+0x14fd>
   1dcf3:	48 89 c1             	mov    %rax,%rcx
   1dcf6:	48 d1 e9             	shr    %rcx
   1dcf9:	4e 8d 04 21          	lea    (%rcx,%r12,1),%r8
   1dcfd:	4c 89 c2             	mov    %r8,%rdx
   1dd00:	48 c1 e2 05          	shl    $0x5,%rdx
   1dd04:	4d 39 6c 17 10       	cmp    %r13,0x10(%r15,%rdx,1)
   1dd09:	77 df                	ja     1dcea <std::backtrace_rs::symbolize::gimli::resolve+0x14ca>
   1dd0b:	72 da                	jb     1dce7 <std::backtrace_rs::symbolize::gimli::resolve+0x14c7>
   1dd0d:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
   1dd12:	49 39 1c 17          	cmp    %rbx,(%r15,%rdx,1)
   1dd16:	76 cf                	jbe    1dce7 <std::backtrace_rs::symbolize::gimli::resolve+0x14c7>
   1dd18:	eb d0                	jmp    1dcea <std::backtrace_rs::symbolize::gimli::resolve+0x14ca>
   1dd1a:	45 31 e4             	xor    %r12d,%r12d
   1dd1d:	4c 89 e0             	mov    %r12,%rax
   1dd20:	48 c1 e0 05          	shl    $0x5,%rax
   1dd24:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   1dd29:	49 39 4c 07 08       	cmp    %rcx,0x8(%r15,%rax,1)
   1dd2e:	0f 86 0c 01 00 00    	jbe    1de40 <std::backtrace_rs::symbolize::gimli::resolve+0x1620>
   1dd34:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   1dd39:	49 39 0c 07          	cmp    %rcx,(%r15,%rax,1)
   1dd3d:	0f 87 fd 00 00 00    	ja     1de40 <std::backtrace_rs::symbolize::gimli::resolve+0x1620>
   1dd43:	4d 39 6c 07 10       	cmp    %r13,0x10(%r15,%rax,1)
   1dd48:	0f 85 f2 00 00 00    	jne    1de40 <std::backtrace_rs::symbolize::gimli::resolve+0x1620>
   1dd4e:	4d 39 cc             	cmp    %r9,%r12
   1dd51:	0f 83 9d 0a 00 00    	jae    1e7f4 <std::backtrace_rs::symbolize::gimli::resolve+0x1fd4>
   1dd57:	49 8b 44 07 18       	mov    0x18(%r15,%rax,1),%rax
   1dd5c:	49 8b 4e 20          	mov    0x20(%r14),%rcx
   1dd60:	48 39 c8             	cmp    %rcx,%rax
   1dd63:	0f 83 a0 0a 00 00    	jae    1e809 <std::backtrace_rs::symbolize::gimli::resolve+0x1fe9>
   1dd69:	48 8d 1c 80          	lea    (%rax,%rax,4),%rbx
   1dd6d:	48 c1 e3 03          	shl    $0x3,%rbx
   1dd71:	49 03 5e 18          	add    0x18(%r14),%rbx
   1dd75:	49 39 f5             	cmp    %rsi,%r13
   1dd78:	0f 85 34 ff ff ff    	jne    1dcb2 <std::backtrace_rs::symbolize::gimli::resolve+0x1492>
   1dd7e:	48 89 f0             	mov    %rsi,%rax
   1dd81:	48 ff c0             	inc    %rax
   1dd84:	0f 84 94 0a 00 00    	je     1e81e <std::backtrace_rs::symbolize::gimli::resolve+0x1ffe>
   1dd8a:	48 8d 0c 36          	lea    (%rsi,%rsi,1),%rcx
   1dd8e:	48 39 c1             	cmp    %rax,%rcx
   1dd91:	48 0f 47 c1          	cmova  %rcx,%rax
   1dd95:	48 83 f8 04          	cmp    $0x4,%rax
   1dd99:	b9 04 00 00 00       	mov    $0x4,%ecx
   1dd9e:	48 0f 46 c1          	cmovbe %rcx,%rax
   1dda2:	31 c9                	xor    %ecx,%ecx
   1dda4:	ba 08 00 00 00       	mov    $0x8,%edx
   1dda9:	48 f7 e2             	mul    %rdx
   1ddac:	0f 90 c2             	seto   %dl
   1ddaf:	0f 91 c1             	setno  %cl
   1ddb2:	48 c1 e1 03          	shl    $0x3,%rcx
   1ddb6:	48 85 f6             	test   %rsi,%rsi
   1ddb9:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1ddbe:	74 24                	je     1dde4 <std::backtrace_rs::symbolize::gimli::resolve+0x15c4>
   1ddc0:	84 d2                	test   %dl,%dl
   1ddc2:	0f 85 56 0a 00 00    	jne    1e81e <std::backtrace_rs::symbolize::gimli::resolve+0x1ffe>
   1ddc8:	48 c1 e6 03          	shl    $0x3,%rsi
   1ddcc:	48 85 f6             	test   %rsi,%rsi
   1ddcf:	74 22                	je     1ddf3 <std::backtrace_rs::symbolize::gimli::resolve+0x15d3>
   1ddd1:	48 89 ca             	mov    %rcx,%rdx
   1ddd4:	48 89 c1             	mov    %rax,%rcx
   1ddd7:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   1dddc:	ff 15 96 81 02 00    	callq  *0x28196(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
   1dde2:	eb 25                	jmp    1de09 <std::backtrace_rs::symbolize::gimli::resolve+0x15e9>
   1dde4:	84 d2                	test   %dl,%dl
   1dde6:	0f 85 32 0a 00 00    	jne    1e81e <std::backtrace_rs::symbolize::gimli::resolve+0x1ffe>
   1ddec:	48 85 c0             	test   %rax,%rax
   1ddef:	74 25                	je     1de16 <std::backtrace_rs::symbolize::gimli::resolve+0x15f6>
   1ddf1:	eb 05                	jmp    1ddf8 <std::backtrace_rs::symbolize::gimli::resolve+0x15d8>
   1ddf3:	48 85 c0             	test   %rax,%rax
   1ddf6:	74 1e                	je     1de16 <std::backtrace_rs::symbolize::gimli::resolve+0x15f6>
   1ddf8:	48 89 c7             	mov    %rax,%rdi
   1ddfb:	48 89 ce             	mov    %rcx,%rsi
   1ddfe:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   1de03:	ff 15 7f 7d 02 00    	callq  *0x27d7f(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   1de09:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   1de0e:	4c 8b 54 24 50       	mov    0x50(%rsp),%r10
   1de13:	48 89 c1             	mov    %rax,%rcx
   1de16:	48 85 c9             	test   %rcx,%rcx
   1de19:	0f 84 07 0a 00 00    	je     1e826 <std::backtrace_rs::symbolize::gimli::resolve+0x2006>
   1de1f:	48 89 8c 24 70 01 00 	mov    %rcx,0x170(%rsp)
   1de26:	00 
   1de27:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   1de2c:	48 c1 ee 03          	shr    $0x3,%rsi
   1de30:	48 89 b4 24 78 01 00 	mov    %rsi,0x178(%rsp)
   1de37:	00 
   1de38:	48 89 cf             	mov    %rcx,%rdi
   1de3b:	e9 72 fe ff ff       	jmpq   1dcb2 <std::backtrace_rs::symbolize::gimli::resolve+0x1492>
   1de40:	4a 8d 04 ef          	lea    (%rdi,%r13,8),%rax
   1de44:	44 8b 4c 24 1c       	mov    0x1c(%rsp),%r9d
   1de49:	4c 8b bc 24 88 00 00 	mov    0x88(%rsp),%r15
   1de50:	00 
   1de51:	48 8b 94 24 50 01 00 	mov    0x150(%rsp),%rdx
   1de58:	00 
   1de59:	44 8b 84 24 dc 00 00 	mov    0xdc(%rsp),%r8d
   1de60:	00 
   1de61:	48 8b 9c 24 00 01 00 	mov    0x100(%rsp),%rbx
   1de68:	00 
   1de69:	44 8b 9c 24 d8 00 00 	mov    0xd8(%rsp),%r11d
   1de70:	00 
   1de71:	8b 8c 24 d4 00 00 00 	mov    0xd4(%rsp),%ecx
   1de78:	e9 8d ef ff ff       	jmpq   1ce0a <std::backtrace_rs::symbolize::gimli::resolve+0x5ea>
   1de7d:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   1de82:	48 d1 e8             	shr    %rax
   1de85:	b9 20 00 00 00       	mov    $0x20,%ecx
   1de8a:	31 db                	xor    %ebx,%ebx
   1de8c:	48 f7 e1             	mul    %rcx
   1de8f:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   1de94:	0f 91 c0             	setno  %al
   1de97:	0f 80 cf 0a 00 00    	jo     1e96c <std::backtrace_rs::symbolize::gimli::resolve+0x214c>
   1de9d:	88 c3                	mov    %al,%bl
   1de9f:	48 c1 e3 03          	shl    $0x3,%rbx
   1dea3:	48 83 7c 24 60 00    	cmpq   $0x0,0x60(%rsp)
   1dea9:	74 15                	je     1dec0 <std::backtrace_rs::symbolize::gimli::resolve+0x16a0>
   1deab:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   1deb0:	48 89 de             	mov    %rbx,%rsi
   1deb3:	ff 15 cf 7c 02 00    	callq  *0x27ccf(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   1deb9:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1debe:	eb 05                	jmp    1dec5 <std::backtrace_rs::symbolize::gimli::resolve+0x16a5>
   1dec0:	48 89 5c 24 48       	mov    %rbx,0x48(%rsp)
   1dec5:	48 83 7c 24 48 00    	cmpq   $0x0,0x48(%rsp)
   1decb:	0f 84 a6 0a 00 00    	je     1e977 <std::backtrace_rs::symbolize::gimli::resolve+0x2157>
   1ded1:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   1ded6:	48 c1 e8 05          	shr    $0x5,%rax
   1deda:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
   1dedf:	48 89 8c 24 10 06 00 	mov    %rcx,0x610(%rsp)
   1dee6:	00 
   1dee7:	48 89 84 24 18 06 00 	mov    %rax,0x618(%rsp)
   1deee:	00 
   1deef:	48 c7 84 24 20 06 00 	movq   $0x0,0x620(%rsp)
   1def6:	00 00 00 00 00 
   1defb:	48 c7 84 24 98 04 00 	movq   $0x8,0x498(%rsp)
   1df02:	00 08 00 00 00 
   1df07:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1df0b:	f3 0f 7f 84 24 a0 04 	movdqu %xmm0,0x4a0(%rsp)
   1df12:	00 00 
   1df14:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   1df19:	48 8d 48 b0          	lea    -0x50(%rax),%rcx
   1df1d:	48 89 8c 24 30 01 00 	mov    %rcx,0x130(%rsp)
   1df24:	00 
   1df25:	48 8d 48 c0          	lea    -0x40(%rax),%rcx
   1df29:	48 89 8c 24 40 01 00 	mov    %rcx,0x140(%rsp)
   1df30:	00 
   1df31:	48 83 c0 e0          	add    $0xffffffffffffffe0,%rax
   1df35:	48 89 84 24 f8 00 00 	mov    %rax,0xf8(%rsp)
   1df3c:	00 
   1df3d:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
   1df42:	eb 11                	jmp    1df55 <std::backtrace_rs::symbolize::gimli::resolve+0x1735>
   1df44:	48 8b b4 24 48 01 00 	mov    0x148(%rsp),%rsi
   1df4b:	00 
   1df4c:	48 85 f6             	test   %rsi,%rsi
   1df4f:	0f 84 30 06 00 00    	je     1e585 <std::backtrace_rs::symbolize::gimli::resolve+0x1d65>
   1df55:	49 89 f0             	mov    %rsi,%r8
   1df58:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   1df5c:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
   1df61:	74 6e                	je     1dfd1 <std::backtrace_rs::symbolize::gimli::resolve+0x17b1>
   1df63:	48 8d 7e fe          	lea    -0x2(%rsi),%rdi
   1df67:	4c 89 c0             	mov    %r8,%rax
   1df6a:	48 c1 e0 05          	shl    $0x5,%rax
   1df6e:	48 89 fa             	mov    %rdi,%rdx
   1df71:	48 c1 e2 05          	shl    $0x5,%rdx
   1df75:	48 8b 4c 13 10       	mov    0x10(%rbx,%rdx,1),%rcx
   1df7a:	48 39 4c 03 10       	cmp    %rcx,0x10(%rbx,%rax,1)
   1df7f:	72 14                	jb     1df95 <std::backtrace_rs::symbolize::gimli::resolve+0x1775>
   1df81:	4c 8b 0c 13          	mov    (%rbx,%rdx,1),%r9
   1df85:	0f 87 a0 05 00 00    	ja     1e52b <std::backtrace_rs::symbolize::gimli::resolve+0x1d0b>
   1df8b:	4c 39 0c 03          	cmp    %r9,(%rbx,%rax,1)
   1df8f:	0f 83 96 05 00 00    	jae    1e52b <std::backtrace_rs::symbolize::gimli::resolve+0x1d0b>
   1df95:	48 85 ff             	test   %rdi,%rdi
   1df98:	74 43                	je     1dfdd <std::backtrace_rs::symbolize::gimli::resolve+0x17bd>
   1df9a:	48 89 f0             	mov    %rsi,%rax
   1df9d:	48 c1 e0 05          	shl    $0x5,%rax
   1dfa1:	48 03 84 24 40 01 00 	add    0x140(%rsp),%rax
   1dfa8:	00 
   1dfa9:	eb 0d                	jmp    1dfb8 <std::backtrace_rs::symbolize::gimli::resolve+0x1798>
   1dfab:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   1dfaf:	48 83 c0 e0          	add    $0xffffffffffffffe0,%rax
   1dfb3:	48 85 ff             	test   %rdi,%rdi
   1dfb6:	74 25                	je     1dfdd <std::backtrace_rs::symbolize::gimli::resolve+0x17bd>
   1dfb8:	48 89 ca             	mov    %rcx,%rdx
   1dfbb:	48 8b 48 f0          	mov    -0x10(%rax),%rcx
   1dfbf:	48 39 ca             	cmp    %rcx,%rdx
   1dfc2:	72 e7                	jb     1dfab <std::backtrace_rs::symbolize::gimli::resolve+0x178b>
   1dfc4:	77 19                	ja     1dfdf <std::backtrace_rs::symbolize::gimli::resolve+0x17bf>
   1dfc6:	48 8b 50 e0          	mov    -0x20(%rax),%rdx
   1dfca:	48 39 10             	cmp    %rdx,(%rax)
   1dfcd:	72 dc                	jb     1dfab <std::backtrace_rs::symbolize::gimli::resolve+0x178b>
   1dfcf:	eb 0e                	jmp    1dfdf <std::backtrace_rs::symbolize::gimli::resolve+0x17bf>
   1dfd1:	ba 01 00 00 00       	mov    $0x1,%edx
   1dfd6:	31 c0                	xor    %eax,%eax
   1dfd8:	e9 98 01 00 00       	jmpq   1e175 <std::backtrace_rs::symbolize::gimli::resolve+0x1955>
   1dfdd:	31 ff                	xor    %edi,%edi
   1dfdf:	48 89 f2             	mov    %rsi,%rdx
   1dfe2:	48 29 fa             	sub    %rdi,%rdx
   1dfe5:	0f 82 f0 08 00 00    	jb     1e8db <std::backtrace_rs::symbolize::gimli::resolve+0x20bb>
   1dfeb:	48 3b 74 24 38       	cmp    0x38(%rsp),%rsi
   1dff0:	0f 87 21 09 00 00    	ja     1e917 <std::backtrace_rs::symbolize::gimli::resolve+0x20f7>
   1dff6:	48 89 d0             	mov    %rdx,%rax
   1dff9:	48 d1 e8             	shr    %rax
   1dffc:	74 67                	je     1e065 <std::backtrace_rs::symbolize::gimli::resolve+0x1845>
   1dffe:	48 89 f1             	mov    %rsi,%rcx
   1e001:	48 c1 e1 05          	shl    $0x5,%rcx
   1e005:	48 03 8c 24 f8 00 00 	add    0xf8(%rsp),%rcx
   1e00c:	00 
   1e00d:	48 89 fb             	mov    %rdi,%rbx
   1e010:	48 c1 e3 05          	shl    $0x5,%rbx
   1e014:	48 03 5c 24 20       	add    0x20(%rsp),%rbx
   1e019:	0f 10 03             	movups (%rbx),%xmm0
   1e01c:	0f 10 4b 10          	movups 0x10(%rbx),%xmm1
   1e020:	0f 29 8c 24 80 01 00 	movaps %xmm1,0x180(%rsp)
   1e027:	00 
   1e028:	0f 29 84 24 70 01 00 	movaps %xmm0,0x170(%rsp)
   1e02f:	00 
   1e030:	0f 10 01             	movups (%rcx),%xmm0
   1e033:	0f 10 49 10          	movups 0x10(%rcx),%xmm1
   1e037:	0f 11 03             	movups %xmm0,(%rbx)
   1e03a:	0f 11 4b 10          	movups %xmm1,0x10(%rbx)
   1e03e:	66 0f 6f 84 24 70 01 	movdqa 0x170(%rsp),%xmm0
   1e045:	00 00 
   1e047:	0f 28 8c 24 80 01 00 	movaps 0x180(%rsp),%xmm1
   1e04e:	00 
   1e04f:	0f 11 49 10          	movups %xmm1,0x10(%rcx)
   1e053:	f3 0f 7f 01          	movdqu %xmm0,(%rcx)
   1e057:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
   1e05b:	48 83 c3 20          	add    $0x20,%rbx
   1e05f:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
   1e063:	75 b4                	jne    1e019 <std::backtrace_rs::symbolize::gimli::resolve+0x17f9>
   1e065:	48 83 fa 09          	cmp    $0x9,%rdx
   1e069:	0f 87 03 01 00 00    	ja     1e172 <std::backtrace_rs::symbolize::gimli::resolve+0x1952>
   1e06f:	48 85 ff             	test   %rdi,%rdi
   1e072:	0f 84 fa 00 00 00    	je     1e172 <std::backtrace_rs::symbolize::gimli::resolve+0x1952>
   1e078:	48 3b 74 24 38       	cmp    0x38(%rsp),%rsi
   1e07d:	0f 87 ae 08 00 00    	ja     1e931 <std::backtrace_rs::symbolize::gimli::resolve+0x2111>
   1e083:	49 89 fe             	mov    %rdi,%r14
   1e086:	49 c1 e6 05          	shl    $0x5,%r14
   1e08a:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
   1e08f:	49 01 de             	add    %rbx,%r14
   1e092:	48 8d 47 ff          	lea    -0x1(%rdi),%rax
   1e096:	48 89 f2             	mov    %rsi,%rdx
   1e099:	48 29 c2             	sub    %rax,%rdx
   1e09c:	0f 82 9b 08 00 00    	jb     1e93d <std::backtrace_rs::symbolize::gimli::resolve+0x211d>
   1e0a2:	48 83 fa 02          	cmp    $0x2,%rdx
   1e0a6:	0f 82 ae 00 00 00    	jb     1e15a <std::backtrace_rs::symbolize::gimli::resolve+0x193a>
   1e0ac:	49 89 c2             	mov    %rax,%r10
   1e0af:	49 c1 e2 05          	shl    $0x5,%r10
   1e0b3:	4e 8d 3c 13          	lea    (%rbx,%r10,1),%r15
   1e0b7:	48 89 fb             	mov    %rdi,%rbx
   1e0ba:	48 c1 e3 05          	shl    $0x5,%rbx
   1e0be:	49 89 c5             	mov    %rax,%r13
   1e0c1:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   1e0c6:	48 8d 0c 18          	lea    (%rax,%rbx,1),%rcx
   1e0ca:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   1e0cf:	4e 8b 64 10 10       	mov    0x10(%rax,%r10,1),%r12
   1e0d4:	4d 8b 0f             	mov    (%r15),%r9
   1e0d7:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   1e0dc:	4c 39 64 18 10       	cmp    %r12,0x10(%rax,%rbx,1)
   1e0e1:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
   1e0e6:	72 0a                	jb     1e0f2 <std::backtrace_rs::symbolize::gimli::resolve+0x18d2>
   1e0e8:	4c 89 e8             	mov    %r13,%rax
   1e0eb:	77 6d                	ja     1e15a <std::backtrace_rs::symbolize::gimli::resolve+0x193a>
   1e0ed:	4c 39 09             	cmp    %r9,(%rcx)
   1e0f0:	73 68                	jae    1e15a <std::backtrace_rs::symbolize::gimli::resolve+0x193a>
   1e0f2:	4e 8b 5c 13 08       	mov    0x8(%rbx,%r10,1),%r11
   1e0f7:	4e 8b 54 13 18       	mov    0x18(%rbx,%r10,1),%r10
   1e0fc:	f3 0f 6f 01          	movdqu (%rcx),%xmm0
   1e100:	0f 10 49 10          	movups 0x10(%rcx),%xmm1
   1e104:	41 0f 11 4f 10       	movups %xmm1,0x10(%r15)
   1e109:	f3 41 0f 7f 07       	movdqu %xmm0,(%r15)
   1e10e:	48 83 fa 03          	cmp    $0x3,%rdx
   1e112:	72 34                	jb     1e148 <std::backtrace_rs::symbolize::gimli::resolve+0x1928>
   1e114:	4c 89 c0             	mov    %r8,%rax
   1e117:	4c 89 f1             	mov    %r14,%rcx
   1e11a:	eb 1e                	jmp    1e13a <std::backtrace_rs::symbolize::gimli::resolve+0x191a>
   1e11c:	f3 0f 6f 41 20       	movdqu 0x20(%rcx),%xmm0
   1e121:	0f 10 49 30          	movups 0x30(%rcx),%xmm1
   1e125:	0f 11 49 10          	movups %xmm1,0x10(%rcx)
   1e129:	f3 0f 7f 01          	movdqu %xmm0,(%rcx)
   1e12d:	48 83 c1 20          	add    $0x20,%rcx
   1e131:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
   1e135:	48 39 c7             	cmp    %rax,%rdi
   1e138:	74 0e                	je     1e148 <std::backtrace_rs::symbolize::gimli::resolve+0x1928>
   1e13a:	4c 39 61 30          	cmp    %r12,0x30(%rcx)
   1e13e:	72 dc                	jb     1e11c <std::backtrace_rs::symbolize::gimli::resolve+0x18fc>
   1e140:	77 06                	ja     1e148 <std::backtrace_rs::symbolize::gimli::resolve+0x1928>
   1e142:	4c 39 49 20          	cmp    %r9,0x20(%rcx)
   1e146:	72 d4                	jb     1e11c <std::backtrace_rs::symbolize::gimli::resolve+0x18fc>
   1e148:	4c 89 09             	mov    %r9,(%rcx)
   1e14b:	4c 89 59 08          	mov    %r11,0x8(%rcx)
   1e14f:	4c 89 61 10          	mov    %r12,0x10(%rcx)
   1e153:	4c 89 51 18          	mov    %r10,0x18(%rcx)
   1e157:	4c 89 e8             	mov    %r13,%rax
   1e15a:	48 85 c0             	test   %rax,%rax
   1e15d:	74 16                	je     1e175 <std::backtrace_rs::symbolize::gimli::resolve+0x1955>
   1e15f:	49 83 c6 e0          	add    $0xffffffffffffffe0,%r14
   1e163:	48 89 c7             	mov    %rax,%rdi
   1e166:	48 83 fa 0a          	cmp    $0xa,%rdx
   1e16a:	0f 82 22 ff ff ff    	jb     1e092 <std::backtrace_rs::symbolize::gimli::resolve+0x1872>
   1e170:	eb 03                	jmp    1e175 <std::backtrace_rs::symbolize::gimli::resolve+0x1955>
   1e172:	48 89 f8             	mov    %rdi,%rax
   1e175:	48 8d bc 24 98 04 00 	lea    0x498(%rsp),%rdi
   1e17c:	00 
   1e17d:	48 89 84 24 48 01 00 	mov    %rax,0x148(%rsp)
   1e184:	00 
   1e185:	48 89 c6             	mov    %rax,%rsi
   1e188:	e8 43 b2 fe ff       	callq  93d0 <alloc::vec::Vec<T>::push>
   1e18d:	48 8b 84 24 a8 04 00 	mov    0x4a8(%rsp),%rax
   1e194:	00 
   1e195:	48 83 f8 02          	cmp    $0x2,%rax
   1e199:	0f 82 a5 fd ff ff    	jb     1df44 <std::backtrace_rs::symbolize::gimli::resolve+0x1724>
   1e19f:	4c 8b bc 24 98 04 00 	mov    0x498(%rsp),%r15
   1e1a6:	00 
   1e1a7:	4c 89 bc 24 90 00 00 	mov    %r15,0x90(%rsp)
   1e1ae:	00 
   1e1af:	e9 89 00 00 00       	jmpq   1e23d <std::backtrace_rs::symbolize::gimli::resolve+0x1a1d>
   1e1b4:	4c 89 ef             	mov    %r13,%rdi
   1e1b7:	4c 89 f6             	mov    %r14,%rsi
   1e1ba:	4c 8b b4 24 80 00 00 	mov    0x80(%rsp),%r14
   1e1c1:	00 
   1e1c2:	48 29 f2             	sub    %rsi,%rdx
   1e1c5:	48 83 e2 e0          	and    $0xffffffffffffffe0,%rdx
   1e1c9:	ff 15 31 7b 02 00    	callq  *0x27b31(%rip)        # 45d00 <memcpy@GLIBC_2.14>
   1e1cf:	48 8b 8c 24 68 01 00 	mov    0x168(%rsp),%rcx
   1e1d6:	00 
   1e1d7:	48 03 4c 24 10       	add    0x10(%rsp),%rcx
   1e1dc:	48 8b 84 24 b0 00 00 	mov    0xb0(%rsp),%rax
   1e1e3:	00 
   1e1e4:	49 89 06             	mov    %rax,(%r14)
   1e1e7:	48 8b 84 24 58 01 00 	mov    0x158(%rsp),%rax
   1e1ee:	00 
   1e1ef:	48 89 08             	mov    %rcx,(%rax)
   1e1f2:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
   1e1f9:	00 
   1e1fa:	49 8d 3c 07          	lea    (%r15,%rax,1),%rdi
   1e1fe:	49 8d 34 07          	lea    (%r15,%rax,1),%rsi
   1e202:	48 83 c6 10          	add    $0x10,%rsi
   1e206:	48 8b 94 24 c8 00 00 	mov    0xc8(%rsp),%rdx
   1e20d:	00 
   1e20e:	48 f7 d2             	not    %rdx
   1e211:	48 03 94 24 b8 00 00 	add    0xb8(%rsp),%rdx
   1e218:	00 
   1e219:	48 c1 e2 04          	shl    $0x4,%rdx
   1e21d:	ff 15 4d 7c 02 00    	callq  *0x27c4d(%rip)        # 45e70 <memmove@GLIBC_2.2.5>
   1e223:	48 8b 84 24 c0 00 00 	mov    0xc0(%rsp),%rax
   1e22a:	00 
   1e22b:	48 89 84 24 a8 04 00 	mov    %rax,0x4a8(%rsp)
   1e232:	00 
   1e233:	48 83 f8 01          	cmp    $0x1,%rax
   1e237:	0f 86 07 fd ff ff    	jbe    1df44 <std::backtrace_rs::symbolize::gimli::resolve+0x1724>
   1e23d:	48 89 c6             	mov    %rax,%rsi
   1e240:	4c 8d 40 ff          	lea    -0x1(%rax),%r8
   1e244:	4c 89 c3             	mov    %r8,%rbx
   1e247:	48 c1 e3 04          	shl    $0x4,%rbx
   1e24b:	49 83 3c 1f 00       	cmpq   $0x0,(%r15,%rbx,1)
   1e250:	74 52                	je     1e2a4 <std::backtrace_rs::symbolize::gimli::resolve+0x1a84>
   1e252:	48 89 f2             	mov    %rsi,%rdx
   1e255:	48 c1 e2 04          	shl    $0x4,%rdx
   1e259:	4a 8b 44 3a e8       	mov    -0x18(%rdx,%r15,1),%rax
   1e25e:	4d 8b 4c 1f 08       	mov    0x8(%r15,%rbx,1),%r9
   1e263:	4c 39 c8             	cmp    %r9,%rax
   1e266:	76 3c                	jbe    1e2a4 <std::backtrace_rs::symbolize::gimli::resolve+0x1a84>
   1e268:	48 83 fe 02          	cmp    $0x2,%rsi
   1e26c:	0f 86 d2 fc ff ff    	jbe    1df44 <std::backtrace_rs::symbolize::gimli::resolve+0x1724>
   1e272:	48 8d 7e fd          	lea    -0x3(%rsi),%rdi
   1e276:	48 89 f9             	mov    %rdi,%rcx
   1e279:	48 c1 e1 04          	shl    $0x4,%rcx
   1e27d:	49 8b 4c 0f 08       	mov    0x8(%r15,%rcx,1),%rcx
   1e282:	49 8d 1c 01          	lea    (%r9,%rax,1),%rbx
   1e286:	48 39 d9             	cmp    %rbx,%rcx
   1e289:	76 34                	jbe    1e2bf <std::backtrace_rs::symbolize::gimli::resolve+0x1a9f>
   1e28b:	48 83 fe 03          	cmp    $0x3,%rsi
   1e28f:	0f 86 af fc ff ff    	jbe    1df44 <std::backtrace_rs::symbolize::gimli::resolve+0x1724>
   1e295:	48 01 c8             	add    %rcx,%rax
   1e298:	4a 39 44 3a c8       	cmp    %rax,-0x38(%rdx,%r15,1)
   1e29d:	76 20                	jbe    1e2bf <std::backtrace_rs::symbolize::gimli::resolve+0x1a9f>
   1e29f:	e9 a0 fc ff ff       	jmpq   1df44 <std::backtrace_rs::symbolize::gimli::resolve+0x1724>
   1e2a4:	48 83 fe 03          	cmp    $0x3,%rsi
   1e2a8:	72 1a                	jb     1e2c4 <std::backtrace_rs::symbolize::gimli::resolve+0x1aa4>
   1e2aa:	48 8d 7e fd          	lea    -0x3(%rsi),%rdi
   1e2ae:	48 89 f8             	mov    %rdi,%rax
   1e2b1:	48 c1 e0 04          	shl    $0x4,%rax
   1e2b5:	49 8b 4c 07 08       	mov    0x8(%r15,%rax,1),%rcx
   1e2ba:	4d 8b 4c 1f 08       	mov    0x8(%r15,%rbx,1),%r9
   1e2bf:	4c 39 c9             	cmp    %r9,%rcx
   1e2c2:	72 04                	jb     1e2c8 <std::backtrace_rs::symbolize::gimli::resolve+0x1aa8>
   1e2c4:	48 8d 7e fe          	lea    -0x2(%rsi),%rdi
   1e2c8:	48 8d 47 01          	lea    0x1(%rdi),%rax
   1e2cc:	48 39 c6             	cmp    %rax,%rsi
   1e2cf:	0f 86 63 05 00 00    	jbe    1e838 <std::backtrace_rs::symbolize::gimli::resolve+0x2018>
   1e2d5:	48 39 fe             	cmp    %rdi,%rsi
   1e2d8:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   1e2dd:	0f 86 67 05 00 00    	jbe    1e84a <std::backtrace_rs::symbolize::gimli::resolve+0x202a>
   1e2e3:	48 89 c1             	mov    %rax,%rcx
   1e2e6:	48 c1 e1 04          	shl    $0x4,%rcx
   1e2ea:	49 8b 1c 0f          	mov    (%r15,%rcx,1),%rbx
   1e2ee:	48 c1 e7 04          	shl    $0x4,%rdi
   1e2f2:	49 8b 54 3f 08       	mov    0x8(%r15,%rdi,1),%rdx
   1e2f7:	4d 8b 24 3f          	mov    (%r15,%rdi,1),%r12
   1e2fb:	49 01 d4             	add    %rdx,%r12
   1e2fe:	4d 89 e6             	mov    %r12,%r14
   1e301:	49 29 de             	sub    %rbx,%r14
   1e304:	0f 82 4f 05 00 00    	jb     1e859 <std::backtrace_rs::symbolize::gimli::resolve+0x2039>
   1e30a:	4c 3b 64 24 38       	cmp    0x38(%rsp),%r12
   1e30f:	0f 87 59 05 00 00    	ja     1e86e <std::backtrace_rs::symbolize::gimli::resolve+0x204e>
   1e315:	48 89 94 24 68 01 00 	mov    %rdx,0x168(%rsp)
   1e31c:	00 
   1e31d:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
   1e324:	00 
   1e325:	48 89 b4 24 b8 00 00 	mov    %rsi,0xb8(%rsp)
   1e32c:	00 
   1e32d:	4c 89 84 24 c0 00 00 	mov    %r8,0xc0(%rsp)
   1e334:	00 
   1e335:	48 89 8c 24 60 01 00 	mov    %rcx,0x160(%rsp)
   1e33c:	00 
   1e33d:	49 8b 4c 0f 08       	mov    0x8(%r15,%rcx,1),%rcx
   1e342:	49 8d 04 3f          	lea    (%r15,%rdi,1),%rax
   1e346:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   1e34d:	00 
   1e34e:	49 8d 04 3f          	lea    (%r15,%rdi,1),%rax
   1e352:	48 83 c0 08          	add    $0x8,%rax
   1e356:	48 89 84 24 58 01 00 	mov    %rax,0x158(%rsp)
   1e35d:	00 
   1e35e:	48 89 9c 24 b0 00 00 	mov    %rbx,0xb0(%rsp)
   1e365:	00 
   1e366:	48 c1 e3 05          	shl    $0x5,%rbx
   1e36a:	4c 01 cb             	add    %r9,%rbx
   1e36d:	48 89 ca             	mov    %rcx,%rdx
   1e370:	48 c1 e2 05          	shl    $0x5,%rdx
   1e374:	4c 8d 2c 13          	lea    (%rbx,%rdx,1),%r13
   1e378:	49 c1 e4 05          	shl    $0x5,%r12
   1e37c:	4d 89 f7             	mov    %r14,%r15
   1e37f:	49 29 cf             	sub    %rcx,%r15
   1e382:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   1e387:	49 39 cf             	cmp    %rcx,%r15
   1e38a:	48 89 9c 24 a8 00 00 	mov    %rbx,0xa8(%rsp)
   1e391:	00 
   1e392:	0f 83 ae 00 00 00    	jae    1e446 <std::backtrace_rs::symbolize::gimli::resolve+0x1c26>
   1e398:	4c 89 fb             	mov    %r15,%rbx
   1e39b:	48 c1 e3 05          	shl    $0x5,%rbx
   1e39f:	4c 8b 74 24 48       	mov    0x48(%rsp),%r14
   1e3a4:	4c 89 f7             	mov    %r14,%rdi
   1e3a7:	4c 89 ee             	mov    %r13,%rsi
   1e3aa:	48 89 da             	mov    %rbx,%rdx
   1e3ad:	ff 15 4d 79 02 00    	callq  *0x2794d(%rip)        # 45d00 <memcpy@GLIBC_2.14>
   1e3b3:	48 89 da             	mov    %rbx,%rdx
   1e3b6:	4c 01 f2             	add    %r14,%rdx
   1e3b9:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1e3be:	48 85 c0             	test   %rax,%rax
   1e3c1:	0f 8e 30 01 00 00    	jle    1e4f7 <std::backtrace_rs::symbolize::gimli::resolve+0x1cd7>
   1e3c7:	4d 85 ff             	test   %r15,%r15
   1e3ca:	0f 8e 27 01 00 00    	jle    1e4f7 <std::backtrace_rs::symbolize::gimli::resolve+0x1cd7>
   1e3d0:	4c 03 a4 24 f8 00 00 	add    0xf8(%rsp),%r12
   1e3d7:	00 
   1e3d8:	48 89 d0             	mov    %rdx,%rax
   1e3db:	4c 8b bc 24 90 00 00 	mov    0x90(%rsp),%r15
   1e3e2:	00 
   1e3e3:	48 8b bc 24 a8 00 00 	mov    0xa8(%rsp),%rdi
   1e3ea:	00 
   1e3eb:	48 8d 50 e0          	lea    -0x20(%rax),%rdx
   1e3ef:	49 8d 5d e0          	lea    -0x20(%r13),%rbx
   1e3f3:	49 8b 4d f0          	mov    -0x10(%r13),%rcx
   1e3f7:	48 39 48 f0          	cmp    %rcx,-0x10(%rax)
   1e3fb:	72 0d                	jb     1e40a <std::backtrace_rs::symbolize::gimli::resolve+0x1bea>
   1e3fd:	77 42                	ja     1e441 <std::backtrace_rs::symbolize::gimli::resolve+0x1c21>
   1e3ff:	48 8b 33             	mov    (%rbx),%rsi
   1e402:	48 89 d1             	mov    %rdx,%rcx
   1e405:	48 39 32             	cmp    %rsi,(%rdx)
   1e408:	73 09                	jae    1e413 <std::backtrace_rs::symbolize::gimli::resolve+0x1bf3>
   1e40a:	49 89 dd             	mov    %rbx,%r13
   1e40d:	48 89 c2             	mov    %rax,%rdx
   1e410:	48 89 d9             	mov    %rbx,%rcx
   1e413:	f3 0f 6f 01          	movdqu (%rcx),%xmm0
   1e417:	0f 10 49 10          	movups 0x10(%rcx),%xmm1
   1e41b:	41 0f 11 4c 24 10    	movups %xmm1,0x10(%r12)
   1e421:	f3 41 0f 7f 04 24    	movdqu %xmm0,(%r12)
   1e427:	4c 39 ef             	cmp    %r13,%rdi
   1e42a:	0f 83 84 fd ff ff    	jae    1e1b4 <std::backtrace_rs::symbolize::gimli::resolve+0x1994>
   1e430:	49 83 c4 e0          	add    $0xffffffffffffffe0,%r12
   1e434:	48 89 d0             	mov    %rdx,%rax
   1e437:	4c 39 f2             	cmp    %r14,%rdx
   1e43a:	77 af                	ja     1e3eb <std::backtrace_rs::symbolize::gimli::resolve+0x1bcb>
   1e43c:	e9 73 fd ff ff       	jmpq   1e1b4 <std::backtrace_rs::symbolize::gimli::resolve+0x1994>
   1e441:	48 89 d1             	mov    %rdx,%rcx
   1e444:	eb cd                	jmp    1e413 <std::backtrace_rs::symbolize::gimli::resolve+0x1bf3>
   1e446:	4c 8b 7c 24 48       	mov    0x48(%rsp),%r15
   1e44b:	4c 89 ff             	mov    %r15,%rdi
   1e44e:	48 89 de             	mov    %rbx,%rsi
   1e451:	48 89 d3             	mov    %rdx,%rbx
   1e454:	ff 15 a6 78 02 00    	callq  *0x278a6(%rip)        # 45d00 <memcpy@GLIBC_2.14>
   1e45a:	48 89 da             	mov    %rbx,%rdx
   1e45d:	4c 01 fa             	add    %r15,%rdx
   1e460:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1e465:	48 85 c0             	test   %rax,%rax
   1e468:	0f 8e a3 00 00 00    	jle    1e511 <std::backtrace_rs::symbolize::gimli::resolve+0x1cf1>
   1e46e:	49 39 c6             	cmp    %rax,%r14
   1e471:	4c 8b bc 24 90 00 00 	mov    0x90(%rsp),%r15
   1e478:	00 
   1e479:	0f 8e 80 00 00 00    	jle    1e4ff <std::backtrace_rs::symbolize::gimli::resolve+0x1cdf>
   1e47f:	4c 03 64 24 20       	add    0x20(%rsp),%r12
   1e484:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   1e489:	48 89 c6             	mov    %rax,%rsi
   1e48c:	4c 8b b4 24 80 00 00 	mov    0x80(%rsp),%r14
   1e493:	00 
   1e494:	48 8b 9c 24 a8 00 00 	mov    0xa8(%rsp),%rbx
   1e49b:	00 
   1e49c:	48 8b 48 10          	mov    0x10(%rax),%rcx
   1e4a0:	49 39 4d 10          	cmp    %rcx,0x10(%r13)
   1e4a4:	72 0b                	jb     1e4b1 <std::backtrace_rs::symbolize::gimli::resolve+0x1c91>
   1e4a6:	77 15                	ja     1e4bd <std::backtrace_rs::symbolize::gimli::resolve+0x1c9d>
   1e4a8:	48 8b 08             	mov    (%rax),%rcx
   1e4ab:	49 39 4d 00          	cmp    %rcx,0x0(%r13)
   1e4af:	73 0c                	jae    1e4bd <std::backtrace_rs::symbolize::gimli::resolve+0x1c9d>
   1e4b1:	4d 8d 45 20          	lea    0x20(%r13),%r8
   1e4b5:	48 89 c1             	mov    %rax,%rcx
   1e4b8:	4c 89 e8             	mov    %r13,%rax
   1e4bb:	eb 0a                	jmp    1e4c7 <std::backtrace_rs::symbolize::gimli::resolve+0x1ca7>
   1e4bd:	48 8d 70 20          	lea    0x20(%rax),%rsi
   1e4c1:	48 89 f1             	mov    %rsi,%rcx
   1e4c4:	4d 89 e8             	mov    %r13,%r8
   1e4c7:	48 8d 7b 20          	lea    0x20(%rbx),%rdi
   1e4cb:	f3 0f 6f 00          	movdqu (%rax),%xmm0
   1e4cf:	0f 10 48 10          	movups 0x10(%rax),%xmm1
   1e4d3:	0f 11 4b 10          	movups %xmm1,0x10(%rbx)
   1e4d7:	f3 0f 7f 03          	movdqu %xmm0,(%rbx)
   1e4db:	48 39 d1             	cmp    %rdx,%rcx
   1e4de:	0f 83 de fc ff ff    	jae    1e1c2 <std::backtrace_rs::symbolize::gimli::resolve+0x19a2>
   1e4e4:	48 89 c8             	mov    %rcx,%rax
   1e4e7:	48 89 fb             	mov    %rdi,%rbx
   1e4ea:	4d 89 c5             	mov    %r8,%r13
   1e4ed:	4d 39 e0             	cmp    %r12,%r8
   1e4f0:	72 aa                	jb     1e49c <std::backtrace_rs::symbolize::gimli::resolve+0x1c7c>
   1e4f2:	e9 cb fc ff ff       	jmpq   1e1c2 <std::backtrace_rs::symbolize::gimli::resolve+0x19a2>
   1e4f7:	4c 89 ef             	mov    %r13,%rdi
   1e4fa:	4c 89 f6             	mov    %r14,%rsi
   1e4fd:	eb 1f                	jmp    1e51e <std::backtrace_rs::symbolize::gimli::resolve+0x1cfe>
   1e4ff:	48 8b bc 24 a8 00 00 	mov    0xa8(%rsp),%rdi
   1e506:	00 
   1e507:	48 8b 74 24 48       	mov    0x48(%rsp),%rsi
   1e50c:	e9 a9 fc ff ff       	jmpq   1e1ba <std::backtrace_rs::symbolize::gimli::resolve+0x199a>
   1e511:	48 8b bc 24 a8 00 00 	mov    0xa8(%rsp),%rdi
   1e518:	00 
   1e519:	48 8b 74 24 48       	mov    0x48(%rsp),%rsi
   1e51e:	4c 8b bc 24 90 00 00 	mov    0x90(%rsp),%r15
   1e525:	00 
   1e526:	e9 8f fc ff ff       	jmpq   1e1ba <std::backtrace_rs::symbolize::gimli::resolve+0x199a>
   1e52b:	49 89 f3             	mov    %rsi,%r11
   1e52e:	49 c1 e3 05          	shl    $0x5,%r11
   1e532:	4c 03 9c 24 30 01 00 	add    0x130(%rsp),%r11
   1e539:	00 
   1e53a:	41 ba 02 00 00 00    	mov    $0x2,%r10d
   1e540:	48 89 f7             	mov    %rsi,%rdi
   1e543:	4c 29 d7             	sub    %r10,%rdi
   1e546:	74 33                	je     1e57b <std::backtrace_rs::symbolize::gimli::resolve+0x1d5b>
   1e548:	4c 89 d2             	mov    %r10,%rdx
   1e54b:	49 8b 03             	mov    (%r11),%rax
   1e54e:	48 39 c1             	cmp    %rax,%rcx
   1e551:	0f 82 0e fb ff ff    	jb     1e065 <std::backtrace_rs::symbolize::gimli::resolve+0x1845>
   1e557:	4c 89 cb             	mov    %r9,%rbx
   1e55a:	4d 8b 4b f0          	mov    -0x10(%r11),%r9
   1e55e:	4c 8d 52 01          	lea    0x1(%rdx),%r10
   1e562:	49 83 c3 e0          	add    $0xffffffffffffffe0,%r11
   1e566:	48 39 c1             	cmp    %rax,%rcx
   1e569:	48 89 c1             	mov    %rax,%rcx
   1e56c:	77 d2                	ja     1e540 <std::backtrace_rs::symbolize::gimli::resolve+0x1d20>
   1e56e:	48 89 c1             	mov    %rax,%rcx
   1e571:	4c 39 cb             	cmp    %r9,%rbx
   1e574:	73 ca                	jae    1e540 <std::backtrace_rs::symbolize::gimli::resolve+0x1d20>
   1e576:	e9 ea fa ff ff       	jmpq   1e065 <std::backtrace_rs::symbolize::gimli::resolve+0x1845>
   1e57b:	31 c0                	xor    %eax,%eax
   1e57d:	48 89 f2             	mov    %rsi,%rdx
   1e580:	e9 f0 fb ff ff       	jmpq   1e175 <std::backtrace_rs::symbolize::gimli::resolve+0x1955>
   1e585:	48 8b b4 24 a0 04 00 	mov    0x4a0(%rsp),%rsi
   1e58c:	00 
   1e58d:	48 85 f6             	test   %rsi,%rsi
   1e590:	74 1e                	je     1e5b0 <std::backtrace_rs::symbolize::gimli::resolve+0x1d90>
   1e592:	48 8b bc 24 98 04 00 	mov    0x498(%rsp),%rdi
   1e599:	00 
   1e59a:	48 85 ff             	test   %rdi,%rdi
   1e59d:	74 11                	je     1e5b0 <std::backtrace_rs::symbolize::gimli::resolve+0x1d90>
   1e59f:	48 c1 e6 04          	shl    $0x4,%rsi
   1e5a3:	74 0b                	je     1e5b0 <std::backtrace_rs::symbolize::gimli::resolve+0x1d90>
   1e5a5:	ba 08 00 00 00       	mov    $0x8,%edx
   1e5aa:	ff 15 50 76 02 00    	callq  *0x27650(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   1e5b0:	48 83 7c 24 60 00    	cmpq   $0x0,0x60(%rsp)
   1e5b6:	74 15                	je     1e5cd <std::backtrace_rs::symbolize::gimli::resolve+0x1dad>
   1e5b8:	ba 08 00 00 00       	mov    $0x8,%edx
   1e5bd:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
   1e5c2:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
   1e5c7:	ff 15 33 76 02 00    	callq  *0x27633(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   1e5cd:	48 8b 84 24 18 01 00 	mov    0x118(%rsp),%rax
   1e5d4:	00 
   1e5d5:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1e5da:	48 8b 84 24 20 01 00 	mov    0x120(%rsp),%rax
   1e5e1:	00 
   1e5e2:	4c 8b bc 24 28 01 00 	mov    0x128(%rsp),%r15
   1e5e9:	00 
   1e5ea:	4c 39 f8             	cmp    %r15,%rax
   1e5ed:	76 6d                	jbe    1e65c <std::backtrace_rs::symbolize::gimli::resolve+0x1e3c>
   1e5ef:	48 83 7c 24 20 00    	cmpq   $0x0,0x20(%rsp)
   1e5f5:	74 65                	je     1e65c <std::backtrace_rs::symbolize::gimli::resolve+0x1e3c>
   1e5f7:	48 c1 e0 03          	shl    $0x3,%rax
   1e5fb:	48 8d 34 80          	lea    (%rax,%rax,4),%rsi
   1e5ff:	4a 8d 04 fd 00 00 00 	lea    0x0(,%r15,8),%rax
   1e606:	00 
   1e607:	48 8d 1c 80          	lea    (%rax,%rax,4),%rbx
   1e60b:	48 85 db             	test   %rbx,%rbx
   1e60e:	74 2d                	je     1e63d <std::backtrace_rs::symbolize::gimli::resolve+0x1e1d>
   1e610:	ba 08 00 00 00       	mov    $0x8,%edx
   1e615:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   1e61a:	48 89 d9             	mov    %rbx,%rcx
   1e61d:	ff 15 55 79 02 00    	callq  *0x27955(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
   1e623:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1e628:	48 85 c0             	test   %rax,%rax
   1e62b:	75 2f                	jne    1e65c <std::backtrace_rs::symbolize::gimli::resolve+0x1e3c>
   1e62d:	be 08 00 00 00       	mov    $0x8,%esi
   1e632:	48 89 df             	mov    %rbx,%rdi
   1e635:	ff 15 ed 74 02 00    	callq  *0x274ed(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   1e63b:	0f 0b                	ud2    
   1e63d:	48 85 f6             	test   %rsi,%rsi
   1e640:	74 10                	je     1e652 <std::backtrace_rs::symbolize::gimli::resolve+0x1e32>
   1e642:	ba 08 00 00 00       	mov    $0x8,%edx
   1e647:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   1e64c:	ff 15 ae 75 02 00    	callq  *0x275ae(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   1e652:	b8 08 00 00 00       	mov    $0x8,%eax
   1e657:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1e65c:	48 8b 84 24 e0 00 00 	mov    0xe0(%rsp),%rax
   1e663:	00 
   1e664:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1e669:	48 8b b4 24 e8 00 00 	mov    0xe8(%rsp),%rsi
   1e670:	00 
   1e671:	48 8b 9c 24 f0 00 00 	mov    0xf0(%rsp),%rbx
   1e678:	00 
   1e679:	48 39 de             	cmp    %rbx,%rsi
   1e67c:	76 61                	jbe    1e6df <std::backtrace_rs::symbolize::gimli::resolve+0x1ebf>
   1e67e:	48 83 7c 24 10 00    	cmpq   $0x0,0x10(%rsp)
   1e684:	74 59                	je     1e6df <std::backtrace_rs::symbolize::gimli::resolve+0x1ebf>
   1e686:	48 c1 e6 05          	shl    $0x5,%rsi
   1e68a:	49 89 dc             	mov    %rbx,%r12
   1e68d:	49 c1 e4 05          	shl    $0x5,%r12
   1e691:	74 2d                	je     1e6c0 <std::backtrace_rs::symbolize::gimli::resolve+0x1ea0>
   1e693:	ba 08 00 00 00       	mov    $0x8,%edx
   1e698:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   1e69d:	4c 89 e1             	mov    %r12,%rcx
   1e6a0:	ff 15 d2 78 02 00    	callq  *0x278d2(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
   1e6a6:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1e6ab:	48 85 c0             	test   %rax,%rax
   1e6ae:	75 2f                	jne    1e6df <std::backtrace_rs::symbolize::gimli::resolve+0x1ebf>
   1e6b0:	be 08 00 00 00       	mov    $0x8,%esi
   1e6b5:	4c 89 e7             	mov    %r12,%rdi
   1e6b8:	ff 15 6a 74 02 00    	callq  *0x2746a(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   1e6be:	0f 0b                	ud2    
   1e6c0:	48 85 f6             	test   %rsi,%rsi
   1e6c3:	74 10                	je     1e6d5 <std::backtrace_rs::symbolize::gimli::resolve+0x1eb5>
   1e6c5:	ba 08 00 00 00       	mov    $0x8,%edx
   1e6ca:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   1e6cf:	ff 15 2b 75 02 00    	callq  *0x2752b(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   1e6d5:	b8 08 00 00 00       	mov    $0x8,%eax
   1e6da:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1e6df:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   1e6e4:	83 38 02             	cmpl   $0x2,(%rax)
   1e6e7:	75 35                	jne    1e71e <std::backtrace_rs::symbolize::gimli::resolve+0x1efe>
   1e6e9:	31 c0                	xor    %eax,%eax
   1e6eb:	4c 8b 74 24 30       	mov    0x30(%rsp),%r14
   1e6f0:	4c 8b 6c 24 70       	mov    0x70(%rsp),%r13
   1e6f5:	4c 8b 54 24 68       	mov    0x68(%rsp),%r10
   1e6fa:	4c 8b 4c 24 78       	mov    0x78(%rsp),%r9
   1e6ff:	4c 8b a4 24 98 00 00 	mov    0x98(%rsp),%r12
   1e706:	00 
   1e707:	48 8b 8c 24 38 01 00 	mov    0x138(%rsp),%rcx
   1e70e:	00 
   1e70f:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   1e714:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   1e719:	e9 14 f5 ff ff       	jmpq   1dc32 <std::backtrace_rs::symbolize::gimli::resolve+0x1412>
   1e71e:	49 c1 e7 03          	shl    $0x3,%r15
   1e722:	4b 8d 34 bf          	lea    (%r15,%r15,4),%rsi
   1e726:	48 85 f6             	test   %rsi,%rsi
   1e729:	74 10                	je     1e73b <std::backtrace_rs::symbolize::gimli::resolve+0x1f1b>
   1e72b:	ba 08 00 00 00       	mov    $0x8,%edx
   1e730:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   1e735:	ff 15 c5 74 02 00    	callq  *0x274c5(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   1e73b:	48 c1 e3 05          	shl    $0x5,%rbx
   1e73f:	4c 8b 74 24 30       	mov    0x30(%rsp),%r14
   1e744:	4c 8b 6c 24 70       	mov    0x70(%rsp),%r13
   1e749:	4c 8b 54 24 68       	mov    0x68(%rsp),%r10
   1e74e:	4c 8b 4c 24 78       	mov    0x78(%rsp),%r9
   1e753:	0f 84 04 f5 ff ff    	je     1dc5d <std::backtrace_rs::symbolize::gimli::resolve+0x143d>
   1e759:	ba 08 00 00 00       	mov    $0x8,%edx
   1e75e:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   1e763:	48 89 de             	mov    %rbx,%rsi
   1e766:	4c 89 d3             	mov    %r10,%rbx
   1e769:	4d 89 cf             	mov    %r9,%r15
   1e76c:	ff 15 8e 74 02 00    	callq  *0x2748e(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   1e772:	4d 89 f9             	mov    %r15,%r9
   1e775:	49 89 da             	mov    %rbx,%r10
   1e778:	e9 e0 f4 ff ff       	jmpq   1dc5d <std::backtrace_rs::symbolize::gimli::resolve+0x143d>
   1e77d:	4c 8b 74 24 30       	mov    0x30(%rsp),%r14
   1e782:	44 8b 7c 24 1c       	mov    0x1c(%rsp),%r15d
   1e787:	4c 8b 6c 24 70       	mov    0x70(%rsp),%r13
   1e78c:	4c 8b 54 24 68       	mov    0x68(%rsp),%r10
   1e791:	41 bc 12 00 00 00    	mov    $0x12,%r12d
   1e797:	e9 83 f4 ff ff       	jmpq   1dc1f <std::backtrace_rs::symbolize::gimli::resolve+0x13ff>
   1e79c:	48 8d 15 d5 52 02 00 	lea    0x252d5(%rip),%rdx        # 43a78 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x520>
   1e7a3:	ff 15 ef 74 02 00    	callq  *0x274ef(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   1e7a9:	0f 0b                	ud2    
   1e7ab:	48 8d 15 36 5f 02 00 	lea    0x25f36(%rip),%rdx        # 446e8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1190>
   1e7b2:	31 ff                	xor    %edi,%edi
   1e7b4:	31 f6                	xor    %esi,%esi
   1e7b6:	ff 15 dc 74 02 00    	callq  *0x274dc(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   1e7bc:	0f 0b                	ud2    
   1e7be:	48 8d 15 0b 5f 02 00 	lea    0x25f0b(%rip),%rdx        # 446d0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1178>
   1e7c5:	4c 89 e7             	mov    %r12,%rdi
   1e7c8:	ff 15 ca 74 02 00    	callq  *0x274ca(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   1e7ce:	0f 0b                	ud2    
   1e7d0:	bf 20 06 00 00       	mov    $0x620,%edi
   1e7d5:	be 08 00 00 00       	mov    $0x8,%esi
   1e7da:	ff 15 48 73 02 00    	callq  *0x27348(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   1e7e0:	0f 0b                	ud2    
   1e7e2:	48 8d 15 77 52 02 00 	lea    0x25277(%rip),%rdx        # 43a60 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x508>
   1e7e9:	4c 89 ff             	mov    %r15,%rdi
   1e7ec:	ff 15 3e 72 02 00    	callq  *0x2723e(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   1e7f2:	0f 0b                	ud2    
   1e7f4:	48 8d 15 35 52 02 00 	lea    0x25235(%rip),%rdx        # 43a30 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x4d8>
   1e7fb:	4c 89 e7             	mov    %r12,%rdi
   1e7fe:	4c 89 ce             	mov    %r9,%rsi
   1e801:	ff 15 91 74 02 00    	callq  *0x27491(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   1e807:	eb 1b                	jmp    1e824 <std::backtrace_rs::symbolize::gimli::resolve+0x2004>
   1e809:	48 8d 15 38 52 02 00 	lea    0x25238(%rip),%rdx        # 43a48 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x4f0>
   1e810:	48 89 c7             	mov    %rax,%rdi
   1e813:	48 89 ce             	mov    %rcx,%rsi
   1e816:	ff 15 7c 74 02 00    	callq  *0x2747c(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   1e81c:	eb 06                	jmp    1e824 <std::backtrace_rs::symbolize::gimli::resolve+0x2004>
   1e81e:	ff 15 c4 72 02 00    	callq  *0x272c4(%rip)        # 45ae8 <_GLOBAL_OFFSET_TABLE_+0x158>
   1e824:	0f 0b                	ud2    
   1e826:	be 08 00 00 00       	mov    $0x8,%esi
   1e82b:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   1e830:	ff 15 f2 72 02 00    	callq  *0x272f2(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   1e836:	0f 0b                	ud2    
   1e838:	48 8d 15 e1 50 02 00 	lea    0x250e1(%rip),%rdx        # 43920 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3c8>
   1e83f:	48 89 c7             	mov    %rax,%rdi
   1e842:	ff 15 50 74 02 00    	callq  *0x27450(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   1e848:	eb da                	jmp    1e824 <std::backtrace_rs::symbolize::gimli::resolve+0x2004>
   1e84a:	48 8d 15 e7 50 02 00 	lea    0x250e7(%rip),%rdx        # 43938 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3e0>
   1e851:	ff 15 41 74 02 00    	callq  *0x27441(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   1e857:	eb cb                	jmp    1e824 <std::backtrace_rs::symbolize::gimli::resolve+0x2004>
   1e859:	48 8d 15 f0 50 02 00 	lea    0x250f0(%rip),%rdx        # 43950 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3f8>
   1e860:	48 89 df             	mov    %rbx,%rdi
   1e863:	4c 89 e6             	mov    %r12,%rsi
   1e866:	ff 15 3c 76 02 00    	callq  *0x2763c(%rip)        # 45ea8 <_GLOBAL_OFFSET_TABLE_+0x518>
   1e86c:	eb b6                	jmp    1e824 <std::backtrace_rs::symbolize::gimli::resolve+0x2004>
   1e86e:	48 8d 15 db 50 02 00 	lea    0x250db(%rip),%rdx        # 43950 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3f8>
   1e875:	4c 89 e7             	mov    %r12,%rdi
   1e878:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
   1e87d:	ff 15 ad 71 02 00    	callq  *0x271ad(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   1e883:	eb 9f                	jmp    1e824 <std::backtrace_rs::symbolize::gimli::resolve+0x2004>
   1e885:	48 8d 15 74 51 02 00 	lea    0x25174(%rip),%rdx        # 43a00 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x4a8>
   1e88c:	4c 89 e7             	mov    %r12,%rdi
   1e88f:	ff 15 03 74 02 00    	callq  *0x27403(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   1e895:	0f 0b                	ud2    
   1e897:	48 8d 15 7a 51 02 00 	lea    0x2517a(%rip),%rdx        # 43a18 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x4c0>
   1e89e:	ff 15 f4 73 02 00    	callq  *0x273f4(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   1e8a4:	0f 0b                	ud2    
   1e8a6:	48 8d 15 e3 51 02 00 	lea    0x251e3(%rip),%rdx        # 43a90 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x538>
   1e8ad:	ff 15 e5 73 02 00    	callq  *0x273e5(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   1e8b3:	0f 0b                	ud2    
   1e8b5:	48 8d 15 ec 51 02 00 	lea    0x251ec(%rip),%rdx        # 43aa8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x550>
   1e8bc:	ff 15 d6 73 02 00    	callq  *0x273d6(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   1e8c2:	0f 0b                	ud2    
   1e8c4:	48 8d 15 0d 50 02 00 	lea    0x2500d(%rip),%rdx        # 438d8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x380>
   1e8cb:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
   1e8d0:	ff 15 22 75 02 00    	callq  *0x27522(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x468>
   1e8d6:	e9 49 ff ff ff       	jmpq   1e824 <std::backtrace_rs::symbolize::gimli::resolve+0x2004>
   1e8db:	48 8d 15 0e 50 02 00 	lea    0x2500e(%rip),%rdx        # 438f0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x398>
   1e8e2:	ff 15 c0 75 02 00    	callq  *0x275c0(%rip)        # 45ea8 <_GLOBAL_OFFSET_TABLE_+0x518>
   1e8e8:	e9 37 ff ff ff       	jmpq   1e824 <std::backtrace_rs::symbolize::gimli::resolve+0x2004>
   1e8ed:	48 c7 84 24 20 03 00 	movq   $0xffffffffffffffff,0x320(%rsp)
   1e8f4:	00 ff ff ff ff 
   1e8f9:	48 8d 3d fa 8c 01 00 	lea    0x18cfa(%rip),%rdi        # 375fa <str.6+0x2da>
   1e900:	48 8d 15 b9 51 02 00 	lea    0x251b9(%rip),%rdx        # 43ac0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x568>
   1e907:	be 2b 00 00 00       	mov    $0x2b,%esi
   1e90c:	ff 15 ce 75 02 00    	callq  *0x275ce(%rip)        # 45ee0 <_GLOBAL_OFFSET_TABLE_+0x550>
   1e912:	e9 0d ff ff ff       	jmpq   1e824 <std::backtrace_rs::symbolize::gimli::resolve+0x2004>
   1e917:	48 8d 15 d2 4f 02 00 	lea    0x24fd2(%rip),%rdx        # 438f0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x398>
   1e91e:	48 89 f7             	mov    %rsi,%rdi
   1e921:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
   1e926:	ff 15 04 71 02 00    	callq  *0x27104(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   1e92c:	e9 f3 fe ff ff       	jmpq   1e824 <std::backtrace_rs::symbolize::gimli::resolve+0x2004>
   1e931:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   1e935:	48 89 f8             	mov    %rdi,%rax
   1e938:	48 39 fe             	cmp    %rdi,%rsi
   1e93b:	73 15                	jae    1e952 <std::backtrace_rs::symbolize::gimli::resolve+0x2132>
   1e93d:	48 8d 15 c4 4f 02 00 	lea    0x24fc4(%rip),%rdx        # 43908 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3b0>
   1e944:	48 89 c7             	mov    %rax,%rdi
   1e947:	ff 15 5b 75 02 00    	callq  *0x2755b(%rip)        # 45ea8 <_GLOBAL_OFFSET_TABLE_+0x518>
   1e94d:	e9 d2 fe ff ff       	jmpq   1e824 <std::backtrace_rs::symbolize::gimli::resolve+0x2004>
   1e952:	48 8d 15 af 4f 02 00 	lea    0x24faf(%rip),%rdx        # 43908 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3b0>
   1e959:	48 89 f7             	mov    %rsi,%rdi
   1e95c:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
   1e961:	ff 15 c9 70 02 00    	callq  *0x270c9(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   1e967:	e9 b8 fe ff ff       	jmpq   1e824 <std::backtrace_rs::symbolize::gimli::resolve+0x2004>
   1e96c:	ff 15 76 71 02 00    	callq  *0x27176(%rip)        # 45ae8 <_GLOBAL_OFFSET_TABLE_+0x158>
   1e972:	e9 ad fe ff ff       	jmpq   1e824 <std::backtrace_rs::symbolize::gimli::resolve+0x2004>
   1e977:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   1e97c:	48 89 de             	mov    %rbx,%rsi
   1e97f:	ff 15 a3 71 02 00    	callq  *0x271a3(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   1e985:	0f 0b                	ud2    
   1e987:	eb 1f                	jmp    1e9a8 <std::backtrace_rs::symbolize::gimli::resolve+0x2188>
   1e989:	49 89 c6             	mov    %rax,%r14
   1e98c:	e9 fc 00 00 00       	jmpq   1ea8d <std::backtrace_rs::symbolize::gimli::resolve+0x226d>
   1e991:	eb 2a                	jmp    1e9bd <std::backtrace_rs::symbolize::gimli::resolve+0x219d>
   1e993:	49 89 c6             	mov    %rax,%r14
   1e996:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
   1e99d:	00 
   1e99e:	e8 bd 7e fe ff       	callq  6860 <core::ptr::drop_in_place>
   1e9a3:	e9 e5 00 00 00       	jmpq   1ea8d <std::backtrace_rs::symbolize::gimli::resolve+0x226d>
   1e9a8:	49 89 c6             	mov    %rax,%r14
   1e9ab:	eb 2d                	jmp    1e9da <std::backtrace_rs::symbolize::gimli::resolve+0x21ba>
   1e9ad:	49 89 c6             	mov    %rax,%r14
   1e9b0:	e9 d8 00 00 00       	jmpq   1ea8d <std::backtrace_rs::symbolize::gimli::resolve+0x226d>
   1e9b5:	49 89 c6             	mov    %rax,%r14
   1e9b8:	e9 d0 00 00 00       	jmpq   1ea8d <std::backtrace_rs::symbolize::gimli::resolve+0x226d>
   1e9bd:	49 89 c6             	mov    %rax,%r14
   1e9c0:	48 8d bc 24 98 04 00 	lea    0x498(%rsp),%rdi
   1e9c7:	00 
   1e9c8:	e8 13 80 fe ff       	callq  69e0 <core::ptr::drop_in_place>
   1e9cd:	48 8d bc 24 10 06 00 	lea    0x610(%rsp),%rdi
   1e9d4:	00 
   1e9d5:	e8 16 77 fe ff       	callq  60f0 <core::ptr::drop_in_place>
   1e9da:	48 8d bc 24 e0 00 00 	lea    0xe0(%rsp),%rdi
   1e9e1:	00 
   1e9e2:	e8 09 77 fe ff       	callq  60f0 <core::ptr::drop_in_place>
   1e9e7:	48 8d bc 24 18 01 00 	lea    0x118(%rsp),%rdi
   1e9ee:	00 
   1e9ef:	e8 bc 87 fe ff       	callq  71b0 <core::ptr::drop_in_place>
   1e9f4:	e9 94 00 00 00       	jmpq   1ea8d <std::backtrace_rs::symbolize::gimli::resolve+0x226d>
   1e9f9:	49 89 c6             	mov    %rax,%r14
   1e9fc:	e9 8c 00 00 00       	jmpq   1ea8d <std::backtrace_rs::symbolize::gimli::resolve+0x226d>
   1ea01:	49 89 c6             	mov    %rax,%r14
   1ea04:	48 8d bc 24 00 03 00 	lea    0x300(%rsp),%rdi
   1ea0b:	00 
   1ea0c:	e8 7f 83 fe ff       	callq  6d90 <core::ptr::drop_in_place>
   1ea11:	eb 7a                	jmp    1ea8d <std::backtrace_rs::symbolize::gimli::resolve+0x226d>
   1ea13:	49 89 c6             	mov    %rax,%r14
   1ea16:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
   1ea1d:	00 
   1ea1e:	e8 fd 7d fe ff       	callq  6820 <core::ptr::drop_in_place>
   1ea23:	eb 68                	jmp    1ea8d <std::backtrace_rs::symbolize::gimli::resolve+0x226d>
   1ea25:	49 89 c6             	mov    %rax,%r14
   1ea28:	48 85 db             	test   %rbx,%rbx
   1ea2b:	74 18                	je     1ea45 <std::backtrace_rs::symbolize::gimli::resolve+0x2225>
   1ea2d:	4c 89 e7             	mov    %r12,%rdi
   1ea30:	e8 1b 7e fe ff       	callq  6850 <core::ptr::drop_in_place>
   1ea35:	49 81 c4 88 01 00 00 	add    $0x188,%r12
   1ea3c:	48 81 c3 78 fe ff ff 	add    $0xfffffffffffffe78,%rbx
   1ea43:	75 e8                	jne    1ea2d <std::backtrace_rs::symbolize::gimli::resolve+0x220d>
   1ea45:	48 8b 3d cc 77 02 00 	mov    0x277cc(%rip),%rdi        # 46218 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x18>
   1ea4c:	48 8b 35 cd 77 02 00 	mov    0x277cd(%rip),%rsi        # 46220 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x20>
   1ea53:	e8 d8 89 fe ff       	callq  7430 <core::ptr::drop_in_place>
   1ea58:	48 8b 84 24 10 03 00 	mov    0x310(%rsp),%rax
   1ea5f:	00 
   1ea60:	48 89 05 a9 77 02 00 	mov    %rax,0x277a9(%rip)        # 46210 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x10>
   1ea67:	0f 28 84 24 00 03 00 	movaps 0x300(%rsp),%xmm0
   1ea6e:	00 
   1ea6f:	0f 11 05 8a 77 02 00 	movups %xmm0,0x2778a(%rip)        # 46200 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE>
   1ea76:	4c 89 3d 9b 77 02 00 	mov    %r15,0x2779b(%rip)        # 46218 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x18>
   1ea7d:	66 0f 6f 05 3b 78 01 	movdqa 0x1783b(%rip),%xmm0        # 362c0 <_fini+0x123c>
   1ea84:	00 
   1ea85:	f3 0f 7f 05 93 77 02 	movdqu %xmm0,0x27793(%rip)        # 46220 <std::backtrace_rs::symbolize::gimli::Cache::with_global::MAPPINGS_CACHE+0x20>
   1ea8c:	00 
   1ea8d:	4c 89 f7             	mov    %r14,%rdi
   1ea90:	e8 bb 65 fe ff       	callq  5050 <_Unwind_Resume@plt>
   1ea95:	0f 0b                	ud2    
   1ea97:	49 89 c6             	mov    %rax,%r14
   1ea9a:	eb a9                	jmp    1ea45 <std::backtrace_rs::symbolize::gimli::resolve+0x2225>
   1ea9c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001eaa0 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new>:
   1eaa0:	55                   	push   %rbp
   1eaa1:	41 57                	push   %r15
   1eaa3:	41 56                	push   %r14
   1eaa5:	41 55                	push   %r13
   1eaa7:	41 54                	push   %r12
   1eaa9:	53                   	push   %rbx
   1eaaa:	b8 c8 11 00 00       	mov    $0x11c8,%eax
   1eaaf:	e8 46 61 01 00       	callq  34bfa <__rust_probestack>
   1eab4:	48 29 c4             	sub    %rax,%rsp
   1eab7:	48 89 d1             	mov    %rdx,%rcx
   1eaba:	48 89 f2             	mov    %rsi,%rdx
   1eabd:	49 89 fe             	mov    %rdi,%r14
   1eac0:	48 b8 00 00 00 00 b6 	movabs $0x1b600000000,%rax
   1eac7:	01 00 00 
   1eaca:	48 89 84 24 a0 0a 00 	mov    %rax,0xaa0(%rsp)
   1ead1:	00 
   1ead2:	48 c7 84 24 a8 0a 00 	movq   $0x1,0xaa8(%rsp)
   1ead9:	00 01 00 00 00 
   1eade:	48 8d bc 24 f0 03 00 	lea    0x3f0(%rsp),%rdi
   1eae5:	00 
   1eae6:	48 8d b4 24 a0 0a 00 	lea    0xaa0(%rsp),%rsi
   1eaed:	00 
   1eaee:	ff 15 64 74 02 00    	callq  *0x27464(%rip)        # 45f58 <_GLOBAL_OFFSET_TABLE_+0x5c8>
   1eaf4:	83 bc 24 f0 03 00 00 	cmpl   $0x1,0x3f0(%rsp)
   1eafb:	01 
   1eafc:	75 54                	jne    1eb52 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xb2>
   1eafe:	80 bc 24 f8 03 00 00 	cmpb   $0x2,0x3f8(%rsp)
   1eb05:	02 
   1eb06:	72 3e                	jb     1eb46 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xa6>
   1eb08:	48 8b 9c 24 00 04 00 	mov    0x400(%rsp),%rbx
   1eb0f:	00 
   1eb10:	48 8b 3b             	mov    (%rbx),%rdi
   1eb13:	48 8b 43 08          	mov    0x8(%rbx),%rax
   1eb17:	ff 10                	callq  *(%rax)
   1eb19:	48 8b 43 08          	mov    0x8(%rbx),%rax
   1eb1d:	48 8b 70 08          	mov    0x8(%rax),%rsi
   1eb21:	48 85 f6             	test   %rsi,%rsi
   1eb24:	74 0d                	je     1eb33 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x93>
   1eb26:	48 8b 3b             	mov    (%rbx),%rdi
   1eb29:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1eb2d:	ff 15 cd 70 02 00    	callq  *0x270cd(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   1eb33:	be 18 00 00 00       	mov    $0x18,%esi
   1eb38:	ba 08 00 00 00       	mov    $0x8,%edx
   1eb3d:	48 89 df             	mov    %rbx,%rdi
   1eb40:	ff 15 ba 70 02 00    	callq  *0x270ba(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   1eb46:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
   1eb4d:	e9 43 4f 00 00       	jmpq   23a95 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4ff5>
   1eb52:	8b ac 24 f4 03 00 00 	mov    0x3f4(%rsp),%ebp
   1eb59:	48 8d 15 4b 8a 01 00 	lea    0x18a4b(%rip),%rdx        # 375ab <str.6+0x28b>
   1eb60:	48 8d bc 24 f0 03 00 	lea    0x3f0(%rsp),%rdi
   1eb67:	00 
   1eb68:	89 ee                	mov    %ebp,%esi
   1eb6a:	b9 00 10 00 00       	mov    $0x1000,%ecx
   1eb6f:	e8 2c d7 ff ff       	callq  1c2a0 <std::sys::unix::fs::try_statx>
   1eb74:	48 8b 84 24 f0 03 00 	mov    0x3f0(%rsp),%rax
   1eb7b:	00 
   1eb7c:	48 83 f8 02          	cmp    $0x2,%rax
   1eb80:	75 78                	jne    1ebfa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x15a>
   1eb82:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1eb86:	66 0f 7f 84 24 70 04 	movdqa %xmm0,0x470(%rsp)
   1eb8d:	00 00 
   1eb8f:	66 0f 7f 84 24 60 04 	movdqa %xmm0,0x460(%rsp)
   1eb96:	00 00 
   1eb98:	66 0f 7f 84 24 50 04 	movdqa %xmm0,0x450(%rsp)
   1eb9f:	00 00 
   1eba1:	66 0f 7f 84 24 40 04 	movdqa %xmm0,0x440(%rsp)
   1eba8:	00 00 
   1ebaa:	66 0f 7f 84 24 30 04 	movdqa %xmm0,0x430(%rsp)
   1ebb1:	00 00 
   1ebb3:	66 0f 7f 84 24 20 04 	movdqa %xmm0,0x420(%rsp)
   1ebba:	00 00 
   1ebbc:	66 0f 7f 84 24 10 04 	movdqa %xmm0,0x410(%rsp)
   1ebc3:	00 00 
   1ebc5:	66 0f 7f 84 24 00 04 	movdqa %xmm0,0x400(%rsp)
   1ebcc:	00 00 
   1ebce:	66 0f 7f 84 24 f0 03 	movdqa %xmm0,0x3f0(%rsp)
   1ebd5:	00 00 
   1ebd7:	48 8d b4 24 f0 03 00 	lea    0x3f0(%rsp),%rsi
   1ebde:	00 
   1ebdf:	89 ef                	mov    %ebp,%edi
   1ebe1:	ff 15 99 6f 02 00    	callq  *0x26f99(%rip)        # 45b80 <_GLOBAL_OFFSET_TABLE_+0x1f0>
   1ebe7:	83 f8 ff             	cmp    $0xffffffff,%eax
   1ebea:	0f 84 fa 01 00 00    	je     1edea <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x34a>
   1ebf0:	48 8b 9c 24 20 04 00 	mov    0x420(%rsp),%rbx
   1ebf7:	00 
   1ebf8:	eb 6f                	jmp    1ec69 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1c9>
   1ebfa:	83 f8 01             	cmp    $0x1,%eax
   1ebfd:	75 53                	jne    1ec52 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1b2>
   1ebff:	48 8b 84 24 f8 03 00 	mov    0x3f8(%rsp),%rax
   1ec06:	00 
   1ec07:	3c 02                	cmp    $0x2,%al
   1ec09:	0f 82 e1 01 00 00    	jb     1edf0 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x350>
   1ec0f:	48 8b 9c 24 00 04 00 	mov    0x400(%rsp),%rbx
   1ec16:	00 
   1ec17:	48 8b 3b             	mov    (%rbx),%rdi
   1ec1a:	48 8b 43 08          	mov    0x8(%rbx),%rax
   1ec1e:	ff 10                	callq  *(%rax)
   1ec20:	48 8b 43 08          	mov    0x8(%rbx),%rax
   1ec24:	48 8b 70 08          	mov    0x8(%rax),%rsi
   1ec28:	48 85 f6             	test   %rsi,%rsi
   1ec2b:	74 0d                	je     1ec3a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x19a>
   1ec2d:	48 8b 3b             	mov    (%rbx),%rdi
   1ec30:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1ec34:	ff 15 c6 6f 02 00    	callq  *0x26fc6(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   1ec3a:	be 18 00 00 00       	mov    $0x18,%esi
   1ec3f:	ba 08 00 00 00       	mov    $0x8,%edx
   1ec44:	48 89 df             	mov    %rbx,%rdi
   1ec47:	ff 15 b3 6f 02 00    	callq  *0x26fb3(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   1ec4d:	e9 9e 01 00 00       	jmpq   1edf0 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x350>
   1ec52:	48 83 bc 24 88 04 00 	cmpq   $0x2,0x488(%rsp)
   1ec59:	00 02 
   1ec5b:	0f 84 8f 01 00 00    	je     1edf0 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x350>
   1ec61:	48 8b 9c 24 28 04 00 	mov    0x428(%rsp),%rbx
   1ec68:	00 
   1ec69:	31 ff                	xor    %edi,%edi
   1ec6b:	48 89 de             	mov    %rbx,%rsi
   1ec6e:	ba 01 00 00 00       	mov    $0x1,%edx
   1ec73:	b9 02 00 00 00       	mov    $0x2,%ecx
   1ec78:	41 89 e8             	mov    %ebp,%r8d
   1ec7b:	45 31 c9             	xor    %r9d,%r9d
   1ec7e:	ff 15 e4 6e 02 00    	callq  *0x26ee4(%rip)        # 45b68 <mmap@GLIBC_2.2.5>
   1ec84:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1ec88:	0f 84 62 01 00 00    	je     1edf0 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x350>
   1ec8e:	4c 89 b4 24 50 03 00 	mov    %r14,0x350(%rsp)
   1ec95:	00 
   1ec96:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   1ec9b:	89 ef                	mov    %ebp,%edi
   1ec9d:	ff 15 9d 6f 02 00    	callq  *0x26f9d(%rip)        # 45c40 <close@GLIBC_2.2.5>
   1eca3:	48 c7 84 24 d0 01 00 	movq   $0x8,0x1d0(%rsp)
   1ecaa:	00 08 00 00 00 
   1ecaf:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1ecb3:	f3 0f 7f 84 24 d8 01 	movdqu %xmm0,0x1d8(%rsp)
   1ecba:	00 00 
   1ecbc:	48 89 5c 24 50       	mov    %rbx,0x50(%rsp)
   1ecc1:	48 83 fb 40          	cmp    $0x40,%rbx
   1ecc5:	0f 82 df 49 00 00    	jb     236aa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1eccb:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   1ecd0:	83 e0 07             	and    $0x7,%eax
   1ecd3:	48 85 c0             	test   %rax,%rax
   1ecd6:	0f 85 ce 49 00 00    	jne    236aa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1ecdc:	48 8d 05 81 8a 01 00 	lea    0x18a81(%rip),%rax        # 37764 <str.6+0x444>
   1ece3:	48 39 44 24 58       	cmp    %rax,0x58(%rsp)
   1ece8:	74 11                	je     1ecfb <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x25b>
   1ecea:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   1ecef:	81 38 7f 45 4c 46    	cmpl   $0x464c457f,(%rax)
   1ecf5:	0f 85 af 49 00 00    	jne    236aa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1ecfb:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   1ed00:	80 78 04 02          	cmpb   $0x2,0x4(%rax)
   1ed04:	0f 85 a0 49 00 00    	jne    236aa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1ed0a:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   1ed0f:	8a 40 05             	mov    0x5(%rax),%al
   1ed12:	8d 48 ff             	lea    -0x1(%rax),%ecx
   1ed15:	80 f9 02             	cmp    $0x2,%cl
   1ed18:	0f 83 8c 49 00 00    	jae    236aa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1ed1e:	3c 02                	cmp    $0x2,%al
   1ed20:	0f 84 84 49 00 00    	je     236aa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1ed26:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   1ed2b:	80 78 06 01          	cmpb   $0x1,0x6(%rax)
   1ed2f:	0f 85 75 49 00 00    	jne    236aa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1ed35:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
   1ed3a:	4c 8b 69 28          	mov    0x28(%rcx),%r13
   1ed3e:	4d 85 ed             	test   %r13,%r13
   1ed41:	0f 84 02 01 00 00    	je     1ee49 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3a9>
   1ed47:	0f b7 41 3a          	movzwl 0x3a(%rcx),%eax
   1ed4b:	44 0f b7 61 3c       	movzwl 0x3c(%rcx),%r12d
   1ed50:	66 45 85 e4          	test   %r12w,%r12w
   1ed54:	0f 84 aa 00 00 00    	je     1ee04 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x364>
   1ed5a:	66 83 f8 40          	cmp    $0x40,%ax
   1ed5e:	0f 85 46 49 00 00    	jne    236aa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1ed64:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   1ed69:	4c 29 e9             	sub    %r13,%rcx
   1ed6c:	0f 82 38 49 00 00    	jb     236aa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1ed72:	4c 03 6c 24 58       	add    0x58(%rsp),%r13
   1ed77:	41 f6 c5 07          	test   $0x7,%r13b
   1ed7b:	0f 85 29 49 00 00    	jne    236aa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1ed81:	ba 40 00 00 00       	mov    $0x40,%edx
   1ed86:	4c 89 e0             	mov    %r12,%rax
   1ed89:	48 f7 e2             	mul    %rdx
   1ed8c:	0f 80 18 49 00 00    	jo     236aa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1ed92:	48 39 c1             	cmp    %rax,%rcx
   1ed95:	0f 82 0f 49 00 00    	jb     236aa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1ed9b:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   1eda0:	0f b7 40 3e          	movzwl 0x3e(%rax),%eax
   1eda4:	3d ff ff 00 00       	cmp    $0xffff,%eax
   1eda9:	75 0e                	jne    1edb9 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x319>
   1edab:	48 83 f9 40          	cmp    $0x40,%rcx
   1edaf:	0f 82 f5 48 00 00    	jb     236aa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1edb5:	41 8b 45 28          	mov    0x28(%r13),%eax
   1edb9:	85 c0                	test   %eax,%eax
   1edbb:	0f 84 e9 48 00 00    	je     236aa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1edc1:	89 c0                	mov    %eax,%eax
   1edc3:	49 39 c4             	cmp    %rax,%r12
   1edc6:	0f 86 de 48 00 00    	jbe    236aa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1edcc:	48 c1 e0 06          	shl    $0x6,%rax
   1edd0:	41 83 7c 05 04 08    	cmpl   $0x8,0x4(%r13,%rax,1)
   1edd6:	0f 85 98 48 00 00    	jne    23674 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4bd4>
   1eddc:	48 8d 3d 75 84 01 00 	lea    0x18475(%rip),%rdi        # 37258 <_fini+0x21d4>
   1ede3:	31 f6                	xor    %esi,%esi
   1ede5:	e9 a8 48 00 00       	jmpq   23692 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4bf2>
   1edea:	ff 15 30 6c 02 00    	callq  *0x26c30(%rip)        # 45a20 <__errno_location@GLIBC_2.2.5>
   1edf0:	89 ef                	mov    %ebp,%edi
   1edf2:	ff 15 48 6e 02 00    	callq  *0x26e48(%rip)        # 45c40 <close@GLIBC_2.2.5>
   1edf8:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
   1edff:	e9 91 4c 00 00       	jmpq   23a95 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4ff5>
   1ee04:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   1ee09:	4c 29 e9             	sub    %r13,%rcx
   1ee0c:	0f 82 98 48 00 00    	jb     236aa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1ee12:	66 83 f8 40          	cmp    $0x40,%ax
   1ee16:	0f 85 8e 48 00 00    	jne    236aa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1ee1c:	48 83 f9 40          	cmp    $0x40,%rcx
   1ee20:	0f 82 84 48 00 00    	jb     236aa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1ee26:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   1ee2b:	4c 01 e8             	add    %r13,%rax
   1ee2e:	89 c1                	mov    %eax,%ecx
   1ee30:	83 e1 07             	and    $0x7,%ecx
   1ee33:	48 85 c9             	test   %rcx,%rcx
   1ee36:	0f 85 6e 48 00 00    	jne    236aa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1ee3c:	4c 8b 60 20          	mov    0x20(%rax),%r12
   1ee40:	4d 85 e4             	test   %r12,%r12
   1ee43:	0f 85 1b ff ff ff    	jne    1ed64 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2c4>
   1ee49:	4c 8d 2d 08 84 01 00 	lea    0x18408(%rip),%r13        # 37258 <_fini+0x21d4>
   1ee50:	45 31 e4             	xor    %r12d,%r12d
   1ee53:	4c 89 ac 24 80 00 00 	mov    %r13,0x80(%rsp)
   1ee5a:	00 
   1ee5b:	31 c0                	xor    %eax,%eax
   1ee5d:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1ee62:	4d 89 e6             	mov    %r12,%r14
   1ee65:	49 c1 e6 06          	shl    $0x6,%r14
   1ee69:	48 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%rbp
   1ee70:	31 c9                	xor    %ecx,%ecx
   1ee72:	4c 89 e8             	mov    %r13,%rax
   1ee75:	49 39 ce             	cmp    %rcx,%r14
   1ee78:	0f 84 1f 01 00 00    	je     1ef9d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4fd>
   1ee7e:	48 83 c5 01          	add    $0x1,%rbp
   1ee82:	48 83 c1 40          	add    $0x40,%rcx
   1ee86:	83 78 04 02          	cmpl   $0x2,0x4(%rax)
   1ee8a:	48 8d 40 40          	lea    0x40(%rax),%rax
   1ee8e:	75 e5                	jne    1ee75 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3d5>
   1ee90:	4d 8b 7c 0d d8       	mov    -0x28(%r13,%rcx,1),%r15
   1ee95:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   1ee9a:	4c 29 f8             	sub    %r15,%rax
   1ee9d:	0f 82 07 48 00 00    	jb     236aa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1eea3:	49 8b 5c 0d e0       	mov    -0x20(%r13,%rcx,1),%rbx
   1eea8:	48 39 d8             	cmp    %rbx,%rax
   1eeab:	0f 82 f9 47 00 00    	jb     236aa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1eeb1:	48 ba ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rdx
   1eeb8:	aa aa aa 
   1eebb:	48 89 d8             	mov    %rbx,%rax
   1eebe:	48 f7 e2             	mul    %rdx
   1eec1:	48 c1 ea 04          	shr    $0x4,%rdx
   1eec5:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   1eeca:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
   1eed1:	00 
   1eed2:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
   1eed6:	48 39 c3             	cmp    %rax,%rbx
   1eed9:	0f 82 cb 47 00 00    	jb     236aa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1eedf:	4c 03 7c 24 58       	add    0x58(%rsp),%r15
   1eee4:	44 89 f8             	mov    %r15d,%eax
   1eee7:	83 e0 07             	and    $0x7,%eax
   1eeea:	48 85 c0             	test   %rax,%rax
   1eeed:	0f 85 b7 47 00 00    	jne    236aa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1eef3:	41 8b 44 0d e8       	mov    -0x18(%r13,%rcx,1),%eax
   1eef8:	49 39 c4             	cmp    %rax,%r12
   1eefb:	0f 86 a9 47 00 00    	jbe    236aa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1ef01:	48 c1 e0 06          	shl    $0x6,%rax
   1ef05:	41 83 7c 05 04 08    	cmpl   $0x8,0x4(%r13,%rax,1)
   1ef0b:	75 0b                	jne    1ef18 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x478>
   1ef0d:	48 8d 3d 44 83 01 00 	lea    0x18344(%rip),%rdi        # 37258 <_fini+0x21d4>
   1ef14:	31 f6                	xor    %esi,%esi
   1ef16:	eb 26                	jmp    1ef3e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x49e>
   1ef18:	49 8b 7c 05 18       	mov    0x18(%r13,%rax,1),%rdi
   1ef1d:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   1ef22:	48 29 f9             	sub    %rdi,%rcx
   1ef25:	0f 82 7f 47 00 00    	jb     236aa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1ef2b:	49 8b 74 05 20       	mov    0x20(%r13,%rax,1),%rsi
   1ef30:	48 39 f1             	cmp    %rsi,%rcx
   1ef33:	0f 82 71 47 00 00    	jb     236aa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1ef39:	48 03 7c 24 58       	add    0x58(%rsp),%rdi
   1ef3e:	ff 15 54 6b 02 00    	callq  *0x26b54(%rip)        # 45a98 <_GLOBAL_OFFSET_TABLE_+0x108>
   1ef44:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1ef49:	31 c0                	xor    %eax,%eax
   1ef4b:	eb 09                	jmp    1ef56 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4b6>
   1ef4d:	48 83 c0 40          	add    $0x40,%rax
   1ef51:	49 39 c6             	cmp    %rax,%r14
   1ef54:	74 3d                	je     1ef93 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4f3>
   1ef56:	41 83 7c 05 04 12    	cmpl   $0x12,0x4(%r13,%rax,1)
   1ef5c:	75 ef                	jne    1ef4d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4ad>
   1ef5e:	41 8b 4c 05 28       	mov    0x28(%r13,%rax,1),%ecx
   1ef63:	48 39 e9             	cmp    %rbp,%rcx
   1ef66:	75 e5                	jne    1ef4d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4ad>
   1ef68:	49 8b 4c 05 18       	mov    0x18(%r13,%rax,1),%rcx
   1ef6d:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   1ef72:	48 29 ce             	sub    %rcx,%rsi
   1ef75:	0f 82 2f 47 00 00    	jb     236aa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1ef7b:	49 3b 74 05 20       	cmp    0x20(%r13,%rax,1),%rsi
   1ef80:	0f 82 24 47 00 00    	jb     236aa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1ef86:	03 4c 24 58          	add    0x58(%rsp),%ecx
   1ef8a:	f6 c1 03             	test   $0x3,%cl
   1ef8d:	0f 85 17 47 00 00    	jne    236aa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1ef93:	48 83 fb 17          	cmp    $0x17,%rbx
   1ef97:	0f 87 42 3e 00 00    	ja     22ddf <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x433f>
   1ef9d:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
   1efa4:	31 d2                	xor    %edx,%edx
   1efa6:	4c 8d 3d ab 82 01 00 	lea    0x182ab(%rip),%r15        # 37258 <_fini+0x21d4>
   1efad:	31 f6                	xor    %esi,%esi
   1efaf:	4c 89 e8             	mov    %r13,%rax
   1efb2:	49 39 f6             	cmp    %rsi,%r14
   1efb5:	0f 84 a1 00 00 00    	je     1f05c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5bc>
   1efbb:	48 83 c3 01          	add    $0x1,%rbx
   1efbf:	48 83 c6 40          	add    $0x40,%rsi
   1efc3:	83 78 04 0b          	cmpl   $0xb,0x4(%rax)
   1efc7:	48 8d 40 40          	lea    0x40(%rax),%rax
   1efcb:	75 e5                	jne    1efb2 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x512>
   1efcd:	4d 8b 7c 35 d8       	mov    -0x28(%r13,%rsi,1),%r15
   1efd2:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   1efd7:	4c 29 f8             	sub    %r15,%rax
   1efda:	0f 82 ca 46 00 00    	jb     236aa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1efe0:	49 8b 4c 35 e0       	mov    -0x20(%r13,%rsi,1),%rcx
   1efe5:	48 39 c8             	cmp    %rcx,%rax
   1efe8:	0f 82 bc 46 00 00    	jb     236aa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1efee:	48 ba ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rdx
   1eff5:	aa aa aa 
   1eff8:	48 89 c8             	mov    %rcx,%rax
   1effb:	48 f7 e2             	mul    %rdx
   1effe:	48 c1 ea 04          	shr    $0x4,%rdx
   1f002:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   1f007:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
   1f00e:	00 
   1f00f:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
   1f013:	48 39 c1             	cmp    %rax,%rcx
   1f016:	0f 82 8e 46 00 00    	jb     236aa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1f01c:	4c 03 7c 24 58       	add    0x58(%rsp),%r15
   1f021:	44 89 f8             	mov    %r15d,%eax
   1f024:	83 e0 07             	and    $0x7,%eax
   1f027:	48 85 c0             	test   %rax,%rax
   1f02a:	0f 85 7a 46 00 00    	jne    236aa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1f030:	41 8b 44 35 e8       	mov    -0x18(%r13,%rsi,1),%eax
   1f035:	49 39 c4             	cmp    %rax,%r12
   1f038:	0f 86 6c 46 00 00    	jbe    236aa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   1f03e:	48 c1 e0 06          	shl    $0x6,%rax
   1f042:	41 83 7c 05 04 08    	cmpl   $0x8,0x4(%r13,%rax,1)
   1f048:	0f 85 16 3d 00 00    	jne    22d64 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x42c4>
   1f04e:	48 8d 3d 03 82 01 00 	lea    0x18203(%rip),%rdi        # 37258 <_fini+0x21d4>
   1f055:	31 f6                	xor    %esi,%esi
   1f057:	e9 2e 3d 00 00       	jmpq   22d8a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x42ea>
   1f05c:	31 ed                	xor    %ebp,%ebp
   1f05e:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
   1f063:	48 8d 04 ed 00 00 00 	lea    0x0(,%rbp,8),%rax
   1f06a:	00 
   1f06b:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
   1f06f:	4c 89 fb             	mov    %r15,%rbx
   1f072:	48 85 c0             	test   %rax,%rax
   1f075:	0f 84 e8 01 00 00    	je     1f263 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x7c3>
   1f07b:	48 89 d9             	mov    %rbx,%rcx
   1f07e:	48 83 c3 18          	add    $0x18,%rbx
   1f082:	48 83 c0 e8          	add    $0xffffffffffffffe8,%rax
   1f086:	66 83 79 06 00       	cmpw   $0x0,0x6(%rcx)
   1f08b:	74 e5                	je     1f072 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5d2>
   1f08d:	0f b6 49 04          	movzbl 0x4(%rcx),%ecx
   1f091:	80 e1 0f             	and    $0xf,%cl
   1f094:	80 c1 ff             	add    $0xff,%cl
   1f097:	80 f9 01             	cmp    $0x1,%cl
   1f09a:	77 d6                	ja     1f072 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5d2>
   1f09c:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   1f0a1:	44 8b 73 e8          	mov    -0x18(%rbx),%r14d
   1f0a5:	0f 10 43 f0          	movups -0x10(%rbx),%xmm0
   1f0a9:	0f 29 84 24 a0 01 00 	movaps %xmm0,0x1a0(%rsp)
   1f0b0:	00 
   1f0b1:	bf 18 00 00 00       	mov    $0x18,%edi
   1f0b6:	be 08 00 00 00       	mov    $0x8,%esi
   1f0bb:	ff 15 c7 6a 02 00    	callq  *0x26ac7(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   1f0c1:	48 85 c0             	test   %rax,%rax
   1f0c4:	0f 84 99 4a 00 00    	je     23b63 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50c3>
   1f0ca:	66 0f 6f 84 24 a0 01 	movdqa 0x1a0(%rsp),%xmm0
   1f0d1:	00 00 
   1f0d3:	f3 0f 7f 00          	movdqu %xmm0,(%rax)
   1f0d7:	44 89 70 10          	mov    %r14d,0x10(%rax)
   1f0db:	48 89 84 24 f0 03 00 	mov    %rax,0x3f0(%rsp)
   1f0e2:	00 
   1f0e3:	48 c7 84 24 f8 03 00 	movq   $0x1,0x3f8(%rsp)
   1f0ea:	00 01 00 00 00 
   1f0ef:	48 8d 44 6d 00       	lea    0x0(%rbp,%rbp,2),%rax
   1f0f4:	49 8d 2c c7          	lea    (%r15,%rax,8),%rbp
   1f0f8:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   1f0fe:	bf 04 00 00 00       	mov    $0x4,%edi
   1f103:	4c 8d 05 36 62 fe ff 	lea    -0x19dca(%rip),%r8        # 5340 <__rust_alloc>
   1f10a:	4c 89 bc 24 00 04 00 	mov    %r15,0x400(%rsp)
   1f111:	00 
   1f112:	48 39 dd             	cmp    %rbx,%rbp
   1f115:	0f 84 6a 01 00 00    	je     1f285 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x7e5>
   1f11b:	48 89 d8             	mov    %rbx,%rax
   1f11e:	48 83 c3 18          	add    $0x18,%rbx
   1f122:	66 83 78 06 00       	cmpw   $0x0,0x6(%rax)
   1f127:	74 e9                	je     1f112 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x672>
   1f129:	0f b6 40 04          	movzbl 0x4(%rax),%eax
   1f12d:	24 0f                	and    $0xf,%al
   1f12f:	04 ff                	add    $0xff,%al
   1f131:	3c 01                	cmp    $0x1,%al
   1f133:	77 dd                	ja     1f112 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x672>
   1f135:	8b 73 e8             	mov    -0x18(%rbx),%esi
   1f138:	f3 0f 6f 43 f0       	movdqu -0x10(%rbx),%xmm0
   1f13d:	4c 39 bc 24 f8 03 00 	cmp    %r15,0x3f8(%rsp)
   1f144:	00 
   1f145:	0f 85 83 00 00 00    	jne    1f1ce <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x72e>
   1f14b:	4c 89 f8             	mov    %r15,%rax
   1f14e:	48 ff c0             	inc    %rax
   1f151:	0f 84 b2 49 00 00    	je     23b09 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5069>
   1f157:	4b 8d 0c 3f          	lea    (%r15,%r15,1),%rcx
   1f15b:	48 39 c1             	cmp    %rax,%rcx
   1f15e:	48 0f 47 c1          	cmova  %rcx,%rax
   1f162:	48 83 f8 04          	cmp    $0x4,%rax
   1f166:	48 0f 46 c7          	cmovbe %rdi,%rax
   1f16a:	31 c9                	xor    %ecx,%ecx
   1f16c:	ba 18 00 00 00       	mov    $0x18,%edx
   1f171:	48 f7 e2             	mul    %rdx
   1f174:	49 89 c6             	mov    %rax,%r14
   1f177:	0f 90 c0             	seto   %al
   1f17a:	0f 91 c1             	setno  %cl
   1f17d:	48 c1 e1 03          	shl    $0x3,%rcx
   1f181:	4d 85 ff             	test   %r15,%r15
   1f184:	89 b4 24 a0 01 00 00 	mov    %esi,0x1a0(%rsp)
   1f18b:	66 0f 7f 84 24 e0 00 	movdqa %xmm0,0xe0(%rsp)
   1f192:	00 00 
   1f194:	74 42                	je     1f1d8 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x738>
   1f196:	84 c0                	test   %al,%al
   1f198:	0f 85 6b 49 00 00    	jne    23b09 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5069>
   1f19e:	48 8b bc 24 f0 03 00 	mov    0x3f0(%rsp),%rdi
   1f1a5:	00 
   1f1a6:	48 85 ff             	test   %rdi,%rdi
   1f1a9:	74 35                	je     1f1e0 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x740>
   1f1ab:	4a 8d 04 fd 00 00 00 	lea    0x0(,%r15,8),%rax
   1f1b2:	00 
   1f1b3:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
   1f1b7:	48 85 f6             	test   %rsi,%rsi
   1f1ba:	0f 84 90 00 00 00    	je     1f250 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x7b0>
   1f1c0:	48 89 ca             	mov    %rcx,%rdx
   1f1c3:	4c 89 f1             	mov    %r14,%rcx
   1f1c6:	ff 15 ac 6d 02 00    	callq  *0x26dac(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
   1f1cc:	eb 20                	jmp    1f1ee <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x74e>
   1f1ce:	48 8b 8c 24 f0 03 00 	mov    0x3f0(%rsp),%rcx
   1f1d5:	00 
   1f1d6:	eb 62                	jmp    1f23a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x79a>
   1f1d8:	84 c0                	test   %al,%al
   1f1da:	0f 85 29 49 00 00    	jne    23b09 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5069>
   1f1e0:	4d 85 f6             	test   %r14,%r14
   1f1e3:	74 0c                	je     1f1f1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x751>
   1f1e5:	4c 89 f7             	mov    %r14,%rdi
   1f1e8:	48 89 ce             	mov    %rcx,%rsi
   1f1eb:	41 ff d0             	callq  *%r8
   1f1ee:	48 89 c1             	mov    %rax,%rcx
   1f1f1:	48 85 c9             	test   %rcx,%rcx
   1f1f4:	bf 04 00 00 00       	mov    $0x4,%edi
   1f1f9:	4c 8d 05 40 61 fe ff 	lea    -0x19ec0(%rip),%r8        # 5340 <__rust_alloc>
   1f200:	48 ba ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rdx
   1f207:	aa aa aa 
   1f20a:	8b b4 24 a0 01 00 00 	mov    0x1a0(%rsp),%esi
   1f211:	66 0f 6f 84 24 e0 00 	movdqa 0xe0(%rsp),%xmm0
   1f218:	00 00 
   1f21a:	0f 84 f1 48 00 00    	je     23b11 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5071>
   1f220:	48 89 8c 24 f0 03 00 	mov    %rcx,0x3f0(%rsp)
   1f227:	00 
   1f228:	4c 89 f0             	mov    %r14,%rax
   1f22b:	48 f7 e2             	mul    %rdx
   1f22e:	48 c1 ea 04          	shr    $0x4,%rdx
   1f232:	48 89 94 24 f8 03 00 	mov    %rdx,0x3f8(%rsp)
   1f239:	00 
   1f23a:	4b 8d 04 7f          	lea    (%r15,%r15,2),%rax
   1f23e:	f3 0f 7f 04 c1       	movdqu %xmm0,(%rcx,%rax,8)
   1f243:	89 74 c1 10          	mov    %esi,0x10(%rcx,%rax,8)
   1f247:	49 83 c7 01          	add    $0x1,%r15
   1f24b:	e9 ba fe ff ff       	jmpq   1f10a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x66a>
   1f250:	4d 85 f6             	test   %r14,%r14
   1f253:	74 9c                	je     1f1f1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x751>
   1f255:	4c 89 f7             	mov    %r14,%rdi
   1f258:	48 89 ce             	mov    %rcx,%rsi
   1f25b:	ff 15 27 69 02 00    	callq  *0x26927(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   1f261:	eb 8b                	jmp    1f1ee <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x74e>
   1f263:	48 c7 84 24 a0 0a 00 	movq   $0x8,0xaa0(%rsp)
   1f26a:	00 08 00 00 00 
   1f26f:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1f273:	f3 0f 7f 84 24 a8 0a 	movdqu %xmm0,0xaa8(%rsp)
   1f27a:	00 00 
   1f27c:	bf 08 00 00 00       	mov    $0x8,%edi
   1f281:	31 f6                	xor    %esi,%esi
   1f283:	eb 2f                	jmp    1f2b4 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x814>
   1f285:	48 8b b4 24 00 04 00 	mov    0x400(%rsp),%rsi
   1f28c:	00 
   1f28d:	48 89 b4 24 b0 0a 00 	mov    %rsi,0xab0(%rsp)
   1f294:	00 
   1f295:	f3 0f 6f 84 24 f0 03 	movdqu 0x3f0(%rsp),%xmm0
   1f29c:	00 00 
   1f29e:	66 0f 7f 84 24 a0 0a 	movdqa %xmm0,0xaa0(%rsp)
   1f2a5:	00 00 
   1f2a7:	48 8b bc 24 a0 0a 00 	mov    0xaa0(%rsp),%rdi
   1f2ae:	00 
   1f2af:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   1f2b4:	48 8d 84 24 f0 06 00 	lea    0x6f0(%rsp),%rax
   1f2bb:	00 
   1f2bc:	48 89 84 24 f0 03 00 	mov    %rax,0x3f0(%rsp)
   1f2c3:	00 
   1f2c4:	48 89 d3             	mov    %rdx,%rbx
   1f2c7:	48 85 f6             	test   %rsi,%rsi
   1f2ca:	74 0a                	je     1f2d6 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x836>
   1f2cc:	48 0f bd c6          	bsr    %rsi,%rax
   1f2d0:	48 83 f0 3f          	xor    $0x3f,%rax
   1f2d4:	eb 05                	jmp    1f2db <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x83b>
   1f2d6:	b8 40 00 00 00       	mov    $0x40,%eax
   1f2db:	41 b8 40 00 00 00    	mov    $0x40,%r8d
   1f2e1:	41 29 c0             	sub    %eax,%r8d
   1f2e4:	48 8d 94 24 f0 03 00 	lea    0x3f0(%rsp),%rdx
   1f2eb:	00 
   1f2ec:	31 c9                	xor    %ecx,%ecx
   1f2ee:	e8 5d 8a fe ff       	callq  7d50 <core::slice::sort::recurse>
   1f2f3:	66 0f 6f 84 24 a0 0a 	movdqa 0xaa0(%rsp),%xmm0
   1f2fa:	00 00 
   1f2fc:	66 0f 7f 84 24 90 0c 	movdqa %xmm0,0xc90(%rsp)
   1f303:	00 00 
   1f305:	48 8b 84 24 b0 0a 00 	mov    0xab0(%rsp),%rax
   1f30c:	00 
   1f30d:	48 89 84 24 a0 0c 00 	mov    %rax,0xca0(%rsp)
   1f314:	00 
   1f315:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
   1f31c:	00 
   1f31d:	66 0f 7f 84 24 c0 00 	movdqa %xmm0,0xc0(%rsp)
   1f324:	00 00 
   1f326:	48 83 7c 24 58 00    	cmpq   $0x0,0x58(%rsp)
   1f32c:	0f 84 9a 43 00 00    	je     236cc <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c2c>
   1f332:	48 8b 84 24 d0 00 00 	mov    0xd0(%rsp),%rax
   1f339:	00 
   1f33a:	48 89 84 24 60 0c 00 	mov    %rax,0xc60(%rsp)
   1f341:	00 
   1f342:	66 0f 6f 84 24 c0 00 	movdqa 0xc0(%rsp),%xmm0
   1f349:	00 00 
   1f34b:	66 0f 7f 84 24 50 0c 	movdqa %xmm0,0xc50(%rsp)
   1f352:	00 00 
   1f354:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
   1f359:	48 89 8c 24 f8 05 00 	mov    %rcx,0x5f8(%rsp)
   1f360:	00 
   1f361:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   1f366:	48 89 8c 24 00 06 00 	mov    %rcx,0x600(%rsp)
   1f36d:	00 
   1f36e:	4c 89 ac 24 08 06 00 	mov    %r13,0x608(%rsp)
   1f375:	00 
   1f376:	4c 89 a4 24 10 06 00 	mov    %r12,0x610(%rsp)
   1f37d:	00 
   1f37e:	48 8b 8c 24 80 00 00 	mov    0x80(%rsp),%rcx
   1f385:	00 
   1f386:	48 89 8c 24 18 06 00 	mov    %rcx,0x618(%rsp)
   1f38d:	00 
   1f38e:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   1f393:	48 89 8c 24 20 06 00 	mov    %rcx,0x620(%rsp)
   1f39a:	00 
   1f39b:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   1f3a0:	48 89 8c 24 28 06 00 	mov    %rcx,0x628(%rsp)
   1f3a7:	00 
   1f3a8:	48 89 9c 24 30 06 00 	mov    %rbx,0x630(%rsp)
   1f3af:	00 
   1f3b0:	f3 0f 7f 84 24 38 06 	movdqu %xmm0,0x638(%rsp)
   1f3b7:	00 00 
   1f3b9:	48 89 84 24 48 06 00 	mov    %rax,0x648(%rsp)
   1f3c0:	00 
   1f3c1:	31 ff                	xor    %edi,%edi
   1f3c3:	ff 15 6f 67 02 00    	callq  *0x2676f(%rip)        # 45b38 <_GLOBAL_OFFSET_TABLE_+0x1a8>
   1f3c9:	48 89 d1             	mov    %rdx,%rcx
   1f3cc:	48 8d bc 24 f8 05 00 	lea    0x5f8(%rsp),%rdi
   1f3d3:	00 
   1f3d4:	48 8d b4 24 d0 01 00 	lea    0x1d0(%rsp),%rsi
   1f3db:	00 
   1f3dc:	48 89 c2             	mov    %rax,%rdx
   1f3df:	e8 1c 4a 00 00       	callq  23e00 <std::backtrace_rs::symbolize::gimli::elf::Object::section>
   1f3e4:	48 89 94 24 80 00 00 	mov    %rdx,0x80(%rsp)
   1f3eb:	00 
   1f3ec:	48 85 c0             	test   %rax,%rax
   1f3ef:	48 8d 0d 62 7e 01 00 	lea    0x17e62(%rip),%rcx        # 37258 <_fini+0x21d4>
   1f3f6:	48 89 c2             	mov    %rax,%rdx
   1f3f9:	48 0f 44 d1          	cmove  %rcx,%rdx
   1f3fd:	48 89 54 24 78       	mov    %rdx,0x78(%rsp)
   1f402:	48 8b 8c 24 80 00 00 	mov    0x80(%rsp),%rcx
   1f409:	00 
   1f40a:	48 0f 44 c8          	cmove  %rax,%rcx
   1f40e:	48 89 8c 24 80 00 00 	mov    %rcx,0x80(%rsp)
   1f415:	00 
   1f416:	bf 01 00 00 00       	mov    $0x1,%edi
   1f41b:	ff 15 17 67 02 00    	callq  *0x26717(%rip)        # 45b38 <_GLOBAL_OFFSET_TABLE_+0x1a8>
   1f421:	48 89 d1             	mov    %rdx,%rcx
   1f424:	48 8d bc 24 f8 05 00 	lea    0x5f8(%rsp),%rdi
   1f42b:	00 
   1f42c:	48 8d b4 24 d0 01 00 	lea    0x1d0(%rsp),%rsi
   1f433:	00 
   1f434:	48 89 c2             	mov    %rax,%rdx
   1f437:	e8 c4 49 00 00       	callq  23e00 <std::backtrace_rs::symbolize::gimli::elf::Object::section>
   1f43c:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   1f441:	48 85 c0             	test   %rax,%rax
   1f444:	48 89 c2             	mov    %rax,%rdx
   1f447:	48 8d 0d 0a 7e 01 00 	lea    0x17e0a(%rip),%rcx        # 37258 <_fini+0x21d4>
   1f44e:	48 0f 44 d1          	cmove  %rcx,%rdx
   1f452:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   1f457:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   1f45c:	48 0f 44 c8          	cmove  %rax,%rcx
   1f460:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   1f465:	bf 06 00 00 00       	mov    $0x6,%edi
   1f46a:	ff 15 c8 66 02 00    	callq  *0x266c8(%rip)        # 45b38 <_GLOBAL_OFFSET_TABLE_+0x1a8>
   1f470:	48 89 d1             	mov    %rdx,%rcx
   1f473:	48 8d bc 24 f8 05 00 	lea    0x5f8(%rsp),%rdi
   1f47a:	00 
   1f47b:	48 8d b4 24 d0 01 00 	lea    0x1d0(%rsp),%rsi
   1f482:	00 
   1f483:	48 89 c2             	mov    %rax,%rdx
   1f486:	e8 75 49 00 00       	callq  23e00 <std::backtrace_rs::symbolize::gimli::elf::Object::section>
   1f48b:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
   1f490:	48 85 c0             	test   %rax,%rax
   1f493:	48 89 c2             	mov    %rax,%rdx
   1f496:	48 8d 0d bb 7d 01 00 	lea    0x17dbb(%rip),%rcx        # 37258 <_fini+0x21d4>
   1f49d:	48 0f 44 d1          	cmove  %rcx,%rdx
   1f4a1:	48 89 d5             	mov    %rdx,%rbp
   1f4a4:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   1f4a9:	48 0f 44 c8          	cmove  %rax,%rcx
   1f4ad:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   1f4b2:	bf 07 00 00 00       	mov    $0x7,%edi
   1f4b7:	ff 15 7b 66 02 00    	callq  *0x2667b(%rip)        # 45b38 <_GLOBAL_OFFSET_TABLE_+0x1a8>
   1f4bd:	48 89 d1             	mov    %rdx,%rcx
   1f4c0:	48 8d bc 24 f8 05 00 	lea    0x5f8(%rsp),%rdi
   1f4c7:	00 
   1f4c8:	48 8d b4 24 d0 01 00 	lea    0x1d0(%rsp),%rsi
   1f4cf:	00 
   1f4d0:	48 89 c2             	mov    %rax,%rdx
   1f4d3:	e8 28 49 00 00       	callq  23e00 <std::backtrace_rs::symbolize::gimli::elf::Object::section>
   1f4d8:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   1f4dd:	48 85 c0             	test   %rax,%rax
   1f4e0:	48 89 c2             	mov    %rax,%rdx
   1f4e3:	48 8d 0d 6e 7d 01 00 	lea    0x17d6e(%rip),%rcx        # 37258 <_fini+0x21d4>
   1f4ea:	48 0f 44 d1          	cmove  %rcx,%rdx
   1f4ee:	48 89 94 24 a8 00 00 	mov    %rdx,0xa8(%rsp)
   1f4f5:	00 
   1f4f6:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   1f4fb:	48 0f 44 c8          	cmove  %rax,%rcx
   1f4ff:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   1f504:	bf 08 00 00 00       	mov    $0x8,%edi
   1f509:	ff 15 29 66 02 00    	callq  *0x26629(%rip)        # 45b38 <_GLOBAL_OFFSET_TABLE_+0x1a8>
   1f50f:	48 89 d1             	mov    %rdx,%rcx
   1f512:	48 8d bc 24 f8 05 00 	lea    0x5f8(%rsp),%rdi
   1f519:	00 
   1f51a:	48 8d b4 24 d0 01 00 	lea    0x1d0(%rsp),%rsi
   1f521:	00 
   1f522:	48 89 c2             	mov    %rax,%rdx
   1f525:	e8 d6 48 00 00       	callq  23e00 <std::backtrace_rs::symbolize::gimli::elf::Object::section>
   1f52a:	48 89 94 24 a0 01 00 	mov    %rdx,0x1a0(%rsp)
   1f531:	00 
   1f532:	48 85 c0             	test   %rax,%rax
   1f535:	48 89 c2             	mov    %rax,%rdx
   1f538:	48 8d 0d 19 7d 01 00 	lea    0x17d19(%rip),%rcx        # 37258 <_fini+0x21d4>
   1f53f:	48 0f 44 d1          	cmove  %rcx,%rdx
   1f543:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
   1f548:	48 8b 8c 24 a0 01 00 	mov    0x1a0(%rsp),%rcx
   1f54f:	00 
   1f550:	48 0f 44 c8          	cmove  %rax,%rcx
   1f554:	48 89 8c 24 a0 01 00 	mov    %rcx,0x1a0(%rsp)
   1f55b:	00 
   1f55c:	bf 0f 00 00 00       	mov    $0xf,%edi
   1f561:	ff 15 d1 65 02 00    	callq  *0x265d1(%rip)        # 45b38 <_GLOBAL_OFFSET_TABLE_+0x1a8>
   1f567:	48 89 d1             	mov    %rdx,%rcx
   1f56a:	48 8d bc 24 f8 05 00 	lea    0x5f8(%rsp),%rdi
   1f571:	00 
   1f572:	48 8d b4 24 d0 01 00 	lea    0x1d0(%rsp),%rsi
   1f579:	00 
   1f57a:	48 89 c2             	mov    %rax,%rdx
   1f57d:	e8 7e 48 00 00       	callq  23e00 <std::backtrace_rs::symbolize::gimli::elf::Object::section>
   1f582:	48 89 94 24 e0 00 00 	mov    %rdx,0xe0(%rsp)
   1f589:	00 
   1f58a:	48 85 c0             	test   %rax,%rax
   1f58d:	49 89 c7             	mov    %rax,%r15
   1f590:	48 8d 0d c1 7c 01 00 	lea    0x17cc1(%rip),%rcx        # 37258 <_fini+0x21d4>
   1f597:	4c 0f 44 f9          	cmove  %rcx,%r15
   1f59b:	48 8b 8c 24 e0 00 00 	mov    0xe0(%rsp),%rcx
   1f5a2:	00 
   1f5a3:	48 0f 44 c8          	cmove  %rax,%rcx
   1f5a7:	48 89 8c 24 e0 00 00 	mov    %rcx,0xe0(%rsp)
   1f5ae:	00 
   1f5af:	bf 10 00 00 00       	mov    $0x10,%edi
   1f5b4:	ff 15 7e 65 02 00    	callq  *0x2657e(%rip)        # 45b38 <_GLOBAL_OFFSET_TABLE_+0x1a8>
   1f5ba:	48 89 d1             	mov    %rdx,%rcx
   1f5bd:	48 8d bc 24 f8 05 00 	lea    0x5f8(%rsp),%rdi
   1f5c4:	00 
   1f5c5:	48 8d b4 24 d0 01 00 	lea    0x1d0(%rsp),%rsi
   1f5cc:	00 
   1f5cd:	48 89 c2             	mov    %rax,%rdx
   1f5d0:	e8 2b 48 00 00       	callq  23e00 <std::backtrace_rs::symbolize::gimli::elf::Object::section>
   1f5d5:	49 89 d4             	mov    %rdx,%r12
   1f5d8:	48 85 c0             	test   %rax,%rax
   1f5db:	48 89 c3             	mov    %rax,%rbx
   1f5de:	48 8d 0d 73 7c 01 00 	lea    0x17c73(%rip),%rcx        # 37258 <_fini+0x21d4>
   1f5e5:	48 0f 44 d9          	cmove  %rcx,%rbx
   1f5e9:	4c 0f 44 e0          	cmove  %rax,%r12
   1f5ed:	bf 11 00 00 00       	mov    $0x11,%edi
   1f5f2:	ff 15 40 65 02 00    	callq  *0x26540(%rip)        # 45b38 <_GLOBAL_OFFSET_TABLE_+0x1a8>
   1f5f8:	48 89 d1             	mov    %rdx,%rcx
   1f5fb:	48 8d bc 24 f8 05 00 	lea    0x5f8(%rsp),%rdi
   1f602:	00 
   1f603:	48 8d b4 24 d0 01 00 	lea    0x1d0(%rsp),%rsi
   1f60a:	00 
   1f60b:	48 89 c2             	mov    %rax,%rdx
   1f60e:	e8 ed 47 00 00       	callq  23e00 <std::backtrace_rs::symbolize::gimli::elf::Object::section>
   1f613:	49 89 d6             	mov    %rdx,%r14
   1f616:	48 85 c0             	test   %rax,%rax
   1f619:	49 89 c5             	mov    %rax,%r13
   1f61c:	48 8d 0d 35 7c 01 00 	lea    0x17c35(%rip),%rcx        # 37258 <_fini+0x21d4>
   1f623:	4c 0f 44 e9          	cmove  %rcx,%r13
   1f627:	4c 0f 44 f0          	cmove  %rax,%r14
   1f62b:	bf 12 00 00 00       	mov    $0x12,%edi
   1f630:	ff 15 02 65 02 00    	callq  *0x26502(%rip)        # 45b38 <_GLOBAL_OFFSET_TABLE_+0x1a8>
   1f636:	48 89 d1             	mov    %rdx,%rcx
   1f639:	48 8d bc 24 f8 05 00 	lea    0x5f8(%rsp),%rdi
   1f640:	00 
   1f641:	48 8d b4 24 d0 01 00 	lea    0x1d0(%rsp),%rsi
   1f648:	00 
   1f649:	48 89 c2             	mov    %rax,%rdx
   1f64c:	e8 af 47 00 00       	callq  23e00 <std::backtrace_rs::symbolize::gimli::elf::Object::section>
   1f651:	48 8b 4c 24 78       	mov    0x78(%rsp),%rcx
   1f656:	48 89 8c 24 f0 06 00 	mov    %rcx,0x6f0(%rsp)
   1f65d:	00 
   1f65e:	48 8b 8c 24 80 00 00 	mov    0x80(%rsp),%rcx
   1f665:	00 
   1f666:	48 89 8c 24 f8 06 00 	mov    %rcx,0x6f8(%rsp)
   1f66d:	00 
   1f66e:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   1f673:	48 89 8c 24 00 07 00 	mov    %rcx,0x700(%rsp)
   1f67a:	00 
   1f67b:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   1f680:	48 89 8c 24 08 07 00 	mov    %rcx,0x708(%rsp)
   1f687:	00 
   1f688:	48 89 ac 24 10 07 00 	mov    %rbp,0x710(%rsp)
   1f68f:	00 
   1f690:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
   1f695:	48 89 b4 24 18 07 00 	mov    %rsi,0x718(%rsp)
   1f69c:	00 
   1f69d:	48 8b 8c 24 a8 00 00 	mov    0xa8(%rsp),%rcx
   1f6a4:	00 
   1f6a5:	48 89 8c 24 20 07 00 	mov    %rcx,0x720(%rsp)
   1f6ac:	00 
   1f6ad:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   1f6b2:	48 89 8c 24 28 07 00 	mov    %rcx,0x728(%rsp)
   1f6b9:	00 
   1f6ba:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
   1f6bf:	48 89 8c 24 30 07 00 	mov    %rcx,0x730(%rsp)
   1f6c6:	00 
   1f6c7:	48 8b 8c 24 a0 01 00 	mov    0x1a0(%rsp),%rcx
   1f6ce:	00 
   1f6cf:	48 89 8c 24 38 07 00 	mov    %rcx,0x738(%rsp)
   1f6d6:	00 
   1f6d7:	4c 89 ac 24 40 07 00 	mov    %r13,0x740(%rsp)
   1f6de:	00 
   1f6df:	4c 89 b4 24 48 07 00 	mov    %r14,0x748(%rsp)
   1f6e6:	00 
   1f6e7:	48 85 c0             	test   %rax,%rax
   1f6ea:	48 0f 44 d0          	cmove  %rax,%rdx
   1f6ee:	48 8d 0d 63 7b 01 00 	lea    0x17b63(%rip),%rcx        # 37258 <_fini+0x21d4>
   1f6f5:	48 0f 44 c1          	cmove  %rcx,%rax
   1f6f9:	48 89 84 24 50 07 00 	mov    %rax,0x750(%rsp)
   1f700:	00 
   1f701:	48 89 94 24 58 07 00 	mov    %rdx,0x758(%rsp)
   1f708:	00 
   1f709:	48 89 8c 24 60 07 00 	mov    %rcx,0x760(%rsp)
   1f710:	00 
   1f711:	48 c7 84 24 68 07 00 	movq   $0x0,0x768(%rsp)
   1f718:	00 00 00 00 00 
   1f71d:	48 89 8c 24 70 07 00 	mov    %rcx,0x770(%rsp)
   1f724:	00 
   1f725:	48 c7 84 24 78 07 00 	movq   $0x0,0x778(%rsp)
   1f72c:	00 00 00 00 00 
   1f731:	48 89 8c 24 80 07 00 	mov    %rcx,0x780(%rsp)
   1f738:	00 
   1f739:	48 c7 84 24 88 07 00 	movq   $0x0,0x788(%rsp)
   1f740:	00 00 00 00 00 
   1f745:	48 89 8c 24 90 07 00 	mov    %rcx,0x790(%rsp)
   1f74c:	00 
   1f74d:	48 c7 84 24 98 07 00 	movq   $0x0,0x798(%rsp)
   1f754:	00 00 00 00 00 
   1f759:	4c 89 bc 24 a0 07 00 	mov    %r15,0x7a0(%rsp)
   1f760:	00 
   1f761:	48 8b 84 24 e0 00 00 	mov    0xe0(%rsp),%rax
   1f768:	00 
   1f769:	48 89 84 24 a8 07 00 	mov    %rax,0x7a8(%rsp)
   1f770:	00 
   1f771:	48 89 9c 24 b0 07 00 	mov    %rbx,0x7b0(%rsp)
   1f778:	00 
   1f779:	4c 89 a4 24 b8 07 00 	mov    %r12,0x7b8(%rsp)
   1f780:	00 
   1f781:	48 c7 84 24 58 03 00 	movq   $0x8,0x358(%rsp)
   1f788:	00 08 00 00 00 
   1f78d:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1f791:	f3 0f 7f 84 24 60 03 	movdqu %xmm0,0x360(%rsp)
   1f798:	00 00 
   1f79a:	48 c7 84 24 c0 02 00 	movq   $0x8,0x2c0(%rsp)
   1f7a1:	00 08 00 00 00 
   1f7a6:	f3 0f 7f 84 24 c8 02 	movdqu %xmm0,0x2c8(%rsp)
   1f7ad:	00 00 
   1f7af:	48 85 f6             	test   %rsi,%rsi
   1f7b2:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   1f7b7:	0f 84 59 34 00 00    	je     22c16 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4176>
   1f7bd:	49 89 f7             	mov    %rsi,%r15
   1f7c0:	41 bd 00 00 00 00    	mov    $0x0,%r13d
   1f7c6:	eb 0e                	jmp    1f7d6 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xd36>
   1f7c8:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   1f7cd:	4d 85 ff             	test   %r15,%r15
   1f7d0:	0f 84 40 34 00 00    	je     22c16 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4176>
   1f7d6:	4c 89 bc 24 80 00 00 	mov    %r15,0x80(%rsp)
   1f7dd:	00 
   1f7de:	49 83 ff 04          	cmp    $0x4,%r15
   1f7e2:	0f 82 79 3f 00 00    	jb     23761 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4cc1>
   1f7e8:	48 8b 84 24 80 00 00 	mov    0x80(%rsp),%rax
   1f7ef:	00 
   1f7f0:	4c 8d 78 fc          	lea    -0x4(%rax),%r15
   1f7f4:	44 8b 75 00          	mov    0x0(%rbp),%r14d
   1f7f8:	4c 89 f0             	mov    %r14,%rax
   1f7fb:	48 c1 e8 04          	shr    $0x4,%rax
   1f7ff:	3d ff ff ff 0f       	cmp    $0xfffffff,%eax
   1f804:	73 1a                	jae    1f820 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xd80>
   1f806:	48 83 c5 04          	add    $0x4,%rbp
   1f80a:	c6 84 24 a8 00 00 00 	movb   $0x4,0xa8(%rsp)
   1f811:	04 
   1f812:	b8 04 00 00 00       	mov    $0x4,%eax
   1f817:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   1f81c:	31 c0                	xor    %eax,%eax
   1f81e:	eb 3c                	jmp    1f85c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xdbc>
   1f820:	41 83 fe ff          	cmp    $0xffffffff,%r14d
   1f824:	0f 85 37 3f 00 00    	jne    23761 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4cc1>
   1f82a:	49 83 ff 08          	cmp    $0x8,%r15
   1f82e:	0f 82 2d 3f 00 00    	jb     23761 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4cc1>
   1f834:	48 8b 84 24 80 00 00 	mov    0x80(%rsp),%rax
   1f83b:	00 
   1f83c:	4c 8d 78 f4          	lea    -0xc(%rax),%r15
   1f840:	4c 8b 75 04          	mov    0x4(%rbp),%r14
   1f844:	48 83 c5 0c          	add    $0xc,%rbp
   1f848:	c6 84 24 a8 00 00 00 	movb   $0x8,0xa8(%rsp)
   1f84f:	08 
   1f850:	b8 0c 00 00 00       	mov    $0xc,%eax
   1f855:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   1f85a:	b0 01                	mov    $0x1,%al
   1f85c:	4d 29 f7             	sub    %r14,%r15
   1f85f:	0f 82 fc 3e 00 00    	jb     23761 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4cc1>
   1f865:	49 83 fe 02          	cmp    $0x2,%r14
   1f869:	0f 82 f2 3e 00 00    	jb     23761 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4cc1>
   1f86f:	49 8d 4e fe          	lea    -0x2(%r14),%rcx
   1f873:	0f b7 55 00          	movzwl 0x0(%rbp),%edx
   1f877:	89 54 24 20          	mov    %edx,0x20(%rsp)
   1f87b:	83 c2 fe             	add    $0xfffffffe,%edx
   1f87e:	66 83 fa 03          	cmp    $0x3,%dx
   1f882:	4c 89 ac 24 a0 01 00 	mov    %r13,0x1a0(%rsp)
   1f889:	00 
   1f88a:	73 1c                	jae    1f8a8 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xe08>
   1f88c:	84 c0                	test   %al,%al
   1f88e:	74 71                	je     1f901 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xe61>
   1f890:	48 83 f9 07          	cmp    $0x7,%rcx
   1f894:	0f 86 c7 3e 00 00    	jbe    23761 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4cc1>
   1f89a:	48 8d 45 0a          	lea    0xa(%rbp),%rax
   1f89e:	49 8d 4e f6          	lea    -0xa(%r14),%rcx
   1f8a2:	48 8b 55 02          	mov    0x2(%rbp),%rdx
   1f8a6:	eb 6e                	jmp    1f916 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xe76>
   1f8a8:	48 85 c9             	test   %rcx,%rcx
   1f8ab:	0f 84 b0 3e 00 00    	je     23761 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4cc1>
   1f8b1:	66 83 7c 24 20 05    	cmpw   $0x5,0x20(%rsp)
   1f8b7:	0f 85 a4 3e 00 00    	jne    23761 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4cc1>
   1f8bd:	49 83 fe 03          	cmp    $0x3,%r14
   1f8c1:	0f 84 9a 3e 00 00    	je     23761 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4cc1>
   1f8c7:	80 7d 02 01          	cmpb   $0x1,0x2(%rbp)
   1f8cb:	0f 85 90 3e 00 00    	jne    23761 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4cc1>
   1f8d1:	48 8d 4d 04          	lea    0x4(%rbp),%rcx
   1f8d5:	49 8d 76 fc          	lea    -0x4(%r14),%rsi
   1f8d9:	8a 55 03             	mov    0x3(%rbp),%dl
   1f8dc:	88 54 24 70          	mov    %dl,0x70(%rsp)
   1f8e0:	84 c0                	test   %al,%al
   1f8e2:	74 5d                	je     1f941 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xea1>
   1f8e4:	48 83 fe 07          	cmp    $0x7,%rsi
   1f8e8:	0f 86 73 3e 00 00    	jbe    23761 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4cc1>
   1f8ee:	48 89 f2             	mov    %rsi,%rdx
   1f8f1:	48 89 c8             	mov    %rcx,%rax
   1f8f4:	48 8b 09             	mov    (%rcx),%rcx
   1f8f7:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   1f8fc:	48 89 f1             	mov    %rsi,%rcx
   1f8ff:	eb 57                	jmp    1f958 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xeb8>
   1f901:	48 83 f9 04          	cmp    $0x4,%rcx
   1f905:	0f 82 56 3e 00 00    	jb     23761 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4cc1>
   1f90b:	48 8d 45 06          	lea    0x6(%rbp),%rax
   1f90f:	49 8d 4e fa          	lea    -0x6(%r14),%rcx
   1f913:	8b 55 02             	mov    0x2(%rbp),%edx
   1f916:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   1f91b:	48 85 c9             	test   %rcx,%rcx
   1f91e:	0f 84 3d 3e 00 00    	je     23761 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4cc1>
   1f924:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
   1f928:	48 89 4c 24 78       	mov    %rcx,0x78(%rsp)
   1f92d:	8a 08                	mov    (%rax),%cl
   1f92f:	88 4c 24 70          	mov    %cl,0x70(%rsp)
   1f933:	48 83 c0 01          	add    $0x1,%rax
   1f937:	48 89 84 24 e0 00 00 	mov    %rax,0xe0(%rsp)
   1f93e:	00 
   1f93f:	eb 2c                	jmp    1f96d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xecd>
   1f941:	48 83 fe 04          	cmp    $0x4,%rsi
   1f945:	0f 82 16 3e 00 00    	jb     23761 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4cc1>
   1f94b:	8b 01                	mov    (%rcx),%eax
   1f94d:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1f952:	4c 89 f1             	mov    %r14,%rcx
   1f955:	48 89 e8             	mov    %rbp,%rax
   1f958:	48 83 c0 08          	add    $0x8,%rax
   1f95c:	48 89 84 24 e0 00 00 	mov    %rax,0xe0(%rsp)
   1f963:	00 
   1f964:	48 83 c1 f8          	add    $0xfffffffffffffff8,%rcx
   1f968:	48 89 4c 24 78       	mov    %rcx,0x78(%rsp)
   1f96d:	48 8b 84 24 d0 02 00 	mov    0x2d0(%rsp),%rax
   1f974:	00 
   1f975:	48 89 84 24 e8 06 00 	mov    %rax,0x6e8(%rsp)
   1f97c:	00 
   1f97d:	4c 8b a4 24 f0 06 00 	mov    0x6f0(%rsp),%r12
   1f984:	00 
   1f985:	4c 8b ac 24 f8 06 00 	mov    0x6f8(%rsp),%r13
   1f98c:	00 
   1f98d:	4c 2b 6c 24 18       	sub    0x18(%rsp),%r13
   1f992:	73 19                	jae    1f9ad <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xf0d>
   1f994:	4c 89 e3             	mov    %r12,%rbx
   1f997:	48 c1 eb 08          	shr    $0x8,%rbx
   1f99b:	49 c1 e4 38          	shl    $0x38,%r12
   1f99f:	b1 01                	mov    $0x1,%cl
   1f9a1:	b0 13                	mov    $0x13,%al
   1f9a3:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1f9a8:	e9 7a 06 00 00       	jmpq   20027 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1587>
   1f9ad:	48 8d bc 24 50 06 00 	lea    0x650(%rsp),%rdi
   1f9b4:	00 
   1f9b5:	ff 15 3d 61 02 00    	callq  *0x2613d(%rip)        # 45af8 <_GLOBAL_OFFSET_TABLE_+0x168>
   1f9bb:	4c 03 64 24 18       	add    0x18(%rsp),%r12
   1f9c0:	b8 13 00 00 00       	mov    $0x13,%eax
   1f9c5:	4d 85 ed             	test   %r13,%r13
   1f9c8:	0f 84 ca 05 00 00    	je     1ff98 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x14f8>
   1f9ce:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1f9d3:	4c 89 7c 24 28       	mov    %r15,0x28(%rsp)
   1f9d8:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
   1f9dd:	31 c0                	xor    %eax,%eax
   1f9df:	31 ed                	xor    %ebp,%ebp
   1f9e1:	31 c9                	xor    %ecx,%ecx
   1f9e3:	41 0f b6 14 04       	movzbl (%r12,%rax,1),%edx
   1f9e8:	83 f9 3f             	cmp    $0x3f,%ecx
   1f9eb:	75 09                	jne    1f9f6 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xf56>
   1f9ed:	80 fa 01             	cmp    $0x1,%dl
   1f9f0:	0f 87 a9 05 00 00    	ja     1ff9f <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x14ff>
   1f9f6:	0f b6 d2             	movzbl %dl,%edx
   1f9f9:	89 d6                	mov    %edx,%esi
   1f9fb:	83 e6 7f             	and    $0x7f,%esi
   1f9fe:	48 d3 e6             	shl    %cl,%rsi
   1fa01:	48 09 f5             	or     %rsi,%rbp
   1fa04:	84 d2                	test   %dl,%dl
   1fa06:	79 11                	jns    1fa19 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xf79>
   1fa08:	83 c1 07             	add    $0x7,%ecx
   1fa0b:	48 83 c0 01          	add    $0x1,%rax
   1fa0f:	49 39 c5             	cmp    %rax,%r13
   1fa12:	75 cf                	jne    1f9e3 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xf43>
   1fa14:	e9 95 05 00 00       	jmpq   1ffae <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x150e>
   1fa19:	48 85 ed             	test   %rbp,%rbp
   1fa1c:	74 3b                	je     1fa59 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xfb9>
   1fa1e:	49 8d 4d ff          	lea    -0x1(%r13),%rcx
   1fa22:	48 39 c1             	cmp    %rax,%rcx
   1fa25:	0f 84 62 0d 00 00    	je     2078d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1ced>
   1fa2b:	4d 89 ef             	mov    %r13,%r15
   1fa2e:	49 29 c7             	sub    %rax,%r15
   1fa31:	41 0f b6 4c 04 01    	movzbl 0x1(%r12,%rax,1),%ecx
   1fa37:	89 ca                	mov    %ecx,%edx
   1fa39:	83 e2 7f             	and    $0x7f,%edx
   1fa3c:	89 54 24 60          	mov    %edx,0x60(%rsp)
   1fa40:	84 c9                	test   %cl,%cl
   1fa42:	0f 88 3b 01 00 00    	js     1fb83 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x10e3>
   1fa48:	49 8d 1c 04          	lea    (%r12,%rax,1),%rbx
   1fa4c:	48 83 c3 02          	add    $0x2,%rbx
   1fa50:	49 83 c7 fe          	add    $0xfffffffffffffffe,%r15
   1fa54:	e9 9d 01 00 00       	jmpq   1fbf6 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1156>
   1fa59:	49 01 c4             	add    %rax,%r12
   1fa5c:	49 83 c4 01          	add    $0x1,%r12
   1fa60:	48 f7 d0             	not    %rax
   1fa63:	49 01 c5             	add    %rax,%r13
   1fa66:	b8 02 00 00 00       	mov    $0x2,%eax
   1fa6b:	0f 28 84 24 90 02 00 	movaps 0x290(%rsp),%xmm0
   1fa72:	00 
   1fa73:	0f 29 84 24 30 03 00 	movaps %xmm0,0x330(%rsp)
   1fa7a:	00 
   1fa7b:	0f 28 8c 24 50 02 00 	movaps 0x250(%rsp),%xmm1
   1fa82:	00 
   1fa83:	0f 28 94 24 60 02 00 	movaps 0x260(%rsp),%xmm2
   1fa8a:	00 
   1fa8b:	0f 28 9c 24 70 02 00 	movaps 0x270(%rsp),%xmm3
   1fa92:	00 
   1fa93:	0f 28 a4 24 80 02 00 	movaps 0x280(%rsp),%xmm4
   1fa9a:	00 
   1fa9b:	0f 29 a4 24 20 03 00 	movaps %xmm4,0x320(%rsp)
   1faa2:	00 
   1faa3:	0f 29 9c 24 10 03 00 	movaps %xmm3,0x310(%rsp)
   1faaa:	00 
   1faab:	0f 29 94 24 00 03 00 	movaps %xmm2,0x300(%rsp)
   1fab2:	00 
   1fab3:	0f 29 8c 24 f0 02 00 	movaps %xmm1,0x2f0(%rsp)
   1faba:	00 
   1fabb:	0f 29 8c 24 00 02 00 	movaps %xmm1,0x200(%rsp)
   1fac2:	00 
   1fac3:	0f 29 94 24 10 02 00 	movaps %xmm2,0x210(%rsp)
   1faca:	00 
   1facb:	0f 29 9c 24 20 02 00 	movaps %xmm3,0x220(%rsp)
   1fad2:	00 
   1fad3:	0f 29 a4 24 30 02 00 	movaps %xmm4,0x230(%rsp)
   1fada:	00 
   1fadb:	0f 29 84 24 40 02 00 	movaps %xmm0,0x240(%rsp)
   1fae2:	00 
   1fae3:	48 83 f8 02          	cmp    $0x2,%rax
   1fae7:	0f 84 cd 0c 00 00    	je     207ba <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1d1a>
   1faed:	48 8b 4c 24 60       	mov    0x60(%rsp),%rcx
   1faf2:	48 89 8c 24 f0 03 00 	mov    %rcx,0x3f0(%rsp)
   1faf9:	00 
   1fafa:	48 89 84 24 f8 03 00 	mov    %rax,0x3f8(%rsp)
   1fb01:	00 
   1fb02:	48 89 9c 24 00 04 00 	mov    %rbx,0x400(%rsp)
   1fb09:	00 
   1fb0a:	4c 89 bc 24 08 04 00 	mov    %r15,0x408(%rsp)
   1fb11:	00 
   1fb12:	0f 28 84 24 40 02 00 	movaps 0x240(%rsp),%xmm0
   1fb19:	00 
   1fb1a:	48 8d 84 24 10 04 00 	lea    0x410(%rsp),%rax
   1fb21:	00 
   1fb22:	0f 11 40 40          	movups %xmm0,0x40(%rax)
   1fb26:	66 0f 6f 84 24 00 02 	movdqa 0x200(%rsp),%xmm0
   1fb2d:	00 00 
   1fb2f:	0f 28 8c 24 10 02 00 	movaps 0x210(%rsp),%xmm1
   1fb36:	00 
   1fb37:	0f 28 94 24 20 02 00 	movaps 0x220(%rsp),%xmm2
   1fb3e:	00 
   1fb3f:	0f 28 9c 24 30 02 00 	movaps 0x230(%rsp),%xmm3
   1fb46:	00 
   1fb47:	0f 11 58 30          	movups %xmm3,0x30(%rax)
   1fb4b:	0f 11 50 20          	movups %xmm2,0x20(%rax)
   1fb4f:	0f 11 48 10          	movups %xmm1,0x10(%rax)
   1fb53:	f3 0f 7f 00          	movdqu %xmm0,(%rax)
   1fb57:	48 8d bc 24 50 06 00 	lea    0x650(%rsp),%rdi
   1fb5e:	00 
   1fb5f:	48 8d b4 24 f0 03 00 	lea    0x3f0(%rsp),%rsi
   1fb66:	00 
   1fb67:	ff 15 1b 5f 02 00    	callq  *0x25f1b(%rip)        # 45a88 <_GLOBAL_OFFSET_TABLE_+0xf8>
   1fb6d:	84 c0                	test   %al,%al
   1fb6f:	0f 85 9b 0c 00 00    	jne    20810 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1d70>
   1fb75:	4d 85 ed             	test   %r13,%r13
   1fb78:	0f 85 5f fe ff ff    	jne    1f9dd <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xf3d>
   1fb7e:	e9 2e 04 00 00       	jmpq   1ffb1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1511>
   1fb83:	49 8d 4d fe          	lea    -0x2(%r13),%rcx
   1fb87:	48 39 c1             	cmp    %rax,%rcx
   1fb8a:	0f 84 0d 0d 00 00    	je     2089d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1dfd>
   1fb90:	49 8d 1c 04          	lea    (%r12,%rax,1),%rbx
   1fb94:	48 83 c3 03          	add    $0x3,%rbx
   1fb98:	41 0f b6 4c 04 02    	movzbl 0x2(%r12,%rax,1),%ecx
   1fb9e:	89 ca                	mov    %ecx,%edx
   1fba0:	83 e2 7f             	and    $0x7f,%edx
   1fba3:	c1 e2 07             	shl    $0x7,%edx
   1fba6:	8b 74 24 60          	mov    0x60(%rsp),%esi
   1fbaa:	0f b7 f6             	movzwl %si,%esi
   1fbad:	09 d6                	or     %edx,%esi
   1fbaf:	89 74 24 60          	mov    %esi,0x60(%rsp)
   1fbb3:	84 c9                	test   %cl,%cl
   1fbb5:	78 06                	js     1fbbd <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x111d>
   1fbb7:	49 83 c7 fd          	add    $0xfffffffffffffffd,%r15
   1fbbb:	eb 39                	jmp    1fbf6 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1156>
   1fbbd:	49 83 c5 fd          	add    $0xfffffffffffffffd,%r13
   1fbc1:	49 39 c5             	cmp    %rax,%r13
   1fbc4:	0f 84 df 0e 00 00    	je     20aa9 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2009>
   1fbca:	0f b6 0b             	movzbl (%rbx),%ecx
   1fbcd:	66 83 f9 03          	cmp    $0x3,%cx
   1fbd1:	0f 87 c8 03 00 00    	ja     1ff9f <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x14ff>
   1fbd7:	49 83 c7 fc          	add    $0xfffffffffffffffc,%r15
   1fbdb:	49 8d 1c 04          	lea    (%r12,%rax,1),%rbx
   1fbdf:	48 83 c3 04          	add    $0x4,%rbx
   1fbe3:	0f b7 c1             	movzwl %cx,%eax
   1fbe6:	c1 e0 0e             	shl    $0xe,%eax
   1fbe9:	8b 4c 24 60          	mov    0x60(%rsp),%ecx
   1fbed:	0f b7 c9             	movzwl %cx,%ecx
   1fbf0:	09 c1                	or     %eax,%ecx
   1fbf2:	89 4c 24 60          	mov    %ecx,0x60(%rsp)
   1fbf6:	66 83 7c 24 60 00    	cmpw   $0x0,0x60(%rsp)
   1fbfc:	0f 84 97 0b 00 00    	je     20799 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1cf9>
   1fc02:	4d 85 ff             	test   %r15,%r15
   1fc05:	0f 84 95 0b 00 00    	je     207a0 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1d00>
   1fc0b:	8a 03                	mov    (%rbx),%al
   1fc0d:	88 84 24 08 01 00 00 	mov    %al,0x108(%rsp)
   1fc14:	84 c0                	test   %al,%al
   1fc16:	74 16                	je     1fc2e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x118e>
   1fc18:	80 bc 24 08 01 00 00 	cmpb   $0x1,0x108(%rsp)
   1fc1f:	01 
   1fc20:	0f 85 82 0b 00 00    	jne    207a8 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1d08>
   1fc26:	c6 84 24 08 01 00 00 	movb   $0x1,0x108(%rsp)
   1fc2d:	01 
   1fc2e:	48 8d bc 24 f0 03 00 	lea    0x3f0(%rsp),%rdi
   1fc35:	00 
   1fc36:	ff 15 64 5e 02 00    	callq  *0x25e64(%rip)        # 45aa0 <_GLOBAL_OFFSET_TABLE_+0x110>
   1fc3c:	48 83 c3 01          	add    $0x1,%rbx
   1fc40:	49 83 c7 ff          	add    $0xffffffffffffffff,%r15
   1fc44:	0f 84 24 06 00 00    	je     2026e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x17ce>
   1fc4a:	48 8d 4b 01          	lea    0x1(%rbx),%rcx
   1fc4e:	49 8d 77 ff          	lea    -0x1(%r15),%rsi
   1fc52:	0f b6 03             	movzbl (%rbx),%eax
   1fc55:	41 89 c0             	mov    %eax,%r8d
   1fc58:	41 83 e0 7f          	and    $0x7f,%r8d
   1fc5c:	84 c0                	test   %al,%al
   1fc5e:	79 59                	jns    1fcb9 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1219>
   1fc60:	48 85 f6             	test   %rsi,%rsi
   1fc63:	0f 84 47 06 00 00    	je     202b0 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1810>
   1fc69:	48 8d 4b 02          	lea    0x2(%rbx),%rcx
   1fc6d:	49 8d 77 fe          	lea    -0x2(%r15),%rsi
   1fc71:	0f b6 43 01          	movzbl 0x1(%rbx),%eax
   1fc75:	89 c2                	mov    %eax,%edx
   1fc77:	83 e2 7f             	and    $0x7f,%edx
   1fc7a:	c1 e2 07             	shl    $0x7,%edx
   1fc7d:	45 0f b7 c0          	movzwl %r8w,%r8d
   1fc81:	41 09 d0             	or     %edx,%r8d
   1fc84:	84 c0                	test   %al,%al
   1fc86:	79 31                	jns    1fcb9 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1219>
   1fc88:	48 85 f6             	test   %rsi,%rsi
   1fc8b:	0f 84 1f 06 00 00    	je     202b0 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1810>
   1fc91:	0f b6 01             	movzbl (%rcx),%eax
   1fc94:	66 83 f8 03          	cmp    $0x3,%ax
   1fc98:	0f 87 a7 0b 00 00    	ja     20845 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1da5>
   1fc9e:	49 83 c7 fd          	add    $0xfffffffffffffffd,%r15
   1fca2:	48 83 c3 03          	add    $0x3,%rbx
   1fca6:	0f b7 c0             	movzwl %ax,%eax
   1fca9:	c1 e0 0e             	shl    $0xe,%eax
   1fcac:	45 0f b7 c0          	movzwl %r8w,%r8d
   1fcb0:	41 09 c0             	or     %eax,%r8d
   1fcb3:	48 89 d9             	mov    %rbx,%rcx
   1fcb6:	4c 89 fe             	mov    %r15,%rsi
   1fcb9:	66 45 85 c0          	test   %r8w,%r8w
   1fcbd:	0f 84 42 01 00 00    	je     1fe05 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1365>
   1fcc3:	48 85 f6             	test   %rsi,%rsi
   1fcc6:	0f 84 e4 05 00 00    	je     202b0 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1810>
   1fccc:	48 8d 59 01          	lea    0x1(%rcx),%rbx
   1fcd0:	4c 8d 7e ff          	lea    -0x1(%rsi),%r15
   1fcd4:	0f b6 01             	movzbl (%rcx),%eax
   1fcd7:	41 89 c1             	mov    %eax,%r9d
   1fcda:	41 83 e1 7f          	and    $0x7f,%r9d
   1fcde:	84 c0                	test   %al,%al
   1fce0:	79 59                	jns    1fd3b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x129b>
   1fce2:	4d 85 ff             	test   %r15,%r15
   1fce5:	0f 84 83 05 00 00    	je     2026e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x17ce>
   1fceb:	48 8d 59 02          	lea    0x2(%rcx),%rbx
   1fcef:	4c 8d 7e fe          	lea    -0x2(%rsi),%r15
   1fcf3:	0f b6 41 01          	movzbl 0x1(%rcx),%eax
   1fcf7:	89 c7                	mov    %eax,%edi
   1fcf9:	83 e7 7f             	and    $0x7f,%edi
   1fcfc:	c1 e7 07             	shl    $0x7,%edi
   1fcff:	45 0f b7 c9          	movzwl %r9w,%r9d
   1fd03:	41 09 f9             	or     %edi,%r9d
   1fd06:	84 c0                	test   %al,%al
   1fd08:	79 31                	jns    1fd3b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x129b>
   1fd0a:	4d 85 ff             	test   %r15,%r15
   1fd0d:	0f 84 5b 05 00 00    	je     2026e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x17ce>
   1fd13:	0f b6 03             	movzbl (%rbx),%eax
   1fd16:	66 83 f8 03          	cmp    $0x3,%ax
   1fd1a:	0f 87 25 0b 00 00    	ja     20845 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1da5>
   1fd20:	48 83 c1 03          	add    $0x3,%rcx
   1fd24:	48 83 c6 fd          	add    $0xfffffffffffffffd,%rsi
   1fd28:	0f b7 c0             	movzwl %ax,%eax
   1fd2b:	c1 e0 0e             	shl    $0xe,%eax
   1fd2e:	45 0f b7 c9          	movzwl %r9w,%r9d
   1fd32:	41 09 c1             	or     %eax,%r9d
   1fd35:	49 89 f7             	mov    %rsi,%r15
   1fd38:	48 89 cb             	mov    %rcx,%rbx
   1fd3b:	66 41 83 f9 21       	cmp    $0x21,%r9w
   1fd40:	74 0e                	je     1fd50 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x12b0>
   1fd42:	66 45 85 c9          	test   %r9w,%r9w
   1fd46:	0f 84 31 09 00 00    	je     2067d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1bdd>
   1fd4c:	31 f6                	xor    %esi,%esi
   1fd4e:	eb 72                	jmp    1fdc2 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1322>
   1fd50:	4d 85 ff             	test   %r15,%r15
   1fd53:	0f 84 15 05 00 00    	je     2026e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x17ce>
   1fd59:	31 ff                	xor    %edi,%edi
   1fd5b:	31 f6                	xor    %esi,%esi
   1fd5d:	31 c9                	xor    %ecx,%ecx
   1fd5f:	0f b6 14 3b          	movzbl (%rbx,%rdi,1),%edx
   1fd63:	83 f9 3f             	cmp    $0x3f,%ecx
   1fd66:	75 0d                	jne    1fd75 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x12d5>
   1fd68:	80 fa 7f             	cmp    $0x7f,%dl
   1fd6b:	74 08                	je     1fd75 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x12d5>
   1fd6d:	84 d2                	test   %dl,%dl
   1fd6f:	0f 85 1a 05 00 00    	jne    2028f <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x17ef>
   1fd75:	89 d0                	mov    %edx,%eax
   1fd77:	83 e0 7f             	and    $0x7f,%eax
   1fd7a:	48 d3 e0             	shl    %cl,%rax
   1fd7d:	48 09 c6             	or     %rax,%rsi
   1fd80:	83 c1 07             	add    $0x7,%ecx
   1fd83:	84 d2                	test   %dl,%dl
   1fd85:	79 0e                	jns    1fd95 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x12f5>
   1fd87:	48 83 c7 01          	add    $0x1,%rdi
   1fd8b:	49 39 ff             	cmp    %rdi,%r15
   1fd8e:	75 cf                	jne    1fd5f <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x12bf>
   1fd90:	e9 d6 04 00 00       	jmpq   2026b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x17cb>
   1fd95:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   1fd9c:	48 d3 e0             	shl    %cl,%rax
   1fd9f:	f6 c2 40             	test   $0x40,%dl
   1fda2:	ba 00 00 00 00       	mov    $0x0,%edx
   1fda7:	48 0f 44 c2          	cmove  %rdx,%rax
   1fdab:	83 f9 40             	cmp    $0x40,%ecx
   1fdae:	48 0f 4d c2          	cmovge %rdx,%rax
   1fdb2:	48 09 c6             	or     %rax,%rsi
   1fdb5:	48 01 fb             	add    %rdi,%rbx
   1fdb8:	48 83 c3 01          	add    $0x1,%rbx
   1fdbc:	48 f7 d7             	not    %rdi
   1fdbf:	49 01 ff             	add    %rdi,%r15
   1fdc2:	41 0f b7 c1          	movzwl %r9w,%eax
   1fdc6:	48 c1 e0 10          	shl    $0x10,%rax
   1fdca:	41 0f b7 c8          	movzwl %r8w,%ecx
   1fdce:	48 09 c1             	or     %rax,%rcx
   1fdd1:	48 89 b4 24 10 01 00 	mov    %rsi,0x110(%rsp)
   1fdd8:	00 
   1fdd9:	48 89 8c 24 18 01 00 	mov    %rcx,0x118(%rsp)
   1fde0:	00 
   1fde1:	48 8d bc 24 f0 03 00 	lea    0x3f0(%rsp),%rdi
   1fde8:	00 
   1fde9:	48 8d b4 24 10 01 00 	lea    0x110(%rsp),%rsi
   1fdf0:	00 
   1fdf1:	ff 15 11 5d 02 00    	callq  *0x25d11(%rip)        # 45b08 <_GLOBAL_OFFSET_TABLE_+0x178>
   1fdf7:	4d 85 ff             	test   %r15,%r15
   1fdfa:	0f 85 4a fe ff ff    	jne    1fc4a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x11aa>
   1fe00:	e9 69 04 00 00       	jmpq   2026e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x17ce>
   1fe05:	48 85 f6             	test   %rsi,%rsi
   1fe08:	0f 84 a2 04 00 00    	je     202b0 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1810>
   1fe0e:	4c 8d 61 01          	lea    0x1(%rcx),%r12
   1fe12:	4c 8d 6e ff          	lea    -0x1(%rsi),%r13
   1fe16:	0f b6 11             	movzbl (%rcx),%edx
   1fe19:	89 d0                	mov    %edx,%eax
   1fe1b:	83 e0 7f             	and    $0x7f,%eax
   1fe1e:	84 d2                	test   %dl,%dl
   1fe20:	79 57                	jns    1fe79 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x13d9>
   1fe22:	4d 85 ed             	test   %r13,%r13
   1fe25:	0f 84 01 0d 00 00    	je     20b2c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x208c>
   1fe2b:	4c 8d 61 02          	lea    0x2(%rcx),%r12
   1fe2f:	4c 8d 6e fe          	lea    -0x2(%rsi),%r13
   1fe33:	0f b6 51 01          	movzbl 0x1(%rcx),%edx
   1fe37:	89 d7                	mov    %edx,%edi
   1fe39:	83 e7 7f             	and    $0x7f,%edi
   1fe3c:	c1 e7 07             	shl    $0x7,%edi
   1fe3f:	0f b7 c0             	movzwl %ax,%eax
   1fe42:	09 f8                	or     %edi,%eax
   1fe44:	84 d2                	test   %dl,%dl
   1fe46:	79 31                	jns    1fe79 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x13d9>
   1fe48:	4d 85 ed             	test   %r13,%r13
   1fe4b:	0f 84 db 0c 00 00    	je     20b2c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x208c>
   1fe51:	41 0f b6 14 24       	movzbl (%r12),%edx
   1fe56:	66 83 fa 03          	cmp    $0x3,%dx
   1fe5a:	0f 87 e5 09 00 00    	ja     20845 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1da5>
   1fe60:	48 83 c1 03          	add    $0x3,%rcx
   1fe64:	48 83 c6 fd          	add    $0xfffffffffffffffd,%rsi
   1fe68:	0f b7 d2             	movzwl %dx,%edx
   1fe6b:	c1 e2 0e             	shl    $0xe,%edx
   1fe6e:	0f b7 c0             	movzwl %ax,%eax
   1fe71:	09 d0                	or     %edx,%eax
   1fe73:	49 89 f5             	mov    %rsi,%r13
   1fe76:	49 89 cc             	mov    %rcx,%r12
   1fe79:	66 85 c0             	test   %ax,%ax
   1fe7c:	0f 85 4c 0c 00 00    	jne    20ace <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x202e>
   1fe82:	f3 0f 6f 84 24 f0 03 	movdqu 0x3f0(%rsp),%xmm0
   1fe89:	00 00 
   1fe8b:	0f 10 8c 24 00 04 00 	movups 0x400(%rsp),%xmm1
   1fe92:	00 
   1fe93:	0f 10 94 24 10 04 00 	movups 0x410(%rsp),%xmm2
   1fe9a:	00 
   1fe9b:	0f 10 9c 24 20 04 00 	movups 0x420(%rsp),%xmm3
   1fea2:	00 
   1fea3:	48 8b 84 24 30 04 00 	mov    0x430(%rsp),%rax
   1feaa:	00 
   1feab:	48 8d 8c 24 10 04 00 	lea    0x410(%rsp),%rcx
   1feb2:	00 
   1feb3:	0f 10 61 28          	movups 0x28(%rcx),%xmm4
   1feb7:	0f 29 a4 24 c0 00 00 	movaps %xmm4,0xc0(%rsp)
   1febe:	00 
   1febf:	48 8b 49 38          	mov    0x38(%rcx),%rcx
   1fec3:	48 89 8c 24 d0 00 00 	mov    %rcx,0xd0(%rsp)
   1feca:	00 
   1fecb:	f3 0f 7f 84 24 10 01 	movdqu %xmm0,0x110(%rsp)
   1fed2:	00 00 
   1fed4:	0f 11 8c 24 20 01 00 	movups %xmm1,0x120(%rsp)
   1fedb:	00 
   1fedc:	0f 11 94 24 30 01 00 	movups %xmm2,0x130(%rsp)
   1fee3:	00 
   1fee4:	0f 11 9c 24 40 01 00 	movups %xmm3,0x140(%rsp)
   1feeb:	00 
   1feec:	48 89 84 24 50 01 00 	mov    %rax,0x150(%rsp)
   1fef3:	00 
   1fef4:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
   1fefb:	00 
   1fefc:	0f 11 60 28          	movups %xmm4,0x28(%rax)
   1ff00:	48 89 48 38          	mov    %rcx,0x38(%rax)
   1ff04:	0f b6 8c 24 08 01 00 	movzbl 0x108(%rsp),%ecx
   1ff0b:	00 
   1ff0c:	48 8d bc 24 f0 03 00 	lea    0x3f0(%rsp),%rdi
   1ff13:	00 
   1ff14:	48 89 ee             	mov    %rbp,%rsi
   1ff17:	8b 54 24 60          	mov    0x60(%rsp),%edx
   1ff1b:	4c 8d 84 24 10 01 00 	lea    0x110(%rsp),%r8
   1ff22:	00 
   1ff23:	ff 15 8f 5e 02 00    	callq  *0x25e8f(%rip)        # 45db8 <_GLOBAL_OFFSET_TABLE_+0x428>
   1ff29:	48 8b 84 24 f0 03 00 	mov    0x3f0(%rsp),%rax
   1ff30:	00 
   1ff31:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   1ff36:	48 8b 84 24 f8 03 00 	mov    0x3f8(%rsp),%rax
   1ff3d:	00 
   1ff3e:	48 8b 9c 24 00 04 00 	mov    0x400(%rsp),%rbx
   1ff45:	00 
   1ff46:	4c 8b bc 24 08 04 00 	mov    0x408(%rsp),%r15
   1ff4d:	00 
   1ff4e:	48 8d 8c 24 10 04 00 	lea    0x410(%rsp),%rcx
   1ff55:	00 
   1ff56:	0f 10 01             	movups (%rcx),%xmm0
   1ff59:	0f 10 49 10          	movups 0x10(%rcx),%xmm1
   1ff5d:	0f 10 51 20          	movups 0x20(%rcx),%xmm2
   1ff61:	0f 10 59 30          	movups 0x30(%rcx),%xmm3
   1ff65:	0f 29 84 24 50 02 00 	movaps %xmm0,0x250(%rsp)
   1ff6c:	00 
   1ff6d:	0f 29 8c 24 60 02 00 	movaps %xmm1,0x260(%rsp)
   1ff74:	00 
   1ff75:	0f 29 94 24 70 02 00 	movaps %xmm2,0x270(%rsp)
   1ff7c:	00 
   1ff7d:	0f 29 9c 24 80 02 00 	movaps %xmm3,0x280(%rsp)
   1ff84:	00 
   1ff85:	f3 0f 6f 41 40       	movdqu 0x40(%rcx),%xmm0
   1ff8a:	66 0f 7f 84 24 90 02 	movdqa %xmm0,0x290(%rsp)
   1ff91:	00 00 
   1ff93:	e9 d3 fa ff ff       	jmpq   1fa6b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xfcb>
   1ff98:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1ff9d:	eb 1c                	jmp    1ffbb <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x151b>
   1ff9f:	45 31 e4             	xor    %r12d,%r12d
   1ffa2:	b8 06 00 00 00       	mov    $0x6,%eax
   1ffa7:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1ffac:	eb 03                	jmp    1ffb1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1511>
   1ffae:	4d 01 ec             	add    %r13,%r12
   1ffb1:	48 8b 6c 24 40       	mov    0x40(%rsp),%rbp
   1ffb6:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
   1ffbb:	0f 28 84 24 90 02 00 	movaps 0x290(%rsp),%xmm0
   1ffc2:	00 
   1ffc3:	0f 29 84 24 30 03 00 	movaps %xmm0,0x330(%rsp)
   1ffca:	00 
   1ffcb:	66 0f 6f 84 24 50 02 	movdqa 0x250(%rsp),%xmm0
   1ffd2:	00 00 
   1ffd4:	0f 28 8c 24 60 02 00 	movaps 0x260(%rsp),%xmm1
   1ffdb:	00 
   1ffdc:	0f 28 94 24 70 02 00 	movaps 0x270(%rsp),%xmm2
   1ffe3:	00 
   1ffe4:	0f 28 9c 24 80 02 00 	movaps 0x280(%rsp),%xmm3
   1ffeb:	00 
   1ffec:	0f 29 9c 24 20 03 00 	movaps %xmm3,0x320(%rsp)
   1fff3:	00 
   1fff4:	0f 29 94 24 10 03 00 	movaps %xmm2,0x310(%rsp)
   1fffb:	00 
   1fffc:	0f 29 8c 24 00 03 00 	movaps %xmm1,0x300(%rsp)
   20003:	00 
   20004:	66 0f 7f 84 24 f0 02 	movdqa %xmm0,0x2f0(%rsp)
   2000b:	00 00 
   2000d:	4c 89 e3             	mov    %r12,%rbx
   20010:	48 c1 eb 08          	shr    $0x8,%rbx
   20014:	49 c1 e4 38          	shl    $0x38,%r12
   20018:	48 8d bc 24 50 06 00 	lea    0x650(%rsp),%rdi
   2001f:	00 
   20020:	e8 4b 5d fe ff       	callq  5d70 <core::ptr::drop_in_place>
   20025:	b1 01                	mov    $0x1,%cl
   20027:	4c 01 f5             	add    %r14,%rbp
   2002a:	4c 8b ac 24 80 00 00 	mov    0x80(%rsp),%r13
   20031:	00 
   20032:	48 8b 84 24 a0 01 00 	mov    0x1a0(%rsp),%rax
   20039:	00 
   2003a:	49 01 c5             	add    %rax,%r13
   2003d:	4d 29 fd             	sub    %r15,%r13
   20040:	66 0f 6f 84 24 70 03 	movdqa 0x370(%rsp),%xmm0
   20047:	00 00 
   20049:	0f 28 8c 24 80 03 00 	movaps 0x380(%rsp),%xmm1
   20050:	00 
   20051:	0f 29 8c 24 b0 06 00 	movaps %xmm1,0x6b0(%rsp)
   20058:	00 
   20059:	66 0f 7f 84 24 a0 06 	movdqa %xmm0,0x6a0(%rsp)
   20060:	00 00 
   20062:	84 c9                	test   %cl,%cl
   20064:	0f 85 5e f7 ff ff    	jne    1f7c8 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xd28>
   2006a:	4c 89 7c 24 28       	mov    %r15,0x28(%rsp)
   2006f:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
   20074:	4c 0f a4 e3 08       	shld   $0x8,%r12,%rbx
   20079:	49 c1 e4 08          	shl    $0x8,%r12
   2007d:	0f b6 7c 24 10       	movzbl 0x10(%rsp),%edi
   20082:	4c 09 e7             	or     %r12,%rdi
   20085:	66 0f 6f 84 24 a0 06 	movdqa 0x6a0(%rsp),%xmm0
   2008c:	00 00 
   2008e:	0f 28 8c 24 b0 06 00 	movaps 0x6b0(%rsp),%xmm1
   20095:	00 
   20096:	0f 29 8c 24 80 0c 00 	movaps %xmm1,0xc80(%rsp)
   2009d:	00 
   2009e:	66 0f 7f 84 24 70 0c 	movdqa %xmm0,0xc70(%rsp)
   200a5:	00 00 
   200a7:	48 c7 84 24 f0 03 00 	movq   $0x0,0x3f0(%rsp)
   200ae:	00 00 00 00 00 
   200b3:	48 89 84 24 f8 03 00 	mov    %rax,0x3f8(%rsp)
   200ba:	00 
   200bb:	4c 89 b4 24 00 04 00 	mov    %r14,0x400(%rsp)
   200c2:	00 
   200c3:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   200c8:	48 89 84 24 08 04 00 	mov    %rax,0x408(%rsp)
   200cf:	00 
   200d0:	48 8b 8c 24 e0 00 00 	mov    0xe0(%rsp),%rcx
   200d7:	00 
   200d8:	48 89 8c 24 10 04 00 	mov    %rcx,0x410(%rsp)
   200df:	00 
   200e0:	48 8b 54 24 78       	mov    0x78(%rsp),%rdx
   200e5:	48 89 94 24 18 04 00 	mov    %rdx,0x418(%rsp)
   200ec:	00 
   200ed:	8a 44 24 70          	mov    0x70(%rsp),%al
   200f1:	88 84 24 20 04 00 00 	mov    %al,0x420(%rsp)
   200f8:	8a 84 24 a8 00 00 00 	mov    0xa8(%rsp),%al
   200ff:	88 84 24 21 04 00 00 	mov    %al,0x421(%rsp)
   20106:	8b 44 24 20          	mov    0x20(%rsp),%eax
   2010a:	66 89 84 24 22 04 00 	mov    %ax,0x422(%rsp)
   20111:	00 
   20112:	48 89 9c 24 30 04 00 	mov    %rbx,0x430(%rsp)
   20119:	00 
   2011a:	48 89 bc 24 28 04 00 	mov    %rdi,0x428(%rsp)
   20121:	00 
   20122:	48 8d 84 24 10 04 00 	lea    0x410(%rsp),%rax
   20129:	00 
   2012a:	0f 11 48 38          	movups %xmm1,0x38(%rax)
   2012e:	f3 0f 7f 40 28       	movdqu %xmm0,0x28(%rax)
   20133:	48 c7 84 24 58 04 00 	movq   $0x0,0x458(%rsp)
   2013a:	00 00 00 00 00 
   2013f:	48 c7 84 24 68 04 00 	movq   $0x0,0x468(%rsp)
   20146:	00 00 00 00 00 
   2014b:	66 0f ef c0          	pxor   %xmm0,%xmm0
   2014f:	f3 0f 7f 40 78       	movdqu %xmm0,0x78(%rax)
   20154:	f3 0f 7f 40 68       	movdqu %xmm0,0x68(%rax)
   20159:	48 c7 80 88 00 00 00 	movq   $0x0,0x88(%rax)
   20160:	00 00 00 00 
   20164:	48 c7 84 24 48 05 00 	movq   $0x2e,0x548(%rsp)
   2016b:	00 2e 00 00 00 
   20170:	48 89 8c 24 10 01 00 	mov    %rcx,0x110(%rsp)
   20177:	00 
   20178:	48 89 94 24 18 01 00 	mov    %rdx,0x118(%rsp)
   2017f:	00 
   20180:	48 8d 84 24 00 04 00 	lea    0x400(%rsp),%rax
   20187:	00 
   20188:	48 89 84 24 20 01 00 	mov    %rax,0x120(%rsp)
   2018f:	00 
   20190:	48 8d 84 24 28 04 00 	lea    0x428(%rsp),%rax
   20197:	00 
   20198:	48 89 84 24 28 01 00 	mov    %rax,0x128(%rsp)
   2019f:	00 
   201a0:	48 c7 84 24 48 01 00 	movq   $0x2,0x148(%rsp)
   201a7:	00 02 00 00 00 
   201ac:	48 c7 84 24 68 01 00 	movq   $0x0,0x168(%rsp)
   201b3:	00 00 00 00 00 
   201b8:	48 85 d2             	test   %rdx,%rdx
   201bb:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   201c0:	0f 84 88 00 00 00    	je     2024e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x17ae>
   201c6:	4c 8b bc 24 e0 00 00 	mov    0xe0(%rsp),%r15
   201cd:	00 
   201ce:	48 8b 6c 24 78       	mov    0x78(%rsp),%rbp
   201d3:	49 8d 5f 01          	lea    0x1(%r15),%rbx
   201d7:	48 83 c5 ff          	add    $0xffffffffffffffff,%rbp
   201db:	31 d2                	xor    %edx,%edx
   201dd:	31 c9                	xor    %ecx,%ecx
   201df:	48 89 9c 24 10 01 00 	mov    %rbx,0x110(%rsp)
   201e6:	00 
   201e7:	48 89 ac 24 18 01 00 	mov    %rbp,0x118(%rsp)
   201ee:	00 
   201ef:	0f b6 43 ff          	movzbl -0x1(%rbx),%eax
   201f3:	83 f9 3f             	cmp    $0x3f,%ecx
   201f6:	75 08                	jne    20200 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1760>
   201f8:	3c 01                	cmp    $0x1,%al
   201fa:	0f 87 23 05 00 00    	ja     20723 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1c83>
   20200:	0f b6 f0             	movzbl %al,%esi
   20203:	89 f0                	mov    %esi,%eax
   20205:	83 e0 7f             	and    $0x7f,%eax
   20208:	48 d3 e0             	shl    %cl,%rax
   2020b:	48 09 c2             	or     %rax,%rdx
   2020e:	40 84 f6             	test   %sil,%sil
   20211:	79 12                	jns    20225 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1785>
   20213:	83 c1 07             	add    $0x7,%ecx
   20216:	48 83 c3 01          	add    $0x1,%rbx
   2021a:	48 83 c5 ff          	add    $0xffffffffffffffff,%rbp
   2021e:	72 bf                	jb     201df <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x173f>
   20220:	e9 fe 04 00 00       	jmpq   20723 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1c83>
   20225:	48 85 d2             	test   %rdx,%rdx
   20228:	0f 85 a3 00 00 00    	jne    202d1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1831>
   2022e:	48 c7 84 24 68 01 00 	movq   $0xffffffffffffffff,0x168(%rsp)
   20235:	00 ff ff ff ff 
   2023a:	48 c7 84 24 48 01 00 	movq   $0x2,0x148(%rsp)
   20241:	00 02 00 00 00 
   20246:	49 89 df             	mov    %rbx,%r15
   20249:	48 85 ed             	test   %rbp,%rbp
   2024c:	75 85                	jne    201d3 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1733>
   2024e:	48 c7 84 24 48 01 00 	movq   $0x2,0x148(%rsp)
   20255:	00 02 00 00 00 
   2025a:	48 c7 84 24 68 01 00 	movq   $0x0,0x168(%rsp)
   20261:	00 00 00 00 00 
   20266:	e9 eb 04 00 00       	jmpq   20756 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1cb6>
   2026b:	4c 01 fb             	add    %r15,%rbx
   2026e:	b8 13 00 00 00       	mov    $0x13,%eax
   20273:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   20278:	49 89 dc             	mov    %rbx,%r12
   2027b:	48 83 bc 24 f0 03 00 	cmpq   $0x0,0x3f0(%rsp)
   20282:	00 00 
   20284:	0f 85 d7 05 00 00    	jne    20861 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1dc1>
   2028a:	e9 22 fd ff ff       	jmpq   1ffb1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1511>
   2028f:	b8 07 00 00 00       	mov    $0x7,%eax
   20294:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   20299:	45 31 e4             	xor    %r12d,%r12d
   2029c:	48 83 bc 24 f0 03 00 	cmpq   $0x0,0x3f0(%rsp)
   202a3:	00 00 
   202a5:	0f 85 b6 05 00 00    	jne    20861 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1dc1>
   202ab:	e9 01 fd ff ff       	jmpq   1ffb1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1511>
   202b0:	b8 13 00 00 00       	mov    $0x13,%eax
   202b5:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   202ba:	49 89 cc             	mov    %rcx,%r12
   202bd:	48 83 bc 24 f0 03 00 	cmpq   $0x0,0x3f0(%rsp)
   202c4:	00 00 
   202c6:	0f 85 95 05 00 00    	jne    20861 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1dc1>
   202cc:	e9 e0 fc ff ff       	jmpq   1ffb1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1511>
   202d1:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
   202d5:	48 3b 84 24 38 04 00 	cmp    0x438(%rsp),%rax
   202dc:	00 
   202dd:	0f 83 bb 03 00 00    	jae    2069e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1bfe>
   202e3:	48 6b c0 70          	imul   $0x70,%rax,%rax
   202e7:	48 01 c7             	add    %rax,%rdi
   202ea:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
   202ef:	4c 01 f1             	add    %r14,%rcx
   202f2:	48 2b 4c 24 78       	sub    0x78(%rsp),%rcx
   202f7:	48 2b 8c 24 e0 00 00 	sub    0xe0(%rsp),%rcx
   202fe:	00 
   202ff:	4c 01 f9             	add    %r15,%rcx
   20302:	31 c0                	xor    %eax,%eax
   20304:	80 7f 6a 01          	cmpb   $0x1,0x6a(%rdi)
   20308:	0f 94 c0             	sete   %al
   2030b:	48 89 84 24 68 01 00 	mov    %rax,0x168(%rsp)
   20312:	00 
   20313:	48 89 8c 24 30 01 00 	mov    %rcx,0x130(%rsp)
   2031a:	00 
   2031b:	48 89 9c 24 38 01 00 	mov    %rbx,0x138(%rsp)
   20322:	00 
   20323:	48 89 ac 24 40 01 00 	mov    %rbp,0x140(%rsp)
   2032a:	00 
   2032b:	48 c7 84 24 48 01 00 	movq   $0x0,0x148(%rsp)
   20332:	00 00 00 00 00 
   20337:	48 89 bc 24 58 01 00 	mov    %rdi,0x158(%rsp)
   2033e:	00 
   2033f:	48 8d 84 24 00 04 00 	lea    0x400(%rsp),%rax
   20346:	00 
   20347:	48 89 84 24 60 01 00 	mov    %rax,0x160(%rsp)
   2034e:	00 
   2034f:	48 83 c7 08          	add    $0x8,%rdi
   20353:	ff 15 37 57 02 00    	callq  *0x25737(%rip)        # 45a90 <_GLOBAL_OFFSET_TABLE_+0x100>
   20359:	49 89 c4             	mov    %rax,%r12
   2035c:	49 89 d6             	mov    %rdx,%r14
   2035f:	48 89 9c 24 f0 02 00 	mov    %rbx,0x2f0(%rsp)
   20366:	00 
   20367:	48 89 ac 24 f8 02 00 	mov    %rbp,0x2f8(%rsp)
   2036e:	00 
   2036f:	48 89 84 24 00 03 00 	mov    %rax,0x300(%rsp)
   20376:	00 
   20377:	48 89 94 24 08 03 00 	mov    %rdx,0x308(%rsp)
   2037e:	00 
   2037f:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
   20386:	00 
   20387:	48 89 84 24 10 03 00 	mov    %rax,0x310(%rsp)
   2038e:	00 
   2038f:	48 85 d2             	test   %rdx,%rdx
   20392:	0f 84 8e 04 00 00    	je     20826 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1d86>
   20398:	bb 2d 00 00 00       	mov    $0x2d,%ebx
   2039d:	bd 2d 00 00 00       	mov    $0x2d,%ebp
   203a2:	45 31 ff             	xor    %r15d,%r15d
   203a5:	48 8d 84 24 60 01 00 	lea    0x160(%rsp),%rax
   203ac:	00 
   203ad:	49 8b 0c 24          	mov    (%r12),%rcx
   203b1:	45 0f b7 4c 24 0a    	movzwl 0xa(%r12),%r9d
   203b7:	45 8b 44 24 08       	mov    0x8(%r12),%r8d
   203bc:	48 8b 00             	mov    (%rax),%rax
   203bf:	8b 50 20             	mov    0x20(%rax),%edx
   203c2:	48 8d bc 24 50 02 00 	lea    0x250(%rsp),%rdi
   203c9:	00 
   203ca:	48 8d b4 24 f0 02 00 	lea    0x2f0(%rsp),%rsi
   203d1:	00 
   203d2:	e8 f9 a3 fe ff       	callq  a7d0 <gimli::read::unit::parse_attribute>
   203d7:	83 bc 24 50 02 00 00 	cmpl   $0x1,0x250(%rsp)
   203de:	01 
   203df:	0f 84 1f 0c 00 00    	je     21004 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2564>
   203e5:	49 83 c4 10          	add    $0x10,%r12
   203e9:	49 83 c6 ff          	add    $0xffffffffffffffff,%r14
   203ed:	4c 89 a4 24 00 03 00 	mov    %r12,0x300(%rsp)
   203f4:	00 
   203f5:	4c 89 b4 24 08 03 00 	mov    %r14,0x308(%rsp)
   203fc:	00 
   203fd:	f3 0f 6f 84 24 58 02 	movdqu 0x258(%rsp),%xmm0
   20404:	00 00 
   20406:	48 8d 84 24 68 02 00 	lea    0x268(%rsp),%rax
   2040d:	00 
   2040e:	0f 10 08             	movups (%rax),%xmm1
   20411:	0f 29 8c 24 50 06 00 	movaps %xmm1,0x650(%rsp)
   20418:	00 
   20419:	0f 29 8c 24 70 03 00 	movaps %xmm1,0x370(%rsp)
   20420:	00 
   20421:	66 48 0f 7e c0       	movq   %xmm0,%rax
   20426:	48 83 f8 2d          	cmp    $0x2d,%rax
   2042a:	0f 84 bd 04 00 00    	je     208ed <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1e4d>
   20430:	66 0f 7f 84 24 50 02 	movdqa %xmm0,0x250(%rsp)
   20437:	00 00 
   20439:	66 0f 6f 84 24 70 03 	movdqa 0x370(%rsp),%xmm0
   20440:	00 00 
   20442:	48 8d 84 24 68 02 00 	lea    0x268(%rsp),%rax
   20449:	00 
   2044a:	f3 0f 7f 40 f8       	movdqu %xmm0,-0x8(%rax)
   2044f:	8b 84 24 68 02 00 00 	mov    0x268(%rsp),%eax
   20456:	8d 48 fd             	lea    -0x3(%rax),%ecx
   20459:	66 83 f9 18          	cmp    $0x18,%cx
   2045d:	76 58                	jbe    204b7 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1a17>
   2045f:	83 c0 8e             	add    $0xffffff8e,%eax
   20462:	66 83 f8 1a          	cmp    $0x1a,%ax
   20466:	0f 87 e7 01 00 00    	ja     20653 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1bb3>
   2046c:	0f b7 c0             	movzwl %ax,%eax
   2046f:	48 8d 0d 1a 6d 01 00 	lea    0x16d1a(%rip),%rcx        # 37190 <_fini+0x210c>
   20476:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   2047a:	48 01 c8             	add    %rcx,%rax
   2047d:	ff e0                	jmpq   *%rax
   2047f:	48 8d bc 24 00 02 00 	lea    0x200(%rsp),%rdi
   20486:	00 
   20487:	48 8d b4 24 50 02 00 	lea    0x250(%rsp),%rsi
   2048e:	00 
   2048f:	e8 7c b5 fe ff       	callq  ba10 <gimli::read::unit::Attribute<R>::value>
   20494:	83 bc 24 00 02 00 00 	cmpl   $0x1c,0x200(%rsp)
   2049b:	1c 
   2049c:	0f 85 b1 01 00 00    	jne    20653 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1bb3>
   204a2:	48 8b 84 24 08 02 00 	mov    0x208(%rsp),%rax
   204a9:	00 
   204aa:	48 89 84 24 80 04 00 	mov    %rax,0x480(%rsp)
   204b1:	00 
   204b2:	e9 9c 01 00 00       	jmpq   20653 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1bb3>
   204b7:	0f b7 c1             	movzwl %cx,%eax
   204ba:	48 8d 0d 6b 6c 01 00 	lea    0x16c6b(%rip),%rcx        # 3712c <_fini+0x20a8>
   204c1:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   204c5:	48 01 c8             	add    %rcx,%rax
   204c8:	ff e0                	jmpq   *%rax
   204ca:	48 8d bc 24 00 02 00 	lea    0x200(%rsp),%rdi
   204d1:	00 
   204d2:	48 8d b4 24 50 02 00 	lea    0x250(%rsp),%rsi
   204d9:	00 
   204da:	e8 31 b5 fe ff       	callq  ba10 <gimli::read::unit::Attribute<R>::value>
   204df:	48 8b 9c 24 00 02 00 	mov    0x200(%rsp),%rbx
   204e6:	00 
   204e7:	48 8b 84 24 08 02 00 	mov    0x208(%rsp),%rax
   204ee:	00 
   204ef:	48 89 84 24 e0 00 00 	mov    %rax,0xe0(%rsp)
   204f6:	00 
   204f7:	48 8b 84 24 10 02 00 	mov    0x210(%rsp),%rax
   204fe:	00 
   204ff:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   20504:	e9 4a 01 00 00       	jmpq   20653 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1bb3>
   20509:	48 8d bc 24 00 02 00 	lea    0x200(%rsp),%rdi
   20510:	00 
   20511:	48 8d b4 24 50 02 00 	lea    0x250(%rsp),%rsi
   20518:	00 
   20519:	e8 f2 b4 fe ff       	callq  ba10 <gimli::read::unit::Attribute<R>::value>
   2051e:	48 8b ac 24 00 02 00 	mov    0x200(%rsp),%rbp
   20525:	00 
   20526:	48 8b 84 24 08 02 00 	mov    0x208(%rsp),%rax
   2052d:	00 
   2052e:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   20533:	48 8b 84 24 10 02 00 	mov    0x210(%rsp),%rax
   2053a:	00 
   2053b:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   20540:	e9 0e 01 00 00       	jmpq   20653 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1bb3>
   20545:	48 8d bc 24 00 02 00 	lea    0x200(%rsp),%rdi
   2054c:	00 
   2054d:	48 8d b4 24 50 02 00 	lea    0x250(%rsp),%rsi
   20554:	00 
   20555:	e8 b6 b4 fe ff       	callq  ba10 <gimli::read::unit::Attribute<R>::value>
   2055a:	48 83 bc 24 00 02 00 	cmpq   $0x0,0x200(%rsp)
   20561:	00 00 
   20563:	0f 85 ea 00 00 00    	jne    20653 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1bb3>
   20569:	48 8b 84 24 08 02 00 	mov    0x208(%rsp),%rax
   20570:	00 
   20571:	48 89 84 24 78 04 00 	mov    %rax,0x478(%rsp)
   20578:	00 
   20579:	e9 d5 00 00 00       	jmpq   20653 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1bb3>
   2057e:	48 8d bc 24 00 02 00 	lea    0x200(%rsp),%rdi
   20585:	00 
   20586:	48 8d b4 24 50 02 00 	lea    0x250(%rsp),%rsi
   2058d:	00 
   2058e:	e8 7d b4 fe ff       	callq  ba10 <gimli::read::unit::Attribute<R>::value>
   20593:	48 8b 84 24 00 02 00 	mov    0x200(%rsp),%rax
   2059a:	00 
   2059b:	48 83 f8 10          	cmp    $0x10,%rax
   2059f:	75 10                	jne    205b1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1b11>
   205a1:	48 8b 8c 24 08 02 00 	mov    0x208(%rsp),%rcx
   205a8:	00 
   205a9:	48 89 8c 24 80 00 00 	mov    %rcx,0x80(%rsp)
   205b0:	00 
   205b1:	83 f8 10             	cmp    $0x10,%eax
   205b4:	b8 01 00 00 00       	mov    $0x1,%eax
   205b9:	4c 0f 44 f8          	cmove  %rax,%r15
   205bd:	e9 91 00 00 00       	jmpq   20653 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1bb3>
   205c2:	48 8d bc 24 00 02 00 	lea    0x200(%rsp),%rdi
   205c9:	00 
   205ca:	48 8d b4 24 50 02 00 	lea    0x250(%rsp),%rsi
   205d1:	00 
   205d2:	e8 39 b4 fe ff       	callq  ba10 <gimli::read::unit::Attribute<R>::value>
   205d7:	83 bc 24 00 02 00 00 	cmpl   $0x12,0x200(%rsp)
   205de:	12 
   205df:	75 72                	jne    20653 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1bb3>
   205e1:	48 8b 84 24 08 02 00 	mov    0x208(%rsp),%rax
   205e8:	00 
   205e9:	48 89 84 24 90 04 00 	mov    %rax,0x490(%rsp)
   205f0:	00 
   205f1:	eb 60                	jmp    20653 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1bb3>
   205f3:	48 8d bc 24 00 02 00 	lea    0x200(%rsp),%rdi
   205fa:	00 
   205fb:	48 8d b4 24 50 02 00 	lea    0x250(%rsp),%rsi
   20602:	00 
   20603:	e8 08 b4 fe ff       	callq  ba10 <gimli::read::unit::Attribute<R>::value>
   20608:	83 bc 24 00 02 00 00 	cmpl   $0x17,0x200(%rsp)
   2060f:	17 
   20610:	75 41                	jne    20653 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1bb3>
   20612:	48 8b 84 24 08 02 00 	mov    0x208(%rsp),%rax
   20619:	00 
   2061a:	48 89 84 24 98 04 00 	mov    %rax,0x498(%rsp)
   20621:	00 
   20622:	eb 2f                	jmp    20653 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1bb3>
   20624:	48 8d bc 24 00 02 00 	lea    0x200(%rsp),%rdi
   2062b:	00 
   2062c:	48 8d b4 24 50 02 00 	lea    0x250(%rsp),%rsi
   20633:	00 
   20634:	e8 d7 b3 fe ff       	callq  ba10 <gimli::read::unit::Attribute<R>::value>
   20639:	83 bc 24 00 02 00 00 	cmpl   $0xb,0x200(%rsp)
   20640:	0b 
   20641:	75 10                	jne    20653 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1bb3>
   20643:	48 8b 84 24 08 02 00 	mov    0x208(%rsp),%rax
   2064a:	00 
   2064b:	48 89 84 24 88 04 00 	mov    %rax,0x488(%rsp)
   20652:	00 
   20653:	4c 8b b4 24 08 03 00 	mov    0x308(%rsp),%r14
   2065a:	00 
   2065b:	4d 85 f6             	test   %r14,%r14
   2065e:	0f 84 45 02 00 00    	je     208a9 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1e09>
   20664:	4c 8b a4 24 00 03 00 	mov    0x300(%rsp),%r12
   2066b:	00 
   2066c:	48 8b 84 24 10 03 00 	mov    0x310(%rsp),%rax
   20673:	00 
   20674:	48 83 c0 30          	add    $0x30,%rax
   20678:	e9 30 fd ff ff       	jmpq   203ad <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x190d>
   2067d:	b8 09 00 00 00       	mov    $0x9,%eax
   20682:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   20687:	45 31 e4             	xor    %r12d,%r12d
   2068a:	48 83 bc 24 f0 03 00 	cmpq   $0x0,0x3f0(%rsp)
   20691:	00 00 
   20693:	0f 85 c8 01 00 00    	jne    20861 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1dc1>
   20699:	e9 13 f9 ff ff       	jmpq   1ffb1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1511>
   2069e:	4c 8b 94 24 40 04 00 	mov    0x440(%rsp),%r10
   206a5:	00 
   206a6:	4d 85 d2             	test   %r10,%r10
   206a9:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   206ae:	74 73                	je     20723 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1c83>
   206b0:	4c 8b 84 24 48 04 00 	mov    0x448(%rsp),%r8
   206b7:	00 
   206b8:	45 0f b7 8a 32 05 00 	movzwl 0x532(%r10),%r9d
   206bf:	00 
   206c0:	49 8d 7a f0          	lea    -0x10(%r10),%rdi
   206c4:	4d 89 cb             	mov    %r9,%r11
   206c7:	49 f7 db             	neg    %r11
   206ca:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   206d1:	49 8d 0c 03          	lea    (%r11,%rax,1),%rcx
   206d5:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
   206d9:	74 2d                	je     20708 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1c68>
   206db:	31 c9                	xor    %ecx,%ecx
   206dd:	49 39 54 c2 10       	cmp    %rdx,0x10(%r10,%rax,8)
   206e2:	0f 95 c1             	setne  %cl
   206e5:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
   206ec:	48 0f 47 ce          	cmova  %rsi,%rcx
   206f0:	48 83 c0 01          	add    $0x1,%rax
   206f4:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
   206f8:	74 11                	je     2070b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1c6b>
   206fa:	48 83 c7 70          	add    $0x70,%rdi
   206fe:	48 85 c9             	test   %rcx,%rcx
   20701:	75 ce                	jne    206d1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1c31>
   20703:	e9 e2 fb ff ff       	jmpq   202ea <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x184a>
   20708:	4c 89 c8             	mov    %r9,%rax
   2070b:	4d 85 c0             	test   %r8,%r8
   2070e:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   20713:	74 0e                	je     20723 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1c83>
   20715:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   20719:	4d 8b 94 c2 38 05 00 	mov    0x538(%r10,%rax,8),%r10
   20720:	00 
   20721:	eb 95                	jmp    206b8 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1c18>
   20723:	48 8d 05 2e 6b 01 00 	lea    0x16b2e(%rip),%rax        # 37258 <_fini+0x21d4>
   2072a:	48 89 84 24 10 01 00 	mov    %rax,0x110(%rsp)
   20731:	00 
   20732:	48 c7 84 24 18 01 00 	movq   $0x0,0x118(%rsp)
   20739:	00 00 00 00 00 
   2073e:	48 c7 84 24 68 01 00 	movq   $0x0,0x168(%rsp)
   20745:	00 00 00 00 00 
   2074a:	48 c7 84 24 48 01 00 	movq   $0x2,0x148(%rsp)
   20751:	00 02 00 00 00 
   20756:	48 8d bc 24 28 04 00 	lea    0x428(%rsp),%rdi
   2075d:	00 
   2075e:	e8 0d 56 fe ff       	callq  5d70 <core::ptr::drop_in_place>
   20763:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
   20768:	83 bc 24 48 05 00 00 	cmpl   $0x2e,0x548(%rsp)
   2076f:	2e 
   20770:	48 8b 6c 24 40       	mov    0x40(%rsp),%rbp
   20775:	0f 84 52 f0 ff ff    	je     1f7cd <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xd2d>
   2077b:	48 8d bc 24 a0 04 00 	lea    0x4a0(%rsp),%rdi
   20782:	00 
   20783:	e8 38 61 fe ff       	callq  68c0 <core::ptr::drop_in_place>
   20788:	e9 40 f0 ff ff       	jmpq   1f7cd <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xd2d>
   2078d:	49 01 c4             	add    %rax,%r12
   20790:	49 83 c4 01          	add    $0x1,%r12
   20794:	e9 18 f8 ff ff       	jmpq   1ffb1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1511>
   20799:	b8 08 00 00 00       	mov    $0x8,%eax
   2079e:	eb 0d                	jmp    207ad <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1d0d>
   207a0:	49 89 dc             	mov    %rbx,%r12
   207a3:	e9 09 f8 ff ff       	jmpq   1ffb1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1511>
   207a8:	b8 0a 00 00 00       	mov    $0xa,%eax
   207ad:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   207b2:	45 31 e4             	xor    %r12d,%r12d
   207b5:	e9 f7 f7 ff ff       	jmpq   1ffb1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1511>
   207ba:	48 8b 8c 24 50 06 00 	mov    0x650(%rsp),%rcx
   207c1:	00 
   207c2:	4c 8b a4 24 58 06 00 	mov    0x658(%rsp),%r12
   207c9:	00 
   207ca:	4c 89 e3             	mov    %r12,%rbx
   207cd:	48 c1 eb 08          	shr    $0x8,%rbx
   207d1:	48 89 c8             	mov    %rcx,%rax
   207d4:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   207d9:	49 0f a4 cc 38       	shld   $0x38,%rcx,%r12
   207de:	48 8d 84 24 60 06 00 	lea    0x660(%rsp),%rax
   207e5:	00 
   207e6:	f3 0f 6f 00          	movdqu (%rax),%xmm0
   207ea:	0f 10 48 10          	movups 0x10(%rax),%xmm1
   207ee:	66 0f 7f 84 24 70 03 	movdqa %xmm0,0x370(%rsp)
   207f5:	00 00 
   207f7:	0f 29 8c 24 80 03 00 	movaps %xmm1,0x380(%rsp)
   207fe:	00 
   207ff:	31 c9                	xor    %ecx,%ecx
   20801:	48 8b 6c 24 40       	mov    0x40(%rsp),%rbp
   20806:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
   2080b:	e9 17 f8 ff ff       	jmpq   20027 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1587>
   20810:	b0 0e                	mov    $0xe,%al
   20812:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   20817:	48 8b 6c 24 40       	mov    0x40(%rsp),%rbp
   2081c:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
   20821:	e9 f2 f7 ff ff       	jmpq   20018 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1578>
   20826:	bd 2d 00 00 00       	mov    $0x2d,%ebp
   2082b:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
   20832:	00 
   20833:	45 31 ff             	xor    %r15d,%r15d
   20836:	bb 2d 00 00 00       	mov    $0x2d,%ebx
   2083b:	48 8d 8c 24 48 01 00 	lea    0x148(%rsp),%rcx
   20842:	00 
   20843:	eb 70                	jmp    208b5 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1e15>
   20845:	b8 06 00 00 00       	mov    $0x6,%eax
   2084a:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   2084f:	45 31 e4             	xor    %r12d,%r12d
   20852:	48 83 bc 24 f0 03 00 	cmpq   $0x0,0x3f0(%rsp)
   20859:	00 00 
   2085b:	0f 84 50 f7 ff ff    	je     1ffb1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1511>
   20861:	48 8b b4 24 00 04 00 	mov    0x400(%rsp),%rsi
   20868:	00 
   20869:	48 85 f6             	test   %rsi,%rsi
   2086c:	0f 84 3f f7 ff ff    	je     1ffb1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1511>
   20872:	48 8b bc 24 f8 03 00 	mov    0x3f8(%rsp),%rdi
   20879:	00 
   2087a:	48 85 ff             	test   %rdi,%rdi
   2087d:	0f 84 2e f7 ff ff    	je     1ffb1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1511>
   20883:	48 c1 e6 04          	shl    $0x4,%rsi
   20887:	0f 84 24 f7 ff ff    	je     1ffb1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1511>
   2088d:	ba 08 00 00 00       	mov    $0x8,%edx
   20892:	ff 15 68 53 02 00    	callq  *0x25368(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   20898:	e9 14 f7 ff ff       	jmpq   1ffb1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1511>
   2089d:	49 01 c4             	add    %rax,%r12
   208a0:	49 83 c4 02          	add    $0x2,%r12
   208a4:	e9 08 f7 ff ff       	jmpq   1ffb1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1511>
   208a9:	48 8b 84 24 10 03 00 	mov    0x310(%rsp),%rax
   208b0:	00 
   208b1:	48 8d 48 18          	lea    0x18(%rax),%rcx
   208b5:	48 83 39 01          	cmpq   $0x1,(%rcx)
   208b9:	74 17                	je     208d2 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1e32>
   208bb:	48 8b 94 24 f0 02 00 	mov    0x2f0(%rsp),%rdx
   208c2:	00 
   208c3:	48 2b 50 08          	sub    0x8(%rax),%rdx
   208c7:	48 c7 01 01 00 00 00 	movq   $0x1,(%rcx)
   208ce:	48 89 50 20          	mov    %rdx,0x20(%rax)
   208d2:	66 0f 6f 84 24 00 02 	movdqa 0x200(%rsp),%xmm0
   208d9:	00 00 
   208db:	66 0f 7f 84 24 50 06 	movdqa %xmm0,0x650(%rsp)
   208e2:	00 00 
   208e4:	66 0f 7f 84 24 70 03 	movdqa %xmm0,0x370(%rsp)
   208eb:	00 00 
   208ed:	48 83 fb 2d          	cmp    $0x2d,%rbx
   208f1:	75 04                	jne    208f7 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1e57>
   208f3:	31 c9                	xor    %ecx,%ecx
   208f5:	eb 4b                	jmp    20942 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1ea2>
   208f7:	48 8d bc 24 10 01 00 	lea    0x110(%rsp),%rdi
   208fe:	00 
   208ff:	48 8d b4 24 f0 06 00 	lea    0x6f0(%rsp),%rsi
   20906:	00 
   20907:	48 8d 94 24 f0 03 00 	lea    0x3f0(%rsp),%rdx
   2090e:	00 
   2090f:	48 89 d9             	mov    %rbx,%rcx
   20912:	4c 8b 84 24 e0 00 00 	mov    0xe0(%rsp),%r8
   20919:	00 
   2091a:	4c 8b 4c 24 78       	mov    0x78(%rsp),%r9
   2091f:	e8 8c b8 fe ff       	callq  c1b0 <gimli::read::dwarf::Dwarf<R>::attr_string>
   20924:	83 bc 24 10 01 00 00 	cmpl   $0x1,0x110(%rsp)
   2092b:	01 
   2092c:	48 8b 84 24 20 01 00 	mov    0x120(%rsp),%rax
   20933:	00 
   20934:	74 0a                	je     20940 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1ea0>
   20936:	48 8b 8c 24 18 01 00 	mov    0x118(%rsp),%rcx
   2093d:	00 
   2093e:	eb 02                	jmp    20942 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1ea2>
   20940:	31 c9                	xor    %ecx,%ecx
   20942:	48 89 8c 24 58 04 00 	mov    %rcx,0x458(%rsp)
   20949:	00 
   2094a:	48 89 84 24 60 04 00 	mov    %rax,0x460(%rsp)
   20951:	00 
   20952:	48 83 fd 2d          	cmp    $0x2d,%rbp
   20956:	75 05                	jne    2095d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1ebd>
   20958:	45 31 e4             	xor    %r12d,%r12d
   2095b:	eb 49                	jmp    209a6 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1f06>
   2095d:	48 8d bc 24 10 01 00 	lea    0x110(%rsp),%rdi
   20964:	00 
   20965:	48 8d b4 24 f0 06 00 	lea    0x6f0(%rsp),%rsi
   2096c:	00 
   2096d:	48 8d 94 24 f0 03 00 	lea    0x3f0(%rsp),%rdx
   20974:	00 
   20975:	48 89 e9             	mov    %rbp,%rcx
   20978:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   2097d:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   20982:	e8 29 b8 fe ff       	callq  c1b0 <gimli::read::dwarf::Dwarf<R>::attr_string>
   20987:	83 bc 24 10 01 00 00 	cmpl   $0x1,0x110(%rsp)
   2098e:	01 
   2098f:	4c 8b b4 24 20 01 00 	mov    0x120(%rsp),%r14
   20996:	00 
   20997:	74 0a                	je     209a3 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1f03>
   20999:	4c 8b a4 24 18 01 00 	mov    0x118(%rsp),%r12
   209a0:	00 
   209a1:	eb 03                	jmp    209a6 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1f06>
   209a3:	45 31 e4             	xor    %r12d,%r12d
   209a6:	4c 89 a4 24 68 04 00 	mov    %r12,0x468(%rsp)
   209ad:	00 
   209ae:	4c 89 b4 24 70 04 00 	mov    %r14,0x470(%rsp)
   209b5:	00 
   209b6:	4d 85 ff             	test   %r15,%r15
   209b9:	74 46                	je     20a01 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1f61>
   209bb:	48 8b 84 24 58 04 00 	mov    0x458(%rsp),%rax
   209c2:	00 
   209c3:	48 89 84 24 e0 00 00 	mov    %rax,0xe0(%rsp)
   209ca:	00 
   209cb:	48 8b 84 24 60 04 00 	mov    0x460(%rsp),%rax
   209d2:	00 
   209d3:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   209d8:	48 8b bc 24 20 07 00 	mov    0x720(%rsp),%rdi
   209df:	00 
   209e0:	48 8b 94 24 28 07 00 	mov    0x728(%rsp),%rdx
   209e7:	00 
   209e8:	48 2b 94 24 80 00 00 	sub    0x80(%rsp),%rdx
   209ef:	00 
   209f0:	73 22                	jae    20a14 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1f74>
   209f2:	bb 13 00 00 00       	mov    $0x13,%ebx
   209f7:	b0 01                	mov    $0x1,%al
   209f9:	49 89 ff             	mov    %rdi,%r15
   209fc:	e9 4f 04 00 00       	jmpq   20e50 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x23b0>
   20a01:	bd 2e 00 00 00       	mov    $0x2e,%ebp
   20a06:	89 44 24 18          	mov    %eax,0x18(%rsp)
   20a0a:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   20a0f:	e9 ca 06 00 00       	jmpq   210de <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x263e>
   20a14:	48 03 bc 24 80 00 00 	add    0x80(%rsp),%rdi
   20a1b:	00 
   20a1c:	48 83 fa 04          	cmp    $0x4,%rdx
   20a20:	73 1c                	jae    20a3e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1f9e>
   20a22:	48 89 f9             	mov    %rdi,%rcx
   20a25:	48 81 e1 00 ff ff ff 	and    $0xffffffffffffff00,%rcx
   20a2c:	b8 13 00 00 00       	mov    $0x13,%eax
   20a31:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   20a38:	00 
   20a39:	e9 d5 00 00 00       	jmpq   20b13 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2073>
   20a3e:	8a 84 24 20 04 00 00 	mov    0x420(%rsp),%al
   20a45:	88 44 24 10          	mov    %al,0x10(%rsp)
   20a49:	48 89 f9             	mov    %rdi,%rcx
   20a4c:	48 8d 47 04          	lea    0x4(%rdi),%rax
   20a50:	48 8d 72 fc          	lea    -0x4(%rdx),%rsi
   20a54:	44 8b 3f             	mov    (%rdi),%r15d
   20a57:	4c 89 f9             	mov    %r15,%rcx
   20a5a:	48 c1 e9 04          	shr    $0x4,%rcx
   20a5e:	81 f9 ff ff ff 0f    	cmp    $0xfffffff,%ecx
   20a64:	73 4f                	jae    20ab5 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2015>
   20a66:	c6 84 24 a8 00 00 00 	movb   $0x4,0xa8(%rsp)
   20a6d:	04 
   20a6e:	31 c9                	xor    %ecx,%ecx
   20a70:	48 89 c2             	mov    %rax,%rdx
   20a73:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   20a78:	ba 13 00 00 00       	mov    $0x13,%edx
   20a7d:	48 89 54 24 48       	mov    %rdx,0x48(%rsp)
   20a82:	4c 39 fe             	cmp    %r15,%rsi
   20a85:	0f 82 bf 02 00 00    	jb     20d4a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x22aa>
   20a8b:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   20a90:	4c 89 7c 24 38       	mov    %r15,0x38(%rsp)
   20a95:	49 83 ff 02          	cmp    $0x2,%r15
   20a99:	0f 83 ab 00 00 00    	jae    20b4a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x20aa>
   20a9f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   20aa4:	e9 a1 02 00 00       	jmpq   20d4a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x22aa>
   20aa9:	49 01 c4             	add    %rax,%r12
   20aac:	49 83 c4 03          	add    $0x3,%r12
   20ab0:	e9 fc f4 ff ff       	jmpq   1ffb1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1511>
   20ab5:	41 83 ff ff          	cmp    $0xffffffff,%r15d
   20ab9:	74 34                	je     20aef <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x204f>
   20abb:	b8 10 00 00 00       	mov    $0x10,%eax
   20ac0:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   20ac7:	00 
   20ac8:	31 ff                	xor    %edi,%edi
   20aca:	31 c9                	xor    %ecx,%ecx
   20acc:	eb 45                	jmp    20b13 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2073>
   20ace:	b8 0d 00 00 00       	mov    $0xd,%eax
   20ad3:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   20ad8:	45 31 e4             	xor    %r12d,%r12d
   20adb:	48 83 bc 24 f0 03 00 	cmpq   $0x0,0x3f0(%rsp)
   20ae2:	00 00 
   20ae4:	0f 85 77 fd ff ff    	jne    20861 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1dc1>
   20aea:	e9 c2 f4 ff ff       	jmpq   1ffb1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1511>
   20aef:	48 83 fe 08          	cmp    $0x8,%rsi
   20af3:	0f 83 95 00 00 00    	jae    20b8e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x20ee>
   20af9:	b9 13 00 00 00       	mov    $0x13,%ecx
   20afe:	48 89 8c 24 80 00 00 	mov    %rcx,0x80(%rsp)
   20b05:	00 
   20b06:	48 89 c1             	mov    %rax,%rcx
   20b09:	48 81 e1 00 ff ff ff 	and    $0xffffffffffffff00,%rcx
   20b10:	48 89 c7             	mov    %rax,%rdi
   20b13:	44 0f b6 ff          	movzbl %dil,%r15d
   20b17:	49 09 cf             	or     %rcx,%r15
   20b1a:	b1 01                	mov    $0x1,%cl
   20b1c:	89 44 24 18          	mov    %eax,0x18(%rsp)
   20b20:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   20b25:	31 c0                	xor    %eax,%eax
   20b27:	e9 3d 02 00 00       	jmpq   20d69 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x22c9>
   20b2c:	b8 13 00 00 00       	mov    $0x13,%eax
   20b31:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   20b36:	48 83 bc 24 f0 03 00 	cmpq   $0x0,0x3f0(%rsp)
   20b3d:	00 00 
   20b3f:	0f 85 1c fd ff ff    	jne    20861 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1dc1>
   20b45:	e9 67 f4 ff ff       	jmpq   1ffb1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1511>
   20b4a:	48 8d 78 02          	lea    0x2(%rax),%rdi
   20b4e:	49 8d 57 fe          	lea    -0x2(%r15),%rdx
   20b52:	48 89 fe             	mov    %rdi,%rsi
   20b55:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   20b5a:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
   20b5f:	48 89 d6             	mov    %rdx,%rsi
   20b62:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   20b67:	0f b7 10             	movzwl (%rax),%edx
   20b6a:	0f b7 ea             	movzwl %dx,%ebp
   20b6d:	89 54 24 18          	mov    %edx,0x18(%rsp)
   20b71:	83 c2 fe             	add    $0xfffffffe,%edx
   20b74:	66 83 fa 03          	cmp    $0x3,%dx
   20b78:	76 50                	jbe    20bca <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x212a>
   20b7a:	b8 11 00 00 00       	mov    $0x11,%eax
   20b7f:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   20b84:	48 89 6c 24 08       	mov    %rbp,0x8(%rsp)
   20b89:	e9 bc 01 00 00       	jmpq   20d4a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x22aa>
   20b8e:	48 83 c2 f4          	add    $0xfffffffffffffff4,%rdx
   20b92:	48 89 f8             	mov    %rdi,%rax
   20b95:	4c 8b 7f 04          	mov    0x4(%rdi),%r15
   20b99:	48 83 c0 0c          	add    $0xc,%rax
   20b9d:	c6 84 24 a8 00 00 00 	movb   $0x8,0xa8(%rsp)
   20ba4:	08 
   20ba5:	b1 01                	mov    $0x1,%cl
   20ba7:	48 89 c6             	mov    %rax,%rsi
   20baa:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   20baf:	48 89 d6             	mov    %rdx,%rsi
   20bb2:	ba 13 00 00 00       	mov    $0x13,%edx
   20bb7:	48 89 54 24 48       	mov    %rdx,0x48(%rsp)
   20bbc:	4c 39 fe             	cmp    %r15,%rsi
   20bbf:	0f 82 85 01 00 00    	jb     20d4a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x22aa>
   20bc5:	e9 c1 fe ff ff       	jmpq   20a8b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1feb>
   20bca:	66 83 7c 24 18 04    	cmpw   $0x4,0x18(%rsp)
   20bd0:	76 60                	jbe    20c32 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2192>
   20bd2:	48 85 f6             	test   %rsi,%rsi
   20bd5:	0f 84 6f 01 00 00    	je     20d4a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x22aa>
   20bdb:	48 8d 70 03          	lea    0x3(%rax),%rsi
   20bdf:	48 89 f2             	mov    %rsi,%rdx
   20be2:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   20be7:	48 89 74 24 30       	mov    %rsi,0x30(%rsp)
   20bec:	4c 89 fa             	mov    %r15,%rdx
   20bef:	48 83 c2 fd          	add    $0xfffffffffffffffd,%rdx
   20bf3:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   20bf8:	0f 84 4c 01 00 00    	je     20d4a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x22aa>
   20bfe:	8a 50 02             	mov    0x2(%rax),%dl
   20c01:	88 54 24 10          	mov    %dl,0x10(%rsp)
   20c05:	48 8d 78 04          	lea    0x4(%rax),%rdi
   20c09:	49 8d 57 fc          	lea    -0x4(%r15),%rdx
   20c0d:	48 89 fe             	mov    %rdi,%rsi
   20c10:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   20c15:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
   20c1a:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   20c1f:	80 78 03 00          	cmpb   $0x0,0x3(%rax)
   20c23:	74 0a                	je     20c2f <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x218f>
   20c25:	b8 40 00 00 00       	mov    $0x40,%eax
   20c2a:	e9 16 01 00 00       	jmpq   20d45 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x22a5>
   20c2f:	48 89 d6             	mov    %rdx,%rsi
   20c32:	84 c9                	test   %cl,%cl
   20c34:	74 30                	je     20c66 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x21c6>
   20c36:	48 83 fe 07          	cmp    $0x7,%rsi
   20c3a:	0f 86 0a 01 00 00    	jbe    20d4a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x22aa>
   20c40:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   20c45:	48 8d 41 08          	lea    0x8(%rcx),%rax
   20c49:	48 83 c6 f8          	add    $0xfffffffffffffff8,%rsi
   20c4d:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   20c52:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   20c57:	48 89 74 24 60       	mov    %rsi,0x60(%rsp)
   20c5c:	48 89 74 24 38       	mov    %rsi,0x38(%rsp)
   20c61:	48 8b 01             	mov    (%rcx),%rax
   20c64:	eb 2d                	jmp    20c93 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x21f3>
   20c66:	48 83 fe 04          	cmp    $0x4,%rsi
   20c6a:	0f 82 da 00 00 00    	jb     20d4a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x22aa>
   20c70:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   20c75:	48 8d 41 04          	lea    0x4(%rcx),%rax
   20c79:	48 83 c6 fc          	add    $0xfffffffffffffffc,%rsi
   20c7d:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   20c82:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   20c87:	48 89 74 24 60       	mov    %rsi,0x60(%rsp)
   20c8c:	48 89 74 24 38       	mov    %rsi,0x38(%rsp)
   20c91:	8b 01                	mov    (%rcx),%eax
   20c93:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   20c98:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   20c9d:	48 29 44 24 60       	sub    %rax,0x60(%rsp)
   20ca2:	0f 82 8e 00 00 00    	jb     20d36 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2296>
   20ca8:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   20cad:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   20cb2:	48 85 c0             	test   %rax,%rax
   20cb5:	74 7f                	je     20d36 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2296>
   20cb7:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
   20cbc:	48 8d 71 01          	lea    0x1(%rcx),%rsi
   20cc0:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   20cc5:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
   20cc9:	48 89 f2             	mov    %rsi,%rdx
   20ccc:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   20cd1:	48 89 74 24 30       	mov    %rsi,0x30(%rsp)
   20cd6:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   20cdb:	8a 09                	mov    (%rcx),%cl
   20cdd:	88 8c 24 08 01 00 00 	mov    %cl,0x108(%rsp)
   20ce4:	84 c9                	test   %cl,%cl
   20ce6:	74 58                	je     20d40 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x22a0>
   20ce8:	66 83 7c 24 18 04    	cmpw   $0x4,0x18(%rsp)
   20cee:	0f 82 24 0e 00 00    	jb     21b18 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3078>
   20cf4:	48 85 c0             	test   %rax,%rax
   20cf7:	74 51                	je     20d4a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x22aa>
   20cf9:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
   20cfe:	48 8d 71 02          	lea    0x2(%rcx),%rsi
   20d02:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   20d07:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
   20d0b:	48 89 f2             	mov    %rsi,%rdx
   20d0e:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   20d13:	48 89 74 24 30       	mov    %rsi,0x30(%rsp)
   20d18:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   20d1d:	8a 49 01             	mov    0x1(%rcx),%cl
   20d20:	88 8c 24 b8 02 00 00 	mov    %cl,0x2b8(%rsp)
   20d27:	84 c9                	test   %cl,%cl
   20d29:	0f 85 f1 0d 00 00    	jne    21b20 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3080>
   20d2f:	b8 1b 00 00 00       	mov    $0x1b,%eax
   20d34:	eb 0f                	jmp    20d45 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x22a5>
   20d36:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
   20d3b:	e9 5f fd ff ff       	jmpq   20a9f <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1fff>
   20d40:	b8 1a 00 00 00       	mov    $0x1a,%eax
   20d45:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   20d4a:	31 c0                	xor    %eax,%eax
   20d4c:	b1 01                	mov    $0x1,%cl
   20d4e:	89 54 24 18          	mov    %edx,0x18(%rsp)
   20d52:	4c 8b 7c 24 08       	mov    0x8(%rsp),%r15
   20d57:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
   20d5c:	48 89 94 24 80 00 00 	mov    %rdx,0x80(%rsp)
   20d63:	00 
   20d64:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   20d69:	48 25 00 ff ff ff    	and    $0xffffffffffffff00,%rax
   20d6f:	0f b6 9c 24 80 00 00 	movzbl 0x80(%rsp),%ebx
   20d76:	00 
   20d77:	48 09 c3             	or     %rax,%rbx
   20d7a:	48 8b 84 24 60 02 00 	mov    0x260(%rsp),%rax
   20d81:	00 
   20d82:	48 89 84 24 30 09 00 	mov    %rax,0x930(%rsp)
   20d89:	00 
   20d8a:	0f 28 84 24 50 02 00 	movaps 0x250(%rsp),%xmm0
   20d91:	00 
   20d92:	0f 29 84 24 20 09 00 	movaps %xmm0,0x920(%rsp)
   20d99:	00 
   20d9a:	0f 28 84 24 f0 02 00 	movaps 0x2f0(%rsp),%xmm0
   20da1:	00 
   20da2:	0f 29 84 24 00 09 00 	movaps %xmm0,0x900(%rsp)
   20da9:	00 
   20daa:	48 8b 84 24 00 03 00 	mov    0x300(%rsp),%rax
   20db1:	00 
   20db2:	48 89 84 24 10 09 00 	mov    %rax,0x910(%rsp)
   20db9:	00 
   20dba:	0f 28 84 24 60 09 00 	movaps 0x960(%rsp),%xmm0
   20dc1:	00 
   20dc2:	0f 29 84 24 e0 08 00 	movaps %xmm0,0x8e0(%rsp)
   20dc9:	00 
   20dca:	48 8b 84 24 70 09 00 	mov    0x970(%rsp),%rax
   20dd1:	00 
   20dd2:	48 89 84 24 f0 08 00 	mov    %rax,0x8f0(%rsp)
   20dd9:	00 
   20dda:	0f 28 84 24 40 09 00 	movaps 0x940(%rsp),%xmm0
   20de1:	00 
   20de2:	0f 29 84 24 c0 08 00 	movaps %xmm0,0x8c0(%rsp)
   20de9:	00 
   20dea:	48 8b 84 24 50 09 00 	mov    0x950(%rsp),%rax
   20df1:	00 
   20df2:	48 89 84 24 d0 08 00 	mov    %rax,0x8d0(%rsp)
   20df9:	00 
   20dfa:	48 8b 84 24 30 01 00 	mov    0x130(%rsp),%rax
   20e01:	00 
   20e02:	48 89 84 24 70 06 00 	mov    %rax,0x670(%rsp)
   20e09:	00 
   20e0a:	66 0f 6f 84 24 10 01 	movdqa 0x110(%rsp),%xmm0
   20e11:	00 00 
   20e13:	0f 28 8c 24 20 01 00 	movaps 0x120(%rsp),%xmm1
   20e1a:	00 
   20e1b:	0f 29 8c 24 60 06 00 	movaps %xmm1,0x660(%rsp)
   20e22:	00 
   20e23:	66 0f 7f 84 24 50 06 	movdqa %xmm0,0x650(%rsp)
   20e2a:	00 00 
   20e2c:	0f b7 84 24 04 02 00 	movzwl 0x204(%rsp),%eax
   20e33:	00 
   20e34:	66 89 84 24 fc 01 00 	mov    %ax,0x1fc(%rsp)
   20e3b:	00 
   20e3c:	8b 84 24 00 02 00 00 	mov    0x200(%rsp),%eax
   20e43:	89 84 24 f8 01 00 00 	mov    %eax,0x1f8(%rsp)
   20e4a:	84 c9                	test   %cl,%cl
   20e4c:	74 10                	je     20e5e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x23be>
   20e4e:	b0 01                	mov    $0x1,%al
   20e50:	89 4c 24 18          	mov    %ecx,0x18(%rsp)
   20e54:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   20e59:	e9 d2 00 00 00       	jmpq   20f30 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2490>
   20e5e:	48 8b 84 24 30 09 00 	mov    0x930(%rsp),%rax
   20e65:	00 
   20e66:	48 89 84 24 60 02 00 	mov    %rax,0x260(%rsp)
   20e6d:	00 
   20e6e:	0f 28 84 24 20 09 00 	movaps 0x920(%rsp),%xmm0
   20e75:	00 
   20e76:	0f 29 84 24 50 02 00 	movaps %xmm0,0x250(%rsp)
   20e7d:	00 
   20e7e:	0f 28 84 24 00 09 00 	movaps 0x900(%rsp),%xmm0
   20e85:	00 
   20e86:	0f 29 84 24 f0 02 00 	movaps %xmm0,0x2f0(%rsp)
   20e8d:	00 
   20e8e:	48 8b 84 24 10 09 00 	mov    0x910(%rsp),%rax
   20e95:	00 
   20e96:	48 89 84 24 00 03 00 	mov    %rax,0x300(%rsp)
   20e9d:	00 
   20e9e:	0f 28 84 24 e0 08 00 	movaps 0x8e0(%rsp),%xmm0
   20ea5:	00 
   20ea6:	0f 29 84 24 00 02 00 	movaps %xmm0,0x200(%rsp)
   20ead:	00 
   20eae:	48 8b 84 24 f0 08 00 	mov    0x8f0(%rsp),%rax
   20eb5:	00 
   20eb6:	48 89 84 24 10 02 00 	mov    %rax,0x210(%rsp)
   20ebd:	00 
   20ebe:	0f 28 84 24 c0 08 00 	movaps 0x8c0(%rsp),%xmm0
   20ec5:	00 
   20ec6:	0f 29 84 24 c0 00 00 	movaps %xmm0,0xc0(%rsp)
   20ecd:	00 
   20ece:	48 8b 84 24 d0 08 00 	mov    0x8d0(%rsp),%rax
   20ed5:	00 
   20ed6:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
   20edd:	00 
   20ede:	48 8b 84 24 70 06 00 	mov    0x670(%rsp),%rax
   20ee5:	00 
   20ee6:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
   20eed:	00 
   20eee:	66 0f 6f 84 24 50 06 	movdqa 0x650(%rsp),%xmm0
   20ef5:	00 00 
   20ef7:	0f 28 8c 24 60 06 00 	movaps 0x660(%rsp),%xmm1
   20efe:	00 
   20eff:	0f 29 8c 24 20 01 00 	movaps %xmm1,0x120(%rsp)
   20f06:	00 
   20f07:	66 0f 7f 84 24 10 01 	movdqa %xmm0,0x110(%rsp)
   20f0e:	00 00 
   20f10:	0f b7 84 24 fc 01 00 	movzwl 0x1fc(%rsp),%eax
   20f17:	00 
   20f18:	66 89 84 24 dc 02 00 	mov    %ax,0x2dc(%rsp)
   20f1f:	00 
   20f20:	8b 84 24 f8 01 00 00 	mov    0x1f8(%rsp),%eax
   20f27:	89 84 24 d8 02 00 00 	mov    %eax,0x2d8(%rsp)
   20f2e:	31 c0                	xor    %eax,%eax
   20f30:	48 8b 8c 24 60 02 00 	mov    0x260(%rsp),%rcx
   20f37:	00 
   20f38:	48 89 8c 24 b0 08 00 	mov    %rcx,0x8b0(%rsp)
   20f3f:	00 
   20f40:	0f 28 84 24 50 02 00 	movaps 0x250(%rsp),%xmm0
   20f47:	00 
   20f48:	0f 29 84 24 a0 08 00 	movaps %xmm0,0x8a0(%rsp)
   20f4f:	00 
   20f50:	0f 28 84 24 f0 02 00 	movaps 0x2f0(%rsp),%xmm0
   20f57:	00 
   20f58:	0f 29 84 24 80 08 00 	movaps %xmm0,0x880(%rsp)
   20f5f:	00 
   20f60:	48 8b 8c 24 00 03 00 	mov    0x300(%rsp),%rcx
   20f67:	00 
   20f68:	48 89 8c 24 90 08 00 	mov    %rcx,0x890(%rsp)
   20f6f:	00 
   20f70:	0f 28 84 24 00 02 00 	movaps 0x200(%rsp),%xmm0
   20f77:	00 
   20f78:	0f 29 84 24 60 08 00 	movaps %xmm0,0x860(%rsp)
   20f7f:	00 
   20f80:	48 8b 8c 24 10 02 00 	mov    0x210(%rsp),%rcx
   20f87:	00 
   20f88:	48 89 8c 24 70 08 00 	mov    %rcx,0x870(%rsp)
   20f8f:	00 
   20f90:	0f 28 84 24 c0 00 00 	movaps 0xc0(%rsp),%xmm0
   20f97:	00 
   20f98:	0f 29 84 24 40 08 00 	movaps %xmm0,0x840(%rsp)
   20f9f:	00 
   20fa0:	48 8b 8c 24 d0 00 00 	mov    0xd0(%rsp),%rcx
   20fa7:	00 
   20fa8:	48 89 8c 24 50 08 00 	mov    %rcx,0x850(%rsp)
   20faf:	00 
   20fb0:	48 8b 8c 24 30 01 00 	mov    0x130(%rsp),%rcx
   20fb7:	00 
   20fb8:	48 89 8c 24 90 03 00 	mov    %rcx,0x390(%rsp)
   20fbf:	00 
   20fc0:	66 0f 6f 84 24 10 01 	movdqa 0x110(%rsp),%xmm0
   20fc7:	00 00 
   20fc9:	0f 28 8c 24 20 01 00 	movaps 0x120(%rsp),%xmm1
   20fd0:	00 
   20fd1:	0f 29 8c 24 80 03 00 	movaps %xmm1,0x380(%rsp)
   20fd8:	00 
   20fd9:	66 0f 7f 84 24 70 03 	movdqa %xmm0,0x370(%rsp)
   20fe0:	00 00 
   20fe2:	0f b7 8c 24 dc 02 00 	movzwl 0x2dc(%rsp),%ecx
   20fe9:	00 
   20fea:	66 89 8c 24 f4 01 00 	mov    %cx,0x1f4(%rsp)
   20ff1:	00 
   20ff2:	8b 8c 24 d8 02 00 00 	mov    0x2d8(%rsp),%ecx
   20ff9:	89 8c 24 f0 01 00 00 	mov    %ecx,0x1f0(%rsp)
   21000:	84 c0                	test   %al,%al
   21002:	74 0a                	je     2100e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x256e>
   21004:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   21009:	e9 48 f7 ff ff       	jmpq   20756 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1cb6>
   2100e:	48 8b 84 24 b0 08 00 	mov    0x8b0(%rsp),%rax
   21015:	00 
   21016:	48 89 84 24 30 08 00 	mov    %rax,0x830(%rsp)
   2101d:	00 
   2101e:	0f 28 84 24 a0 08 00 	movaps 0x8a0(%rsp),%xmm0
   21025:	00 
   21026:	0f 29 84 24 20 08 00 	movaps %xmm0,0x820(%rsp)
   2102d:	00 
   2102e:	0f 28 84 24 80 08 00 	movaps 0x880(%rsp),%xmm0
   21035:	00 
   21036:	0f 29 84 24 00 08 00 	movaps %xmm0,0x800(%rsp)
   2103d:	00 
   2103e:	48 8b 84 24 90 08 00 	mov    0x890(%rsp),%rax
   21045:	00 
   21046:	48 89 84 24 10 08 00 	mov    %rax,0x810(%rsp)
   2104d:	00 
   2104e:	0f 28 84 24 60 08 00 	movaps 0x860(%rsp),%xmm0
   21055:	00 
   21056:	0f 29 84 24 e0 07 00 	movaps %xmm0,0x7e0(%rsp)
   2105d:	00 
   2105e:	48 8b 84 24 70 08 00 	mov    0x870(%rsp),%rax
   21065:	00 
   21066:	48 89 84 24 f0 07 00 	mov    %rax,0x7f0(%rsp)
   2106d:	00 
   2106e:	0f 28 84 24 40 08 00 	movaps 0x840(%rsp),%xmm0
   21075:	00 
   21076:	0f 29 84 24 c0 07 00 	movaps %xmm0,0x7c0(%rsp)
   2107d:	00 
   2107e:	48 8b 84 24 50 08 00 	mov    0x850(%rsp),%rax
   21085:	00 
   21086:	48 89 84 24 d0 07 00 	mov    %rax,0x7d0(%rsp)
   2108d:	00 
   2108e:	48 8b 84 24 90 03 00 	mov    0x390(%rsp),%rax
   21095:	00 
   21096:	48 89 84 24 c0 06 00 	mov    %rax,0x6c0(%rsp)
   2109d:	00 
   2109e:	66 0f 6f 84 24 70 03 	movdqa 0x370(%rsp),%xmm0
   210a5:	00 00 
   210a7:	0f 28 8c 24 80 03 00 	movaps 0x380(%rsp),%xmm1
   210ae:	00 
   210af:	0f 29 8c 24 b0 06 00 	movaps %xmm1,0x6b0(%rsp)
   210b6:	00 
   210b7:	66 0f 7f 84 24 a0 06 	movdqa %xmm0,0x6a0(%rsp)
   210be:	00 00 
   210c0:	0f b7 84 24 f4 01 00 	movzwl 0x1f4(%rsp),%eax
   210c7:	00 
   210c8:	66 89 84 24 ec 01 00 	mov    %ax,0x1ec(%rsp)
   210cf:	00 
   210d0:	8b 84 24 f0 01 00 00 	mov    0x1f0(%rsp),%eax
   210d7:	89 84 24 e8 01 00 00 	mov    %eax,0x1e8(%rsp)
   210de:	83 bc 24 48 05 00 00 	cmpl   $0x2e,0x548(%rsp)
   210e5:	2e 
   210e6:	74 0d                	je     210f5 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2655>
   210e8:	48 8d bc 24 a0 04 00 	lea    0x4a0(%rsp),%rdi
   210ef:	00 
   210f0:	e8 cb 57 fe ff       	callq  68c0 <core::ptr::drop_in_place>
   210f5:	48 89 9c 24 a0 04 00 	mov    %rbx,0x4a0(%rsp)
   210fc:	00 
   210fd:	4c 89 bc 24 a8 04 00 	mov    %r15,0x4a8(%rsp)
   21104:	00 
   21105:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   2110a:	48 89 84 24 b0 04 00 	mov    %rax,0x4b0(%rsp)
   21111:	00 
   21112:	48 8b 84 24 c8 01 00 	mov    0x1c8(%rsp),%rax
   21119:	00 
   2111a:	48 89 84 24 b8 04 00 	mov    %rax,0x4b8(%rsp)
   21121:	00 
   21122:	48 8b 84 24 e8 03 00 	mov    0x3e8(%rsp),%rax
   21129:	00 
   2112a:	48 89 84 24 c0 04 00 	mov    %rax,0x4c0(%rsp)
   21131:	00 
   21132:	48 8b 84 24 30 08 00 	mov    0x830(%rsp),%rax
   21139:	00 
   2113a:	48 8d 8c 24 10 04 00 	lea    0x410(%rsp),%rcx
   21141:	00 
   21142:	48 89 81 c8 00 00 00 	mov    %rax,0xc8(%rcx)
   21149:	0f 28 84 24 20 08 00 	movaps 0x820(%rsp),%xmm0
   21150:	00 
   21151:	0f 11 81 b8 00 00 00 	movups %xmm0,0xb8(%rcx)
   21158:	48 8b 84 24 10 08 00 	mov    0x810(%rsp),%rax
   2115f:	00 
   21160:	48 89 81 e0 00 00 00 	mov    %rax,0xe0(%rcx)
   21167:	0f 28 84 24 00 08 00 	movaps 0x800(%rsp),%xmm0
   2116e:	00 
   2116f:	0f 11 81 d0 00 00 00 	movups %xmm0,0xd0(%rcx)
   21176:	48 8b 84 24 f0 07 00 	mov    0x7f0(%rsp),%rax
   2117d:	00 
   2117e:	48 89 81 f8 00 00 00 	mov    %rax,0xf8(%rcx)
   21185:	0f 28 84 24 e0 07 00 	movaps 0x7e0(%rsp),%xmm0
   2118c:	00 
   2118d:	0f 11 81 e8 00 00 00 	movups %xmm0,0xe8(%rcx)
   21194:	48 8b 84 24 d0 07 00 	mov    0x7d0(%rsp),%rax
   2119b:	00 
   2119c:	48 89 81 10 01 00 00 	mov    %rax,0x110(%rcx)
   211a3:	0f 28 84 24 c0 07 00 	movaps 0x7c0(%rsp),%xmm0
   211aa:	00 
   211ab:	0f 11 81 00 01 00 00 	movups %xmm0,0x100(%rcx)
   211b2:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
   211b7:	48 89 84 24 28 05 00 	mov    %rax,0x528(%rsp)
   211be:	00 
   211bf:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   211c4:	48 89 84 24 30 05 00 	mov    %rax,0x530(%rsp)
   211cb:	00 
   211cc:	4c 89 a4 24 38 05 00 	mov    %r12,0x538(%rsp)
   211d3:	00 
   211d4:	4c 89 b4 24 40 05 00 	mov    %r14,0x540(%rsp)
   211db:	00 
   211dc:	48 89 ac 24 48 05 00 	mov    %rbp,0x548(%rsp)
   211e3:	00 
   211e4:	48 8b 84 24 e0 00 00 	mov    0xe0(%rsp),%rax
   211eb:	00 
   211ec:	48 89 84 24 50 05 00 	mov    %rax,0x550(%rsp)
   211f3:	00 
   211f4:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   211f9:	48 89 84 24 58 05 00 	mov    %rax,0x558(%rsp)
   21200:	00 
   21201:	48 8b 84 24 c0 06 00 	mov    0x6c0(%rsp),%rax
   21208:	00 
   21209:	48 89 81 70 01 00 00 	mov    %rax,0x170(%rcx)
   21210:	0f 28 84 24 a0 06 00 	movaps 0x6a0(%rsp),%xmm0
   21217:	00 
   21218:	0f 28 8c 24 b0 06 00 	movaps 0x6b0(%rsp),%xmm1
   2121f:	00 
   21220:	0f 11 89 60 01 00 00 	movups %xmm1,0x160(%rcx)
   21227:	0f 11 81 50 01 00 00 	movups %xmm0,0x150(%rcx)
   2122e:	8a 44 24 10          	mov    0x10(%rsp),%al
   21232:	88 84 24 88 05 00 00 	mov    %al,0x588(%rsp)
   21239:	8a 84 24 a8 00 00 00 	mov    0xa8(%rsp),%al
   21240:	88 84 24 89 05 00 00 	mov    %al,0x589(%rsp)
   21247:	8b 44 24 18          	mov    0x18(%rsp),%eax
   2124b:	66 89 84 24 8a 05 00 	mov    %ax,0x58a(%rsp)
   21252:	00 
   21253:	8a 84 24 08 01 00 00 	mov    0x108(%rsp),%al
   2125a:	88 84 24 8c 05 00 00 	mov    %al,0x58c(%rsp)
   21261:	8a 84 24 b8 02 00 00 	mov    0x2b8(%rsp),%al
   21268:	88 84 24 8d 05 00 00 	mov    %al,0x58d(%rsp)
   2126f:	8a 84 24 c0 01 00 00 	mov    0x1c0(%rsp),%al
   21276:	88 84 24 8e 05 00 00 	mov    %al,0x58e(%rsp)
   2127d:	8a 84 24 48 03 00 00 	mov    0x348(%rsp),%al
   21284:	88 84 24 8f 05 00 00 	mov    %al,0x58f(%rsp)
   2128b:	8a 84 24 40 03 00 00 	mov    0x340(%rsp),%al
   21292:	88 84 24 90 05 00 00 	mov    %al,0x590(%rsp)
   21299:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   2129e:	88 84 24 91 05 00 00 	mov    %al,0x591(%rsp)
   212a5:	0f b7 84 24 ec 01 00 	movzwl 0x1ec(%rsp),%eax
   212ac:	00 
   212ad:	66 89 81 86 01 00 00 	mov    %ax,0x186(%rcx)
   212b4:	8b 84 24 e8 01 00 00 	mov    0x1e8(%rsp),%eax
   212bb:	89 81 82 01 00 00    	mov    %eax,0x182(%rcx)
   212c1:	0f 10 84 24 f0 03 00 	movups 0x3f0(%rsp),%xmm0
   212c8:	00 
   212c9:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
   212d0:	00 
   212d1:	ba 98 01 00 00       	mov    $0x198,%edx
   212d6:	4c 8d b4 24 90 0c 00 	lea    0xc90(%rsp),%r14
   212dd:	00 
   212de:	4c 89 f7             	mov    %r14,%rdi
   212e1:	48 8d b4 24 00 04 00 	lea    0x400(%rsp),%rsi
   212e8:	00 
   212e9:	48 8b 2d 10 4a 02 00 	mov    0x24a10(%rip),%rbp        # 45d00 <memcpy@GLIBC_2.14>
   212f0:	ff d5                	callq  *%rbp
   212f2:	66 0f 6f 84 24 80 00 	movdqa 0x80(%rsp),%xmm0
   212f9:	00 00 
   212fb:	f3 0f 7f 84 24 a0 0a 	movdqu %xmm0,0xaa0(%rsp)
   21302:	00 00 
   21304:	ba 98 01 00 00       	mov    $0x198,%edx
   21309:	48 8d 9c 24 b0 0a 00 	lea    0xab0(%rsp),%rbx
   21310:	00 
   21311:	48 89 df             	mov    %rbx,%rdi
   21314:	4c 89 f6             	mov    %r14,%rsi
   21317:	ff d5                	callq  *%rbp
   21319:	48 8b 94 24 c0 0a 00 	mov    0xac0(%rsp),%rdx
   21320:	00 
   21321:	48 8b b4 24 c8 0a 00 	mov    0xac8(%rsp),%rsi
   21328:	00 
   21329:	48 89 94 24 90 0c 00 	mov    %rdx,0xc90(%rsp)
   21330:	00 
   21331:	48 89 b4 24 98 0c 00 	mov    %rsi,0xc98(%rsp)
   21338:	00 
   21339:	48 89 9c 24 a0 0c 00 	mov    %rbx,0xca0(%rsp)
   21340:	00 
   21341:	48 8d 84 24 d8 0a 00 	lea    0xad8(%rsp),%rax
   21348:	00 
   21349:	48 89 84 24 a8 0c 00 	mov    %rax,0xca8(%rsp)
   21350:	00 
   21351:	48 c7 84 24 b0 0c 00 	movq   $0x0,0xcb0(%rsp)
   21358:	00 00 00 00 00 
   2135d:	48 85 f6             	test   %rsi,%rsi
   21360:	0f 84 d2 23 00 00    	je     23738 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c98>
   21366:	48 83 c2 01          	add    $0x1,%rdx
   2136a:	48 83 c6 ff          	add    $0xffffffffffffffff,%rsi
   2136e:	31 c0                	xor    %eax,%eax
   21370:	31 c9                	xor    %ecx,%ecx
   21372:	48 89 94 24 90 0c 00 	mov    %rdx,0xc90(%rsp)
   21379:	00 
   2137a:	48 89 b4 24 98 0c 00 	mov    %rsi,0xc98(%rsp)
   21381:	00 
   21382:	0f b6 5a ff          	movzbl -0x1(%rdx),%ebx
   21386:	83 f9 3f             	cmp    $0x3f,%ecx
   21389:	75 09                	jne    21394 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x28f4>
   2138b:	80 fb 01             	cmp    $0x1,%bl
   2138e:	0f 87 a4 23 00 00    	ja     23738 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c98>
   21394:	0f b6 eb             	movzbl %bl,%ebp
   21397:	89 ef                	mov    %ebp,%edi
   21399:	83 e7 7f             	and    $0x7f,%edi
   2139c:	48 d3 e7             	shl    %cl,%rdi
   2139f:	48 09 f8             	or     %rdi,%rax
   213a2:	40 84 ed             	test   %bpl,%bpl
   213a5:	79 12                	jns    213b9 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2919>
   213a7:	83 c1 07             	add    $0x7,%ecx
   213aa:	48 83 c2 01          	add    $0x1,%rdx
   213ae:	48 83 c6 ff          	add    $0xffffffffffffffff,%rsi
   213b2:	72 be                	jb     21372 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x28d2>
   213b4:	e9 7f 23 00 00       	jmpq   23738 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c98>
   213b9:	48 85 c0             	test   %rax,%rax
   213bc:	0f 84 97 00 00 00    	je     21459 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x29b9>
   213c2:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   213c6:	48 3b 8c 24 e8 0a 00 	cmp    0xae8(%rsp),%rcx
   213cd:	00 
   213ce:	0f 83 c8 00 00 00    	jae    2149c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x29fc>
   213d4:	48 6b f9 70          	imul   $0x70,%rcx,%rdi
   213d8:	48 03 bc 24 d8 0a 00 	add    0xad8(%rsp),%rdi
   213df:	00 
   213e0:	80 7f 6a 01          	cmpb   $0x1,0x6a(%rdi)
   213e4:	75 0c                	jne    213f2 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2952>
   213e6:	48 c7 84 24 b0 0c 00 	movq   $0x1,0xcb0(%rsp)
   213ed:	00 01 00 00 00 
   213f2:	66 83 7f 68 11       	cmpw   $0x11,0x68(%rdi)
   213f7:	75 6c                	jne    21465 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x29c5>
   213f9:	48 83 c7 08          	add    $0x8,%rdi
   213fd:	ff 15 8d 46 02 00    	callq  *0x2468d(%rip)        # 45a90 <_GLOBAL_OFFSET_TABLE_+0x100>
   21403:	49 89 d4             	mov    %rdx,%r12
   21406:	48 85 d2             	test   %rdx,%rdx
   21409:	0f 84 cf 03 00 00    	je     217de <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2d3e>
   2140f:	48 89 c5             	mov    %rax,%rbp
   21412:	49 c1 e4 04          	shl    $0x4,%r12
   21416:	49 01 c4             	add    %rax,%r12
   21419:	48 8b 84 24 b0 07 00 	mov    0x7b0(%rsp),%rax
   21420:	00 
   21421:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   21426:	48 8b 84 24 b8 07 00 	mov    0x7b8(%rsp),%rax
   2142d:	00 
   2142e:	48 89 84 24 e0 00 00 	mov    %rax,0xe0(%rsp)
   21435:	00 
   21436:	45 31 ff             	xor    %r15d,%r15d
   21439:	45 31 f6             	xor    %r14d,%r14d
   2143c:	31 c0                	xor    %eax,%eax
   2143e:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   21443:	31 c0                	xor    %eax,%eax
   21445:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2144a:	31 c0                	xor    %eax,%eax
   2144c:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   21453:	00 
   21454:	e9 df 00 00 00       	jmpq   21538 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2a98>
   21459:	48 c7 84 24 b0 0c 00 	movq   $0xffffffffffffffff,0xcb0(%rsp)
   21460:	00 ff ff ff ff 
   21465:	48 8d bc 24 d8 0a 00 	lea    0xad8(%rsp),%rdi
   2146c:	00 
   2146d:	e8 fe 48 fe ff       	callq  5d70 <core::ptr::drop_in_place>
   21472:	83 bc 24 f8 0b 00 00 	cmpl   $0x2e,0xbf8(%rsp)
   21479:	2e 
   2147a:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   2147f:	48 8b 6c 24 40       	mov    0x40(%rsp),%rbp
   21484:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
   21489:	0f 84 3e e3 ff ff    	je     1f7cd <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xd2d>
   2148f:	48 8d bc 24 50 0b 00 	lea    0xb50(%rsp),%rdi
   21496:	00 
   21497:	e9 e7 f2 ff ff       	jmpq   20783 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1ce3>
   2149c:	48 8b 8c 24 f0 0a 00 	mov    0xaf0(%rsp),%rcx
   214a3:	00 
   214a4:	48 85 c9             	test   %rcx,%rcx
   214a7:	0f 84 8b 22 00 00    	je     23738 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c98>
   214ad:	4c 8b 84 24 f8 0a 00 	mov    0xaf8(%rsp),%r8
   214b4:	00 
   214b5:	44 0f b7 89 32 05 00 	movzwl 0x532(%rcx),%r9d
   214bc:	00 
   214bd:	48 8d 79 f0          	lea    -0x10(%rcx),%rdi
   214c1:	4c 89 cd             	mov    %r9,%rbp
   214c4:	48 f7 dd             	neg    %rbp
   214c7:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
   214ce:	48 8d 14 2e          	lea    (%rsi,%rbp,1),%rdx
   214d2:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   214d6:	74 2d                	je     21505 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2a65>
   214d8:	31 d2                	xor    %edx,%edx
   214da:	48 39 44 f1 10       	cmp    %rax,0x10(%rcx,%rsi,8)
   214df:	0f 95 c2             	setne  %dl
   214e2:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
   214e9:	48 0f 47 d3          	cmova  %rbx,%rdx
   214ed:	48 83 c6 01          	add    $0x1,%rsi
   214f1:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   214f5:	74 11                	je     21508 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2a68>
   214f7:	48 83 c7 70          	add    $0x70,%rdi
   214fb:	48 85 d2             	test   %rdx,%rdx
   214fe:	75 ce                	jne    214ce <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2a2e>
   21500:	e9 db fe ff ff       	jmpq   213e0 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2940>
   21505:	4c 89 ce             	mov    %r9,%rsi
   21508:	4d 85 c0             	test   %r8,%r8
   2150b:	0f 84 27 22 00 00    	je     23738 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c98>
   21511:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   21515:	48 8b 8c f1 38 05 00 	mov    0x538(%rcx,%rsi,8),%rcx
   2151c:	00 
   2151d:	eb 96                	jmp    214b5 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2a15>
   2151f:	83 f8 26             	cmp    $0x26,%eax
   21522:	b8 01 00 00 00       	mov    $0x1,%eax
   21527:	44 0f 44 f8          	cmove  %eax,%r15d
   2152b:	48 83 c5 10          	add    $0x10,%rbp
   2152f:	4c 39 e5             	cmp    %r12,%rbp
   21532:	0f 84 c4 02 00 00    	je     217fc <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2d5c>
   21538:	48 8b 4d 00          	mov    0x0(%rbp),%rcx
   2153c:	48 8b 84 24 a0 0c 00 	mov    0xca0(%rsp),%rax
   21543:	00 
   21544:	8b 50 20             	mov    0x20(%rax),%edx
   21547:	44 0f b7 4d 0a       	movzwl 0xa(%rbp),%r9d
   2154c:	44 8b 45 08          	mov    0x8(%rbp),%r8d
   21550:	48 8d bc 24 f0 03 00 	lea    0x3f0(%rsp),%rdi
   21557:	00 
   21558:	48 8d b4 24 90 0c 00 	lea    0xc90(%rsp),%rsi
   2155f:	00 
   21560:	e8 6b 92 fe ff       	callq  a7d0 <gimli::read::unit::parse_attribute>
   21565:	48 8b 84 24 00 04 00 	mov    0x400(%rsp),%rax
   2156c:	00 
   2156d:	48 8b 94 24 f0 03 00 	mov    0x3f0(%rsp),%rdx
   21574:	00 
   21575:	48 8b 8c 24 f8 03 00 	mov    0x3f8(%rsp),%rcx
   2157c:	00 
   2157d:	48 8d b4 24 10 04 00 	lea    0x410(%rsp),%rsi
   21584:	00 
   21585:	f3 0f 6f 46 f8       	movdqu -0x8(%rsi),%xmm0
   2158a:	66 0f 7f 84 24 50 02 	movdqa %xmm0,0x250(%rsp)
   21591:	00 00 
   21593:	48 83 fa 01          	cmp    $0x1,%rdx
   21597:	0f 84 9b 21 00 00    	je     23738 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c98>
   2159d:	48 89 8c 24 10 01 00 	mov    %rcx,0x110(%rsp)
   215a4:	00 
   215a5:	48 89 84 24 18 01 00 	mov    %rax,0x118(%rsp)
   215ac:	00 
   215ad:	66 0f 6f 84 24 50 02 	movdqa 0x250(%rsp),%xmm0
   215b4:	00 00 
   215b6:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
   215bd:	00 
   215be:	f3 0f 7f 40 f0       	movdqu %xmm0,-0x10(%rax)
   215c3:	0f b7 84 24 28 01 00 	movzwl 0x128(%rsp),%eax
   215ca:	00 
   215cb:	66 83 f8 12          	cmp    $0x12,%ax
   215cf:	7f 63                	jg     21634 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2b94>
   215d1:	66 83 f8 11          	cmp    $0x11,%ax
   215d5:	0f 84 15 01 00 00    	je     216f0 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2c50>
   215db:	66 83 f8 12          	cmp    $0x12,%ax
   215df:	0f 85 46 ff ff ff    	jne    2152b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2a8b>
   215e5:	48 8d bc 24 f0 03 00 	lea    0x3f0(%rsp),%rdi
   215ec:	00 
   215ed:	48 8d b4 24 10 01 00 	lea    0x110(%rsp),%rsi
   215f4:	00 
   215f5:	e8 16 a4 fe ff       	callq  ba10 <gimli::read::unit::Attribute<R>::value>
   215fa:	48 8b 84 24 f0 03 00 	mov    0x3f0(%rsp),%rax
   21601:	00 
   21602:	48 83 f8 07          	cmp    $0x7,%rax
   21606:	0f 84 66 01 00 00    	je     21772 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2cd2>
   2160c:	48 85 c0             	test   %rax,%rax
   2160f:	0f 85 16 ff ff ff    	jne    2152b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2a8b>
   21615:	b8 01 00 00 00       	mov    $0x1,%eax
   2161a:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2161f:	48 8b 84 24 f8 03 00 	mov    0x3f8(%rsp),%rax
   21626:	00 
   21627:	48 89 84 24 d8 06 00 	mov    %rax,0x6d8(%rsp)
   2162e:	00 
   2162f:	e9 f7 fe ff ff       	jmpq   2152b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2a8b>
   21634:	66 83 f8 13          	cmp    $0x13,%ax
   21638:	0f 84 f8 00 00 00    	je     21736 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2c96>
   2163e:	66 83 f8 55          	cmp    $0x55,%ax
   21642:	0f 85 e3 fe ff ff    	jne    2152b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2a8b>
   21648:	48 8d bc 24 f0 03 00 	lea    0x3f0(%rsp),%rdi
   2164f:	00 
   21650:	48 8d b4 24 10 01 00 	lea    0x110(%rsp),%rsi
   21657:	00 
   21658:	e8 b3 a3 fe ff       	callq  ba10 <gimli::read::unit::Attribute<R>::value>
   2165d:	48 8b 84 24 f0 03 00 	mov    0x3f0(%rsp),%rax
   21664:	00 
   21665:	48 8b 8c 24 f8 03 00 	mov    0x3f8(%rsp),%rcx
   2166c:	00 
   2166d:	48 89 8c 24 00 01 00 	mov    %rcx,0x100(%rsp)
   21674:	00 
   21675:	48 83 f8 16          	cmp    $0x16,%rax
   21679:	0f 84 44 01 00 00    	je     217c3 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2d23>
   2167f:	48 83 f8 18          	cmp    $0x18,%rax
   21683:	0f 85 08 01 00 00    	jne    21791 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2cf1>
   21689:	48 8b 84 24 48 0b 00 	mov    0xb48(%rsp),%rax
   21690:	00 
   21691:	48 8b 8c 24 e0 00 00 	mov    0xe0(%rsp),%rcx
   21698:	00 
   21699:	48 29 c1             	sub    %rax,%rcx
   2169c:	0f 82 96 20 00 00    	jb     23738 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c98>
   216a2:	0f b6 9c 24 d1 0a 00 	movzbl 0xad1(%rsp),%ebx
   216a9:	00 
   216aa:	31 d2                	xor    %edx,%edx
   216ac:	80 fb 08             	cmp    $0x8,%bl
   216af:	0f 94 c2             	sete   %dl
   216b2:	48 8d 14 95 04 00 00 	lea    0x4(,%rdx,4),%rdx
   216b9:	00 
   216ba:	48 0f af 94 24 00 01 	imul   0x100(%rsp),%rdx
   216c1:	00 00 
   216c3:	48 29 d1             	sub    %rdx,%rcx
   216c6:	0f 82 6c 20 00 00    	jb     23738 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c98>
   216cc:	48 8b 74 24 78       	mov    0x78(%rsp),%rsi
   216d1:	48 01 c6             	add    %rax,%rsi
   216d4:	80 fb 08             	cmp    $0x8,%bl
   216d7:	0f 85 c9 00 00 00    	jne    217a6 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2d06>
   216dd:	48 83 f9 07          	cmp    $0x7,%rcx
   216e1:	0f 86 51 20 00 00    	jbe    23738 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c98>
   216e7:	48 8b 0c 16          	mov    (%rsi,%rdx,1),%rcx
   216eb:	e9 c3 00 00 00       	jmpq   217b3 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2d13>
   216f0:	48 8d bc 24 f0 03 00 	lea    0x3f0(%rsp),%rdi
   216f7:	00 
   216f8:	48 8d b4 24 10 01 00 	lea    0x110(%rsp),%rsi
   216ff:	00 
   21700:	e8 0b a3 fe ff       	callq  ba10 <gimli::read::unit::Attribute<R>::value>
   21705:	48 83 bc 24 f0 03 00 	cmpq   $0x0,0x3f0(%rsp)
   2170c:	00 00 
   2170e:	0f 85 17 fe ff ff    	jne    2152b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2a8b>
   21714:	b8 01 00 00 00       	mov    $0x1,%eax
   21719:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   21720:	00 
   21721:	48 8b 84 24 f8 03 00 	mov    0x3f8(%rsp),%rax
   21728:	00 
   21729:	48 89 84 24 e0 03 00 	mov    %rax,0x3e0(%rsp)
   21730:	00 
   21731:	e9 f5 fd ff ff       	jmpq   2152b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2a8b>
   21736:	48 8d bc 24 f0 03 00 	lea    0x3f0(%rsp),%rdi
   2173d:	00 
   2173e:	48 8d b4 24 10 01 00 	lea    0x110(%rsp),%rsi
   21745:	00 
   21746:	e8 c5 a2 fe ff       	callq  ba10 <gimli::read::unit::Attribute<R>::value>
   2174b:	48 8b 84 24 f0 03 00 	mov    0x3f0(%rsp),%rax
   21752:	00 
   21753:	48 83 f8 26          	cmp    $0x26,%rax
   21757:	0f 85 c2 fd ff ff    	jne    2151f <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2a7f>
   2175d:	0f b7 8c 24 f8 03 00 	movzwl 0x3f8(%rsp),%ecx
   21764:	00 
   21765:	66 89 8c 24 7e 01 00 	mov    %cx,0x17e(%rsp)
   2176c:	00 
   2176d:	e9 ad fd ff ff       	jmpq   2151f <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2a7f>
   21772:	b8 01 00 00 00       	mov    $0x1,%eax
   21777:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   2177c:	48 8b 84 24 f8 03 00 	mov    0x3f8(%rsp),%rax
   21783:	00 
   21784:	48 89 84 24 d0 06 00 	mov    %rax,0x6d0(%rsp)
   2178b:	00 
   2178c:	e9 9a fd ff ff       	jmpq   2152b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2a8b>
   21791:	45 31 f6             	xor    %r14d,%r14d
   21794:	48 8b 84 24 e0 06 00 	mov    0x6e0(%rsp),%rax
   2179b:	00 
   2179c:	48 89 84 24 00 01 00 	mov    %rax,0x100(%rsp)
   217a3:	00 
   217a4:	eb 23                	jmp    217c9 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2d29>
   217a6:	48 83 f9 04          	cmp    $0x4,%rcx
   217aa:	0f 82 88 1f 00 00    	jb     23738 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c98>
   217b0:	8b 0c 16             	mov    (%rsi,%rdx,1),%ecx
   217b3:	48 89 8c 24 00 01 00 	mov    %rcx,0x100(%rsp)
   217ba:	00 
   217bb:	48 01 84 24 00 01 00 	add    %rax,0x100(%rsp)
   217c2:	00 
   217c3:	41 be 01 00 00 00    	mov    $0x1,%r14d
   217c9:	48 8b 84 24 00 01 00 	mov    0x100(%rsp),%rax
   217d0:	00 
   217d1:	48 89 84 24 e0 06 00 	mov    %rax,0x6e0(%rsp)
   217d8:	00 
   217d9:	e9 4d fd ff ff       	jmpq   2152b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2a8b>
   217de:	31 c0                	xor    %eax,%eax
   217e0:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   217e7:	00 
   217e8:	31 c0                	xor    %eax,%eax
   217ea:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   217ef:	31 c0                	xor    %eax,%eax
   217f1:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   217f6:	45 31 f6             	xor    %r14d,%r14d
   217f9:	45 31 ff             	xor    %r15d,%r15d
   217fc:	48 8d 84 24 58 03 00 	lea    0x358(%rsp),%rax
   21803:	00 
   21804:	48 89 84 24 f0 02 00 	mov    %rax,0x2f0(%rsp)
   2180b:	00 
   2180c:	48 8d 84 24 e8 06 00 	lea    0x6e8(%rsp),%rax
   21813:	00 
   21814:	48 89 84 24 f8 02 00 	mov    %rax,0x2f8(%rsp)
   2181b:	00 
   2181c:	c6 84 24 00 02 00 00 	movb   $0x0,0x200(%rsp)
   21823:	00 
   21824:	48 8d 84 24 f0 02 00 	lea    0x2f0(%rsp),%rax
   2182b:	00 
   2182c:	48 89 84 24 50 02 00 	mov    %rax,0x250(%rsp)
   21833:	00 
   21834:	48 8d 84 24 00 02 00 	lea    0x200(%rsp),%rax
   2183b:	00 
   2183c:	48 89 84 24 58 02 00 	mov    %rax,0x258(%rsp)
   21843:	00 
   21844:	49 83 fe 01          	cmp    $0x1,%r14
   21848:	0f 85 ef 00 00 00    	jne    2193d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2e9d>
   2184e:	8b 84 24 d0 0a 00 00 	mov    0xad0(%rsp),%eax
   21855:	89 c2                	mov    %eax,%edx
   21857:	c1 ea 10             	shr    $0x10,%edx
   2185a:	66 83 fa 05          	cmp    $0x5,%dx
   2185e:	48 8d 8c 24 b8 07 00 	lea    0x7b8(%rsp),%rcx
   21865:	00 
   21866:	48 8d b4 24 a8 07 00 	lea    0x7a8(%rsp),%rsi
   2186d:	00 
   2186e:	48 0f 42 ce          	cmovb  %rsi,%rcx
   21872:	48 8b 09             	mov    (%rcx),%rcx
   21875:	48 2b 8c 24 00 01 00 	sub    0x100(%rsp),%rcx
   2187c:	00 
   2187d:	0f 82 b5 1e 00 00    	jb     23738 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c98>
   21883:	66 83 fa 05          	cmp    $0x5,%dx
   21887:	48 8d 94 24 b0 07 00 	lea    0x7b0(%rsp),%rdx
   2188e:	00 
   2188f:	48 8d b4 24 a0 07 00 	lea    0x7a0(%rsp),%rsi
   21896:	00 
   21897:	48 0f 42 d6          	cmovb  %rsi,%rdx
   2189b:	48 8b b4 24 28 0b 00 	mov    0xb28(%rsp),%rsi
   218a2:	00 
   218a3:	48 8b bc 24 38 0b 00 	mov    0xb38(%rsp),%rdi
   218aa:	00 
   218ab:	48 8b 12             	mov    (%rdx),%rdx
   218ae:	48 03 94 24 00 01 00 	add    0x100(%rsp),%rdx
   218b5:	00 
   218b6:	f3 0f 6f 84 24 00 07 	movdqu 0x700(%rsp),%xmm0
   218bd:	00 00 
   218bf:	48 89 8c 24 f8 03 00 	mov    %rcx,0x3f8(%rsp)
   218c6:	00 
   218c7:	48 89 94 24 f0 03 00 	mov    %rdx,0x3f0(%rsp)
   218ce:	00 
   218cf:	89 84 24 00 04 00 00 	mov    %eax,0x400(%rsp)
   218d6:	48 89 b4 24 08 04 00 	mov    %rsi,0x408(%rsp)
   218dd:	00 
   218de:	f3 0f 7f 84 24 10 04 	movdqu %xmm0,0x410(%rsp)
   218e5:	00 00 
   218e7:	48 89 bc 24 20 04 00 	mov    %rdi,0x420(%rsp)
   218ee:	00 
   218ef:	48 8d bc 24 10 01 00 	lea    0x110(%rsp),%rdi
   218f6:	00 
   218f7:	48 8d b4 24 f0 03 00 	lea    0x3f0(%rsp),%rsi
   218fe:	00 
   218ff:	e8 4c ab fe ff       	callq  c450 <gimli::read::rnglists::RngListIter<R>::next>
   21904:	48 83 bc 24 10 01 00 	cmpq   $0x1,0x110(%rsp)
   2190b:	00 01 
   2190d:	0f 84 25 1e 00 00    	je     23738 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c98>
   21913:	48 83 bc 24 18 01 00 	cmpq   $0x1,0x118(%rsp)
   2191a:	00 01 
   2191c:	75 7a                	jne    21998 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2ef8>
   2191e:	48 8b b4 24 20 01 00 	mov    0x120(%rsp),%rsi
   21925:	00 
   21926:	48 8b 94 24 28 01 00 	mov    0x128(%rsp),%rdx
   2192d:	00 
   2192e:	48 8d bc 24 50 02 00 	lea    0x250(%rsp),%rdi
   21935:	00 
   21936:	e8 c5 0f ff ff       	callq  12900 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}>
   2193b:	eb b2                	jmp    218ef <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2e4f>
   2193d:	48 83 bc 24 80 00 00 	cmpq   $0x1,0x80(%rsp)
   21944:	00 01 
   21946:	75 50                	jne    21998 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2ef8>
   21948:	48 83 7c 24 18 01    	cmpq   $0x1,0x18(%rsp)
   2194e:	75 1f                	jne    2196f <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2ecf>
   21950:	48 8d bc 24 50 02 00 	lea    0x250(%rsp),%rdi
   21957:	00 
   21958:	48 8b b4 24 e0 03 00 	mov    0x3e0(%rsp),%rsi
   2195f:	00 
   21960:	48 8b 94 24 d8 06 00 	mov    0x6d8(%rsp),%rdx
   21967:	00 
   21968:	e8 93 0f ff ff       	callq  12900 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}>
   2196d:	eb 29                	jmp    21998 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2ef8>
   2196f:	48 83 7c 24 20 01    	cmpq   $0x1,0x20(%rsp)
   21975:	75 21                	jne    21998 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2ef8>
   21977:	48 8b 84 24 d0 06 00 	mov    0x6d0(%rsp),%rax
   2197e:	00 
   2197f:	48 8b b4 24 e0 03 00 	mov    0x3e0(%rsp),%rsi
   21986:	00 
   21987:	48 8d 14 30          	lea    (%rax,%rsi,1),%rdx
   2198b:	48 8d bc 24 50 02 00 	lea    0x250(%rsp),%rdi
   21992:	00 
   21993:	e8 68 0f ff ff       	callq  12900 <addr2line::RangeAttributes<R>::for_each_range::{{closure}}>
   21998:	48 8b 84 24 a0 01 00 	mov    0x1a0(%rsp),%rax
   2199f:	00 
   219a0:	48 89 84 24 f0 03 00 	mov    %rax,0x3f0(%rsp)
   219a7:	00 
   219a8:	ba a8 01 00 00       	mov    $0x1a8,%edx
   219ad:	48 8d bc 24 f8 03 00 	lea    0x3f8(%rsp),%rdi
   219b4:	00 
   219b5:	48 8d b4 24 a0 0a 00 	lea    0xaa0(%rsp),%rsi
   219bc:	00 
   219bd:	ff 15 3d 43 02 00    	callq  *0x2433d(%rip)        # 45d00 <memcpy@GLIBC_2.14>
   219c3:	66 44 89 bc 24 f0 05 	mov    %r15w,0x5f0(%rsp)
   219ca:	00 00 
   219cc:	0f b7 84 24 7e 01 00 	movzwl 0x17e(%rsp),%eax
   219d3:	00 
   219d4:	66 89 84 24 f2 05 00 	mov    %ax,0x5f2(%rsp)
   219db:	00 
   219dc:	48 c7 84 24 a0 05 00 	movq   $0x2,0x5a0(%rsp)
   219e3:	00 02 00 00 00 
   219e8:	48 c7 84 24 c8 05 00 	movq   $0x2,0x5c8(%rsp)
   219ef:	00 02 00 00 00 
   219f4:	48 8b ac 24 d0 02 00 	mov    0x2d0(%rsp),%rbp
   219fb:	00 
   219fc:	48 3b ac 24 c8 02 00 	cmp    0x2c8(%rsp),%rbp
   21a03:	00 
   21a04:	75 75                	jne    21a7b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2fdb>
   21a06:	48 89 e8             	mov    %rbp,%rax
   21a09:	48 ff c0             	inc    %rax
   21a0c:	0f 84 63 21 00 00    	je     23b75 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50d5>
   21a12:	48 89 e9             	mov    %rbp,%rcx
   21a15:	48 01 e9             	add    %rbp,%rcx
   21a18:	48 39 c1             	cmp    %rax,%rcx
   21a1b:	48 0f 47 c1          	cmova  %rcx,%rax
   21a1f:	48 83 f8 04          	cmp    $0x4,%rax
   21a23:	b9 04 00 00 00       	mov    $0x4,%ecx
   21a28:	48 0f 46 c1          	cmovbe %rcx,%rax
   21a2c:	31 c9                	xor    %ecx,%ecx
   21a2e:	ba 08 02 00 00       	mov    $0x208,%edx
   21a33:	48 f7 e2             	mul    %rdx
   21a36:	48 89 c3             	mov    %rax,%rbx
   21a39:	0f 90 c0             	seto   %al
   21a3c:	0f 91 c1             	setno  %cl
   21a3f:	48 c1 e1 03          	shl    $0x3,%rcx
   21a43:	48 85 ed             	test   %rbp,%rbp
   21a46:	74 3d                	je     21a85 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2fe5>
   21a48:	84 c0                	test   %al,%al
   21a4a:	0f 85 25 21 00 00    	jne    23b75 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50d5>
   21a50:	48 8b bc 24 c0 02 00 	mov    0x2c0(%rsp),%rdi
   21a57:	00 
   21a58:	48 85 ff             	test   %rdi,%rdi
   21a5b:	74 30                	je     21a8d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2fed>
   21a5d:	48 89 e8             	mov    %rbp,%rax
   21a60:	48 c1 e0 09          	shl    $0x9,%rax
   21a64:	48 8d 34 e8          	lea    (%rax,%rbp,8),%rsi
   21a68:	48 85 f6             	test   %rsi,%rsi
   21a6b:	74 20                	je     21a8d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2fed>
   21a6d:	48 89 ca             	mov    %rcx,%rdx
   21a70:	48 89 d9             	mov    %rbx,%rcx
   21a73:	ff 15 ff 44 02 00    	callq  *0x244ff(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
   21a79:	eb 23                	jmp    21a9e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x2ffe>
   21a7b:	48 8b 8c 24 c0 02 00 	mov    0x2c0(%rsp),%rcx
   21a82:	00 
   21a83:	eb 49                	jmp    21ace <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x302e>
   21a85:	84 c0                	test   %al,%al
   21a87:	0f 85 e8 20 00 00    	jne    23b75 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50d5>
   21a8d:	48 85 db             	test   %rbx,%rbx
   21a90:	74 0f                	je     21aa1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3001>
   21a92:	48 89 df             	mov    %rbx,%rdi
   21a95:	48 89 ce             	mov    %rcx,%rsi
   21a98:	ff 15 ea 40 02 00    	callq  *0x240ea(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   21a9e:	48 89 c1             	mov    %rax,%rcx
   21aa1:	48 85 c9             	test   %rcx,%rcx
   21aa4:	0f 84 d3 20 00 00    	je     23b7d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50dd>
   21aaa:	48 89 8c 24 c0 02 00 	mov    %rcx,0x2c0(%rsp)
   21ab1:	00 
   21ab2:	48 89 d8             	mov    %rbx,%rax
   21ab5:	48 ba c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rdx
   21abc:	fc c0 0f 
   21abf:	48 f7 e2             	mul    %rdx
   21ac2:	48 c1 ea 05          	shr    $0x5,%rdx
   21ac6:	48 89 94 24 c8 02 00 	mov    %rdx,0x2c8(%rsp)
   21acd:	00 
   21ace:	48 89 e8             	mov    %rbp,%rax
   21ad1:	48 c1 e0 09          	shl    $0x9,%rax
   21ad5:	48 8d 3c e8          	lea    (%rax,%rbp,8),%rdi
   21ad9:	48 01 cf             	add    %rcx,%rdi
   21adc:	ba 08 02 00 00       	mov    $0x208,%edx
   21ae1:	48 8d b4 24 f0 03 00 	lea    0x3f0(%rsp),%rsi
   21ae8:	00 
   21ae9:	ff 15 11 42 02 00    	callq  *0x24211(%rip)        # 45d00 <memcpy@GLIBC_2.14>
   21aef:	48 83 c5 01          	add    $0x1,%rbp
   21af3:	48 89 ac 24 d0 02 00 	mov    %rbp,0x2d0(%rsp)
   21afa:	00 
   21afb:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
   21b00:	4d 85 ff             	test   %r15,%r15
   21b03:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   21b08:	48 8b 6c 24 40       	mov    0x40(%rsp),%rbp
   21b0d:	0f 85 c3 dc ff ff    	jne    1f7d6 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0xd36>
   21b13:	e9 fe 10 00 00       	jmpq   22c16 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4176>
   21b18:	c6 84 24 b8 02 00 00 	movb   $0x1,0x2b8(%rsp)
   21b1f:	01 
   21b20:	48 85 c0             	test   %rax,%rax
   21b23:	0f 84 21 f2 ff ff    	je     20d4a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x22aa>
   21b29:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   21b2e:	48 83 c1 01          	add    $0x1,%rcx
   21b32:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   21b37:	48 89 c2             	mov    %rax,%rdx
   21b3a:	48 83 c2 ff          	add    $0xffffffffffffffff,%rdx
   21b3e:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   21b43:	0f 84 b3 00 00 00    	je     21bfc <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x315c>
   21b49:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   21b4e:	8a 0a                	mov    (%rdx),%cl
   21b50:	48 83 c2 02          	add    $0x2,%rdx
   21b54:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   21b59:	48 89 c6             	mov    %rax,%rsi
   21b5c:	48 83 c6 fe          	add    $0xfffffffffffffffe,%rsi
   21b60:	48 89 74 24 38       	mov    %rsi,0x38(%rsp)
   21b65:	0f 84 9b 00 00 00    	je     21c06 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3166>
   21b6b:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   21b70:	8a 57 01             	mov    0x1(%rdi),%dl
   21b73:	88 94 24 48 03 00 00 	mov    %dl,0x348(%rsp)
   21b7a:	48 8d 57 03          	lea    0x3(%rdi),%rdx
   21b7e:	48 8d 70 fd          	lea    -0x3(%rax),%rsi
   21b82:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   21b87:	48 89 74 24 38       	mov    %rsi,0x38(%rsp)
   21b8c:	8a 5f 02             	mov    0x2(%rdi),%bl
   21b8f:	88 9c 24 40 03 00 00 	mov    %bl,0x340(%rsp)
   21b96:	84 db                	test   %bl,%bl
   21b98:	74 76                	je     21c10 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3170>
   21b9a:	84 c9                	test   %cl,%cl
   21b9c:	0f 95 84 24 c0 01 00 	setne  0x1c0(%rsp)
   21ba3:	00 
   21ba4:	48 85 f6             	test   %rsi,%rsi
   21ba7:	74 5d                	je     21c06 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3166>
   21ba9:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   21bae:	48 8d 56 04          	lea    0x4(%rsi),%rdx
   21bb2:	48 8d 48 fc          	lea    -0x4(%rax),%rcx
   21bb6:	48 89 94 24 c8 01 00 	mov    %rdx,0x1c8(%rsp)
   21bbd:	00 
   21bbe:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   21bc3:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   21bc8:	8a 56 03             	mov    0x3(%rsi),%dl
   21bcb:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   21bd0:	84 d2                	test   %dl,%dl
   21bd2:	74 46                	je     21c1a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x317a>
   21bd4:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   21bd9:	83 c2 ff             	add    $0xffffffff,%edx
   21bdc:	0f b6 f2             	movzbl %dl,%esi
   21bdf:	48 89 f2             	mov    %rsi,%rdx
   21be2:	48 89 b4 24 e8 03 00 	mov    %rsi,0x3e8(%rsp)
   21be9:	00 
   21bea:	48 29 f1             	sub    %rsi,%rcx
   21bed:	73 35                	jae    21c24 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3184>
   21bef:	48 8b 84 24 c8 01 00 	mov    0x1c8(%rsp),%rax
   21bf6:	00 
   21bf7:	e9 a3 ee ff ff       	jmpq   20a9f <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x1fff>
   21bfc:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   21c01:	e9 44 f1 ff ff       	jmpq   20d4a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x22aa>
   21c06:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   21c0b:	e9 3a f1 ff ff       	jmpq   20d4a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x22aa>
   21c10:	b8 1c 00 00 00       	mov    $0x1c,%eax
   21c15:	e9 2b f1 ff ff       	jmpq   20d45 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x22a5>
   21c1a:	b8 1d 00 00 00       	mov    $0x1d,%eax
   21c1f:	e9 21 f1 ff ff       	jmpq   20d45 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x22a5>
   21c24:	48 8b 94 24 c8 01 00 	mov    0x1c8(%rsp),%rdx
   21c2b:	00 
   21c2c:	48 8b b4 24 e8 03 00 	mov    0x3e8(%rsp),%rsi
   21c33:	00 
   21c34:	48 8d 3c 32          	lea    (%rdx,%rsi,1),%rdi
   21c38:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
   21c3d:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   21c42:	48 c7 84 24 88 01 00 	movq   $0x8,0x188(%rsp)
   21c49:	00 08 00 00 00 
   21c4e:	66 0f ef c0          	pxor   %xmm0,%xmm0
   21c52:	48 8d 94 24 90 01 00 	lea    0x190(%rsp),%rdx
   21c59:	00 
   21c5a:	f3 0f 7f 02          	movdqu %xmm0,(%rdx)
   21c5e:	66 83 7c 24 18 05    	cmpw   $0x5,0x18(%rsp)
   21c64:	0f 83 28 01 00 00    	jae    21d92 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x32f2>
   21c6a:	48 c7 84 24 a0 03 00 	movq   $0x2,0x3a0(%rsp)
   21c71:	00 02 00 00 00 
   21c76:	66 0f ef c0          	pxor   %xmm0,%xmm0
   21c7a:	48 8d 94 24 a8 03 00 	lea    0x3a8(%rsp),%rdx
   21c81:	00 
   21c82:	f3 0f 7f 02          	movdqu %xmm0,(%rdx)
   21c86:	ba 13 00 00 00       	mov    $0x13,%edx
   21c8b:	48 89 54 24 48       	mov    %rdx,0x48(%rsp)
   21c90:	48 85 c9             	test   %rcx,%rcx
   21c93:	0f 84 00 02 00 00    	je     21e99 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x33f9>
   21c99:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   21c9e:	48 01 c6             	add    %rax,%rsi
   21ca1:	b8 08 00 00 00       	mov    $0x8,%eax
   21ca6:	31 d2                	xor    %edx,%edx
   21ca8:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   21cad:	48 2b 74 24 08       	sub    0x8(%rsp),%rsi
   21cb2:	31 db                	xor    %ebx,%ebx
   21cb4:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   21cb9:	80 3c 1f 00          	cmpb   $0x0,(%rdi,%rbx,1)
   21cbd:	74 0e                	je     21ccd <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x322d>
   21cbf:	48 83 c3 01          	add    $0x1,%rbx
   21cc3:	48 39 de             	cmp    %rbx,%rsi
   21cc6:	75 ec                	jne    21cb4 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3214>
   21cc8:	e9 09 02 00 00       	jmpq   21ed6 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3436>
   21ccd:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   21cd2:	48 01 de             	add    %rbx,%rsi
   21cd5:	48 89 74 24 30       	mov    %rsi,0x30(%rsp)
   21cda:	48 89 cf             	mov    %rcx,%rdi
   21cdd:	48 29 df             	sub    %rbx,%rdi
   21ce0:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
   21ce5:	0f 84 e8 04 00 00    	je     221d3 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3733>
   21ceb:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   21cf0:	48 01 de             	add    %rbx,%rsi
   21cf3:	48 83 c6 01          	add    $0x1,%rsi
   21cf7:	48 89 df             	mov    %rbx,%rdi
   21cfa:	48 f7 d7             	not    %rdi
   21cfd:	48 01 cf             	add    %rcx,%rdi
   21d00:	48 89 74 24 30       	mov    %rsi,0x30(%rsp)
   21d05:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
   21d0a:	48 85 db             	test   %rbx,%rbx
   21d0d:	0f 84 23 04 00 00    	je     22136 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3696>
   21d13:	48 3b 94 24 90 01 00 	cmp    0x190(%rsp),%rdx
   21d1a:	00 
   21d1b:	75 22                	jne    21d3f <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x329f>
   21d1d:	be 01 00 00 00       	mov    $0x1,%esi
   21d22:	48 8d bc 24 88 01 00 	lea    0x188(%rsp),%rdi
   21d29:	00 
   21d2a:	e8 b1 79 fe ff       	callq  96e0 <alloc::vec::Vec<T>::reserve>
   21d2f:	48 8b 84 24 88 01 00 	mov    0x188(%rsp),%rax
   21d36:	00 
   21d37:	48 8b 94 24 98 01 00 	mov    0x198(%rsp),%rdx
   21d3e:	00 
   21d3f:	48 8d 0c 52          	lea    (%rdx,%rdx,2),%rcx
   21d43:	48 c7 04 c8 1f 00 00 	movq   $0x1f,(%rax,%rcx,8)
   21d4a:	00 
   21d4b:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   21d50:	48 89 54 c8 08       	mov    %rdx,0x8(%rax,%rcx,8)
   21d55:	48 89 5c c8 10       	mov    %rbx,0x10(%rax,%rcx,8)
   21d5a:	48 8b 94 24 98 01 00 	mov    0x198(%rsp),%rdx
   21d61:	00 
   21d62:	48 83 c2 01          	add    $0x1,%rdx
   21d66:	48 89 94 24 98 01 00 	mov    %rdx,0x198(%rsp)
   21d6d:	00 
   21d6e:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   21d73:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
   21d78:	48 89 fe             	mov    %rdi,%rsi
   21d7b:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   21d80:	48 8d 34 0f          	lea    (%rdi,%rcx,1),%rsi
   21d84:	48 85 c9             	test   %rcx,%rcx
   21d87:	0f 85 20 ff ff ff    	jne    21cad <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x320d>
   21d8d:	e9 44 01 00 00       	jmpq   21ed6 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3436>
   21d92:	48 8d bc 24 10 01 00 	lea    0x110(%rsp),%rdi
   21d99:	00 
   21d9a:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
   21d9f:	e8 6c 7b fe ff       	callq  9910 <gimli::read::line::FileEntryFormat::parse>
   21da4:	48 8b 84 24 20 01 00 	mov    0x120(%rsp),%rax
   21dab:	00 
   21dac:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   21db1:	48 8b 84 24 18 01 00 	mov    0x118(%rsp),%rax
   21db8:	00 
   21db9:	48 89 84 24 a0 00 00 	mov    %rax,0xa0(%rsp)
   21dc0:	00 
   21dc1:	48 83 bc 24 10 01 00 	cmpq   $0x1,0x110(%rsp)
   21dc8:	00 01 
   21dca:	75 26                	jne    21df2 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3352>
   21dcc:	40 b5 01             	mov    $0x1,%bpl
   21dcf:	48 8b 84 24 a0 00 00 	mov    0xa0(%rsp),%rax
   21dd6:	00 
   21dd7:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   21ddc:	48 8b 84 24 90 01 00 	mov    0x190(%rsp),%rax
   21de3:	00 
   21de4:	48 85 c0             	test   %rax,%rax
   21de7:	0f 85 f8 00 00 00    	jne    21ee5 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3445>
   21ded:	e9 18 01 00 00       	jmpq   21f0a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x346a>
   21df2:	48 8b 8c 24 28 01 00 	mov    0x128(%rsp),%rcx
   21df9:	00 
   21dfa:	48 8b 84 24 a0 00 00 	mov    0xa0(%rsp),%rax
   21e01:	00 
   21e02:	48 89 84 24 a0 03 00 	mov    %rax,0x3a0(%rsp)
   21e09:	00 
   21e0a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   21e0f:	48 89 84 24 a8 03 00 	mov    %rax,0x3a8(%rsp)
   21e16:	00 
   21e17:	48 89 8c 24 70 01 00 	mov    %rcx,0x170(%rsp)
   21e1e:	00 
   21e1f:	48 89 8c 24 b0 03 00 	mov    %rcx,0x3b0(%rsp)
   21e26:	00 
   21e27:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   21e2c:	48 85 c0             	test   %rax,%rax
   21e2f:	74 7e                	je     21eaf <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x340f>
   21e31:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
   21e36:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
   21e3a:	31 c9                	xor    %ecx,%ecx
   21e3c:	48 89 8c 24 b8 01 00 	mov    %rcx,0x1b8(%rsp)
   21e43:	00 
   21e44:	31 c9                	xor    %ecx,%ecx
   21e46:	48 8d 7a 01          	lea    0x1(%rdx),%rdi
   21e4a:	48 89 fe             	mov    %rdi,%rsi
   21e4d:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   21e52:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
   21e57:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   21e5c:	0f b6 12             	movzbl (%rdx),%edx
   21e5f:	83 f9 3f             	cmp    $0x3f,%ecx
   21e62:	75 05                	jne    21e69 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x33c9>
   21e64:	80 fa 01             	cmp    $0x1,%dl
   21e67:	77 5c                	ja     21ec5 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3425>
   21e69:	0f b6 d2             	movzbl %dl,%edx
   21e6c:	89 d6                	mov    %edx,%esi
   21e6e:	83 e6 7f             	and    $0x7f,%esi
   21e71:	48 d3 e6             	shl    %cl,%rsi
   21e74:	48 09 b4 24 b8 01 00 	or     %rsi,0x1b8(%rsp)
   21e7b:	00 
   21e7c:	84 d2                	test   %dl,%dl
   21e7e:	0f 89 c9 00 00 00    	jns    21f4d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x34ad>
   21e84:	83 c1 07             	add    $0x7,%ecx
   21e87:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   21e8c:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
   21e90:	72 b4                	jb     21e46 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x33a6>
   21e92:	b8 13 00 00 00       	mov    $0x13,%eax
   21e97:	eb 38                	jmp    21ed1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3431>
   21e99:	31 ed                	xor    %ebp,%ebp
   21e9b:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   21ea0:	48 8b 84 24 90 01 00 	mov    0x190(%rsp),%rax
   21ea7:	00 
   21ea8:	48 85 c0             	test   %rax,%rax
   21eab:	75 38                	jne    21ee5 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3445>
   21ead:	eb 5b                	jmp    21f0a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x346a>
   21eaf:	b8 13 00 00 00       	mov    $0x13,%eax
   21eb4:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   21eb9:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   21ebe:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   21ec3:	eb 11                	jmp    21ed6 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3436>
   21ec5:	31 c0                	xor    %eax,%eax
   21ec7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   21ecc:	b8 06 00 00 00       	mov    $0x6,%eax
   21ed1:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   21ed6:	31 ed                	xor    %ebp,%ebp
   21ed8:	48 8b 84 24 90 01 00 	mov    0x190(%rsp),%rax
   21edf:	00 
   21ee0:	48 85 c0             	test   %rax,%rax
   21ee3:	74 25                	je     21f0a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x346a>
   21ee5:	48 8b bc 24 88 01 00 	mov    0x188(%rsp),%rdi
   21eec:	00 
   21eed:	48 85 ff             	test   %rdi,%rdi
   21ef0:	74 18                	je     21f0a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x346a>
   21ef2:	48 c1 e0 03          	shl    $0x3,%rax
   21ef6:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
   21efa:	48 85 f6             	test   %rsi,%rsi
   21efd:	74 0b                	je     21f0a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x346a>
   21eff:	ba 08 00 00 00       	mov    $0x8,%edx
   21f04:	ff 15 f6 3c 02 00    	callq  *0x23cf6(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   21f0a:	40 84 ed             	test   %bpl,%bpl
   21f0d:	75 2e                	jne    21f3d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x349d>
   21f0f:	48 8b b4 24 a8 03 00 	mov    0x3a8(%rsp),%rsi
   21f16:	00 
   21f17:	48 85 f6             	test   %rsi,%rsi
   21f1a:	74 21                	je     21f3d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x349d>
   21f1c:	48 8b bc 24 a0 03 00 	mov    0x3a0(%rsp),%rdi
   21f23:	00 
   21f24:	48 85 ff             	test   %rdi,%rdi
   21f27:	74 14                	je     21f3d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x349d>
   21f29:	48 c1 e6 02          	shl    $0x2,%rsi
   21f2d:	48 85 f6             	test   %rsi,%rsi
   21f30:	74 0b                	je     21f3d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x349d>
   21f32:	ba 02 00 00 00       	mov    $0x2,%edx
   21f37:	ff 15 c3 3c 02 00    	callq  *0x23cc3(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   21f3d:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   21f42:	48 25 00 ff ff ff    	and    $0xffffffffffffff00,%rax
   21f48:	e9 ff ed ff ff       	jmpq   20d4c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x22ac>
   21f4d:	48 83 bc 24 b8 01 00 	cmpq   $0x0,0x1b8(%rsp)
   21f54:	00 00 
   21f56:	0f 84 d7 01 00 00    	je     22133 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3693>
   21f5c:	48 83 bc 24 70 01 00 	cmpq   $0x0,0x170(%rsp)
   21f63:	00 00 
   21f65:	0f 84 22 1c 00 00    	je     23b8d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50ed>
   21f6b:	89 e8                	mov    %ebp,%eax
   21f6d:	c1 e0 10             	shl    $0x10,%eax
   21f70:	0f b6 8c 24 a8 00 00 	movzbl 0xa8(%rsp),%ecx
   21f77:	00 
   21f78:	c1 e1 08             	shl    $0x8,%ecx
   21f7b:	09 c1                	or     %eax,%ecx
   21f7d:	0f b6 44 24 10       	movzbl 0x10(%rsp),%eax
   21f82:	09 c8                	or     %ecx,%eax
   21f84:	89 84 24 f8 00 00 00 	mov    %eax,0xf8(%rsp)
   21f8b:	48 c1 a4 24 70 01 00 	shlq   $0x2,0x170(%rsp)
   21f92:	00 02 
   21f94:	b8 08 00 00 00       	mov    $0x8,%eax
   21f99:	48 89 84 24 b0 02 00 	mov    %rax,0x2b0(%rsp)
   21fa0:	00 
   21fa1:	31 c0                	xor    %eax,%eax
   21fa3:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   21faa:	00 
   21fab:	31 c0                	xor    %eax,%eax
   21fad:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   21fb4:	00 
   21fb5:	48 83 84 24 b8 00 00 	addq   $0x1,0xb8(%rsp)
   21fbc:	00 01 
   21fbe:	b8 2d 00 00 00       	mov    $0x2d,%eax
   21fc3:	48 89 84 24 b0 00 00 	mov    %rax,0xb0(%rsp)
   21fca:	00 
   21fcb:	45 31 e4             	xor    %r12d,%r12d
   21fce:	48 8b 84 24 a0 00 00 	mov    0xa0(%rsp),%rax
   21fd5:	00 
   21fd6:	42 0f b7 4c 20 02    	movzwl 0x2(%rax,%r12,1),%ecx
   21fdc:	48 8d bc 24 10 01 00 	lea    0x110(%rsp),%rdi
   21fe3:	00 
   21fe4:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
   21fe9:	8b 94 24 f8 00 00 00 	mov    0xf8(%rsp),%edx
   21ff0:	e8 bb 7c fe ff       	callq  9cb0 <gimli::read::line::parse_attribute>
   21ff5:	48 8b 84 24 18 01 00 	mov    0x118(%rsp),%rax
   21ffc:	00 
   21ffd:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   22002:	48 8b 84 24 20 01 00 	mov    0x120(%rsp),%rax
   22009:	00 
   2200a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   2200f:	48 83 bc 24 10 01 00 	cmpq   $0x1,0x110(%rsp)
   22016:	00 01 
   22018:	0f 84 b8 fe ff ff    	je     21ed6 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3436>
   2201e:	48 8b 84 24 a0 00 00 	mov    0xa0(%rsp),%rax
   22025:	00 
   22026:	4c 89 e1             	mov    %r12,%rcx
   22029:	66 42 83 3c 20 01    	cmpw   $0x1,(%rax,%r12,1)
   2202f:	48 0f 44 5c 24 08    	cmove  0x8(%rsp),%rbx
   22035:	48 8b 84 24 80 01 00 	mov    0x180(%rsp),%rax
   2203c:	00 
   2203d:	48 0f 44 84 24 28 01 	cmove  0x128(%rsp),%rax
   22044:	00 00 
   22046:	48 89 84 24 80 01 00 	mov    %rax,0x180(%rsp)
   2204d:	00 
   2204e:	48 8b 84 24 b0 00 00 	mov    0xb0(%rsp),%rax
   22055:	00 
   22056:	48 0f 44 44 24 48    	cmove  0x48(%rsp),%rax
   2205c:	48 89 84 24 b0 00 00 	mov    %rax,0xb0(%rsp)
   22063:	00 
   22064:	48 83 c1 04          	add    $0x4,%rcx
   22068:	49 89 cc             	mov    %rcx,%r12
   2206b:	48 39 8c 24 70 01 00 	cmp    %rcx,0x170(%rsp)
   22072:	00 
   22073:	0f 85 55 ff ff ff    	jne    21fce <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x352e>
   22079:	48 83 bc 24 b0 00 00 	cmpq   $0x2d,0xb0(%rsp)
   22080:	00 2d 
   22082:	0f 84 05 1b 00 00    	je     23b8d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50ed>
   22088:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
   2208f:	00 
   22090:	48 3b 84 24 90 01 00 	cmp    0x190(%rsp),%rax
   22097:	00 
   22098:	75 32                	jne    220cc <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x362c>
   2209a:	be 01 00 00 00       	mov    $0x1,%esi
   2209f:	48 8d bc 24 88 01 00 	lea    0x188(%rsp),%rdi
   220a6:	00 
   220a7:	e8 34 76 fe ff       	callq  96e0 <alloc::vec::Vec<T>::reserve>
   220ac:	48 8b 84 24 88 01 00 	mov    0x188(%rsp),%rax
   220b3:	00 
   220b4:	48 89 84 24 b0 02 00 	mov    %rax,0x2b0(%rsp)
   220bb:	00 
   220bc:	48 8b 84 24 98 01 00 	mov    0x198(%rsp),%rax
   220c3:	00 
   220c4:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   220cb:	00 
   220cc:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
   220d3:	00 
   220d4:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
   220d8:	48 8b 8c 24 b0 02 00 	mov    0x2b0(%rsp),%rcx
   220df:	00 
   220e0:	48 89 5c c1 08       	mov    %rbx,0x8(%rcx,%rax,8)
   220e5:	48 8b 94 24 b0 00 00 	mov    0xb0(%rsp),%rdx
   220ec:	00 
   220ed:	48 89 14 c1          	mov    %rdx,(%rcx,%rax,8)
   220f1:	48 8b 94 24 80 01 00 	mov    0x180(%rsp),%rdx
   220f8:	00 
   220f9:	48 89 54 c1 10       	mov    %rdx,0x10(%rcx,%rax,8)
   220fe:	48 8b 8c 24 98 01 00 	mov    0x198(%rsp),%rcx
   22105:	00 
   22106:	48 83 c1 01          	add    $0x1,%rcx
   2210a:	48 89 c8             	mov    %rcx,%rax
   2210d:	48 89 8c 24 98 00 00 	mov    %rcx,0x98(%rsp)
   22114:	00 
   22115:	48 89 8c 24 98 01 00 	mov    %rcx,0x198(%rsp)
   2211c:	00 
   2211d:	48 8b 84 24 b8 00 00 	mov    0xb8(%rsp),%rax
   22124:	00 
   22125:	48 3b 84 24 b8 01 00 	cmp    0x1b8(%rsp),%rax
   2212c:	00 
   2212d:	0f 85 82 fe ff ff    	jne    21fb5 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3515>
   22133:	45 31 e4             	xor    %r12d,%r12d
   22136:	48 c7 84 24 c0 00 00 	movq   $0x8,0xc0(%rsp)
   2213d:	00 08 00 00 00 
   22142:	66 0f ef c0          	pxor   %xmm0,%xmm0
   22146:	48 8d 84 24 c8 00 00 	lea    0xc8(%rsp),%rax
   2214d:	00 
   2214e:	f3 0f 7f 00          	movdqu %xmm0,(%rax)
   22152:	66 83 7c 24 18 05    	cmpw   $0x5,0x18(%rsp)
   22158:	73 3b                	jae    22195 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x36f5>
   2215a:	48 83 bc 24 e0 00 00 	cmpq   $0x0,0xe0(%rsp)
   22161:	00 00 
   22163:	0f 84 36 01 00 00    	je     2229f <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x37ff>
   22169:	66 0f ef c0          	pxor   %xmm0,%xmm0
   2216d:	66 0f 7f 84 24 20 01 	movdqa %xmm0,0x120(%rsp)
   22174:	00 00 
   22176:	66 0f 7f 84 24 10 01 	movdqa %xmm0,0x110(%rsp)
   2217d:	00 00 
   2217f:	48 c7 84 24 30 01 00 	movq   $0x0,0x130(%rsp)
   22186:	00 00 00 00 00 
   2218b:	bd 1f 00 00 00       	mov    $0x1f,%ebp
   22190:	e9 0f 01 00 00       	jmpq   222a4 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3804>
   22195:	48 8d bc 24 10 01 00 	lea    0x110(%rsp),%rdi
   2219c:	00 
   2219d:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
   221a2:	e8 69 77 fe ff       	callq  9910 <gimli::read::line::FileEntryFormat::parse>
   221a7:	48 8b 84 24 20 01 00 	mov    0x120(%rsp),%rax
   221ae:	00 
   221af:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   221b4:	48 8b 84 24 18 01 00 	mov    0x118(%rsp),%rax
   221bb:	00 
   221bc:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   221c1:	48 83 bc 24 10 01 00 	cmpq   $0x1,0x110(%rsp)
   221c8:	00 01 
   221ca:	75 24                	jne    221f0 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3750>
   221cc:	b3 01                	mov    $0x1,%bl
   221ce:	e9 40 03 00 00       	jmpq   22513 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3a73>
   221d3:	31 ed                	xor    %ebp,%ebp
   221d5:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   221da:	48 8b 84 24 90 01 00 	mov    0x190(%rsp),%rax
   221e1:	00 
   221e2:	48 85 c0             	test   %rax,%rax
   221e5:	0f 85 fa fc ff ff    	jne    21ee5 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3445>
   221eb:	e9 1a fd ff ff       	jmpq   21f0a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x346a>
   221f0:	48 8b 8c 24 28 01 00 	mov    0x128(%rsp),%rcx
   221f7:	00 
   221f8:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   221fd:	48 89 84 24 d8 02 00 	mov    %rax,0x2d8(%rsp)
   22204:	00 
   22205:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   2220a:	48 89 84 24 e0 02 00 	mov    %rax,0x2e0(%rsp)
   22211:	00 
   22212:	48 89 8c 24 80 01 00 	mov    %rcx,0x180(%rsp)
   22219:	00 
   2221a:	48 89 8c 24 e8 02 00 	mov    %rcx,0x2e8(%rsp)
   22221:	00 
   22222:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   22227:	48 85 c0             	test   %rax,%rax
   2222a:	0f 84 ba 02 00 00    	je     224ea <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3a4a>
   22230:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
   22235:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
   22239:	31 c9                	xor    %ecx,%ecx
   2223b:	48 89 8c 24 b0 00 00 	mov    %rcx,0xb0(%rsp)
   22242:	00 
   22243:	31 c9                	xor    %ecx,%ecx
   22245:	48 8d 7a 01          	lea    0x1(%rdx),%rdi
   22249:	48 89 fe             	mov    %rdi,%rsi
   2224c:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   22251:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
   22256:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   2225b:	0f b6 12             	movzbl (%rdx),%edx
   2225e:	83 f9 3f             	cmp    $0x3f,%ecx
   22261:	75 09                	jne    2226c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x37cc>
   22263:	80 fa 01             	cmp    $0x1,%dl
   22266:	0f 87 94 02 00 00    	ja     22500 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3a60>
   2226c:	0f b6 d2             	movzbl %dl,%edx
   2226f:	89 d6                	mov    %edx,%esi
   22271:	83 e6 7f             	and    $0x7f,%esi
   22274:	48 d3 e6             	shl    %cl,%rsi
   22277:	48 09 b4 24 b0 00 00 	or     %rsi,0xb0(%rsp)
   2227e:	00 
   2227f:	84 d2                	test   %dl,%dl
   22281:	0f 89 fe 02 00 00    	jns    22585 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3ae5>
   22287:	83 c1 07             	add    $0x7,%ecx
   2228a:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   2228f:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
   22293:	72 b0                	jb     22245 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x37a5>
   22295:	b8 13 00 00 00       	mov    $0x13,%eax
   2229a:	e9 6d 02 00 00       	jmpq   2250c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3a6c>
   2229f:	bd 2d 00 00 00       	mov    $0x2d,%ebp
   222a4:	48 8b 84 24 30 01 00 	mov    0x130(%rsp),%rax
   222ab:	00 
   222ac:	48 89 84 24 20 02 00 	mov    %rax,0x220(%rsp)
   222b3:	00 
   222b4:	66 0f 6f 84 24 10 01 	movdqa 0x110(%rsp),%xmm0
   222bb:	00 00 
   222bd:	0f 28 8c 24 20 01 00 	movaps 0x120(%rsp),%xmm1
   222c4:	00 
   222c5:	0f 29 8c 24 10 02 00 	movaps %xmm1,0x210(%rsp)
   222cc:	00 
   222cd:	66 0f 7f 84 24 00 02 	movdqa %xmm0,0x200(%rsp)
   222d4:	00 00 
   222d6:	48 c7 84 24 d8 02 00 	movq   $0x2,0x2d8(%rsp)
   222dd:	00 02 00 00 00 
   222e2:	66 0f ef c0          	pxor   %xmm0,%xmm0
   222e6:	48 8d 84 24 e0 02 00 	lea    0x2e0(%rsp),%rax
   222ed:	00 
   222ee:	f3 0f 7f 00          	movdqu %xmm0,(%rax)
   222f2:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   222f7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   222fc:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   22301:	b9 13 00 00 00       	mov    $0x13,%ecx
   22306:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
   2230b:	48 85 c0             	test   %rax,%rax
   2230e:	0f 84 fd 01 00 00    	je     22511 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3a71>
   22314:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   22319:	48 01 c2             	add    %rax,%rdx
   2231c:	b9 08 00 00 00       	mov    $0x8,%ecx
   22321:	48 89 8c 24 a0 00 00 	mov    %rcx,0xa0(%rsp)
   22328:	00 
   22329:	31 db                	xor    %ebx,%ebx
   2232b:	48 2b 54 24 08       	sub    0x8(%rsp),%rdx
   22330:	31 c9                	xor    %ecx,%ecx
   22332:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   22337:	80 3c 0e 00          	cmpb   $0x0,(%rsi,%rcx,1)
   2233b:	74 0e                	je     2234b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x38ab>
   2233d:	48 83 c1 01          	add    $0x1,%rcx
   22341:	48 39 ca             	cmp    %rcx,%rdx
   22344:	75 ec                	jne    22332 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3892>
   22346:	e9 c6 01 00 00       	jmpq   22511 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3a71>
   2234b:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   22350:	48 01 ca             	add    %rcx,%rdx
   22353:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   22358:	48 89 c6             	mov    %rax,%rsi
   2235b:	48 29 ce             	sub    %rcx,%rsi
   2235e:	48 89 74 24 38       	mov    %rsi,0x38(%rsp)
   22363:	0f 84 8d 08 00 00    	je     22bf6 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4156>
   22369:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   2236e:	48 01 ca             	add    %rcx,%rdx
   22371:	48 83 c2 01          	add    $0x1,%rdx
   22375:	48 89 ce             	mov    %rcx,%rsi
   22378:	48 f7 d6             	not    %rsi
   2237b:	48 01 c6             	add    %rax,%rsi
   2237e:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   22383:	48 89 74 24 38       	mov    %rsi,0x38(%rsp)
   22388:	48 85 c9             	test   %rcx,%rcx
   2238b:	0f 84 88 07 00 00    	je     22b19 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4079>
   22391:	48 8d bc 24 10 01 00 	lea    0x110(%rsp),%rdi
   22398:	00 
   22399:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
   2239e:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   223a3:	e8 48 82 fe ff       	callq  a5f0 <gimli::read::line::FileEntry<R,Offset>::parse>
   223a8:	48 8b 84 24 20 01 00 	mov    0x120(%rsp),%rax
   223af:	00 
   223b0:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   223b5:	48 8b 84 24 10 01 00 	mov    0x110(%rsp),%rax
   223bc:	00 
   223bd:	48 8b 8c 24 18 01 00 	mov    0x118(%rsp),%rcx
   223c4:	00 
   223c5:	48 89 8c 24 b0 00 00 	mov    %rcx,0xb0(%rsp)
   223cc:	00 
   223cd:	48 8d 8c 24 30 01 00 	lea    0x130(%rsp),%rcx
   223d4:	00 
   223d5:	f3 0f 6f 41 f8       	movdqu -0x8(%rcx),%xmm0
   223da:	0f 10 49 08          	movups 0x8(%rcx),%xmm1
   223de:	0f 10 51 18          	movups 0x18(%rcx),%xmm2
   223e2:	66 0f 7f 84 24 50 02 	movdqa %xmm0,0x250(%rsp)
   223e9:	00 00 
   223eb:	0f 29 8c 24 60 02 00 	movaps %xmm1,0x260(%rsp)
   223f2:	00 
   223f3:	0f 29 94 24 70 02 00 	movaps %xmm2,0x270(%rsp)
   223fa:	00 
   223fb:	48 83 f8 01          	cmp    $0x1,%rax
   223ff:	0f 84 fd 07 00 00    	je     22c02 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4162>
   22405:	66 0f 6f 84 24 50 02 	movdqa 0x250(%rsp),%xmm0
   2240c:	00 00 
   2240e:	0f 28 8c 24 60 02 00 	movaps 0x260(%rsp),%xmm1
   22415:	00 
   22416:	0f 28 94 24 70 02 00 	movaps 0x270(%rsp),%xmm2
   2241d:	00 
   2241e:	0f 29 94 24 10 03 00 	movaps %xmm2,0x310(%rsp)
   22425:	00 
   22426:	0f 29 8c 24 00 03 00 	movaps %xmm1,0x300(%rsp)
   2242d:	00 
   2242e:	66 0f 7f 84 24 f0 02 	movdqa %xmm0,0x2f0(%rsp)
   22435:	00 00 
   22437:	48 3b 9c 24 c8 00 00 	cmp    0xc8(%rsp),%rbx
   2243e:	00 
   2243f:	75 2a                	jne    2246b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x39cb>
   22441:	be 01 00 00 00       	mov    $0x1,%esi
   22446:	48 8d bc 24 c0 00 00 	lea    0xc0(%rsp),%rdi
   2244d:	00 
   2244e:	e8 6d 73 fe ff       	callq  97c0 <alloc::vec::Vec<T>::reserve>
   22453:	48 8b 84 24 c0 00 00 	mov    0xc0(%rsp),%rax
   2245a:	00 
   2245b:	48 89 84 24 a0 00 00 	mov    %rax,0xa0(%rsp)
   22462:	00 
   22463:	48 8b 9c 24 d0 00 00 	mov    0xd0(%rsp),%rbx
   2246a:	00 
   2246b:	48 c1 e3 06          	shl    $0x6,%rbx
   2246f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   22474:	48 8b 8c 24 a0 00 00 	mov    0xa0(%rsp),%rcx
   2247b:	00 
   2247c:	48 89 44 19 08       	mov    %rax,0x8(%rcx,%rbx,1)
   22481:	48 8b 84 24 b0 00 00 	mov    0xb0(%rsp),%rax
   22488:	00 
   22489:	48 89 04 19          	mov    %rax,(%rcx,%rbx,1)
   2248d:	66 0f 6f 84 24 f0 02 	movdqa 0x2f0(%rsp),%xmm0
   22494:	00 00 
   22496:	0f 28 8c 24 00 03 00 	movaps 0x300(%rsp),%xmm1
   2249d:	00 
   2249e:	0f 28 94 24 10 03 00 	movaps 0x310(%rsp),%xmm2
   224a5:	00 
   224a6:	f3 0f 7f 44 19 10    	movdqu %xmm0,0x10(%rcx,%rbx,1)
   224ac:	0f 11 4c 19 20       	movups %xmm1,0x20(%rcx,%rbx,1)
   224b1:	0f 11 54 19 30       	movups %xmm2,0x30(%rcx,%rbx,1)
   224b6:	48 8b 9c 24 d0 00 00 	mov    0xd0(%rsp),%rbx
   224bd:	00 
   224be:	48 83 c3 01          	add    $0x1,%rbx
   224c2:	48 89 9c 24 d0 00 00 	mov    %rbx,0xd0(%rsp)
   224c9:	00 
   224ca:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
   224cf:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   224d4:	48 89 d1             	mov    %rdx,%rcx
   224d7:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   224dc:	48 01 c2             	add    %rax,%rdx
   224df:	48 85 c0             	test   %rax,%rax
   224e2:	0f 85 43 fe ff ff    	jne    2232b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x388b>
   224e8:	eb 27                	jmp    22511 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3a71>
   224ea:	b8 13 00 00 00       	mov    $0x13,%eax
   224ef:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   224f4:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   224f9:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   224fe:	eb 11                	jmp    22511 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3a71>
   22500:	31 c0                	xor    %eax,%eax
   22502:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   22507:	b8 06 00 00 00       	mov    $0x6,%eax
   2250c:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   22511:	31 db                	xor    %ebx,%ebx
   22513:	48 8b b4 24 c8 00 00 	mov    0xc8(%rsp),%rsi
   2251a:	00 
   2251b:	48 85 f6             	test   %rsi,%rsi
   2251e:	74 1e                	je     2253e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3a9e>
   22520:	48 8b bc 24 c0 00 00 	mov    0xc0(%rsp),%rdi
   22527:	00 
   22528:	48 85 ff             	test   %rdi,%rdi
   2252b:	74 11                	je     2253e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3a9e>
   2252d:	48 c1 e6 06          	shl    $0x6,%rsi
   22531:	74 0b                	je     2253e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3a9e>
   22533:	ba 08 00 00 00       	mov    $0x8,%edx
   22538:	ff 15 c2 36 02 00    	callq  *0x236c2(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   2253e:	84 db                	test   %bl,%bl
   22540:	0f 85 90 f9 ff ff    	jne    21ed6 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3436>
   22546:	48 8b b4 24 e0 02 00 	mov    0x2e0(%rsp),%rsi
   2254d:	00 
   2254e:	48 85 f6             	test   %rsi,%rsi
   22551:	0f 84 7f f9 ff ff    	je     21ed6 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3436>
   22557:	48 8b bc 24 d8 02 00 	mov    0x2d8(%rsp),%rdi
   2255e:	00 
   2255f:	48 85 ff             	test   %rdi,%rdi
   22562:	0f 84 6e f9 ff ff    	je     21ed6 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3436>
   22568:	48 c1 e6 02          	shl    $0x2,%rsi
   2256c:	48 85 f6             	test   %rsi,%rsi
   2256f:	0f 84 61 f9 ff ff    	je     21ed6 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3436>
   22575:	ba 02 00 00 00       	mov    $0x2,%edx
   2257a:	ff 15 80 36 02 00    	callq  *0x23680(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   22580:	e9 51 f9 ff ff       	jmpq   21ed6 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3436>
   22585:	48 83 bc 24 b0 00 00 	cmpq   $0x0,0xb0(%rsp)
   2258c:	00 00 
   2258e:	0f 84 80 05 00 00    	je     22b14 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4074>
   22594:	48 83 bc 24 80 01 00 	cmpq   $0x0,0x180(%rsp)
   2259b:	00 00 
   2259d:	0f 84 05 16 00 00    	je     23ba8 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5108>
   225a3:	c1 e5 10             	shl    $0x10,%ebp
   225a6:	0f b6 84 24 a8 00 00 	movzbl 0xa8(%rsp),%eax
   225ad:	00 
   225ae:	c1 e0 08             	shl    $0x8,%eax
   225b1:	09 e8                	or     %ebp,%eax
   225b3:	0f b6 4c 24 10       	movzbl 0x10(%rsp),%ecx
   225b8:	09 c1                	or     %eax,%ecx
   225ba:	89 8c 24 b8 01 00 00 	mov    %ecx,0x1b8(%rsp)
   225c1:	48 c1 a4 24 80 01 00 	shlq   $0x2,0x180(%rsp)
   225c8:	00 02 
   225ca:	b8 08 00 00 00       	mov    $0x8,%eax
   225cf:	48 89 84 24 b8 03 00 	mov    %rax,0x3b8(%rsp)
   225d6:	00 
   225d7:	31 c0                	xor    %eax,%eax
   225d9:	48 89 84 24 a8 02 00 	mov    %rax,0x2a8(%rsp)
   225e0:	00 
   225e1:	31 c0                	xor    %eax,%eax
   225e3:	48 89 84 24 c0 03 00 	mov    %rax,0x3c0(%rsp)
   225ea:	00 
   225eb:	48 83 84 24 c0 03 00 	addq   $0x1,0x3c0(%rsp)
   225f2:	00 01 
   225f4:	b8 2d 00 00 00       	mov    $0x2d,%eax
   225f9:	48 89 84 24 70 01 00 	mov    %rax,0x170(%rsp)
   22600:	00 
   22601:	31 c0                	xor    %eax,%eax
   22603:	48 89 84 24 a0 00 00 	mov    %rax,0xa0(%rsp)
   2260a:	00 
   2260b:	31 c0                	xor    %eax,%eax
   2260d:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   22614:	00 
   22615:	31 c0                	xor    %eax,%eax
   22617:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   2261e:	00 
   2261f:	31 c0                	xor    %eax,%eax
   22621:	48 89 84 24 f8 00 00 	mov    %rax,0xf8(%rsp)
   22628:	00 
   22629:	31 c0                	xor    %eax,%eax
   2262b:	48 89 84 24 d8 03 00 	mov    %rax,0x3d8(%rsp)
   22632:	00 
   22633:	31 c0                	xor    %eax,%eax
   22635:	48 89 84 24 d0 03 00 	mov    %rax,0x3d0(%rsp)
   2263c:	00 
   2263d:	31 c0                	xor    %eax,%eax
   2263f:	48 89 84 24 c8 03 00 	mov    %rax,0x3c8(%rsp)
   22646:	00 
   22647:	eb 58                	jmp    226a1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3c01>
   22649:	c1 e2 08             	shl    $0x8,%edx
   2264c:	0f b6 6c 24 08       	movzbl 0x8(%rsp),%ebp
   22651:	c1 e0 10             	shl    $0x10,%eax
   22654:	0f b7 d2             	movzwl %dx,%edx
   22657:	48 c1 e1 20          	shl    $0x20,%rcx
   2265b:	48 09 e9             	or     %rbp,%rcx
   2265e:	48 09 d1             	or     %rdx,%rcx
   22661:	48 09 c8             	or     %rcx,%rax
   22664:	48 89 84 24 c8 06 00 	mov    %rax,0x6c8(%rsp)
   2266b:	00 
   2266c:	48 89 bc 24 b0 02 00 	mov    %rdi,0x2b0(%rsp)
   22673:	00 
   22674:	48 89 b4 24 70 01 00 	mov    %rsi,0x170(%rsp)
   2267b:	00 
   2267c:	48 8b 8c 24 a0 00 00 	mov    0xa0(%rsp),%rcx
   22683:	00 
   22684:	48 83 c1 04          	add    $0x4,%rcx
   22688:	48 89 c8             	mov    %rcx,%rax
   2268b:	48 89 8c 24 a0 00 00 	mov    %rcx,0xa0(%rsp)
   22692:	00 
   22693:	48 39 8c 24 80 01 00 	cmp    %rcx,0x180(%rsp)
   2269a:	00 
   2269b:	0f 84 51 03 00 00    	je     229f2 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3f52>
   226a1:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   226a6:	48 8b 8c 24 a0 00 00 	mov    0xa0(%rsp),%rcx
   226ad:	00 
   226ae:	0f b7 4c 08 02       	movzwl 0x2(%rax,%rcx,1),%ecx
   226b3:	48 8d bc 24 10 01 00 	lea    0x110(%rsp),%rdi
   226ba:	00 
   226bb:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
   226c0:	8b 94 24 b8 01 00 00 	mov    0x1b8(%rsp),%edx
   226c7:	e8 e4 75 fe ff       	callq  9cb0 <gimli::read::line::parse_attribute>
   226cc:	48 8b 84 24 20 01 00 	mov    0x120(%rsp),%rax
   226d3:	00 
   226d4:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   226d9:	48 8b b4 24 18 01 00 	mov    0x118(%rsp),%rsi
   226e0:	00 
   226e1:	48 83 bc 24 10 01 00 	cmpq   $0x1,0x110(%rsp)
   226e8:	00 01 
   226ea:	0f 84 fa 04 00 00    	je     22bea <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x414a>
   226f0:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   226f5:	48 8b 8c 24 a0 00 00 	mov    0xa0(%rsp),%rcx
   226fc:	00 
   226fd:	0f b7 2c 08          	movzwl (%rax,%rcx,1),%ebp
   22701:	83 c5 ff             	add    $0xffffffff,%ebp
   22704:	66 83 fd 04          	cmp    $0x4,%bp
   22708:	0f 87 6e ff ff ff    	ja     2267c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   2270e:	48 8b bc 24 28 01 00 	mov    0x128(%rsp),%rdi
   22715:	00 
   22716:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   2271b:	48 89 ca             	mov    %rcx,%rdx
   2271e:	48 c1 ea 08          	shr    $0x8,%rdx
   22722:	48 89 c8             	mov    %rcx,%rax
   22725:	48 c1 e8 10          	shr    $0x10,%rax
   22729:	48 c1 e9 20          	shr    $0x20,%rcx
   2272d:	0f b7 ed             	movzwl %bp,%ebp
   22730:	48 8d 1d c5 4a 01 00 	lea    0x14ac5(%rip),%rbx        # 371fc <_fini+0x2178>
   22737:	48 63 2c ab          	movslq (%rbx,%rbp,4),%rbp
   2273b:	48 01 dd             	add    %rbx,%rbp
   2273e:	ff e5                	jmpq   *%rbp
   22740:	48 83 c6 fe          	add    $0xfffffffffffffffe,%rsi
   22744:	48 83 fe 05          	cmp    $0x5,%rsi
   22748:	0f 87 2e ff ff ff    	ja     2267c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   2274e:	48 8d 3d eb 4a 01 00 	lea    0x14aeb(%rip),%rdi        # 37240 <_fini+0x21bc>
   22755:	48 63 34 b7          	movslq (%rdi,%rsi,4),%rsi
   22759:	48 01 fe             	add    %rdi,%rsi
   2275c:	ff e6                	jmpq   *%rsi
   2275e:	c1 e2 08             	shl    $0x8,%edx
   22761:	0f b6 74 24 08       	movzbl 0x8(%rsp),%esi
   22766:	c1 e0 10             	shl    $0x10,%eax
   22769:	0f b7 d2             	movzwl %dx,%edx
   2276c:	48 c1 e1 20          	shl    $0x20,%rcx
   22770:	48 09 f1             	or     %rsi,%rcx
   22773:	48 09 d1             	or     %rdx,%rcx
   22776:	48 09 c8             	or     %rcx,%rax
   22779:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   22780:	00 
   22781:	e9 f6 fe ff ff       	jmpq   2267c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   22786:	48 83 c6 fe          	add    $0xfffffffffffffffe,%rsi
   2278a:	48 83 fe 05          	cmp    $0x5,%rsi
   2278e:	0f 87 e8 fe ff ff    	ja     2267c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   22794:	48 8d 3d 8d 4a 01 00 	lea    0x14a8d(%rip),%rdi        # 37228 <_fini+0x21a4>
   2279b:	48 63 34 b7          	movslq (%rdi,%rsi,4),%rsi
   2279f:	48 01 fe             	add    %rdi,%rsi
   227a2:	ff e6                	jmpq   *%rsi
   227a4:	c1 e2 08             	shl    $0x8,%edx
   227a7:	0f b6 74 24 08       	movzbl 0x8(%rsp),%esi
   227ac:	c1 e0 10             	shl    $0x10,%eax
   227af:	0f b7 d2             	movzwl %dx,%edx
   227b2:	48 c1 e1 20          	shl    $0x20,%rcx
   227b6:	48 09 f1             	or     %rsi,%rcx
   227b9:	48 09 d1             	or     %rdx,%rcx
   227bc:	48 09 c8             	or     %rcx,%rax
   227bf:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   227c6:	00 
   227c7:	e9 b0 fe ff ff       	jmpq   2267c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   227cc:	48 83 c6 fe          	add    $0xfffffffffffffffe,%rsi
   227d0:	48 83 fe 05          	cmp    $0x5,%rsi
   227d4:	0f 87 a2 fe ff ff    	ja     2267c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   227da:	48 8d 3d 2f 4a 01 00 	lea    0x14a2f(%rip),%rdi        # 37210 <_fini+0x218c>
   227e1:	48 63 34 b7          	movslq (%rdi,%rsi,4),%rsi
   227e5:	48 01 fe             	add    %rdi,%rsi
   227e8:	ff e6                	jmpq   *%rsi
   227ea:	c1 e2 08             	shl    $0x8,%edx
   227ed:	0f b6 74 24 08       	movzbl 0x8(%rsp),%esi
   227f2:	c1 e0 10             	shl    $0x10,%eax
   227f5:	0f b7 d2             	movzwl %dx,%edx
   227f8:	48 c1 e1 20          	shl    $0x20,%rcx
   227fc:	48 09 f1             	or     %rsi,%rcx
   227ff:	48 09 d1             	or     %rdx,%rcx
   22802:	48 09 c8             	or     %rcx,%rax
   22805:	48 89 84 24 f8 00 00 	mov    %rax,0xf8(%rsp)
   2280c:	00 
   2280d:	e9 6a fe ff ff       	jmpq   2267c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   22812:	48 83 fe 01          	cmp    $0x1,%rsi
   22816:	0f 85 60 fe ff ff    	jne    2267c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   2281c:	48 83 ff 10          	cmp    $0x10,%rdi
   22820:	0f 85 56 fe ff ff    	jne    2267c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   22826:	48 c1 e1 20          	shl    $0x20,%rcx
   2282a:	0f b6 74 24 08       	movzbl 0x8(%rsp),%esi
   2282f:	48 09 ce             	or     %rcx,%rsi
   22832:	c1 e2 08             	shl    $0x8,%edx
   22835:	0f b7 ca             	movzwl %dx,%ecx
   22838:	c1 e0 10             	shl    $0x10,%eax
   2283b:	48 09 f1             	or     %rsi,%rcx
   2283e:	0f b7 54 08 04       	movzwl 0x4(%rax,%rcx,1),%edx
   22843:	0f b6 74 08 06       	movzbl 0x6(%rax,%rcx,1),%esi
   22848:	c1 e6 10             	shl    $0x10,%esi
   2284b:	09 d6                	or     %edx,%esi
   2284d:	48 c1 e6 20          	shl    $0x20,%rsi
   22851:	8b 14 08             	mov    (%rax,%rcx,1),%edx
   22854:	48 09 f2             	or     %rsi,%rdx
   22857:	48 89 94 24 d8 03 00 	mov    %rdx,0x3d8(%rsp)
   2285e:	00 
   2285f:	48 8b 54 08 07       	mov    0x7(%rax,%rcx,1),%rdx
   22864:	48 89 94 24 d0 03 00 	mov    %rdx,0x3d0(%rsp)
   2286b:	00 
   2286c:	0f b6 44 08 0f       	movzbl 0xf(%rax,%rcx,1),%eax
   22871:	48 89 84 24 c8 03 00 	mov    %rax,0x3c8(%rsp)
   22878:	00 
   22879:	e9 fe fd ff ff       	jmpq   2267c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   2287e:	0f b6 44 24 08       	movzbl 0x8(%rsp),%eax
   22883:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   2288a:	00 
   2288b:	e9 ec fd ff ff       	jmpq   2267c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   22890:	c1 e2 08             	shl    $0x8,%edx
   22893:	0f b6 44 24 08       	movzbl 0x8(%rsp),%eax
   22898:	0f b7 ca             	movzwl %dx,%ecx
   2289b:	48 09 c1             	or     %rax,%rcx
   2289e:	48 89 8c 24 b8 00 00 	mov    %rcx,0xb8(%rsp)
   228a5:	00 
   228a6:	e9 d1 fd ff ff       	jmpq   2267c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   228ab:	c1 e2 08             	shl    $0x8,%edx
   228ae:	0f b6 4c 24 08       	movzbl 0x8(%rsp),%ecx
   228b3:	c1 e0 10             	shl    $0x10,%eax
   228b6:	0f b7 d2             	movzwl %dx,%edx
   228b9:	48 09 ca             	or     %rcx,%rdx
   228bc:	48 09 d0             	or     %rdx,%rax
   228bf:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   228c6:	00 
   228c7:	e9 b0 fd ff ff       	jmpq   2267c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   228cc:	c1 e2 08             	shl    $0x8,%edx
   228cf:	0f b6 74 24 08       	movzbl 0x8(%rsp),%esi
   228d4:	c1 e0 10             	shl    $0x10,%eax
   228d7:	0f b7 d2             	movzwl %dx,%edx
   228da:	48 c1 e1 20          	shl    $0x20,%rcx
   228de:	48 09 f1             	or     %rsi,%rcx
   228e1:	48 09 d1             	or     %rdx,%rcx
   228e4:	48 09 c8             	or     %rcx,%rax
   228e7:	0f 88 8f fd ff ff    	js     2267c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   228ed:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   228f4:	00 
   228f5:	e9 82 fd ff ff       	jmpq   2267c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   228fa:	0f b6 44 24 08       	movzbl 0x8(%rsp),%eax
   228ff:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   22906:	00 
   22907:	e9 70 fd ff ff       	jmpq   2267c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   2290c:	c1 e2 08             	shl    $0x8,%edx
   2290f:	0f b6 44 24 08       	movzbl 0x8(%rsp),%eax
   22914:	0f b7 ca             	movzwl %dx,%ecx
   22917:	48 09 c1             	or     %rax,%rcx
   2291a:	48 89 8c 24 98 00 00 	mov    %rcx,0x98(%rsp)
   22921:	00 
   22922:	e9 55 fd ff ff       	jmpq   2267c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   22927:	c1 e2 08             	shl    $0x8,%edx
   2292a:	0f b6 4c 24 08       	movzbl 0x8(%rsp),%ecx
   2292f:	c1 e0 10             	shl    $0x10,%eax
   22932:	0f b7 d2             	movzwl %dx,%edx
   22935:	48 09 ca             	or     %rcx,%rdx
   22938:	48 09 d0             	or     %rdx,%rax
   2293b:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   22942:	00 
   22943:	e9 34 fd ff ff       	jmpq   2267c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   22948:	c1 e2 08             	shl    $0x8,%edx
   2294b:	0f b6 74 24 08       	movzbl 0x8(%rsp),%esi
   22950:	c1 e0 10             	shl    $0x10,%eax
   22953:	0f b7 d2             	movzwl %dx,%edx
   22956:	48 c1 e1 20          	shl    $0x20,%rcx
   2295a:	48 09 f1             	or     %rsi,%rcx
   2295d:	48 09 d1             	or     %rdx,%rcx
   22960:	48 09 c8             	or     %rcx,%rax
   22963:	0f 88 13 fd ff ff    	js     2267c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   22969:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   22970:	00 
   22971:	e9 06 fd ff ff       	jmpq   2267c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   22976:	0f b6 44 24 08       	movzbl 0x8(%rsp),%eax
   2297b:	48 89 84 24 f8 00 00 	mov    %rax,0xf8(%rsp)
   22982:	00 
   22983:	e9 f4 fc ff ff       	jmpq   2267c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   22988:	c1 e2 08             	shl    $0x8,%edx
   2298b:	0f b6 44 24 08       	movzbl 0x8(%rsp),%eax
   22990:	0f b7 ca             	movzwl %dx,%ecx
   22993:	48 09 c1             	or     %rax,%rcx
   22996:	48 89 8c 24 f8 00 00 	mov    %rcx,0xf8(%rsp)
   2299d:	00 
   2299e:	e9 d9 fc ff ff       	jmpq   2267c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   229a3:	c1 e2 08             	shl    $0x8,%edx
   229a6:	0f b6 4c 24 08       	movzbl 0x8(%rsp),%ecx
   229ab:	c1 e0 10             	shl    $0x10,%eax
   229ae:	0f b7 d2             	movzwl %dx,%edx
   229b1:	48 09 ca             	or     %rcx,%rdx
   229b4:	48 09 d0             	or     %rdx,%rax
   229b7:	48 89 84 24 f8 00 00 	mov    %rax,0xf8(%rsp)
   229be:	00 
   229bf:	e9 b8 fc ff ff       	jmpq   2267c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   229c4:	c1 e2 08             	shl    $0x8,%edx
   229c7:	0f b6 74 24 08       	movzbl 0x8(%rsp),%esi
   229cc:	c1 e0 10             	shl    $0x10,%eax
   229cf:	0f b7 d2             	movzwl %dx,%edx
   229d2:	48 c1 e1 20          	shl    $0x20,%rcx
   229d6:	48 09 f1             	or     %rsi,%rcx
   229d9:	48 09 d1             	or     %rdx,%rcx
   229dc:	48 09 c8             	or     %rcx,%rax
   229df:	0f 88 97 fc ff ff    	js     2267c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   229e5:	48 89 84 24 f8 00 00 	mov    %rax,0xf8(%rsp)
   229ec:	00 
   229ed:	e9 8a fc ff ff       	jmpq   2267c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3bdc>
   229f2:	48 83 bc 24 70 01 00 	cmpq   $0x2d,0x170(%rsp)
   229f9:	00 2d 
   229fb:	0f 84 a7 11 00 00    	je     23ba8 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5108>
   22a01:	48 8b 84 24 a8 02 00 	mov    0x2a8(%rsp),%rax
   22a08:	00 
   22a09:	48 3b 84 24 c8 00 00 	cmp    0xc8(%rsp),%rax
   22a10:	00 
   22a11:	75 32                	jne    22a45 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3fa5>
   22a13:	be 01 00 00 00       	mov    $0x1,%esi
   22a18:	48 8d bc 24 c0 00 00 	lea    0xc0(%rsp),%rdi
   22a1f:	00 
   22a20:	e8 9b 6d fe ff       	callq  97c0 <alloc::vec::Vec<T>::reserve>
   22a25:	48 8b 84 24 c0 00 00 	mov    0xc0(%rsp),%rax
   22a2c:	00 
   22a2d:	48 89 84 24 b8 03 00 	mov    %rax,0x3b8(%rsp)
   22a34:	00 
   22a35:	48 8b 84 24 d0 00 00 	mov    0xd0(%rsp),%rax
   22a3c:	00 
   22a3d:	48 89 84 24 a8 02 00 	mov    %rax,0x2a8(%rsp)
   22a44:	00 
   22a45:	48 8b 94 24 a8 02 00 	mov    0x2a8(%rsp),%rdx
   22a4c:	00 
   22a4d:	48 c1 e2 06          	shl    $0x6,%rdx
   22a51:	48 8b 8c 24 b8 03 00 	mov    0x3b8(%rsp),%rcx
   22a58:	00 
   22a59:	48 8b 84 24 c8 06 00 	mov    0x6c8(%rsp),%rax
   22a60:	00 
   22a61:	48 89 44 11 08       	mov    %rax,0x8(%rcx,%rdx,1)
   22a66:	48 8b 84 24 70 01 00 	mov    0x170(%rsp),%rax
   22a6d:	00 
   22a6e:	48 89 04 11          	mov    %rax,(%rcx,%rdx,1)
   22a72:	48 8b 84 24 b0 02 00 	mov    0x2b0(%rsp),%rax
   22a79:	00 
   22a7a:	48 89 44 11 10       	mov    %rax,0x10(%rcx,%rdx,1)
   22a7f:	48 8b 84 24 b8 00 00 	mov    0xb8(%rsp),%rax
   22a86:	00 
   22a87:	48 89 44 11 18       	mov    %rax,0x18(%rcx,%rdx,1)
   22a8c:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
   22a93:	00 
   22a94:	48 89 44 11 20       	mov    %rax,0x20(%rcx,%rdx,1)
   22a99:	48 8b 84 24 f8 00 00 	mov    0xf8(%rsp),%rax
   22aa0:	00 
   22aa1:	48 89 44 11 28       	mov    %rax,0x28(%rcx,%rdx,1)
   22aa6:	48 8b b4 24 d8 03 00 	mov    0x3d8(%rsp),%rsi
   22aad:	00 
   22aae:	89 74 11 30          	mov    %esi,0x30(%rcx,%rdx,1)
   22ab2:	48 89 f0             	mov    %rsi,%rax
   22ab5:	48 c1 e8 30          	shr    $0x30,%rax
   22ab9:	88 44 11 36          	mov    %al,0x36(%rcx,%rdx,1)
   22abd:	48 c1 ee 20          	shr    $0x20,%rsi
   22ac1:	66 89 74 11 34       	mov    %si,0x34(%rcx,%rdx,1)
   22ac6:	48 8b 84 24 d0 03 00 	mov    0x3d0(%rsp),%rax
   22acd:	00 
   22ace:	48 89 44 11 37       	mov    %rax,0x37(%rcx,%rdx,1)
   22ad3:	48 8b 84 24 c8 03 00 	mov    0x3c8(%rsp),%rax
   22ada:	00 
   22adb:	88 44 11 3f          	mov    %al,0x3f(%rcx,%rdx,1)
   22adf:	48 8b 8c 24 d0 00 00 	mov    0xd0(%rsp),%rcx
   22ae6:	00 
   22ae7:	48 83 c1 01          	add    $0x1,%rcx
   22aeb:	48 89 c8             	mov    %rcx,%rax
   22aee:	48 89 8c 24 a8 02 00 	mov    %rcx,0x2a8(%rsp)
   22af5:	00 
   22af6:	48 89 8c 24 d0 00 00 	mov    %rcx,0xd0(%rsp)
   22afd:	00 
   22afe:	48 8b 84 24 c0 03 00 	mov    0x3c0(%rsp),%rax
   22b05:	00 
   22b06:	48 3b 84 24 b0 00 00 	cmp    0xb0(%rsp),%rax
   22b0d:	00 
   22b0e:	0f 85 d7 fa ff ff    	jne    225eb <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3b4b>
   22b14:	bd 2d 00 00 00       	mov    $0x2d,%ebp
   22b19:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   22b1e:	48 01 44 24 68       	add    %rax,0x68(%rsp)
   22b23:	48 8b 84 24 80 00 00 	mov    0x80(%rsp),%rax
   22b2a:	00 
   22b2b:	48 25 00 ff ff ff    	and    $0xffffffffffffff00,%rax
   22b31:	48 8b 8c 24 b0 03 00 	mov    0x3b0(%rsp),%rcx
   22b38:	00 
   22b39:	48 89 8c 24 60 02 00 	mov    %rcx,0x260(%rsp)
   22b40:	00 
   22b41:	0f 10 84 24 a0 03 00 	movups 0x3a0(%rsp),%xmm0
   22b48:	00 
   22b49:	0f 29 84 24 50 02 00 	movaps %xmm0,0x250(%rsp)
   22b50:	00 
   22b51:	0f 10 84 24 88 01 00 	movups 0x188(%rsp),%xmm0
   22b58:	00 
   22b59:	0f 29 84 24 f0 02 00 	movaps %xmm0,0x2f0(%rsp)
   22b60:	00 
   22b61:	48 8b 8c 24 98 01 00 	mov    0x198(%rsp),%rcx
   22b68:	00 
   22b69:	48 89 8c 24 00 03 00 	mov    %rcx,0x300(%rsp)
   22b70:	00 
   22b71:	0f 10 84 24 d8 02 00 	movups 0x2d8(%rsp),%xmm0
   22b78:	00 
   22b79:	0f 29 84 24 60 09 00 	movaps %xmm0,0x960(%rsp)
   22b80:	00 
   22b81:	48 8b 8c 24 e8 02 00 	mov    0x2e8(%rsp),%rcx
   22b88:	00 
   22b89:	48 89 8c 24 70 09 00 	mov    %rcx,0x970(%rsp)
   22b90:	00 
   22b91:	0f 10 84 24 c0 00 00 	movups 0xc0(%rsp),%xmm0
   22b98:	00 
   22b99:	0f 29 84 24 40 09 00 	movaps %xmm0,0x940(%rsp)
   22ba0:	00 
   22ba1:	48 8b 8c 24 d0 00 00 	mov    0xd0(%rsp),%rcx
   22ba8:	00 
   22ba9:	48 89 8c 24 50 09 00 	mov    %rcx,0x950(%rsp)
   22bb0:	00 
   22bb1:	48 8b 8c 24 20 02 00 	mov    0x220(%rsp),%rcx
   22bb8:	00 
   22bb9:	48 89 8c 24 30 01 00 	mov    %rcx,0x130(%rsp)
   22bc0:	00 
   22bc1:	66 0f 6f 84 24 00 02 	movdqa 0x200(%rsp),%xmm0
   22bc8:	00 00 
   22bca:	0f 28 8c 24 10 02 00 	movaps 0x210(%rsp),%xmm1
   22bd1:	00 
   22bd2:	0f 29 8c 24 20 01 00 	movaps %xmm1,0x120(%rsp)
   22bd9:	00 
   22bda:	66 0f 7f 84 24 10 01 	movdqa %xmm0,0x110(%rsp)
   22be1:	00 00 
   22be3:	31 c9                	xor    %ecx,%ecx
   22be5:	e9 7f e1 ff ff       	jmpq   20d69 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x22c9>
   22bea:	31 db                	xor    %ebx,%ebx
   22bec:	48 89 74 24 48       	mov    %rsi,0x48(%rsp)
   22bf1:	e9 1d f9 ff ff       	jmpq   22513 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3a73>
   22bf6:	31 db                	xor    %ebx,%ebx
   22bf8:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   22bfd:	e9 11 f9 ff ff       	jmpq   22513 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3a73>
   22c02:	31 db                	xor    %ebx,%ebx
   22c04:	48 8b 84 24 b0 00 00 	mov    0xb0(%rsp),%rax
   22c0b:	00 
   22c0c:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   22c11:	e9 fd f8 ff ff       	jmpq   22513 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3a73>
   22c16:	4c 8b ac 24 58 03 00 	mov    0x358(%rsp),%r13
   22c1d:	00 
   22c1e:	48 8b b4 24 68 03 00 	mov    0x368(%rsp),%rsi
   22c25:	00 
   22c26:	48 83 fe 15          	cmp    $0x15,%rsi
   22c2a:	0f 83 e9 00 00 00    	jae    22d19 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4279>
   22c30:	48 83 fe 02          	cmp    $0x2,%rsi
   22c34:	0f 82 50 08 00 00    	jb     2348a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x49ea>
   22c3a:	48 8d 7e ff          	lea    -0x1(%rsi),%rdi
   22c3e:	49 89 f3             	mov    %rsi,%r11
   22c41:	49 c1 e3 05          	shl    $0x5,%r11
   22c45:	4d 01 eb             	add    %r13,%r11
   22c48:	31 d2                	xor    %edx,%edx
   22c4a:	eb 26                	jmp    22c72 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x41d2>
   22c4c:	66 0f 6f 84 24 f0 03 	movdqa 0x3f0(%rsp),%xmm0
   22c53:	00 00 
   22c55:	f3 0f 7f 00          	movdqu %xmm0,(%rax)
   22c59:	4c 89 48 10          	mov    %r9,0x10(%rax)
   22c5d:	4c 89 40 18          	mov    %r8,0x18(%rax)
   22c61:	49 83 c3 e0          	add    $0xffffffffffffffe0,%r11
   22c65:	48 83 c2 01          	add    $0x1,%rdx
   22c69:	48 85 ff             	test   %rdi,%rdi
   22c6c:	0f 84 08 08 00 00    	je     2347a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x49da>
   22c72:	48 89 fb             	mov    %rdi,%rbx
   22c75:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   22c79:	48 89 f5             	mov    %rsi,%rbp
   22c7c:	48 29 fd             	sub    %rdi,%rbp
   22c7f:	0f 82 75 0e 00 00    	jb     23afa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x505a>
   22c85:	48 83 fd 02          	cmp    $0x2,%rbp
   22c89:	72 d6                	jb     22c61 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x41c1>
   22c8b:	48 89 f9             	mov    %rdi,%rcx
   22c8e:	48 c1 e1 05          	shl    $0x5,%rcx
   22c92:	48 c1 e3 05          	shl    $0x5,%rbx
   22c96:	4d 8b 4c 0d 10       	mov    0x10(%r13,%rcx,1),%r9
   22c9b:	4d 39 4c 1d 10       	cmp    %r9,0x10(%r13,%rbx,1)
   22ca0:	73 bf                	jae    22c61 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x41c1>
   22ca2:	4e 8d 14 29          	lea    (%rcx,%r13,1),%r10
   22ca6:	4a 8d 04 2b          	lea    (%rbx,%r13,1),%rax
   22caa:	41 0f 10 02          	movups (%r10),%xmm0
   22cae:	0f 29 84 24 f0 03 00 	movaps %xmm0,0x3f0(%rsp)
   22cb5:	00 
   22cb6:	4d 8b 44 0d 18       	mov    0x18(%r13,%rcx,1),%r8
   22cbb:	f3 41 0f 6f 44 1d 00 	movdqu 0x0(%r13,%rbx,1),%xmm0
   22cc2:	41 0f 10 4c 1d 10    	movups 0x10(%r13,%rbx,1),%xmm1
   22cc8:	41 0f 11 4a 10       	movups %xmm1,0x10(%r10)
   22ccd:	f3 41 0f 7f 02       	movdqu %xmm0,(%r10)
   22cd2:	48 83 fd 03          	cmp    $0x3,%rbp
   22cd6:	0f 82 70 ff ff ff    	jb     22c4c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x41ac>
   22cdc:	48 89 d1             	mov    %rdx,%rcx
   22cdf:	4c 89 db             	mov    %r11,%rbx
   22ce2:	4d 39 4a 50          	cmp    %r9,0x50(%r10)
   22ce6:	0f 83 60 ff ff ff    	jae    22c4c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x41ac>
   22cec:	48 89 d8             	mov    %rbx,%rax
   22cef:	f3 0f 6f 03          	movdqu (%rbx),%xmm0
   22cf3:	0f 10 4b 10          	movups 0x10(%rbx),%xmm1
   22cf7:	0f 11 4b f0          	movups %xmm1,-0x10(%rbx)
   22cfb:	f3 0f 7f 43 e0       	movdqu %xmm0,-0x20(%rbx)
   22d00:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
   22d04:	0f 84 42 ff ff ff    	je     22c4c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x41ac>
   22d0a:	48 8d 58 20          	lea    0x20(%rax),%rbx
   22d0e:	4c 39 48 30          	cmp    %r9,0x30(%rax)
   22d12:	72 d8                	jb     22cec <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x424c>
   22d14:	e9 33 ff ff ff       	jmpq   22c4c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x41ac>
   22d19:	4c 89 6c 24 70       	mov    %r13,0x70(%rsp)
   22d1e:	48 89 74 24 60       	mov    %rsi,0x60(%rsp)
   22d23:	48 89 f0             	mov    %rsi,%rax
   22d26:	48 d1 e8             	shr    %rax
   22d29:	b9 20 00 00 00       	mov    $0x20,%ecx
   22d2e:	31 db                	xor    %ebx,%ebx
   22d30:	48 f7 e1             	mul    %rcx
   22d33:	48 89 c7             	mov    %rax,%rdi
   22d36:	0f 91 c0             	setno  %al
   22d39:	0f 80 9b 0e 00 00    	jo     23bda <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x513a>
   22d3f:	88 c3                	mov    %al,%bl
   22d41:	48 c1 e3 03          	shl    $0x3,%rbx
   22d45:	48 85 ff             	test   %rdi,%rdi
   22d48:	48 89 bc 24 c0 01 00 	mov    %rdi,0x1c0(%rsp)
   22d4f:	00 
   22d50:	0f 84 93 00 00 00    	je     22de9 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4349>
   22d56:	48 89 de             	mov    %rbx,%rsi
   22d59:	ff 15 29 2e 02 00    	callq  *0x22e29(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   22d5f:	e9 88 00 00 00       	jmpq   22dec <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x434c>
   22d64:	49 8b 7c 05 18       	mov    0x18(%r13,%rax,1),%rdi
   22d69:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   22d6e:	48 29 f9             	sub    %rdi,%rcx
   22d71:	0f 82 33 09 00 00    	jb     236aa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   22d77:	49 8b 74 05 20       	mov    0x20(%r13,%rax,1),%rsi
   22d7c:	48 39 f1             	cmp    %rsi,%rcx
   22d7f:	0f 82 25 09 00 00    	jb     236aa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   22d85:	48 03 7c 24 58       	add    0x58(%rsp),%rdi
   22d8a:	ff 15 08 2d 02 00    	callq  *0x22d08(%rip)        # 45a98 <_GLOBAL_OFFSET_TABLE_+0x108>
   22d90:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   22d95:	31 c0                	xor    %eax,%eax
   22d97:	eb 09                	jmp    22da2 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4302>
   22d99:	48 83 c0 40          	add    $0x40,%rax
   22d9d:	49 39 c6             	cmp    %rax,%r14
   22da0:	74 3d                	je     22ddf <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x433f>
   22da2:	41 83 7c 05 04 12    	cmpl   $0x12,0x4(%r13,%rax,1)
   22da8:	75 ef                	jne    22d99 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x42f9>
   22daa:	41 8b 4c 05 28       	mov    0x28(%r13,%rax,1),%ecx
   22daf:	48 39 d9             	cmp    %rbx,%rcx
   22db2:	75 e5                	jne    22d99 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x42f9>
   22db4:	49 8b 4c 05 18       	mov    0x18(%r13,%rax,1),%rcx
   22db9:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   22dbe:	48 29 ce             	sub    %rcx,%rsi
   22dc1:	0f 82 e3 08 00 00    	jb     236aa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   22dc7:	49 3b 74 05 20       	cmp    0x20(%r13,%rax,1),%rsi
   22dcc:	0f 82 d8 08 00 00    	jb     236aa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   22dd2:	03 4c 24 58          	add    0x58(%rsp),%ecx
   22dd6:	f6 c1 03             	test   $0x3,%cl
   22dd9:	0f 85 cb 08 00 00    	jne    236aa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   22ddf:	48 8b 6c 24 20       	mov    0x20(%rsp),%rbp
   22de4:	e9 7a c2 ff ff       	jmpq   1f063 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5c3>
   22de9:	48 89 d8             	mov    %rbx,%rax
   22dec:	48 85 c0             	test   %rax,%rax
   22def:	0f 84 f0 0d 00 00    	je     23be5 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5145>
   22df5:	48 8b 8c 24 c0 01 00 	mov    0x1c0(%rsp),%rcx
   22dfc:	00 
   22dfd:	48 c1 e9 05          	shr    $0x5,%rcx
   22e01:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   22e06:	48 89 84 24 a0 0a 00 	mov    %rax,0xaa0(%rsp)
   22e0d:	00 
   22e0e:	48 89 8c 24 a8 0a 00 	mov    %rcx,0xaa8(%rsp)
   22e15:	00 
   22e16:	48 c7 84 24 b0 0a 00 	movq   $0x0,0xab0(%rsp)
   22e1d:	00 00 00 00 00 
   22e22:	48 c7 84 24 f0 03 00 	movq   $0x8,0x3f0(%rsp)
   22e29:	00 08 00 00 00 
   22e2e:	66 0f ef c0          	pxor   %xmm0,%xmm0
   22e32:	f3 0f 7f 84 24 f8 03 	movdqu %xmm0,0x3f8(%rsp)
   22e39:	00 00 
   22e3b:	4c 8b 64 24 70       	mov    0x70(%rsp),%r12
   22e40:	49 8d 44 24 b0       	lea    -0x50(%r12),%rax
   22e45:	48 89 84 24 48 03 00 	mov    %rax,0x348(%rsp)
   22e4c:	00 
   22e4d:	49 8d 44 24 c0       	lea    -0x40(%r12),%rax
   22e52:	48 89 84 24 40 03 00 	mov    %rax,0x340(%rsp)
   22e59:	00 
   22e5a:	49 8d 44 24 e0       	lea    -0x20(%r12),%rax
   22e5f:	48 89 84 24 08 01 00 	mov    %rax,0x108(%rsp)
   22e66:	00 
   22e67:	48 c7 c0 e0 ff ff ff 	mov    $0xffffffffffffffe0,%rax
   22e6e:	4c 29 e0             	sub    %r12,%rax
   22e71:	48 89 84 24 c8 01 00 	mov    %rax,0x1c8(%rsp)
   22e78:	00 
   22e79:	4c 8b 7c 24 60       	mov    0x60(%rsp),%r15
   22e7e:	4c 89 fe             	mov    %r15,%rsi
   22e81:	eb 11                	jmp    22e94 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x43f4>
   22e83:	48 8b b4 24 b8 02 00 	mov    0x2b8(%rsp),%rsi
   22e8a:	00 
   22e8b:	48 85 f6             	test   %rsi,%rsi
   22e8e:	0f 84 99 05 00 00    	je     2342d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x498d>
   22e94:	49 89 f0             	mov    %rsi,%r8
   22e97:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   22e9b:	0f 84 e3 00 00 00    	je     22f84 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x44e4>
   22ea1:	4c 8d 4e fe          	lea    -0x2(%rsi),%r9
   22ea5:	4c 89 c1             	mov    %r8,%rcx
   22ea8:	48 c1 e1 05          	shl    $0x5,%rcx
   22eac:	4c 89 c8             	mov    %r9,%rax
   22eaf:	48 c1 e0 05          	shl    $0x5,%rax
   22eb3:	49 8b 44 04 10       	mov    0x10(%r12,%rax,1),%rax
   22eb8:	49 39 44 0c 10       	cmp    %rax,0x10(%r12,%rcx,1)
   22ebd:	0f 83 cd 00 00 00    	jae    22f90 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x44f0>
   22ec3:	48 89 f1             	mov    %rsi,%rcx
   22ec6:	48 c1 e1 05          	shl    $0x5,%rcx
   22eca:	48 8b 94 24 40 03 00 	mov    0x340(%rsp),%rdx
   22ed1:	00 
   22ed2:	4c 8d 14 0a          	lea    (%rdx,%rcx,1),%r10
   22ed6:	ba 02 00 00 00       	mov    $0x2,%edx
   22edb:	4c 89 cf             	mov    %r9,%rdi
   22ede:	48 89 d5             	mov    %rdx,%rbp
   22ee1:	4c 89 d3             	mov    %r10,%rbx
   22ee4:	4d 85 c9             	test   %r9,%r9
   22ee7:	74 20                	je     22f09 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4469>
   22ee9:	4c 8d 4f ff          	lea    -0x1(%rdi),%r9
   22eed:	4c 89 ca             	mov    %r9,%rdx
   22ef0:	48 c1 e2 05          	shl    $0x5,%rdx
   22ef4:	4d 8b 5c 14 10       	mov    0x10(%r12,%rdx,1),%r11
   22ef9:	48 8d 55 01          	lea    0x1(%rbp),%rdx
   22efd:	4c 8d 53 e0          	lea    -0x20(%rbx),%r10
   22f01:	4c 39 d8             	cmp    %r11,%rax
   22f04:	4c 89 d8             	mov    %r11,%rax
   22f07:	72 d2                	jb     22edb <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x443b>
   22f09:	48 89 f2             	mov    %rsi,%rdx
   22f0c:	48 29 fa             	sub    %rdi,%rdx
   22f0f:	0f 82 0c 0c 00 00    	jb     23b21 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5081>
   22f15:	4c 39 fe             	cmp    %r15,%rsi
   22f18:	0f 87 12 0c 00 00    	ja     23b30 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5090>
   22f1e:	48 f7 c2 fe ff ff ff 	test   $0xfffffffffffffffe,%rdx
   22f25:	0f 84 a0 00 00 00    	je     22fcb <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x452b>
   22f2b:	48 d1 ed             	shr    %rbp
   22f2e:	48 03 8c 24 08 01 00 	add    0x108(%rsp),%rcx
   22f35:	00 
   22f36:	0f 10 03             	movups (%rbx),%xmm0
   22f39:	0f 10 4b 10          	movups 0x10(%rbx),%xmm1
   22f3d:	0f 29 8c 24 80 03 00 	movaps %xmm1,0x380(%rsp)
   22f44:	00 
   22f45:	0f 29 84 24 70 03 00 	movaps %xmm0,0x370(%rsp)
   22f4c:	00 
   22f4d:	0f 10 01             	movups (%rcx),%xmm0
   22f50:	0f 10 49 10          	movups 0x10(%rcx),%xmm1
   22f54:	0f 11 03             	movups %xmm0,(%rbx)
   22f57:	0f 11 4b 10          	movups %xmm1,0x10(%rbx)
   22f5b:	66 0f 6f 84 24 70 03 	movdqa 0x370(%rsp),%xmm0
   22f62:	00 00 
   22f64:	0f 28 8c 24 80 03 00 	movaps 0x380(%rsp),%xmm1
   22f6b:	00 
   22f6c:	0f 11 49 10          	movups %xmm1,0x10(%rcx)
   22f70:	f3 0f 7f 01          	movdqu %xmm0,(%rcx)
   22f74:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
   22f78:	48 83 c3 20          	add    $0x20,%rbx
   22f7c:	48 83 c5 ff          	add    $0xffffffffffffffff,%rbp
   22f80:	75 b4                	jne    22f36 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4496>
   22f82:	eb 47                	jmp    22fcb <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x452b>
   22f84:	ba 01 00 00 00       	mov    $0x1,%edx
   22f89:	31 c0                	xor    %eax,%eax
   22f8b:	e9 54 01 00 00       	jmpq   230e4 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4644>
   22f90:	48 89 f1             	mov    %rsi,%rcx
   22f93:	48 c1 e1 05          	shl    $0x5,%rcx
   22f97:	48 03 8c 24 48 03 00 	add    0x348(%rsp),%rcx
   22f9e:	00 
   22f9f:	48 8d 7e fe          	lea    -0x2(%rsi),%rdi
   22fa3:	31 d2                	xor    %edx,%edx
   22fa5:	48 39 d7             	cmp    %rdx,%rdi
   22fa8:	0f 84 31 01 00 00    	je     230df <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x463f>
   22fae:	48 8b 29             	mov    (%rcx),%rbp
   22fb1:	48 83 c2 01          	add    $0x1,%rdx
   22fb5:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
   22fb9:	48 39 e8             	cmp    %rbp,%rax
   22fbc:	48 89 e8             	mov    %rbp,%rax
   22fbf:	73 e4                	jae    22fa5 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4505>
   22fc1:	4c 89 c7             	mov    %r8,%rdi
   22fc4:	48 29 d7             	sub    %rdx,%rdi
   22fc7:	48 83 c2 01          	add    $0x1,%rdx
   22fcb:	48 83 fa 09          	cmp    $0x9,%rdx
   22fcf:	0f 87 05 01 00 00    	ja     230da <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x463a>
   22fd5:	48 85 ff             	test   %rdi,%rdi
   22fd8:	0f 84 fc 00 00 00    	je     230da <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x463a>
   22fde:	4c 39 fe             	cmp    %r15,%rsi
   22fe1:	0f 87 5e 0b 00 00    	ja     23b45 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50a5>
   22fe7:	48 89 f9             	mov    %rdi,%rcx
   22fea:	48 c1 e1 05          	shl    $0x5,%rcx
   22fee:	4c 8b 9c 24 c8 01 00 	mov    0x1c8(%rsp),%r11
   22ff5:	00 
   22ff6:	49 29 cb             	sub    %rcx,%r11
   22ff9:	4c 01 e1             	add    %r12,%rcx
   22ffc:	48 8d 47 ff          	lea    -0x1(%rdi),%rax
   23000:	48 89 f2             	mov    %rsi,%rdx
   23003:	48 29 c2             	sub    %rax,%rdx
   23006:	0f 82 45 0b 00 00    	jb     23b51 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50b1>
   2300c:	48 83 fa 02          	cmp    $0x2,%rdx
   23010:	0f 82 a8 00 00 00    	jb     230be <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x461e>
   23016:	48 89 c3             	mov    %rax,%rbx
   23019:	48 c1 e3 05          	shl    $0x5,%rbx
   2301d:	48 89 fd             	mov    %rdi,%rbp
   23020:	48 c1 e5 05          	shl    $0x5,%rbp
   23024:	4d 8b 54 1c 10       	mov    0x10(%r12,%rbx,1),%r10
   23029:	4d 39 54 2c 10       	cmp    %r10,0x10(%r12,%rbp,1)
   2302e:	0f 83 8a 00 00 00    	jae    230be <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x461e>
   23034:	49 89 c5             	mov    %rax,%r13
   23037:	4d 8d 34 1c          	lea    (%r12,%rbx,1),%r14
   2303b:	49 8d 04 2c          	lea    (%r12,%rbp,1),%rax
   2303f:	41 0f 10 06          	movups (%r14),%xmm0
   23043:	0f 29 84 24 90 0c 00 	movaps %xmm0,0xc90(%rsp)
   2304a:	00 
   2304b:	4d 8b 4c 1c 18       	mov    0x18(%r12,%rbx,1),%r9
   23050:	f3 41 0f 6f 04 2c    	movdqu (%r12,%rbp,1),%xmm0
   23056:	41 0f 10 4c 2c 10    	movups 0x10(%r12,%rbp,1),%xmm1
   2305c:	41 0f 11 4e 10       	movups %xmm1,0x10(%r14)
   23061:	f3 41 0f 7f 06       	movdqu %xmm0,(%r14)
   23066:	48 83 fa 03          	cmp    $0x3,%rdx
   2306a:	72 3a                	jb     230a6 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4606>
   2306c:	4d 39 56 50          	cmp    %r10,0x50(%r14)
   23070:	73 34                	jae    230a6 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4606>
   23072:	4c 89 c3             	mov    %r8,%rbx
   23075:	31 ed                	xor    %ebp,%ebp
   23077:	48 89 e8             	mov    %rbp,%rax
   2307a:	f3 0f 6f 44 29 20    	movdqu 0x20(%rcx,%rbp,1),%xmm0
   23080:	0f 10 4c 29 30       	movups 0x30(%rcx,%rbp,1),%xmm1
   23085:	0f 11 4c 29 10       	movups %xmm1,0x10(%rcx,%rbp,1)
   2308a:	f3 0f 7f 04 29       	movdqu %xmm0,(%rcx,%rbp,1)
   2308f:	48 83 c3 ff          	add    $0xffffffffffffffff,%rbx
   23093:	48 39 df             	cmp    %rbx,%rdi
   23096:	74 0b                	je     230a3 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4603>
   23098:	48 8d 68 20          	lea    0x20(%rax),%rbp
   2309c:	4c 39 54 01 50       	cmp    %r10,0x50(%rcx,%rax,1)
   230a1:	72 d4                	jb     23077 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x45d7>
   230a3:	4c 29 d8             	sub    %r11,%rax
   230a6:	66 0f 6f 84 24 90 0c 	movdqa 0xc90(%rsp),%xmm0
   230ad:	00 00 
   230af:	f3 0f 7f 00          	movdqu %xmm0,(%rax)
   230b3:	4c 89 50 10          	mov    %r10,0x10(%rax)
   230b7:	4c 89 48 18          	mov    %r9,0x18(%rax)
   230bb:	4c 89 e8             	mov    %r13,%rax
   230be:	48 85 c0             	test   %rax,%rax
   230c1:	74 21                	je     230e4 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4644>
   230c3:	49 83 c3 20          	add    $0x20,%r11
   230c7:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
   230cb:	48 89 c7             	mov    %rax,%rdi
   230ce:	48 83 fa 0a          	cmp    $0xa,%rdx
   230d2:	0f 82 24 ff ff ff    	jb     22ffc <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x455c>
   230d8:	eb 0a                	jmp    230e4 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4644>
   230da:	48 89 f8             	mov    %rdi,%rax
   230dd:	eb 05                	jmp    230e4 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4644>
   230df:	31 c0                	xor    %eax,%eax
   230e1:	48 89 f2             	mov    %rsi,%rdx
   230e4:	48 8d bc 24 f0 03 00 	lea    0x3f0(%rsp),%rdi
   230eb:	00 
   230ec:	48 89 84 24 b8 02 00 	mov    %rax,0x2b8(%rsp)
   230f3:	00 
   230f4:	48 89 c6             	mov    %rax,%rsi
   230f7:	e8 d4 62 fe ff       	callq  93d0 <alloc::vec::Vec<T>::push>
   230fc:	48 8b 84 24 00 04 00 	mov    0x400(%rsp),%rax
   23103:	00 
   23104:	48 83 f8 02          	cmp    $0x2,%rax
   23108:	0f 82 75 fd ff ff    	jb     22e83 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x43e3>
   2310e:	4c 8b b4 24 f0 03 00 	mov    0x3f0(%rsp),%r14
   23115:	00 
   23116:	4c 89 74 24 68       	mov    %r14,0x68(%rsp)
   2311b:	e9 8d 00 00 00       	jmpq   231ad <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x470d>
   23120:	4c 89 e7             	mov    %r12,%rdi
   23123:	48 89 ee             	mov    %rbp,%rsi
   23126:	4c 8b 74 24 68       	mov    0x68(%rsp),%r14
   2312b:	48 89 cd             	mov    %rcx,%rbp
   2312e:	49 29 f5             	sub    %rsi,%r13
   23131:	49 83 e5 e0          	and    $0xffffffffffffffe0,%r13
   23135:	4c 89 ea             	mov    %r13,%rdx
   23138:	ff 15 c2 2b 02 00    	callq  *0x22bc2(%rip)        # 45d00 <memcpy@GLIBC_2.14>
   2313e:	48 8b 8c 24 e0 00 00 	mov    0xe0(%rsp),%rcx
   23145:	00 
   23146:	48 01 e9             	add    %rbp,%rcx
   23149:	48 8b 84 24 a0 01 00 	mov    0x1a0(%rsp),%rax
   23150:	00 
   23151:	48 8b 54 24 78       	mov    0x78(%rsp),%rdx
   23156:	48 89 02             	mov    %rax,(%rdx)
   23159:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   2315e:	48 89 08             	mov    %rcx,(%rax)
   23161:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   23166:	49 8d 3c 06          	lea    (%r14,%rax,1),%rdi
   2316a:	49 8d 34 06          	lea    (%r14,%rax,1),%rsi
   2316e:	48 83 c6 10          	add    $0x10,%rsi
   23172:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   23177:	48 f7 d2             	not    %rdx
   2317a:	48 03 54 24 28       	add    0x28(%rsp),%rdx
   2317f:	48 c1 e2 04          	shl    $0x4,%rdx
   23183:	ff 15 e7 2c 02 00    	callq  *0x22ce7(%rip)        # 45e70 <memmove@GLIBC_2.2.5>
   23189:	48 8b 84 24 80 00 00 	mov    0x80(%rsp),%rax
   23190:	00 
   23191:	48 89 84 24 00 04 00 	mov    %rax,0x400(%rsp)
   23198:	00 
   23199:	48 83 f8 01          	cmp    $0x1,%rax
   2319d:	4c 8b 64 24 70       	mov    0x70(%rsp),%r12
   231a2:	4c 8b 7c 24 60       	mov    0x60(%rsp),%r15
   231a7:	0f 86 d6 fc ff ff    	jbe    22e83 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x43e3>
   231ad:	48 89 c6             	mov    %rax,%rsi
   231b0:	4c 8d 40 ff          	lea    -0x1(%rax),%r8
   231b4:	4c 89 c5             	mov    %r8,%rbp
   231b7:	48 c1 e5 04          	shl    $0x4,%rbp
   231bb:	49 83 3c 2e 00       	cmpq   $0x0,(%r14,%rbp,1)
   231c0:	74 52                	je     23214 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4774>
   231c2:	48 89 f2             	mov    %rsi,%rdx
   231c5:	48 c1 e2 04          	shl    $0x4,%rdx
   231c9:	4a 8b 5c 32 e8       	mov    -0x18(%rdx,%r14,1),%rbx
   231ce:	49 8b 44 2e 08       	mov    0x8(%r14,%rbp,1),%rax
   231d3:	48 39 c3             	cmp    %rax,%rbx
   231d6:	76 3c                	jbe    23214 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4774>
   231d8:	48 83 fe 02          	cmp    $0x2,%rsi
   231dc:	0f 86 a1 fc ff ff    	jbe    22e83 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x43e3>
   231e2:	48 8d 7e fd          	lea    -0x3(%rsi),%rdi
   231e6:	48 89 f9             	mov    %rdi,%rcx
   231e9:	48 c1 e1 04          	shl    $0x4,%rcx
   231ed:	49 8b 4c 0e 08       	mov    0x8(%r14,%rcx,1),%rcx
   231f2:	48 8d 2c 18          	lea    (%rax,%rbx,1),%rbp
   231f6:	48 39 e9             	cmp    %rbp,%rcx
   231f9:	76 34                	jbe    2322f <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x478f>
   231fb:	48 83 fe 03          	cmp    $0x3,%rsi
   231ff:	0f 86 7e fc ff ff    	jbe    22e83 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x43e3>
   23205:	48 01 cb             	add    %rcx,%rbx
   23208:	4a 39 5c 32 c8       	cmp    %rbx,-0x38(%rdx,%r14,1)
   2320d:	76 20                	jbe    2322f <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x478f>
   2320f:	e9 6f fc ff ff       	jmpq   22e83 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x43e3>
   23214:	48 83 fe 03          	cmp    $0x3,%rsi
   23218:	72 1a                	jb     23234 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4794>
   2321a:	48 8d 7e fd          	lea    -0x3(%rsi),%rdi
   2321e:	48 89 f8             	mov    %rdi,%rax
   23221:	48 c1 e0 04          	shl    $0x4,%rax
   23225:	49 8b 4c 06 08       	mov    0x8(%r14,%rax,1),%rcx
   2322a:	49 8b 44 2e 08       	mov    0x8(%r14,%rbp,1),%rax
   2322f:	48 39 c1             	cmp    %rax,%rcx
   23232:	72 04                	jb     23238 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4798>
   23234:	48 8d 7e fe          	lea    -0x2(%rsi),%rdi
   23238:	4c 8d 4f 01          	lea    0x1(%rdi),%r9
   2323c:	4c 39 ce             	cmp    %r9,%rsi
   2323f:	0f 86 62 08 00 00    	jbe    23aa7 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5007>
   23245:	48 39 fe             	cmp    %rdi,%rsi
   23248:	0f 86 6e 08 00 00    	jbe    23abc <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x501c>
   2324e:	4c 89 c9             	mov    %r9,%rcx
   23251:	48 c1 e1 04          	shl    $0x4,%rcx
   23255:	49 8b 04 0e          	mov    (%r14,%rcx,1),%rax
   23259:	48 c1 e7 04          	shl    $0x4,%rdi
   2325d:	49 8b 54 3e 08       	mov    0x8(%r14,%rdi,1),%rdx
   23262:	49 8b 1c 3e          	mov    (%r14,%rdi,1),%rbx
   23266:	48 01 d3             	add    %rdx,%rbx
   23269:	48 89 dd             	mov    %rbx,%rbp
   2326c:	48 29 c5             	sub    %rax,%rbp
   2326f:	0f 82 59 08 00 00    	jb     23ace <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x502e>
   23275:	4c 39 fb             	cmp    %r15,%rbx
   23278:	0f 87 65 08 00 00    	ja     23ae3 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5043>
   2327e:	48 89 94 24 e0 00 00 	mov    %rdx,0xe0(%rsp)
   23285:	00 
   23286:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
   2328b:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
   23290:	4c 89 84 24 80 00 00 	mov    %r8,0x80(%rsp)
   23297:	00 
   23298:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   2329d:	49 8b 54 0e 08       	mov    0x8(%r14,%rcx,1),%rdx
   232a2:	49 8d 0c 3e          	lea    (%r14,%rdi,1),%rcx
   232a6:	48 89 4c 24 78       	mov    %rcx,0x78(%rsp)
   232ab:	49 8d 4c 3e 08       	lea    0x8(%r14,%rdi,1),%rcx
   232b0:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   232b5:	48 89 84 24 a0 01 00 	mov    %rax,0x1a0(%rsp)
   232bc:	00 
   232bd:	49 89 c7             	mov    %rax,%r15
   232c0:	49 c1 e7 05          	shl    $0x5,%r15
   232c4:	4d 01 e7             	add    %r12,%r15
   232c7:	49 89 d5             	mov    %rdx,%r13
   232ca:	49 c1 e5 05          	shl    $0x5,%r13
   232ce:	4f 8d 24 2f          	lea    (%r15,%r13,1),%r12
   232d2:	48 c1 e3 05          	shl    $0x5,%rbx
   232d6:	49 89 ee             	mov    %rbp,%r14
   232d9:	49 29 d6             	sub    %rdx,%r14
   232dc:	48 89 94 24 a8 00 00 	mov    %rdx,0xa8(%rsp)
   232e3:	00 
   232e4:	49 39 d6             	cmp    %rdx,%r14
   232e7:	0f 83 8c 00 00 00    	jae    23379 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x48d9>
   232ed:	4d 89 f5             	mov    %r14,%r13
   232f0:	49 c1 e5 05          	shl    $0x5,%r13
   232f4:	48 8b 6c 24 40       	mov    0x40(%rsp),%rbp
   232f9:	48 89 ef             	mov    %rbp,%rdi
   232fc:	4c 89 e6             	mov    %r12,%rsi
   232ff:	4c 89 ea             	mov    %r13,%rdx
   23302:	ff 15 f8 29 02 00    	callq  *0x229f8(%rip)        # 45d00 <memcpy@GLIBC_2.14>
   23308:	49 01 ed             	add    %rbp,%r13
   2330b:	48 8b 84 24 a8 00 00 	mov    0xa8(%rsp),%rax
   23312:	00 
   23313:	48 89 c1             	mov    %rax,%rcx
   23316:	48 85 c0             	test   %rax,%rax
   23319:	0f 8e 01 fe ff ff    	jle    23120 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4680>
   2331f:	4d 85 f6             	test   %r14,%r14
   23322:	0f 8e f8 fd ff ff    	jle    23120 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4680>
   23328:	48 03 9c 24 08 01 00 	add    0x108(%rsp),%rbx
   2332f:	00 
   23330:	4c 8b 74 24 68       	mov    0x68(%rsp),%r14
   23335:	49 8b 45 f0          	mov    -0x10(%r13),%rax
   23339:	49 3b 44 24 f0       	cmp    -0x10(%r12),%rax
   2333e:	72 09                	jb     23349 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x48a9>
   23340:	49 83 c5 e0          	add    $0xffffffffffffffe0,%r13
   23344:	4c 89 e8             	mov    %r13,%rax
   23347:	eb 07                	jmp    23350 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x48b0>
   23349:	49 83 c4 e0          	add    $0xffffffffffffffe0,%r12
   2334d:	4c 89 e0             	mov    %r12,%rax
   23350:	f3 0f 6f 00          	movdqu (%rax),%xmm0
   23354:	0f 10 48 10          	movups 0x10(%rax),%xmm1
   23358:	0f 11 4b 10          	movups %xmm1,0x10(%rbx)
   2335c:	f3 0f 7f 03          	movdqu %xmm0,(%rbx)
   23360:	4d 39 e7             	cmp    %r12,%r15
   23363:	73 09                	jae    2336e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x48ce>
   23365:	48 83 c3 e0          	add    $0xffffffffffffffe0,%rbx
   23369:	49 39 ed             	cmp    %rbp,%r13
   2336c:	77 c7                	ja     23335 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4895>
   2336e:	4c 89 e7             	mov    %r12,%rdi
   23371:	48 89 ee             	mov    %rbp,%rsi
   23374:	e9 b2 fd ff ff       	jmpq   2312b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x468b>
   23379:	4c 8b 74 24 40       	mov    0x40(%rsp),%r14
   2337e:	4c 89 f7             	mov    %r14,%rdi
   23381:	4c 89 fe             	mov    %r15,%rsi
   23384:	4c 89 ea             	mov    %r13,%rdx
   23387:	ff 15 73 29 02 00    	callq  *0x22973(%rip)        # 45d00 <memcpy@GLIBC_2.14>
   2338d:	4d 01 f5             	add    %r14,%r13
   23390:	48 8b 84 24 a8 00 00 	mov    0xa8(%rsp),%rax
   23397:	00 
   23398:	48 85 c0             	test   %rax,%rax
   2339b:	7e 7b                	jle    23418 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4978>
   2339d:	48 39 c5             	cmp    %rax,%rbp
   233a0:	4c 8b 74 24 68       	mov    0x68(%rsp),%r14
   233a5:	48 89 c5             	mov    %rax,%rbp
   233a8:	7e 61                	jle    2340b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x496b>
   233aa:	48 03 5c 24 70       	add    0x70(%rsp),%rbx
   233af:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   233b4:	48 89 c6             	mov    %rax,%rsi
   233b7:	49 8b 4c 24 10       	mov    0x10(%r12),%rcx
   233bc:	48 3b 48 10          	cmp    0x10(%rax),%rcx
   233c0:	73 0d                	jae    233cf <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x492f>
   233c2:	49 8d 4c 24 20       	lea    0x20(%r12),%rcx
   233c7:	48 89 c2             	mov    %rax,%rdx
   233ca:	4c 89 e0             	mov    %r12,%rax
   233cd:	eb 0a                	jmp    233d9 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4939>
   233cf:	48 8d 70 20          	lea    0x20(%rax),%rsi
   233d3:	48 89 f2             	mov    %rsi,%rdx
   233d6:	4c 89 e1             	mov    %r12,%rcx
   233d9:	49 8d 7f 20          	lea    0x20(%r15),%rdi
   233dd:	f3 0f 6f 00          	movdqu (%rax),%xmm0
   233e1:	0f 10 48 10          	movups 0x10(%rax),%xmm1
   233e5:	41 0f 11 4f 10       	movups %xmm1,0x10(%r15)
   233ea:	f3 41 0f 7f 07       	movdqu %xmm0,(%r15)
   233ef:	4c 39 ea             	cmp    %r13,%rdx
   233f2:	0f 83 36 fd ff ff    	jae    2312e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x468e>
   233f8:	48 89 d0             	mov    %rdx,%rax
   233fb:	49 89 ff             	mov    %rdi,%r15
   233fe:	49 89 cc             	mov    %rcx,%r12
   23401:	48 39 d9             	cmp    %rbx,%rcx
   23404:	72 b1                	jb     233b7 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4917>
   23406:	e9 23 fd ff ff       	jmpq   2312e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x468e>
   2340b:	4c 89 ff             	mov    %r15,%rdi
   2340e:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
   23413:	e9 16 fd ff ff       	jmpq   2312e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x468e>
   23418:	4c 89 ff             	mov    %r15,%rdi
   2341b:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
   23420:	4c 8b 74 24 68       	mov    0x68(%rsp),%r14
   23425:	48 89 c5             	mov    %rax,%rbp
   23428:	e9 01 fd ff ff       	jmpq   2312e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x468e>
   2342d:	48 8b b4 24 f8 03 00 	mov    0x3f8(%rsp),%rsi
   23434:	00 
   23435:	48 85 f6             	test   %rsi,%rsi
   23438:	74 1e                	je     23458 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x49b8>
   2343a:	48 8b bc 24 f0 03 00 	mov    0x3f0(%rsp),%rdi
   23441:	00 
   23442:	48 85 ff             	test   %rdi,%rdi
   23445:	74 11                	je     23458 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x49b8>
   23447:	48 c1 e6 04          	shl    $0x4,%rsi
   2344b:	74 0b                	je     23458 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x49b8>
   2344d:	ba 08 00 00 00       	mov    $0x8,%edx
   23452:	ff 15 a8 27 02 00    	callq  *0x227a8(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   23458:	48 8b b4 24 c0 01 00 	mov    0x1c0(%rsp),%rsi
   2345f:	00 
   23460:	48 85 f6             	test   %rsi,%rsi
   23463:	74 10                	je     23475 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x49d5>
   23465:	ba 08 00 00 00       	mov    $0x8,%edx
   2346a:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   2346f:	ff 15 8b 27 02 00    	callq  *0x2278b(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   23475:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   2347a:	4c 8b ac 24 58 03 00 	mov    0x358(%rsp),%r13
   23481:	00 
   23482:	48 8b b4 24 68 03 00 	mov    0x368(%rsp),%rsi
   23489:	00 
   2348a:	48 85 f6             	test   %rsi,%rsi
   2348d:	74 54                	je     234e3 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4a43>
   2348f:	48 c1 e6 05          	shl    $0x5,%rsi
   23493:	48 83 c6 e0          	add    $0xffffffffffffffe0,%rsi
   23497:	48 89 f0             	mov    %rsi,%rax
   2349a:	48 c1 e8 05          	shr    $0x5,%rax
   2349e:	48 83 c0 01          	add    $0x1,%rax
   234a2:	89 c3                	mov    %eax,%ebx
   234a4:	83 e3 03             	and    $0x3,%ebx
   234a7:	48 83 fe 60          	cmp    $0x60,%rsi
   234ab:	0f 83 40 01 00 00    	jae    235f1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4b51>
   234b1:	31 c9                	xor    %ecx,%ecx
   234b3:	4c 89 ea             	mov    %r13,%rdx
   234b6:	48 85 db             	test   %rbx,%rbx
   234b9:	74 1e                	je     234d9 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4a39>
   234bb:	48 83 c2 18          	add    $0x18,%rdx
   234bf:	48 f7 db             	neg    %rbx
   234c2:	48 8b 32             	mov    (%rdx),%rsi
   234c5:	48 39 f1             	cmp    %rsi,%rcx
   234c8:	48 0f 46 ce          	cmovbe %rsi,%rcx
   234cc:	48 89 4a f0          	mov    %rcx,-0x10(%rdx)
   234d0:	48 83 c2 20          	add    $0x20,%rdx
   234d4:	48 ff c3             	inc    %rbx
   234d7:	75 e9                	jne    234c2 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4a22>
   234d9:	48 8b ac 24 68 03 00 	mov    0x368(%rsp),%rbp
   234e0:	00 
   234e1:	eb 02                	jmp    234e5 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4a45>
   234e3:	31 ed                	xor    %ebp,%ebp
   234e5:	4c 8b b4 24 60 03 00 	mov    0x360(%rsp),%r14
   234ec:	00 
   234ed:	0f 10 84 24 c0 02 00 	movups 0x2c0(%rsp),%xmm0
   234f4:	00 
   234f5:	0f 29 84 24 80 06 00 	movaps %xmm0,0x680(%rsp)
   234fc:	00 
   234fd:	48 8b 84 24 d0 02 00 	mov    0x2d0(%rsp),%rax
   23504:	00 
   23505:	48 89 84 24 90 06 00 	mov    %rax,0x690(%rsp)
   2350c:	00 
   2350d:	4c 8d bc 24 28 0e 00 	lea    0xe28(%rsp),%r15
   23514:	00 
   23515:	48 8d b4 24 f0 06 00 	lea    0x6f0(%rsp),%rsi
   2351c:	00 
   2351d:	48 8b 1d dc 27 02 00 	mov    0x227dc(%rip),%rbx        # 45d00 <memcpy@GLIBC_2.14>
   23524:	ba d0 00 00 00       	mov    $0xd0,%edx
   23529:	4c 89 ff             	mov    %r15,%rdi
   2352c:	ff d3                	callq  *%rbx
   2352e:	48 89 ac 24 f0 03 00 	mov    %rbp,0x3f0(%rsp)
   23535:	00 
   23536:	0f 28 84 24 80 06 00 	movaps 0x680(%rsp),%xmm0
   2353d:	00 
   2353e:	0f 11 84 24 f8 03 00 	movups %xmm0,0x3f8(%rsp)
   23545:	00 
   23546:	48 8b 84 24 90 06 00 	mov    0x690(%rsp),%rax
   2354d:	00 
   2354e:	48 89 84 24 08 04 00 	mov    %rax,0x408(%rsp)
   23555:	00 
   23556:	48 8d bc 24 10 04 00 	lea    0x410(%rsp),%rdi
   2355d:	00 
   2355e:	ba d0 00 00 00       	mov    $0xd0,%edx
   23563:	4c 89 fe             	mov    %r15,%rsi
   23566:	ff d3                	callq  *%rbx
   23568:	4d 85 ed             	test   %r13,%r13
   2356b:	0f 84 63 02 00 00    	je     237d4 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4d34>
   23571:	48 8d bc 24 f8 0e 00 	lea    0xef8(%rsp),%rdi
   23578:	00 
   23579:	48 8d b4 24 f0 03 00 	lea    0x3f0(%rsp),%rsi
   23580:	00 
   23581:	ba f0 00 00 00       	mov    $0xf0,%edx
   23586:	ff 15 74 27 02 00    	callq  *0x22774(%rip)        # 45d00 <memcpy@GLIBC_2.14>
   2358c:	0f 10 84 24 f8 05 00 	movups 0x5f8(%rsp),%xmm0
   23593:	00 
   23594:	0f 10 8c 24 08 06 00 	movups 0x608(%rsp),%xmm1
   2359b:	00 
   2359c:	0f 10 94 24 18 06 00 	movups 0x618(%rsp),%xmm2
   235a3:	00 
   235a4:	0f 10 9c 24 28 06 00 	movups 0x628(%rsp),%xmm3
   235ab:	00 
   235ac:	0f 29 84 24 40 0a 00 	movaps %xmm0,0xa40(%rsp)
   235b3:	00 
   235b4:	0f 29 8c 24 50 0a 00 	movaps %xmm1,0xa50(%rsp)
   235bb:	00 
   235bc:	0f 29 94 24 60 0a 00 	movaps %xmm2,0xa60(%rsp)
   235c3:	00 
   235c4:	0f 29 9c 24 70 0a 00 	movaps %xmm3,0xa70(%rsp)
   235cb:	00 
   235cc:	0f 10 84 24 38 06 00 	movups 0x638(%rsp),%xmm0
   235d3:	00 
   235d4:	0f 29 84 24 80 0a 00 	movaps %xmm0,0xa80(%rsp)
   235db:	00 
   235dc:	48 8b 84 24 48 06 00 	mov    0x648(%rsp),%rax
   235e3:	00 
   235e4:	48 89 84 24 90 0a 00 	mov    %rax,0xa90(%rsp)
   235eb:	00 
   235ec:	e9 1b 02 00 00       	jmpq   2380c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4d6c>
   235f1:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
   235f5:	48 f7 d8             	neg    %rax
   235f8:	31 c9                	xor    %ecx,%ecx
   235fa:	4c 89 ea             	mov    %r13,%rdx
   235fd:	eb 12                	jmp    23611 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4b71>
   235ff:	48 89 4a 68          	mov    %rcx,0x68(%rdx)
   23603:	48 83 ea 80          	sub    $0xffffffffffffff80,%rdx
   23607:	48 83 c0 04          	add    $0x4,%rax
   2360b:	0f 84 a5 fe ff ff    	je     234b6 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4a16>
   23611:	48 8b 6a 18          	mov    0x18(%rdx),%rbp
   23615:	48 8b 7a 38          	mov    0x38(%rdx),%rdi
   23619:	48 39 e9             	cmp    %rbp,%rcx
   2361c:	77 2b                	ja     23649 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4ba9>
   2361e:	48 89 e9             	mov    %rbp,%rcx
   23621:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   23625:	48 39 f9             	cmp    %rdi,%rcx
   23628:	76 28                	jbe    23652 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4bb2>
   2362a:	48 89 4a 28          	mov    %rcx,0x28(%rdx)
   2362e:	48 8b 7a 58          	mov    0x58(%rdx),%rdi
   23632:	48 39 f9             	cmp    %rdi,%rcx
   23635:	77 2b                	ja     23662 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4bc2>
   23637:	48 89 f9             	mov    %rdi,%rcx
   2363a:	48 89 4a 48          	mov    %rcx,0x48(%rdx)
   2363e:	48 8b 7a 78          	mov    0x78(%rdx),%rdi
   23642:	48 39 f9             	cmp    %rdi,%rcx
   23645:	77 b8                	ja     235ff <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4b5f>
   23647:	eb 26                	jmp    2366f <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4bcf>
   23649:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   2364d:	48 39 f9             	cmp    %rdi,%rcx
   23650:	77 d8                	ja     2362a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4b8a>
   23652:	48 89 f9             	mov    %rdi,%rcx
   23655:	48 89 4a 28          	mov    %rcx,0x28(%rdx)
   23659:	48 8b 7a 58          	mov    0x58(%rdx),%rdi
   2365d:	48 39 f9             	cmp    %rdi,%rcx
   23660:	76 d5                	jbe    23637 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4b97>
   23662:	48 89 4a 48          	mov    %rcx,0x48(%rdx)
   23666:	48 8b 7a 78          	mov    0x78(%rdx),%rdi
   2366a:	48 39 f9             	cmp    %rdi,%rcx
   2366d:	77 90                	ja     235ff <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4b5f>
   2366f:	48 89 f9             	mov    %rdi,%rcx
   23672:	eb 8b                	jmp    235ff <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4b5f>
   23674:	49 8b 7c 05 18       	mov    0x18(%r13,%rax,1),%rdi
   23679:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   2367e:	48 29 f9             	sub    %rdi,%rcx
   23681:	72 27                	jb     236aa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   23683:	49 8b 74 05 20       	mov    0x20(%r13,%rax,1),%rsi
   23688:	48 39 f1             	cmp    %rsi,%rcx
   2368b:	72 1d                	jb     236aa <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c0a>
   2368d:	48 03 7c 24 58       	add    0x58(%rsp),%rdi
   23692:	ff 15 00 24 02 00    	callq  *0x22400(%rip)        # 45a98 <_GLOBAL_OFFSET_TABLE_+0x108>
   23698:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   2369f:	00 
   236a0:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
   236a5:	e9 b8 b7 ff ff       	jmpq   1ee62 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x3c2>
   236aa:	48 8b 84 24 a0 0c 00 	mov    0xca0(%rsp),%rax
   236b1:	00 
   236b2:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
   236b9:	00 
   236ba:	66 0f 6f 84 24 90 0c 	movdqa 0xc90(%rsp),%xmm0
   236c1:	00 00 
   236c3:	66 0f 7f 84 24 c0 00 	movdqa %xmm0,0xc0(%rsp)
   236ca:	00 00 
   236cc:	48 8b 84 24 50 03 00 	mov    0x350(%rsp),%rax
   236d3:	00 
   236d4:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   236db:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   236e0:	4c 8b b4 24 d0 01 00 	mov    0x1d0(%rsp),%r14
   236e7:	00 
   236e8:	48 8b 84 24 e0 01 00 	mov    0x1e0(%rsp),%rax
   236ef:	00 
   236f0:	48 85 c0             	test   %rax,%rax
   236f3:	0f 84 66 03 00 00    	je     23a5f <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4fbf>
   236f9:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
   236fd:	49 8d 2c c6          	lea    (%r14,%rax,8),%rbp
   23701:	4c 8d 3d 48 1c fe ff 	lea    -0x1e3b8(%rip),%r15        # 5350 <__rust_dealloc>
   23708:	4c 89 f3             	mov    %r14,%rbx
   2370b:	e9 0d 00 00 00       	jmpq   2371d <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c7d>
   23710:	48 83 c3 18          	add    $0x18,%rbx
   23714:	48 39 eb             	cmp    %rbp,%rbx
   23717:	0f 84 42 03 00 00    	je     23a5f <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4fbf>
   2371d:	48 8b 3b             	mov    (%rbx),%rdi
   23720:	48 85 ff             	test   %rdi,%rdi
   23723:	74 eb                	je     23710 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c70>
   23725:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   23729:	48 85 f6             	test   %rsi,%rsi
   2372c:	74 e2                	je     23710 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c70>
   2372e:	ba 01 00 00 00       	mov    $0x1,%edx
   23733:	41 ff d7             	callq  *%r15
   23736:	eb d8                	jmp    23710 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c70>
   23738:	48 8d bc 24 d8 0a 00 	lea    0xad8(%rsp),%rdi
   2373f:	00 
   23740:	e8 2b 26 fe ff       	callq  5d70 <core::ptr::drop_in_place>
   23745:	83 bc 24 f8 0b 00 00 	cmpl   $0x2e,0xbf8(%rsp)
   2374c:	2e 
   2374d:	74 0d                	je     2375c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4cbc>
   2374f:	48 8d bc 24 50 0b 00 	lea    0xb50(%rsp),%rdi
   23756:	00 
   23757:	e8 64 31 fe ff       	callq  68c0 <core::ptr::drop_in_place>
   2375c:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   23761:	48 8d bc 24 c0 02 00 	lea    0x2c0(%rsp),%rdi
   23768:	00 
   23769:	e8 22 2d fe ff       	callq  6490 <core::ptr::drop_in_place>
   2376e:	48 8b b4 24 60 03 00 	mov    0x360(%rsp),%rsi
   23775:	00 
   23776:	48 85 f6             	test   %rsi,%rsi
   23779:	74 1e                	je     23799 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4cf9>
   2377b:	48 8b bc 24 58 03 00 	mov    0x358(%rsp),%rdi
   23782:	00 
   23783:	48 85 ff             	test   %rdi,%rdi
   23786:	74 11                	je     23799 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4cf9>
   23788:	48 c1 e6 05          	shl    $0x5,%rsi
   2378c:	74 0b                	je     23799 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4cf9>
   2378e:	ba 08 00 00 00       	mov    $0x8,%edx
   23793:	ff 15 67 24 02 00    	callq  *0x22467(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   23799:	48 8b 84 24 90 06 00 	mov    0x690(%rsp),%rax
   237a0:	00 
   237a1:	48 89 84 24 08 04 00 	mov    %rax,0x408(%rsp)
   237a8:	00 
   237a9:	0f 10 84 24 80 06 00 	movups 0x680(%rsp),%xmm0
   237b0:	00 
   237b1:	0f 11 84 24 f8 03 00 	movups %xmm0,0x3f8(%rsp)
   237b8:	00 
   237b9:	48 8d bc 24 10 04 00 	lea    0x410(%rsp),%rdi
   237c0:	00 
   237c1:	48 8d b4 24 28 0e 00 	lea    0xe28(%rsp),%rsi
   237c8:	00 
   237c9:	ba d0 00 00 00       	mov    $0xd0,%edx
   237ce:	ff 15 2c 25 02 00    	callq  *0x2252c(%rip)        # 45d00 <memcpy@GLIBC_2.14>
   237d4:	48 8b 84 24 40 06 00 	mov    0x640(%rsp),%rax
   237db:	00 
   237dc:	48 85 c0             	test   %rax,%rax
   237df:	74 28                	je     23809 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4d69>
   237e1:	48 8b bc 24 38 06 00 	mov    0x638(%rsp),%rdi
   237e8:	00 
   237e9:	45 31 ed             	xor    %r13d,%r13d
   237ec:	48 85 ff             	test   %rdi,%rdi
   237ef:	74 1b                	je     2380c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4d6c>
   237f1:	48 c1 e0 03          	shl    $0x3,%rax
   237f5:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
   237f9:	48 85 f6             	test   %rsi,%rsi
   237fc:	74 0e                	je     2380c <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4d6c>
   237fe:	ba 08 00 00 00       	mov    $0x8,%edx
   23803:	ff 15 f7 23 02 00    	callq  *0x223f7(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   23809:	45 31 ed             	xor    %r13d,%r13d
   2380c:	48 8d bc 24 f0 03 00 	lea    0x3f0(%rsp),%rdi
   23813:	00 
   23814:	48 8d b4 24 f8 0e 00 	lea    0xef8(%rsp),%rsi
   2381b:	00 
   2381c:	ba f0 00 00 00       	mov    $0xf0,%edx
   23821:	ff 15 d9 24 02 00    	callq  *0x224d9(%rip)        # 45d00 <memcpy@GLIBC_2.14>
   23827:	0f 28 84 24 40 0a 00 	movaps 0xa40(%rsp),%xmm0
   2382e:	00 
   2382f:	0f 28 8c 24 50 0a 00 	movaps 0xa50(%rsp),%xmm1
   23836:	00 
   23837:	0f 28 94 24 60 0a 00 	movaps 0xa60(%rsp),%xmm2
   2383e:	00 
   2383f:	0f 28 9c 24 70 0a 00 	movaps 0xa70(%rsp),%xmm3
   23846:	00 
   23847:	0f 29 84 24 a0 0a 00 	movaps %xmm0,0xaa0(%rsp)
   2384e:	00 
   2384f:	0f 29 8c 24 b0 0a 00 	movaps %xmm1,0xab0(%rsp)
   23856:	00 
   23857:	0f 29 94 24 c0 0a 00 	movaps %xmm2,0xac0(%rsp)
   2385e:	00 
   2385f:	0f 29 9c 24 d0 0a 00 	movaps %xmm3,0xad0(%rsp)
   23866:	00 
   23867:	66 0f 6f 84 24 80 0a 	movdqa 0xa80(%rsp),%xmm0
   2386e:	00 00 
   23870:	66 0f 7f 84 24 e0 0a 	movdqa %xmm0,0xae0(%rsp)
   23877:	00 00 
   23879:	48 8b 84 24 90 0a 00 	mov    0xa90(%rsp),%rax
   23880:	00 
   23881:	48 89 84 24 f0 0a 00 	mov    %rax,0xaf0(%rsp)
   23888:	00 
   23889:	4d 85 ed             	test   %r13,%r13
   2388c:	0f 84 a5 01 00 00    	je     23a37 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4f97>
   23892:	48 8d 9c 24 d8 10 00 	lea    0x10d8(%rsp),%rbx
   23899:	00 
   2389a:	48 8d b4 24 f0 03 00 	lea    0x3f0(%rsp),%rsi
   238a1:	00 
   238a2:	4c 8b 3d 57 24 02 00 	mov    0x22457(%rip),%r15        # 45d00 <memcpy@GLIBC_2.14>
   238a9:	ba f0 00 00 00       	mov    $0xf0,%edx
   238ae:	48 89 df             	mov    %rbx,%rdi
   238b1:	41 ff d7             	callq  *%r15
   238b4:	0f 28 84 24 a0 0a 00 	movaps 0xaa0(%rsp),%xmm0
   238bb:	00 
   238bc:	0f 28 8c 24 b0 0a 00 	movaps 0xab0(%rsp),%xmm1
   238c3:	00 
   238c4:	0f 28 94 24 c0 0a 00 	movaps 0xac0(%rsp),%xmm2
   238cb:	00 
   238cc:	0f 28 9c 24 d0 0a 00 	movaps 0xad0(%rsp),%xmm3
   238d3:	00 
   238d4:	0f 29 84 24 e0 09 00 	movaps %xmm0,0x9e0(%rsp)
   238db:	00 
   238dc:	0f 29 8c 24 f0 09 00 	movaps %xmm1,0x9f0(%rsp)
   238e3:	00 
   238e4:	0f 29 94 24 00 0a 00 	movaps %xmm2,0xa00(%rsp)
   238eb:	00 
   238ec:	0f 29 9c 24 10 0a 00 	movaps %xmm3,0xa10(%rsp)
   238f3:	00 
   238f4:	0f 28 84 24 e0 0a 00 	movaps 0xae0(%rsp),%xmm0
   238fb:	00 
   238fc:	0f 29 84 24 20 0a 00 	movaps %xmm0,0xa20(%rsp)
   23903:	00 
   23904:	48 8b 84 24 f0 0a 00 	mov    0xaf0(%rsp),%rax
   2390b:	00 
   2390c:	48 89 84 24 30 0a 00 	mov    %rax,0xa30(%rsp)
   23913:	00 
   23914:	48 8d ac 24 e8 0f 00 	lea    0xfe8(%rsp),%rbp
   2391b:	00 
   2391c:	ba f0 00 00 00       	mov    $0xf0,%edx
   23921:	48 89 ef             	mov    %rbp,%rdi
   23924:	48 89 de             	mov    %rbx,%rsi
   23927:	41 ff d7             	callq  *%r15
   2392a:	0f 28 84 24 e0 09 00 	movaps 0x9e0(%rsp),%xmm0
   23931:	00 
   23932:	0f 28 8c 24 f0 09 00 	movaps 0x9f0(%rsp),%xmm1
   23939:	00 
   2393a:	0f 28 94 24 00 0a 00 	movaps 0xa00(%rsp),%xmm2
   23941:	00 
   23942:	0f 28 9c 24 10 0a 00 	movaps 0xa10(%rsp),%xmm3
   23949:	00 
   2394a:	0f 29 84 24 80 09 00 	movaps %xmm0,0x980(%rsp)
   23951:	00 
   23952:	0f 29 8c 24 90 09 00 	movaps %xmm1,0x990(%rsp)
   23959:	00 
   2395a:	0f 29 94 24 a0 09 00 	movaps %xmm2,0x9a0(%rsp)
   23961:	00 
   23962:	0f 29 9c 24 b0 09 00 	movaps %xmm3,0x9b0(%rsp)
   23969:	00 
   2396a:	0f 28 84 24 20 0a 00 	movaps 0xa20(%rsp),%xmm0
   23971:	00 
   23972:	0f 29 84 24 c0 09 00 	movaps %xmm0,0x9c0(%rsp)
   23979:	00 
   2397a:	48 8b 84 24 30 0a 00 	mov    0xa30(%rsp),%rax
   23981:	00 
   23982:	48 89 84 24 d0 09 00 	mov    %rax,0x9d0(%rsp)
   23989:	00 
   2398a:	48 8b 9c 24 50 03 00 	mov    0x350(%rsp),%rbx
   23991:	00 
   23992:	4c 89 2b             	mov    %r13,(%rbx)
   23995:	4c 89 73 08          	mov    %r14,0x8(%rbx)
   23999:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
   2399d:	ba f0 00 00 00       	mov    $0xf0,%edx
   239a2:	48 89 ee             	mov    %rbp,%rsi
   239a5:	41 ff d7             	callq  *%r15
   239a8:	0f 28 84 24 80 09 00 	movaps 0x980(%rsp),%xmm0
   239af:	00 
   239b0:	0f 28 8c 24 90 09 00 	movaps 0x990(%rsp),%xmm1
   239b7:	00 
   239b8:	0f 28 94 24 a0 09 00 	movaps 0x9a0(%rsp),%xmm2
   239bf:	00 
   239c0:	0f 28 9c 24 b0 09 00 	movaps 0x9b0(%rsp),%xmm3
   239c7:	00 
   239c8:	0f 11 83 00 01 00 00 	movups %xmm0,0x100(%rbx)
   239cf:	0f 11 8b 10 01 00 00 	movups %xmm1,0x110(%rbx)
   239d6:	0f 11 93 20 01 00 00 	movups %xmm2,0x120(%rbx)
   239dd:	0f 11 9b 30 01 00 00 	movups %xmm3,0x130(%rbx)
   239e4:	0f 28 84 24 c0 09 00 	movaps 0x9c0(%rsp),%xmm0
   239eb:	00 
   239ec:	0f 11 83 40 01 00 00 	movups %xmm0,0x140(%rbx)
   239f3:	48 8b 84 24 d0 09 00 	mov    0x9d0(%rsp),%rax
   239fa:	00 
   239fb:	48 89 83 50 01 00 00 	mov    %rax,0x150(%rbx)
   23a02:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   23a07:	48 89 83 58 01 00 00 	mov    %rax,0x158(%rbx)
   23a0e:	4c 89 a3 60 01 00 00 	mov    %r12,0x160(%rbx)
   23a15:	48 8b 84 24 e0 01 00 	mov    0x1e0(%rsp),%rax
   23a1c:	00 
   23a1d:	48 89 83 78 01 00 00 	mov    %rax,0x178(%rbx)
   23a24:	f3 0f 6f 84 24 d0 01 	movdqu 0x1d0(%rsp),%xmm0
   23a2b:	00 00 
   23a2d:	f3 0f 7f 83 68 01 00 	movdqu %xmm0,0x168(%rbx)
   23a34:	00 
   23a35:	eb 5e                	jmp    23a95 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4ff5>
   23a37:	48 8b 84 24 50 03 00 	mov    0x350(%rsp),%rax
   23a3e:	00 
   23a3f:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   23a46:	4c 8b b4 24 d0 01 00 	mov    0x1d0(%rsp),%r14
   23a4d:	00 
   23a4e:	48 8b 84 24 e0 01 00 	mov    0x1e0(%rsp),%rax
   23a55:	00 
   23a56:	48 85 c0             	test   %rax,%rax
   23a59:	0f 85 9a fc ff ff    	jne    236f9 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4c59>
   23a5f:	48 8b 84 24 d8 01 00 	mov    0x1d8(%rsp),%rax
   23a66:	00 
   23a67:	48 85 c0             	test   %rax,%rax
   23a6a:	74 1b                	je     23a87 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4fe7>
   23a6c:	48 c1 e0 03          	shl    $0x3,%rax
   23a70:	48 8d 34 40          	lea    (%rax,%rax,2),%rsi
   23a74:	48 85 f6             	test   %rsi,%rsi
   23a77:	74 0e                	je     23a87 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x4fe7>
   23a79:	ba 08 00 00 00       	mov    $0x8,%edx
   23a7e:	4c 89 f7             	mov    %r14,%rdi
   23a81:	ff 15 79 21 02 00    	callq  *0x22179(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   23a87:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
   23a8c:	4c 89 e6             	mov    %r12,%rsi
   23a8f:	ff 15 93 23 02 00    	callq  *0x22393(%rip)        # 45e28 <munmap@GLIBC_2.2.5>
   23a95:	48 81 c4 c8 11 00 00 	add    $0x11c8,%rsp
   23a9c:	5b                   	pop    %rbx
   23a9d:	41 5c                	pop    %r12
   23a9f:	41 5d                	pop    %r13
   23aa1:	41 5e                	pop    %r14
   23aa3:	41 5f                	pop    %r15
   23aa5:	5d                   	pop    %rbp
   23aa6:	c3                   	retq   
   23aa7:	48 8d 15 72 fe 01 00 	lea    0x1fe72(%rip),%rdx        # 43920 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3c8>
   23aae:	4c 89 cf             	mov    %r9,%rdi
   23ab1:	ff 15 e1 21 02 00    	callq  *0x221e1(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   23ab7:	e9 a5 00 00 00       	jmpq   23b61 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50c1>
   23abc:	48 8d 15 75 fe 01 00 	lea    0x1fe75(%rip),%rdx        # 43938 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3e0>
   23ac3:	ff 15 cf 21 02 00    	callq  *0x221cf(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   23ac9:	e9 93 00 00 00       	jmpq   23b61 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50c1>
   23ace:	48 8d 15 7b fe 01 00 	lea    0x1fe7b(%rip),%rdx        # 43950 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3f8>
   23ad5:	48 89 c7             	mov    %rax,%rdi
   23ad8:	48 89 de             	mov    %rbx,%rsi
   23adb:	ff 15 c7 23 02 00    	callq  *0x223c7(%rip)        # 45ea8 <_GLOBAL_OFFSET_TABLE_+0x518>
   23ae1:	eb 7e                	jmp    23b61 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50c1>
   23ae3:	48 8d 15 66 fe 01 00 	lea    0x1fe66(%rip),%rdx        # 43950 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3f8>
   23aea:	48 89 df             	mov    %rbx,%rdi
   23aed:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
   23af2:	ff 15 38 1f 02 00    	callq  *0x21f38(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   23af8:	eb 67                	jmp    23b61 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50c1>
   23afa:	48 8d 15 d7 fd 01 00 	lea    0x1fdd7(%rip),%rdx        # 438d8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x380>
   23b01:	ff 15 f1 22 02 00    	callq  *0x222f1(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x468>
   23b07:	eb 58                	jmp    23b61 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50c1>
   23b09:	ff 15 d9 1f 02 00    	callq  *0x21fd9(%rip)        # 45ae8 <_GLOBAL_OFFSET_TABLE_+0x158>
   23b0f:	eb 50                	jmp    23b61 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50c1>
   23b11:	be 08 00 00 00       	mov    $0x8,%esi
   23b16:	4c 89 f7             	mov    %r14,%rdi
   23b19:	ff 15 09 20 02 00    	callq  *0x22009(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   23b1f:	0f 0b                	ud2    
   23b21:	48 8d 15 c8 fd 01 00 	lea    0x1fdc8(%rip),%rdx        # 438f0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x398>
   23b28:	ff 15 7a 23 02 00    	callq  *0x2237a(%rip)        # 45ea8 <_GLOBAL_OFFSET_TABLE_+0x518>
   23b2e:	eb 31                	jmp    23b61 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50c1>
   23b30:	48 8d 15 b9 fd 01 00 	lea    0x1fdb9(%rip),%rdx        # 438f0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x398>
   23b37:	48 89 f7             	mov    %rsi,%rdi
   23b3a:	4c 89 fe             	mov    %r15,%rsi
   23b3d:	ff 15 ed 1e 02 00    	callq  *0x21eed(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   23b43:	eb 1c                	jmp    23b61 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50c1>
   23b45:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   23b49:	48 89 f8             	mov    %rdi,%rax
   23b4c:	48 39 fe             	cmp    %rdi,%rsi
   23b4f:	73 72                	jae    23bc3 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5123>
   23b51:	48 8d 15 b0 fd 01 00 	lea    0x1fdb0(%rip),%rdx        # 43908 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3b0>
   23b58:	48 89 c7             	mov    %rax,%rdi
   23b5b:	ff 15 47 23 02 00    	callq  *0x22347(%rip)        # 45ea8 <_GLOBAL_OFFSET_TABLE_+0x518>
   23b61:	0f 0b                	ud2    
   23b63:	bf 18 00 00 00       	mov    $0x18,%edi
   23b68:	be 08 00 00 00       	mov    $0x8,%esi
   23b6d:	ff 15 b5 1f 02 00    	callq  *0x21fb5(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   23b73:	0f 0b                	ud2    
   23b75:	ff 15 6d 1f 02 00    	callq  *0x21f6d(%rip)        # 45ae8 <_GLOBAL_OFFSET_TABLE_+0x158>
   23b7b:	eb e4                	jmp    23b61 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50c1>
   23b7d:	be 08 00 00 00       	mov    $0x8,%esi
   23b82:	48 89 df             	mov    %rbx,%rdi
   23b85:	ff 15 9d 1f 02 00    	callq  *0x21f9d(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   23b8b:	0f 0b                	ud2    
   23b8d:	48 8d 3d 66 3a 01 00 	lea    0x13a66(%rip),%rdi        # 375fa <str.6+0x2da>
   23b94:	48 8d 15 e5 fd 01 00 	lea    0x1fde5(%rip),%rdx        # 43980 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x428>
   23b9b:	be 2b 00 00 00       	mov    $0x2b,%esi
   23ba0:	ff 15 3a 23 02 00    	callq  *0x2233a(%rip)        # 45ee0 <_GLOBAL_OFFSET_TABLE_+0x550>
   23ba6:	eb b9                	jmp    23b61 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50c1>
   23ba8:	48 8d 3d 4b 3a 01 00 	lea    0x13a4b(%rip),%rdi        # 375fa <str.6+0x2da>
   23baf:	48 8d 15 b2 fd 01 00 	lea    0x1fdb2(%rip),%rdx        # 43968 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x410>
   23bb6:	be 2b 00 00 00       	mov    $0x2b,%esi
   23bbb:	ff 15 1f 23 02 00    	callq  *0x2231f(%rip)        # 45ee0 <_GLOBAL_OFFSET_TABLE_+0x550>
   23bc1:	eb 9e                	jmp    23b61 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50c1>
   23bc3:	48 8d 15 3e fd 01 00 	lea    0x1fd3e(%rip),%rdx        # 43908 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x3b0>
   23bca:	48 89 f7             	mov    %rsi,%rdi
   23bcd:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
   23bd2:	ff 15 58 1e 02 00    	callq  *0x21e58(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   23bd8:	eb 87                	jmp    23b61 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50c1>
   23bda:	ff 15 08 1f 02 00    	callq  *0x21f08(%rip)        # 45ae8 <_GLOBAL_OFFSET_TABLE_+0x158>
   23be0:	e9 7c ff ff ff       	jmpq   23b61 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x50c1>
   23be5:	48 8b bc 24 c0 01 00 	mov    0x1c0(%rsp),%rdi
   23bec:	00 
   23bed:	48 89 de             	mov    %rbx,%rsi
   23bf0:	ff 15 32 1f 02 00    	callq  *0x21f32(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   23bf6:	0f 0b                	ud2    
   23bf8:	eb 41                	jmp    23c3b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x519b>
   23bfa:	e9 81 00 00 00       	jmpq   23c80 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x51e0>
   23bff:	49 89 c6             	mov    %rax,%r14
   23c02:	48 8d bc 24 f0 03 00 	lea    0x3f0(%rsp),%rdi
   23c09:	00 
   23c0a:	e8 81 33 fe ff       	callq  6f90 <core::ptr::drop_in_place>
   23c0f:	e9 57 01 00 00       	jmpq   23d6b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x52cb>
   23c14:	49 89 c6             	mov    %rax,%r14
   23c17:	e9 4f 01 00 00       	jmpq   23d6b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x52cb>
   23c1c:	49 89 c6             	mov    %rax,%r14
   23c1f:	48 8d bc 24 f0 03 00 	lea    0x3f0(%rsp),%rdi
   23c26:	00 
   23c27:	e9 16 01 00 00       	jmpq   23d42 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x52a2>
   23c2c:	49 89 c6             	mov    %rax,%r14
   23c2f:	e9 37 01 00 00       	jmpq   23d6b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x52cb>
   23c34:	e9 15 01 00 00       	jmpq   23d4e <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x52ae>
   23c39:	eb 00                	jmp    23c3b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x519b>
   23c3b:	49 89 c6             	mov    %rax,%r14
   23c3e:	48 8d bc 24 c0 00 00 	lea    0xc0(%rsp),%rdi
   23c45:	00 
   23c46:	e8 15 33 fe ff       	callq  6f60 <core::ptr::drop_in_place>
   23c4b:	48 8d bc 24 d8 02 00 	lea    0x2d8(%rsp),%rdi
   23c52:	00 
   23c53:	e8 88 2a fe ff       	callq  66e0 <core::ptr::drop_in_place>
   23c58:	eb 29                	jmp    23c83 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x51e3>
   23c5a:	49 89 c6             	mov    %rax,%r14
   23c5d:	48 8d bc 24 c0 00 00 	lea    0xc0(%rsp),%rdi
   23c64:	00 
   23c65:	e8 f6 32 fe ff       	callq  6f60 <core::ptr::drop_in_place>
   23c6a:	eb 17                	jmp    23c83 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x51e3>
   23c6c:	eb 12                	jmp    23c80 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x51e0>
   23c6e:	49 89 c6             	mov    %rax,%r14
   23c71:	48 8d bc 24 88 01 00 	lea    0x188(%rsp),%rdi
   23c78:	00 
   23c79:	e8 32 2d fe ff       	callq  69b0 <core::ptr::drop_in_place>
   23c7e:	eb 59                	jmp    23cd9 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5239>
   23c80:	49 89 c6             	mov    %rax,%r14
   23c83:	48 8d bc 24 88 01 00 	lea    0x188(%rsp),%rdi
   23c8a:	00 
   23c8b:	e8 20 2d fe ff       	callq  69b0 <core::ptr::drop_in_place>
   23c90:	48 8d bc 24 a0 03 00 	lea    0x3a0(%rsp),%rdi
   23c97:	00 
   23c98:	e8 43 2a fe ff       	callq  66e0 <core::ptr::drop_in_place>
   23c9d:	eb 3a                	jmp    23cd9 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5239>
   23c9f:	eb 00                	jmp    23ca1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5201>
   23ca1:	49 89 c6             	mov    %rax,%r14
   23ca4:	eb 05                	jmp    23cab <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x520b>
   23ca6:	eb 00                	jmp    23ca8 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5208>
   23ca8:	49 89 c6             	mov    %rax,%r14
   23cab:	48 8d bc 24 a0 0a 00 	lea    0xaa0(%rsp),%rdi
   23cb2:	00 
   23cb3:	e8 18 36 fe ff       	callq  72d0 <core::ptr::drop_in_place>
   23cb8:	e9 ae 00 00 00       	jmpq   23d6b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x52cb>
   23cbd:	eb 00                	jmp    23cbf <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x521f>
   23cbf:	49 89 c6             	mov    %rax,%r14
   23cc2:	48 8d bc 24 50 0b 00 	lea    0xb50(%rsp),%rdi
   23cc9:	00 
   23cca:	e8 e1 2d fe ff       	callq  6ab0 <core::ptr::drop_in_place>
   23ccf:	e9 97 00 00 00       	jmpq   23d6b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x52cb>
   23cd4:	eb 00                	jmp    23cd6 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5236>
   23cd6:	49 89 c6             	mov    %rax,%r14
   23cd9:	48 8d bc 24 28 04 00 	lea    0x428(%rsp),%rdi
   23ce0:	00 
   23ce1:	e8 8a 20 fe ff       	callq  5d70 <core::ptr::drop_in_place>
   23ce6:	eb 40                	jmp    23d28 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5288>
   23ce8:	49 89 c6             	mov    %rax,%r14
   23ceb:	eb 7e                	jmp    23d6b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x52cb>
   23ced:	49 89 c6             	mov    %rax,%r14
   23cf0:	eb 15                	jmp    23d07 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5267>
   23cf2:	49 89 c6             	mov    %rax,%r14
   23cf5:	eb 10                	jmp    23d07 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5267>
   23cf7:	49 89 c6             	mov    %rax,%r14
   23cfa:	48 8d bc 24 f0 03 00 	lea    0x3f0(%rsp),%rdi
   23d01:	00 
   23d02:	e8 d9 25 fe ff       	callq  62e0 <core::ptr::drop_in_place>
   23d07:	48 8d bc 24 50 06 00 	lea    0x650(%rsp),%rdi
   23d0e:	00 
   23d0f:	e8 5c 20 fe ff       	callq  5d70 <core::ptr::drop_in_place>
   23d14:	eb 55                	jmp    23d6b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x52cb>
   23d16:	49 89 c6             	mov    %rax,%r14
   23d19:	eb 50                	jmp    23d6b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x52cb>
   23d1b:	49 89 c6             	mov    %rax,%r14
   23d1e:	eb 77                	jmp    23d97 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x52f7>
   23d20:	49 89 c6             	mov    %rax,%r14
   23d23:	eb 53                	jmp    23d78 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x52d8>
   23d25:	49 89 c6             	mov    %rax,%r14
   23d28:	48 8d bc 24 a0 04 00 	lea    0x4a0(%rsp),%rdi
   23d2f:	00 
   23d30:	e8 7b 2d fe ff       	callq  6ab0 <core::ptr::drop_in_place>
   23d35:	eb 34                	jmp    23d6b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x52cb>
   23d37:	49 89 c6             	mov    %rax,%r14
   23d3a:	48 8d bc 24 a0 0a 00 	lea    0xaa0(%rsp),%rdi
   23d41:	00 
   23d42:	e8 69 2c fe ff       	callq  69b0 <core::ptr::drop_in_place>
   23d47:	eb 4e                	jmp    23d97 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x52f7>
   23d49:	49 89 c6             	mov    %rax,%r14
   23d4c:	eb 1d                	jmp    23d6b <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x52cb>
   23d4e:	49 89 c6             	mov    %rax,%r14
   23d51:	48 8d bc 24 f0 03 00 	lea    0x3f0(%rsp),%rdi
   23d58:	00 
   23d59:	e8 82 2c fe ff       	callq  69e0 <core::ptr::drop_in_place>
   23d5e:	48 8d bc 24 a0 0a 00 	lea    0xaa0(%rsp),%rdi
   23d65:	00 
   23d66:	e8 85 23 fe ff       	callq  60f0 <core::ptr::drop_in_place>
   23d6b:	48 8d bc 24 c0 02 00 	lea    0x2c0(%rsp),%rdi
   23d72:	00 
   23d73:	e8 18 27 fe ff       	callq  6490 <core::ptr::drop_in_place>
   23d78:	48 8d bc 24 58 03 00 	lea    0x358(%rsp),%rdi
   23d7f:	00 
   23d80:	e8 6b 23 fe ff       	callq  60f0 <core::ptr::drop_in_place>
   23d85:	eb 03                	jmp    23d8a <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x52ea>
   23d87:	49 89 c6             	mov    %rax,%r14
   23d8a:	48 8d bc 24 f8 05 00 	lea    0x5f8(%rsp),%rdi
   23d91:	00 
   23d92:	e8 c9 36 fe ff       	callq  7460 <core::ptr::drop_in_place>
   23d97:	48 8d bc 24 d0 01 00 	lea    0x1d0(%rsp),%rdi
   23d9e:	00 
   23d9f:	e8 8c 28 fe ff       	callq  6630 <core::ptr::drop_in_place>
   23da4:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
   23da9:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   23dae:	e8 0d 2f fe ff       	callq  6cc0 <core::ptr::drop_in_place>
   23db3:	eb 3c                	jmp    23df1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5351>
   23db5:	49 89 c6             	mov    %rax,%r14
   23db8:	48 8b 3b             	mov    (%rbx),%rdi
   23dbb:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   23dbf:	e8 1c 5b fe ff       	callq  98e0 <alloc::alloc::box_free>
   23dc4:	48 89 df             	mov    %rbx,%rdi
   23dc7:	e8 34 5b fe ff       	callq  9900 <alloc::alloc::box_free>
   23dcc:	eb 1c                	jmp    23dea <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x534a>
   23dce:	49 89 c6             	mov    %rax,%r14
   23dd1:	48 8b 3b             	mov    (%rbx),%rdi
   23dd4:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   23dd8:	e8 03 5b fe ff       	callq  98e0 <alloc::alloc::box_free>
   23ddd:	48 89 df             	mov    %rbx,%rdi
   23de0:	e8 1b 5b fe ff       	callq  9900 <alloc::alloc::box_free>
   23de5:	eb 0a                	jmp    23df1 <std::backtrace_rs::symbolize::gimli::elf::<impl std::backtrace_rs::symbolize::gimli::Mapping>::new+0x5351>
   23de7:	49 89 c6             	mov    %rax,%r14
   23dea:	89 ef                	mov    %ebp,%edi
   23dec:	e8 7f 26 fe ff       	callq  6470 <core::ptr::drop_in_place>
   23df1:	4c 89 f7             	mov    %r14,%rdi
   23df4:	e8 57 12 fe ff       	callq  5050 <_Unwind_Resume@plt>
   23df9:	0f 0b                	ud2    
   23dfb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000023e00 <std::backtrace_rs::symbolize::gimli::elf::Object::section>:
   23e00:	55                   	push   %rbp
   23e01:	41 57                	push   %r15
   23e03:	41 56                	push   %r14
   23e05:	41 55                	push   %r13
   23e07:	41 54                	push   %r12
   23e09:	53                   	push   %rbx
   23e0a:	b8 18 2b 00 00       	mov    $0x2b18,%eax
   23e0f:	e8 e6 0d 01 00       	callq  34bfa <__rust_probestack>
   23e14:	48 29 c4             	sub    %rax,%rsp
   23e17:	49 89 cc             	mov    %rcx,%r12
   23e1a:	49 89 d5             	mov    %rdx,%r13
   23e1d:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   23e22:	48 89 3c 24          	mov    %rdi,(%rsp)
   23e26:	48 8b 6f 18          	mov    0x18(%rdi),%rbp
   23e2a:	48 85 ed             	test   %rbp,%rbp
   23e2d:	74 7e                	je     23ead <std::backtrace_rs::symbolize::gimli::elf::Object::section+0xad>
   23e2f:	48 8b 04 24          	mov    (%rsp),%rax
   23e33:	4c 8b 70 10          	mov    0x10(%rax),%r14
   23e37:	4c 8d 78 20          	lea    0x20(%rax),%r15
   23e3b:	48 c1 e5 06          	shl    $0x6,%rbp
   23e3f:	31 db                	xor    %ebx,%ebx
   23e41:	eb 16                	jmp    23e59 <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x59>
   23e43:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   23e4a:	00 00 00 
   23e4d:	0f 1f 00             	nopl   (%rax)
   23e50:	48 83 c3 40          	add    $0x40,%rbx
   23e54:	48 39 dd             	cmp    %rbx,%rbp
   23e57:	74 54                	je     23ead <std::backtrace_rs::symbolize::gimli::elf::Object::section+0xad>
   23e59:	41 8b 34 1e          	mov    (%r14,%rbx,1),%esi
   23e5d:	4c 89 ff             	mov    %r15,%rdi
   23e60:	ff 15 42 21 02 00    	callq  *0x22142(%rip)        # 45fa8 <_GLOBAL_OFFSET_TABLE_+0x618>
   23e66:	48 85 c0             	test   %rax,%rax
   23e69:	74 e5                	je     23e50 <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x50>
   23e6b:	4c 39 e2             	cmp    %r12,%rdx
   23e6e:	75 e0                	jne    23e50 <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x50>
   23e70:	4c 39 e8             	cmp    %r13,%rax
   23e73:	74 13                	je     23e88 <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x88>
   23e75:	48 89 c7             	mov    %rax,%rdi
   23e78:	4c 89 ee             	mov    %r13,%rsi
   23e7b:	4c 89 e2             	mov    %r12,%rdx
   23e7e:	ff 15 3c 1f 02 00    	callq  *0x21f3c(%rip)        # 45dc0 <bcmp@GLIBC_2.2.5>
   23e84:	85 c0                	test   %eax,%eax
   23e86:	75 c8                	jne    23e50 <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x50>
   23e88:	41 83 7c 1e 04 08    	cmpl   $0x8,0x4(%r14,%rbx,1)
   23e8e:	0f 85 74 01 00 00    	jne    24008 <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x208>
   23e94:	45 31 ed             	xor    %r13d,%r13d
   23e97:	41 f6 44 1e 09 08    	testb  $0x8,0x9(%r14,%rbx,1)
   23e9d:	48 8d 2d b4 33 01 00 	lea    0x133b4(%rip),%rbp        # 37258 <_fini+0x21d4>
   23ea4:	49 0f 45 ed          	cmovne %r13,%rbp
   23ea8:	e9 1f 02 00 00       	jmpq   240cc <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x2cc>
   23ead:	49 83 fc 07          	cmp    $0x7,%r12
   23eb1:	0f 82 13 02 00 00    	jb     240ca <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x2ca>
   23eb7:	48 8d 05 17 47 01 00 	lea    0x14717(%rip),%rax        # 385d5 <str.6+0x12b5>
   23ebe:	49 39 c5             	cmp    %rax,%r13
   23ec1:	74 1a                	je     23edd <std::backtrace_rs::symbolize::gimli::elf::Object::section+0xdd>
   23ec3:	b8 2e 64 65 62       	mov    $0x6265642e,%eax
   23ec8:	41 33 45 00          	xor    0x0(%r13),%eax
   23ecc:	b9 62 75 67 5f       	mov    $0x5f677562,%ecx
   23ed1:	41 33 4d 03          	xor    0x3(%r13),%ecx
   23ed5:	09 c1                	or     %eax,%ecx
   23ed7:	0f 85 ed 01 00 00    	jne    240ca <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x2ca>
   23edd:	49 83 fc 07          	cmp    $0x7,%r12
   23ee1:	74 0b                	je     23eee <std::backtrace_rs::symbolize::gimli::elf::Object::section+0xee>
   23ee3:	41 80 7d 07 bf       	cmpb   $0xbf,0x7(%r13)
   23ee8:	0f 8e 67 02 00 00    	jle    24155 <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x355>
   23eee:	48 8b 04 24          	mov    (%rsp),%rax
   23ef2:	4c 8b 78 18          	mov    0x18(%rax),%r15
   23ef6:	4d 85 ff             	test   %r15,%r15
   23ef9:	0f 84 cb 01 00 00    	je     240ca <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x2ca>
   23eff:	49 83 c5 07          	add    $0x7,%r13
   23f03:	4c 8b 70 10          	mov    0x10(%rax),%r14
   23f07:	48 8d 68 20          	lea    0x20(%rax),%rbp
   23f0b:	49 c1 e7 06          	shl    $0x6,%r15
   23f0f:	31 db                	xor    %ebx,%ebx
   23f11:	eb 1a                	jmp    23f2d <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x12d>
   23f13:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   23f1a:	00 00 00 
   23f1d:	0f 1f 00             	nopl   (%rax)
   23f20:	48 83 c3 40          	add    $0x40,%rbx
   23f24:	49 39 df             	cmp    %rbx,%r15
   23f27:	0f 84 14 01 00 00    	je     24041 <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x241>
   23f2d:	41 8b 34 1e          	mov    (%r14,%rbx,1),%esi
   23f31:	48 89 ef             	mov    %rbp,%rdi
   23f34:	ff 15 6e 20 02 00    	callq  *0x2206e(%rip)        # 45fa8 <_GLOBAL_OFFSET_TABLE_+0x618>
   23f3a:	48 85 c0             	test   %rax,%rax
   23f3d:	74 e1                	je     23f20 <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x120>
   23f3f:	48 83 fa 08          	cmp    $0x8,%rdx
   23f43:	72 db                	jb     23f20 <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x120>
   23f45:	48 8d 0d 9c 3b 01 00 	lea    0x13b9c(%rip),%rcx        # 37ae8 <str.6+0x7c8>
   23f4c:	48 39 c8             	cmp    %rcx,%rax
   23f4f:	74 0f                	je     23f60 <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x160>
   23f51:	48 b9 2e 7a 64 65 62 	movabs $0x5f67756265647a2e,%rcx
   23f58:	75 67 5f 
   23f5b:	48 39 08             	cmp    %rcx,(%rax)
   23f5e:	75 c0                	jne    23f20 <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x120>
   23f60:	48 8d 4a ff          	lea    -0x1(%rdx),%rcx
   23f64:	4c 39 e1             	cmp    %r12,%rcx
   23f67:	75 b7                	jne    23f20 <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x120>
   23f69:	48 83 c0 08          	add    $0x8,%rax
   23f6d:	49 39 c5             	cmp    %rax,%r13
   23f70:	74 14                	je     23f86 <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x186>
   23f72:	48 83 c2 f8          	add    $0xfffffffffffffff8,%rdx
   23f76:	48 89 c7             	mov    %rax,%rdi
   23f79:	4c 89 ee             	mov    %r13,%rsi
   23f7c:	ff 15 3e 1e 02 00    	callq  *0x21e3e(%rip)        # 45dc0 <bcmp@GLIBC_2.2.5>
   23f82:	85 c0                	test   %eax,%eax
   23f84:	75 9a                	jne    23f20 <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x120>
   23f86:	41 83 7c 1e 04 08    	cmpl   $0x8,0x4(%r14,%rbx,1)
   23f8c:	0f 84 38 01 00 00    	je     240ca <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x2ca>
   23f92:	48 8b 14 24          	mov    (%rsp),%rdx
   23f96:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
   23f9a:	49 8b 44 1e 18       	mov    0x18(%r14,%rbx,1),%rax
   23f9f:	31 ed                	xor    %ebp,%ebp
   23fa1:	48 29 c1             	sub    %rax,%rcx
   23fa4:	0f 82 22 01 00 00    	jb     240cc <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x2cc>
   23faa:	49 8b 5c 1e 20       	mov    0x20(%r14,%rbx,1),%rbx
   23faf:	48 39 d9             	cmp    %rbx,%rcx
   23fb2:	0f 82 14 01 00 00    	jb     240cc <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x2cc>
   23fb8:	48 03 02             	add    (%rdx),%rax
   23fbb:	48 8d 48 08          	lea    0x8(%rax),%rcx
   23fbf:	31 ed                	xor    %ebp,%ebp
   23fc1:	4c 8d 3d 90 32 01 00 	lea    0x13290(%rip),%r15        # 37258 <_fini+0x21d4>
   23fc8:	48 83 eb 08          	sub    $0x8,%rbx
   23fcc:	4c 0f 43 f9          	cmovae %rcx,%r15
   23fd0:	48 0f 42 dd          	cmovb  %rbp,%rbx
   23fd4:	0f 82 f2 00 00 00    	jb     240cc <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x2cc>
   23fda:	48 8d 0d ff 3a 01 00 	lea    0x13aff(%rip),%rcx        # 37ae0 <str.6+0x7c0>
   23fe1:	48 39 c8             	cmp    %rcx,%rax
   23fe4:	0f 84 da 00 00 00    	je     240c4 <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x2c4>
   23fea:	31 ed                	xor    %ebp,%ebp
   23fec:	48 83 fb 04          	cmp    $0x4,%rbx
   23ff0:	0f 82 d6 00 00 00    	jb     240cc <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x2cc>
   23ff6:	48 81 38 5a 4c 49 42 	cmpq   $0x42494c5a,(%rax)
   23ffd:	0f 84 e1 00 00 00    	je     240e4 <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x2e4>
   24003:	e9 c4 00 00 00       	jmpq   240cc <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x2cc>
   24008:	48 8b 0c 24          	mov    (%rsp),%rcx
   2400c:	48 8b 41 08          	mov    0x8(%rcx),%rax
   24010:	4d 8b 7c 1e 18       	mov    0x18(%r14,%rbx,1),%r15
   24015:	31 ed                	xor    %ebp,%ebp
   24017:	4c 29 f8             	sub    %r15,%rax
   2401a:	0f 82 ac 00 00 00    	jb     240cc <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x2cc>
   24020:	4d 8b 6c 1e 20       	mov    0x20(%r14,%rbx,1),%r13
   24025:	4c 39 e8             	cmp    %r13,%rax
   24028:	0f 82 9e 00 00 00    	jb     240cc <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x2cc>
   2402e:	4c 03 39             	add    (%rcx),%r15
   24031:	41 f6 44 1e 09 08    	testb  $0x8,0x9(%r14,%rbx,1)
   24037:	75 0f                	jne    24048 <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x248>
   24039:	4c 89 fd             	mov    %r15,%rbp
   2403c:	e9 8b 00 00 00       	jmpq   240cc <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x2cc>
   24041:	31 ed                	xor    %ebp,%ebp
   24043:	e9 84 00 00 00       	jmpq   240cc <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x2cc>
   24048:	49 83 fd 18          	cmp    $0x18,%r13
   2404c:	72 7c                	jb     240ca <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x2ca>
   2404e:	41 83 3f 01          	cmpl   $0x1,(%r15)
   24052:	75 76                	jne    240ca <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x2ca>
   24054:	49 83 c5 e8          	add    $0xffffffffffffffe8,%r13
   24058:	49 8b 77 08          	mov    0x8(%r15),%rsi
   2405c:	49 83 c7 18          	add    $0x18,%r15
   24060:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   24065:	e8 06 86 ff ff       	callq  1c670 <std::backtrace_rs::symbolize::gimli::stash::Stash::allocate>
   2406a:	48 89 c5             	mov    %rax,%rbp
   2406d:	49 89 d6             	mov    %rdx,%r14
   24070:	4c 8d 64 24 28       	lea    0x28(%rsp),%r12
   24075:	4c 89 e7             	mov    %r12,%rdi
   24078:	ff 15 ea 1d 02 00    	callq  *0x21dea(%rip)        # 45e68 <_GLOBAL_OFFSET_TABLE_+0x4d8>
   2407e:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   24083:	4c 89 e6             	mov    %r12,%rsi
   24086:	4c 89 fa             	mov    %r15,%rdx
   24089:	4c 89 e9             	mov    %r13,%rcx
   2408c:	49 89 e8             	mov    %rbp,%r8
   2408f:	4d 89 f1             	mov    %r14,%r9
   24092:	6a 05                	pushq  $0x5
   24094:	6a 00                	pushq  $0x0
   24096:	ff 15 e4 1d 02 00    	callq  *0x21de4(%rip)        # 45e80 <_GLOBAL_OFFSET_TABLE_+0x4f0>
   2409c:	48 83 c4 10          	add    $0x10,%rsp
   240a0:	4c 33 6c 24 10       	xor    0x10(%rsp),%r13
   240a5:	4c 89 f0             	mov    %r14,%rax
   240a8:	48 33 44 24 20       	xor    0x20(%rsp),%rax
   240ad:	31 c9                	xor    %ecx,%ecx
   240af:	4c 09 e8             	or     %r13,%rax
   240b2:	48 0f 45 e9          	cmovne %rcx,%rbp
   240b6:	80 7c 24 18 00       	cmpb   $0x0,0x18(%rsp)
   240bb:	48 0f 45 e9          	cmovne %rcx,%rbp
   240bf:	4d 89 f5             	mov    %r14,%r13
   240c2:	eb 08                	jmp    240cc <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x2cc>
   240c4:	48 83 fb 04          	cmp    $0x4,%rbx
   240c8:	73 1a                	jae    240e4 <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x2e4>
   240ca:	31 ed                	xor    %ebp,%ebp
   240cc:	48 89 e8             	mov    %rbp,%rax
   240cf:	4c 89 ea             	mov    %r13,%rdx
   240d2:	48 81 c4 18 2b 00 00 	add    $0x2b18,%rsp
   240d9:	5b                   	pop    %rbx
   240da:	41 5c                	pop    %r12
   240dc:	41 5d                	pop    %r13
   240de:	41 5e                	pop    %r14
   240e0:	41 5f                	pop    %r15
   240e2:	5d                   	pop    %rbp
   240e3:	c3                   	retq   
   240e4:	48 83 c3 fc          	add    $0xfffffffffffffffc,%rbx
   240e8:	41 8b 37             	mov    (%r15),%esi
   240eb:	49 83 c7 04          	add    $0x4,%r15
   240ef:	0f ce                	bswap  %esi
   240f1:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   240f6:	e8 75 85 ff ff       	callq  1c670 <std::backtrace_rs::symbolize::gimli::stash::Stash::allocate>
   240fb:	48 89 c5             	mov    %rax,%rbp
   240fe:	49 89 d5             	mov    %rdx,%r13
   24101:	4c 8d 74 24 28       	lea    0x28(%rsp),%r14
   24106:	4c 89 f7             	mov    %r14,%rdi
   24109:	ff 15 59 1d 02 00    	callq  *0x21d59(%rip)        # 45e68 <_GLOBAL_OFFSET_TABLE_+0x4d8>
   2410f:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   24114:	4c 89 f6             	mov    %r14,%rsi
   24117:	4c 89 fa             	mov    %r15,%rdx
   2411a:	48 89 d9             	mov    %rbx,%rcx
   2411d:	49 89 e8             	mov    %rbp,%r8
   24120:	4d 89 e9             	mov    %r13,%r9
   24123:	6a 05                	pushq  $0x5
   24125:	6a 00                	pushq  $0x0
   24127:	ff 15 53 1d 02 00    	callq  *0x21d53(%rip)        # 45e80 <_GLOBAL_OFFSET_TABLE_+0x4f0>
   2412d:	48 83 c4 10          	add    $0x10,%rsp
   24131:	48 33 5c 24 10       	xor    0x10(%rsp),%rbx
   24136:	4c 89 e8             	mov    %r13,%rax
   24139:	48 33 44 24 20       	xor    0x20(%rsp),%rax
   2413e:	31 c9                	xor    %ecx,%ecx
   24140:	48 09 d8             	or     %rbx,%rax
   24143:	48 0f 45 e9          	cmovne %rcx,%rbp
   24147:	80 7c 24 18 00       	cmpb   $0x0,0x18(%rsp)
   2414c:	48 0f 45 e9          	cmovne %rcx,%rbp
   24150:	e9 77 ff ff ff       	jmpq   240cc <std::backtrace_rs::symbolize::gimli::elf::Object::section+0x2cc>
   24155:	4c 8d 05 a4 05 02 00 	lea    0x205a4(%rip),%r8        # 44700 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x11a8>
   2415c:	ba 07 00 00 00       	mov    $0x7,%edx
   24161:	4c 89 ef             	mov    %r13,%rdi
   24164:	4c 89 e6             	mov    %r12,%rsi
   24167:	4c 89 e1             	mov    %r12,%rcx
   2416a:	ff 15 c8 1c 02 00    	callq  *0x21cc8(%rip)        # 45e38 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   24170:	0f 0b                	ud2    
   24172:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   24179:	00 00 00 
   2417c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000024180 <std::backtrace_rs::symbolize::gimli::callback>:
   24180:	55                   	push   %rbp
   24181:	41 57                	push   %r15
   24183:	41 56                	push   %r14
   24185:	41 55                	push   %r13
   24187:	41 54                	push   %r12
   24189:	53                   	push   %rbx
   2418a:	48 83 ec 78          	sub    $0x78,%rsp
   2418e:	49 89 d6             	mov    %rdx,%r14
   24191:	49 89 fc             	mov    %rdi,%r12
   24194:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
   24198:	48 85 db             	test   %rbx,%rbx
   2419b:	74 63                	je     24200 <std::backtrace_rs::symbolize::gimli::callback+0x80>
   2419d:	80 3b 00             	cmpb   $0x0,(%rbx)
   241a0:	74 5e                	je     24200 <std::backtrace_rs::symbolize::gimli::callback+0x80>
   241a2:	48 89 df             	mov    %rbx,%rdi
   241a5:	ff 15 a5 19 02 00    	callq  *0x219a5(%rip)        # 45b50 <strlen@GLIBC_2.2.5>
   241ab:	49 89 c7             	mov    %rax,%r15
   241ae:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   241b4:	48 85 c0             	test   %rax,%rax
   241b7:	74 24                	je     241dd <std::backtrace_rs::symbolize::gimli::callback+0x5d>
   241b9:	49 83 ff ff          	cmp    $0xffffffffffffffff,%r15
   241bd:	0f 84 60 03 00 00    	je     24523 <std::backtrace_rs::symbolize::gimli::callback+0x3a3>
   241c3:	be 01 00 00 00       	mov    $0x1,%esi
   241c8:	4c 89 ff             	mov    %r15,%rdi
   241cb:	ff 15 b7 19 02 00    	callq  *0x219b7(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   241d1:	49 89 c5             	mov    %rax,%r13
   241d4:	48 85 c0             	test   %rax,%rax
   241d7:	0f 84 5e 03 00 00    	je     2453b <std::backtrace_rs::symbolize::gimli::callback+0x3bb>
   241dd:	4c 89 ef             	mov    %r13,%rdi
   241e0:	48 89 de             	mov    %rbx,%rsi
   241e3:	4c 89 fa             	mov    %r15,%rdx
   241e6:	ff 15 14 1b 02 00    	callq  *0x21b14(%rip)        # 45d00 <memcpy@GLIBC_2.14>
   241ec:	4c 89 6c 24 08       	mov    %r13,0x8(%rsp)
   241f1:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
   241f6:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
   241fb:	e9 b8 00 00 00       	jmpq   242b8 <std::backtrace_rs::symbolize::gimli::callback+0x138>
   24200:	49 83 7e 10 00       	cmpq   $0x0,0x10(%r14)
   24205:	74 16                	je     2421d <std::backtrace_rs::symbolize::gimli::callback+0x9d>
   24207:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   2420e:	00 00 
   24210:	0f 57 c0             	xorps  %xmm0,%xmm0
   24213:	0f 11 44 24 10       	movups %xmm0,0x10(%rsp)
   24218:	e9 9b 00 00 00       	jmpq   242b8 <std::backtrace_rs::symbolize::gimli::callback+0x138>
   2421d:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   24222:	ff 15 60 1d 02 00    	callq  *0x21d60(%rip)        # 45f88 <_GLOBAL_OFFSET_TABLE_+0x5f8>
   24228:	83 7c 24 40 01       	cmpl   $0x1,0x40(%rsp)
   2422d:	8a 44 24 48          	mov    0x48(%rsp),%al
   24231:	8b 4c 24 49          	mov    0x49(%rsp),%ecx
   24235:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
   24239:	8b 4c 24 4c          	mov    0x4c(%rsp),%ecx
   2423d:	89 4c 24 23          	mov    %ecx,0x23(%rsp)
   24241:	4c 8b 7c 24 50       	mov    0x50(%rsp),%r15
   24246:	75 4d                	jne    24295 <std::backtrace_rs::symbolize::gimli::callback+0x115>
   24248:	48 c7 44 24 08 01 00 	movq   $0x1,0x8(%rsp)
   2424f:	00 00 
   24251:	0f 57 c0             	xorps  %xmm0,%xmm0
   24254:	0f 11 44 24 10       	movups %xmm0,0x10(%rsp)
   24259:	3c 02                	cmp    $0x2,%al
   2425b:	72 5b                	jb     242b8 <std::backtrace_rs::symbolize::gimli::callback+0x138>
   2425d:	49 8b 3f             	mov    (%r15),%rdi
   24260:	49 8b 47 08          	mov    0x8(%r15),%rax
   24264:	ff 10                	callq  *(%rax)
   24266:	49 8b 47 08          	mov    0x8(%r15),%rax
   2426a:	48 8b 70 08          	mov    0x8(%rax),%rsi
   2426e:	48 85 f6             	test   %rsi,%rsi
   24271:	74 0d                	je     24280 <std::backtrace_rs::symbolize::gimli::callback+0x100>
   24273:	49 8b 3f             	mov    (%r15),%rdi
   24276:	48 8b 50 10          	mov    0x10(%rax),%rdx
   2427a:	ff 15 80 19 02 00    	callq  *0x21980(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   24280:	be 18 00 00 00       	mov    $0x18,%esi
   24285:	ba 08 00 00 00       	mov    $0x8,%edx
   2428a:	4c 89 ff             	mov    %r15,%rdi
   2428d:	ff 15 6d 19 02 00    	callq  *0x2196d(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   24293:	eb 23                	jmp    242b8 <std::backtrace_rs::symbolize::gimli::callback+0x138>
   24295:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
   2429a:	88 44 24 08          	mov    %al,0x8(%rsp)
   2429e:	8b 44 24 20          	mov    0x20(%rsp),%eax
   242a2:	8b 54 24 23          	mov    0x23(%rsp),%edx
   242a6:	89 44 24 09          	mov    %eax,0x9(%rsp)
   242aa:	89 54 24 0c          	mov    %edx,0xc(%rsp)
   242ae:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
   242b3:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   242b8:	49 8b 6c 24 10       	mov    0x10(%r12),%rbp
   242bd:	45 0f b7 7c 24 18    	movzwl 0x18(%r12),%r15d
   242c3:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   242c8:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   242cd:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   242d2:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   242d7:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   242dc:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   242e1:	4d 85 ff             	test   %r15,%r15
   242e4:	74 34                	je     2431a <std::backtrace_rs::symbolize::gimli::callback+0x19a>
   242e6:	49 83 ff 04          	cmp    $0x4,%r15
   242ea:	41 bd 04 00 00 00    	mov    $0x4,%r13d
   242f0:	4d 0f 47 ef          	cmova  %r15,%r13
   242f4:	4c 89 eb             	mov    %r13,%rbx
   242f7:	48 c1 e3 04          	shl    $0x4,%rbx
   242fb:	be 08 00 00 00       	mov    $0x8,%esi
   24300:	48 89 df             	mov    %rbx,%rdi
   24303:	ff 15 7f 18 02 00    	callq  *0x2187f(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   24309:	48 85 c0             	test   %rax,%rax
   2430c:	0f 84 f9 01 00 00    	je     2450b <std::backtrace_rs::symbolize::gimli::callback+0x38b>
   24312:	49 89 c0             	mov    %rax,%r8
   24315:	48 89 c6             	mov    %rax,%rsi
   24318:	eb 0e                	jmp    24328 <std::backtrace_rs::symbolize::gimli::callback+0x1a8>
   2431a:	45 31 ed             	xor    %r13d,%r13d
   2431d:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   24323:	be 08 00 00 00       	mov    $0x8,%esi
   24328:	4d 6b cf 38          	imul   $0x38,%r15,%r9
   2432c:	49 8d 3c 29          	lea    (%r9,%rbp,1),%rdi
   24330:	49 bf 93 24 49 92 24 	movabs $0x2492492492492493,%r15
   24337:	49 92 24 
   2433a:	48 39 fd             	cmp    %rdi,%rbp
   2433d:	0f 84 b1 00 00 00    	je     243f4 <std::backtrace_rs::symbolize::gimli::callback+0x274>
   24343:	49 83 c1 c8          	add    $0xffffffffffffffc8,%r9
   24347:	4c 89 c8             	mov    %r9,%rax
   2434a:	48 c1 e8 03          	shr    $0x3,%rax
   2434e:	49 f7 e7             	mul    %r15
   24351:	8d 42 01             	lea    0x1(%rdx),%eax
   24354:	48 83 e0 03          	and    $0x3,%rax
   24358:	74 22                	je     2437c <std::backtrace_rs::symbolize::gimli::callback+0x1fc>
   2435a:	48 f7 d8             	neg    %rax
   2435d:	0f 1f 00             	nopl   (%rax)
   24360:	48 8b 4d 10          	mov    0x10(%rbp),%rcx
   24364:	48 8b 5d 28          	mov    0x28(%rbp),%rbx
   24368:	48 83 c5 38          	add    $0x38,%rbp
   2436c:	48 89 0e             	mov    %rcx,(%rsi)
   2436f:	48 89 5e 08          	mov    %rbx,0x8(%rsi)
   24373:	48 83 c6 10          	add    $0x10,%rsi
   24377:	48 ff c0             	inc    %rax
   2437a:	75 e4                	jne    24360 <std::backtrace_rs::symbolize::gimli::callback+0x1e0>
   2437c:	49 81 f9 a8 00 00 00 	cmp    $0xa8,%r9
   24383:	72 69                	jb     243ee <std::backtrace_rs::symbolize::gimli::callback+0x26e>
   24385:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2438c:	00 00 00 
   2438f:	90                   	nop
   24390:	48 8b 45 10          	mov    0x10(%rbp),%rax
   24394:	48 8b 4d 28          	mov    0x28(%rbp),%rcx
   24398:	48 89 06             	mov    %rax,(%rsi)
   2439b:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
   2439f:	48 8b 45 48          	mov    0x48(%rbp),%rax
   243a3:	48 8b 4d 60          	mov    0x60(%rbp),%rcx
   243a7:	48 89 46 10          	mov    %rax,0x10(%rsi)
   243ab:	48 89 4e 18          	mov    %rcx,0x18(%rsi)
   243af:	48 8b 85 80 00 00 00 	mov    0x80(%rbp),%rax
   243b6:	48 8b 8d 98 00 00 00 	mov    0x98(%rbp),%rcx
   243bd:	48 89 46 20          	mov    %rax,0x20(%rsi)
   243c1:	48 89 4e 28          	mov    %rcx,0x28(%rsi)
   243c5:	48 8b 85 b8 00 00 00 	mov    0xb8(%rbp),%rax
   243cc:	48 8b 8d d0 00 00 00 	mov    0xd0(%rbp),%rcx
   243d3:	48 8d 9d e0 00 00 00 	lea    0xe0(%rbp),%rbx
   243da:	48 89 46 30          	mov    %rax,0x30(%rsi)
   243de:	48 89 4e 38          	mov    %rcx,0x38(%rsi)
   243e2:	48 83 c6 40          	add    $0x40,%rsi
   243e6:	48 89 dd             	mov    %rbx,%rbp
   243e9:	48 39 df             	cmp    %rbx,%rdi
   243ec:	75 a2                	jne    24390 <std::backtrace_rs::symbolize::gimli::callback+0x210>
   243ee:	48 83 c2 01          	add    $0x1,%rdx
   243f2:	eb 02                	jmp    243f6 <std::backtrace_rs::symbolize::gimli::callback+0x276>
   243f4:	31 d2                	xor    %edx,%edx
   243f6:	49 8b 04 24          	mov    (%r12),%rax
   243fa:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   243ff:	48 89 4c 24 50       	mov    %rcx,0x50(%rsp)
   24404:	0f 28 44 24 20       	movaps 0x20(%rsp),%xmm0
   24409:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
   2440e:	4c 89 44 24 58       	mov    %r8,0x58(%rsp)
   24413:	4c 89 6c 24 60       	mov    %r13,0x60(%rsp)
   24418:	48 89 54 24 68       	mov    %rdx,0x68(%rsp)
   2441d:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   24422:	49 8b 76 10          	mov    0x10(%r14),%rsi
   24426:	49 3b 76 08          	cmp    0x8(%r14),%rsi
   2442a:	75 67                	jne    24493 <std::backtrace_rs::symbolize::gimli::callback+0x313>
   2442c:	48 89 f1             	mov    %rsi,%rcx
   2442f:	48 ff c1             	inc    %rcx
   24432:	0f 84 e3 00 00 00    	je     2451b <std::backtrace_rs::symbolize::gimli::callback+0x39b>
   24438:	48 8d 04 36          	lea    (%rsi,%rsi,1),%rax
   2443c:	48 39 c8             	cmp    %rcx,%rax
   2443f:	48 0f 47 c8          	cmova  %rax,%rcx
   24443:	48 83 f9 04          	cmp    $0x4,%rcx
   24447:	b8 04 00 00 00       	mov    $0x4,%eax
   2444c:	48 0f 47 c1          	cmova  %rcx,%rax
   24450:	ba 38 00 00 00       	mov    $0x38,%edx
   24455:	31 c9                	xor    %ecx,%ecx
   24457:	48 f7 e2             	mul    %rdx
   2445a:	48 89 c3             	mov    %rax,%rbx
   2445d:	0f 90 c0             	seto   %al
   24460:	0f 91 c1             	setno  %cl
   24463:	48 c1 e1 03          	shl    $0x3,%rcx
   24467:	48 85 f6             	test   %rsi,%rsi
   2446a:	74 2c                	je     24498 <std::backtrace_rs::symbolize::gimli::callback+0x318>
   2446c:	84 c0                	test   %al,%al
   2446e:	0f 85 a7 00 00 00    	jne    2451b <std::backtrace_rs::symbolize::gimli::callback+0x39b>
   24474:	49 8b 3e             	mov    (%r14),%rdi
   24477:	48 85 ff             	test   %rdi,%rdi
   2447a:	74 20                	je     2449c <std::backtrace_rs::symbolize::gimli::callback+0x31c>
   2447c:	48 6b f6 38          	imul   $0x38,%rsi,%rsi
   24480:	48 85 f6             	test   %rsi,%rsi
   24483:	74 17                	je     2449c <std::backtrace_rs::symbolize::gimli::callback+0x31c>
   24485:	48 89 ca             	mov    %rcx,%rdx
   24488:	48 89 d9             	mov    %rbx,%rcx
   2448b:	ff 15 e7 1a 02 00    	callq  *0x21ae7(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
   24491:	eb 1a                	jmp    244ad <std::backtrace_rs::symbolize::gimli::callback+0x32d>
   24493:	49 8b 0e             	mov    (%r14),%rcx
   24496:	eb 32                	jmp    244ca <std::backtrace_rs::symbolize::gimli::callback+0x34a>
   24498:	84 c0                	test   %al,%al
   2449a:	75 7f                	jne    2451b <std::backtrace_rs::symbolize::gimli::callback+0x39b>
   2449c:	48 85 db             	test   %rbx,%rbx
   2449f:	74 0f                	je     244b0 <std::backtrace_rs::symbolize::gimli::callback+0x330>
   244a1:	48 89 df             	mov    %rbx,%rdi
   244a4:	48 89 ce             	mov    %rcx,%rsi
   244a7:	ff 15 db 16 02 00    	callq  *0x216db(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   244ad:	48 89 c1             	mov    %rax,%rcx
   244b0:	48 85 c9             	test   %rcx,%rcx
   244b3:	74 56                	je     2450b <std::backtrace_rs::symbolize::gimli::callback+0x38b>
   244b5:	49 89 0e             	mov    %rcx,(%r14)
   244b8:	48 c1 eb 03          	shr    $0x3,%rbx
   244bc:	48 89 d8             	mov    %rbx,%rax
   244bf:	49 f7 e7             	mul    %r15
   244c2:	49 89 56 08          	mov    %rdx,0x8(%r14)
   244c6:	49 8b 76 10          	mov    0x10(%r14),%rsi
   244ca:	48 6b c6 38          	imul   $0x38,%rsi,%rax
   244ce:	48 8b 54 24 70       	mov    0x70(%rsp),%rdx
   244d3:	48 89 54 01 30       	mov    %rdx,0x30(%rcx,%rax,1)
   244d8:	0f 28 44 24 40       	movaps 0x40(%rsp),%xmm0
   244dd:	0f 28 4c 24 50       	movaps 0x50(%rsp),%xmm1
   244e2:	0f 28 54 24 60       	movaps 0x60(%rsp),%xmm2
   244e7:	0f 11 54 01 20       	movups %xmm2,0x20(%rcx,%rax,1)
   244ec:	0f 11 4c 01 10       	movups %xmm1,0x10(%rcx,%rax,1)
   244f1:	0f 11 04 01          	movups %xmm0,(%rcx,%rax,1)
   244f5:	49 83 46 10 01       	addq   $0x1,0x10(%r14)
   244fa:	31 c0                	xor    %eax,%eax
   244fc:	48 83 c4 78          	add    $0x78,%rsp
   24500:	5b                   	pop    %rbx
   24501:	41 5c                	pop    %r12
   24503:	41 5d                	pop    %r13
   24505:	41 5e                	pop    %r14
   24507:	41 5f                	pop    %r15
   24509:	5d                   	pop    %rbp
   2450a:	c3                   	retq   
   2450b:	be 08 00 00 00       	mov    $0x8,%esi
   24510:	48 89 df             	mov    %rbx,%rdi
   24513:	ff 15 0f 16 02 00    	callq  *0x2160f(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   24519:	0f 0b                	ud2    
   2451b:	ff 15 c7 15 02 00    	callq  *0x215c7(%rip)        # 45ae8 <_GLOBAL_OFFSET_TABLE_+0x158>
   24521:	0f 0b                	ud2    
   24523:	48 8d 15 c6 f6 01 00 	lea    0x1f6c6(%rip),%rdx        # 43bf0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x698>
   2452a:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   24531:	31 f6                	xor    %esi,%esi
   24533:	ff 15 f7 14 02 00    	callq  *0x214f7(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   24539:	0f 0b                	ud2    
   2453b:	be 01 00 00 00       	mov    $0x1,%esi
   24540:	4c 89 ff             	mov    %r15,%rdi
   24543:	ff 15 df 15 02 00    	callq  *0x215df(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   24549:	0f 0b                	ud2    
   2454b:	48 89 c3             	mov    %rax,%rbx
   2454e:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   24553:	e8 18 27 fe ff       	callq  6c70 <core::ptr::drop_in_place>
   24558:	eb 17                	jmp    24571 <std::backtrace_rs::symbolize::gimli::callback+0x3f1>
   2455a:	48 89 c3             	mov    %rax,%rbx
   2455d:	49 8b 3f             	mov    (%r15),%rdi
   24560:	49 8b 77 08          	mov    0x8(%r15),%rsi
   24564:	e8 77 53 fe ff       	callq  98e0 <alloc::alloc::box_free>
   24569:	4c 89 ff             	mov    %r15,%rdi
   2456c:	e8 8f 53 fe ff       	callq  9900 <alloc::alloc::box_free>
   24571:	48 89 df             	mov    %rbx,%rdi
   24574:	e8 d7 0a fe ff       	callq  5050 <_Unwind_Resume@plt>
   24579:	0f 0b                	ud2    
   2457b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000024580 <core::ops::function::FnOnce::call_once{{vtable-shim}}>:
   24580:	48 8b 07             	mov    (%rdi),%rax
   24583:	48 8b 38             	mov    (%rax),%rdi
   24586:	ff 25 74 15 02 00    	jmpq   *0x21574(%rip)        # 45b00 <_Unwind_GetTextRelBase@GCC_3.0>
   2458c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000024590 <core::ops::function::FnOnce::call_once{{vtable-shim}}>:
   24590:	48 8b 07             	mov    (%rdi),%rax
   24593:	48 8b 38             	mov    (%rax),%rdi
   24596:	ff 25 a4 18 02 00    	jmpq   *0x218a4(%rip)        # 45e40 <_Unwind_GetDataRelBase@GCC_3.0>
   2459c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000245a0 <core::ptr::drop_in_place>:
   245a0:	41 57                	push   %r15
   245a2:	41 56                	push   %r14
   245a4:	53                   	push   %rbx
   245a5:	49 89 ff             	mov    %rdi,%r15
   245a8:	48 8b 1f             	mov    (%rdi),%rbx
   245ab:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
   245af:	48 8b 43 48          	mov    0x48(%rbx),%rax
   245b3:	ff 10                	callq  *(%rax)
   245b5:	48 8b 43 48          	mov    0x48(%rbx),%rax
   245b9:	48 8b 70 08          	mov    0x8(%rax),%rsi
   245bd:	48 85 f6             	test   %rsi,%rsi
   245c0:	74 0e                	je     245d0 <core::ptr::drop_in_place+0x30>
   245c2:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
   245c6:	48 8b 50 10          	mov    0x10(%rax),%rdx
   245ca:	ff 15 30 16 02 00    	callq  *0x21630(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   245d0:	49 8b 3f             	mov    (%r15),%rdi
   245d3:	be 50 00 00 00       	mov    $0x50,%esi
   245d8:	ba 08 00 00 00       	mov    $0x8,%edx
   245dd:	5b                   	pop    %rbx
   245de:	41 5e                	pop    %r14
   245e0:	41 5f                	pop    %r15
   245e2:	ff 25 18 16 02 00    	jmpq   *0x21618(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   245e8:	49 89 c6             	mov    %rax,%r14
   245eb:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
   245ef:	48 8b 73 48          	mov    0x48(%rbx),%rsi
   245f3:	e8 28 00 00 00       	callq  24620 <alloc::alloc::box_free>
   245f8:	49 8b 3f             	mov    (%r15),%rdi
   245fb:	e8 40 00 00 00       	callq  24640 <alloc::alloc::box_free>
   24600:	4c 89 f7             	mov    %r14,%rdi
   24603:	e8 48 0a fe ff       	callq  5050 <_Unwind_Resume@plt>
   24608:	0f 0b                	ud2    
   2460a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000024610 <core::ptr::drop_in_place>:
   24610:	c3                   	retq   
   24611:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   24618:	00 00 00 
   2461b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000024620 <alloc::alloc::box_free>:
   24620:	48 89 f0             	mov    %rsi,%rax
   24623:	48 8b 76 08          	mov    0x8(%rsi),%rsi
   24627:	48 85 f6             	test   %rsi,%rsi
   2462a:	74 0a                	je     24636 <alloc::alloc::box_free+0x16>
   2462c:	48 8b 50 10          	mov    0x10(%rax),%rdx
   24630:	ff 25 ca 15 02 00    	jmpq   *0x215ca(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   24636:	c3                   	retq   
   24637:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2463e:	00 00 

0000000000024640 <alloc::alloc::box_free>:
   24640:	be 50 00 00 00       	mov    $0x50,%esi
   24645:	ba 08 00 00 00       	mov    $0x8,%edx
   2464a:	ff 25 b0 15 02 00    	jmpq   *0x215b0(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>

0000000000024650 <panic_unwind::dwarf::eh::read_encoded_pointer>:
   24650:	55                   	push   %rbp
   24651:	41 57                	push   %r15
   24653:	41 56                	push   %r14
   24655:	53                   	push   %rbx
   24656:	50                   	push   %rax
   24657:	41 89 d6             	mov    %edx,%r14d
   2465a:	b8 01 00 00 00       	mov    $0x1,%eax
   2465f:	41 80 fe ff          	cmp    $0xff,%r14b
   24663:	0f 84 59 01 00 00    	je     247c2 <panic_unwind::dwarf::eh::read_encoded_pointer+0x172>
   24669:	41 80 fe 50          	cmp    $0x50,%r14b
   2466d:	75 1d                	jne    2468c <panic_unwind::dwarf::eh::read_encoded_pointer+0x3c>
   2466f:	48 8b 07             	mov    (%rdi),%rax
   24672:	48 83 c0 07          	add    $0x7,%rax
   24676:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   2467a:	48 89 07             	mov    %rax,(%rdi)
   2467d:	48 8b 10             	mov    (%rax),%rdx
   24680:	48 83 c0 08          	add    $0x8,%rax
   24684:	48 89 07             	mov    %rax,(%rdi)
   24687:	e9 32 01 00 00       	jmpq   247be <panic_unwind::dwarf::eh::read_encoded_pointer+0x16e>
   2468c:	44 89 f1             	mov    %r14d,%ecx
   2468f:	80 e1 0f             	and    $0xf,%cl
   24692:	80 f9 0c             	cmp    $0xc,%cl
   24695:	0f 87 27 01 00 00    	ja     247c2 <panic_unwind::dwarf::eh::read_encoded_pointer+0x172>
   2469b:	0f b6 c9             	movzbl %cl,%ecx
   2469e:	48 8d 15 73 3f 01 00 	lea    0x13f73(%rip),%rdx        # 38618 <str.6+0x12f8>
   246a5:	48 63 0c 8a          	movslq (%rdx,%rcx,4),%rcx
   246a9:	48 01 d1             	add    %rdx,%rcx
   246ac:	ff e1                	jmpq   *%rcx
   246ae:	48 8b 2f             	mov    (%rdi),%rbp
   246b1:	4c 8b 7d 00          	mov    0x0(%rbp),%r15
   246b5:	48 83 c5 08          	add    $0x8,%rbp
   246b9:	e9 a7 00 00 00       	jmpq   24765 <panic_unwind::dwarf::eh::read_encoded_pointer+0x115>
   246be:	48 8b 2f             	mov    (%rdi),%rbp
   246c1:	31 c9                	xor    %ecx,%ecx
   246c3:	45 31 ff             	xor    %r15d,%r15d
   246c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   246cd:	00 00 00 
   246d0:	0f b6 5d 00          	movzbl 0x0(%rbp),%ebx
   246d4:	48 83 c5 01          	add    $0x1,%rbp
   246d8:	89 da                	mov    %ebx,%edx
   246da:	83 e2 7f             	and    $0x7f,%edx
   246dd:	48 d3 e2             	shl    %cl,%rdx
   246e0:	48 89 2f             	mov    %rbp,(%rdi)
   246e3:	49 09 d7             	or     %rdx,%r15
   246e6:	48 83 c1 07          	add    $0x7,%rcx
   246ea:	84 db                	test   %bl,%bl
   246ec:	78 e2                	js     246d0 <panic_unwind::dwarf::eh::read_encoded_pointer+0x80>
   246ee:	eb 78                	jmp    24768 <panic_unwind::dwarf::eh::read_encoded_pointer+0x118>
   246f0:	48 8b 2f             	mov    (%rdi),%rbp
   246f3:	44 0f b7 7d 00       	movzwl 0x0(%rbp),%r15d
   246f8:	48 83 c5 02          	add    $0x2,%rbp
   246fc:	eb 67                	jmp    24765 <panic_unwind::dwarf::eh::read_encoded_pointer+0x115>
   246fe:	48 8b 2f             	mov    (%rdi),%rbp
   24701:	44 8b 7d 00          	mov    0x0(%rbp),%r15d
   24705:	eb 5a                	jmp    24761 <panic_unwind::dwarf::eh::read_encoded_pointer+0x111>
   24707:	48 8b 2f             	mov    (%rdi),%rbp
   2470a:	45 31 ff             	xor    %r15d,%r15d
   2470d:	31 c9                	xor    %ecx,%ecx
   2470f:	90                   	nop
   24710:	0f b6 5d 00          	movzbl 0x0(%rbp),%ebx
   24714:	48 83 c5 01          	add    $0x1,%rbp
   24718:	89 da                	mov    %ebx,%edx
   2471a:	83 e2 7f             	and    $0x7f,%edx
   2471d:	48 d3 e2             	shl    %cl,%rdx
   24720:	48 89 2f             	mov    %rbp,(%rdi)
   24723:	49 09 d7             	or     %rdx,%r15
   24726:	83 c1 07             	add    $0x7,%ecx
   24729:	84 db                	test   %bl,%bl
   2472b:	78 e3                	js     24710 <panic_unwind::dwarf::eh::read_encoded_pointer+0xc0>
   2472d:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
   24734:	48 d3 e2             	shl    %cl,%rdx
   24737:	31 ff                	xor    %edi,%edi
   24739:	f6 c3 40             	test   $0x40,%bl
   2473c:	48 0f 44 d7          	cmove  %rdi,%rdx
   24740:	83 f9 40             	cmp    $0x40,%ecx
   24743:	48 0f 43 d7          	cmovae %rdi,%rdx
   24747:	49 09 d7             	or     %rdx,%r15
   2474a:	eb 1c                	jmp    24768 <panic_unwind::dwarf::eh::read_encoded_pointer+0x118>
   2474c:	48 8b 2f             	mov    (%rdi),%rbp
   2474f:	4c 0f bf 7d 00       	movswq 0x0(%rbp),%r15
   24754:	48 83 c5 02          	add    $0x2,%rbp
   24758:	eb 0b                	jmp    24765 <panic_unwind::dwarf::eh::read_encoded_pointer+0x115>
   2475a:	48 8b 2f             	mov    (%rdi),%rbp
   2475d:	4c 63 7d 00          	movslq 0x0(%rbp),%r15
   24761:	48 83 c5 04          	add    $0x4,%rbp
   24765:	48 89 2f             	mov    %rbp,(%rdi)
   24768:	44 89 f1             	mov    %r14d,%ecx
   2476b:	c0 e9 04             	shr    $0x4,%cl
   2476e:	80 e1 07             	and    $0x7,%cl
   24771:	80 f9 04             	cmp    $0x4,%cl
   24774:	77 4c                	ja     247c2 <panic_unwind::dwarf::eh::read_encoded_pointer+0x172>
   24776:	31 d2                	xor    %edx,%edx
   24778:	0f b6 c9             	movzbl %cl,%ecx
   2477b:	48 8d 3d ca 3e 01 00 	lea    0x13eca(%rip),%rdi        # 3864c <str.6+0x132c>
   24782:	48 63 0c 8f          	movslq (%rdi,%rcx,4),%rcx
   24786:	48 01 f9             	add    %rdi,%rcx
   24789:	ff e1                	jmpq   *%rcx
   2478b:	48 89 ea             	mov    %rbp,%rdx
   2478e:	eb 23                	jmp    247b3 <panic_unwind::dwarf::eh::read_encoded_pointer+0x163>
   24790:	48 8b 7e 10          	mov    0x10(%rsi),%rdi
   24794:	48 8b 46 18          	mov    0x18(%rsi),%rax
   24798:	eb 08                	jmp    247a2 <panic_unwind::dwarf::eh::read_encoded_pointer+0x152>
   2479a:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
   2479e:	48 8b 46 28          	mov    0x28(%rsi),%rax
   247a2:	ff 50 18             	callq  *0x18(%rax)
   247a5:	48 89 c2             	mov    %rax,%rdx
   247a8:	eb 09                	jmp    247b3 <panic_unwind::dwarf::eh::read_encoded_pointer+0x163>
   247aa:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   247ae:	48 85 d2             	test   %rdx,%rdx
   247b1:	74 0f                	je     247c2 <panic_unwind::dwarf::eh::read_encoded_pointer+0x172>
   247b3:	4c 01 fa             	add    %r15,%rdx
   247b6:	45 84 f6             	test   %r14b,%r14b
   247b9:	79 03                	jns    247be <panic_unwind::dwarf::eh::read_encoded_pointer+0x16e>
   247bb:	48 8b 12             	mov    (%rdx),%rdx
   247be:	31 c0                	xor    %eax,%eax
   247c0:	eb 00                	jmp    247c2 <panic_unwind::dwarf::eh::read_encoded_pointer+0x172>
   247c2:	48 83 c4 08          	add    $0x8,%rsp
   247c6:	5b                   	pop    %rbx
   247c7:	41 5e                	pop    %r14
   247c9:	41 5f                	pop    %r15
   247cb:	5d                   	pop    %rbp
   247cc:	c3                   	retq   
   247cd:	0f 1f 00             	nopl   (%rax)

00000000000247d0 <__rust_panic_cleanup>:
   247d0:	41 56                	push   %r14
   247d2:	53                   	push   %rbx
   247d3:	50                   	push   %rax
   247d4:	48 b8 54 53 55 52 00 	movabs $0x4d4f5a0052555354,%rax
   247db:	5a 4f 4d 
   247de:	48 39 07             	cmp    %rax,(%rdi)
   247e1:	75 26                	jne    24809 <__rust_panic_cleanup+0x39>
   247e3:	48 8b 5f 40          	mov    0x40(%rdi),%rbx
   247e7:	4c 8b 77 48          	mov    0x48(%rdi),%r14
   247eb:	be 50 00 00 00       	mov    $0x50,%esi
   247f0:	ba 08 00 00 00       	mov    $0x8,%edx
   247f5:	ff 15 05 14 02 00    	callq  *0x21405(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   247fb:	48 89 d8             	mov    %rbx,%rax
   247fe:	4c 89 f2             	mov    %r14,%rdx
   24801:	48 83 c4 08          	add    $0x8,%rsp
   24805:	5b                   	pop    %rbx
   24806:	41 5e                	pop    %r14
   24808:	c3                   	retq   
   24809:	ff 15 51 17 02 00    	callq  *0x21751(%rip)        # 45f60 <_Unwind_DeleteException@GCC_3.0>
   2480f:	ff 15 63 16 02 00    	callq  *0x21663(%rip)        # 45e78 <_GLOBAL_OFFSET_TABLE_+0x4e8>
   24815:	0f 0b                	ud2    
   24817:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2481e:	00 00 

0000000000024820 <__rust_start_panic>:
   24820:	41 56                	push   %r14
   24822:	53                   	push   %rbx
   24823:	48 83 ec 38          	sub    $0x38,%rsp
   24827:	48 8b 07             	mov    (%rdi),%rax
   2482a:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
   2482e:	48 89 c7             	mov    %rax,%rdi
   24831:	ff 51 18             	callq  *0x18(%rcx)
   24834:	48 89 c3             	mov    %rax,%rbx
   24837:	49 89 d6             	mov    %rdx,%r14
   2483a:	0f 57 c0             	xorps  %xmm0,%xmm0
   2483d:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   24842:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   24847:	0f 29 04 24          	movaps %xmm0,(%rsp)
   2484b:	bf 50 00 00 00       	mov    $0x50,%edi
   24850:	be 08 00 00 00       	mov    $0x8,%esi
   24855:	ff 15 2d 13 02 00    	callq  *0x2132d(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   2485b:	48 85 c0             	test   %rax,%rax
   2485e:	74 4a                	je     248aa <__rust_start_panic+0x8a>
   24860:	48 b9 54 53 55 52 00 	movabs $0x4d4f5a0052555354,%rcx
   24867:	5a 4f 4d 
   2486a:	48 89 08             	mov    %rcx,(%rax)
   2486d:	48 8d 0d 4c 00 00 00 	lea    0x4c(%rip),%rcx        # 248c0 <panic_unwind::real_imp::panic::exception_cleanup>
   24874:	48 89 48 08          	mov    %rcx,0x8(%rax)
   24878:	0f 28 04 24          	movaps (%rsp),%xmm0
   2487c:	0f 28 4c 24 10       	movaps 0x10(%rsp),%xmm1
   24881:	0f 28 54 24 20       	movaps 0x20(%rsp),%xmm2
   24886:	0f 11 40 10          	movups %xmm0,0x10(%rax)
   2488a:	0f 11 48 20          	movups %xmm1,0x20(%rax)
   2488e:	0f 11 50 30          	movups %xmm2,0x30(%rax)
   24892:	48 89 58 40          	mov    %rbx,0x40(%rax)
   24896:	4c 89 70 48          	mov    %r14,0x48(%rax)
   2489a:	48 89 c7             	mov    %rax,%rdi
   2489d:	48 83 c4 38          	add    $0x38,%rsp
   248a1:	5b                   	pop    %rbx
   248a2:	41 5e                	pop    %r14
   248a4:	ff 25 66 12 02 00    	jmpq   *0x21266(%rip)        # 45b10 <_Unwind_RaiseException@GCC_3.0>
   248aa:	bf 50 00 00 00       	mov    $0x50,%edi
   248af:	be 08 00 00 00       	mov    $0x8,%esi
   248b4:	ff 15 6e 12 02 00    	callq  *0x2126e(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   248ba:	0f 0b                	ud2    
   248bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000248c0 <panic_unwind::real_imp::panic::exception_cleanup>:
   248c0:	50                   	push   %rax
   248c1:	48 89 34 24          	mov    %rsi,(%rsp)
   248c5:	48 89 e7             	mov    %rsp,%rdi
   248c8:	e8 d3 fc ff ff       	callq  245a0 <core::ptr::drop_in_place>
   248cd:	ff 15 a5 11 02 00    	callq  *0x211a5(%rip)        # 45a78 <_GLOBAL_OFFSET_TABLE_+0xe8>
   248d3:	0f 0b                	ud2    
   248d5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   248dc:	00 00 00 
   248df:	90                   	nop

00000000000248e0 <panic_unwind::real_imp::find_eh_action::{{closure}}>:
   248e0:	48 8b 07             	mov    (%rdi),%rax
   248e3:	48 8b 38             	mov    (%rax),%rdi
   248e6:	ff 25 14 12 02 00    	jmpq   *0x21214(%rip)        # 45b00 <_Unwind_GetTextRelBase@GCC_3.0>
   248ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000248f0 <panic_unwind::real_imp::find_eh_action::{{closure}}>:
   248f0:	48 8b 07             	mov    (%rdi),%rax
   248f3:	48 8b 38             	mov    (%rax),%rdi
   248f6:	ff 25 44 15 02 00    	jmpq   *0x21544(%rip)        # 45e40 <_Unwind_GetDataRelBase@GCC_3.0>
   248fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000024900 <rust_eh_personality>:
   24900:	55                   	push   %rbp
   24901:	41 57                	push   %r15
   24903:	41 56                	push   %r14
   24905:	41 55                	push   %r13
   24907:	41 54                	push   %r12
   24909:	53                   	push   %rbx
   2490a:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
   24911:	41 bf 03 00 00 00    	mov    $0x3,%r15d
   24917:	83 ff 01             	cmp    $0x1,%edi
   2491a:	0f 85 1c 03 00 00    	jne    24c3c <rust_eh_personality+0x33c>
   24920:	4d 89 c6             	mov    %r8,%r14
   24923:	49 89 cd             	mov    %rcx,%r13
   24926:	41 89 f4             	mov    %esi,%r12d
   24929:	4c 89 44 24 50       	mov    %r8,0x50(%rsp)
   2492e:	4c 89 c7             	mov    %r8,%rdi
   24931:	ff 15 31 13 02 00    	callq  *0x21331(%rip)        # 45c68 <_Unwind_GetLanguageSpecificData@GCC_3.0>
   24937:	48 89 c3             	mov    %rax,%rbx
   2493a:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%rsp)
   24941:	00 
   24942:	48 8d 74 24 14       	lea    0x14(%rsp),%rsi
   24947:	4c 89 f7             	mov    %r14,%rdi
   2494a:	ff 15 e0 12 02 00    	callq  *0x212e0(%rip)        # 45c30 <_Unwind_GetIPInfo@GCC_4.2.0>
   24950:	48 89 c5             	mov    %rax,%rbp
   24953:	83 7c 24 14 01       	cmpl   $0x1,0x14(%rsp)
   24958:	48 83 dd 00          	sbb    $0x0,%rbp
   2495c:	4c 89 f7             	mov    %r14,%rdi
   2495f:	ff 15 6b 11 02 00    	callq  *0x2116b(%rip)        # 45ad0 <_Unwind_GetRegionStart@GCC_3.0>
   24965:	48 8d 4c 24 50       	lea    0x50(%rsp),%rcx
   2496a:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
   2496f:	48 89 4c 24 60       	mov    %rcx,0x60(%rsp)
   24974:	48 89 6c 24 68       	mov    %rbp,0x68(%rsp)
   24979:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   2497e:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   24983:	48 8d 44 24 58       	lea    0x58(%rsp),%rax
   24988:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   2498d:	48 8d 05 84 fd 01 00 	lea    0x1fd84(%rip),%rax        # 44718 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x11c0>
   24994:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   2499b:	00 
   2499c:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
   249a1:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
   249a8:	00 
   249a9:	48 8d 05 98 fd 01 00 	lea    0x1fd98(%rip),%rax        # 44748 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x11f0>
   249b0:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
   249b7:	00 
   249b8:	48 85 db             	test   %rbx,%rbx
   249bb:	74 3a                	je     249f7 <rust_eh_personality+0xf7>
   249bd:	8a 03                	mov    (%rbx),%al
   249bf:	48 83 c3 01          	add    $0x1,%rbx
   249c3:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   249c8:	3c ff                	cmp    $0xff,%al
   249ca:	74 3c                	je     24a08 <rust_eh_personality+0x108>
   249cc:	0f b6 d0             	movzbl %al,%edx
   249cf:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   249d4:	48 8d 74 24 68       	lea    0x68(%rsp),%rsi
   249d9:	e8 72 fc ff ff       	callq  24650 <panic_unwind::dwarf::eh::read_encoded_pointer>
   249de:	48 85 c0             	test   %rax,%rax
   249e1:	74 2c                	je     24a0f <rust_eh_personality+0x10f>
   249e3:	b9 04 00 00 00       	mov    $0x4,%ecx
   249e8:	48 83 f9 04          	cmp    $0x4,%rcx
   249ec:	0f 85 ea 01 00 00    	jne    24bdc <rust_eh_personality+0x2dc>
   249f2:	e9 45 02 00 00       	jmpq   24c3c <rust_eh_personality+0x33c>
   249f7:	31 c9                	xor    %ecx,%ecx
   249f9:	48 83 f9 04          	cmp    $0x4,%rcx
   249fd:	0f 85 d9 01 00 00    	jne    24bdc <rust_eh_personality+0x2dc>
   24a03:	e9 34 02 00 00       	jmpq   24c3c <rust_eh_personality+0x33c>
   24a08:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   24a0d:	eb 05                	jmp    24a14 <rust_eh_personality+0x114>
   24a0f:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   24a14:	8a 03                	mov    (%rbx),%al
   24a16:	48 83 c3 01          	add    $0x1,%rbx
   24a1a:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   24a1f:	3c ff                	cmp    $0xff,%al
   24a21:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
   24a26:	0f 84 17 00 00 00    	je     24a43 <rust_eh_personality+0x143>
   24a2c:	0f 1f 40 00          	nopl   0x0(%rax)
   24a30:	48 8d 43 01          	lea    0x1(%rbx),%rax
   24a34:	80 3b 00             	cmpb   $0x0,(%rbx)
   24a37:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   24a3c:	48 89 c3             	mov    %rax,%rbx
   24a3f:	78 ef                	js     24a30 <rust_eh_personality+0x130>
   24a41:	eb 03                	jmp    24a46 <rust_eh_personality+0x146>
   24a43:	48 89 d8             	mov    %rbx,%rax
   24a46:	44 89 64 24 10       	mov    %r12d,0x10(%rsp)
   24a4b:	4c 89 6c 24 30       	mov    %r13,0x30(%rsp)
   24a50:	4c 89 74 24 38       	mov    %r14,0x38(%rsp)
   24a55:	8a 10                	mov    (%rax),%dl
   24a57:	48 83 c0 01          	add    $0x1,%rax
   24a5b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   24a60:	31 c9                	xor    %ecx,%ecx
   24a62:	45 31 ff             	xor    %r15d,%r15d
   24a65:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   24a6c:	00 00 00 
   24a6f:	90                   	nop
   24a70:	0f b6 30             	movzbl (%rax),%esi
   24a73:	48 83 c0 01          	add    $0x1,%rax
   24a77:	89 f7                	mov    %esi,%edi
   24a79:	83 e7 7f             	and    $0x7f,%edi
   24a7c:	48 d3 e7             	shl    %cl,%rdi
   24a7f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   24a84:	49 09 ff             	or     %rdi,%r15
   24a87:	48 83 c1 07          	add    $0x7,%rcx
   24a8b:	40 84 f6             	test   %sil,%sil
   24a8e:	78 e0                	js     24a70 <rust_eh_personality+0x170>
   24a90:	49 01 c7             	add    %rax,%r15
   24a93:	0f b6 ca             	movzbl %dl,%ecx
   24a96:	89 4c 24 24          	mov    %ecx,0x24(%rsp)
   24a9a:	4c 8d 6c 24 68       	lea    0x68(%rsp),%r13
   24a9f:	48 89 6c 24 48       	mov    %rbp,0x48(%rsp)
   24aa4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   24aab:	00 00 00 
   24aae:	66 90                	xchg   %ax,%ax
   24ab0:	4c 39 f8             	cmp    %r15,%rax
   24ab3:	0f 83 d3 00 00 00    	jae    24b8c <rust_eh_personality+0x28c>
   24ab9:	48 8d 5c 24 08       	lea    0x8(%rsp),%rbx
   24abe:	48 89 df             	mov    %rbx,%rdi
   24ac1:	4c 89 ee             	mov    %r13,%rsi
   24ac4:	8b 6c 24 24          	mov    0x24(%rsp),%ebp
   24ac8:	89 ea                	mov    %ebp,%edx
   24aca:	e8 81 fb ff ff       	callq  24650 <panic_unwind::dwarf::eh::read_encoded_pointer>
   24acf:	48 85 c0             	test   %rax,%rax
   24ad2:	0f 85 d6 00 00 00    	jne    24bae <rust_eh_personality+0x2ae>
   24ad8:	49 89 d4             	mov    %rdx,%r12
   24adb:	b8 04 00 00 00       	mov    $0x4,%eax
   24ae0:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   24ae5:	48 89 df             	mov    %rbx,%rdi
   24ae8:	4c 89 ee             	mov    %r13,%rsi
   24aeb:	89 ea                	mov    %ebp,%edx
   24aed:	e8 5e fb ff ff       	callq  24650 <panic_unwind::dwarf::eh::read_encoded_pointer>
   24af2:	48 85 c0             	test   %rax,%rax
   24af5:	0f 85 c1 00 00 00    	jne    24bbc <rust_eh_personality+0x2bc>
   24afb:	48 89 df             	mov    %rbx,%rdi
   24afe:	48 89 d3             	mov    %rdx,%rbx
   24b01:	4d 89 ee             	mov    %r13,%r14
   24b04:	4c 89 ee             	mov    %r13,%rsi
   24b07:	89 ea                	mov    %ebp,%edx
   24b09:	e8 42 fb ff ff       	callq  24650 <panic_unwind::dwarf::eh::read_encoded_pointer>
   24b0e:	48 85 c0             	test   %rax,%rax
   24b11:	0f 85 a5 00 00 00    	jne    24bbc <rust_eh_personality+0x2bc>
   24b17:	49 89 d8             	mov    %rbx,%r8
   24b1a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   24b1f:	31 c9                	xor    %ecx,%ecx
   24b21:	31 db                	xor    %ebx,%ebx
   24b23:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   24b2a:	00 00 00 
   24b2d:	0f 1f 00             	nopl   (%rax)
   24b30:	0f b6 28             	movzbl (%rax),%ebp
   24b33:	48 83 c0 01          	add    $0x1,%rax
   24b37:	89 ef                	mov    %ebp,%edi
   24b39:	83 e7 7f             	and    $0x7f,%edi
   24b3c:	48 d3 e7             	shl    %cl,%rdi
   24b3f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   24b44:	48 09 fb             	or     %rdi,%rbx
   24b47:	48 83 c1 07          	add    $0x7,%rcx
   24b4b:	40 84 ed             	test   %bpl,%bpl
   24b4e:	78 e0                	js     24b30 <rust_eh_personality+0x230>
   24b50:	4c 03 64 24 40       	add    0x40(%rsp),%r12
   24b55:	48 8b 6c 24 48       	mov    0x48(%rsp),%rbp
   24b5a:	4c 39 e5             	cmp    %r12,%rbp
   24b5d:	72 2d                	jb     24b8c <rust_eh_personality+0x28c>
   24b5f:	4d 89 f5             	mov    %r14,%r13
   24b62:	4d 01 e0             	add    %r12,%r8
   24b65:	4c 39 c5             	cmp    %r8,%rbp
   24b68:	0f 83 42 ff ff ff    	jae    24ab0 <rust_eh_personality+0x1b0>
   24b6e:	48 85 d2             	test   %rdx,%rdx
   24b71:	74 42                	je     24bb5 <rust_eh_personality+0x2b5>
   24b73:	48 01 54 24 28       	add    %rdx,0x28(%rsp)
   24b78:	48 83 fb 01          	cmp    $0x1,%rbx
   24b7c:	b8 02 00 00 00       	mov    $0x2,%eax
   24b81:	48 83 d8 00          	sbb    $0x0,%rax
   24b85:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   24b8a:	eb 30                	jmp    24bbc <rust_eh_personality+0x2bc>
   24b8c:	31 c9                	xor    %ecx,%ecx
   24b8e:	4c 8b 74 24 38       	mov    0x38(%rsp),%r14
   24b93:	4c 8b 6c 24 30       	mov    0x30(%rsp),%r13
   24b98:	41 bf 03 00 00 00    	mov    $0x3,%r15d
   24b9e:	44 8b 64 24 10       	mov    0x10(%rsp),%r12d
   24ba3:	48 83 f9 04          	cmp    $0x4,%rcx
   24ba7:	75 33                	jne    24bdc <rust_eh_personality+0x2dc>
   24ba9:	e9 8e 00 00 00       	jmpq   24c3c <rust_eh_personality+0x33c>
   24bae:	b8 04 00 00 00       	mov    $0x4,%eax
   24bb3:	eb 02                	jmp    24bb7 <rust_eh_personality+0x2b7>
   24bb5:	31 c0                	xor    %eax,%eax
   24bb7:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   24bbc:	4c 8b 74 24 38       	mov    0x38(%rsp),%r14
   24bc1:	4c 8b 6c 24 30       	mov    0x30(%rsp),%r13
   24bc6:	41 bf 03 00 00 00    	mov    $0x3,%r15d
   24bcc:	44 8b 64 24 10       	mov    0x10(%rsp),%r12d
   24bd1:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   24bd6:	48 83 f9 04          	cmp    $0x4,%rcx
   24bda:	74 60                	je     24c3c <rust_eh_personality+0x33c>
   24bdc:	41 f6 c4 01          	test   $0x1,%r12b
   24be0:	75 1d                	jne    24bff <rust_eh_personality+0x2ff>
   24be2:	48 8d 41 ff          	lea    -0x1(%rcx),%rax
   24be6:	48 83 f8 02          	cmp    $0x2,%rax
   24bea:	72 1f                	jb     24c0b <rust_eh_personality+0x30b>
   24bec:	41 bf 02 00 00 00    	mov    $0x2,%r15d
   24bf2:	48 85 c9             	test   %rcx,%rcx
   24bf5:	75 45                	jne    24c3c <rust_eh_personality+0x33c>
   24bf7:	41 bf 08 00 00 00    	mov    $0x8,%r15d
   24bfd:	eb 3d                	jmp    24c3c <rust_eh_personality+0x33c>
   24bff:	48 8d 05 5a 3a 01 00 	lea    0x13a5a(%rip),%rax        # 38660 <str.6+0x1340>
   24c06:	8b 04 88             	mov    (%rax,%rcx,4),%eax
   24c09:	eb 34                	jmp    24c3f <rust_eh_personality+0x33f>
   24c0b:	48 8b 1d 3e 12 02 00 	mov    0x2123e(%rip),%rbx        # 45e50 <_Unwind_SetGR@GCC_3.0>
   24c12:	4c 89 f7             	mov    %r14,%rdi
   24c15:	31 f6                	xor    %esi,%esi
   24c17:	4c 89 ea             	mov    %r13,%rdx
   24c1a:	ff d3                	callq  *%rbx
   24c1c:	4c 89 f7             	mov    %r14,%rdi
   24c1f:	be 01 00 00 00       	mov    $0x1,%esi
   24c24:	31 d2                	xor    %edx,%edx
   24c26:	ff d3                	callq  *%rbx
   24c28:	4c 89 f7             	mov    %r14,%rdi
   24c2b:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
   24c30:	ff 15 b2 13 02 00    	callq  *0x213b2(%rip)        # 45fe8 <_Unwind_SetIP@GCC_3.0>
   24c36:	41 bf 07 00 00 00    	mov    $0x7,%r15d
   24c3c:	44 89 f8             	mov    %r15d,%eax
   24c3f:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
   24c46:	5b                   	pop    %rbx
   24c47:	41 5c                	pop    %r12
   24c49:	41 5d                	pop    %r13
   24c4b:	41 5e                	pop    %r14
   24c4d:	41 5f                	pop    %r15
   24c4f:	5d                   	pop    %rbp
   24c50:	c3                   	retq   
   24c51:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   24c58:	00 00 00 
   24c5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000024c60 <miniz_oxide::inflate::core::DecompressorOxide::new>:
   24c60:	53                   	push   %rbx
   24c61:	48 89 fb             	mov    %rdi,%rbx
   24c64:	ba ea 2a 00 00       	mov    $0x2aea,%edx
   24c69:	31 f6                	xor    %esi,%esi
   24c6b:	ff 15 9f 0f 02 00    	callq  *0x20f9f(%rip)        # 45c10 <memset@GLIBC_2.2.5>
   24c71:	48 89 d8             	mov    %rbx,%rax
   24c74:	5b                   	pop    %rbx
   24c75:	c3                   	retq   
   24c76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   24c7d:	00 00 00 

0000000000024c80 <miniz_oxide::inflate::core::init_tree>:
   24c80:	55                   	push   %rbp
   24c81:	41 57                	push   %r15
   24c83:	41 56                	push   %r14
   24c85:	41 55                	push   %r13
   24c87:	41 54                	push   %r12
   24c89:	53                   	push   %rbx
   24c8a:	48 81 ec e8 00 00 00 	sub    $0xe8,%rsp
   24c91:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
   24c96:	49 89 ff             	mov    %rdi,%r15
   24c99:	8b 7f 1c             	mov    0x1c(%rdi),%edi
   24c9c:	48 83 ff 02          	cmp    $0x2,%rdi
   24ca0:	0f 87 87 05 00 00    	ja     2522d <miniz_oxide::inflate::core::init_tree+0x5ad>
   24ca6:	49 8d 87 bc 0c 00 00 	lea    0xcbc(%r15),%rax
   24cad:	48 89 84 24 d8 00 00 	mov    %rax,0xd8(%rsp)
   24cb4:	00 
   24cb5:	49 8d 47 3c          	lea    0x3c(%r15),%rax
   24cb9:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
   24cc0:	00 
   24cc1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   24cc8:	00 00 00 
   24ccb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   24cd0:	4c 69 f7 a0 0d 00 00 	imul   $0xda0,%rdi,%r14
   24cd7:	4b 8d 1c 37          	lea    (%r15,%r14,1),%rbx
   24cdb:	48 83 c3 3c          	add    $0x3c,%rbx
   24cdf:	45 8b 6c bf 30       	mov    0x30(%r15,%rdi,4),%r13d
   24ce4:	0f 57 c0             	xorps  %xmm0,%xmm0
   24ce7:	0f 29 84 24 c0 00 00 	movaps %xmm0,0xc0(%rsp)
   24cee:	00 
   24cef:	0f 29 84 24 b0 00 00 	movaps %xmm0,0xb0(%rsp)
   24cf6:	00 
   24cf7:	0f 29 84 24 a0 00 00 	movaps %xmm0,0xa0(%rsp)
   24cfe:	00 
   24cff:	0f 29 84 24 90 00 00 	movaps %xmm0,0x90(%rsp)
   24d06:	00 
   24d07:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
   24d0c:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
   24d11:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   24d16:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
   24d1b:	c7 84 24 80 00 00 00 	movl   $0x0,0x80(%rsp)
   24d22:	00 00 00 00 
   24d26:	ba 80 0c 00 00       	mov    $0xc80,%edx
   24d2b:	48 89 df             	mov    %rbx,%rdi
   24d2e:	31 f6                	xor    %esi,%esi
   24d30:	ff 15 da 0e 02 00    	callq  *0x20eda(%rip)        # 45c10 <memset@GLIBC_2.2.5>
   24d36:	49 81 fd 21 01 00 00 	cmp    $0x121,%r13
   24d3d:	0f 83 a4 05 00 00    	jae    252e7 <miniz_oxide::inflate::core::init_tree+0x667>
   24d43:	45 85 ed             	test   %r13d,%r13d
   24d46:	48 89 9c 24 e0 00 00 	mov    %rbx,0xe0(%rsp)
   24d4d:	00 
   24d4e:	0f 84 cc 00 00 00    	je     24e20 <miniz_oxide::inflate::core::init_tree+0x1a0>
   24d54:	48 8b 84 24 d8 00 00 	mov    0xd8(%rsp),%rax
   24d5b:	00 
   24d5c:	4c 01 f0             	add    %r14,%rax
   24d5f:	31 c9                	xor    %ecx,%ecx
   24d61:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   24d68:	00 00 00 
   24d6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   24d70:	0f b6 3c 08          	movzbl (%rax,%rcx,1),%edi
   24d74:	48 83 ff 0f          	cmp    $0xf,%rdi
   24d78:	0f 87 03 05 00 00    	ja     25281 <miniz_oxide::inflate::core::init_tree+0x601>
   24d7e:	83 84 bc 90 00 00 00 	addl   $0x1,0x90(%rsp,%rdi,4)
   24d85:	01 
   24d86:	48 83 c1 01          	add    $0x1,%rcx
   24d8a:	49 39 cd             	cmp    %rcx,%r13
   24d8d:	75 e1                	jne    24d70 <miniz_oxide::inflate::core::init_tree+0xf0>
   24d8f:	44 8b 94 24 94 00 00 	mov    0x94(%rsp),%r10d
   24d96:	00 
   24d97:	44 8b 8c 24 98 00 00 	mov    0x98(%rsp),%r9d
   24d9e:	00 
   24d9f:	44 8b 84 24 9c 00 00 	mov    0x9c(%rsp),%r8d
   24da6:	00 
   24da7:	44 8b a4 24 a0 00 00 	mov    0xa0(%rsp),%r12d
   24dae:	00 
   24daf:	8b b4 24 a4 00 00 00 	mov    0xa4(%rsp),%esi
   24db6:	8b 94 24 a8 00 00 00 	mov    0xa8(%rsp),%edx
   24dbd:	8b 84 24 ac 00 00 00 	mov    0xac(%rsp),%eax
   24dc4:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   24dc9:	8b 84 24 b0 00 00 00 	mov    0xb0(%rsp),%eax
   24dd0:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   24dd5:	8b 84 24 b4 00 00 00 	mov    0xb4(%rsp),%eax
   24ddc:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   24de1:	8b 84 24 b8 00 00 00 	mov    0xb8(%rsp),%eax
   24de8:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   24ded:	8b 8c 24 bc 00 00 00 	mov    0xbc(%rsp),%ecx
   24df4:	8b 84 24 c0 00 00 00 	mov    0xc0(%rsp),%eax
   24dfb:	8b 9c 24 c4 00 00 00 	mov    0xc4(%rsp),%ebx
   24e02:	8b bc 24 c8 00 00 00 	mov    0xc8(%rsp),%edi
   24e09:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
   24e0e:	8b bc 24 cc 00 00 00 	mov    0xcc(%rsp),%edi
   24e15:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
   24e1a:	e9 41 00 00 00       	jmpq   24e60 <miniz_oxide::inflate::core::init_tree+0x1e0>
   24e1f:	90                   	nop
   24e20:	31 c0                	xor    %eax,%eax
   24e22:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   24e27:	31 c0                	xor    %eax,%eax
   24e29:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   24e2e:	31 db                	xor    %ebx,%ebx
   24e30:	31 c0                	xor    %eax,%eax
   24e32:	31 c9                	xor    %ecx,%ecx
   24e34:	31 d2                	xor    %edx,%edx
   24e36:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   24e3b:	31 d2                	xor    %edx,%edx
   24e3d:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   24e42:	31 d2                	xor    %edx,%edx
   24e44:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   24e49:	31 d2                	xor    %edx,%edx
   24e4b:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   24e50:	31 d2                	xor    %edx,%edx
   24e52:	31 f6                	xor    %esi,%esi
   24e54:	45 31 e4             	xor    %r12d,%r12d
   24e57:	45 31 c0             	xor    %r8d,%r8d
   24e5a:	45 31 c9             	xor    %r9d,%r9d
   24e5d:	45 31 d2             	xor    %r10d,%r10d
   24e60:	47 8d 1c 12          	lea    (%r10,%r10,1),%r11d
   24e64:	44 89 5c 24 48       	mov    %r11d,0x48(%rsp)
   24e69:	43 8d 3c 51          	lea    (%r9,%r10,2),%edi
   24e6d:	8d 2c 3f             	lea    (%rdi,%rdi,1),%ebp
   24e70:	89 6c 24 4c          	mov    %ebp,0x4c(%rsp)
   24e74:	41 8d 3c 78          	lea    (%r8,%rdi,2),%edi
   24e78:	8d 2c 3f             	lea    (%rdi,%rdi,1),%ebp
   24e7b:	89 6c 24 50          	mov    %ebp,0x50(%rsp)
   24e7f:	41 8d 3c 7c          	lea    (%r12,%rdi,2),%edi
   24e83:	8d 2c 3f             	lea    (%rdi,%rdi,1),%ebp
   24e86:	89 6c 24 54          	mov    %ebp,0x54(%rsp)
   24e8a:	8d 3c 7e             	lea    (%rsi,%rdi,2),%edi
   24e8d:	8d 2c 3f             	lea    (%rdi,%rdi,1),%ebp
   24e90:	89 6c 24 58          	mov    %ebp,0x58(%rsp)
   24e94:	8d 3c 7a             	lea    (%rdx,%rdi,2),%edi
   24e97:	8d 2c 3f             	lea    (%rdi,%rdi,1),%ebp
   24e9a:	89 6c 24 5c          	mov    %ebp,0x5c(%rsp)
   24e9e:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
   24ea3:	8d 7c 7d 00          	lea    0x0(%rbp,%rdi,2),%edi
   24ea7:	8d 2c 3f             	lea    (%rdi,%rdi,1),%ebp
   24eaa:	89 6c 24 60          	mov    %ebp,0x60(%rsp)
   24eae:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
   24eb3:	8d 7c 7d 00          	lea    0x0(%rbp,%rdi,2),%edi
   24eb7:	8d 2c 3f             	lea    (%rdi,%rdi,1),%ebp
   24eba:	89 6c 24 64          	mov    %ebp,0x64(%rsp)
   24ebe:	48 8b 6c 24 18       	mov    0x18(%rsp),%rbp
   24ec3:	8d 7c 7d 00          	lea    0x0(%rbp,%rdi,2),%edi
   24ec7:	8d 2c 3f             	lea    (%rdi,%rdi,1),%ebp
   24eca:	89 6c 24 68          	mov    %ebp,0x68(%rsp)
   24ece:	48 8b 6c 24 20       	mov    0x20(%rsp),%rbp
   24ed3:	8d 7c 7d 00          	lea    0x0(%rbp,%rdi,2),%edi
   24ed7:	8d 2c 3f             	lea    (%rdi,%rdi,1),%ebp
   24eda:	89 6c 24 6c          	mov    %ebp,0x6c(%rsp)
   24ede:	49 89 cb             	mov    %rcx,%r11
   24ee1:	8d 3c 79             	lea    (%rcx,%rdi,2),%edi
   24ee4:	8d 2c 3f             	lea    (%rdi,%rdi,1),%ebp
   24ee7:	89 6c 24 70          	mov    %ebp,0x70(%rsp)
   24eeb:	48 89 c1             	mov    %rax,%rcx
   24eee:	8d 3c 78             	lea    (%rax,%rdi,2),%edi
   24ef1:	8d 2c 3f             	lea    (%rdi,%rdi,1),%ebp
   24ef4:	89 6c 24 74          	mov    %ebp,0x74(%rsp)
   24ef8:	48 89 d8             	mov    %rbx,%rax
   24efb:	8d 3c 7b             	lea    (%rbx,%rdi,2),%edi
   24efe:	8d 2c 3f             	lea    (%rdi,%rdi,1),%ebp
   24f01:	89 6c 24 78          	mov    %ebp,0x78(%rsp)
   24f05:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
   24f0a:	8d 3c 7b             	lea    (%rbx,%rdi,2),%edi
   24f0d:	8d 2c 3f             	lea    (%rdi,%rdi,1),%ebp
   24f10:	89 6c 24 7c          	mov    %ebp,0x7c(%rsp)
   24f14:	48 8b 6c 24 38       	mov    0x38(%rsp),%rbp
   24f19:	8d 7c 7d 00          	lea    0x0(%rbp,%rdi,2),%edi
   24f1d:	01 ff                	add    %edi,%edi
   24f1f:	89 bc 24 80 00 00 00 	mov    %edi,0x80(%rsp)
   24f26:	81 ff 00 00 01 00    	cmp    $0x10000,%edi
   24f2c:	74 3f                	je     24f6d <miniz_oxide::inflate::core::init_tree+0x2ed>
   24f2e:	45 01 d1             	add    %r10d,%r9d
   24f31:	45 01 c8             	add    %r9d,%r8d
   24f34:	45 01 c4             	add    %r8d,%r12d
   24f37:	44 01 e6             	add    %r12d,%esi
   24f3a:	01 f2                	add    %esi,%edx
   24f3c:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   24f41:	01 d6                	add    %edx,%esi
   24f43:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   24f48:	01 f2                	add    %esi,%edx
   24f4a:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   24f4f:	01 d6                	add    %edx,%esi
   24f51:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   24f56:	01 f2                	add    %esi,%edx
   24f58:	41 01 d3             	add    %edx,%r11d
   24f5b:	44 01 d9             	add    %r11d,%ecx
   24f5e:	01 c8                	add    %ecx,%eax
   24f60:	01 c3                	add    %eax,%ebx
   24f62:	01 dd                	add    %ebx,%ebp
   24f64:	83 fd 01             	cmp    $0x1,%ebp
   24f67:	0f 87 d4 02 00 00    	ja     25241 <miniz_oxide::inflate::core::init_tree+0x5c1>
   24f6d:	45 85 ed             	test   %r13d,%r13d
   24f70:	0f 84 9a 02 00 00    	je     25210 <miniz_oxide::inflate::core::init_tree+0x590>
   24f76:	48 8b 84 24 d0 00 00 	mov    0xd0(%rsp),%rax
   24f7d:	00 
   24f7e:	4e 8d 1c 30          	lea    (%rax,%r14,1),%r11
   24f82:	66 41 b8 ff ff       	mov    $0xffff,%r8w
   24f87:	45 31 c9             	xor    %r9d,%r9d
   24f8a:	49 81 f9 20 01 00 00 	cmp    $0x120,%r9
   24f91:	bf 20 01 00 00       	mov    $0x120,%edi
   24f96:	49 0f 47 f9          	cmova  %r9,%rdi
   24f9a:	e9 0a 00 00 00       	jmpq   24fa9 <miniz_oxide::inflate::core::init_tree+0x329>
   24f9f:	90                   	nop
   24fa0:	4d 39 e9             	cmp    %r13,%r9
   24fa3:	0f 83 67 02 00 00    	jae    25210 <miniz_oxide::inflate::core::init_tree+0x590>
   24fa9:	49 39 f9             	cmp    %rdi,%r9
   24fac:	0f 84 e3 02 00 00    	je     25295 <miniz_oxide::inflate::core::init_tree+0x615>
   24fb2:	4d 89 cc             	mov    %r9,%r12
   24fb5:	49 83 c1 01          	add    $0x1,%r9
   24fb9:	4f 8d 14 37          	lea    (%r15,%r14,1),%r10
   24fbd:	43 0f b6 b4 14 bc 0c 	movzbl 0xcbc(%r12,%r10,1),%esi
   24fc4:	00 00 
   24fc6:	66 85 f6             	test   %si,%si
   24fc9:	0f 84 d1 ff ff ff    	je     24fa0 <miniz_oxide::inflate::core::init_tree+0x320>
   24fcf:	0f b7 ce             	movzwl %si,%ecx
   24fd2:	80 f9 10             	cmp    $0x10,%cl
   24fd5:	0f 87 ce 02 00 00    	ja     252a9 <miniz_oxide::inflate::core::init_tree+0x629>
   24fdb:	8b 5c 8c 40          	mov    0x40(%rsp,%rcx,4),%ebx
   24fdf:	8d 43 01             	lea    0x1(%rbx),%eax
   24fe2:	89 44 8c 40          	mov    %eax,0x40(%rsp,%rcx,4)
   24fe6:	8d 51 ff             	lea    -0x1(%rcx),%edx
   24fe9:	89 c8                	mov    %ecx,%eax
   24feb:	24 03                	and    $0x3,%al
   24fed:	31 ed                	xor    %ebp,%ebp
   24fef:	80 fa 03             	cmp    $0x3,%dl
   24ff2:	0f 83 08 00 00 00    	jae    25000 <miniz_oxide::inflate::core::init_tree+0x380>
   24ff8:	e9 44 00 00 00       	jmpq   25041 <miniz_oxide::inflate::core::init_tree+0x3c1>
   24ffd:	0f 1f 00             	nopl   (%rax)
   25000:	40 80 e6 fc          	and    $0xfc,%sil
   25004:	40 f6 de             	neg    %sil
   25007:	31 ed                	xor    %ebp,%ebp
   25009:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   25010:	89 da                	mov    %ebx,%edx
   25012:	83 e2 01             	and    $0x1,%edx
   25015:	c1 e2 02             	shl    $0x2,%edx
   25018:	8d 14 ea             	lea    (%rdx,%rbp,8),%edx
   2501b:	89 dd                	mov    %ebx,%ebp
   2501d:	83 e5 02             	and    $0x2,%ebp
   25020:	09 d5                	or     %edx,%ebp
   25022:	89 da                	mov    %ebx,%edx
   25024:	c1 ea 02             	shr    $0x2,%edx
   25027:	83 e2 01             	and    $0x1,%edx
   2502a:	09 ea                	or     %ebp,%edx
   2502c:	89 dd                	mov    %ebx,%ebp
   2502e:	c1 ed 03             	shr    $0x3,%ebp
   25031:	83 e5 01             	and    $0x1,%ebp
   25034:	8d 6c 55 00          	lea    0x0(%rbp,%rdx,2),%ebp
   25038:	c1 eb 04             	shr    $0x4,%ebx
   2503b:	40 80 c6 04          	add    $0x4,%sil
   2503f:	75 cf                	jne    25010 <miniz_oxide::inflate::core::init_tree+0x390>
   25041:	84 c0                	test   %al,%al
   25043:	0f 84 17 00 00 00    	je     25060 <miniz_oxide::inflate::core::init_tree+0x3e0>
   25049:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   25050:	89 ea                	mov    %ebp,%edx
   25052:	89 de                	mov    %ebx,%esi
   25054:	83 e6 01             	and    $0x1,%esi
   25057:	8d 2c 56             	lea    (%rsi,%rdx,2),%ebp
   2505a:	d1 eb                	shr    %ebx
   2505c:	04 ff                	add    $0xff,%al
   2505e:	75 f0                	jne    25050 <miniz_oxide::inflate::core::init_tree+0x3d0>
   25060:	80 f9 0b             	cmp    $0xb,%cl
   25063:	0f 83 d7 00 00 00    	jae    25140 <miniz_oxide::inflate::core::init_tree+0x4c0>
   25069:	81 fd ff 03 00 00    	cmp    $0x3ff,%ebp
   2506f:	0f 87 2b ff ff ff    	ja     24fa0 <miniz_oxide::inflate::core::init_tree+0x320>
   25075:	b8 01 00 00 00       	mov    $0x1,%eax
   2507a:	48 d3 e0             	shl    %cl,%rax
   2507d:	89 cb                	mov    %ecx,%ebx
   2507f:	89 ea                	mov    %ebp,%edx
   25081:	be ff 03 00 00       	mov    $0x3ff,%esi
   25086:	48 29 d6             	sub    %rdx,%rsi
   25089:	48 d3 ee             	shr    %cl,%rsi
   2508c:	c1 e3 09             	shl    $0x9,%ebx
   2508f:	41 09 dc             	or     %ebx,%r12d
   25092:	8d 4e 01             	lea    0x1(%rsi),%ecx
   25095:	48 83 e1 07          	and    $0x7,%rcx
   25099:	0f 84 0f 00 00 00    	je     250ae <miniz_oxide::inflate::core::init_tree+0x42e>
   2509f:	90                   	nop
   250a0:	66 45 89 24 53       	mov    %r12w,(%r11,%rdx,2)
   250a5:	48 01 c2             	add    %rax,%rdx
   250a8:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
   250ac:	75 f2                	jne    250a0 <miniz_oxide::inflate::core::init_tree+0x420>
   250ae:	48 83 fe 07          	cmp    $0x7,%rsi
   250b2:	0f 82 e8 fe ff ff    	jb     24fa0 <miniz_oxide::inflate::core::init_tree+0x320>
   250b8:	49 8d 0c 53          	lea    (%r11,%rdx,2),%rcx
   250bc:	48 89 c6             	mov    %rax,%rsi
   250bf:	48 c1 e6 04          	shl    $0x4,%rsi
   250c3:	48 8d 2c 00          	lea    (%rax,%rax,1),%rbp
   250c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   250ce:	00 00 
   250d0:	66 44 89 21          	mov    %r12w,(%rcx)
   250d4:	48 01 c2             	add    %rax,%rdx
   250d7:	48 8d 1c 29          	lea    (%rcx,%rbp,1),%rbx
   250db:	66 44 89 24 41       	mov    %r12w,(%rcx,%rax,2)
   250e0:	48 01 c2             	add    %rax,%rdx
   250e3:	48 01 eb             	add    %rbp,%rbx
   250e6:	66 44 89 24 81       	mov    %r12w,(%rcx,%rax,4)
   250eb:	48 01 c2             	add    %rax,%rdx
   250ee:	66 44 89 24 43       	mov    %r12w,(%rbx,%rax,2)
   250f3:	48 01 eb             	add    %rbp,%rbx
   250f6:	48 01 c2             	add    %rax,%rdx
   250f9:	48 01 eb             	add    %rbp,%rbx
   250fc:	66 44 89 24 c1       	mov    %r12w,(%rcx,%rax,8)
   25101:	48 01 c2             	add    %rax,%rdx
   25104:	66 44 89 24 43       	mov    %r12w,(%rbx,%rax,2)
   25109:	48 01 eb             	add    %rbp,%rbx
   2510c:	48 01 c2             	add    %rax,%rdx
   2510f:	66 44 89 24 43       	mov    %r12w,(%rbx,%rax,2)
   25114:	48 01 eb             	add    %rbp,%rbx
   25117:	48 01 c2             	add    %rax,%rdx
   2511a:	66 44 89 24 43       	mov    %r12w,(%rbx,%rax,2)
   2511f:	48 01 c2             	add    %rax,%rdx
   25122:	48 01 f1             	add    %rsi,%rcx
   25125:	48 81 fa 00 04 00 00 	cmp    $0x400,%rdx
   2512c:	0f 82 9e ff ff ff    	jb     250d0 <miniz_oxide::inflate::core::init_tree+0x450>
   25132:	e9 69 fe ff ff       	jmpq   24fa0 <miniz_oxide::inflate::core::init_tree+0x320>
   25137:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2513e:	00 00 
   25140:	81 e5 ff 03 00 00    	and    $0x3ff,%ebp
   25146:	48 8b 84 24 e0 00 00 	mov    0xe0(%rsp),%rax
   2514d:	00 
   2514e:	0f b7 34 68          	movzwl (%rax,%rbp,2),%esi
   25152:	66 85 f6             	test   %si,%si
   25155:	74 6a                	je     251c1 <miniz_oxide::inflate::core::init_tree+0x541>
   25157:	44 89 c0             	mov    %r8d,%eax
   2515a:	c1 ea 08             	shr    $0x8,%edx
   2515d:	81 e2 ff ff 7f 00    	and    $0x7fffff,%edx
   25163:	80 f9 0c             	cmp    $0xc,%cl
   25166:	72 73                	jb     251db <miniz_oxide::inflate::core::init_tree+0x55b>
   25168:	83 c1 f5             	add    $0xfffffff5,%ecx
   2516b:	e9 1e 00 00 00       	jmpq   2518e <miniz_oxide::inflate::core::init_tree+0x50e>
   25170:	49 8d 34 7a          	lea    (%r10,%rdi,2),%rsi
   25174:	48 81 c6 3c 08 00 00 	add    $0x83c,%rsi
   2517b:	66 89 06             	mov    %ax,(%rsi)
   2517e:	44 8d 40 fe          	lea    -0x2(%rax),%r8d
   25182:	89 c3                	mov    %eax,%ebx
   25184:	89 c6                	mov    %eax,%esi
   25186:	44 89 c0             	mov    %r8d,%eax
   25189:	80 c1 ff             	add    $0xff,%cl
   2518c:	74 52                	je     251e0 <miniz_oxide::inflate::core::init_tree+0x560>
   2518e:	d1 ea                	shr    %edx
   25190:	89 d7                	mov    %edx,%edi
   25192:	83 e7 01             	and    $0x1,%edi
   25195:	f7 d6                	not    %esi
   25197:	01 fe                	add    %edi,%esi
   25199:	48 0f bf fe          	movswq %si,%rdi
   2519d:	0f b7 f6             	movzwl %si,%esi
   251a0:	81 fe 3f 02 00 00    	cmp    $0x23f,%esi
   251a6:	0f 87 13 01 00 00    	ja     252bf <miniz_oxide::inflate::core::init_tree+0x63f>
   251ac:	41 0f b7 b4 7a 3c 08 	movzwl 0x83c(%r10,%rdi,2),%esi
   251b3:	00 00 
   251b5:	66 85 f6             	test   %si,%si
   251b8:	74 b6                	je     25170 <miniz_oxide::inflate::core::init_tree+0x4f0>
   251ba:	41 89 c0             	mov    %eax,%r8d
   251bd:	89 f0                	mov    %esi,%eax
   251bf:	eb c1                	jmp    25182 <miniz_oxide::inflate::core::init_tree+0x502>
   251c1:	66 44 89 04 68       	mov    %r8w,(%rax,%rbp,2)
   251c6:	41 8d 40 fe          	lea    -0x2(%r8),%eax
   251ca:	44 89 c6             	mov    %r8d,%esi
   251cd:	c1 ea 08             	shr    $0x8,%edx
   251d0:	81 e2 ff ff 7f 00    	and    $0x7fffff,%edx
   251d6:	80 f9 0c             	cmp    $0xc,%cl
   251d9:	73 8d                	jae    25168 <miniz_oxide::inflate::core::init_tree+0x4e8>
   251db:	41 89 c0             	mov    %eax,%r8d
   251de:	89 f3                	mov    %esi,%ebx
   251e0:	d1 ea                	shr    %edx
   251e2:	83 e2 01             	and    $0x1,%edx
   251e5:	f7 d3                	not    %ebx
   251e7:	01 d3                	add    %edx,%ebx
   251e9:	48 0f bf fb          	movswq %bx,%rdi
   251ed:	0f b7 c3             	movzwl %bx,%eax
   251f0:	3d 40 02 00 00       	cmp    $0x240,%eax
   251f5:	0f 83 d8 00 00 00    	jae    252d3 <miniz_oxide::inflate::core::init_tree+0x653>
   251fb:	66 45 89 a4 7a 3c 08 	mov    %r12w,0x83c(%r10,%rdi,2)
   25202:	00 00 
   25204:	4d 39 e9             	cmp    %r13,%r9
   25207:	0f 82 7d fd ff ff    	jb     24f8a <miniz_oxide::inflate::core::init_tree+0x30a>
   2520d:	0f 1f 00             	nopl   (%rax)
   25210:	41 8b 7f 1c          	mov    0x1c(%r15),%edi
   25214:	85 ff                	test   %edi,%edi
   25216:	74 41                	je     25259 <miniz_oxide::inflate::core::init_tree+0x5d9>
   25218:	83 ff 02             	cmp    $0x2,%edi
   2521b:	74 2a                	je     25247 <miniz_oxide::inflate::core::init_tree+0x5c7>
   2521d:	83 c7 ff             	add    $0xffffffff,%edi
   25220:	41 89 7f 1c          	mov    %edi,0x1c(%r15)
   25224:	83 ff 03             	cmp    $0x3,%edi
   25227:	0f 82 a3 fa ff ff    	jb     24cd0 <miniz_oxide::inflate::core::init_tree+0x50>
   2522d:	48 8d 15 bc f5 01 00 	lea    0x1f5bc(%rip),%rdx        # 447f0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1298>
   25234:	be 03 00 00 00       	mov    $0x3,%esi
   25239:	ff 15 59 0a 02 00    	callq  *0x20a59(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   2523f:	0f 0b                	ud2    
   25241:	66 b8 00 1b          	mov    $0x1b00,%ax
   25245:	eb 22                	jmp    25269 <miniz_oxide::inflate::core::init_tree+0x5e9>
   25247:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   2524c:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
   25253:	66 b8 00 0a          	mov    $0xa00,%ax
   25257:	eb 10                	jmp    25269 <miniz_oxide::inflate::core::init_tree+0x5e9>
   25259:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   2525e:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
   25265:	66 b8 00 0c          	mov    $0xc00,%ax
   25269:	0f b7 c0             	movzwl %ax,%eax
   2526c:	83 c8 01             	or     $0x1,%eax
   2526f:	48 81 c4 e8 00 00 00 	add    $0xe8,%rsp
   25276:	5b                   	pop    %rbx
   25277:	41 5c                	pop    %r12
   25279:	41 5d                	pop    %r13
   2527b:	41 5e                	pop    %r14
   2527d:	41 5f                	pop    %r15
   2527f:	5d                   	pop    %rbp
   25280:	c3                   	retq   
   25281:	48 8d 15 98 f5 01 00 	lea    0x1f598(%rip),%rdx        # 44820 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x12c8>
   25288:	be 10 00 00 00       	mov    $0x10,%esi
   2528d:	ff 15 05 0a 02 00    	callq  *0x20a05(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   25293:	0f 0b                	ud2    
   25295:	48 8d 15 9c f5 01 00 	lea    0x1f59c(%rip),%rdx        # 44838 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x12e0>
   2529c:	be 20 01 00 00       	mov    $0x120,%esi
   252a1:	ff 15 f1 09 02 00    	callq  *0x209f1(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   252a7:	0f 0b                	ud2    
   252a9:	89 cf                	mov    %ecx,%edi
   252ab:	48 8d 15 9e f5 01 00 	lea    0x1f59e(%rip),%rdx        # 44850 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x12f8>
   252b2:	be 11 00 00 00       	mov    $0x11,%esi
   252b7:	ff 15 db 09 02 00    	callq  *0x209db(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   252bd:	0f 0b                	ud2    
   252bf:	48 8d 15 a2 f5 01 00 	lea    0x1f5a2(%rip),%rdx        # 44868 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1310>
   252c6:	be 40 02 00 00       	mov    $0x240,%esi
   252cb:	ff 15 c7 09 02 00    	callq  *0x209c7(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   252d1:	0f 0b                	ud2    
   252d3:	48 8d 15 a6 f5 01 00 	lea    0x1f5a6(%rip),%rdx        # 44880 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1328>
   252da:	be 40 02 00 00       	mov    $0x240,%esi
   252df:	ff 15 b3 09 02 00    	callq  *0x209b3(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   252e5:	0f 0b                	ud2    
   252e7:	48 8d 15 1a f5 01 00 	lea    0x1f51a(%rip),%rdx        # 44808 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x12b0>
   252ee:	be 20 01 00 00       	mov    $0x120,%esi
   252f3:	4c 89 ef             	mov    %r13,%rdi
   252f6:	ff 15 34 07 02 00    	callq  *0x20734(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   252fc:	0f 0b                	ud2    
   252fe:	66 90                	xchg   %ax,%ax

0000000000025300 <miniz_oxide::inflate::core::transfer>:
   25300:	53                   	push   %rbx
   25301:	4d 89 c3             	mov    %r8,%r11
   25304:	49 c1 eb 02          	shr    $0x2,%r11
   25308:	0f 84 b5 00 00 00    	je     253c3 <miniz_oxide::inflate::core::transfer+0xc3>
   2530e:	66 90                	xchg   %ax,%ax
   25310:	48 89 d0             	mov    %rdx,%rax
   25313:	4c 21 c8             	and    %r9,%rax
   25316:	48 39 f0             	cmp    %rsi,%rax
   25319:	0f 83 8f 01 00 00    	jae    254ae <miniz_oxide::inflate::core::transfer+0x1ae>
   2531f:	48 39 f1             	cmp    %rsi,%rcx
   25322:	0f 83 98 01 00 00    	jae    254c0 <miniz_oxide::inflate::core::transfer+0x1c0>
   25328:	48 89 d3             	mov    %rdx,%rbx
   2532b:	0f b6 04 07          	movzbl (%rdi,%rax,1),%eax
   2532f:	88 04 0f             	mov    %al,(%rdi,%rcx,1)
   25332:	48 83 c2 01          	add    $0x1,%rdx
   25336:	48 89 d0             	mov    %rdx,%rax
   25339:	4c 21 c8             	and    %r9,%rax
   2533c:	48 39 f0             	cmp    %rsi,%rax
   2533f:	0f 83 8d 01 00 00    	jae    254d2 <miniz_oxide::inflate::core::transfer+0x1d2>
   25345:	4c 8d 51 01          	lea    0x1(%rcx),%r10
   25349:	49 39 f2             	cmp    %rsi,%r10
   2534c:	0f 83 92 01 00 00    	jae    254e4 <miniz_oxide::inflate::core::transfer+0x1e4>
   25352:	0f b6 04 07          	movzbl (%rdi,%rax,1),%eax
   25356:	88 44 0f 01          	mov    %al,0x1(%rdi,%rcx,1)
   2535a:	48 83 c2 01          	add    $0x1,%rdx
   2535e:	48 89 d0             	mov    %rdx,%rax
   25361:	4c 21 c8             	and    %r9,%rax
   25364:	48 39 f0             	cmp    %rsi,%rax
   25367:	0f 83 80 01 00 00    	jae    254ed <miniz_oxide::inflate::core::transfer+0x1ed>
   2536d:	4c 8d 51 02          	lea    0x2(%rcx),%r10
   25371:	49 39 f2             	cmp    %rsi,%r10
   25374:	0f 83 85 01 00 00    	jae    254ff <miniz_oxide::inflate::core::transfer+0x1ff>
   2537a:	0f b6 04 07          	movzbl (%rdi,%rax,1),%eax
   2537e:	88 44 0f 02          	mov    %al,0x2(%rdi,%rcx,1)
   25382:	48 83 c2 01          	add    $0x1,%rdx
   25386:	48 89 d0             	mov    %rdx,%rax
   25389:	4c 21 c8             	and    %r9,%rax
   2538c:	48 39 f0             	cmp    %rsi,%rax
   2538f:	0f 83 73 01 00 00    	jae    25508 <miniz_oxide::inflate::core::transfer+0x208>
   25395:	4c 8d 51 03          	lea    0x3(%rcx),%r10
   25399:	49 39 f2             	cmp    %rsi,%r10
   2539c:	0f 83 78 01 00 00    	jae    2551a <miniz_oxide::inflate::core::transfer+0x21a>
   253a2:	0f b6 04 07          	movzbl (%rdi,%rax,1),%eax
   253a6:	88 44 0f 03          	mov    %al,0x3(%rdi,%rcx,1)
   253aa:	48 83 c1 04          	add    $0x4,%rcx
   253ae:	48 83 c2 01          	add    $0x1,%rdx
   253b2:	49 83 c3 ff          	add    $0xffffffffffffffff,%r11
   253b6:	0f 85 54 ff ff ff    	jne    25310 <miniz_oxide::inflate::core::transfer+0x10>
   253bc:	48 83 c3 04          	add    $0x4,%rbx
   253c0:	48 89 da             	mov    %rbx,%rdx
   253c3:	41 83 e0 03          	and    $0x3,%r8d
   253c7:	48 8d 05 62 33 01 00 	lea    0x13362(%rip),%rax        # 38730 <str.6+0x1410>
   253ce:	4a 63 1c 80          	movslq (%rax,%r8,4),%rbx
   253d2:	48 01 c3             	add    %rax,%rbx
   253d5:	ff e3                	jmpq   *%rbx
   253d7:	4c 21 ca             	and    %r9,%rdx
   253da:	48 39 f2             	cmp    %rsi,%rdx
   253dd:	0f 83 49 01 00 00    	jae    2552c <miniz_oxide::inflate::core::transfer+0x22c>
   253e3:	48 39 f1             	cmp    %rsi,%rcx
   253e6:	0f 82 ba 00 00 00    	jb     254a6 <miniz_oxide::inflate::core::transfer+0x1a6>
   253ec:	48 8d 15 6d f6 01 00 	lea    0x1f66d(%rip),%rdx        # 44a60 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1508>
   253f3:	48 89 cf             	mov    %rcx,%rdi
   253f6:	ff 15 9c 08 02 00    	callq  *0x2089c(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   253fc:	0f 0b                	ud2    
   253fe:	48 89 d0             	mov    %rdx,%rax
   25401:	4c 21 c8             	and    %r9,%rax
   25404:	48 39 f0             	cmp    %rsi,%rax
   25407:	0f 83 28 01 00 00    	jae    25535 <miniz_oxide::inflate::core::transfer+0x235>
   2540d:	48 39 f1             	cmp    %rsi,%rcx
   25410:	0f 83 31 01 00 00    	jae    25547 <miniz_oxide::inflate::core::transfer+0x247>
   25416:	8a 04 07             	mov    (%rdi,%rax,1),%al
   25419:	88 04 0f             	mov    %al,(%rdi,%rcx,1)
   2541c:	48 83 c2 01          	add    $0x1,%rdx
   25420:	4c 21 ca             	and    %r9,%rdx
   25423:	48 39 f2             	cmp    %rsi,%rdx
   25426:	0f 83 2d 01 00 00    	jae    25559 <miniz_oxide::inflate::core::transfer+0x259>
   2542c:	48 83 c1 01          	add    $0x1,%rcx
   25430:	48 39 f1             	cmp    %rsi,%rcx
   25433:	72 71                	jb     254a6 <miniz_oxide::inflate::core::transfer+0x1a6>
   25435:	48 8d 15 f4 f5 01 00 	lea    0x1f5f4(%rip),%rdx        # 44a30 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x14d8>
   2543c:	48 89 cf             	mov    %rcx,%rdi
   2543f:	ff 15 53 08 02 00    	callq  *0x20853(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   25445:	0f 0b                	ud2    
   25447:	48 89 d0             	mov    %rdx,%rax
   2544a:	4c 21 c8             	and    %r9,%rax
   2544d:	48 39 f0             	cmp    %rsi,%rax
   25450:	0f 83 0c 01 00 00    	jae    25562 <miniz_oxide::inflate::core::transfer+0x262>
   25456:	48 39 f1             	cmp    %rsi,%rcx
   25459:	0f 83 15 01 00 00    	jae    25574 <miniz_oxide::inflate::core::transfer+0x274>
   2545f:	8a 04 07             	mov    (%rdi,%rax,1),%al
   25462:	88 04 0f             	mov    %al,(%rdi,%rcx,1)
   25465:	48 8d 42 01          	lea    0x1(%rdx),%rax
   25469:	4c 21 c8             	and    %r9,%rax
   2546c:	48 39 f0             	cmp    %rsi,%rax
   2546f:	0f 83 11 01 00 00    	jae    25586 <miniz_oxide::inflate::core::transfer+0x286>
   25475:	4c 8d 41 01          	lea    0x1(%rcx),%r8
   25479:	49 39 f0             	cmp    %rsi,%r8
   2547c:	0f 83 16 01 00 00    	jae    25598 <miniz_oxide::inflate::core::transfer+0x298>
   25482:	8a 04 07             	mov    (%rdi,%rax,1),%al
   25485:	42 88 04 07          	mov    %al,(%rdi,%r8,1)
   25489:	48 83 c2 02          	add    $0x2,%rdx
   2548d:	4c 21 ca             	and    %r9,%rdx
   25490:	48 39 f2             	cmp    %rsi,%rdx
   25493:	0f 83 11 01 00 00    	jae    255aa <miniz_oxide::inflate::core::transfer+0x2aa>
   25499:	48 83 c1 02          	add    $0x2,%rcx
   2549d:	48 39 f1             	cmp    %rsi,%rcx
   254a0:	0f 83 19 01 00 00    	jae    255bf <miniz_oxide::inflate::core::transfer+0x2bf>
   254a6:	8a 04 17             	mov    (%rdi,%rdx,1),%al
   254a9:	88 04 0f             	mov    %al,(%rdi,%rcx,1)
   254ac:	5b                   	pop    %rbx
   254ad:	c3                   	retq   
   254ae:	48 8d 15 e3 f3 01 00 	lea    0x1f3e3(%rip),%rdx        # 44898 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1340>
   254b5:	48 89 c7             	mov    %rax,%rdi
   254b8:	ff 15 da 07 02 00    	callq  *0x207da(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   254be:	0f 0b                	ud2    
   254c0:	48 8d 15 e9 f3 01 00 	lea    0x1f3e9(%rip),%rdx        # 448b0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1358>
   254c7:	48 89 cf             	mov    %rcx,%rdi
   254ca:	ff 15 c8 07 02 00    	callq  *0x207c8(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   254d0:	0f 0b                	ud2    
   254d2:	48 8d 15 ef f3 01 00 	lea    0x1f3ef(%rip),%rdx        # 448c8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1370>
   254d9:	48 89 c7             	mov    %rax,%rdi
   254dc:	ff 15 b6 07 02 00    	callq  *0x207b6(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   254e2:	0f 0b                	ud2    
   254e4:	48 8d 15 f5 f3 01 00 	lea    0x1f3f5(%rip),%rdx        # 448e0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1388>
   254eb:	eb 34                	jmp    25521 <miniz_oxide::inflate::core::transfer+0x221>
   254ed:	48 8d 15 04 f4 01 00 	lea    0x1f404(%rip),%rdx        # 448f8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x13a0>
   254f4:	48 89 c7             	mov    %rax,%rdi
   254f7:	ff 15 9b 07 02 00    	callq  *0x2079b(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   254fd:	0f 0b                	ud2    
   254ff:	48 8d 15 0a f4 01 00 	lea    0x1f40a(%rip),%rdx        # 44910 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x13b8>
   25506:	eb 19                	jmp    25521 <miniz_oxide::inflate::core::transfer+0x221>
   25508:	48 8d 15 19 f4 01 00 	lea    0x1f419(%rip),%rdx        # 44928 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x13d0>
   2550f:	48 89 c7             	mov    %rax,%rdi
   25512:	ff 15 80 07 02 00    	callq  *0x20780(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   25518:	0f 0b                	ud2    
   2551a:	48 8d 15 1f f4 01 00 	lea    0x1f41f(%rip),%rdx        # 44940 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x13e8>
   25521:	4c 89 d7             	mov    %r10,%rdi
   25524:	ff 15 6e 07 02 00    	callq  *0x2076e(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   2552a:	0f 0b                	ud2    
   2552c:	48 8d 05 15 f5 01 00 	lea    0x1f515(%rip),%rax        # 44a48 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x14f0>
   25533:	eb 7c                	jmp    255b1 <miniz_oxide::inflate::core::transfer+0x2b1>
   25535:	48 8d 15 ac f4 01 00 	lea    0x1f4ac(%rip),%rdx        # 449e8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1490>
   2553c:	48 89 c7             	mov    %rax,%rdi
   2553f:	ff 15 53 07 02 00    	callq  *0x20753(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   25545:	0f 0b                	ud2    
   25547:	48 8d 15 b2 f4 01 00 	lea    0x1f4b2(%rip),%rdx        # 44a00 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x14a8>
   2554e:	48 89 cf             	mov    %rcx,%rdi
   25551:	ff 15 41 07 02 00    	callq  *0x20741(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   25557:	0f 0b                	ud2    
   25559:	48 8d 05 b8 f4 01 00 	lea    0x1f4b8(%rip),%rax        # 44a18 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x14c0>
   25560:	eb 4f                	jmp    255b1 <miniz_oxide::inflate::core::transfer+0x2b1>
   25562:	48 8d 15 ef f3 01 00 	lea    0x1f3ef(%rip),%rdx        # 44958 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1400>
   25569:	48 89 c7             	mov    %rax,%rdi
   2556c:	ff 15 26 07 02 00    	callq  *0x20726(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   25572:	0f 0b                	ud2    
   25574:	48 8d 15 f5 f3 01 00 	lea    0x1f3f5(%rip),%rdx        # 44970 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1418>
   2557b:	48 89 cf             	mov    %rcx,%rdi
   2557e:	ff 15 14 07 02 00    	callq  *0x20714(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   25584:	0f 0b                	ud2    
   25586:	48 8d 15 fb f3 01 00 	lea    0x1f3fb(%rip),%rdx        # 44988 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1430>
   2558d:	48 89 c7             	mov    %rax,%rdi
   25590:	ff 15 02 07 02 00    	callq  *0x20702(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   25596:	0f 0b                	ud2    
   25598:	48 8d 15 01 f4 01 00 	lea    0x1f401(%rip),%rdx        # 449a0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1448>
   2559f:	4c 89 c7             	mov    %r8,%rdi
   255a2:	ff 15 f0 06 02 00    	callq  *0x206f0(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   255a8:	0f 0b                	ud2    
   255aa:	48 8d 05 07 f4 01 00 	lea    0x1f407(%rip),%rax        # 449b8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1460>
   255b1:	48 89 d7             	mov    %rdx,%rdi
   255b4:	48 89 c2             	mov    %rax,%rdx
   255b7:	ff 15 db 06 02 00    	callq  *0x206db(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   255bd:	0f 0b                	ud2    
   255bf:	48 8d 15 0a f4 01 00 	lea    0x1f40a(%rip),%rdx        # 449d0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1478>
   255c6:	48 89 cf             	mov    %rcx,%rdi
   255c9:	ff 15 c9 06 02 00    	callq  *0x206c9(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   255cf:	0f 0b                	ud2    
   255d1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   255d8:	00 00 00 
   255db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000255e0 <miniz_oxide::inflate::core::apply_match>:
   255e0:	50                   	push   %rax
   255e1:	49 89 d2             	mov    %rdx,%r10
   255e4:	48 29 ca             	sub    %rcx,%rdx
   255e7:	4c 21 ca             	and    %r9,%rdx
   255ea:	49 83 f8 03          	cmp    $0x3,%r8
   255ee:	75 62                	jne    25652 <miniz_oxide::inflate::core::apply_match+0x72>
   255f0:	48 39 f2             	cmp    %rsi,%rdx
   255f3:	0f 83 f5 00 00 00    	jae    256ee <miniz_oxide::inflate::core::apply_match+0x10e>
   255f9:	4c 39 d6             	cmp    %r10,%rsi
   255fc:	0f 86 f5 00 00 00    	jbe    256f7 <miniz_oxide::inflate::core::apply_match+0x117>
   25602:	8a 04 17             	mov    (%rdi,%rdx,1),%al
   25605:	42 88 04 17          	mov    %al,(%rdi,%r10,1)
   25609:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
   2560d:	4c 21 c9             	and    %r9,%rcx
   25610:	48 39 f1             	cmp    %rsi,%rcx
   25613:	0f 83 e7 00 00 00    	jae    25700 <miniz_oxide::inflate::core::apply_match+0x120>
   25619:	49 8d 42 01          	lea    0x1(%r10),%rax
   2561d:	48 39 f0             	cmp    %rsi,%rax
   25620:	0f 83 ec 00 00 00    	jae    25712 <miniz_oxide::inflate::core::apply_match+0x132>
   25626:	8a 0c 0f             	mov    (%rdi,%rcx,1),%cl
   25629:	88 0c 07             	mov    %cl,(%rdi,%rax,1)
   2562c:	48 83 c2 02          	add    $0x2,%rdx
   25630:	4c 21 ca             	and    %r9,%rdx
   25633:	48 39 f2             	cmp    %rsi,%rdx
   25636:	0f 83 e8 00 00 00    	jae    25724 <miniz_oxide::inflate::core::apply_match+0x144>
   2563c:	49 83 c2 02          	add    $0x2,%r10
   25640:	49 39 f2             	cmp    %rsi,%r10
   25643:	0f 83 f0 00 00 00    	jae    25739 <miniz_oxide::inflate::core::apply_match+0x159>
   25649:	8a 04 17             	mov    (%rdi,%rdx,1),%al
   2564c:	42 88 04 17          	mov    %al,(%rdi,%r10,1)
   25650:	58                   	pop    %rax
   25651:	c3                   	retq   
   25652:	48 89 d0             	mov    %rdx,%rax
   25655:	4c 29 d0             	sub    %r10,%rax
   25658:	41 0f 92 c3          	setb   %r11b
   2565c:	4c 39 c0             	cmp    %r8,%rax
   2565f:	73 05                	jae    25666 <miniz_oxide::inflate::core::apply_match+0x86>
   25661:	45 84 db             	test   %r11b,%r11b
   25664:	74 3f                	je     256a5 <miniz_oxide::inflate::core::apply_match+0xc5>
   25666:	49 39 c8             	cmp    %rcx,%r8
   25669:	77 3a                	ja     256a5 <miniz_oxide::inflate::core::apply_match+0xc5>
   2566b:	4a 8d 0c 02          	lea    (%rdx,%r8,1),%rcx
   2566f:	48 39 f1             	cmp    %rsi,%rcx
   25672:	73 31                	jae    256a5 <miniz_oxide::inflate::core::apply_match+0xc5>
   25674:	4c 39 d2             	cmp    %r10,%rdx
   25677:	73 35                	jae    256ae <miniz_oxide::inflate::core::apply_match+0xce>
   25679:	4c 29 d6             	sub    %r10,%rsi
   2567c:	0f 82 c9 00 00 00    	jb     2574b <miniz_oxide::inflate::core::apply_match+0x16b>
   25682:	4c 39 c6             	cmp    %r8,%rsi
   25685:	0f 82 db 00 00 00    	jb     25766 <miniz_oxide::inflate::core::apply_match+0x186>
   2568b:	48 39 d1             	cmp    %rdx,%rcx
   2568e:	0f 82 db 00 00 00    	jb     2576f <miniz_oxide::inflate::core::apply_match+0x18f>
   25694:	4c 39 d1             	cmp    %r10,%rcx
   25697:	0f 87 ea 00 00 00    	ja     25787 <miniz_oxide::inflate::core::apply_match+0x1a7>
   2569d:	49 01 fa             	add    %rdi,%r10
   256a0:	48 01 fa             	add    %rdi,%rdx
   256a3:	eb 39                	jmp    256de <miniz_oxide::inflate::core::apply_match+0xfe>
   256a5:	4c 89 d1             	mov    %r10,%rcx
   256a8:	58                   	pop    %rax
   256a9:	e9 52 fc ff ff       	jmpq   25300 <miniz_oxide::inflate::core::transfer>
   256ae:	48 39 f2             	cmp    %rsi,%rdx
   256b1:	0f 87 94 00 00 00    	ja     2574b <miniz_oxide::inflate::core::apply_match+0x16b>
   256b7:	4c 89 c1             	mov    %r8,%rcx
   256ba:	4c 01 d1             	add    %r10,%rcx
   256bd:	0f 82 d9 00 00 00    	jb     2579c <miniz_oxide::inflate::core::apply_match+0x1bc>
   256c3:	48 39 ca             	cmp    %rcx,%rdx
   256c6:	0f 82 e5 00 00 00    	jb     257b1 <miniz_oxide::inflate::core::apply_match+0x1d1>
   256cc:	48 29 d6             	sub    %rdx,%rsi
   256cf:	4c 39 c6             	cmp    %r8,%rsi
   256d2:	0f 82 f1 00 00 00    	jb     257c9 <miniz_oxide::inflate::core::apply_match+0x1e9>
   256d8:	48 01 fa             	add    %rdi,%rdx
   256db:	49 01 fa             	add    %rdi,%r10
   256de:	4c 89 d7             	mov    %r10,%rdi
   256e1:	48 89 d6             	mov    %rdx,%rsi
   256e4:	4c 89 c2             	mov    %r8,%rdx
   256e7:	58                   	pop    %rax
   256e8:	ff 25 12 06 02 00    	jmpq   *0x20612(%rip)        # 45d00 <memcpy@GLIBC_2.14>
   256ee:	48 8d 05 e3 f3 01 00 	lea    0x1f3e3(%rip),%rax        # 44ad8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1580>
   256f5:	eb 34                	jmp    2572b <miniz_oxide::inflate::core::apply_match+0x14b>
   256f7:	48 8d 15 f2 f3 01 00 	lea    0x1f3f2(%rip),%rdx        # 44af0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1598>
   256fe:	eb 40                	jmp    25740 <miniz_oxide::inflate::core::apply_match+0x160>
   25700:	48 8d 15 01 f4 01 00 	lea    0x1f401(%rip),%rdx        # 44b08 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x15b0>
   25707:	48 89 cf             	mov    %rcx,%rdi
   2570a:	ff 15 88 05 02 00    	callq  *0x20588(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   25710:	0f 0b                	ud2    
   25712:	48 8d 15 07 f4 01 00 	lea    0x1f407(%rip),%rdx        # 44b20 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x15c8>
   25719:	48 89 c7             	mov    %rax,%rdi
   2571c:	ff 15 76 05 02 00    	callq  *0x20576(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   25722:	0f 0b                	ud2    
   25724:	48 8d 05 0d f4 01 00 	lea    0x1f40d(%rip),%rax        # 44b38 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x15e0>
   2572b:	48 89 d7             	mov    %rdx,%rdi
   2572e:	48 89 c2             	mov    %rax,%rdx
   25731:	ff 15 61 05 02 00    	callq  *0x20561(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   25737:	0f 0b                	ud2    
   25739:	48 8d 15 10 f4 01 00 	lea    0x1f410(%rip),%rdx        # 44b50 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x15f8>
   25740:	4c 89 d7             	mov    %r10,%rdi
   25743:	ff 15 4f 05 02 00    	callq  *0x2054f(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   25749:	0f 0b                	ud2    
   2574b:	48 8d 3d 62 30 01 00 	lea    0x13062(%rip),%rdi        # 387b4 <str.6+0x1494>
   25752:	48 8d 15 1f f0 01 00 	lea    0x1f01f(%rip),%rdx        # 44778 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1220>
   25759:	be 23 00 00 00       	mov    $0x23,%esi
   2575e:	ff 15 7c 07 02 00    	callq  *0x2077c(%rip)        # 45ee0 <_GLOBAL_OFFSET_TABLE_+0x550>
   25764:	0f 0b                	ud2    
   25766:	48 8d 15 0b f3 01 00 	lea    0x1f30b(%rip),%rdx        # 44a78 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1520>
   2576d:	eb 61                	jmp    257d0 <miniz_oxide::inflate::core::apply_match+0x1f0>
   2576f:	48 8d 05 1a f3 01 00 	lea    0x1f31a(%rip),%rax        # 44a90 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1538>
   25776:	48 89 d7             	mov    %rdx,%rdi
   25779:	48 89 ce             	mov    %rcx,%rsi
   2577c:	48 89 c2             	mov    %rax,%rdx
   2577f:	ff 15 23 07 02 00    	callq  *0x20723(%rip)        # 45ea8 <_GLOBAL_OFFSET_TABLE_+0x518>
   25785:	0f 0b                	ud2    
   25787:	48 8d 15 02 f3 01 00 	lea    0x1f302(%rip),%rdx        # 44a90 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1538>
   2578e:	48 89 cf             	mov    %rcx,%rdi
   25791:	4c 89 d6             	mov    %r10,%rsi
   25794:	ff 15 96 02 02 00    	callq  *0x20296(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   2579a:	0f 0b                	ud2    
   2579c:	48 8d 15 05 f3 01 00 	lea    0x1f305(%rip),%rdx        # 44aa8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1550>
   257a3:	4c 89 d7             	mov    %r10,%rdi
   257a6:	48 89 ce             	mov    %rcx,%rsi
   257a9:	ff 15 f9 06 02 00    	callq  *0x206f9(%rip)        # 45ea8 <_GLOBAL_OFFSET_TABLE_+0x518>
   257af:	0f 0b                	ud2    
   257b1:	48 8d 05 f0 f2 01 00 	lea    0x1f2f0(%rip),%rax        # 44aa8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1550>
   257b8:	48 89 cf             	mov    %rcx,%rdi
   257bb:	48 89 d6             	mov    %rdx,%rsi
   257be:	48 89 c2             	mov    %rax,%rdx
   257c1:	ff 15 69 02 02 00    	callq  *0x20269(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   257c7:	0f 0b                	ud2    
   257c9:	48 8d 15 f0 f2 01 00 	lea    0x1f2f0(%rip),%rdx        # 44ac0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1568>
   257d0:	4c 89 c7             	mov    %r8,%rdi
   257d3:	ff 15 57 02 02 00    	callq  *0x20257(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   257d9:	0f 0b                	ud2    
   257db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000257e0 <miniz_oxide::inflate::core::decompress>:
   257e0:	55                   	push   %rbp
   257e1:	41 57                	push   %r15
   257e3:	41 56                	push   %r14
   257e5:	41 55                	push   %r13
   257e7:	41 54                	push   %r12
   257e9:	53                   	push   %rbx
   257ea:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
   257f1:	4d 89 cb             	mov    %r9,%r11
   257f4:	4c 89 44 24 30       	mov    %r8,0x30(%rsp)
   257f9:	49 89 f1             	mov    %rsi,%r9
   257fc:	49 89 fc             	mov    %rdi,%r12
   257ff:	44 8b 84 24 18 01 00 	mov    0x118(%rsp),%r8d
   25806:	00 
   25807:	4c 8b 94 24 10 01 00 	mov    0x110(%rsp),%r10
   2580e:	00 
   2580f:	44 89 c6             	mov    %r8d,%esi
   25812:	83 e6 04             	and    $0x4,%esi
   25815:	31 ff                	xor    %edi,%edi
   25817:	4c 89 d8             	mov    %r11,%rax
   2581a:	48 83 e8 01          	sub    $0x1,%rax
   2581e:	48 0f 42 c7          	cmovb  %rdi,%rax
   25822:	83 fe 01             	cmp    $0x1,%esi
   25825:	48 19 ff             	sbb    %rdi,%rdi
   25828:	4d 39 d3             	cmp    %r10,%r11
   2582b:	0f 82 8c 1e 00 00    	jb     276bd <miniz_oxide::inflate::core::decompress+0x1edd>
   25831:	48 f7 d7             	not    %rdi
   25834:	48 09 c7             	or     %rax,%rdi
   25837:	48 8d 77 01          	lea    0x1(%rdi),%rsi
   2583b:	48 89 f0             	mov    %rsi,%rax
   2583e:	48 21 f8             	and    %rdi,%rax
   25841:	0f 85 76 1e 00 00    	jne    276bd <miniz_oxide::inflate::core::decompress+0x1edd>
   25847:	48 89 b4 24 d0 00 00 	mov    %rsi,0xd0(%rsp)
   2584e:	00 
   2584f:	48 89 7c 24 68       	mov    %rdi,0x68(%rsp)
   25854:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
   25859:	4c 8d 2c 0a          	lea    (%rdx,%rcx,1),%r13
   2585d:	45 8a b9 1c 29 00 00 	mov    0x291c(%r9),%r15b
   25864:	49 8b 01             	mov    (%r9),%rax
   25867:	41 8b 49 08          	mov    0x8(%r9),%ecx
   2586b:	41 8b 59 24          	mov    0x24(%r9),%ebx
   2586f:	41 8b 71 28          	mov    0x28(%r9),%esi
   25873:	41 8b 79 2c          	mov    0x2c(%r9),%edi
   25877:	48 89 04 24          	mov    %rax,(%rsp)
   2587b:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   2587f:	89 5c 24 0c          	mov    %ebx,0xc(%rsp)
   25883:	89 74 24 10          	mov    %esi,0x10(%rsp)
   25887:	89 7c 24 14          	mov    %edi,0x14(%rsp)
   2588b:	41 f6 c0 01          	test   $0x1,%r8b
   2588f:	0f 94 c3             	sete   %bl
   25892:	41 f6 c0 02          	test   $0x2,%r8b
   25896:	b8 02 fc 00 00       	mov    $0xfc02,%eax
   2589b:	be 02 01 00 00       	mov    $0x102,%esi
   258a0:	0f 44 f0             	cmove  %eax,%esi
   258a3:	b8 fc 00 00 00       	mov    $0xfc,%eax
   258a8:	b9 01 00 00 00       	mov    $0x1,%ecx
   258ad:	0f 44 c8             	cmove  %eax,%ecx
   258b0:	89 4c 24 3c          	mov    %ecx,0x3c(%rsp)
   258b4:	89 74 24 18          	mov    %esi,0x18(%rsp)
   258b8:	81 e6 00 fd 00 00    	and    $0xfd00,%esi
   258be:	89 74 24 2c          	mov    %esi,0x2c(%rsp)
   258c2:	49 8d 81 21 29 00 00 	lea    0x2921(%r9),%rax
   258c9:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
   258d0:	00 
   258d1:	49 8d 81 bc 0c 00 00 	lea    0xcbc(%r9),%rax
   258d8:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   258df:	00 
   258e0:	49 8d 81 5c 1a 00 00 	lea    0x1a5c(%r9),%rax
   258e7:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
   258ee:	00 
   258ef:	49 8d 81 fc 27 00 00 	lea    0x27fc(%r9),%rax
   258f6:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
   258fd:	00 
   258fe:	49 8d 81 4c 0d 00 00 	lea    0xd4c(%r9),%rax
   25905:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   2590c:	00 
   2590d:	49 8d 81 bc 0d 00 00 	lea    0xdbc(%r9),%rax
   25914:	48 89 84 24 b0 00 00 	mov    %rax,0xb0(%rsp)
   2591b:	00 
   2591c:	00 db                	add    %bl,%bl
   2591e:	80 cb 01             	or     $0x1,%bl
   25921:	88 5c 24 2b          	mov    %bl,0x2b(%rsp)
   25925:	48 89 94 24 c0 00 00 	mov    %rdx,0xc0(%rsp)
   2592c:	00 
   2592d:	49 89 d6             	mov    %rdx,%r14
   25930:	4c 89 5c 24 40       	mov    %r11,0x40(%rsp)
   25935:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
   2593a:	b3 ff                	mov    $0xff,%bl
   2593c:	41 80 ff 18          	cmp    $0x18,%r15b
   25940:	0f 87 a9 1e 00 00    	ja     277ef <miniz_oxide::inflate::core::decompress+0x200f>
   25946:	41 0f b6 c7          	movzbl %r15b,%eax
   2594a:	48 8d 0d ef 2d 01 00 	lea    0x12def(%rip),%rcx        # 38740 <str.6+0x1420>
   25951:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   25955:	48 01 c8             	add    %rcx,%rax
   25958:	ff e0                	jmpq   *%rax
   2595a:	0f 57 c0             	xorps  %xmm0,%xmm0
   2595d:	0f 29 04 24          	movaps %xmm0,(%rsp)
   25961:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   25968:	00 00 
   2596a:	49 c7 41 0c 00 00 00 	movq   $0x0,0xc(%r9)
   25971:	00 
   25972:	41 c7 41 14 01 00 00 	movl   $0x1,0x14(%r9)
   25979:	00 
   2597a:	41 c7 41 20 01 00 00 	movl   $0x1,0x20(%r9)
   25981:	00 
   25982:	8a 44 24 2b          	mov    0x2b(%rsp),%al
   25986:	41 89 c7             	mov    %eax,%r15d
   25989:	e9 ac ff ff ff       	jmpq   2593a <miniz_oxide::inflate::core::decompress+0x15a>
   2598e:	66 90                	xchg   %ax,%ax
   25990:	4c 89 e9             	mov    %r13,%rcx
   25993:	4c 29 f1             	sub    %r14,%rcx
   25996:	48 83 f9 04          	cmp    $0x4,%rcx
   2599a:	0f 82 54 14 00 00    	jb     26df4 <miniz_oxide::inflate::core::decompress+0x1614>
   259a0:	4c 89 d8             	mov    %r11,%rax
   259a3:	4c 29 d0             	sub    %r10,%rax
   259a6:	48 83 f8 02          	cmp    $0x2,%rax
   259aa:	0f 82 44 14 00 00    	jb     26df4 <miniz_oxide::inflate::core::decompress+0x1614>
   259b0:	48 3d 03 01 00 00    	cmp    $0x103,%rax
   259b6:	72 0a                	jb     259c2 <miniz_oxide::inflate::core::decompress+0x1e2>
   259b8:	48 83 f9 0d          	cmp    $0xd,%rcx
   259bc:	0f 87 51 16 00 00    	ja     27013 <miniz_oxide::inflate::core::decompress+0x1833>
   259c2:	8b 44 24 08          	mov    0x8(%rsp),%eax
   259c6:	48 83 f8 1d          	cmp    $0x1d,%rax
   259ca:	77 17                	ja     259e3 <miniz_oxide::inflate::core::decompress+0x203>
   259cc:	41 8b 16             	mov    (%r14),%edx
   259cf:	89 c1                	mov    %eax,%ecx
   259d1:	48 d3 e2             	shl    %cl,%rdx
   259d4:	48 09 14 24          	or     %rdx,(%rsp)
   259d8:	49 83 c6 04          	add    $0x4,%r14
   259dc:	83 c0 20             	add    $0x20,%eax
   259df:	89 44 24 08          	mov    %eax,0x8(%rsp)
   259e3:	48 8b 14 24          	mov    (%rsp),%rdx
   259e7:	89 d1                	mov    %edx,%ecx
   259e9:	81 e1 ff 03 00 00    	and    $0x3ff,%ecx
   259ef:	41 0f bf 74 49 3c    	movswl 0x3c(%r9,%rcx,2),%esi
   259f5:	85 f6                	test   %esi,%esi
   259f7:	78 0c                	js     25a05 <miniz_oxide::inflate::core::decompress+0x225>
   259f9:	89 f1                	mov    %esi,%ecx
   259fb:	c1 e9 09             	shr    $0x9,%ecx
   259fe:	75 3c                	jne    25a3c <miniz_oxide::inflate::core::decompress+0x25c>
   25a00:	e9 45 1a 00 00       	jmpq   2744a <miniz_oxide::inflate::core::decompress+0x1c6a>
   25a05:	b9 0a 00 00 00       	mov    $0xa,%ecx
   25a0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   25a10:	f7 d6                	not    %esi
   25a12:	48 89 d7             	mov    %rdx,%rdi
   25a15:	48 d3 ef             	shr    %cl,%rdi
   25a18:	83 e7 01             	and    $0x1,%edi
   25a1b:	01 f7                	add    %esi,%edi
   25a1d:	48 63 ff             	movslq %edi,%rdi
   25a20:	81 ff 3f 02 00 00    	cmp    $0x23f,%edi
   25a26:	0f 87 4e 1f 00 00    	ja     2797a <miniz_oxide::inflate::core::decompress+0x219a>
   25a2c:	41 0f bf b4 79 3c 08 	movswl 0x83c(%r9,%rdi,2),%esi
   25a33:	00 00 
   25a35:	83 c1 01             	add    $0x1,%ecx
   25a38:	85 f6                	test   %esi,%esi
   25a3a:	78 d4                	js     25a10 <miniz_oxide::inflate::core::decompress+0x230>
   25a3c:	89 74 24 10          	mov    %esi,0x10(%rsp)
   25a40:	48 d3 ea             	shr    %cl,%rdx
   25a43:	48 89 14 24          	mov    %rdx,(%rsp)
   25a47:	29 c8                	sub    %ecx,%eax
   25a49:	89 44 24 08          	mov    %eax,0x8(%rsp)
   25a4d:	41 b7 15             	mov    $0x15,%r15b
   25a50:	f7 c6 00 01 00 00    	test   $0x100,%esi
   25a56:	0f 85 de fe ff ff    	jne    2593a <miniz_oxide::inflate::core::decompress+0x15a>
   25a5c:	89 d1                	mov    %edx,%ecx
   25a5e:	81 e1 ff 03 00 00    	and    $0x3ff,%ecx
   25a64:	41 0f bf 6c 49 3c    	movswl 0x3c(%r9,%rcx,2),%ebp
   25a6a:	85 ed                	test   %ebp,%ebp
   25a6c:	78 0c                	js     25a7a <miniz_oxide::inflate::core::decompress+0x29a>
   25a6e:	89 e9                	mov    %ebp,%ecx
   25a70:	c1 e9 09             	shr    $0x9,%ecx
   25a73:	75 37                	jne    25aac <miniz_oxide::inflate::core::decompress+0x2cc>
   25a75:	e9 d8 19 00 00       	jmpq   27452 <miniz_oxide::inflate::core::decompress+0x1c72>
   25a7a:	b9 0a 00 00 00       	mov    $0xa,%ecx
   25a7f:	90                   	nop
   25a80:	f7 d5                	not    %ebp
   25a82:	48 89 d7             	mov    %rdx,%rdi
   25a85:	48 d3 ef             	shr    %cl,%rdi
   25a88:	83 e7 01             	and    $0x1,%edi
   25a8b:	01 ef                	add    %ebp,%edi
   25a8d:	48 63 ff             	movslq %edi,%rdi
   25a90:	81 ff 3f 02 00 00    	cmp    $0x23f,%edi
   25a96:	0f 87 de 1e 00 00    	ja     2797a <miniz_oxide::inflate::core::decompress+0x219a>
   25a9c:	41 0f bf ac 79 3c 08 	movswl 0x83c(%r9,%rdi,2),%ebp
   25aa3:	00 00 
   25aa5:	83 c1 01             	add    $0x1,%ecx
   25aa8:	85 ed                	test   %ebp,%ebp
   25aaa:	78 d4                	js     25a80 <miniz_oxide::inflate::core::decompress+0x2a0>
   25aac:	48 d3 ea             	shr    %cl,%rdx
   25aaf:	48 89 14 24          	mov    %rdx,(%rsp)
   25ab3:	29 c8                	sub    %ecx,%eax
   25ab5:	89 44 24 08          	mov    %eax,0x8(%rsp)
   25ab9:	4d 39 da             	cmp    %r11,%r10
   25abc:	0f 83 cc 1e 00 00    	jae    2798e <miniz_oxide::inflate::core::decompress+0x21ae>
   25ac2:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   25ac7:	42 88 34 10          	mov    %sil,(%rax,%r10,1)
   25acb:	49 8d 7a 01          	lea    0x1(%r10),%rdi
   25acf:	f7 c5 00 01 00 00    	test   $0x100,%ebp
   25ad5:	0f 85 bd 18 00 00    	jne    27398 <miniz_oxide::inflate::core::decompress+0x1bb8>
   25adb:	4c 39 df             	cmp    %r11,%rdi
   25ade:	0f 83 b6 1e 00 00    	jae    2799a <miniz_oxide::inflate::core::decompress+0x21ba>
   25ae4:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   25ae9:	42 88 6c 10 01       	mov    %bpl,0x1(%rax,%r10,1)
   25aee:	49 83 c2 02          	add    $0x2,%r10
   25af2:	e9 99 fe ff ff       	jmpq   25990 <miniz_oxide::inflate::core::decompress+0x1b0>
   25af7:	8b 44 24 14          	mov    0x14(%rsp),%eax
   25afb:	8b 7c 24 18          	mov    0x18(%rsp),%edi
   25aff:	8b 54 24 08          	mov    0x8(%rsp),%edx
   25b03:	e9 0f 00 00 00       	jmpq   25b17 <miniz_oxide::inflate::core::decompress+0x337>
   25b08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   25b0f:	00 
   25b10:	89 f9                	mov    %edi,%ecx
   25b12:	f6 c1 02             	test   $0x2,%cl
   25b15:	75 2c                	jne    25b43 <miniz_oxide::inflate::core::decompress+0x363>
   25b17:	39 c2                	cmp    %eax,%edx
   25b19:	0f 83 af 11 00 00    	jae    26cce <miniz_oxide::inflate::core::decompress+0x14ee>
   25b1f:	4d 39 f5             	cmp    %r14,%r13
   25b22:	74 ec                	je     25b10 <miniz_oxide::inflate::core::decompress+0x330>
   25b24:	41 0f b6 36          	movzbl (%r14),%esi
   25b28:	89 d1                	mov    %edx,%ecx
   25b2a:	48 d3 e6             	shl    %cl,%rsi
   25b2d:	48 09 34 24          	or     %rsi,(%rsp)
   25b31:	49 83 c6 01          	add    $0x1,%r14
   25b35:	83 c2 08             	add    $0x8,%edx
   25b38:	89 54 24 08          	mov    %edx,0x8(%rsp)
   25b3c:	31 c9                	xor    %ecx,%ecx
   25b3e:	f6 c1 02             	test   $0x2,%cl
   25b41:	74 d4                	je     25b17 <miniz_oxide::inflate::core::decompress+0x337>
   25b43:	84 c9                	test   %cl,%cl
   25b45:	74 b8                	je     25aff <miniz_oxide::inflate::core::decompress+0x31f>
   25b47:	e9 51 1c 00 00       	jmpq   2779d <miniz_oxide::inflate::core::decompress+0x1fbd>
   25b4c:	8b 44 24 14          	mov    0x14(%rsp),%eax
   25b50:	8b 7c 24 18          	mov    0x18(%rsp),%edi
   25b54:	8b 54 24 08          	mov    0x8(%rsp),%edx
   25b58:	e9 0a 00 00 00       	jmpq   25b67 <miniz_oxide::inflate::core::decompress+0x387>
   25b5d:	0f 1f 00             	nopl   (%rax)
   25b60:	89 f9                	mov    %edi,%ecx
   25b62:	f6 c1 02             	test   $0x2,%cl
   25b65:	75 2c                	jne    25b93 <miniz_oxide::inflate::core::decompress+0x3b3>
   25b67:	39 c2                	cmp    %eax,%edx
   25b69:	0f 83 91 11 00 00    	jae    26d00 <miniz_oxide::inflate::core::decompress+0x1520>
   25b6f:	4d 39 f5             	cmp    %r14,%r13
   25b72:	74 ec                	je     25b60 <miniz_oxide::inflate::core::decompress+0x380>
   25b74:	41 0f b6 36          	movzbl (%r14),%esi
   25b78:	89 d1                	mov    %edx,%ecx
   25b7a:	48 d3 e6             	shl    %cl,%rsi
   25b7d:	48 09 34 24          	or     %rsi,(%rsp)
   25b81:	49 83 c6 01          	add    $0x1,%r14
   25b85:	83 c2 08             	add    $0x8,%edx
   25b88:	89 54 24 08          	mov    %edx,0x8(%rsp)
   25b8c:	31 c9                	xor    %ecx,%ecx
   25b8e:	f6 c1 02             	test   $0x2,%cl
   25b91:	74 d4                	je     25b67 <miniz_oxide::inflate::core::decompress+0x387>
   25b93:	84 c9                	test   %cl,%cl
   25b95:	74 bd                	je     25b54 <miniz_oxide::inflate::core::decompress+0x374>
   25b97:	e9 f7 1b 00 00       	jmpq   27793 <miniz_oxide::inflate::core::decompress+0x1fb3>
   25b9c:	8b 44 24 14          	mov    0x14(%rsp),%eax
   25ba0:	8b 7c 24 18          	mov    0x18(%rsp),%edi
   25ba4:	8b 54 24 08          	mov    0x8(%rsp),%edx
   25ba8:	e9 0a 00 00 00       	jmpq   25bb7 <miniz_oxide::inflate::core::decompress+0x3d7>
   25bad:	0f 1f 00             	nopl   (%rax)
   25bb0:	89 f9                	mov    %edi,%ecx
   25bb2:	f6 c1 02             	test   $0x2,%cl
   25bb5:	75 2c                	jne    25be3 <miniz_oxide::inflate::core::decompress+0x403>
   25bb7:	39 c2                	cmp    %eax,%edx
   25bb9:	0f 83 73 11 00 00    	jae    26d32 <miniz_oxide::inflate::core::decompress+0x1552>
   25bbf:	4d 39 f5             	cmp    %r14,%r13
   25bc2:	74 ec                	je     25bb0 <miniz_oxide::inflate::core::decompress+0x3d0>
   25bc4:	41 0f b6 36          	movzbl (%r14),%esi
   25bc8:	89 d1                	mov    %edx,%ecx
   25bca:	48 d3 e6             	shl    %cl,%rsi
   25bcd:	48 09 34 24          	or     %rsi,(%rsp)
   25bd1:	49 83 c6 01          	add    $0x1,%r14
   25bd5:	83 c2 08             	add    $0x8,%edx
   25bd8:	89 54 24 08          	mov    %edx,0x8(%rsp)
   25bdc:	31 c9                	xor    %ecx,%ecx
   25bde:	f6 c1 02             	test   $0x2,%cl
   25be1:	74 d4                	je     25bb7 <miniz_oxide::inflate::core::decompress+0x3d7>
   25be3:	84 c9                	test   %cl,%cl
   25be5:	74 bd                	je     25ba4 <miniz_oxide::inflate::core::decompress+0x3c4>
   25be7:	e9 c3 1b 00 00       	jmpq   277af <miniz_oxide::inflate::core::decompress+0x1fcf>
   25bec:	8b 74 24 18          	mov    0x18(%rsp),%esi
   25bf0:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
   25bf4:	89 c8                	mov    %ecx,%eax
   25bf6:	83 e0 07             	and    $0x7,%eax
   25bf9:	e9 09 00 00 00       	jmpq   25c07 <miniz_oxide::inflate::core::decompress+0x427>
   25bfe:	66 90                	xchg   %ax,%ax
   25c00:	89 f2                	mov    %esi,%edx
   25c02:	f6 c2 02             	test   $0x2,%dl
   25c05:	75 2c                	jne    25c33 <miniz_oxide::inflate::core::decompress+0x453>
   25c07:	89 ca                	mov    %ecx,%edx
   25c09:	29 c2                	sub    %eax,%edx
   25c0b:	0f 83 a7 11 00 00    	jae    26db8 <miniz_oxide::inflate::core::decompress+0x15d8>
   25c11:	4d 39 f5             	cmp    %r14,%r13
   25c14:	74 ea                	je     25c00 <miniz_oxide::inflate::core::decompress+0x420>
   25c16:	41 0f b6 16          	movzbl (%r14),%edx
   25c1a:	48 d3 e2             	shl    %cl,%rdx
   25c1d:	48 09 14 24          	or     %rdx,(%rsp)
   25c21:	49 83 c6 01          	add    $0x1,%r14
   25c25:	83 c1 08             	add    $0x8,%ecx
   25c28:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   25c2c:	31 d2                	xor    %edx,%edx
   25c2e:	f6 c2 02             	test   $0x2,%dl
   25c31:	74 d4                	je     25c07 <miniz_oxide::inflate::core::decompress+0x427>
   25c33:	84 d2                	test   %dl,%dl
   25c35:	74 b9                	je     25bf0 <miniz_oxide::inflate::core::decompress+0x410>
   25c37:	e9 6b 1b 00 00       	jmpq   277a7 <miniz_oxide::inflate::core::decompress+0x1fc7>
   25c3c:	8b 74 24 18          	mov    0x18(%rsp),%esi
   25c40:	8b 7c 24 10          	mov    0x10(%rsp),%edi
   25c44:	41 3b 79 38          	cmp    0x38(%r9),%edi
   25c48:	73 43                	jae    25c8d <miniz_oxide::inflate::core::decompress+0x4ad>
   25c4a:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
   25c4e:	eb 09                	jmp    25c59 <miniz_oxide::inflate::core::decompress+0x479>
   25c50:	41 89 f7             	mov    %esi,%r15d
   25c53:	41 f6 c7 02          	test   $0x2,%r15b
   25c57:	75 29                	jne    25c82 <miniz_oxide::inflate::core::decompress+0x4a2>
   25c59:	83 f9 03             	cmp    $0x3,%ecx
   25c5c:	73 6b                	jae    25cc9 <miniz_oxide::inflate::core::decompress+0x4e9>
   25c5e:	4d 39 f5             	cmp    %r14,%r13
   25c61:	74 ed                	je     25c50 <miniz_oxide::inflate::core::decompress+0x470>
   25c63:	41 0f b6 06          	movzbl (%r14),%eax
   25c67:	48 d3 e0             	shl    %cl,%rax
   25c6a:	48 09 04 24          	or     %rax,(%rsp)
   25c6e:	49 83 c6 01          	add    $0x1,%r14
   25c72:	83 c1 08             	add    $0x8,%ecx
   25c75:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   25c79:	45 31 ff             	xor    %r15d,%r15d
   25c7c:	41 f6 c7 02          	test   $0x2,%r15b
   25c80:	74 d7                	je     25c59 <miniz_oxide::inflate::core::decompress+0x479>
   25c82:	45 84 ff             	test   %r15b,%r15b
   25c85:	0f 85 85 00 00 00    	jne    25d10 <miniz_oxide::inflate::core::decompress+0x530>
   25c8b:	eb b3                	jmp    25c40 <miniz_oxide::inflate::core::decompress+0x460>
   25c8d:	41 c7 41 38 13 00 00 	movl   $0x13,0x38(%r9)
   25c94:	00 
   25c95:	48 89 e6             	mov    %rsp,%rsi
   25c98:	4c 89 cf             	mov    %r9,%rdi
   25c9b:	4c 89 d3             	mov    %r10,%rbx
   25c9e:	e8 dd ef ff ff       	callq  24c80 <miniz_oxide::inflate::core::init_tree>
   25ca3:	49 89 da             	mov    %rbx,%r10
   25ca6:	8b 74 24 18          	mov    0x18(%rsp),%esi
   25caa:	44 8b 84 24 18 01 00 	mov    0x118(%rsp),%r8d
   25cb1:	00 
   25cb2:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   25cb7:	4c 8b 5c 24 40       	mov    0x40(%rsp),%r11
   25cbc:	41 89 c7             	mov    %eax,%r15d
   25cbf:	45 84 ff             	test   %r15b,%r15b
   25cc2:	75 4c                	jne    25d10 <miniz_oxide::inflate::core::decompress+0x530>
   25cc4:	e9 77 ff ff ff       	jmpq   25c40 <miniz_oxide::inflate::core::decompress+0x460>
   25cc9:	48 8b 04 24          	mov    (%rsp),%rax
   25ccd:	48 89 c2             	mov    %rax,%rdx
   25cd0:	48 c1 ea 03          	shr    $0x3,%rdx
   25cd4:	48 89 14 24          	mov    %rdx,(%rsp)
   25cd8:	83 c1 fd             	add    $0xfffffffd,%ecx
   25cdb:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   25cdf:	83 ff 13             	cmp    $0x13,%edi
   25ce2:	0f 83 c3 1d 00 00    	jae    27aab <miniz_oxide::inflate::core::decompress+0x22cb>
   25ce8:	48 8d 0d 35 2b 01 00 	lea    0x12b35(%rip),%rcx        # 38824 <str.6+0x1504>
   25cef:	0f b6 0c 0f          	movzbl (%rdi,%rcx,1),%ecx
   25cf3:	24 07                	and    $0x7,%al
   25cf5:	41 88 84 09 fc 27 00 	mov    %al,0x27fc(%r9,%rcx,1)
   25cfc:	00 
   25cfd:	8d 47 01             	lea    0x1(%rdi),%eax
   25d00:	89 44 24 10          	mov    %eax,0x10(%rsp)
   25d04:	45 31 ff             	xor    %r15d,%r15d
   25d07:	45 84 ff             	test   %r15b,%r15b
   25d0a:	0f 84 30 ff ff ff    	je     25c40 <miniz_oxide::inflate::core::decompress+0x460>
   25d10:	41 80 ff 01          	cmp    $0x1,%r15b
   25d14:	0f 85 e3 19 00 00    	jne    276fd <miniz_oxide::inflate::core::decompress+0x1f1d>
   25d1a:	e9 22 12 00 00       	jmpq   26f41 <miniz_oxide::inflate::core::decompress+0x1761>
   25d1f:	4c 89 54 24 48       	mov    %r10,0x48(%rsp)
   25d24:	41 8b 49 0c          	mov    0xc(%r9),%ecx
   25d28:	41 89 c9             	mov    %ecx,%r9d
   25d2b:	41 c1 e1 08          	shl    $0x8,%r9d
   25d2f:	41 89 ca             	mov    %ecx,%r10d
   25d32:	41 83 e2 0f          	and    $0xf,%r10d
   25d36:	c1 e9 04             	shr    $0x4,%ecx
   25d39:	83 c1 08             	add    $0x8,%ecx
   25d3c:	83 e1 3f             	and    $0x3f,%ecx
   25d3f:	48 8b b4 24 d0 00 00 	mov    0xd0(%rsp),%rsi
   25d46:	00 
   25d47:	48 d3 ee             	shr    %cl,%rsi
   25d4a:	41 f6 c0 04          	test   $0x4,%r8b
   25d4e:	0f 85 e8 10 00 00    	jne    26e3c <miniz_oxide::inflate::core::decompress+0x165c>
   25d54:	8b 44 24 18          	mov    0x18(%rsp),%eax
   25d58:	4d 39 f5             	cmp    %r14,%r13
   25d5b:	74 7a                	je     25dd7 <miniz_oxide::inflate::core::decompress+0x5f7>
   25d5d:	44 89 d2             	mov    %r10d,%edx
   25d60:	83 f2 08             	xor    $0x8,%edx
   25d63:	41 0f b6 3e          	movzbl (%r14),%edi
   25d67:	44 89 cb             	mov    %r9d,%ebx
   25d6a:	09 fb                	or     %edi,%ebx
   25d6c:	48 69 c3 85 10 42 08 	imul   $0x8421085,%rbx,%rax
   25d73:	48 c1 e8 20          	shr    $0x20,%rax
   25d77:	89 dd                	mov    %ebx,%ebp
   25d79:	29 c5                	sub    %eax,%ebp
   25d7b:	d1 ed                	shr    %ebp
   25d7d:	01 c5                	add    %eax,%ebp
   25d7f:	c1 ed 04             	shr    $0x4,%ebp
   25d82:	89 e8                	mov    %ebp,%eax
   25d84:	c1 e0 05             	shl    $0x5,%eax
   25d87:	29 c5                	sub    %eax,%ebp
   25d89:	01 dd                	add    %ebx,%ebp
   25d8b:	89 f8                	mov    %edi,%eax
   25d8d:	83 e0 20             	and    $0x20,%eax
   25d90:	09 e8                	or     %ebp,%eax
   25d92:	48 85 f6             	test   %rsi,%rsi
   25d95:	41 b8 01 1c 00 00    	mov    $0x1c01,%r8d
   25d9b:	bb 01 03 00 00       	mov    $0x301,%ebx
   25da0:	41 0f 44 d8          	cmove  %r8d,%ebx
   25da4:	09 d0                	or     %edx,%eax
   25da6:	41 bf 01 1c 00 00    	mov    $0x1c01,%r15d
   25dac:	75 03                	jne    25db1 <miniz_oxide::inflate::core::decompress+0x5d1>
   25dae:	41 89 df             	mov    %ebx,%r15d
   25db1:	49 83 c6 01          	add    $0x1,%r14
   25db5:	83 f9 0f             	cmp    $0xf,%ecx
   25db8:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   25dbd:	89 78 10             	mov    %edi,0x10(%rax)
   25dc0:	45 0f 47 f8          	cmova  %r8d,%r15d
   25dc4:	44 8b 84 24 18 01 00 	mov    0x118(%rsp),%r8d
   25dcb:	00 
   25dcc:	8b 44 24 18          	mov    0x18(%rsp),%eax
   25dd0:	45 84 ff             	test   %r15b,%r15b
   25dd3:	75 0e                	jne    25de3 <miniz_oxide::inflate::core::decompress+0x603>
   25dd5:	eb 81                	jmp    25d58 <miniz_oxide::inflate::core::decompress+0x578>
   25dd7:	41 89 c7             	mov    %eax,%r15d
   25dda:	45 84 ff             	test   %r15b,%r15b
   25ddd:	0f 84 75 ff ff ff    	je     25d58 <miniz_oxide::inflate::core::decompress+0x578>
   25de3:	41 80 ff 01          	cmp    $0x1,%r15b
   25de7:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   25dec:	4c 8b 54 24 48       	mov    0x48(%rsp),%r10
   25df1:	0f 85 0c 1a 00 00    	jne    27803 <miniz_oxide::inflate::core::decompress+0x2023>
   25df7:	e9 45 11 00 00       	jmpq   26f41 <miniz_oxide::inflate::core::decompress+0x1761>
   25dfc:	8b 5c 24 18          	mov    0x18(%rsp),%ebx
   25e00:	8b 44 24 08          	mov    0x8(%rsp),%eax
   25e04:	48 83 f8 0f          	cmp    $0xf,%rax
   25e08:	73 38                	jae    25e42 <miniz_oxide::inflate::core::decompress+0x662>
   25e0a:	4c 89 e9             	mov    %r13,%rcx
   25e0d:	4c 29 f1             	sub    %r14,%rcx
   25e10:	48 83 f9 01          	cmp    $0x1,%rcx
   25e14:	77 35                	ja     25e4b <miniz_oxide::inflate::core::decompress+0x66b>
   25e16:	48 8b 14 24          	mov    (%rsp),%rdx
   25e1a:	89 d1                	mov    %edx,%ecx
   25e1c:	81 e1 ff 03 00 00    	and    $0x3ff,%ecx
   25e22:	41 0f bf b4 49 dc 0d 	movswl 0xddc(%r9,%rcx,2),%esi
   25e29:	00 00 
   25e2b:	85 f6                	test   %esi,%esi
   25e2d:	78 3d                	js     25e6c <miniz_oxide::inflate::core::decompress+0x68c>
   25e2f:	c1 ee 09             	shr    $0x9,%esi
   25e32:	0f 84 88 00 00 00    	je     25ec0 <miniz_oxide::inflate::core::decompress+0x6e0>
   25e38:	39 f0                	cmp    %esi,%eax
   25e3a:	0f 83 ff 01 00 00    	jae    2603f <miniz_oxide::inflate::core::decompress+0x85f>
   25e40:	eb 7e                	jmp    25ec0 <miniz_oxide::inflate::core::decompress+0x6e0>
   25e42:	48 8b 14 24          	mov    (%rsp),%rdx
   25e46:	e9 f4 01 00 00       	jmpq   2603f <miniz_oxide::inflate::core::decompress+0x85f>
   25e4b:	41 0f b7 16          	movzwl (%r14),%edx
   25e4f:	89 c1                	mov    %eax,%ecx
   25e51:	48 d3 e2             	shl    %cl,%rdx
   25e54:	48 0b 14 24          	or     (%rsp),%rdx
   25e58:	49 83 c6 02          	add    $0x2,%r14
   25e5c:	48 89 14 24          	mov    %rdx,(%rsp)
   25e60:	83 c0 10             	add    $0x10,%eax
   25e63:	89 44 24 08          	mov    %eax,0x8(%rsp)
   25e67:	e9 d3 01 00 00       	jmpq   2603f <miniz_oxide::inflate::core::decompress+0x85f>
   25e6c:	83 f8 0b             	cmp    $0xb,%eax
   25e6f:	0f 82 4b 00 00 00    	jb     25ec0 <miniz_oxide::inflate::core::decompress+0x6e0>
   25e75:	bd 0c 00 00 00       	mov    $0xc,%ebp
   25e7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   25e80:	f7 d6                	not    %esi
   25e82:	8d 4d fe             	lea    -0x2(%rbp),%ecx
   25e85:	48 89 d7             	mov    %rdx,%rdi
   25e88:	48 d3 ef             	shr    %cl,%rdi
   25e8b:	83 e7 01             	and    $0x1,%edi
   25e8e:	01 f7                	add    %esi,%edi
   25e90:	48 63 ff             	movslq %edi,%rdi
   25e93:	81 ff 3f 02 00 00    	cmp    $0x23f,%edi
   25e99:	0f 87 f8 1b 00 00    	ja     27a97 <miniz_oxide::inflate::core::decompress+0x22b7>
   25e9f:	41 0f b7 8c 79 dc 15 	movzwl 0x15dc(%r9,%rdi,2),%ecx
   25ea6:	00 00 
   25ea8:	39 e8                	cmp    %ebp,%eax
   25eaa:	72 0b                	jb     25eb7 <miniz_oxide::inflate::core::decompress+0x6d7>
   25eac:	0f bf f1             	movswl %cx,%esi
   25eaf:	83 c5 01             	add    $0x1,%ebp
   25eb2:	66 85 f6             	test   %si,%si
   25eb5:	78 c9                	js     25e80 <miniz_oxide::inflate::core::decompress+0x6a0>
   25eb7:	66 85 c9             	test   %cx,%cx
   25eba:	0f 89 7f 01 00 00    	jns    2603f <miniz_oxide::inflate::core::decompress+0x85f>
   25ec0:	4d 39 f5             	cmp    %r14,%r13
   25ec3:	74 48                	je     25f0d <miniz_oxide::inflate::core::decompress+0x72d>
   25ec5:	4d 8d 46 01          	lea    0x1(%r14),%r8
   25ec9:	41 0f b6 2e          	movzbl (%r14),%ebp
   25ecd:	89 c1                	mov    %eax,%ecx
   25ecf:	48 d3 e5             	shl    %cl,%rbp
   25ed2:	48 09 d5             	or     %rdx,%rbp
   25ed5:	48 89 2c 24          	mov    %rbp,(%rsp)
   25ed9:	8d 50 08             	lea    0x8(%rax),%edx
   25edc:	89 54 24 08          	mov    %edx,0x8(%rsp)
   25ee0:	83 fa 0f             	cmp    $0xf,%edx
   25ee3:	0f 83 46 01 00 00    	jae    2602f <miniz_oxide::inflate::core::decompress+0x84f>
   25ee9:	89 e9                	mov    %ebp,%ecx
   25eeb:	81 e1 ff 03 00 00    	and    $0x3ff,%ecx
   25ef1:	41 0f bf bc 49 dc 0d 	movswl 0xddc(%r9,%rcx,2),%edi
   25ef8:	00 00 
   25efa:	85 ff                	test   %edi,%edi
   25efc:	78 23                	js     25f21 <miniz_oxide::inflate::core::decompress+0x741>
   25efe:	c1 ef 09             	shr    $0x9,%edi
   25f01:	74 6c                	je     25f6f <miniz_oxide::inflate::core::decompress+0x78f>
   25f03:	39 fa                	cmp    %edi,%edx
   25f05:	0f 83 24 01 00 00    	jae    2602f <miniz_oxide::inflate::core::decompress+0x84f>
   25f0b:	eb 62                	jmp    25f6f <miniz_oxide::inflate::core::decompress+0x78f>
   25f0d:	44 8b 7c 24 2c       	mov    0x2c(%rsp),%r15d
   25f12:	89 d8                	mov    %ebx,%eax
   25f14:	84 c0                	test   %al,%al
   25f16:	0f 85 fc 01 00 00    	jne    26118 <miniz_oxide::inflate::core::decompress+0x938>
   25f1c:	e9 df fe ff ff       	jmpq   25e00 <miniz_oxide::inflate::core::decompress+0x620>
   25f21:	83 fa 0b             	cmp    $0xb,%edx
   25f24:	72 49                	jb     25f6f <miniz_oxide::inflate::core::decompress+0x78f>
   25f26:	bb 0c 00 00 00       	mov    $0xc,%ebx
   25f2b:	f7 d7                	not    %edi
   25f2d:	8d 4b fe             	lea    -0x2(%rbx),%ecx
   25f30:	48 89 ee             	mov    %rbp,%rsi
   25f33:	48 d3 ee             	shr    %cl,%rsi
   25f36:	83 e6 01             	and    $0x1,%esi
   25f39:	01 fe                	add    %edi,%esi
   25f3b:	48 63 fe             	movslq %esi,%rdi
   25f3e:	81 ff 3f 02 00 00    	cmp    $0x23f,%edi
   25f44:	0f 87 4d 1b 00 00    	ja     27a97 <miniz_oxide::inflate::core::decompress+0x22b7>
   25f4a:	41 0f b7 8c 79 dc 15 	movzwl 0x15dc(%r9,%rdi,2),%ecx
   25f51:	00 00 
   25f53:	39 da                	cmp    %ebx,%edx
   25f55:	72 0b                	jb     25f62 <miniz_oxide::inflate::core::decompress+0x782>
   25f57:	0f bf f9             	movswl %cx,%edi
   25f5a:	83 c3 01             	add    $0x1,%ebx
   25f5d:	66 85 ff             	test   %di,%di
   25f60:	78 c9                	js     25f2b <miniz_oxide::inflate::core::decompress+0x74b>
   25f62:	66 85 c9             	test   %cx,%cx
   25f65:	8b 5c 24 18          	mov    0x18(%rsp),%ebx
   25f69:	0f 89 c0 00 00 00    	jns    2602f <miniz_oxide::inflate::core::decompress+0x84f>
   25f6f:	4d 39 c5             	cmp    %r8,%r13
   25f72:	0f 84 86 01 00 00    	je     260fe <miniz_oxide::inflate::core::decompress+0x91e>
   25f78:	4d 8d 46 02          	lea    0x2(%r14),%r8
   25f7c:	41 0f b6 76 01       	movzbl 0x1(%r14),%esi
   25f81:	89 d1                	mov    %edx,%ecx
   25f83:	48 d3 e6             	shl    %cl,%rsi
   25f86:	48 09 f5             	or     %rsi,%rbp
   25f89:	48 89 2c 24          	mov    %rbp,(%rsp)
   25f8d:	8d 50 10             	lea    0x10(%rax),%edx
   25f90:	89 54 24 08          	mov    %edx,0x8(%rsp)
   25f94:	83 fa 0e             	cmp    $0xe,%edx
   25f97:	0f 87 92 00 00 00    	ja     2602f <miniz_oxide::inflate::core::decompress+0x84f>
   25f9d:	89 e9                	mov    %ebp,%ecx
   25f9f:	81 e1 ff 03 00 00    	and    $0x3ff,%ecx
   25fa5:	41 0f bf bc 49 dc 0d 	movswl 0xddc(%r9,%rcx,2),%edi
   25fac:	00 00 
   25fae:	85 ff                	test   %edi,%edi
   25fb0:	78 0b                	js     25fbd <miniz_oxide::inflate::core::decompress+0x7dd>
   25fb2:	c1 ef 09             	shr    $0x9,%edi
   25fb5:	74 50                	je     26007 <miniz_oxide::inflate::core::decompress+0x827>
   25fb7:	39 fa                	cmp    %edi,%edx
   25fb9:	73 74                	jae    2602f <miniz_oxide::inflate::core::decompress+0x84f>
   25fbb:	eb 4a                	jmp    26007 <miniz_oxide::inflate::core::decompress+0x827>
   25fbd:	83 fa 0b             	cmp    $0xb,%edx
   25fc0:	72 45                	jb     26007 <miniz_oxide::inflate::core::decompress+0x827>
   25fc2:	bb 0c 00 00 00       	mov    $0xc,%ebx
   25fc7:	f7 d7                	not    %edi
   25fc9:	8d 4b fe             	lea    -0x2(%rbx),%ecx
   25fcc:	48 89 ee             	mov    %rbp,%rsi
   25fcf:	48 d3 ee             	shr    %cl,%rsi
   25fd2:	83 e6 01             	and    $0x1,%esi
   25fd5:	01 fe                	add    %edi,%esi
   25fd7:	48 63 fe             	movslq %esi,%rdi
   25fda:	81 ff 3f 02 00 00    	cmp    $0x23f,%edi
   25fe0:	0f 87 b1 1a 00 00    	ja     27a97 <miniz_oxide::inflate::core::decompress+0x22b7>
   25fe6:	41 0f b7 8c 79 dc 15 	movzwl 0x15dc(%r9,%rdi,2),%ecx
   25fed:	00 00 
   25fef:	39 da                	cmp    %ebx,%edx
   25ff1:	72 0b                	jb     25ffe <miniz_oxide::inflate::core::decompress+0x81e>
   25ff3:	0f bf f9             	movswl %cx,%edi
   25ff6:	83 c3 01             	add    $0x1,%ebx
   25ff9:	66 85 ff             	test   %di,%di
   25ffc:	78 c9                	js     25fc7 <miniz_oxide::inflate::core::decompress+0x7e7>
   25ffe:	66 85 c9             	test   %cx,%cx
   26001:	8b 5c 24 18          	mov    0x18(%rsp),%ebx
   26005:	79 28                	jns    2602f <miniz_oxide::inflate::core::decompress+0x84f>
   26007:	4d 39 c5             	cmp    %r8,%r13
   2600a:	0f 84 ee 00 00 00    	je     260fe <miniz_oxide::inflate::core::decompress+0x91e>
   26010:	41 0f b6 76 02       	movzbl 0x2(%r14),%esi
   26015:	49 83 c6 03          	add    $0x3,%r14
   26019:	89 d1                	mov    %edx,%ecx
   2601b:	48 d3 e6             	shl    %cl,%rsi
   2601e:	48 09 f5             	or     %rsi,%rbp
   26021:	48 89 2c 24          	mov    %rbp,(%rsp)
   26025:	8d 50 18             	lea    0x18(%rax),%edx
   26028:	89 54 24 08          	mov    %edx,0x8(%rsp)
   2602c:	4d 89 f0             	mov    %r14,%r8
   2602f:	4d 89 c6             	mov    %r8,%r14
   26032:	89 d0                	mov    %edx,%eax
   26034:	48 89 ea             	mov    %rbp,%rdx
   26037:	44 8b 84 24 18 01 00 	mov    0x118(%rsp),%r8d
   2603e:	00 
   2603f:	89 d1                	mov    %edx,%ecx
   26041:	81 e1 ff 03 00 00    	and    $0x3ff,%ecx
   26047:	41 0f bf b4 49 dc 0d 	movswl 0xddc(%r9,%rcx,2),%esi
   2604e:	00 00 
   26050:	85 f6                	test   %esi,%esi
   26052:	78 0d                	js     26061 <miniz_oxide::inflate::core::decompress+0x881>
   26054:	89 f1                	mov    %esi,%ecx
   26056:	c1 e9 09             	shr    $0x9,%ecx
   26059:	81 e6 ff 01 00 00    	and    $0x1ff,%esi
   2605f:	eb 3b                	jmp    2609c <miniz_oxide::inflate::core::decompress+0x8bc>
   26061:	b9 0a 00 00 00       	mov    $0xa,%ecx
   26066:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2606d:	00 00 00 
   26070:	f7 d6                	not    %esi
   26072:	48 89 d7             	mov    %rdx,%rdi
   26075:	48 d3 ef             	shr    %cl,%rdi
   26078:	83 e7 01             	and    $0x1,%edi
   2607b:	01 f7                	add    %esi,%edi
   2607d:	48 63 ff             	movslq %edi,%rdi
   26080:	81 ff 3f 02 00 00    	cmp    $0x23f,%edi
   26086:	0f 87 ee 18 00 00    	ja     2797a <miniz_oxide::inflate::core::decompress+0x219a>
   2608c:	41 0f bf b4 79 dc 15 	movswl 0x15dc(%r9,%rdi,2),%esi
   26093:	00 00 
   26095:	83 c1 01             	add    $0x1,%ecx
   26098:	85 f6                	test   %esi,%esi
   2609a:	78 d4                	js     26070 <miniz_oxide::inflate::core::decompress+0x890>
   2609c:	85 c9                	test   %ecx,%ecx
   2609e:	0f 84 42 14 00 00    	je     274e6 <miniz_oxide::inflate::core::decompress+0x1d06>
   260a4:	48 d3 ea             	shr    %cl,%rdx
   260a7:	48 89 14 24          	mov    %rdx,(%rsp)
   260ab:	29 c8                	sub    %ecx,%eax
   260ad:	89 44 24 08          	mov    %eax,0x8(%rsp)
   260b1:	66 b8 01 21          	mov    $0x2101,%ax
   260b5:	83 fe 1d             	cmp    $0x1d,%esi
   260b8:	7f 30                	jg     260ea <miniz_oxide::inflate::core::decompress+0x90a>
   260ba:	83 e6 1f             	and    $0x1f,%esi
   260bd:	48 8d 05 e8 27 01 00 	lea    0x127e8(%rip),%rax        # 388ac <str.6+0x158c>
   260c4:	0f b6 04 06          	movzbl (%rsi,%rax,1),%eax
   260c8:	85 c0                	test   %eax,%eax
   260ca:	89 44 24 14          	mov    %eax,0x14(%rsp)
   260ce:	48 8d 05 37 28 01 00 	lea    0x12837(%rip),%rax        # 3890c <str.6+0x15ec>
   260d5:	0f b7 04 70          	movzwl (%rax,%rsi,2),%eax
   260d9:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   260dd:	b9 01 16 00 00       	mov    $0x1601,%ecx
   260e2:	b8 01 10 00 00       	mov    $0x1001,%eax
   260e7:	0f 44 c1             	cmove  %ecx,%eax
   260ea:	44 0f b7 f8          	movzwl %ax,%r15d
   260ee:	41 81 e7 00 37 00 00 	and    $0x3700,%r15d
   260f5:	84 c0                	test   %al,%al
   260f7:	75 1f                	jne    26118 <miniz_oxide::inflate::core::decompress+0x938>
   260f9:	e9 02 fd ff ff       	jmpq   25e00 <miniz_oxide::inflate::core::decompress+0x620>
   260fe:	4d 89 c6             	mov    %r8,%r14
   26101:	44 8b 7c 24 2c       	mov    0x2c(%rsp),%r15d
   26106:	89 d8                	mov    %ebx,%eax
   26108:	44 8b 84 24 18 01 00 	mov    0x118(%rsp),%r8d
   2610f:	00 
   26110:	84 c0                	test   %al,%al
   26112:	0f 84 e8 fc ff ff    	je     25e00 <miniz_oxide::inflate::core::decompress+0x620>
   26118:	3c 01                	cmp    $0x1,%al
   2611a:	0f 85 0a 16 00 00    	jne    2772a <miniz_oxide::inflate::core::decompress+0x1f4a>
   26120:	e9 91 0b 00 00       	jmpq   26cb6 <miniz_oxide::inflate::core::decompress+0x14d6>
   26125:	8b 7c 24 18          	mov    0x18(%rsp),%edi
   26129:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
   2612d:	eb 0a                	jmp    26139 <miniz_oxide::inflate::core::decompress+0x959>
   2612f:	90                   	nop
   26130:	41 89 ff             	mov    %edi,%r15d
   26133:	41 f6 c7 02          	test   $0x2,%r15b
   26137:	75 29                	jne    26162 <miniz_oxide::inflate::core::decompress+0x982>
   26139:	83 f9 03             	cmp    $0x3,%ecx
   2613c:	73 2f                	jae    2616d <miniz_oxide::inflate::core::decompress+0x98d>
   2613e:	4d 39 f5             	cmp    %r14,%r13
   26141:	74 ed                	je     26130 <miniz_oxide::inflate::core::decompress+0x950>
   26143:	41 0f b6 06          	movzbl (%r14),%eax
   26147:	48 d3 e0             	shl    %cl,%rax
   2614a:	48 09 04 24          	or     %rax,(%rsp)
   2614e:	49 83 c6 01          	add    $0x1,%r14
   26152:	83 c1 08             	add    $0x8,%ecx
   26155:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   26159:	45 31 ff             	xor    %r15d,%r15d
   2615c:	41 f6 c7 02          	test   $0x2,%r15b
   26160:	74 d7                	je     26139 <miniz_oxide::inflate::core::decompress+0x959>
   26162:	45 84 ff             	test   %r15b,%r15b
   26165:	0f 85 49 01 00 00    	jne    262b4 <miniz_oxide::inflate::core::decompress+0xad4>
   2616b:	eb bc                	jmp    26129 <miniz_oxide::inflate::core::decompress+0x949>
   2616d:	48 8b 14 24          	mov    (%rsp),%rdx
   26171:	48 89 d0             	mov    %rdx,%rax
   26174:	48 c1 e8 03          	shr    $0x3,%rax
   26178:	48 89 04 24          	mov    %rax,(%rsp)
   2617c:	83 c1 fd             	add    $0xfffffffd,%ecx
   2617f:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   26183:	89 d0                	mov    %edx,%eax
   26185:	83 e0 01             	and    $0x1,%eax
   26188:	41 89 41 18          	mov    %eax,0x18(%r9)
   2618c:	d1 ea                	shr    %edx
   2618e:	83 e2 03             	and    $0x3,%edx
   26191:	41 89 51 1c          	mov    %edx,0x1c(%r9)
   26195:	66 b9 01 00          	mov    $0x1,%cx
   26199:	66 b8 00 04          	mov    $0x400,%ax
   2619d:	48 8d 35 00 26 01 00 	lea    0x12600(%rip),%rsi        # 387a4 <str.6+0x1484>
   261a4:	48 63 14 96          	movslq (%rsi,%rdx,4),%rdx
   261a8:	48 01 f2             	add    %rsi,%rdx
   261ab:	ff e2                	jmpq   *%rdx
   261ad:	48 b8 20 01 00 00 20 	movabs $0x2000000120,%rax
   261b4:	00 00 00 
   261b7:	49 89 41 30          	mov    %rax,0x30(%r9)
   261bb:	0f 28 05 fe 24 01 00 	movaps 0x124fe(%rip),%xmm0        # 386c0 <str.6+0x13a0>
   261c2:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
   261c9:	00 
   261ca:	0f 11 40 10          	movups %xmm0,0x10(%rax)
   261ce:	0f 11 40 20          	movups %xmm0,0x20(%rax)
   261d2:	0f 11 40 30          	movups %xmm0,0x30(%rax)
   261d6:	0f 11 40 40          	movups %xmm0,0x40(%rax)
   261da:	0f 11 40 50          	movups %xmm0,0x50(%rax)
   261de:	0f 11 40 60          	movups %xmm0,0x60(%rax)
   261e2:	0f 11 40 70          	movups %xmm0,0x70(%rax)
   261e6:	0f 11 80 80 00 00 00 	movups %xmm0,0x80(%rax)
   261ed:	0f 11 00             	movups %xmm0,(%rax)
   261f0:	0f 28 05 d9 24 01 00 	movaps 0x124d9(%rip),%xmm0        # 386d0 <str.6+0x13b0>
   261f7:	48 8b 84 24 b8 00 00 	mov    0xb8(%rsp),%rax
   261fe:	00 
   261ff:	0f 11 40 60          	movups %xmm0,0x60(%rax)
   26203:	0f 11 40 50          	movups %xmm0,0x50(%rax)
   26207:	0f 11 40 40          	movups %xmm0,0x40(%rax)
   2620b:	0f 11 40 30          	movups %xmm0,0x30(%rax)
   2620f:	0f 11 40 20          	movups %xmm0,0x20(%rax)
   26213:	0f 11 40 10          	movups %xmm0,0x10(%rax)
   26217:	0f 11 00             	movups %xmm0,(%rax)
   2621a:	48 b8 07 07 07 07 07 	movabs $0x707070707070707,%rax
   26221:	07 07 07 
   26224:	48 8b 8c 24 b0 00 00 	mov    0xb0(%rsp),%rcx
   2622b:	00 
   2622c:	48 89 41 10          	mov    %rax,0x10(%rcx)
   26230:	0f 28 05 a9 24 01 00 	movaps 0x124a9(%rip),%xmm0        # 386e0 <str.6+0x13c0>
   26237:	0f 11 01             	movups %xmm0,(%rcx)
   2623a:	48 b8 08 08 08 08 08 	movabs $0x808080808080808,%rax
   26241:	08 08 08 
   26244:	49 89 81 d4 0d 00 00 	mov    %rax,0xdd4(%r9)
   2624b:	0f 28 05 9e 24 01 00 	movaps 0x1249e(%rip),%xmm0        # 386f0 <str.6+0x13d0>
   26252:	48 8b 84 24 90 00 00 	mov    0x90(%rsp),%rax
   26259:	00 
   2625a:	0f 11 40 10          	movups %xmm0,0x10(%rax)
   2625e:	0f 11 00             	movups %xmm0,(%rax)
   26261:	48 89 e6             	mov    %rsp,%rsi
   26264:	4c 89 cf             	mov    %r9,%rdi
   26267:	4c 89 d3             	mov    %r10,%rbx
   2626a:	e8 11 ea ff ff       	callq  24c80 <miniz_oxide::inflate::core::init_tree>
   2626f:	49 89 da             	mov    %rbx,%r10
   26272:	8b 7c 24 18          	mov    0x18(%rsp),%edi
   26276:	44 8b 84 24 18 01 00 	mov    0x118(%rsp),%r8d
   2627d:	00 
   2627e:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   26283:	4c 8b 5c 24 40       	mov    0x40(%rsp),%r11
   26288:	0f b6 c8             	movzbl %al,%ecx
   2628b:	25 00 ff 00 00       	and    $0xff00,%eax
   26290:	eb 12                	jmp    262a4 <miniz_oxide::inflate::core::decompress+0xac4>
   26292:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%rsp)
   26299:	00 
   2629a:	66 b8 00 08          	mov    $0x800,%ax
   2629e:	eb 04                	jmp    262a4 <miniz_oxide::inflate::core::decompress+0xac4>
   262a0:	66 b8 00 19          	mov    $0x1900,%ax
   262a4:	44 0f b7 f9          	movzwl %cx,%r15d
   262a8:	41 09 c7             	or     %eax,%r15d
   262ab:	45 84 ff             	test   %r15b,%r15b
   262ae:	0f 84 75 fe ff ff    	je     26129 <miniz_oxide::inflate::core::decompress+0x949>
   262b4:	41 80 ff 01          	cmp    $0x1,%r15b
   262b8:	0f 85 4e 14 00 00    	jne    2770c <miniz_oxide::inflate::core::decompress+0x1f2c>
   262be:	e9 7e 0c 00 00       	jmpq   26f41 <miniz_oxide::inflate::core::decompress+0x1761>
   262c3:	4c 89 ed             	mov    %r13,%rbp
   262c6:	4c 29 f5             	sub    %r14,%rbp
   262c9:	0f 84 ae 14 00 00    	je     2777d <miniz_oxide::inflate::core::decompress+0x1f9d>
   262cf:	4c 89 64 24 50       	mov    %r12,0x50(%rsp)
   262d4:	4c 89 db             	mov    %r11,%rbx
   262d7:	4c 29 d3             	sub    %r10,%rbx
   262da:	48 39 eb             	cmp    %rbp,%rbx
   262dd:	48 0f 47 dd          	cmova  %rbp,%rbx
   262e1:	44 8b 7c 24 10       	mov    0x10(%rsp),%r15d
   262e6:	4c 39 fb             	cmp    %r15,%rbx
   262e9:	49 0f 47 df          	cmova  %r15,%rbx
   262ed:	48 39 dd             	cmp    %rbx,%rbp
   262f0:	0f 82 c9 17 00 00    	jb     27abf <miniz_oxide::inflate::core::decompress+0x22df>
   262f6:	49 89 dc             	mov    %rbx,%r12
   262f9:	4d 01 d4             	add    %r10,%r12
   262fc:	0f 82 d2 17 00 00    	jb     27ad4 <miniz_oxide::inflate::core::decompress+0x22f4>
   26302:	4d 39 dc             	cmp    %r11,%r12
   26305:	0f 87 de 17 00 00    	ja     27ae9 <miniz_oxide::inflate::core::decompress+0x2309>
   2630b:	4c 03 54 24 30       	add    0x30(%rsp),%r10
   26310:	4c 89 d7             	mov    %r10,%rdi
   26313:	4c 89 f6             	mov    %r14,%rsi
   26316:	48 89 da             	mov    %rbx,%rdx
   26319:	ff 15 e1 f9 01 00    	callq  *0x1f9e1(%rip)        # 45d00 <memcpy@GLIBC_2.14>
   2631f:	48 8d 43 ff          	lea    -0x1(%rbx),%rax
   26323:	49 01 de             	add    %rbx,%r14
   26326:	48 39 c5             	cmp    %rax,%rbp
   26329:	4d 0f 46 f5          	cmovbe %r13,%r14
   2632d:	41 29 df             	sub    %ebx,%r15d
   26330:	44 89 7c 24 10       	mov    %r15d,0x10(%rsp)
   26335:	41 b7 06             	mov    $0x6,%r15b
   26338:	4d 89 e2             	mov    %r12,%r10
   2633b:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   26340:	4c 8b 5c 24 40       	mov    0x40(%rsp),%r11
   26345:	e9 8c 08 00 00       	jmpq   26bd6 <miniz_oxide::inflate::core::decompress+0x13f6>
   2634a:	4d 39 f5             	cmp    %r14,%r13
   2634d:	0f 84 25 14 00 00    	je     27778 <miniz_oxide::inflate::core::decompress+0x1f98>
   26353:	41 0f b6 06          	movzbl (%r14),%eax
   26357:	49 83 c6 01          	add    $0x1,%r14
   2635b:	41 89 41 0c          	mov    %eax,0xc(%r9)
   2635f:	41 b7 02             	mov    $0x2,%r15b
   26362:	e9 d3 f5 ff ff       	jmpq   2593a <miniz_oxide::inflate::core::decompress+0x15a>
   26367:	8b 54 24 18          	mov    0x18(%rsp),%edx
   2636b:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
   2636f:	e9 12 00 00 00       	jmpq   26386 <miniz_oxide::inflate::core::decompress+0xba6>
   26374:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2637b:	00 00 00 
   2637e:	66 90                	xchg   %ax,%ax
   26380:	89 d0                	mov    %edx,%eax
   26382:	a8 02                	test   $0x2,%al
   26384:	75 2a                	jne    263b0 <miniz_oxide::inflate::core::decompress+0xbd0>
   26386:	83 f9 08             	cmp    $0x8,%ecx
   26389:	0f 83 43 0a 00 00    	jae    26dd2 <miniz_oxide::inflate::core::decompress+0x15f2>
   2638f:	4d 39 f5             	cmp    %r14,%r13
   26392:	74 ec                	je     26380 <miniz_oxide::inflate::core::decompress+0xba0>
   26394:	41 0f b6 06          	movzbl (%r14),%eax
   26398:	48 d3 e0             	shl    %cl,%rax
   2639b:	48 09 04 24          	or     %rax,(%rsp)
   2639f:	49 83 c6 01          	add    $0x1,%r14
   263a3:	83 c1 08             	add    $0x8,%ecx
   263a6:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   263aa:	31 c0                	xor    %eax,%eax
   263ac:	a8 02                	test   $0x2,%al
   263ae:	74 d6                	je     26386 <miniz_oxide::inflate::core::decompress+0xba6>
   263b0:	84 c0                	test   %al,%al
   263b2:	74 b7                	je     2636b <miniz_oxide::inflate::core::decompress+0xb8b>
   263b4:	e9 d0 13 00 00       	jmpq   27789 <miniz_oxide::inflate::core::decompress+0x1fa9>
   263b9:	8b 7c 24 18          	mov    0x18(%rsp),%edi
   263bd:	8b 44 24 10          	mov    0x10(%rsp),%eax
   263c1:	48 83 f8 04          	cmp    $0x4,%rax
   263c5:	0f 83 8f 10 00 00    	jae    2745a <miniz_oxide::inflate::core::decompress+0x1c7a>
   263cb:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
   263cf:	85 c9                	test   %ecx,%ecx
   263d1:	75 26                	jne    263f9 <miniz_oxide::inflate::core::decompress+0xc19>
   263d3:	4d 39 f5             	cmp    %r14,%r13
   263d6:	0f 84 7f 00 00 00    	je     2645b <miniz_oxide::inflate::core::decompress+0xc7b>
   263dc:	41 8a 0e             	mov    (%r14),%cl
   263df:	49 83 c6 01          	add    $0x1,%r14
   263e3:	41 88 8c 01 1d 29 00 	mov    %cl,0x291d(%r9,%rax,1)
   263ea:	00 
   263eb:	e9 57 00 00 00       	jmpq   26447 <miniz_oxide::inflate::core::decompress+0xc67>
   263f0:	41 89 ff             	mov    %edi,%r15d
   263f3:	41 f6 c7 02          	test   $0x2,%r15b
   263f7:	75 29                	jne    26422 <miniz_oxide::inflate::core::decompress+0xc42>
   263f9:	83 f9 08             	cmp    $0x8,%ecx
   263fc:	73 2b                	jae    26429 <miniz_oxide::inflate::core::decompress+0xc49>
   263fe:	4d 39 f5             	cmp    %r14,%r13
   26401:	74 ed                	je     263f0 <miniz_oxide::inflate::core::decompress+0xc10>
   26403:	41 0f b6 16          	movzbl (%r14),%edx
   26407:	48 d3 e2             	shl    %cl,%rdx
   2640a:	48 09 14 24          	or     %rdx,(%rsp)
   2640e:	49 83 c6 01          	add    $0x1,%r14
   26412:	83 c1 08             	add    $0x8,%ecx
   26415:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   26419:	45 31 ff             	xor    %r15d,%r15d
   2641c:	41 f6 c7 02          	test   $0x2,%r15b
   26420:	74 d7                	je     263f9 <miniz_oxide::inflate::core::decompress+0xc19>
   26422:	45 84 ff             	test   %r15b,%r15b
   26425:	75 40                	jne    26467 <miniz_oxide::inflate::core::decompress+0xc87>
   26427:	eb 94                	jmp    263bd <miniz_oxide::inflate::core::decompress+0xbdd>
   26429:	48 8b 14 24          	mov    (%rsp),%rdx
   2642d:	48 89 d6             	mov    %rdx,%rsi
   26430:	48 c1 ee 08          	shr    $0x8,%rsi
   26434:	48 89 34 24          	mov    %rsi,(%rsp)
   26438:	83 c1 f8             	add    $0xfffffff8,%ecx
   2643b:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   2643f:	41 88 94 01 1d 29 00 	mov    %dl,0x291d(%r9,%rax,1)
   26446:	00 
   26447:	83 c0 01             	add    $0x1,%eax
   2644a:	89 44 24 10          	mov    %eax,0x10(%rsp)
   2644e:	45 31 ff             	xor    %r15d,%r15d
   26451:	45 84 ff             	test   %r15b,%r15b
   26454:	75 11                	jne    26467 <miniz_oxide::inflate::core::decompress+0xc87>
   26456:	e9 62 ff ff ff       	jmpq   263bd <miniz_oxide::inflate::core::decompress+0xbdd>
   2645b:	41 89 ff             	mov    %edi,%r15d
   2645e:	45 84 ff             	test   %r15b,%r15b
   26461:	0f 84 56 ff ff ff    	je     263bd <miniz_oxide::inflate::core::decompress+0xbdd>
   26467:	41 80 ff 01          	cmp    $0x1,%r15b
   2646b:	0f 85 c8 12 00 00    	jne    27739 <miniz_oxide::inflate::core::decompress+0x1f59>
   26471:	e9 cb 0a 00 00       	jmpq   26f41 <miniz_oxide::inflate::core::decompress+0x1761>
   26476:	41 b7 03             	mov    $0x3,%r15b
   26479:	41 83 79 18 00       	cmpl   $0x0,0x18(%r9)
   2647e:	0f 84 b6 f4 ff ff    	je     2593a <miniz_oxide::inflate::core::decompress+0x15a>
   26484:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
   26488:	89 c8                	mov    %ecx,%eax
   2648a:	83 e0 07             	and    $0x7,%eax
   2648d:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
   26492:	8b 7c 24 18          	mov    0x18(%rsp),%edi
   26496:	e9 10 00 00 00       	jmpq   264ab <miniz_oxide::inflate::core::decompress+0xccb>
   2649b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   264a0:	89 fa                	mov    %edi,%edx
   264a2:	f6 c2 02             	test   $0x2,%dl
   264a5:	0f 85 b4 0a 00 00    	jne    26f5f <miniz_oxide::inflate::core::decompress+0x177f>
   264ab:	89 ca                	mov    %ecx,%edx
   264ad:	29 c2                	sub    %eax,%edx
   264af:	0f 83 9e 0a 00 00    	jae    26f53 <miniz_oxide::inflate::core::decompress+0x1773>
   264b5:	4d 39 f5             	cmp    %r14,%r13
   264b8:	74 e6                	je     264a0 <miniz_oxide::inflate::core::decompress+0xcc0>
   264ba:	41 0f b6 16          	movzbl (%r14),%edx
   264be:	48 d3 e2             	shl    %cl,%rdx
   264c1:	48 09 14 24          	or     %rdx,(%rsp)
   264c5:	49 83 c6 01          	add    $0x1,%r14
   264c9:	83 c1 08             	add    $0x8,%ecx
   264cc:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   264d0:	31 d2                	xor    %edx,%edx
   264d2:	f6 c2 02             	test   $0x2,%dl
   264d5:	74 d4                	je     264ab <miniz_oxide::inflate::core::decompress+0xccb>
   264d7:	e9 83 0a 00 00       	jmpq   26f5f <miniz_oxide::inflate::core::decompress+0x177f>
   264dc:	8b 44 24 10          	mov    0x10(%rsp),%eax
   264e0:	89 c1                	mov    %eax,%ecx
   264e2:	81 e1 ff 01 00 00    	and    $0x1ff,%ecx
   264e8:	89 4c 24 10          	mov    %ecx,0x10(%rsp)
   264ec:	41 b7 14             	mov    $0x14,%r15b
   264ef:	81 f9 00 01 00 00    	cmp    $0x100,%ecx
   264f5:	0f 84 3f f4 ff ff    	je     2593a <miniz_oxide::inflate::core::decompress+0x15a>
   264fb:	41 b7 20             	mov    $0x20,%r15b
   264fe:	81 f9 1d 01 00 00    	cmp    $0x11d,%ecx
   26504:	0f 87 30 f4 ff ff    	ja     2593a <miniz_oxide::inflate::core::decompress+0x15a>
   2650a:	83 c0 ff             	add    $0xffffffff,%eax
   2650d:	83 e0 1f             	and    $0x1f,%eax
   26510:	48 8d 0d 75 23 01 00 	lea    0x12375(%rip),%rcx        # 3888c <str.6+0x156c>
   26517:	0f b6 0c 08          	movzbl (%rax,%rcx,1),%ecx
   2651b:	85 c9                	test   %ecx,%ecx
   2651d:	41 0f 94 c7          	sete   %r15b
   26521:	89 4c 24 14          	mov    %ecx,0x14(%rsp)
   26525:	48 8d 0d a0 23 01 00 	lea    0x123a0(%rip),%rcx        # 388cc <str.6+0x15ac>
   2652c:	0f b7 04 41          	movzwl (%rcx,%rax,2),%eax
   26530:	89 44 24 10          	mov    %eax,0x10(%rsp)
   26534:	41 80 cf 0e          	or     $0xe,%r15b
   26538:	e9 fd f3 ff ff       	jmpq   2593a <miniz_oxide::inflate::core::decompress+0x15a>
   2653d:	41 b7 14             	mov    $0x14,%r15b
   26540:	83 7c 24 10 00       	cmpl   $0x0,0x10(%rsp)
   26545:	0f 84 ef f3 ff ff    	je     2593a <miniz_oxide::inflate::core::decompress+0x15a>
   2654b:	41 b7 07             	mov    $0x7,%r15b
   2654e:	4d 39 da             	cmp    %r11,%r10
   26551:	0f 85 e3 f3 ff ff    	jne    2593a <miniz_oxide::inflate::core::decompress+0x15a>
   26557:	e9 86 12 00 00       	jmpq   277e2 <miniz_oxide::inflate::core::decompress+0x2002>
   2655c:	8b 44 24 10          	mov    0x10(%rsp),%eax
   26560:	41 b7 15             	mov    $0x15,%r15b
   26563:	3d ff 00 00 00       	cmp    $0xff,%eax
   26568:	0f 87 cc f3 ff ff    	ja     2593a <miniz_oxide::inflate::core::decompress+0x15a>
   2656e:	4d 39 da             	cmp    %r11,%r10
   26571:	0f 84 70 12 00 00    	je     277e7 <miniz_oxide::inflate::core::decompress+0x2007>
   26577:	0f 83 11 14 00 00    	jae    2798e <miniz_oxide::inflate::core::decompress+0x21ae>
   2657d:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   26582:	42 88 04 11          	mov    %al,(%rcx,%r10,1)
   26586:	49 83 c2 01          	add    $0x1,%r10
   2658a:	41 b7 0c             	mov    $0xc,%r15b
   2658d:	e9 a8 f3 ff ff       	jmpq   2593a <miniz_oxide::inflate::core::decompress+0x15a>
   26592:	8b 5c 24 18          	mov    0x18(%rsp),%ebx
   26596:	8b 74 24 10          	mov    0x10(%rsp),%esi
   2659a:	48 83 fe 03          	cmp    $0x3,%rsi
   2659e:	0f 83 fd 0e 00 00    	jae    274a1 <miniz_oxide::inflate::core::decompress+0x1cc1>
   265a4:	48 b8 05 00 00 00 05 	movabs $0x500000005,%rax
   265ab:	00 00 00 
   265ae:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   265b3:	c7 44 24 78 04 00 00 	movl   $0x4,0x78(%rsp)
   265ba:	00 
   265bb:	8b 44 b4 70          	mov    0x70(%rsp,%rsi,4),%eax
   265bf:	8b 54 24 08          	mov    0x8(%rsp),%edx
   265c3:	e9 11 00 00 00       	jmpq   265d9 <miniz_oxide::inflate::core::decompress+0xdf9>
   265c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   265cf:	00 
   265d0:	41 89 df             	mov    %ebx,%r15d
   265d3:	41 f6 c7 02          	test   $0x2,%r15b
   265d7:	75 2a                	jne    26603 <miniz_oxide::inflate::core::decompress+0xe23>
   265d9:	39 c2                	cmp    %eax,%edx
   265db:	73 2d                	jae    2660a <miniz_oxide::inflate::core::decompress+0xe2a>
   265dd:	4d 39 f5             	cmp    %r14,%r13
   265e0:	74 ee                	je     265d0 <miniz_oxide::inflate::core::decompress+0xdf0>
   265e2:	41 0f b6 3e          	movzbl (%r14),%edi
   265e6:	89 d1                	mov    %edx,%ecx
   265e8:	48 d3 e7             	shl    %cl,%rdi
   265eb:	48 09 3c 24          	or     %rdi,(%rsp)
   265ef:	49 83 c6 01          	add    $0x1,%r14
   265f3:	83 c2 08             	add    $0x8,%edx
   265f6:	89 54 24 08          	mov    %edx,0x8(%rsp)
   265fa:	45 31 ff             	xor    %r15d,%r15d
   265fd:	41 f6 c7 02          	test   $0x2,%r15b
   26601:	74 d6                	je     265d9 <miniz_oxide::inflate::core::decompress+0xdf9>
   26603:	45 84 ff             	test   %r15b,%r15b
   26606:	75 50                	jne    26658 <miniz_oxide::inflate::core::decompress+0xe78>
   26608:	eb 8c                	jmp    26596 <miniz_oxide::inflate::core::decompress+0xdb6>
   2660a:	48 8b 2c 24          	mov    (%rsp),%rbp
   2660e:	48 89 ef             	mov    %rbp,%rdi
   26611:	89 c1                	mov    %eax,%ecx
   26613:	48 d3 ef             	shr    %cl,%rdi
   26616:	48 89 3c 24          	mov    %rdi,(%rsp)
   2661a:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   26621:	48 d3 e7             	shl    %cl,%rdi
   26624:	29 c2                	sub    %eax,%edx
   26626:	89 54 24 08          	mov    %edx,0x8(%rsp)
   2662a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2662f:	31 f8                	xor    %edi,%eax
   26631:	21 c5                	and    %eax,%ebp
   26633:	48 8d 05 12 23 01 00 	lea    0x12312(%rip),%rax        # 3894c <str.6+0x162c>
   2663a:	0f b7 04 70          	movzwl (%rax,%rsi,2),%eax
   2663e:	01 e8                	add    %ebp,%eax
   26640:	41 89 44 b1 30       	mov    %eax,0x30(%r9,%rsi,4)
   26645:	8d 46 01             	lea    0x1(%rsi),%eax
   26648:	89 44 24 10          	mov    %eax,0x10(%rsp)
   2664c:	45 31 ff             	xor    %r15d,%r15d
   2664f:	45 84 ff             	test   %r15b,%r15b
   26652:	0f 84 3e ff ff ff    	je     26596 <miniz_oxide::inflate::core::decompress+0xdb6>
   26658:	41 80 ff 01          	cmp    $0x1,%r15b
   2665c:	0f 85 e6 10 00 00    	jne    27748 <miniz_oxide::inflate::core::decompress+0x1f68>
   26662:	e9 da 08 00 00       	jmpq   26f41 <miniz_oxide::inflate::core::decompress+0x1761>
   26667:	8b 5c 24 18          	mov    0x18(%rsp),%ebx
   2666b:	8b 7c 24 10          	mov    0x10(%rsp),%edi
   2666f:	45 8b 79 30          	mov    0x30(%r9),%r15d
   26673:	41 8b 69 34          	mov    0x34(%r9),%ebp
   26677:	41 8d 04 2f          	lea    (%r15,%rbp,1),%eax
   2667b:	39 c7                	cmp    %eax,%edi
   2667d:	73 51                	jae    266d0 <miniz_oxide::inflate::core::decompress+0xef0>
   2667f:	8b 44 24 08          	mov    0x8(%rsp),%eax
   26683:	48 83 f8 0f          	cmp    $0xf,%rax
   26687:	0f 83 12 01 00 00    	jae    2679f <miniz_oxide::inflate::core::decompress+0xfbf>
   2668d:	4c 89 e9             	mov    %r13,%rcx
   26690:	4c 29 f1             	sub    %r14,%rcx
   26693:	48 83 f9 01          	cmp    $0x1,%rcx
   26697:	0f 87 08 01 00 00    	ja     267a5 <miniz_oxide::inflate::core::decompress+0xfc5>
   2669d:	48 8b 14 24          	mov    (%rsp),%rdx
   266a1:	89 d1                	mov    %edx,%ecx
   266a3:	81 e1 ff 03 00 00    	and    $0x3ff,%ecx
   266a9:	41 0f bf b4 49 7c 1b 	movswl 0x1b7c(%r9,%rcx,2),%esi
   266b0:	00 00 
   266b2:	85 f6                	test   %esi,%esi
   266b4:	0f 88 17 02 00 00    	js     268d1 <miniz_oxide::inflate::core::decompress+0x10f1>
   266ba:	c1 ee 09             	shr    $0x9,%esi
   266bd:	0f 84 5e 02 00 00    	je     26921 <miniz_oxide::inflate::core::decompress+0x1141>
   266c3:	39 f0                	cmp    %esi,%eax
   266c5:	0f 83 f6 00 00 00    	jae    267c1 <miniz_oxide::inflate::core::decompress+0xfe1>
   266cb:	e9 51 02 00 00       	jmpq   26921 <miniz_oxide::inflate::core::decompress+0x1141>
   266d0:	39 c7                	cmp    %eax,%edi
   266d2:	0f 85 3c 0e 00 00    	jne    27514 <miniz_oxide::inflate::core::decompress+0x1d34>
   266d8:	4c 89 54 24 48       	mov    %r10,0x48(%rsp)
   266dd:	41 81 ff 21 01 00 00 	cmp    $0x121,%r15d
   266e4:	0f 83 d6 12 00 00    	jae    279c0 <miniz_oxide::inflate::core::decompress+0x21e0>
   266ea:	4c 89 e3             	mov    %r12,%rbx
   266ed:	49 89 fc             	mov    %rdi,%r12
   266f0:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   266f7:	00 
   266f8:	48 8b b4 24 c8 00 00 	mov    0xc8(%rsp),%rsi
   266ff:	00 
   26700:	4c 89 fa             	mov    %r15,%rdx
   26703:	ff 15 f7 f5 01 00    	callq  *0x1f5f7(%rip)        # 45d00 <memcpy@GLIBC_2.14>
   26709:	81 fd 21 01 00 00    	cmp    $0x121,%ebp
   2670f:	0f 83 c2 12 00 00    	jae    279d7 <miniz_oxide::inflate::core::decompress+0x21f7>
   26715:	4c 89 e7             	mov    %r12,%rdi
   26718:	44 39 ff             	cmp    %r15d,%edi
   2671b:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   26720:	0f 82 c8 12 00 00    	jb     279ee <miniz_oxide::inflate::core::decompress+0x220e>
   26726:	81 ff c9 01 00 00    	cmp    $0x1c9,%edi
   2672c:	0f 87 d1 12 00 00    	ja     27a03 <miniz_oxide::inflate::core::decompress+0x2223>
   26732:	4c 29 ff             	sub    %r15,%rdi
   26735:	48 39 ef             	cmp    %rbp,%rdi
   26738:	0f 85 d9 12 00 00    	jne    27a17 <miniz_oxide::inflate::core::decompress+0x2237>
   2673e:	49 89 dc             	mov    %rbx,%r12
   26741:	4a 8d 34 38          	lea    (%rax,%r15,1),%rsi
   26745:	48 81 c6 21 29 00 00 	add    $0x2921,%rsi
   2674c:	48 8b bc 24 90 00 00 	mov    0x90(%rsp),%rdi
   26753:	00 
   26754:	48 89 ea             	mov    %rbp,%rdx
   26757:	ff 15 a3 f5 01 00    	callq  *0x1f5a3(%rip)        # 45d00 <memcpy@GLIBC_2.14>
   2675d:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   26762:	83 40 1c ff          	addl   $0xffffffff,0x1c(%rax)
   26766:	48 89 e6             	mov    %rsp,%rsi
   26769:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   2676e:	e8 0d e5 ff ff       	callq  24c80 <miniz_oxide::inflate::core::init_tree>
   26773:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   26778:	41 89 c7             	mov    %eax,%r15d
   2677b:	4c 8b 5c 24 40       	mov    0x40(%rsp),%r11
   26780:	44 8b 84 24 18 01 00 	mov    0x118(%rsp),%r8d
   26787:	00 
   26788:	4c 8b 54 24 48       	mov    0x48(%rsp),%r10
   2678d:	8b 5c 24 18          	mov    0x18(%rsp),%ebx
   26791:	45 84 ff             	test   %r15b,%r15b
   26794:	0f 85 25 05 00 00    	jne    26cbf <miniz_oxide::inflate::core::decompress+0x14df>
   2679a:	e9 cc fe ff ff       	jmpq   2666b <miniz_oxide::inflate::core::decompress+0xe8b>
   2679f:	48 8b 14 24          	mov    (%rsp),%rdx
   267a3:	eb 1c                	jmp    267c1 <miniz_oxide::inflate::core::decompress+0xfe1>
   267a5:	41 0f b7 16          	movzwl (%r14),%edx
   267a9:	89 c1                	mov    %eax,%ecx
   267ab:	48 d3 e2             	shl    %cl,%rdx
   267ae:	48 0b 14 24          	or     (%rsp),%rdx
   267b2:	49 83 c6 02          	add    $0x2,%r14
   267b6:	48 89 14 24          	mov    %rdx,(%rsp)
   267ba:	83 c0 10             	add    $0x10,%eax
   267bd:	89 44 24 08          	mov    %eax,0x8(%rsp)
   267c1:	89 d1                	mov    %edx,%ecx
   267c3:	81 e1 ff 03 00 00    	and    $0x3ff,%ecx
   267c9:	41 0f bf b4 49 7c 1b 	movswl 0x1b7c(%r9,%rcx,2),%esi
   267d0:	00 00 
   267d2:	85 f6                	test   %esi,%esi
   267d4:	78 4a                	js     26820 <miniz_oxide::inflate::core::decompress+0x1040>
   267d6:	89 f1                	mov    %esi,%ecx
   267d8:	c1 e9 09             	shr    $0x9,%ecx
   267db:	81 e6 ff 01 00 00    	and    $0x1ff,%esi
   267e1:	85 c9                	test   %ecx,%ecx
   267e3:	74 7e                	je     26863 <miniz_oxide::inflate::core::decompress+0x1083>
   267e5:	48 d3 ea             	shr    %cl,%rdx
   267e8:	48 89 14 24          	mov    %rdx,(%rsp)
   267ec:	29 c8                	sub    %ecx,%eax
   267ee:	89 44 24 08          	mov    %eax,0x8(%rsp)
   267f2:	89 74 24 0c          	mov    %esi,0xc(%rsp)
   267f6:	83 fe 10             	cmp    $0x10,%esi
   267f9:	73 73                	jae    2686e <miniz_oxide::inflate::core::decompress+0x108e>
   267fb:	81 ff c8 01 00 00    	cmp    $0x1c8,%edi
   26801:	0f 87 25 12 00 00    	ja     27a2c <miniz_oxide::inflate::core::decompress+0x224c>
   26807:	41 88 b4 39 21 29 00 	mov    %sil,0x2921(%r9,%rdi,1)
   2680e:	00 
   2680f:	8d 47 01             	lea    0x1(%rdi),%eax
   26812:	89 44 24 10          	mov    %eax,0x10(%rsp)
   26816:	45 31 ff             	xor    %r15d,%r15d
   26819:	31 c0                	xor    %eax,%eax
   2681b:	e9 94 00 00 00       	jmpq   268b4 <miniz_oxide::inflate::core::decompress+0x10d4>
   26820:	48 89 fd             	mov    %rdi,%rbp
   26823:	b9 0a 00 00 00       	mov    $0xa,%ecx
   26828:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2682f:	00 
   26830:	f7 d6                	not    %esi
   26832:	48 89 d7             	mov    %rdx,%rdi
   26835:	48 d3 ef             	shr    %cl,%rdi
   26838:	83 e7 01             	and    $0x1,%edi
   2683b:	01 f7                	add    %esi,%edi
   2683d:	48 63 ff             	movslq %edi,%rdi
   26840:	81 ff 3f 02 00 00    	cmp    $0x23f,%edi
   26846:	0f 87 2e 11 00 00    	ja     2797a <miniz_oxide::inflate::core::decompress+0x219a>
   2684c:	41 0f bf b4 79 7c 23 	movswl 0x237c(%r9,%rdi,2),%esi
   26853:	00 00 
   26855:	83 c1 01             	add    $0x1,%ecx
   26858:	85 f6                	test   %esi,%esi
   2685a:	78 d4                	js     26830 <miniz_oxide::inflate::core::decompress+0x1050>
   2685c:	48 89 ef             	mov    %rbp,%rdi
   2685f:	85 c9                	test   %ecx,%ecx
   26861:	75 82                	jne    267e5 <miniz_oxide::inflate::core::decompress+0x1005>
   26863:	66 b8 01 00          	mov    $0x1,%ax
   26867:	66 41 bf 00 22       	mov    $0x2200,%r15w
   2686c:	eb 4f                	jmp    268bd <miniz_oxide::inflate::core::decompress+0x10dd>
   2686e:	66 b8 01 00          	mov    $0x1,%ax
   26872:	85 ff                	test   %edi,%edi
   26874:	75 0a                	jne    26880 <miniz_oxide::inflate::core::decompress+0x10a0>
   26876:	66 41 bf 00 1f       	mov    $0x1f00,%r15w
   2687b:	83 fe 10             	cmp    $0x10,%esi
   2687e:	74 34                	je     268b4 <miniz_oxide::inflate::core::decompress+0x10d4>
   26880:	48 b9 02 00 00 00 03 	movabs $0x300000002,%rcx
   26887:	00 00 00 
   2688a:	48 89 4c 24 70       	mov    %rcx,0x70(%rsp)
   2688f:	c7 44 24 78 07 00 00 	movl   $0x7,0x78(%rsp)
   26896:	00 
   26897:	89 f1                	mov    %esi,%ecx
   26899:	48 8d 79 f0          	lea    -0x10(%rcx),%rdi
   2689d:	48 83 ff 02          	cmp    $0x2,%rdi
   268a1:	0f 87 8e 11 00 00    	ja     27a35 <miniz_oxide::inflate::core::decompress+0x2255>
   268a7:	8b 4c 8c 30          	mov    0x30(%rsp,%rcx,4),%ecx
   268ab:	89 4c 24 14          	mov    %ecx,0x14(%rsp)
   268af:	66 41 bf 00 0b       	mov    $0xb00,%r15w
   268b4:	41 0f b7 cf          	movzwl %r15w,%ecx
   268b8:	0f b7 c0             	movzwl %ax,%eax
   268bb:	09 c8                	or     %ecx,%eax
   268bd:	0f b6 c0             	movzbl %al,%eax
   268c0:	41 09 c7             	or     %eax,%r15d
   268c3:	45 84 ff             	test   %r15b,%r15b
   268c6:	0f 85 f3 03 00 00    	jne    26cbf <miniz_oxide::inflate::core::decompress+0x14df>
   268cc:	e9 9a fd ff ff       	jmpq   2666b <miniz_oxide::inflate::core::decompress+0xe8b>
   268d1:	83 f8 0b             	cmp    $0xb,%eax
   268d4:	72 4b                	jb     26921 <miniz_oxide::inflate::core::decompress+0x1141>
   268d6:	49 89 ff             	mov    %rdi,%r15
   268d9:	bd 0c 00 00 00       	mov    $0xc,%ebp
   268de:	f7 d6                	not    %esi
   268e0:	8d 4d fe             	lea    -0x2(%rbp),%ecx
   268e3:	48 89 d7             	mov    %rdx,%rdi
   268e6:	48 d3 ef             	shr    %cl,%rdi
   268e9:	83 e7 01             	and    $0x1,%edi
   268ec:	01 f7                	add    %esi,%edi
   268ee:	48 63 ff             	movslq %edi,%rdi
   268f1:	81 ff 3f 02 00 00    	cmp    $0x23f,%edi
   268f7:	0f 87 9a 11 00 00    	ja     27a97 <miniz_oxide::inflate::core::decompress+0x22b7>
   268fd:	41 0f b7 8c 79 7c 23 	movzwl 0x237c(%r9,%rdi,2),%ecx
   26904:	00 00 
   26906:	39 e8                	cmp    %ebp,%eax
   26908:	72 0b                	jb     26915 <miniz_oxide::inflate::core::decompress+0x1135>
   2690a:	0f bf f1             	movswl %cx,%esi
   2690d:	83 c5 01             	add    $0x1,%ebp
   26910:	66 85 f6             	test   %si,%si
   26913:	78 c9                	js     268de <miniz_oxide::inflate::core::decompress+0x10fe>
   26915:	66 85 c9             	test   %cx,%cx
   26918:	4c 89 ff             	mov    %r15,%rdi
   2691b:	0f 89 a0 fe ff ff    	jns    267c1 <miniz_oxide::inflate::core::decompress+0xfe1>
   26921:	4d 39 f5             	cmp    %r14,%r13
   26924:	74 35                	je     2695b <miniz_oxide::inflate::core::decompress+0x117b>
   26926:	4d 8d 46 01          	lea    0x1(%r14),%r8
   2692a:	41 0f b6 2e          	movzbl (%r14),%ebp
   2692e:	89 c1                	mov    %eax,%ecx
   26930:	48 d3 e5             	shl    %cl,%rbp
   26933:	48 09 d5             	or     %rdx,%rbp
   26936:	48 89 2c 24          	mov    %rbp,(%rsp)
   2693a:	8d 50 08             	lea    0x8(%rax),%edx
   2693d:	89 54 24 08          	mov    %edx,0x8(%rsp)
   26941:	83 fa 0f             	cmp    $0xf,%edx
   26944:	72 21                	jb     26967 <miniz_oxide::inflate::core::decompress+0x1187>
   26946:	4d 89 c6             	mov    %r8,%r14
   26949:	89 d0                	mov    %edx,%eax
   2694b:	48 89 ea             	mov    %rbp,%rdx
   2694e:	44 8b 84 24 18 01 00 	mov    0x118(%rsp),%r8d
   26955:	00 
   26956:	e9 66 fe ff ff       	jmpq   267c1 <miniz_oxide::inflate::core::decompress+0xfe1>
   2695b:	44 8b 7c 24 2c       	mov    0x2c(%rsp),%r15d
   26960:	89 d8                	mov    %ebx,%eax
   26962:	e9 56 ff ff ff       	jmpq   268bd <miniz_oxide::inflate::core::decompress+0x10dd>
   26967:	49 89 ff             	mov    %rdi,%r15
   2696a:	89 e9                	mov    %ebp,%ecx
   2696c:	81 e1 ff 03 00 00    	and    $0x3ff,%ecx
   26972:	41 0f bf bc 49 7c 1b 	movswl 0x1b7c(%r9,%rcx,2),%edi
   26979:	00 00 
   2697b:	85 ff                	test   %edi,%edi
   2697d:	78 0f                	js     2698e <miniz_oxide::inflate::core::decompress+0x11ae>
   2697f:	c1 ef 09             	shr    $0x9,%edi
   26982:	74 58                	je     269dc <miniz_oxide::inflate::core::decompress+0x11fc>
   26984:	39 fa                	cmp    %edi,%edx
   26986:	0f 83 ec 00 00 00    	jae    26a78 <miniz_oxide::inflate::core::decompress+0x1298>
   2698c:	eb 4e                	jmp    269dc <miniz_oxide::inflate::core::decompress+0x11fc>
   2698e:	83 fa 0b             	cmp    $0xb,%edx
   26991:	72 49                	jb     269dc <miniz_oxide::inflate::core::decompress+0x11fc>
   26993:	bb 0c 00 00 00       	mov    $0xc,%ebx
   26998:	f7 d7                	not    %edi
   2699a:	8d 4b fe             	lea    -0x2(%rbx),%ecx
   2699d:	48 89 ee             	mov    %rbp,%rsi
   269a0:	48 d3 ee             	shr    %cl,%rsi
   269a3:	83 e6 01             	and    $0x1,%esi
   269a6:	01 fe                	add    %edi,%esi
   269a8:	48 63 fe             	movslq %esi,%rdi
   269ab:	81 ff 3f 02 00 00    	cmp    $0x23f,%edi
   269b1:	0f 87 e0 10 00 00    	ja     27a97 <miniz_oxide::inflate::core::decompress+0x22b7>
   269b7:	41 0f b7 8c 79 7c 23 	movzwl 0x237c(%r9,%rdi,2),%ecx
   269be:	00 00 
   269c0:	39 da                	cmp    %ebx,%edx
   269c2:	72 0b                	jb     269cf <miniz_oxide::inflate::core::decompress+0x11ef>
   269c4:	0f bf f9             	movswl %cx,%edi
   269c7:	83 c3 01             	add    $0x1,%ebx
   269ca:	66 85 ff             	test   %di,%di
   269cd:	78 c9                	js     26998 <miniz_oxide::inflate::core::decompress+0x11b8>
   269cf:	66 85 c9             	test   %cx,%cx
   269d2:	8b 5c 24 18          	mov    0x18(%rsp),%ebx
   269d6:	0f 89 9c 00 00 00    	jns    26a78 <miniz_oxide::inflate::core::decompress+0x1298>
   269dc:	4d 39 c5             	cmp    %r8,%r13
   269df:	0f 84 d7 00 00 00    	je     26abc <miniz_oxide::inflate::core::decompress+0x12dc>
   269e5:	4d 8d 46 02          	lea    0x2(%r14),%r8
   269e9:	41 0f b6 76 01       	movzbl 0x1(%r14),%esi
   269ee:	89 d1                	mov    %edx,%ecx
   269f0:	48 d3 e6             	shl    %cl,%rsi
   269f3:	48 09 f5             	or     %rsi,%rbp
   269f6:	48 89 2c 24          	mov    %rbp,(%rsp)
   269fa:	8d 50 10             	lea    0x10(%rax),%edx
   269fd:	89 54 24 08          	mov    %edx,0x8(%rsp)
   26a01:	83 fa 0e             	cmp    $0xe,%edx
   26a04:	76 08                	jbe    26a0e <miniz_oxide::inflate::core::decompress+0x122e>
   26a06:	4c 89 ff             	mov    %r15,%rdi
   26a09:	e9 38 ff ff ff       	jmpq   26946 <miniz_oxide::inflate::core::decompress+0x1166>
   26a0e:	89 e9                	mov    %ebp,%ecx
   26a10:	81 e1 ff 03 00 00    	and    $0x3ff,%ecx
   26a16:	41 0f bf bc 49 7c 1b 	movswl 0x1b7c(%r9,%rcx,2),%edi
   26a1d:	00 00 
   26a1f:	85 ff                	test   %edi,%edi
   26a21:	78 0b                	js     26a2e <miniz_oxide::inflate::core::decompress+0x124e>
   26a23:	c1 ef 09             	shr    $0x9,%edi
   26a26:	74 68                	je     26a90 <miniz_oxide::inflate::core::decompress+0x12b0>
   26a28:	39 fa                	cmp    %edi,%edx
   26a2a:	73 4c                	jae    26a78 <miniz_oxide::inflate::core::decompress+0x1298>
   26a2c:	eb 62                	jmp    26a90 <miniz_oxide::inflate::core::decompress+0x12b0>
   26a2e:	83 fa 0b             	cmp    $0xb,%edx
   26a31:	72 5d                	jb     26a90 <miniz_oxide::inflate::core::decompress+0x12b0>
   26a33:	bb 0c 00 00 00       	mov    $0xc,%ebx
   26a38:	f7 d7                	not    %edi
   26a3a:	8d 4b fe             	lea    -0x2(%rbx),%ecx
   26a3d:	48 89 ee             	mov    %rbp,%rsi
   26a40:	48 d3 ee             	shr    %cl,%rsi
   26a43:	83 e6 01             	and    $0x1,%esi
   26a46:	01 fe                	add    %edi,%esi
   26a48:	48 63 fe             	movslq %esi,%rdi
   26a4b:	81 ff 3f 02 00 00    	cmp    $0x23f,%edi
   26a51:	0f 87 40 10 00 00    	ja     27a97 <miniz_oxide::inflate::core::decompress+0x22b7>
   26a57:	41 0f b7 8c 79 7c 23 	movzwl 0x237c(%r9,%rdi,2),%ecx
   26a5e:	00 00 
   26a60:	39 da                	cmp    %ebx,%edx
   26a62:	72 0b                	jb     26a6f <miniz_oxide::inflate::core::decompress+0x128f>
   26a64:	0f bf f9             	movswl %cx,%edi
   26a67:	83 c3 01             	add    $0x1,%ebx
   26a6a:	66 85 ff             	test   %di,%di
   26a6d:	78 c9                	js     26a38 <miniz_oxide::inflate::core::decompress+0x1258>
   26a6f:	66 85 c9             	test   %cx,%cx
   26a72:	8b 5c 24 18          	mov    0x18(%rsp),%ebx
   26a76:	78 18                	js     26a90 <miniz_oxide::inflate::core::decompress+0x12b0>
   26a78:	4d 89 c6             	mov    %r8,%r14
   26a7b:	89 d0                	mov    %edx,%eax
   26a7d:	48 89 ea             	mov    %rbp,%rdx
   26a80:	44 8b 84 24 18 01 00 	mov    0x118(%rsp),%r8d
   26a87:	00 
   26a88:	4c 89 ff             	mov    %r15,%rdi
   26a8b:	e9 31 fd ff ff       	jmpq   267c1 <miniz_oxide::inflate::core::decompress+0xfe1>
   26a90:	4d 39 c5             	cmp    %r8,%r13
   26a93:	74 27                	je     26abc <miniz_oxide::inflate::core::decompress+0x12dc>
   26a95:	41 0f b6 76 02       	movzbl 0x2(%r14),%esi
   26a9a:	49 83 c6 03          	add    $0x3,%r14
   26a9e:	89 d1                	mov    %edx,%ecx
   26aa0:	48 d3 e6             	shl    %cl,%rsi
   26aa3:	48 09 f5             	or     %rsi,%rbp
   26aa6:	48 89 2c 24          	mov    %rbp,(%rsp)
   26aaa:	8d 50 18             	lea    0x18(%rax),%edx
   26aad:	89 54 24 08          	mov    %edx,0x8(%rsp)
   26ab1:	4d 89 f0             	mov    %r14,%r8
   26ab4:	4c 89 ff             	mov    %r15,%rdi
   26ab7:	e9 8a fe ff ff       	jmpq   26946 <miniz_oxide::inflate::core::decompress+0x1166>
   26abc:	4d 89 c6             	mov    %r8,%r14
   26abf:	44 8b 7c 24 2c       	mov    0x2c(%rsp),%r15d
   26ac4:	89 d8                	mov    %ebx,%eax
   26ac6:	44 8b 84 24 18 01 00 	mov    0x118(%rsp),%r8d
   26acd:	00 
   26ace:	e9 ea fd ff ff       	jmpq   268bd <miniz_oxide::inflate::core::decompress+0x10dd>
   26ad3:	4d 39 da             	cmp    %r11,%r10
   26ad6:	0f 84 97 0c 00 00    	je     27773 <miniz_oxide::inflate::core::decompress+0x1f93>
   26adc:	0f 83 ac 0e 00 00    	jae    2798e <miniz_oxide::inflate::core::decompress+0x21ae>
   26ae2:	8a 44 24 0c          	mov    0xc(%rsp),%al
   26ae6:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   26aeb:	42 88 04 11          	mov    %al,(%rcx,%r10,1)
   26aef:	49 83 c2 01          	add    $0x1,%r10
   26af3:	83 7c 24 08 00       	cmpl   $0x0,0x8(%rsp)
   26af8:	b8 06 00 00 00       	mov    $0x6,%eax
   26afd:	41 bf 11 00 00 00    	mov    $0x11,%r15d
   26b03:	44 0f 44 f8          	cmove  %eax,%r15d
   26b07:	83 44 24 10 ff       	addl   $0xffffffff,0x10(%rsp)
   26b0c:	44 0f 44 f8          	cmove  %eax,%r15d
   26b10:	e9 25 ee ff ff       	jmpq   2593a <miniz_oxide::inflate::core::decompress+0x15a>
   26b15:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
   26b19:	41 f6 c0 04          	test   $0x4,%r8b
   26b1d:	74 0c                	je     26b2b <miniz_oxide::inflate::core::decompress+0x134b>
   26b1f:	41 b7 1d             	mov    $0x1d,%r15b
   26b22:	49 39 ca             	cmp    %rcx,%r10
   26b25:	0f 82 0f ee ff ff    	jb     2593a <miniz_oxide::inflate::core::decompress+0x15a>
   26b2b:	44 8b 44 24 10       	mov    0x10(%rsp),%r8d
   26b30:	4b 8d 1c 02          	lea    (%r10,%r8,1),%rbx
   26b34:	4c 39 db             	cmp    %r11,%rbx
   26b37:	77 1d                	ja     26b56 <miniz_oxide::inflate::core::decompress+0x1376>
   26b39:	4c 89 d0             	mov    %r10,%rax
   26b3c:	48 29 c8             	sub    %rcx,%rax
   26b3f:	48 23 44 24 68       	and    0x68(%rsp),%rax
   26b44:	4c 29 d0             	sub    %r10,%rax
   26b47:	0f 82 94 04 00 00    	jb     26fe1 <miniz_oxide::inflate::core::decompress+0x1801>
   26b4d:	4c 39 c0             	cmp    %r8,%rax
   26b50:	0f 83 8b 04 00 00    	jae    26fe1 <miniz_oxide::inflate::core::decompress+0x1801>
   26b56:	45 85 c0             	test   %r8d,%r8d
   26b59:	b8 0c 00 00 00       	mov    $0xc,%eax
   26b5e:	41 bf 13 00 00 00    	mov    $0x13,%r15d
   26b64:	44 0f 44 f8          	cmove  %eax,%r15d
   26b68:	44 8b 84 24 18 01 00 	mov    0x118(%rsp),%r8d
   26b6f:	00 
   26b70:	e9 c5 ed ff ff       	jmpq   2593a <miniz_oxide::inflate::core::decompress+0x15a>
   26b75:	4c 89 64 24 50       	mov    %r12,0x50(%rsp)
   26b7a:	44 8b 64 24 0c       	mov    0xc(%rsp),%r12d
   26b7f:	90                   	nop
   26b80:	4c 89 db             	mov    %r11,%rbx
   26b83:	4c 29 d3             	sub    %r10,%rbx
   26b86:	0f 84 4d 0b 00 00    	je     276d9 <miniz_oxide::inflate::core::decompress+0x1ef9>
   26b8c:	4c 89 d2             	mov    %r10,%rdx
   26b8f:	4c 29 e2             	sub    %r12,%rdx
   26b92:	4c 8b 4c 24 68       	mov    0x68(%rsp),%r9
   26b97:	4c 21 ca             	and    %r9,%rdx
   26b9a:	8b 6c 24 10          	mov    0x10(%rsp),%ebp
   26b9e:	48 39 eb             	cmp    %rbp,%rbx
   26ba1:	48 0f 47 dd          	cmova  %rbp,%rbx
   26ba5:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   26baa:	4c 89 de             	mov    %r11,%rsi
   26bad:	4c 89 d1             	mov    %r10,%rcx
   26bb0:	49 89 d8             	mov    %rbx,%r8
   26bb3:	4d 89 d7             	mov    %r10,%r15
   26bb6:	e8 45 e7 ff ff       	callq  25300 <miniz_oxide::inflate::core::transfer>
   26bbb:	4d 89 fa             	mov    %r15,%r10
   26bbe:	4c 8b 5c 24 40       	mov    0x40(%rsp),%r11
   26bc3:	49 01 da             	add    %rbx,%r10
   26bc6:	41 b7 0c             	mov    $0xc,%r15b
   26bc9:	29 dd                	sub    %ebx,%ebp
   26bcb:	89 6c 24 10          	mov    %ebp,0x10(%rsp)
   26bcf:	75 af                	jne    26b80 <miniz_oxide::inflate::core::decompress+0x13a0>
   26bd1:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   26bd6:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   26bdb:	44 8b 84 24 18 01 00 	mov    0x118(%rsp),%r8d
   26be2:	00 
   26be3:	e9 52 ed ff ff       	jmpq   2593a <miniz_oxide::inflate::core::decompress+0x15a>
   26be8:	8b 7c 24 18          	mov    0x18(%rsp),%edi
   26bec:	8b 44 24 10          	mov    0x10(%rsp),%eax
   26bf0:	83 f8 03             	cmp    $0x3,%eax
   26bf3:	0f 87 e5 08 00 00    	ja     274de <miniz_oxide::inflate::core::decompress+0x1cfe>
   26bf9:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
   26bfd:	85 c9                	test   %ecx,%ecx
   26bff:	0f 85 34 00 00 00    	jne    26c39 <miniz_oxide::inflate::core::decompress+0x1459>
   26c05:	4d 39 f5             	cmp    %r14,%r13
   26c08:	0f 84 92 00 00 00    	je     26ca0 <miniz_oxide::inflate::core::decompress+0x14c0>
   26c0e:	41 0f b6 0e          	movzbl (%r14),%ecx
   26c12:	49 83 c6 01          	add    $0x1,%r14
   26c16:	41 8b 51 14          	mov    0x14(%r9),%edx
   26c1a:	c1 e2 08             	shl    $0x8,%edx
   26c1d:	09 ca                	or     %ecx,%edx
   26c1f:	41 89 51 14          	mov    %edx,0x14(%r9)
   26c23:	e9 64 00 00 00       	jmpq   26c8c <miniz_oxide::inflate::core::decompress+0x14ac>
   26c28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   26c2f:	00 
   26c30:	41 89 ff             	mov    %edi,%r15d
   26c33:	41 f6 c7 02          	test   $0x2,%r15b
   26c37:	75 29                	jne    26c62 <miniz_oxide::inflate::core::decompress+0x1482>
   26c39:	83 f9 08             	cmp    $0x8,%ecx
   26c3c:	73 2b                	jae    26c69 <miniz_oxide::inflate::core::decompress+0x1489>
   26c3e:	4d 39 f5             	cmp    %r14,%r13
   26c41:	74 ed                	je     26c30 <miniz_oxide::inflate::core::decompress+0x1450>
   26c43:	41 0f b6 16          	movzbl (%r14),%edx
   26c47:	48 d3 e2             	shl    %cl,%rdx
   26c4a:	48 09 14 24          	or     %rdx,(%rsp)
   26c4e:	49 83 c6 01          	add    $0x1,%r14
   26c52:	83 c1 08             	add    $0x8,%ecx
   26c55:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   26c59:	45 31 ff             	xor    %r15d,%r15d
   26c5c:	41 f6 c7 02          	test   $0x2,%r15b
   26c60:	74 d7                	je     26c39 <miniz_oxide::inflate::core::decompress+0x1459>
   26c62:	45 84 ff             	test   %r15b,%r15b
   26c65:	75 45                	jne    26cac <miniz_oxide::inflate::core::decompress+0x14cc>
   26c67:	eb 83                	jmp    26bec <miniz_oxide::inflate::core::decompress+0x140c>
   26c69:	48 8b 14 24          	mov    (%rsp),%rdx
   26c6d:	0f b6 f2             	movzbl %dl,%esi
   26c70:	48 c1 ea 08          	shr    $0x8,%rdx
   26c74:	48 89 14 24          	mov    %rdx,(%rsp)
   26c78:	83 c1 f8             	add    $0xfffffff8,%ecx
   26c7b:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   26c7f:	41 8b 49 14          	mov    0x14(%r9),%ecx
   26c83:	c1 e1 08             	shl    $0x8,%ecx
   26c86:	09 ce                	or     %ecx,%esi
   26c88:	41 89 71 14          	mov    %esi,0x14(%r9)
   26c8c:	83 c0 01             	add    $0x1,%eax
   26c8f:	89 44 24 10          	mov    %eax,0x10(%rsp)
   26c93:	45 31 ff             	xor    %r15d,%r15d
   26c96:	45 84 ff             	test   %r15b,%r15b
   26c99:	75 11                	jne    26cac <miniz_oxide::inflate::core::decompress+0x14cc>
   26c9b:	e9 4c ff ff ff       	jmpq   26bec <miniz_oxide::inflate::core::decompress+0x140c>
   26ca0:	41 89 ff             	mov    %edi,%r15d
   26ca3:	45 84 ff             	test   %r15b,%r15b
   26ca6:	0f 84 40 ff ff ff    	je     26bec <miniz_oxide::inflate::core::decompress+0x140c>
   26cac:	41 80 ff 01          	cmp    $0x1,%r15b
   26cb0:	0f 85 a1 0a 00 00    	jne    27757 <miniz_oxide::inflate::core::decompress+0x1f77>
   26cb6:	41 c1 ef 08          	shr    $0x8,%r15d
   26cba:	e9 7b ec ff ff       	jmpq   2593a <miniz_oxide::inflate::core::decompress+0x15a>
   26cbf:	41 80 ff 01          	cmp    $0x1,%r15b
   26cc3:	0f 85 52 0a 00 00    	jne    2771b <miniz_oxide::inflate::core::decompress+0x1f3b>
   26cc9:	e9 73 02 00 00       	jmpq   26f41 <miniz_oxide::inflate::core::decompress+0x1761>
   26cce:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
   26cd5:	89 c1                	mov    %eax,%ecx
   26cd7:	48 d3 e6             	shl    %cl,%rsi
   26cda:	48 8b 3c 24          	mov    (%rsp),%rdi
   26cde:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
   26ce3:	31 f5                	xor    %esi,%ebp
   26ce5:	21 fd                	and    %edi,%ebp
   26ce7:	48 d3 ef             	shr    %cl,%rdi
   26cea:	48 89 3c 24          	mov    %rdi,(%rsp)
   26cee:	29 c2                	sub    %eax,%edx
   26cf0:	89 54 24 08          	mov    %edx,0x8(%rsp)
   26cf4:	01 6c 24 0c          	add    %ebp,0xc(%rsp)
   26cf8:	41 b7 16             	mov    $0x16,%r15b
   26cfb:	e9 3a ec ff ff       	jmpq   2593a <miniz_oxide::inflate::core::decompress+0x15a>
   26d00:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
   26d07:	89 c1                	mov    %eax,%ecx
   26d09:	48 d3 e6             	shl    %cl,%rsi
   26d0c:	48 8b 3c 24          	mov    (%rsp),%rdi
   26d10:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
   26d15:	31 f5                	xor    %esi,%ebp
   26d17:	21 fd                	and    %edi,%ebp
   26d19:	48 d3 ef             	shr    %cl,%rdi
   26d1c:	48 89 3c 24          	mov    %rdi,(%rsp)
   26d20:	29 c2                	sub    %eax,%edx
   26d22:	89 54 24 08          	mov    %edx,0x8(%rsp)
   26d26:	01 6c 24 10          	add    %ebp,0x10(%rsp)
   26d2a:	41 b7 0f             	mov    $0xf,%r15b
   26d2d:	e9 08 ec ff ff       	jmpq   2593a <miniz_oxide::inflate::core::decompress+0x15a>
   26d32:	48 8b 2c 24          	mov    (%rsp),%rbp
   26d36:	29 c2                	sub    %eax,%edx
   26d38:	83 e0 3f             	and    $0x3f,%eax
   26d3b:	48 89 ee             	mov    %rbp,%rsi
   26d3e:	89 c1                	mov    %eax,%ecx
   26d40:	48 d3 ee             	shr    %cl,%rsi
   26d43:	48 89 34 24          	mov    %rsi,(%rsp)
   26d47:	89 54 24 08          	mov    %edx,0x8(%rsp)
   26d4b:	0f 28 05 be 19 01 00 	movaps 0x119be(%rip),%xmm0        # 38710 <str.6+0x13f0>
   26d52:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
   26d57:	48 c7 84 24 80 00 00 	movq   $0xb,0x80(%rsp)
   26d5e:	00 0b 00 00 00 
   26d63:	8b 54 24 0c          	mov    0xc(%rsp),%edx
   26d67:	89 d6                	mov    %edx,%esi
   26d69:	83 e6 03             	and    $0x3,%esi
   26d6c:	83 fe 03             	cmp    $0x3,%esi
   26d6f:	0f 84 c9 0c 00 00    	je     27a3e <miniz_oxide::inflate::core::decompress+0x225e>
   26d75:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   26d7c:	89 c1                	mov    %eax,%ecx
   26d7e:	48 d3 e7             	shl    %cl,%rdi
   26d81:	48 f7 d7             	not    %rdi
   26d84:	48 21 fd             	and    %rdi,%rbp
   26d87:	48 03 6c f4 70       	add    0x70(%rsp,%rsi,8),%rbp
   26d8c:	44 8b 7c 24 10       	mov    0x10(%rsp),%r15d
   26d91:	83 fa 10             	cmp    $0x10,%edx
   26d94:	0f 85 d3 00 00 00    	jne    26e6d <miniz_oxide::inflate::core::decompress+0x168d>
   26d9a:	49 8d 7f ff          	lea    -0x1(%r15),%rdi
   26d9e:	48 81 ff c8 01 00 00 	cmp    $0x1c8,%rdi
   26da5:	0f 87 ac 0c 00 00    	ja     27a57 <miniz_oxide::inflate::core::decompress+0x2277>
   26dab:	41 8a 8c 39 21 29 00 	mov    0x2921(%r9,%rdi,1),%cl
   26db2:	00 
   26db3:	e9 b7 00 00 00       	jmpq   26e6f <miniz_oxide::inflate::core::decompress+0x168f>
   26db8:	89 c1                	mov    %eax,%ecx
   26dba:	48 d3 2c 24          	shrq   %cl,(%rsp)
   26dbe:	89 54 24 08          	mov    %edx,0x8(%rsp)
   26dc2:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%rsp)
   26dc9:	00 
   26dca:	41 b7 05             	mov    $0x5,%r15b
   26dcd:	e9 68 eb ff ff       	jmpq   2593a <miniz_oxide::inflate::core::decompress+0x15a>
   26dd2:	48 8b 04 24          	mov    (%rsp),%rax
   26dd6:	0f b6 d0             	movzbl %al,%edx
   26dd9:	48 c1 e8 08          	shr    $0x8,%rax
   26ddd:	48 89 04 24          	mov    %rax,(%rsp)
   26de1:	83 c1 f8             	add    $0xfffffff8,%ecx
   26de4:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   26de8:	89 54 24 0c          	mov    %edx,0xc(%rsp)
   26dec:	41 b7 12             	mov    $0x12,%r15b
   26def:	e9 46 eb ff ff       	jmpq   2593a <miniz_oxide::inflate::core::decompress+0x15a>
   26df4:	8b 44 24 08          	mov    0x8(%rsp),%eax
   26df8:	48 83 f8 0f          	cmp    $0xf,%rax
   26dfc:	0f 83 48 01 00 00    	jae    26f4a <miniz_oxide::inflate::core::decompress+0x176a>
   26e02:	48 83 f9 01          	cmp    $0x1,%rcx
   26e06:	0f 87 b4 01 00 00    	ja     26fc0 <miniz_oxide::inflate::core::decompress+0x17e0>
   26e0c:	48 8b 14 24          	mov    (%rsp),%rdx
   26e10:	89 d1                	mov    %edx,%ecx
   26e12:	81 e1 ff 03 00 00    	and    $0x3ff,%ecx
   26e18:	41 0f bf 74 49 3c    	movswl 0x3c(%r9,%rcx,2),%esi
   26e1e:	85 f6                	test   %esi,%esi
   26e20:	0f 88 7e 05 00 00    	js     273a4 <miniz_oxide::inflate::core::decompress+0x1bc4>
   26e26:	c1 ee 09             	shr    $0x9,%esi
   26e29:	0f 84 bf 05 00 00    	je     273ee <miniz_oxide::inflate::core::decompress+0x1c0e>
   26e2f:	39 f0                	cmp    %esi,%eax
   26e31:	0f 83 f8 07 00 00    	jae    2762f <miniz_oxide::inflate::core::decompress+0x1e4f>
   26e37:	e9 b2 05 00 00       	jmpq   273ee <miniz_oxide::inflate::core::decompress+0x1c0e>
   26e3c:	83 f9 0f             	cmp    $0xf,%ecx
   26e3f:	8b 5c 24 18          	mov    0x18(%rsp),%ebx
   26e43:	0f 86 81 00 00 00    	jbe    26eca <miniz_oxide::inflate::core::decompress+0x16ea>
   26e49:	4d 39 f5             	cmp    %r14,%r13
   26e4c:	0f 84 a4 09 00 00    	je     277f6 <miniz_oxide::inflate::core::decompress+0x2016>
   26e52:	41 0f b6 06          	movzbl (%r14),%eax
   26e56:	49 83 c6 01          	add    $0x1,%r14
   26e5a:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   26e5f:	41 89 41 10          	mov    %eax,0x10(%r9)
   26e63:	66 41 bf 01 1c       	mov    $0x1c01,%r15w
   26e68:	e9 cf 00 00 00       	jmpq   26f3c <miniz_oxide::inflate::core::decompress+0x175c>
   26e6d:	31 c9                	xor    %ecx,%ecx
   26e6f:	48 89 e8             	mov    %rbp,%rax
   26e72:	4c 01 f8             	add    %r15,%rax
   26e75:	0f 82 f0 0b 00 00    	jb     27a6b <miniz_oxide::inflate::core::decompress+0x228b>
   26e7b:	48 3d c9 01 00 00    	cmp    $0x1c9,%rax
   26e81:	0f 87 f9 0b 00 00    	ja     27a80 <miniz_oxide::inflate::core::decompress+0x22a0>
   26e87:	4c 89 d3             	mov    %r10,%rbx
   26e8a:	48 85 ed             	test   %rbp,%rbp
   26e8d:	74 1c                	je     26eab <miniz_oxide::inflate::core::decompress+0x16cb>
   26e8f:	4b 8d 3c 39          	lea    (%r9,%r15,1),%rdi
   26e93:	48 81 c7 21 29 00 00 	add    $0x2921,%rdi
   26e9a:	0f b6 f1             	movzbl %cl,%esi
   26e9d:	48 89 ea             	mov    %rbp,%rdx
   26ea0:	ff 15 6a ed 01 00    	callq  *0x1ed6a(%rip)        # 45c10 <memset@GLIBC_2.2.5>
   26ea6:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   26eab:	44 01 fd             	add    %r15d,%ebp
   26eae:	89 6c 24 10          	mov    %ebp,0x10(%rsp)
   26eb2:	41 b7 0a             	mov    $0xa,%r15b
   26eb5:	4c 8b 5c 24 40       	mov    0x40(%rsp),%r11
   26eba:	44 8b 84 24 18 01 00 	mov    0x118(%rsp),%r8d
   26ec1:	00 
   26ec2:	49 89 da             	mov    %rbx,%r10
   26ec5:	e9 70 ea ff ff       	jmpq   2593a <miniz_oxide::inflate::core::decompress+0x15a>
   26eca:	4d 39 f5             	cmp    %r14,%r13
   26ecd:	74 56                	je     26f25 <miniz_oxide::inflate::core::decompress+0x1745>
   26ecf:	44 89 d0             	mov    %r10d,%eax
   26ed2:	83 f0 08             	xor    $0x8,%eax
   26ed5:	41 0f b6 0e          	movzbl (%r14),%ecx
   26ed9:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   26ede:	89 4a 10             	mov    %ecx,0x10(%rdx)
   26ee1:	44 89 ca             	mov    %r9d,%edx
   26ee4:	09 ca                	or     %ecx,%edx
   26ee6:	48 69 f2 85 10 42 08 	imul   $0x8421085,%rdx,%rsi
   26eed:	48 c1 ee 20          	shr    $0x20,%rsi
   26ef1:	89 d7                	mov    %edx,%edi
   26ef3:	29 f7                	sub    %esi,%edi
   26ef5:	d1 ef                	shr    %edi
   26ef7:	01 f7                	add    %esi,%edi
   26ef9:	c1 ef 04             	shr    $0x4,%edi
   26efc:	89 fe                	mov    %edi,%esi
   26efe:	c1 e6 05             	shl    $0x5,%esi
   26f01:	29 f7                	sub    %esi,%edi
   26f03:	01 d7                	add    %edx,%edi
   26f05:	83 e1 20             	and    $0x20,%ecx
   26f08:	09 f9                	or     %edi,%ecx
   26f0a:	09 c1                	or     %eax,%ecx
   26f0c:	41 bf 01 1c 00 00    	mov    $0x1c01,%r15d
   26f12:	75 06                	jne    26f1a <miniz_oxide::inflate::core::decompress+0x173a>
   26f14:	41 bf 01 03 00 00    	mov    $0x301,%r15d
   26f1a:	49 83 c6 01          	add    $0x1,%r14
   26f1e:	45 84 ff             	test   %r15b,%r15b
   26f21:	75 0a                	jne    26f2d <miniz_oxide::inflate::core::decompress+0x174d>
   26f23:	eb a5                	jmp    26eca <miniz_oxide::inflate::core::decompress+0x16ea>
   26f25:	41 89 df             	mov    %ebx,%r15d
   26f28:	45 84 ff             	test   %r15b,%r15b
   26f2b:	74 9d                	je     26eca <miniz_oxide::inflate::core::decompress+0x16ea>
   26f2d:	41 80 ff 01          	cmp    $0x1,%r15b
   26f31:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   26f36:	0f 85 c2 08 00 00    	jne    277fe <miniz_oxide::inflate::core::decompress+0x201e>
   26f3c:	4c 8b 54 24 48       	mov    0x48(%rsp),%r10
   26f41:	41 c1 ef 08          	shr    $0x8,%r15d
   26f45:	e9 f0 e9 ff ff       	jmpq   2593a <miniz_oxide::inflate::core::decompress+0x15a>
   26f4a:	48 8b 14 24          	mov    (%rsp),%rdx
   26f4e:	e9 dc 06 00 00       	jmpq   2762f <miniz_oxide::inflate::core::decompress+0x1e4f>
   26f53:	89 c1                	mov    %eax,%ecx
   26f55:	48 d3 2c 24          	shrq   %cl,(%rsp)
   26f59:	89 54 24 08          	mov    %edx,0x8(%rsp)
   26f5d:	89 d1                	mov    %edx,%ecx
   26f5f:	4d 29 ee             	sub    %r13,%r14
   26f62:	49 01 f6             	add    %rsi,%r14
   26f65:	89 c8                	mov    %ecx,%eax
   26f67:	c1 e8 03             	shr    $0x3,%eax
   26f6a:	44 39 f0             	cmp    %r14d,%eax
   26f6d:	41 0f 47 c6          	cmova  %r14d,%eax
   26f71:	8d 14 c5 00 00 00 00 	lea    0x0(,%rax,8),%edx
   26f78:	29 d1                	sub    %edx,%ecx
   26f7a:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   26f7e:	49 29 c6             	sub    %rax,%r14
   26f81:	49 39 f6             	cmp    %rsi,%r14
   26f84:	0f 87 76 0b 00 00    	ja     27b00 <miniz_oxide::inflate::core::decompress+0x2320>
   26f8a:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   26f91:	48 d3 e0             	shl    %cl,%rax
   26f94:	48 f7 d0             	not    %rax
   26f97:	48 21 04 24          	and    %rax,(%rsp)
   26f9b:	4c 03 b4 24 c0 00 00 	add    0xc0(%rsp),%r14
   26fa2:	00 
   26fa3:	41 b7 18             	mov    $0x18,%r15b
   26fa6:	41 f6 c0 01          	test   $0x1,%r8b
   26faa:	0f 84 8a e9 ff ff    	je     2593a <miniz_oxide::inflate::core::decompress+0x15a>
   26fb0:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%rsp)
   26fb7:	00 
   26fb8:	41 b7 17             	mov    $0x17,%r15b
   26fbb:	e9 7a e9 ff ff       	jmpq   2593a <miniz_oxide::inflate::core::decompress+0x15a>
   26fc0:	41 0f b7 16          	movzwl (%r14),%edx
   26fc4:	89 c1                	mov    %eax,%ecx
   26fc6:	48 d3 e2             	shl    %cl,%rdx
   26fc9:	48 0b 14 24          	or     (%rsp),%rdx
   26fcd:	49 83 c6 02          	add    $0x2,%r14
   26fd1:	48 89 14 24          	mov    %rdx,(%rsp)
   26fd5:	83 c0 10             	add    $0x10,%eax
   26fd8:	89 44 24 08          	mov    %eax,0x8(%rsp)
   26fdc:	e9 4e 06 00 00       	jmpq   2762f <miniz_oxide::inflate::core::decompress+0x1e4f>
   26fe1:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   26fe6:	4c 89 de             	mov    %r11,%rsi
   26fe9:	4c 89 d2             	mov    %r10,%rdx
   26fec:	4c 8b 4c 24 68       	mov    0x68(%rsp),%r9
   26ff1:	e8 ea e5 ff ff       	callq  255e0 <miniz_oxide::inflate::core::apply_match>
   26ff6:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   26ffb:	4c 8b 5c 24 40       	mov    0x40(%rsp),%r11
   27000:	41 b7 0c             	mov    $0xc,%r15b
   27003:	49 89 da             	mov    %rbx,%r10
   27006:	44 8b 84 24 18 01 00 	mov    0x118(%rsp),%r8d
   2700d:	00 
   2700e:	e9 27 e9 ff ff       	jmpq   2593a <miniz_oxide::inflate::core::decompress+0x15a>
   27013:	4c 89 64 24 50       	mov    %r12,0x50(%rsp)
   27018:	4c 8b 24 24          	mov    (%rsp),%r12
   2701c:	8b 6c 24 08          	mov    0x8(%rsp),%ebp
   27020:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   27024:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
   27028:	8b 54 24 10          	mov    0x10(%rsp),%edx
   2702c:	8b 74 24 14          	mov    0x14(%rsp),%esi
   27030:	4c 89 e8             	mov    %r13,%rax
   27033:	4c 29 f0             	sub    %r14,%rax
   27036:	41 b7 0c             	mov    $0xc,%r15b
   27039:	48 83 f8 0e          	cmp    $0xe,%rax
   2703d:	0f 82 af 04 00 00    	jb     274f2 <miniz_oxide::inflate::core::decompress+0x1d12>
   27043:	48 89 74 24 60       	mov    %rsi,0x60(%rsp)
   27048:	83 fd 1d             	cmp    $0x1d,%ebp
   2704b:	77 12                	ja     2705f <miniz_oxide::inflate::core::decompress+0x187f>
   2704d:	41 8b 06             	mov    (%r14),%eax
   27050:	89 e9                	mov    %ebp,%ecx
   27052:	48 d3 e0             	shl    %cl,%rax
   27055:	49 83 c6 04          	add    $0x4,%r14
   27059:	49 09 c4             	or     %rax,%r12
   2705c:	83 c5 20             	add    $0x20,%ebp
   2705f:	44 89 e0             	mov    %r12d,%eax
   27062:	25 ff 03 00 00       	and    $0x3ff,%eax
   27067:	41 0f bf 44 41 3c    	movswl 0x3c(%r9,%rax,2),%eax
   2706d:	85 c0                	test   %eax,%eax
   2706f:	78 0c                	js     2707d <miniz_oxide::inflate::core::decompress+0x189d>
   27071:	89 c1                	mov    %eax,%ecx
   27073:	c1 e9 09             	shr    $0x9,%ecx
   27076:	75 44                	jne    270bc <miniz_oxide::inflate::core::decompress+0x18dc>
   27078:	e9 3c 07 00 00       	jmpq   277b9 <miniz_oxide::inflate::core::decompress+0x1fd9>
   2707d:	b9 0a 00 00 00       	mov    $0xa,%ecx
   27082:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   27089:	00 00 00 
   2708c:	0f 1f 40 00          	nopl   0x0(%rax)
   27090:	f7 d0                	not    %eax
   27092:	4c 89 e2             	mov    %r12,%rdx
   27095:	48 d3 ea             	shr    %cl,%rdx
   27098:	83 e2 01             	and    $0x1,%edx
   2709b:	01 c2                	add    %eax,%edx
   2709d:	48 63 fa             	movslq %edx,%rdi
   270a0:	81 ff 3f 02 00 00    	cmp    $0x23f,%edi
   270a6:	0f 87 ce 08 00 00    	ja     2797a <miniz_oxide::inflate::core::decompress+0x219a>
   270ac:	41 0f bf 84 79 3c 08 	movswl 0x83c(%r9,%rdi,2),%eax
   270b3:	00 00 
   270b5:	83 c1 01             	add    $0x1,%ecx
   270b8:	85 c0                	test   %eax,%eax
   270ba:	78 d4                	js     27090 <miniz_oxide::inflate::core::decompress+0x18b0>
   270bc:	49 d3 ec             	shr    %cl,%r12
   270bf:	29 cd                	sub    %ecx,%ebp
   270c1:	a9 00 01 00 00       	test   $0x100,%eax
   270c6:	0f 85 ce 00 00 00    	jne    2719a <miniz_oxide::inflate::core::decompress+0x19ba>
   270cc:	44 89 e1             	mov    %r12d,%ecx
   270cf:	81 e1 ff 03 00 00    	and    $0x3ff,%ecx
   270d5:	41 0f bf 54 49 3c    	movswl 0x3c(%r9,%rcx,2),%edx
   270db:	85 d2                	test   %edx,%edx
   270dd:	78 18                	js     270f7 <miniz_oxide::inflate::core::decompress+0x1917>
   270df:	89 d1                	mov    %edx,%ecx
   270e1:	c1 e9 09             	shr    $0x9,%ecx
   270e4:	0f 84 d4 06 00 00    	je     277be <miniz_oxide::inflate::core::decompress+0x1fde>
   270ea:	49 d3 ec             	shr    %cl,%r12
   270ed:	4d 39 da             	cmp    %r11,%r10
   270f0:	72 4b                	jb     2713d <miniz_oxide::inflate::core::decompress+0x195d>
   270f2:	e9 97 08 00 00       	jmpq   2798e <miniz_oxide::inflate::core::decompress+0x21ae>
   270f7:	b9 0a 00 00 00       	mov    $0xa,%ecx
   270fc:	0f 1f 40 00          	nopl   0x0(%rax)
   27100:	f7 d2                	not    %edx
   27102:	4c 89 e6             	mov    %r12,%rsi
   27105:	48 d3 ee             	shr    %cl,%rsi
   27108:	83 e6 01             	and    $0x1,%esi
   2710b:	01 d6                	add    %edx,%esi
   2710d:	48 63 fe             	movslq %esi,%rdi
   27110:	81 ff 3f 02 00 00    	cmp    $0x23f,%edi
   27116:	0f 87 5e 08 00 00    	ja     2797a <miniz_oxide::inflate::core::decompress+0x219a>
   2711c:	41 0f bf 94 79 3c 08 	movswl 0x83c(%r9,%rdi,2),%edx
   27123:	00 00 
   27125:	83 c1 01             	add    $0x1,%ecx
   27128:	85 d2                	test   %edx,%edx
   2712a:	78 d4                	js     27100 <miniz_oxide::inflate::core::decompress+0x1920>
   2712c:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
   27131:	49 d3 ec             	shr    %cl,%r12
   27134:	4d 39 da             	cmp    %r11,%r10
   27137:	0f 83 51 08 00 00    	jae    2798e <miniz_oxide::inflate::core::decompress+0x21ae>
   2713d:	29 cd                	sub    %ecx,%ebp
   2713f:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   27144:	42 88 04 11          	mov    %al,(%rcx,%r10,1)
   27148:	49 8d 7a 01          	lea    0x1(%r10),%rdi
   2714c:	f7 c2 00 01 00 00    	test   $0x100,%edx
   27152:	75 41                	jne    27195 <miniz_oxide::inflate::core::decompress+0x19b5>
   27154:	4c 39 df             	cmp    %r11,%rdi
   27157:	0f 83 3d 08 00 00    	jae    2799a <miniz_oxide::inflate::core::decompress+0x21ba>
   2715d:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   27162:	42 88 54 11 01       	mov    %dl,0x1(%rcx,%r10,1)
   27167:	49 83 c2 02          	add    $0x2,%r10
   2716b:	4c 89 d9             	mov    %r11,%rcx
   2716e:	4c 29 d1             	sub    %r10,%rcx
   27171:	48 81 f9 03 01 00 00 	cmp    $0x103,%rcx
   27178:	0f 82 72 03 00 00    	jb     274f0 <miniz_oxide::inflate::core::decompress+0x1d10>
   2717e:	4c 89 e9             	mov    %r13,%rcx
   27181:	4c 29 f1             	sub    %r14,%rcx
   27184:	89 c2                	mov    %eax,%edx
   27186:	48 83 f9 0e          	cmp    $0xe,%rcx
   2718a:	0f 83 b8 fe ff ff    	jae    27048 <miniz_oxide::inflate::core::decompress+0x1868>
   27190:	e9 5b 03 00 00       	jmpq   274f0 <miniz_oxide::inflate::core::decompress+0x1d10>
   27195:	49 89 fa             	mov    %rdi,%r10
   27198:	89 d0                	mov    %edx,%eax
   2719a:	89 c2                	mov    %eax,%edx
   2719c:	81 e2 ff 01 00 00    	and    $0x1ff,%edx
   271a2:	81 fa 00 01 00 00    	cmp    $0x100,%edx
   271a8:	0f 84 02 05 00 00    	je     276b0 <miniz_oxide::inflate::core::decompress+0x1ed0>
   271ae:	81 fa 1d 01 00 00    	cmp    $0x11d,%edx
   271b4:	0f 87 8b 07 00 00    	ja     27945 <miniz_oxide::inflate::core::decompress+0x2165>
   271ba:	83 fd 1d             	cmp    $0x1d,%ebp
   271bd:	77 22                	ja     271e1 <miniz_oxide::inflate::core::decompress+0x1a01>
   271bf:	4c 89 ee             	mov    %r13,%rsi
   271c2:	4c 29 f6             	sub    %r14,%rsi
   271c5:	48 83 fe 03          	cmp    $0x3,%rsi
   271c9:	0f 86 dd 07 00 00    	jbe    279ac <miniz_oxide::inflate::core::decompress+0x21cc>
   271cf:	41 8b 16             	mov    (%r14),%edx
   271d2:	89 e9                	mov    %ebp,%ecx
   271d4:	48 d3 e2             	shl    %cl,%rdx
   271d7:	49 83 c6 04          	add    $0x4,%r14
   271db:	49 09 d4             	or     %rdx,%r12
   271de:	83 c5 20             	add    $0x20,%ebp
   271e1:	83 c0 ff             	add    $0xffffffff,%eax
   271e4:	83 e0 1f             	and    $0x1f,%eax
   271e7:	48 8d 0d 9e 16 01 00 	lea    0x1169e(%rip),%rcx        # 3888c <str.6+0x156c>
   271ee:	0f b6 34 08          	movzbl (%rax,%rcx,1),%esi
   271f2:	48 8d 0d d3 16 01 00 	lea    0x116d3(%rip),%rcx        # 388cc <str.6+0x15ac>
   271f9:	0f b7 0c 41          	movzwl (%rcx,%rax,2),%ecx
   271fd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   27202:	40 84 f6             	test   %sil,%sil
   27205:	74 2d                	je     27234 <miniz_oxide::inflate::core::decompress+0x1a54>
   27207:	89 cf                	mov    %ecx,%edi
   27209:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
   27210:	89 f1                	mov    %esi,%ecx
   27212:	48 d3 e2             	shl    %cl,%rdx
   27215:	48 89 f1             	mov    %rsi,%rcx
   27218:	be ff ff ff ff       	mov    $0xffffffff,%esi
   2721d:	31 d6                	xor    %edx,%esi
   2721f:	44 21 e6             	and    %r12d,%esi
   27222:	49 d3 ec             	shr    %cl,%r12
   27225:	29 cd                	sub    %ecx,%ebp
   27227:	01 fe                	add    %edi,%esi
   27229:	89 f2                	mov    %esi,%edx
   2722b:	89 74 24 38          	mov    %esi,0x38(%rsp)
   2722f:	48 89 ce             	mov    %rcx,%rsi
   27232:	eb 04                	jmp    27238 <miniz_oxide::inflate::core::decompress+0x1a58>
   27234:	89 4c 24 38          	mov    %ecx,0x38(%rsp)
   27238:	44 89 e1             	mov    %r12d,%ecx
   2723b:	81 e1 ff 03 00 00    	and    $0x3ff,%ecx
   27241:	41 0f bf 94 49 dc 0d 	movswl 0xddc(%r9,%rcx,2),%edx
   27248:	00 00 
   2724a:	85 d2                	test   %edx,%edx
   2724c:	78 0c                	js     2725a <miniz_oxide::inflate::core::decompress+0x1a7a>
   2724e:	89 d1                	mov    %edx,%ecx
   27250:	c1 e9 09             	shr    $0x9,%ecx
   27253:	75 40                	jne    27295 <miniz_oxide::inflate::core::decompress+0x1ab5>
   27255:	e9 00 07 00 00       	jmpq   2795a <miniz_oxide::inflate::core::decompress+0x217a>
   2725a:	48 89 74 24 60       	mov    %rsi,0x60(%rsp)
   2725f:	b9 0a 00 00 00       	mov    $0xa,%ecx
   27264:	f7 d2                	not    %edx
   27266:	4c 89 e6             	mov    %r12,%rsi
   27269:	48 d3 ee             	shr    %cl,%rsi
   2726c:	83 e6 01             	and    $0x1,%esi
   2726f:	01 d6                	add    %edx,%esi
   27271:	48 63 fe             	movslq %esi,%rdi
   27274:	81 ff 3f 02 00 00    	cmp    $0x23f,%edi
   2727a:	0f 87 fa 06 00 00    	ja     2797a <miniz_oxide::inflate::core::decompress+0x219a>
   27280:	41 0f bf 94 79 dc 15 	movswl 0x15dc(%r9,%rdi,2),%edx
   27287:	00 00 
   27289:	83 c1 01             	add    $0x1,%ecx
   2728c:	85 d2                	test   %edx,%edx
   2728e:	78 d4                	js     27264 <miniz_oxide::inflate::core::decompress+0x1a84>
   27290:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
   27295:	49 d3 ec             	shr    %cl,%r12
   27298:	81 e2 ff 01 00 00    	and    $0x1ff,%edx
   2729e:	29 cd                	sub    %ecx,%ebp
   272a0:	83 fa 1d             	cmp    $0x1d,%edx
   272a3:	0f 87 a4 06 00 00    	ja     2794d <miniz_oxide::inflate::core::decompress+0x216d>
   272a9:	48 8d 0d fc 15 01 00 	lea    0x115fc(%rip),%rcx        # 388ac <str.6+0x158c>
   272b0:	0f b6 34 0a          	movzbl (%rdx,%rcx,1),%esi
   272b4:	48 8d 0d 51 16 01 00 	lea    0x11651(%rip),%rcx        # 3890c <str.6+0x15ec>
   272bb:	0f b7 0c 51          	movzwl (%rcx,%rdx,2),%ecx
   272bf:	89 4c 24 1c          	mov    %ecx,0x1c(%rsp)
   272c3:	85 f6                	test   %esi,%esi
   272c5:	74 4b                	je     27312 <miniz_oxide::inflate::core::decompress+0x1b32>
   272c7:	83 fd 1d             	cmp    $0x1d,%ebp
   272ca:	77 28                	ja     272f4 <miniz_oxide::inflate::core::decompress+0x1b14>
   272cc:	48 89 f7             	mov    %rsi,%rdi
   272cf:	4c 89 ee             	mov    %r13,%rsi
   272d2:	4c 29 f6             	sub    %r14,%rsi
   272d5:	48 83 fe 03          	cmp    $0x3,%rsi
   272d9:	0f 86 cd 06 00 00    	jbe    279ac <miniz_oxide::inflate::core::decompress+0x21cc>
   272df:	41 8b 16             	mov    (%r14),%edx
   272e2:	89 e9                	mov    %ebp,%ecx
   272e4:	48 d3 e2             	shl    %cl,%rdx
   272e7:	49 83 c6 04          	add    $0x4,%r14
   272eb:	49 09 d4             	or     %rdx,%r12
   272ee:	83 c5 20             	add    $0x20,%ebp
   272f1:	48 89 fe             	mov    %rdi,%rsi
   272f4:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
   272fb:	89 f1                	mov    %esi,%ecx
   272fd:	48 d3 e2             	shl    %cl,%rdx
   27300:	31 d0                	xor    %edx,%eax
   27302:	44 21 e0             	and    %r12d,%eax
   27305:	49 d3 ec             	shr    %cl,%r12
   27308:	29 f5                	sub    %esi,%ebp
   2730a:	03 44 24 1c          	add    0x1c(%rsp),%eax
   2730e:	89 c7                	mov    %eax,%edi
   27310:	eb 04                	jmp    27316 <miniz_oxide::inflate::core::decompress+0x1b36>
   27312:	8b 7c 24 1c          	mov    0x1c(%rsp),%edi
   27316:	89 f9                	mov    %edi,%ecx
   27318:	41 f6 c0 04          	test   $0x4,%r8b
   2731c:	8b 54 24 38          	mov    0x38(%rsp),%edx
   27320:	74 09                	je     2732b <miniz_oxide::inflate::core::decompress+0x1b4b>
   27322:	49 39 ca             	cmp    %rcx,%r10
   27325:	0f 82 27 06 00 00    	jb     27952 <miniz_oxide::inflate::core::decompress+0x2172>
   2732b:	89 7c 24 1c          	mov    %edi,0x1c(%rsp)
   2732f:	41 89 d0             	mov    %edx,%r8d
   27332:	4c 89 84 24 a0 00 00 	mov    %r8,0xa0(%rsp)
   27339:	00 
   2733a:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   2733f:	48 89 74 24 60       	mov    %rsi,0x60(%rsp)
   27344:	4c 89 de             	mov    %r11,%rsi
   27347:	4c 89 d2             	mov    %r10,%rdx
   2734a:	4c 8b 4c 24 68       	mov    0x68(%rsp),%r9
   2734f:	4c 89 54 24 48       	mov    %r10,0x48(%rsp)
   27354:	e8 87 e2 ff ff       	callq  255e0 <miniz_oxide::inflate::core::apply_match>
   27359:	8b 54 24 38          	mov    0x38(%rsp),%edx
   2735d:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
   27362:	4c 8b 54 24 48       	mov    0x48(%rsp),%r10
   27367:	44 8b 84 24 18 01 00 	mov    0x118(%rsp),%r8d
   2736e:	00 
   2736f:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   27374:	4c 8b 5c 24 40       	mov    0x40(%rsp),%r11
   27379:	4c 03 94 24 a0 00 00 	add    0xa0(%rsp),%r10
   27380:	00 
   27381:	4c 89 d8             	mov    %r11,%rax
   27384:	4c 29 d0             	sub    %r10,%rax
   27387:	48 3d 03 01 00 00    	cmp    $0x103,%rax
   2738d:	0f 83 9d fc ff ff    	jae    27030 <miniz_oxide::inflate::core::decompress+0x1850>
   27393:	e9 5a 01 00 00       	jmpq   274f2 <miniz_oxide::inflate::core::decompress+0x1d12>
   27398:	89 6c 24 10          	mov    %ebp,0x10(%rsp)
   2739c:	49 89 fa             	mov    %rdi,%r10
   2739f:	e9 96 e5 ff ff       	jmpq   2593a <miniz_oxide::inflate::core::decompress+0x15a>
   273a4:	83 f8 0b             	cmp    $0xb,%eax
   273a7:	72 45                	jb     273ee <miniz_oxide::inflate::core::decompress+0x1c0e>
   273a9:	bd 0c 00 00 00       	mov    $0xc,%ebp
   273ae:	f7 d6                	not    %esi
   273b0:	8d 4d fe             	lea    -0x2(%rbp),%ecx
   273b3:	48 89 d7             	mov    %rdx,%rdi
   273b6:	48 d3 ef             	shr    %cl,%rdi
   273b9:	83 e7 01             	and    $0x1,%edi
   273bc:	01 f7                	add    %esi,%edi
   273be:	48 63 ff             	movslq %edi,%rdi
   273c1:	81 ff 3f 02 00 00    	cmp    $0x23f,%edi
   273c7:	0f 87 ca 06 00 00    	ja     27a97 <miniz_oxide::inflate::core::decompress+0x22b7>
   273cd:	41 0f b7 8c 79 3c 08 	movzwl 0x83c(%r9,%rdi,2),%ecx
   273d4:	00 00 
   273d6:	39 e8                	cmp    %ebp,%eax
   273d8:	72 0b                	jb     273e5 <miniz_oxide::inflate::core::decompress+0x1c05>
   273da:	0f bf f1             	movswl %cx,%esi
   273dd:	83 c5 01             	add    $0x1,%ebp
   273e0:	66 85 f6             	test   %si,%si
   273e3:	78 c9                	js     273ae <miniz_oxide::inflate::core::decompress+0x1bce>
   273e5:	66 85 c9             	test   %cx,%cx
   273e8:	0f 89 41 02 00 00    	jns    2762f <miniz_oxide::inflate::core::decompress+0x1e4f>
   273ee:	41 b7 0c             	mov    $0xc,%r15b
   273f1:	4d 39 f5             	cmp    %r14,%r13
   273f4:	0f 84 86 03 00 00    	je     27780 <miniz_oxide::inflate::core::decompress+0x1fa0>
   273fa:	4d 8d 46 01          	lea    0x1(%r14),%r8
   273fe:	41 0f b6 2e          	movzbl (%r14),%ebp
   27402:	89 c1                	mov    %eax,%ecx
   27404:	48 d3 e5             	shl    %cl,%rbp
   27407:	48 09 d5             	or     %rdx,%rbp
   2740a:	48 89 2c 24          	mov    %rbp,(%rsp)
   2740e:	8d 50 08             	lea    0x8(%rax),%edx
   27411:	89 54 24 08          	mov    %edx,0x8(%rsp)
   27415:	83 fa 0f             	cmp    $0xf,%edx
   27418:	0f 83 01 02 00 00    	jae    2761f <miniz_oxide::inflate::core::decompress+0x1e3f>
   2741e:	89 e9                	mov    %ebp,%ecx
   27420:	81 e1 ff 03 00 00    	and    $0x3ff,%ecx
   27426:	41 0f bf 7c 49 3c    	movswl 0x3c(%r9,%rcx,2),%edi
   2742c:	85 ff                	test   %edi,%edi
   2742e:	0f 88 e8 00 00 00    	js     2751c <miniz_oxide::inflate::core::decompress+0x1d3c>
   27434:	c1 ef 09             	shr    $0x9,%edi
   27437:	0f 84 29 01 00 00    	je     27566 <miniz_oxide::inflate::core::decompress+0x1d86>
   2743d:	39 fa                	cmp    %edi,%edx
   2743f:	0f 83 da 01 00 00    	jae    2761f <miniz_oxide::inflate::core::decompress+0x1e3f>
   27445:	e9 1c 01 00 00       	jmpq   27566 <miniz_oxide::inflate::core::decompress+0x1d86>
   2744a:	41 b7 22             	mov    $0x22,%r15b
   2744d:	e9 e8 e4 ff ff       	jmpq   2593a <miniz_oxide::inflate::core::decompress+0x15a>
   27452:	41 b7 22             	mov    $0x22,%r15b
   27455:	e9 e0 e4 ff ff       	jmpq   2593a <miniz_oxide::inflate::core::decompress+0x15a>
   2745a:	41 0f b7 81 1d 29 00 	movzwl 0x291d(%r9),%eax
   27461:	00 
   27462:	41 0f b7 89 1f 29 00 	movzwl 0x291f(%r9),%ecx
   27469:	00 
   2746a:	f7 d1                	not    %ecx
   2746c:	89 44 24 10          	mov    %eax,0x10(%rsp)
   27470:	41 b7 1e             	mov    $0x1e,%r15b
   27473:	66 39 c8             	cmp    %cx,%ax
   27476:	0f 85 be e4 ff ff    	jne    2593a <miniz_oxide::inflate::core::decompress+0x15a>
   2747c:	41 b7 14             	mov    $0x14,%r15b
   2747f:	66 85 c0             	test   %ax,%ax
   27482:	0f 84 b2 e4 ff ff    	je     2593a <miniz_oxide::inflate::core::decompress+0x15a>
   27488:	83 7c 24 08 00       	cmpl   $0x0,0x8(%rsp)
   2748d:	b8 06 00 00 00       	mov    $0x6,%eax
   27492:	41 bf 11 00 00 00    	mov    $0x11,%r15d
   27498:	44 0f 44 f8          	cmove  %eax,%r15d
   2749c:	e9 99 e4 ff ff       	jmpq   2593a <miniz_oxide::inflate::core::decompress+0x15a>
   274a1:	ba 20 01 00 00       	mov    $0x120,%edx
   274a6:	48 8b bc 24 a8 00 00 	mov    0xa8(%rsp),%rdi
   274ad:	00 
   274ae:	31 f6                	xor    %esi,%esi
   274b0:	4c 89 d3             	mov    %r10,%rbx
   274b3:	ff 15 57 e7 01 00    	callq  *0x1e757(%rip)        # 45c10 <memset@GLIBC_2.2.5>
   274b9:	49 89 da             	mov    %rbx,%r10
   274bc:	44 8b 84 24 18 01 00 	mov    0x118(%rsp),%r8d
   274c3:	00 
   274c4:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   274c9:	4c 8b 5c 24 40       	mov    0x40(%rsp),%r11
   274ce:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%rsp)
   274d5:	00 
   274d6:	41 b7 09             	mov    $0x9,%r15b
   274d9:	e9 5c e4 ff ff       	jmpq   2593a <miniz_oxide::inflate::core::decompress+0x15a>
   274de:	41 b7 18             	mov    $0x18,%r15b
   274e1:	e9 54 e4 ff ff       	jmpq   2593a <miniz_oxide::inflate::core::decompress+0x15a>
   274e6:	66 41 bf 00 22       	mov    $0x2200,%r15w
   274eb:	e9 c6 f7 ff ff       	jmpq   26cb6 <miniz_oxide::inflate::core::decompress+0x14d6>
   274f0:	89 c2                	mov    %eax,%edx
   274f2:	4c 89 24 24          	mov    %r12,(%rsp)
   274f6:	89 6c 24 08          	mov    %ebp,0x8(%rsp)
   274fa:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
   274fe:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   27502:	89 54 24 10          	mov    %edx,0x10(%rsp)
   27506:	89 74 24 14          	mov    %esi,0x14(%rsp)
   2750a:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   2750f:	e9 26 e4 ff ff       	jmpq   2593a <miniz_oxide::inflate::core::decompress+0x15a>
   27514:	41 b7 1a             	mov    $0x1a,%r15b
   27517:	e9 1e e4 ff ff       	jmpq   2593a <miniz_oxide::inflate::core::decompress+0x15a>
   2751c:	83 fa 0b             	cmp    $0xb,%edx
   2751f:	72 45                	jb     27566 <miniz_oxide::inflate::core::decompress+0x1d86>
   27521:	bb 0c 00 00 00       	mov    $0xc,%ebx
   27526:	f7 d7                	not    %edi
   27528:	8d 4b fe             	lea    -0x2(%rbx),%ecx
   2752b:	48 89 ee             	mov    %rbp,%rsi
   2752e:	48 d3 ee             	shr    %cl,%rsi
   27531:	83 e6 01             	and    $0x1,%esi
   27534:	01 fe                	add    %edi,%esi
   27536:	48 63 fe             	movslq %esi,%rdi
   27539:	81 ff 3f 02 00 00    	cmp    $0x23f,%edi
   2753f:	0f 87 52 05 00 00    	ja     27a97 <miniz_oxide::inflate::core::decompress+0x22b7>
   27545:	41 0f b7 8c 79 3c 08 	movzwl 0x83c(%r9,%rdi,2),%ecx
   2754c:	00 00 
   2754e:	39 da                	cmp    %ebx,%edx
   27550:	72 0b                	jb     2755d <miniz_oxide::inflate::core::decompress+0x1d7d>
   27552:	0f bf f9             	movswl %cx,%edi
   27555:	83 c3 01             	add    $0x1,%ebx
   27558:	66 85 ff             	test   %di,%di
   2755b:	78 c9                	js     27526 <miniz_oxide::inflate::core::decompress+0x1d46>
   2755d:	66 85 c9             	test   %cx,%cx
   27560:	0f 89 b9 00 00 00    	jns    2761f <miniz_oxide::inflate::core::decompress+0x1e3f>
   27566:	4d 39 c5             	cmp    %r8,%r13
   27569:	0f 84 fb 03 00 00    	je     2796a <miniz_oxide::inflate::core::decompress+0x218a>
   2756f:	4d 8d 46 02          	lea    0x2(%r14),%r8
   27573:	41 0f b6 76 01       	movzbl 0x1(%r14),%esi
   27578:	89 d1                	mov    %edx,%ecx
   2757a:	48 d3 e6             	shl    %cl,%rsi
   2757d:	48 09 f5             	or     %rsi,%rbp
   27580:	48 89 2c 24          	mov    %rbp,(%rsp)
   27584:	8d 50 10             	lea    0x10(%rax),%edx
   27587:	89 54 24 08          	mov    %edx,0x8(%rsp)
   2758b:	83 fa 0e             	cmp    $0xe,%edx
   2758e:	0f 87 8b 00 00 00    	ja     2761f <miniz_oxide::inflate::core::decompress+0x1e3f>
   27594:	89 e9                	mov    %ebp,%ecx
   27596:	81 e1 ff 03 00 00    	and    $0x3ff,%ecx
   2759c:	41 0f bf 7c 49 3c    	movswl 0x3c(%r9,%rcx,2),%edi
   275a2:	85 ff                	test   %edi,%edi
   275a4:	78 0b                	js     275b1 <miniz_oxide::inflate::core::decompress+0x1dd1>
   275a6:	c1 ef 09             	shr    $0x9,%edi
   275a9:	74 4c                	je     275f7 <miniz_oxide::inflate::core::decompress+0x1e17>
   275ab:	39 fa                	cmp    %edi,%edx
   275ad:	73 70                	jae    2761f <miniz_oxide::inflate::core::decompress+0x1e3f>
   275af:	eb 46                	jmp    275f7 <miniz_oxide::inflate::core::decompress+0x1e17>
   275b1:	83 fa 0b             	cmp    $0xb,%edx
   275b4:	72 41                	jb     275f7 <miniz_oxide::inflate::core::decompress+0x1e17>
   275b6:	bb 0c 00 00 00       	mov    $0xc,%ebx
   275bb:	f7 d7                	not    %edi
   275bd:	8d 4b fe             	lea    -0x2(%rbx),%ecx
   275c0:	48 89 ee             	mov    %rbp,%rsi
   275c3:	48 d3 ee             	shr    %cl,%rsi
   275c6:	83 e6 01             	and    $0x1,%esi
   275c9:	01 fe                	add    %edi,%esi
   275cb:	48 63 fe             	movslq %esi,%rdi
   275ce:	81 ff 3f 02 00 00    	cmp    $0x23f,%edi
   275d4:	0f 87 bd 04 00 00    	ja     27a97 <miniz_oxide::inflate::core::decompress+0x22b7>
   275da:	41 0f b7 8c 79 3c 08 	movzwl 0x83c(%r9,%rdi,2),%ecx
   275e1:	00 00 
   275e3:	39 da                	cmp    %ebx,%edx
   275e5:	72 0b                	jb     275f2 <miniz_oxide::inflate::core::decompress+0x1e12>
   275e7:	0f bf f9             	movswl %cx,%edi
   275ea:	83 c3 01             	add    $0x1,%ebx
   275ed:	66 85 ff             	test   %di,%di
   275f0:	78 c9                	js     275bb <miniz_oxide::inflate::core::decompress+0x1ddb>
   275f2:	66 85 c9             	test   %cx,%cx
   275f5:	79 28                	jns    2761f <miniz_oxide::inflate::core::decompress+0x1e3f>
   275f7:	4d 39 c5             	cmp    %r8,%r13
   275fa:	0f 84 6a 03 00 00    	je     2796a <miniz_oxide::inflate::core::decompress+0x218a>
   27600:	41 0f b6 76 02       	movzbl 0x2(%r14),%esi
   27605:	49 83 c6 03          	add    $0x3,%r14
   27609:	89 d1                	mov    %edx,%ecx
   2760b:	48 d3 e6             	shl    %cl,%rsi
   2760e:	48 09 f5             	or     %rsi,%rbp
   27611:	48 89 2c 24          	mov    %rbp,(%rsp)
   27615:	8d 50 18             	lea    0x18(%rax),%edx
   27618:	89 54 24 08          	mov    %edx,0x8(%rsp)
   2761c:	4d 89 f0             	mov    %r14,%r8
   2761f:	4d 89 c6             	mov    %r8,%r14
   27622:	89 d0                	mov    %edx,%eax
   27624:	48 89 ea             	mov    %rbp,%rdx
   27627:	44 8b 84 24 18 01 00 	mov    0x118(%rsp),%r8d
   2762e:	00 
   2762f:	89 d1                	mov    %edx,%ecx
   27631:	81 e1 ff 03 00 00    	and    $0x3ff,%ecx
   27637:	41 0f bf 74 49 3c    	movswl 0x3c(%r9,%rcx,2),%esi
   2763d:	85 f6                	test   %esi,%esi
   2763f:	78 0d                	js     2764e <miniz_oxide::inflate::core::decompress+0x1e6e>
   27641:	89 f1                	mov    %esi,%ecx
   27643:	c1 e9 09             	shr    $0x9,%ecx
   27646:	81 e6 ff 01 00 00    	and    $0x1ff,%esi
   2764c:	eb 3e                	jmp    2768c <miniz_oxide::inflate::core::decompress+0x1eac>
   2764e:	b9 0a 00 00 00       	mov    $0xa,%ecx
   27653:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2765a:	00 00 00 
   2765d:	0f 1f 00             	nopl   (%rax)
   27660:	f7 d6                	not    %esi
   27662:	48 89 d7             	mov    %rdx,%rdi
   27665:	48 d3 ef             	shr    %cl,%rdi
   27668:	83 e7 01             	and    $0x1,%edi
   2766b:	01 f7                	add    %esi,%edi
   2766d:	48 63 ff             	movslq %edi,%rdi
   27670:	81 ff 3f 02 00 00    	cmp    $0x23f,%edi
   27676:	0f 87 fe 02 00 00    	ja     2797a <miniz_oxide::inflate::core::decompress+0x219a>
   2767c:	41 0f bf b4 79 3c 08 	movswl 0x83c(%r9,%rdi,2),%esi
   27683:	00 00 
   27685:	83 c1 01             	add    $0x1,%ecx
   27688:	85 f6                	test   %esi,%esi
   2768a:	78 d4                	js     27660 <miniz_oxide::inflate::core::decompress+0x1e80>
   2768c:	41 b7 22             	mov    $0x22,%r15b
   2768f:	85 c9                	test   %ecx,%ecx
   27691:	0f 84 a3 e2 ff ff    	je     2593a <miniz_oxide::inflate::core::decompress+0x15a>
   27697:	48 d3 ea             	shr    %cl,%rdx
   2769a:	48 89 14 24          	mov    %rdx,(%rsp)
   2769e:	29 c8                	sub    %ecx,%eax
   276a0:	89 44 24 08          	mov    %eax,0x8(%rsp)
   276a4:	89 74 24 10          	mov    %esi,0x10(%rsp)
   276a8:	41 b7 0d             	mov    $0xd,%r15b
   276ab:	e9 8a e2 ff ff       	jmpq   2593a <miniz_oxide::inflate::core::decompress+0x15a>
   276b0:	41 b7 14             	mov    $0x14,%r15b
   276b3:	ba 00 01 00 00       	mov    $0x100,%edx
   276b8:	e9 35 fe ff ff       	jmpq   274f2 <miniz_oxide::inflate::core::decompress+0x1d12>
   276bd:	41 c6 44 24 08 fd    	movb   $0xfd,0x8(%r12)
   276c3:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
   276ca:	00 
   276cb:	49 c7 44 24 10 00 00 	movq   $0x0,0x10(%r12)
   276d2:	00 00 
   276d4:	e9 52 02 00 00       	jmpq   2792b <miniz_oxide::inflate::core::decompress+0x214b>
   276d9:	49 f7 dd             	neg    %r13
   276dc:	41 b7 13             	mov    $0x13,%r15b
   276df:	b2 02                	mov    $0x2,%dl
   276e1:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   276e6:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   276eb:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   276f0:	44 8b 84 24 18 01 00 	mov    0x118(%rsp),%r8d
   276f7:	00 
   276f8:	e9 2f 01 00 00       	jmpq   2782c <miniz_oxide::inflate::core::decompress+0x204c>
   276fd:	41 c1 ef 08          	shr    $0x8,%r15d
   27701:	44 89 fa             	mov    %r15d,%edx
   27704:	41 b7 09             	mov    $0x9,%r15b
   27707:	e9 01 01 00 00       	jmpq   2780d <miniz_oxide::inflate::core::decompress+0x202d>
   2770c:	41 c1 ef 08          	shr    $0x8,%r15d
   27710:	44 89 fa             	mov    %r15d,%edx
   27713:	41 b7 03             	mov    $0x3,%r15b
   27716:	e9 f2 00 00 00       	jmpq   2780d <miniz_oxide::inflate::core::decompress+0x202d>
   2771b:	41 c1 ef 08          	shr    $0x8,%r15d
   2771f:	44 89 fa             	mov    %r15d,%edx
   27722:	41 b7 0a             	mov    $0xa,%r15b
   27725:	e9 e3 00 00 00       	jmpq   2780d <miniz_oxide::inflate::core::decompress+0x202d>
   2772a:	41 c1 ef 08          	shr    $0x8,%r15d
   2772e:	44 89 fa             	mov    %r15d,%edx
   27731:	41 b7 0f             	mov    $0xf,%r15b
   27734:	e9 d4 00 00 00       	jmpq   2780d <miniz_oxide::inflate::core::decompress+0x202d>
   27739:	41 c1 ef 08          	shr    $0x8,%r15d
   2773d:	44 89 fa             	mov    %r15d,%edx
   27740:	41 b7 05             	mov    $0x5,%r15b
   27743:	e9 c5 00 00 00       	jmpq   2780d <miniz_oxide::inflate::core::decompress+0x202d>
   27748:	41 c1 ef 08          	shr    $0x8,%r15d
   2774c:	44 89 fa             	mov    %r15d,%edx
   2774f:	41 b7 08             	mov    $0x8,%r15b
   27752:	e9 b6 00 00 00       	jmpq   2780d <miniz_oxide::inflate::core::decompress+0x202d>
   27757:	41 c1 ef 08          	shr    $0x8,%r15d
   2775b:	44 89 fa             	mov    %r15d,%edx
   2775e:	41 b7 17             	mov    $0x17,%r15b
   27761:	e9 a7 00 00 00       	jmpq   2780d <miniz_oxide::inflate::core::decompress+0x202d>
   27766:	49 f7 dd             	neg    %r13
   27769:	41 b7 18             	mov    $0x18,%r15b
   2776c:	31 d2                	xor    %edx,%edx
   2776e:	e9 b4 00 00 00       	jmpq   27827 <miniz_oxide::inflate::core::decompress+0x2047>
   27773:	41 b7 12             	mov    $0x12,%r15b
   27776:	eb 72                	jmp    277ea <miniz_oxide::inflate::core::decompress+0x200a>
   27778:	41 b7 01             	mov    $0x1,%r15b
   2777b:	eb 03                	jmp    27780 <miniz_oxide::inflate::core::decompress+0x1fa0>
   2777d:	41 b7 07             	mov    $0x7,%r15b
   27780:	8b 54 24 3c          	mov    0x3c(%rsp),%edx
   27784:	e9 84 00 00 00       	jmpq   2780d <miniz_oxide::inflate::core::decompress+0x202d>
   27789:	c1 e8 08             	shr    $0x8,%eax
   2778c:	41 b7 11             	mov    $0x11,%r15b
   2778f:	89 c2                	mov    %eax,%edx
   27791:	eb 7a                	jmp    2780d <miniz_oxide::inflate::core::decompress+0x202d>
   27793:	c1 e9 08             	shr    $0x8,%ecx
   27796:	41 b7 0e             	mov    $0xe,%r15b
   27799:	89 ca                	mov    %ecx,%edx
   2779b:	eb 70                	jmp    2780d <miniz_oxide::inflate::core::decompress+0x202d>
   2779d:	c1 e9 08             	shr    $0x8,%ecx
   277a0:	41 b7 10             	mov    $0x10,%r15b
   277a3:	89 ca                	mov    %ecx,%edx
   277a5:	eb 66                	jmp    2780d <miniz_oxide::inflate::core::decompress+0x202d>
   277a7:	c1 ea 08             	shr    $0x8,%edx
   277aa:	41 b7 04             	mov    $0x4,%r15b
   277ad:	eb 5e                	jmp    2780d <miniz_oxide::inflate::core::decompress+0x202d>
   277af:	c1 e9 08             	shr    $0x8,%ecx
   277b2:	41 b7 0b             	mov    $0xb,%r15b
   277b5:	89 ca                	mov    %ecx,%edx
   277b7:	eb 54                	jmp    2780d <miniz_oxide::inflate::core::decompress+0x202d>
   277b9:	41 b7 22             	mov    $0x22,%r15b
   277bc:	eb 05                	jmp    277c3 <miniz_oxide::inflate::core::decompress+0x1fe3>
   277be:	41 b7 22             	mov    $0x22,%r15b
   277c1:	89 c2                	mov    %eax,%edx
   277c3:	8b 7c 24 1c          	mov    0x1c(%rsp),%edi
   277c7:	4c 89 24 24          	mov    %r12,(%rsp)
   277cb:	89 6c 24 08          	mov    %ebp,0x8(%rsp)
   277cf:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
   277d3:	89 54 24 10          	mov    %edx,0x10(%rsp)
   277d7:	89 74 24 14          	mov    %esi,0x14(%rsp)
   277db:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   277e0:	eb 0d                	jmp    277ef <miniz_oxide::inflate::core::decompress+0x200f>
   277e2:	41 b7 06             	mov    $0x6,%r15b
   277e5:	eb 03                	jmp    277ea <miniz_oxide::inflate::core::decompress+0x200a>
   277e7:	41 b7 0d             	mov    $0xd,%r15b
   277ea:	b3 02                	mov    $0x2,%bl
   277ec:	4d 89 da             	mov    %r11,%r10
   277ef:	49 f7 dd             	neg    %r13
   277f2:	89 da                	mov    %ebx,%edx
   277f4:	eb 31                	jmp    27827 <miniz_oxide::inflate::core::decompress+0x2047>
   277f6:	41 89 df             	mov    %ebx,%r15d
   277f9:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   277fe:	4c 8b 54 24 48       	mov    0x48(%rsp),%r10
   27803:	41 c1 ef 08          	shr    $0x8,%r15d
   27807:	44 89 fa             	mov    %r15d,%edx
   2780a:	41 b7 02             	mov    $0x2,%r15b
   2780d:	49 f7 dd             	neg    %r13
   27810:	80 fa fc             	cmp    $0xfc,%dl
   27813:	74 0e                	je     27823 <miniz_oxide::inflate::core::decompress+0x2043>
   27815:	80 fa 01             	cmp    $0x1,%dl
   27818:	75 0d                	jne    27827 <miniz_oxide::inflate::core::decompress+0x2047>
   2781a:	4d 39 da             	cmp    %r11,%r10
   2781d:	0f 94 c2             	sete   %dl
   27820:	80 c2 01             	add    $0x1,%dl
   27823:	31 db                	xor    %ebx,%ebx
   27825:	eb 26                	jmp    2784d <miniz_oxide::inflate::core::decompress+0x206d>
   27827:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   2782c:	44 01 e8             	add    %r13d,%eax
   2782f:	44 01 f0             	add    %r14d,%eax
   27832:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
   27836:	89 cb                	mov    %ecx,%ebx
   27838:	c1 eb 03             	shr    $0x3,%ebx
   2783b:	39 c3                	cmp    %eax,%ebx
   2783d:	0f 47 d8             	cmova  %eax,%ebx
   27840:	8d 04 dd 00 00 00 00 	lea    0x0(,%rbx,8),%eax
   27847:	29 c1                	sub    %eax,%ecx
   27849:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   2784d:	45 88 b9 1c 29 00 00 	mov    %r15b,0x291c(%r9)
   27854:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
   27858:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   2785f:	48 d3 e0             	shl    %cl,%rax
   27862:	48 f7 d0             	not    %rax
   27865:	48 23 04 24          	and    (%rsp),%rax
   27869:	41 89 49 08          	mov    %ecx,0x8(%r9)
   2786d:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
   27871:	41 89 49 24          	mov    %ecx,0x24(%r9)
   27875:	8b 4c 24 10          	mov    0x10(%rsp),%ecx
   27879:	41 89 49 28          	mov    %ecx,0x28(%r9)
   2787d:	8b 4c 24 14          	mov    0x14(%rsp),%ecx
   27881:	41 89 49 2c          	mov    %ecx,0x2c(%r9)
   27885:	49 89 01             	mov    %rax,(%r9)
   27888:	41 f6 c0 09          	test   $0x9,%r8b
   2788c:	74 79                	je     27907 <miniz_oxide::inflate::core::decompress+0x2127>
   2788e:	84 d2                	test   %dl,%dl
   27890:	78 75                	js     27907 <miniz_oxide::inflate::core::decompress+0x2127>
   27892:	4c 89 d5             	mov    %r10,%rbp
   27895:	48 2b ac 24 10 01 00 	sub    0x110(%rsp),%rbp
   2789c:	00 
   2789d:	0f 82 74 02 00 00    	jb     27b17 <miniz_oxide::inflate::core::decompress+0x2337>
   278a3:	4d 39 da             	cmp    %r11,%r10
   278a6:	0f 87 85 02 00 00    	ja     27b31 <miniz_oxide::inflate::core::decompress+0x2351>
   278ac:	41 89 d7             	mov    %edx,%r15d
   278af:	41 8b 41 20          	mov    0x20(%r9),%eax
   278b3:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   278b8:	48 03 b4 24 10 01 00 	add    0x110(%rsp),%rsi
   278bf:	00 
   278c0:	66 89 44 24 70       	mov    %ax,0x70(%rsp)
   278c5:	c1 e8 10             	shr    $0x10,%eax
   278c8:	66 89 44 24 72       	mov    %ax,0x72(%rsp)
   278cd:	48 8d 7c 24 70       	lea    0x70(%rsp),%rdi
   278d2:	48 89 ea             	mov    %rbp,%rdx
   278d5:	ff 15 1d e6 01 00    	callq  *0x1e61d(%rip)        # 45ef8 <_GLOBAL_OFFSET_TABLE_+0x568>
   278db:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   278e0:	8b 44 24 70          	mov    0x70(%rsp),%eax
   278e4:	89 41 20             	mov    %eax,0x20(%rcx)
   278e7:	8b 94 24 18 01 00 00 	mov    0x118(%rsp),%edx
   278ee:	f6 c2 01             	test   $0x1,%dl
   278f1:	74 4d                	je     27940 <miniz_oxide::inflate::core::decompress+0x2160>
   278f3:	44 89 fa             	mov    %r15d,%edx
   278f6:	84 d2                	test   %dl,%dl
   278f8:	75 18                	jne    27912 <miniz_oxide::inflate::core::decompress+0x2132>
   278fa:	3b 41 14             	cmp    0x14(%rcx),%eax
   278fd:	0f 94 c2             	sete   %dl
   27900:	00 d2                	add    %dl,%dl
   27902:	80 c2 fe             	add    $0xfe,%dl
   27905:	eb 0b                	jmp    27912 <miniz_oxide::inflate::core::decompress+0x2132>
   27907:	4c 2b 94 24 10 01 00 	sub    0x110(%rsp),%r10
   2790e:	00 
   2790f:	4c 89 d5             	mov    %r10,%rbp
   27912:	4c 03 6c 24 58       	add    0x58(%rsp),%r13
   27917:	49 29 dd             	sub    %rbx,%r13
   2791a:	4d 01 f5             	add    %r14,%r13
   2791d:	41 88 54 24 08       	mov    %dl,0x8(%r12)
   27922:	4d 89 2c 24          	mov    %r13,(%r12)
   27926:	49 89 6c 24 10       	mov    %rbp,0x10(%r12)
   2792b:	4c 89 e0             	mov    %r12,%rax
   2792e:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
   27935:	5b                   	pop    %rbx
   27936:	41 5c                	pop    %r12
   27938:	41 5d                	pop    %r13
   2793a:	41 5e                	pop    %r14
   2793c:	41 5f                	pop    %r15
   2793e:	5d                   	pop    %rbp
   2793f:	c3                   	retq   
   27940:	44 89 fa             	mov    %r15d,%edx
   27943:	eb cd                	jmp    27912 <miniz_oxide::inflate::core::decompress+0x2132>
   27945:	41 b7 20             	mov    $0x20,%r15b
   27948:	e9 76 fe ff ff       	jmpq   277c3 <miniz_oxide::inflate::core::decompress+0x1fe3>
   2794d:	41 b7 21             	mov    $0x21,%r15b
   27950:	eb 0b                	jmp    2795d <miniz_oxide::inflate::core::decompress+0x217d>
   27952:	41 b7 1d             	mov    $0x1d,%r15b
   27955:	e9 6d fe ff ff       	jmpq   277c7 <miniz_oxide::inflate::core::decompress+0x1fe7>
   2795a:	41 b7 22             	mov    $0x22,%r15b
   2795d:	8b 7c 24 1c          	mov    0x1c(%rsp),%edi
   27961:	8b 54 24 38          	mov    0x38(%rsp),%edx
   27965:	e9 5d fe ff ff       	jmpq   277c7 <miniz_oxide::inflate::core::decompress+0x1fe7>
   2796a:	4d 89 c6             	mov    %r8,%r14
   2796d:	44 8b 84 24 18 01 00 	mov    0x118(%rsp),%r8d
   27974:	00 
   27975:	e9 06 fe ff ff       	jmpq   27780 <miniz_oxide::inflate::core::decompress+0x1fa0>
   2797a:	48 8d 15 27 ce 01 00 	lea    0x1ce27(%rip),%rdx        # 447a8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1250>
   27981:	be 40 02 00 00       	mov    $0x240,%esi
   27986:	ff 15 0c e3 01 00    	callq  *0x1e30c(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   2798c:	0f 0b                	ud2    
   2798e:	48 8d 15 f3 d2 01 00 	lea    0x1d2f3(%rip),%rdx        # 44c88 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1730>
   27995:	4c 89 d7             	mov    %r10,%rdi
   27998:	eb 07                	jmp    279a1 <miniz_oxide::inflate::core::decompress+0x21c1>
   2799a:	48 8d 15 e7 d2 01 00 	lea    0x1d2e7(%rip),%rdx        # 44c88 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1730>
   279a1:	4c 89 de             	mov    %r11,%rsi
   279a4:	ff 15 ee e2 01 00    	callq  *0x1e2ee(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   279aa:	0f 0b                	ud2    
   279ac:	48 8d 15 0d ce 01 00 	lea    0x1ce0d(%rip),%rdx        # 447c0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1268>
   279b3:	bf 04 00 00 00       	mov    $0x4,%edi
   279b8:	ff 15 72 e0 01 00    	callq  *0x1e072(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   279be:	0f 0b                	ud2    
   279c0:	48 8d 15 b9 d1 01 00 	lea    0x1d1b9(%rip),%rdx        # 44b80 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1628>
   279c7:	be 20 01 00 00       	mov    $0x120,%esi
   279cc:	4c 89 ff             	mov    %r15,%rdi
   279cf:	ff 15 5b e0 01 00    	callq  *0x1e05b(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   279d5:	0f 0b                	ud2    
   279d7:	48 8d 15 ba d1 01 00 	lea    0x1d1ba(%rip),%rdx        # 44b98 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1640>
   279de:	be 20 01 00 00       	mov    $0x120,%esi
   279e3:	48 89 ef             	mov    %rbp,%rdi
   279e6:	ff 15 44 e0 01 00    	callq  *0x1e044(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   279ec:	0f 0b                	ud2    
   279ee:	48 8d 15 bb d1 01 00 	lea    0x1d1bb(%rip),%rdx        # 44bb0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1658>
   279f5:	48 89 fe             	mov    %rdi,%rsi
   279f8:	4c 89 ff             	mov    %r15,%rdi
   279fb:	ff 15 a7 e4 01 00    	callq  *0x1e4a7(%rip)        # 45ea8 <_GLOBAL_OFFSET_TABLE_+0x518>
   27a01:	0f 0b                	ud2    
   27a03:	48 8d 15 a6 d1 01 00 	lea    0x1d1a6(%rip),%rdx        # 44bb0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1658>
   27a0a:	be c9 01 00 00       	mov    $0x1c9,%esi
   27a0f:	ff 15 1b e0 01 00    	callq  *0x1e01b(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   27a15:	0f 0b                	ud2    
   27a17:	48 8d 15 72 cd 01 00 	lea    0x1cd72(%rip),%rdx        # 44790 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1238>
   27a1e:	48 89 fe             	mov    %rdi,%rsi
   27a21:	48 89 ef             	mov    %rbp,%rdi
   27a24:	ff 15 ae e5 01 00    	callq  *0x1e5ae(%rip)        # 45fd8 <_GLOBAL_OFFSET_TABLE_+0x648>
   27a2a:	0f 0b                	ud2    
   27a2c:	48 8d 15 dd d1 01 00 	lea    0x1d1dd(%rip),%rdx        # 44c10 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x16b8>
   27a33:	eb 29                	jmp    27a5e <miniz_oxide::inflate::core::decompress+0x227e>
   27a35:	48 8d 15 ec d1 01 00 	lea    0x1d1ec(%rip),%rdx        # 44c28 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x16d0>
   27a3c:	eb 0c                	jmp    27a4a <miniz_oxide::inflate::core::decompress+0x226a>
   27a3e:	48 8d 15 fb d1 01 00 	lea    0x1d1fb(%rip),%rdx        # 44c40 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x16e8>
   27a45:	bf 03 00 00 00       	mov    $0x3,%edi
   27a4a:	be 03 00 00 00       	mov    $0x3,%esi
   27a4f:	ff 15 43 e2 01 00    	callq  *0x1e243(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   27a55:	0f 0b                	ud2    
   27a57:	48 8d 15 fa d1 01 00 	lea    0x1d1fa(%rip),%rdx        # 44c58 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1700>
   27a5e:	be c9 01 00 00       	mov    $0x1c9,%esi
   27a63:	ff 15 2f e2 01 00    	callq  *0x1e22f(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   27a69:	0f 0b                	ud2    
   27a6b:	48 8d 15 fe d1 01 00 	lea    0x1d1fe(%rip),%rdx        # 44c70 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1718>
   27a72:	4c 89 ff             	mov    %r15,%rdi
   27a75:	48 89 c6             	mov    %rax,%rsi
   27a78:	ff 15 2a e4 01 00    	callq  *0x1e42a(%rip)        # 45ea8 <_GLOBAL_OFFSET_TABLE_+0x518>
   27a7e:	0f 0b                	ud2    
   27a80:	48 8d 15 e9 d1 01 00 	lea    0x1d1e9(%rip),%rdx        # 44c70 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1718>
   27a87:	be c9 01 00 00       	mov    $0x1c9,%esi
   27a8c:	48 89 c7             	mov    %rax,%rdi
   27a8f:	ff 15 9b df 01 00    	callq  *0x1df9b(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   27a95:	0f 0b                	ud2    
   27a97:	48 8d 15 3a cd 01 00 	lea    0x1cd3a(%rip),%rdx        # 447d8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1280>
   27a9e:	be 40 02 00 00       	mov    $0x240,%esi
   27aa3:	ff 15 ef e1 01 00    	callq  *0x1e1ef(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   27aa9:	0f 0b                	ud2    
   27aab:	48 8d 15 46 d1 01 00 	lea    0x1d146(%rip),%rdx        # 44bf8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x16a0>
   27ab2:	be 13 00 00 00       	mov    $0x13,%esi
   27ab7:	ff 15 db e1 01 00    	callq  *0x1e1db(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   27abd:	0f 0b                	ud2    
   27abf:	48 8d 15 02 d1 01 00 	lea    0x1d102(%rip),%rdx        # 44bc8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1670>
   27ac6:	48 89 df             	mov    %rbx,%rdi
   27ac9:	48 89 ee             	mov    %rbp,%rsi
   27acc:	ff 15 5e df 01 00    	callq  *0x1df5e(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   27ad2:	0f 0b                	ud2    
   27ad4:	48 8d 15 c5 d1 01 00 	lea    0x1d1c5(%rip),%rdx        # 44ca0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1748>
   27adb:	4c 89 d7             	mov    %r10,%rdi
   27ade:	4c 89 e6             	mov    %r12,%rsi
   27ae1:	ff 15 c1 e3 01 00    	callq  *0x1e3c1(%rip)        # 45ea8 <_GLOBAL_OFFSET_TABLE_+0x518>
   27ae7:	0f 0b                	ud2    
   27ae9:	48 8d 15 b0 d1 01 00 	lea    0x1d1b0(%rip),%rdx        # 44ca0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1748>
   27af0:	4c 89 e7             	mov    %r12,%rdi
   27af3:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
   27af8:	ff 15 32 df 01 00    	callq  *0x1df32(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   27afe:	0f 0b                	ud2    
   27b00:	48 8d 15 61 d0 01 00 	lea    0x1d061(%rip),%rdx        # 44b68 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1610>
   27b07:	4c 89 f7             	mov    %r14,%rdi
   27b0a:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
   27b0f:	ff 15 e3 e2 01 00    	callq  *0x1e2e3(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x468>
   27b15:	0f 0b                	ud2    
   27b17:	48 8d 15 c2 d0 01 00 	lea    0x1d0c2(%rip),%rdx        # 44be0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1688>
   27b1e:	48 8b bc 24 10 01 00 	mov    0x110(%rsp),%rdi
   27b25:	00 
   27b26:	4c 89 d6             	mov    %r10,%rsi
   27b29:	ff 15 79 e3 01 00    	callq  *0x1e379(%rip)        # 45ea8 <_GLOBAL_OFFSET_TABLE_+0x518>
   27b2f:	0f 0b                	ud2    
   27b31:	48 8d 15 a8 d0 01 00 	lea    0x1d0a8(%rip),%rdx        # 44be0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1688>
   27b38:	4c 89 d7             	mov    %r10,%rdi
   27b3b:	4c 89 de             	mov    %r11,%rsi
   27b3e:	ff 15 ec de 01 00    	callq  *0x1deec(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   27b44:	0f 0b                	ud2    
   27b46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   27b4d:	00 00 00 

0000000000027b50 <adler::Adler32::write_slice>:
   27b50:	55                   	push   %rbp
   27b51:	41 57                	push   %r15
   27b53:	41 56                	push   %r14
   27b55:	41 55                	push   %r13
   27b57:	41 54                	push   %r12
   27b59:	53                   	push   %rbx
   27b5a:	48 83 ec 48          	sub    $0x48,%rsp
   27b5e:	48 89 d5             	mov    %rdx,%rbp
   27b61:	44 0f b7 0f          	movzwl (%rdi),%r9d
   27b65:	44 0f b7 47 02       	movzwl 0x2(%rdi),%r8d
   27b6a:	89 eb                	mov    %ebp,%ebx
   27b6c:	83 e3 03             	and    $0x3,%ebx
   27b6f:	48 83 e5 fc          	and    $0xfffffffffffffffc,%rbp
   27b73:	48 89 e8             	mov    %rbp,%rax
   27b76:	48 c1 e8 06          	shr    $0x6,%rax
   27b7a:	48 b9 b7 98 63 bb a6 	movabs $0x179baa6bb6398b7,%rcx
   27b81:	ba 79 01 
   27b84:	48 f7 e1             	mul    %rcx
   27b87:	48 d1 ea             	shr    %rdx
   27b8a:	4c 69 d2 c0 56 00 00 	imul   $0x56c0,%rdx,%r10
   27b91:	48 89 e8             	mov    %rbp,%rax
   27b94:	4c 29 d0             	sub    %r10,%rax
   27b97:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   27b9c:	31 c9                	xor    %ecx,%ecx
   27b9e:	49 81 fa c0 56 00 00 	cmp    $0x56c0,%r10
   27ba5:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
   27baa:	48 89 6c 24 30       	mov    %rbp,0x30(%rsp)
   27baf:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
   27bb4:	48 89 5c 24 38       	mov    %rbx,0x38(%rsp)
   27bb9:	4c 89 04 24          	mov    %r8,(%rsp)
   27bbd:	44 89 4c 24 08       	mov    %r9d,0x8(%rsp)
   27bc2:	4c 89 54 24 28       	mov    %r10,0x28(%rsp)
   27bc7:	73 16                	jae    27bdf <adler::Adler32::write_slice+0x8f>
   27bc9:	31 db                	xor    %ebx,%ebx
   27bcb:	31 ed                	xor    %ebp,%ebp
   27bcd:	31 d2                	xor    %edx,%edx
   27bcf:	31 c0                	xor    %eax,%eax
   27bd1:	45 31 e4             	xor    %r12d,%r12d
   27bd4:	45 31 ff             	xor    %r15d,%r15d
   27bd7:	45 31 f6             	xor    %r14d,%r14d
   27bda:	e9 91 01 00 00       	jmpq   27d70 <adler::Adler32::write_slice+0x220>
   27bdf:	41 69 c1 c0 56 00 00 	imul   $0x56c0,%r9d,%eax
   27be6:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   27bea:	31 d2                	xor    %edx,%edx
   27bec:	31 ed                	xor    %ebp,%ebp
   27bee:	31 db                	xor    %ebx,%ebx
   27bf0:	31 c9                	xor    %ecx,%ecx
   27bf2:	45 31 f6             	xor    %r14d,%r14d
   27bf5:	45 31 ff             	xor    %r15d,%r15d
   27bf8:	45 31 e4             	xor    %r12d,%r12d
   27bfb:	31 c0                	xor    %eax,%eax
   27bfd:	49 89 f1             	mov    %rsi,%r9
   27c00:	49 8d b1 c0 56 00 00 	lea    0x56c0(%r9),%rsi
   27c07:	48 89 74 24 40       	mov    %rsi,0x40(%rsp)
   27c0c:	48 c7 c6 40 a9 ff ff 	mov    $0xffffffffffffa940,%rsi
   27c13:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   27c1a:	00 00 00 
   27c1d:	0f 1f 00             	nopl   (%rax)
   27c20:	45 0f b6 ac 31 c0 56 	movzbl 0x56c0(%r9,%rsi,1),%r13d
   27c27:	00 00 
   27c29:	41 01 c5             	add    %eax,%r13d
   27c2c:	41 0f b6 bc 31 c1 56 	movzbl 0x56c1(%r9,%rsi,1),%edi
   27c33:	00 00 
   27c35:	44 01 e7             	add    %r12d,%edi
   27c38:	45 0f b6 84 31 c2 56 	movzbl 0x56c2(%r9,%rsi,1),%r8d
   27c3f:	00 00 
   27c41:	45 01 f8             	add    %r15d,%r8d
   27c44:	45 0f b6 9c 31 c3 56 	movzbl 0x56c3(%r9,%rsi,1),%r11d
   27c4b:	00 00 
   27c4d:	45 01 f3             	add    %r14d,%r11d
   27c50:	44 01 e9             	add    %r13d,%ecx
   27c53:	01 fb                	add    %edi,%ebx
   27c55:	44 01 c5             	add    %r8d,%ebp
   27c58:	44 01 da             	add    %r11d,%edx
   27c5b:	41 0f b6 84 31 c4 56 	movzbl 0x56c4(%r9,%rsi,1),%eax
   27c62:	00 00 
   27c64:	45 0f b6 a4 31 c5 56 	movzbl 0x56c5(%r9,%rsi,1),%r12d
   27c6b:	00 00 
   27c6d:	45 0f b6 bc 31 c6 56 	movzbl 0x56c6(%r9,%rsi,1),%r15d
   27c74:	00 00 
   27c76:	45 0f b6 b4 31 c7 56 	movzbl 0x56c7(%r9,%rsi,1),%r14d
   27c7d:	00 00 
   27c7f:	44 01 e8             	add    %r13d,%eax
   27c82:	41 01 fc             	add    %edi,%r12d
   27c85:	45 01 c7             	add    %r8d,%r15d
   27c88:	45 01 de             	add    %r11d,%r14d
   27c8b:	01 c1                	add    %eax,%ecx
   27c8d:	44 01 e3             	add    %r12d,%ebx
   27c90:	44 01 fd             	add    %r15d,%ebp
   27c93:	44 01 f2             	add    %r14d,%edx
   27c96:	48 83 c6 08          	add    $0x8,%rsi
   27c9a:	75 84                	jne    27c20 <adler::Adler32::write_slice+0xd0>
   27c9c:	49 81 c2 40 a9 ff ff 	add    $0xffffffffffffa940,%r10
   27ca3:	48 8b 3c 24          	mov    (%rsp),%rdi
   27ca7:	03 7c 24 0c          	add    0xc(%rsp),%edi
   27cab:	89 c6                	mov    %eax,%esi
   27cad:	41 b8 71 80 07 80    	mov    $0x80078071,%r8d
   27cb3:	49 0f af f0          	imul   %r8,%rsi
   27cb7:	48 c1 ee 2f          	shr    $0x2f,%rsi
   27cbb:	69 f6 f1 ff 00 00    	imul   $0xfff1,%esi,%esi
   27cc1:	29 f0                	sub    %esi,%eax
   27cc3:	44 89 e6             	mov    %r12d,%esi
   27cc6:	49 0f af f0          	imul   %r8,%rsi
   27cca:	48 c1 ee 2f          	shr    $0x2f,%rsi
   27cce:	69 f6 f1 ff 00 00    	imul   $0xfff1,%esi,%esi
   27cd4:	41 29 f4             	sub    %esi,%r12d
   27cd7:	44 89 fe             	mov    %r15d,%esi
   27cda:	49 0f af f0          	imul   %r8,%rsi
   27cde:	48 c1 ee 2f          	shr    $0x2f,%rsi
   27ce2:	69 f6 f1 ff 00 00    	imul   $0xfff1,%esi,%esi
   27ce8:	41 29 f7             	sub    %esi,%r15d
   27ceb:	44 89 f6             	mov    %r14d,%esi
   27cee:	49 0f af f0          	imul   %r8,%rsi
   27cf2:	48 c1 ee 2f          	shr    $0x2f,%rsi
   27cf6:	69 f6 f1 ff 00 00    	imul   $0xfff1,%esi,%esi
   27cfc:	41 29 f6             	sub    %esi,%r14d
   27cff:	89 ce                	mov    %ecx,%esi
   27d01:	49 0f af f0          	imul   %r8,%rsi
   27d05:	48 c1 ee 2f          	shr    $0x2f,%rsi
   27d09:	69 f6 f1 ff 00 00    	imul   $0xfff1,%esi,%esi
   27d0f:	29 f1                	sub    %esi,%ecx
   27d11:	89 de                	mov    %ebx,%esi
   27d13:	49 0f af f0          	imul   %r8,%rsi
   27d17:	48 c1 ee 2f          	shr    $0x2f,%rsi
   27d1b:	69 f6 f1 ff 00 00    	imul   $0xfff1,%esi,%esi
   27d21:	29 f3                	sub    %esi,%ebx
   27d23:	89 ee                	mov    %ebp,%esi
   27d25:	49 0f af f0          	imul   %r8,%rsi
   27d29:	48 c1 ee 2f          	shr    $0x2f,%rsi
   27d2d:	69 f6 f1 ff 00 00    	imul   $0xfff1,%esi,%esi
   27d33:	29 f5                	sub    %esi,%ebp
   27d35:	89 d6                	mov    %edx,%esi
   27d37:	49 0f af f0          	imul   %r8,%rsi
   27d3b:	48 c1 ee 2f          	shr    $0x2f,%rsi
   27d3f:	69 f6 f1 ff 00 00    	imul   $0xfff1,%esi,%esi
   27d45:	29 f2                	sub    %esi,%edx
   27d47:	48 89 fe             	mov    %rdi,%rsi
   27d4a:	49 0f af f0          	imul   %r8,%rsi
   27d4e:	48 c1 ee 2f          	shr    $0x2f,%rsi
   27d52:	69 f6 f1 ff 00 00    	imul   $0xfff1,%esi,%esi
   27d58:	29 f7                	sub    %esi,%edi
   27d5a:	48 89 3c 24          	mov    %rdi,(%rsp)
   27d5e:	4c 8b 4c 24 40       	mov    0x40(%rsp),%r9
   27d63:	49 81 fa c0 56 00 00 	cmp    $0x56c0,%r10
   27d6a:	0f 83 90 fe ff ff    	jae    27c00 <adler::Adler32::write_slice+0xb0>
   27d70:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
   27d75:	49 81 e0 fc 7f 00 00 	and    $0x7ffc,%r8
   27d7c:	0f 84 c5 00 00 00    	je     27e47 <adler::Adler32::write_slice+0x2f7>
   27d82:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   27d87:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
   27d8c:	4c 01 df             	add    %r11,%rdi
   27d8f:	4d 8d 48 fc          	lea    -0x4(%r8),%r9
   27d93:	41 f6 c1 04          	test   $0x4,%r9b
   27d97:	75 2f                	jne    27dc8 <adler::Adler32::write_slice+0x278>
   27d99:	0f b6 37             	movzbl (%rdi),%esi
   27d9c:	44 0f b6 47 01       	movzbl 0x1(%rdi),%r8d
   27da1:	44 0f b6 57 02       	movzbl 0x2(%rdi),%r10d
   27da6:	44 0f b6 6f 03       	movzbl 0x3(%rdi),%r13d
   27dab:	48 83 c7 04          	add    $0x4,%rdi
   27daf:	01 f0                	add    %esi,%eax
   27db1:	45 01 c4             	add    %r8d,%r12d
   27db4:	45 01 d7             	add    %r10d,%r15d
   27db7:	45 01 ee             	add    %r13d,%r14d
   27dba:	01 c1                	add    %eax,%ecx
   27dbc:	44 01 e3             	add    %r12d,%ebx
   27dbf:	44 01 fd             	add    %r15d,%ebp
   27dc2:	44 01 f2             	add    %r14d,%edx
   27dc5:	4d 89 c8             	mov    %r9,%r8
   27dc8:	49 89 fd             	mov    %rdi,%r13
   27dcb:	4d 85 c9             	test   %r9,%r9
   27dce:	0f 84 73 00 00 00    	je     27e47 <adler::Adler32::write_slice+0x2f7>
   27dd4:	31 f6                	xor    %esi,%esi
   27dd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   27ddd:	00 00 00 
   27de0:	45 0f b6 4c 35 00    	movzbl 0x0(%r13,%rsi,1),%r9d
   27de6:	41 01 c1             	add    %eax,%r9d
   27de9:	45 0f b6 54 35 01    	movzbl 0x1(%r13,%rsi,1),%r10d
   27def:	45 01 e2             	add    %r12d,%r10d
   27df2:	45 0f b6 5c 35 02    	movzbl 0x2(%r13,%rsi,1),%r11d
   27df8:	45 01 fb             	add    %r15d,%r11d
   27dfb:	41 0f b6 7c 35 03    	movzbl 0x3(%r13,%rsi,1),%edi
   27e01:	44 01 f7             	add    %r14d,%edi
   27e04:	44 01 c9             	add    %r9d,%ecx
   27e07:	44 01 d3             	add    %r10d,%ebx
   27e0a:	44 01 dd             	add    %r11d,%ebp
   27e0d:	01 fa                	add    %edi,%edx
   27e0f:	41 0f b6 44 35 04    	movzbl 0x4(%r13,%rsi,1),%eax
   27e15:	45 0f b6 64 35 05    	movzbl 0x5(%r13,%rsi,1),%r12d
   27e1b:	45 0f b6 7c 35 06    	movzbl 0x6(%r13,%rsi,1),%r15d
   27e21:	45 0f b6 74 35 07    	movzbl 0x7(%r13,%rsi,1),%r14d
   27e27:	44 01 c8             	add    %r9d,%eax
   27e2a:	45 01 d4             	add    %r10d,%r12d
   27e2d:	45 01 df             	add    %r11d,%r15d
   27e30:	41 01 fe             	add    %edi,%r14d
   27e33:	01 c1                	add    %eax,%ecx
   27e35:	44 01 e3             	add    %r12d,%ebx
   27e38:	44 01 fd             	add    %r15d,%ebp
   27e3b:	44 01 f2             	add    %r14d,%edx
   27e3e:	48 83 c6 08          	add    $0x8,%rsi
   27e42:	49 39 f0             	cmp    %rsi,%r8
   27e45:	75 99                	jne    27de0 <adler::Adler32::write_slice+0x290>
   27e47:	44 8b 4c 24 08       	mov    0x8(%rsp),%r9d
   27e4c:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   27e51:	41 0f af f9          	imul   %r9d,%edi
   27e55:	48 8b 34 24          	mov    (%rsp),%rsi
   27e59:	01 fe                	add    %edi,%esi
   27e5b:	89 c7                	mov    %eax,%edi
   27e5d:	41 b8 71 80 07 80    	mov    $0x80078071,%r8d
   27e63:	49 0f af f8          	imul   %r8,%rdi
   27e67:	48 c1 ef 2f          	shr    $0x2f,%rdi
   27e6b:	69 ff f1 ff 00 00    	imul   $0xfff1,%edi,%edi
   27e71:	29 f8                	sub    %edi,%eax
   27e73:	44 89 e7             	mov    %r12d,%edi
   27e76:	49 0f af f8          	imul   %r8,%rdi
   27e7a:	48 c1 ef 2f          	shr    $0x2f,%rdi
   27e7e:	69 ff f1 ff 00 00    	imul   $0xfff1,%edi,%edi
   27e84:	41 29 fc             	sub    %edi,%r12d
   27e87:	44 89 ff             	mov    %r15d,%edi
   27e8a:	49 0f af f8          	imul   %r8,%rdi
   27e8e:	48 c1 ef 2f          	shr    $0x2f,%rdi
   27e92:	69 ff f1 ff 00 00    	imul   $0xfff1,%edi,%edi
   27e98:	41 29 ff             	sub    %edi,%r15d
   27e9b:	44 89 f7             	mov    %r14d,%edi
   27e9e:	49 0f af f8          	imul   %r8,%rdi
   27ea2:	48 c1 ef 2f          	shr    $0x2f,%rdi
   27ea6:	69 ff f1 ff 00 00    	imul   $0xfff1,%edi,%edi
   27eac:	41 29 fe             	sub    %edi,%r14d
   27eaf:	89 cf                	mov    %ecx,%edi
   27eb1:	49 0f af f8          	imul   %r8,%rdi
   27eb5:	48 c1 ef 2f          	shr    $0x2f,%rdi
   27eb9:	69 ff f1 ff 00 00    	imul   $0xfff1,%edi,%edi
   27ebf:	29 f9                	sub    %edi,%ecx
   27ec1:	89 df                	mov    %ebx,%edi
   27ec3:	49 0f af f8          	imul   %r8,%rdi
   27ec7:	48 c1 ef 2f          	shr    $0x2f,%rdi
   27ecb:	69 ff f1 ff 00 00    	imul   $0xfff1,%edi,%edi
   27ed1:	29 fb                	sub    %edi,%ebx
   27ed3:	89 ef                	mov    %ebp,%edi
   27ed5:	49 0f af f8          	imul   %r8,%rdi
   27ed9:	48 c1 ef 2f          	shr    $0x2f,%rdi
   27edd:	69 ff f1 ff 00 00    	imul   $0xfff1,%edi,%edi
   27ee3:	29 fd                	sub    %edi,%ebp
   27ee5:	89 d7                	mov    %edx,%edi
   27ee7:	49 0f af f8          	imul   %r8,%rdi
   27eeb:	48 c1 ef 2f          	shr    $0x2f,%rdi
   27eef:	69 ff f1 ff 00 00    	imul   $0xfff1,%edi,%edi
   27ef5:	29 fa                	sub    %edi,%edx
   27ef7:	01 ea                	add    %ebp,%edx
   27ef9:	01 da                	add    %ebx,%edx
   27efb:	01 ca                	add    %ecx,%edx
   27efd:	b9 f1 ff 00 00       	mov    $0xfff1,%ecx
   27f02:	44 29 f1             	sub    %r14d,%ecx
   27f05:	8d 0c 49             	lea    (%rcx,%rcx,2),%ecx
   27f08:	45 01 ce             	add    %r9d,%r14d
   27f0b:	45 01 fe             	add    %r15d,%r14d
   27f0e:	45 01 ff             	add    %r15d,%r15d
   27f11:	45 01 e6             	add    %r12d,%r14d
   27f14:	41 01 c6             	add    %eax,%r14d
   27f17:	48 89 f0             	mov    %rsi,%rax
   27f1a:	49 0f af c0          	imul   %r8,%rax
   27f1e:	48 c1 e8 2f          	shr    $0x2f,%rax
   27f22:	69 c0 f1 ff 00 00    	imul   $0xfff1,%eax,%eax
   27f28:	29 c6                	sub    %eax,%esi
   27f2a:	01 ce                	add    %ecx,%esi
   27f2c:	44 29 fe             	sub    %r15d,%esi
   27f2f:	44 29 e6             	sub    %r12d,%esi
   27f32:	8d 04 96             	lea    (%rsi,%rdx,4),%eax
   27f35:	05 d3 ff 02 00       	add    $0x2ffd3,%eax
   27f3a:	48 8b 6c 24 38       	mov    0x38(%rsp),%rbp
   27f3f:	48 85 ed             	test   %rbp,%rbp
   27f42:	74 3b                	je     27f7f <adler::Adler32::write_slice+0x42f>
   27f44:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   27f49:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   27f4e:	0f b6 0c 3e          	movzbl (%rsi,%rdi,1),%ecx
   27f52:	41 01 ce             	add    %ecx,%r14d
   27f55:	44 01 f0             	add    %r14d,%eax
   27f58:	83 fd 01             	cmp    $0x1,%ebp
   27f5b:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   27f60:	74 22                	je     27f84 <adler::Adler32::write_slice+0x434>
   27f62:	0f b6 4c 3e 01       	movzbl 0x1(%rsi,%rdi,1),%ecx
   27f67:	41 01 ce             	add    %ecx,%r14d
   27f6a:	44 01 f0             	add    %r14d,%eax
   27f6d:	83 fd 02             	cmp    $0x2,%ebp
   27f70:	74 12                	je     27f84 <adler::Adler32::write_slice+0x434>
   27f72:	0f b6 4c 3e 02       	movzbl 0x2(%rsi,%rdi,1),%ecx
   27f77:	41 01 ce             	add    %ecx,%r14d
   27f7a:	44 01 f0             	add    %r14d,%eax
   27f7d:	eb 05                	jmp    27f84 <adler::Adler32::write_slice+0x434>
   27f7f:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   27f84:	44 89 f1             	mov    %r14d,%ecx
   27f87:	49 0f af c8          	imul   %r8,%rcx
   27f8b:	48 c1 e9 2f          	shr    $0x2f,%rcx
   27f8f:	69 c9 f1 ff 00 00    	imul   $0xfff1,%ecx,%ecx
   27f95:	41 29 ce             	sub    %ecx,%r14d
   27f98:	66 44 89 32          	mov    %r14w,(%rdx)
   27f9c:	89 c1                	mov    %eax,%ecx
   27f9e:	49 0f af c8          	imul   %r8,%rcx
   27fa2:	48 c1 e9 2f          	shr    $0x2f,%rcx
   27fa6:	69 c9 f1 ff 00 00    	imul   $0xfff1,%ecx,%ecx
   27fac:	29 c8                	sub    %ecx,%eax
   27fae:	66 89 42 02          	mov    %ax,0x2(%rdx)
   27fb2:	48 83 c4 48          	add    $0x48,%rsp
   27fb6:	5b                   	pop    %rbx
   27fb7:	41 5c                	pop    %r12
   27fb9:	41 5d                	pop    %r13
   27fbb:	41 5e                	pop    %r14
   27fbd:	41 5f                	pop    %r15
   27fbf:	5d                   	pop    %rbp
   27fc0:	c3                   	retq   
   27fc1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   27fc8:	00 00 00 
   27fcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000027fd0 <object::read::util::StringTable::new>:
   27fd0:	48 89 f2             	mov    %rsi,%rdx
   27fd3:	48 89 f8             	mov    %rdi,%rax
   27fd6:	c3                   	retq   
   27fd7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   27fde:	00 00 

0000000000027fe0 <object::read::util::StringTable::get>:
   27fe0:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
   27fe4:	89 f0                	mov    %esi,%eax
   27fe6:	48 39 c1             	cmp    %rax,%rcx
   27fe9:	0f 82 23 00 00 00    	jb     28012 <object::read::util::StringTable::get+0x32>
   27fef:	48 29 c1             	sub    %rax,%rcx
   27ff2:	0f 84 1a 00 00 00    	je     28012 <object::read::util::StringTable::get+0x32>
   27ff8:	48 03 07             	add    (%rdi),%rax
   27ffb:	31 d2                	xor    %edx,%edx
   27ffd:	0f 1f 00             	nopl   (%rax)
   28000:	80 3c 10 00          	cmpb   $0x0,(%rax,%rdx,1)
   28004:	74 0b                	je     28011 <object::read::util::StringTable::get+0x31>
   28006:	48 83 c2 01          	add    $0x1,%rdx
   2800a:	48 39 d1             	cmp    %rdx,%rcx
   2800d:	75 f1                	jne    28000 <object::read::util::StringTable::get+0x20>
   2800f:	31 c0                	xor    %eax,%eax
   28011:	c3                   	retq   
   28012:	31 c0                	xor    %eax,%eax
   28014:	c3                   	retq   
   28015:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2801c:	00 00 00 
   2801f:	90                   	nop

0000000000028020 <addr2line::path_push>:
   28020:	41 57                	push   %r15
   28022:	41 56                	push   %r14
   28024:	41 54                	push   %r12
   28026:	53                   	push   %rbx
   28027:	50                   	push   %rax
   28028:	49 89 d6             	mov    %rdx,%r14
   2802b:	49 89 f7             	mov    %rsi,%r15
   2802e:	48 89 fb             	mov    %rdi,%rbx
   28031:	48 85 d2             	test   %rdx,%rdx
   28034:	74 5b                	je     28091 <addr2line::path_push+0x71>
   28036:	41 80 3f 2f          	cmpb   $0x2f,(%r15)
   2803a:	75 55                	jne    28091 <addr2line::path_push+0x71>
   2803c:	be 01 00 00 00       	mov    $0x1,%esi
   28041:	4c 89 f7             	mov    %r14,%rdi
   28044:	ff 15 3e db 01 00    	callq  *0x1db3e(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   2804a:	48 85 c0             	test   %rax,%rax
   2804d:	0f 84 7a 01 00 00    	je     281cd <addr2line::path_push+0x1ad>
   28053:	49 89 c4             	mov    %rax,%r12
   28056:	48 89 c7             	mov    %rax,%rdi
   28059:	4c 89 fe             	mov    %r15,%rsi
   2805c:	4c 89 f2             	mov    %r14,%rdx
   2805f:	ff 15 9b dc 01 00    	callq  *0x1dc9b(%rip)        # 45d00 <memcpy@GLIBC_2.14>
   28065:	48 8b 3b             	mov    (%rbx),%rdi
   28068:	48 85 ff             	test   %rdi,%rdi
   2806b:	74 14                	je     28081 <addr2line::path_push+0x61>
   2806d:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   28071:	48 85 f6             	test   %rsi,%rsi
   28074:	74 0b                	je     28081 <addr2line::path_push+0x61>
   28076:	ba 01 00 00 00       	mov    $0x1,%edx
   2807b:	ff 15 7f db 01 00    	callq  *0x1db7f(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   28081:	4c 89 23             	mov    %r12,(%rbx)
   28084:	4c 89 73 08          	mov    %r14,0x8(%rbx)
   28088:	4c 89 73 10          	mov    %r14,0x10(%rbx)
   2808c:	e9 18 01 00 00       	jmpq   281a9 <addr2line::path_push+0x189>
   28091:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   28095:	48 85 f6             	test   %rsi,%rsi
   28098:	74 0a                	je     280a4 <addr2line::path_push+0x84>
   2809a:	48 8b 03             	mov    (%rbx),%rax
   2809d:	80 7c 06 ff 2f       	cmpb   $0x2f,-0x1(%rsi,%rax,1)
   280a2:	74 7f                	je     28123 <addr2line::path_push+0x103>
   280a4:	48 3b 73 08          	cmp    0x8(%rbx),%rsi
   280a8:	75 42                	jne    280ec <addr2line::path_push+0xcc>
   280aa:	48 89 f0             	mov    %rsi,%rax
   280ad:	48 ff c0             	inc    %rax
   280b0:	0f 84 ff 00 00 00    	je     281b5 <addr2line::path_push+0x195>
   280b6:	48 8d 0c 36          	lea    (%rsi,%rsi,1),%rcx
   280ba:	48 39 c1             	cmp    %rax,%rcx
   280bd:	48 0f 47 c1          	cmova  %rcx,%rax
   280c1:	48 83 f8 08          	cmp    $0x8,%rax
   280c5:	41 bc 08 00 00 00    	mov    $0x8,%r12d
   280cb:	4c 0f 47 e0          	cmova  %rax,%r12
   280cf:	48 85 f6             	test   %rsi,%rsi
   280d2:	74 1d                	je     280f1 <addr2line::path_push+0xd1>
   280d4:	48 8b 3b             	mov    (%rbx),%rdi
   280d7:	48 85 ff             	test   %rdi,%rdi
   280da:	74 15                	je     280f1 <addr2line::path_push+0xd1>
   280dc:	ba 01 00 00 00       	mov    $0x1,%edx
   280e1:	4c 89 e1             	mov    %r12,%rcx
   280e4:	ff 15 8e de 01 00    	callq  *0x1de8e(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
   280ea:	eb 13                	jmp    280ff <addr2line::path_push+0xdf>
   280ec:	48 8b 03             	mov    (%rbx),%rax
   280ef:	eb 22                	jmp    28113 <addr2line::path_push+0xf3>
   280f1:	be 01 00 00 00       	mov    $0x1,%esi
   280f6:	4c 89 e7             	mov    %r12,%rdi
   280f9:	ff 15 89 da 01 00    	callq  *0x1da89(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   280ff:	48 85 c0             	test   %rax,%rax
   28102:	0f 84 b5 00 00 00    	je     281bd <addr2line::path_push+0x19d>
   28108:	48 89 03             	mov    %rax,(%rbx)
   2810b:	4c 89 63 08          	mov    %r12,0x8(%rbx)
   2810f:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   28113:	c6 04 30 2f          	movb   $0x2f,(%rax,%rsi,1)
   28117:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   2811b:	48 83 c6 01          	add    $0x1,%rsi
   2811f:	48 89 73 10          	mov    %rsi,0x10(%rbx)
   28123:	48 8b 43 08          	mov    0x8(%rbx),%rax
   28127:	48 89 c1             	mov    %rax,%rcx
   2812a:	48 29 f1             	sub    %rsi,%rcx
   2812d:	4c 39 f1             	cmp    %r14,%rcx
   28130:	73 3e                	jae    28170 <addr2line::path_push+0x150>
   28132:	4c 01 f6             	add    %r14,%rsi
   28135:	72 7e                	jb     281b5 <addr2line::path_push+0x195>
   28137:	48 8d 0c 00          	lea    (%rax,%rax,1),%rcx
   2813b:	48 39 f1             	cmp    %rsi,%rcx
   2813e:	48 0f 47 f1          	cmova  %rcx,%rsi
   28142:	48 83 fe 08          	cmp    $0x8,%rsi
   28146:	41 bc 08 00 00 00    	mov    $0x8,%r12d
   2814c:	4c 0f 47 e6          	cmova  %rsi,%r12
   28150:	48 85 c0             	test   %rax,%rax
   28153:	74 20                	je     28175 <addr2line::path_push+0x155>
   28155:	48 8b 3b             	mov    (%rbx),%rdi
   28158:	48 85 ff             	test   %rdi,%rdi
   2815b:	74 18                	je     28175 <addr2line::path_push+0x155>
   2815d:	ba 01 00 00 00       	mov    $0x1,%edx
   28162:	48 89 c6             	mov    %rax,%rsi
   28165:	4c 89 e1             	mov    %r12,%rcx
   28168:	ff 15 0a de 01 00    	callq  *0x1de0a(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
   2816e:	eb 13                	jmp    28183 <addr2line::path_push+0x163>
   28170:	48 8b 3b             	mov    (%rbx),%rdi
   28173:	eb 21                	jmp    28196 <addr2line::path_push+0x176>
   28175:	be 01 00 00 00       	mov    $0x1,%esi
   2817a:	4c 89 e7             	mov    %r12,%rdi
   2817d:	ff 15 05 da 01 00    	callq  *0x1da05(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   28183:	48 89 c7             	mov    %rax,%rdi
   28186:	48 85 c0             	test   %rax,%rax
   28189:	74 32                	je     281bd <addr2line::path_push+0x19d>
   2818b:	48 89 3b             	mov    %rdi,(%rbx)
   2818e:	4c 89 63 08          	mov    %r12,0x8(%rbx)
   28192:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   28196:	48 01 f7             	add    %rsi,%rdi
   28199:	4c 89 fe             	mov    %r15,%rsi
   2819c:	4c 89 f2             	mov    %r14,%rdx
   2819f:	ff 15 5b db 01 00    	callq  *0x1db5b(%rip)        # 45d00 <memcpy@GLIBC_2.14>
   281a5:	4c 01 73 10          	add    %r14,0x10(%rbx)
   281a9:	48 83 c4 08          	add    $0x8,%rsp
   281ad:	5b                   	pop    %rbx
   281ae:	41 5c                	pop    %r12
   281b0:	41 5e                	pop    %r14
   281b2:	41 5f                	pop    %r15
   281b4:	c3                   	retq   
   281b5:	ff 15 2d d9 01 00    	callq  *0x1d92d(%rip)        # 45ae8 <_GLOBAL_OFFSET_TABLE_+0x158>
   281bb:	0f 0b                	ud2    
   281bd:	be 01 00 00 00       	mov    $0x1,%esi
   281c2:	4c 89 e7             	mov    %r12,%rdi
   281c5:	ff 15 5d d9 01 00    	callq  *0x1d95d(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   281cb:	0f 0b                	ud2    
   281cd:	be 01 00 00 00       	mov    $0x1,%esi
   281d2:	4c 89 f7             	mov    %r14,%rdi
   281d5:	ff 15 4d d9 01 00    	callq  *0x1d94d(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   281db:	0f 0b                	ud2    
   281dd:	0f 1f 00             	nopl   (%rax)

00000000000281e0 <<&T as core::fmt::Debug>::fmt>:
   281e0:	41 56                	push   %r14
   281e2:	53                   	push   %rbx
   281e3:	50                   	push   %rax
   281e4:	48 89 f3             	mov    %rsi,%rbx
   281e7:	4c 8b 37             	mov    (%rdi),%r14
   281ea:	48 89 f7             	mov    %rsi,%rdi
   281ed:	ff 15 9d dd 01 00    	callq  *0x1dd9d(%rip)        # 45f90 <_GLOBAL_OFFSET_TABLE_+0x600>
   281f3:	84 c0                	test   %al,%al
   281f5:	74 13                	je     2820a <<&T as core::fmt::Debug>::fmt+0x2a>
   281f7:	4c 89 f7             	mov    %r14,%rdi
   281fa:	48 89 de             	mov    %rbx,%rsi
   281fd:	48 83 c4 08          	add    $0x8,%rsp
   28201:	5b                   	pop    %rbx
   28202:	41 5e                	pop    %r14
   28204:	ff 25 0e db 01 00    	jmpq   *0x1db0e(%rip)        # 45d18 <_GLOBAL_OFFSET_TABLE_+0x388>
   2820a:	48 89 df             	mov    %rbx,%rdi
   2820d:	ff 15 ed d7 01 00    	callq  *0x1d7ed(%rip)        # 45a00 <_GLOBAL_OFFSET_TABLE_+0x70>
   28213:	4c 89 f7             	mov    %r14,%rdi
   28216:	48 89 de             	mov    %rbx,%rsi
   28219:	48 83 c4 08          	add    $0x8,%rsp
   2821d:	84 c0                	test   %al,%al
   2821f:	74 09                	je     2822a <<&T as core::fmt::Debug>::fmt+0x4a>
   28221:	5b                   	pop    %rbx
   28222:	41 5e                	pop    %r14
   28224:	ff 25 c6 dd 01 00    	jmpq   *0x1ddc6(%rip)        # 45ff0 <_GLOBAL_OFFSET_TABLE_+0x660>
   2822a:	5b                   	pop    %rbx
   2822b:	41 5e                	pop    %r14
   2822d:	ff 25 6d d9 01 00    	jmpq   *0x1d96d(%rip)        # 45ba0 <_GLOBAL_OFFSET_TABLE_+0x210>
   28233:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2823a:	00 00 00 
   2823d:	0f 1f 00             	nopl   (%rax)

0000000000028240 <core::ptr::drop_in_place>:
   28240:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   28244:	48 85 f6             	test   %rsi,%rsi
   28247:	74 19                	je     28262 <core::ptr::drop_in_place+0x22>
   28249:	48 8b 3f             	mov    (%rdi),%rdi
   2824c:	48 85 ff             	test   %rdi,%rdi
   2824f:	74 11                	je     28262 <core::ptr::drop_in_place+0x22>
   28251:	48 c1 e6 04          	shl    $0x4,%rsi
   28255:	74 0b                	je     28262 <core::ptr::drop_in_place+0x22>
   28257:	ba 08 00 00 00       	mov    $0x8,%edx
   2825c:	ff 25 9e d9 01 00    	jmpq   *0x1d99e(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   28262:	c3                   	retq   
   28263:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2826a:	00 00 00 
   2826d:	0f 1f 00             	nopl   (%rax)

0000000000028270 <core::ptr::drop_in_place>:
   28270:	48 83 3f 00          	cmpq   $0x0,(%rdi)
   28274:	74 23                	je     28299 <core::ptr::drop_in_place+0x29>
   28276:	48 8b 77 10          	mov    0x10(%rdi),%rsi
   2827a:	48 85 f6             	test   %rsi,%rsi
   2827d:	74 1a                	je     28299 <core::ptr::drop_in_place+0x29>
   2827f:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   28283:	48 85 ff             	test   %rdi,%rdi
   28286:	74 11                	je     28299 <core::ptr::drop_in_place+0x29>
   28288:	48 c1 e6 04          	shl    $0x4,%rsi
   2828c:	74 0b                	je     28299 <core::ptr::drop_in_place+0x29>
   2828e:	ba 08 00 00 00       	mov    $0x8,%edx
   28293:	ff 25 67 d9 01 00    	jmpq   *0x1d967(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   28299:	c3                   	retq   
   2829a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000282a0 <core::ptr::drop_in_place>:
   282a0:	48 83 7f 08 00       	cmpq   $0x0,0x8(%rdi)
   282a5:	74 23                	je     282ca <core::ptr::drop_in_place+0x2a>
   282a7:	48 8b 77 18          	mov    0x18(%rdi),%rsi
   282ab:	48 85 f6             	test   %rsi,%rsi
   282ae:	74 1a                	je     282ca <core::ptr::drop_in_place+0x2a>
   282b0:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   282b4:	48 85 ff             	test   %rdi,%rdi
   282b7:	74 11                	je     282ca <core::ptr::drop_in_place+0x2a>
   282b9:	48 c1 e6 04          	shl    $0x4,%rsi
   282bd:	74 0b                	je     282ca <core::ptr::drop_in_place+0x2a>
   282bf:	ba 08 00 00 00       	mov    $0x8,%edx
   282c4:	ff 25 36 d9 01 00    	jmpq   *0x1d936(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   282ca:	c3                   	retq   
   282cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000282d0 <alloc::vec::Vec<T>::reserve>:
   282d0:	41 56                	push   %r14
   282d2:	53                   	push   %rbx
   282d3:	50                   	push   %rax
   282d4:	48 89 f0             	mov    %rsi,%rax
   282d7:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   282db:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
   282df:	48 89 f2             	mov    %rsi,%rdx
   282e2:	48 29 ca             	sub    %rcx,%rdx
   282e5:	48 39 c2             	cmp    %rax,%rdx
   282e8:	0f 83 88 00 00 00    	jae    28376 <alloc::vec::Vec<T>::reserve+0xa6>
   282ee:	48 01 c1             	add    %rax,%rcx
   282f1:	0f 82 87 00 00 00    	jb     2837e <alloc::vec::Vec<T>::reserve+0xae>
   282f7:	48 89 fb             	mov    %rdi,%rbx
   282fa:	48 8d 04 36          	lea    (%rsi,%rsi,1),%rax
   282fe:	48 39 c8             	cmp    %rcx,%rax
   28301:	48 0f 47 c8          	cmova  %rax,%rcx
   28305:	48 83 f9 04          	cmp    $0x4,%rcx
   28309:	b8 04 00 00 00       	mov    $0x4,%eax
   2830e:	48 0f 47 c1          	cmova  %rcx,%rax
   28312:	ba 10 00 00 00       	mov    $0x10,%edx
   28317:	31 c9                	xor    %ecx,%ecx
   28319:	48 f7 e2             	mul    %rdx
   2831c:	49 89 c6             	mov    %rax,%r14
   2831f:	0f 90 c0             	seto   %al
   28322:	0f 91 c1             	setno  %cl
   28325:	48 c1 e1 03          	shl    $0x3,%rcx
   28329:	48 85 f6             	test   %rsi,%rsi
   2832c:	74 20                	je     2834e <alloc::vec::Vec<T>::reserve+0x7e>
   2832e:	84 c0                	test   %al,%al
   28330:	75 4c                	jne    2837e <alloc::vec::Vec<T>::reserve+0xae>
   28332:	48 8b 3b             	mov    (%rbx),%rdi
   28335:	48 85 ff             	test   %rdi,%rdi
   28338:	74 18                	je     28352 <alloc::vec::Vec<T>::reserve+0x82>
   2833a:	48 c1 e6 04          	shl    $0x4,%rsi
   2833e:	74 12                	je     28352 <alloc::vec::Vec<T>::reserve+0x82>
   28340:	48 89 ca             	mov    %rcx,%rdx
   28343:	4c 89 f1             	mov    %r14,%rcx
   28346:	ff 15 2c dc 01 00    	callq  *0x1dc2c(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
   2834c:	eb 15                	jmp    28363 <alloc::vec::Vec<T>::reserve+0x93>
   2834e:	84 c0                	test   %al,%al
   28350:	75 2c                	jne    2837e <alloc::vec::Vec<T>::reserve+0xae>
   28352:	4d 85 f6             	test   %r14,%r14
   28355:	74 0f                	je     28366 <alloc::vec::Vec<T>::reserve+0x96>
   28357:	4c 89 f7             	mov    %r14,%rdi
   2835a:	48 89 ce             	mov    %rcx,%rsi
   2835d:	ff 15 25 d8 01 00    	callq  *0x1d825(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   28363:	48 89 c1             	mov    %rax,%rcx
   28366:	48 85 c9             	test   %rcx,%rcx
   28369:	74 1b                	je     28386 <alloc::vec::Vec<T>::reserve+0xb6>
   2836b:	48 89 0b             	mov    %rcx,(%rbx)
   2836e:	49 c1 ee 04          	shr    $0x4,%r14
   28372:	4c 89 73 08          	mov    %r14,0x8(%rbx)
   28376:	48 83 c4 08          	add    $0x8,%rsp
   2837a:	5b                   	pop    %rbx
   2837b:	41 5e                	pop    %r14
   2837d:	c3                   	retq   
   2837e:	ff 15 64 d7 01 00    	callq  *0x1d764(%rip)        # 45ae8 <_GLOBAL_OFFSET_TABLE_+0x158>
   28384:	0f 0b                	ud2    
   28386:	be 08 00 00 00       	mov    $0x8,%esi
   2838b:	4c 89 f7             	mov    %r14,%rdi
   2838e:	ff 15 94 d7 01 00    	callq  *0x1d794(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   28394:	0f 0b                	ud2    
   28396:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2839d:	00 00 00 

00000000000283a0 <gimli::common::SectionId::name>:
   283a0:	ba 0c 00 00 00       	mov    $0xc,%edx
   283a5:	48 8d 05 7c 0f 01 00 	lea    0x10f7c(%rip),%rax        # 39328 <str.6+0x2008>
   283ac:	40 0f b6 cf          	movzbl %dil,%ecx
   283b0:	48 8d 35 f9 05 01 00 	lea    0x105f9(%rip),%rsi        # 389b0 <str.6+0x1690>
   283b7:	48 63 0c 8e          	movslq (%rsi,%rcx,4),%rcx
   283bb:	48 01 f1             	add    %rsi,%rcx
   283be:	ff e1                	jmpq   *%rcx
   283c0:	ba 0d 00 00 00       	mov    $0xd,%edx
   283c5:	48 8d 05 51 10 01 00 	lea    0x11051(%rip),%rax        # 3941d <str.6+0x20fd>
   283cc:	c3                   	retq   
   283cd:	ba 0b 00 00 00       	mov    $0xb,%edx
   283d2:	48 8d 05 39 10 01 00 	lea    0x11039(%rip),%rax        # 39412 <str.6+0x20f2>
   283d9:	c3                   	retq   
   283da:	ba 0e 00 00 00       	mov    $0xe,%edx
   283df:	48 8d 05 1e 10 01 00 	lea    0x1101e(%rip),%rax        # 39404 <str.6+0x20e4>
   283e6:	c3                   	retq   
   283e7:	48 8d 05 0a 10 01 00 	lea    0x1100a(%rip),%rax        # 393f8 <str.6+0x20d8>
   283ee:	c3                   	retq   
   283ef:	ba 09 00 00 00       	mov    $0x9,%edx
   283f4:	48 8d 05 f4 0f 01 00 	lea    0x10ff4(%rip),%rax        # 393ef <str.6+0x20cf>
   283fb:	c3                   	retq   
   283fc:	ba 0d 00 00 00       	mov    $0xd,%edx
   28401:	48 8d 05 da 0f 01 00 	lea    0x10fda(%rip),%rax        # 393e2 <str.6+0x20c2>
   28408:	c3                   	retq   
   28409:	ba 0b 00 00 00       	mov    $0xb,%edx
   2840e:	48 8d 05 c2 0f 01 00 	lea    0x10fc2(%rip),%rax        # 393d7 <str.6+0x20b7>
   28415:	c3                   	retq   
   28416:	ba 0b 00 00 00       	mov    $0xb,%edx
   2841b:	48 8d 05 aa 0f 01 00 	lea    0x10faa(%rip),%rax        # 393cc <str.6+0x20ac>
   28422:	c3                   	retq   
   28423:	ba 0f 00 00 00       	mov    $0xf,%edx
   28428:	48 8d 05 8e 0f 01 00 	lea    0x10f8e(%rip),%rax        # 393bd <str.6+0x209d>
   2842f:	c3                   	retq   
   28430:	ba 0a 00 00 00       	mov    $0xa,%edx
   28435:	48 8d 05 77 0f 01 00 	lea    0x10f77(%rip),%rax        # 393b3 <str.6+0x2093>
   2843c:	c3                   	retq   
   2843d:	ba 0f 00 00 00       	mov    $0xf,%edx
   28442:	48 8d 05 5b 0f 01 00 	lea    0x10f5b(%rip),%rax        # 393a4 <str.6+0x2084>
   28449:	c3                   	retq   
   2844a:	ba 0e 00 00 00       	mov    $0xe,%edx
   2844f:	48 8d 05 40 0f 01 00 	lea    0x10f40(%rip),%rax        # 39396 <str.6+0x2076>
   28456:	c3                   	retq   
   28457:	48 8d 05 2c 0f 01 00 	lea    0x10f2c(%rip),%rax        # 3938a <str.6+0x206a>
   2845e:	c3                   	retq   
   2845f:	ba 0f 00 00 00       	mov    $0xf,%edx
   28464:	48 8d 05 10 0f 01 00 	lea    0x10f10(%rip),%rax        # 3937b <str.6+0x205b>
   2846b:	c3                   	retq   
   2846c:	ba 0f 00 00 00       	mov    $0xf,%edx
   28471:	48 8d 05 f4 0e 01 00 	lea    0x10ef4(%rip),%rax        # 3936c <str.6+0x204c>
   28478:	c3                   	retq   
   28479:	ba 0d 00 00 00       	mov    $0xd,%edx
   2847e:	48 8d 05 da 0e 01 00 	lea    0x10eda(%rip),%rax        # 3935f <str.6+0x203f>
   28485:	c3                   	retq   
   28486:	ba 0f 00 00 00       	mov    $0xf,%edx
   2848b:	48 8d 05 be 0e 01 00 	lea    0x10ebe(%rip),%rax        # 39350 <str.6+0x2030>
   28492:	c3                   	retq   
   28493:	ba 0a 00 00 00       	mov    $0xa,%edx
   28498:	48 8d 05 a7 0e 01 00 	lea    0x10ea7(%rip),%rax        # 39346 <str.6+0x2026>
   2849f:	c3                   	retq   
   284a0:	ba 12 00 00 00       	mov    $0x12,%edx
   284a5:	48 8d 05 88 0e 01 00 	lea    0x10e88(%rip),%rax        # 39334 <str.6+0x2014>
   284ac:	c3                   	retq   
   284ad:	0f 1f 00             	nopl   (%rax)

00000000000284b0 <gimli::read::abbrev::Abbreviations::empty>:
   284b0:	48 89 f8             	mov    %rdi,%rax
   284b3:	48 c7 07 08 00 00 00 	movq   $0x8,(%rdi)
   284ba:	48 c7 47 28 00 00 00 	movq   $0x0,0x28(%rdi)
   284c1:	00 
   284c2:	0f 57 c0             	xorps  %xmm0,%xmm0
   284c5:	0f 11 47 08          	movups %xmm0,0x8(%rdi)
   284c9:	48 c7 47 18 00 00 00 	movq   $0x0,0x18(%rdi)
   284d0:	00 
   284d1:	c3                   	retq   
   284d2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   284d9:	00 00 00 
   284dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000284e0 <gimli::read::abbrev::Abbreviations::insert>:
   284e0:	55                   	push   %rbp
   284e1:	41 57                	push   %r15
   284e3:	41 56                	push   %r14
   284e5:	41 55                	push   %r13
   284e7:	41 54                	push   %r12
   284e9:	53                   	push   %rbx
   284ea:	48 81 ec 78 07 00 00 	sub    $0x778,%rsp
   284f1:	48 89 f3             	mov    %rsi,%rbx
   284f4:	4c 8b 26             	mov    (%rsi),%r12
   284f7:	49 8d 74 24 ff       	lea    -0x1(%r12),%rsi
   284fc:	48 8b 47 10          	mov    0x10(%rdi),%rax
   28500:	48 39 c6             	cmp    %rax,%rsi
   28503:	73 42                	jae    28547 <gimli::read::abbrev::Abbreviations::insert+0x67>
   28505:	40 b5 01             	mov    $0x1,%bpl
   28508:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
   2850d:	0f 84 12 03 00 00    	je     28825 <gimli::read::abbrev::Abbreviations::insert+0x345>
   28513:	48 8b 73 18          	mov    0x18(%rbx),%rsi
   28517:	48 85 f6             	test   %rsi,%rsi
   2851a:	0f 84 05 03 00 00    	je     28825 <gimli::read::abbrev::Abbreviations::insert+0x345>
   28520:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   28524:	48 85 ff             	test   %rdi,%rdi
   28527:	0f 84 f8 02 00 00    	je     28825 <gimli::read::abbrev::Abbreviations::insert+0x345>
   2852d:	48 c1 e6 04          	shl    $0x4,%rsi
   28531:	0f 84 ee 02 00 00    	je     28825 <gimli::read::abbrev::Abbreviations::insert+0x345>
   28537:	ba 08 00 00 00       	mov    $0x8,%edx
   2853c:	ff 15 be d6 01 00    	callq  *0x1d6be(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   28542:	e9 de 02 00 00       	jmpq   28825 <gimli::read::abbrev::Abbreviations::insert+0x345>
   28547:	49 89 fe             	mov    %rdi,%r14
   2854a:	48 8d 4f 18          	lea    0x18(%rdi),%rcx
   2854e:	48 39 c6             	cmp    %rax,%rsi
   28551:	75 74                	jne    285c7 <gimli::read::abbrev::Abbreviations::insert+0xe7>
   28553:	49 83 7e 28 00       	cmpq   $0x0,0x28(%r14)
   28558:	0f 84 86 00 00 00    	je     285e4 <gimli::read::abbrev::Abbreviations::insert+0x104>
   2855e:	48 8b 01             	mov    (%rcx),%rax
   28561:	48 85 c0             	test   %rax,%rax
   28564:	74 7e                	je     285e4 <gimli::read::abbrev::Abbreviations::insert+0x104>
   28566:	4d 8b 4e 20          	mov    0x20(%r14),%r9
   2856a:	49 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%r8
   28571:	0f b7 90 32 05 00 00 	movzwl 0x532(%rax),%edx
   28578:	48 89 d5             	mov    %rdx,%rbp
   2857b:	48 f7 dd             	neg    %rbp
   2857e:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   28585:	48 8d 0c 2f          	lea    (%rdi,%rbp,1),%rcx
   28589:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
   2858d:	74 22                	je     285b1 <gimli::read::abbrev::Abbreviations::insert+0xd1>
   2858f:	31 c9                	xor    %ecx,%ecx
   28591:	4c 39 64 f8 10       	cmp    %r12,0x10(%rax,%rdi,8)
   28596:	0f 95 c1             	setne  %cl
   28599:	49 0f 47 c8          	cmova  %r8,%rcx
   2859d:	48 83 c7 01          	add    $0x1,%rdi
   285a1:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
   285a5:	74 0d                	je     285b4 <gimli::read::abbrev::Abbreviations::insert+0xd4>
   285a7:	48 85 c9             	test   %rcx,%rcx
   285aa:	75 d9                	jne    28585 <gimli::read::abbrev::Abbreviations::insert+0xa5>
   285ac:	e9 54 ff ff ff       	jmpq   28505 <gimli::read::abbrev::Abbreviations::insert+0x25>
   285b1:	48 89 d7             	mov    %rdx,%rdi
   285b4:	4d 85 c9             	test   %r9,%r9
   285b7:	74 2b                	je     285e4 <gimli::read::abbrev::Abbreviations::insert+0x104>
   285b9:	49 83 c1 ff          	add    $0xffffffffffffffff,%r9
   285bd:	48 8b 84 f8 38 05 00 	mov    0x538(%rax,%rdi,8),%rax
   285c4:	00 
   285c5:	eb aa                	jmp    28571 <gimli::read::abbrev::Abbreviations::insert+0x91>
   285c7:	48 89 8c 24 d0 01 00 	mov    %rcx,0x1d0(%rsp)
   285ce:	00 
   285cf:	4c 8b 29             	mov    (%rcx),%r13
   285d2:	4d 85 ed             	test   %r13,%r13
   285d5:	0f 84 dc 00 00 00    	je     286b7 <gimli::read::abbrev::Abbreviations::insert+0x1d7>
   285db:	49 8b 46 20          	mov    0x20(%r14),%rax
   285df:	e9 28 01 00 00       	jmpq   2870c <gimli::read::abbrev::Abbreviations::insert+0x22c>
   285e4:	0f 10 43 60          	movups 0x60(%rbx),%xmm0
   285e8:	0f 29 84 24 a0 02 00 	movaps %xmm0,0x2a0(%rsp)
   285ef:	00 
   285f0:	0f 10 43 50          	movups 0x50(%rbx),%xmm0
   285f4:	0f 29 84 24 90 02 00 	movaps %xmm0,0x290(%rsp)
   285fb:	00 
   285fc:	0f 10 43 40          	movups 0x40(%rbx),%xmm0
   28600:	0f 29 84 24 80 02 00 	movaps %xmm0,0x280(%rsp)
   28607:	00 
   28608:	0f 10 03             	movups (%rbx),%xmm0
   2860b:	0f 10 4b 10          	movups 0x10(%rbx),%xmm1
   2860f:	0f 10 53 20          	movups 0x20(%rbx),%xmm2
   28613:	0f 10 5b 30          	movups 0x30(%rbx),%xmm3
   28617:	0f 29 9c 24 70 02 00 	movaps %xmm3,0x270(%rsp)
   2861e:	00 
   2861f:	0f 29 94 24 60 02 00 	movaps %xmm2,0x260(%rsp)
   28626:	00 
   28627:	0f 29 8c 24 50 02 00 	movaps %xmm1,0x250(%rsp)
   2862e:	00 
   2862f:	0f 29 84 24 40 02 00 	movaps %xmm0,0x240(%rsp)
   28636:	00 
   28637:	49 3b 76 08          	cmp    0x8(%r14),%rsi
   2863b:	0f 85 36 01 00 00    	jne    28777 <gimli::read::abbrev::Abbreviations::insert+0x297>
   28641:	48 89 f1             	mov    %rsi,%rcx
   28644:	48 ff c1             	inc    %rcx
   28647:	0f 84 1b 10 00 00    	je     29668 <gimli::read::abbrev::Abbreviations::insert+0x1188>
   2864d:	48 8d 04 36          	lea    (%rsi,%rsi,1),%rax
   28651:	48 39 c8             	cmp    %rcx,%rax
   28654:	48 0f 47 c8          	cmova  %rax,%rcx
   28658:	48 83 f9 04          	cmp    $0x4,%rcx
   2865c:	b8 04 00 00 00       	mov    $0x4,%eax
   28661:	48 0f 47 c1          	cmova  %rcx,%rax
   28665:	ba 70 00 00 00       	mov    $0x70,%edx
   2866a:	31 c9                	xor    %ecx,%ecx
   2866c:	48 f7 e2             	mul    %rdx
   2866f:	48 89 c3             	mov    %rax,%rbx
   28672:	0f 90 c0             	seto   %al
   28675:	0f 91 c1             	setno  %cl
   28678:	48 c1 e1 03          	shl    $0x3,%rcx
   2867c:	48 85 f6             	test   %rsi,%rsi
   2867f:	0f 84 f7 00 00 00    	je     2877c <gimli::read::abbrev::Abbreviations::insert+0x29c>
   28685:	84 c0                	test   %al,%al
   28687:	0f 85 db 0f 00 00    	jne    29668 <gimli::read::abbrev::Abbreviations::insert+0x1188>
   2868d:	49 8b 3e             	mov    (%r14),%rdi
   28690:	48 85 ff             	test   %rdi,%rdi
   28693:	0f 84 eb 00 00 00    	je     28784 <gimli::read::abbrev::Abbreviations::insert+0x2a4>
   28699:	48 6b f6 70          	imul   $0x70,%rsi,%rsi
   2869d:	48 85 f6             	test   %rsi,%rsi
   286a0:	0f 84 de 00 00 00    	je     28784 <gimli::read::abbrev::Abbreviations::insert+0x2a4>
   286a6:	48 89 ca             	mov    %rcx,%rdx
   286a9:	48 89 d9             	mov    %rbx,%rcx
   286ac:	ff 15 c6 d8 01 00    	callq  *0x1d8c6(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
   286b2:	e9 de 00 00 00       	jmpq   28795 <gimli::read::abbrev::Abbreviations::insert+0x2b5>
   286b7:	bf 38 05 00 00       	mov    $0x538,%edi
   286bc:	be 08 00 00 00       	mov    $0x8,%esi
   286c1:	ff 15 c1 d4 01 00    	callq  *0x1d4c1(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   286c7:	48 85 c0             	test   %rax,%rax
   286ca:	0f 84 a0 0f 00 00    	je     29670 <gimli::read::abbrev::Abbreviations::insert+0x1190>
   286d0:	49 89 c5             	mov    %rax,%r13
   286d3:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   286da:	48 89 c7             	mov    %rax,%rdi
   286dd:	48 83 c7 08          	add    $0x8,%rdi
   286e1:	48 8d b4 24 40 02 00 	lea    0x240(%rsp),%rsi
   286e8:	00 
   286e9:	ba 2a 05 00 00       	mov    $0x52a,%edx
   286ee:	ff 15 0c d6 01 00    	callq  *0x1d60c(%rip)        # 45d00 <memcpy@GLIBC_2.14>
   286f4:	66 41 c7 85 32 05 00 	movw   $0x0,0x532(%r13)
   286fb:	00 00 00 
   286fe:	4d 89 6e 18          	mov    %r13,0x18(%r14)
   28702:	49 c7 46 20 00 00 00 	movq   $0x0,0x20(%r14)
   28709:	00 
   2870a:	31 c0                	xor    %eax,%eax
   2870c:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
   28713:	41 0f b7 95 32 05 00 	movzwl 0x532(%r13),%edx
   2871a:	00 
   2871b:	4d 8d 7d 08          	lea    0x8(%r13),%r15
   2871f:	48 89 d6             	mov    %rdx,%rsi
   28722:	48 f7 de             	neg    %rsi
   28725:	48 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%rbp
   2872c:	48 8d 3c 2e          	lea    (%rsi,%rbp,1),%rdi
   28730:	48 83 ff ff          	cmp    $0xffffffffffffffff,%rdi
   28734:	74 23                	je     28759 <gimli::read::abbrev::Abbreviations::insert+0x279>
   28736:	31 ff                	xor    %edi,%edi
   28738:	4d 39 64 ed 10       	cmp    %r12,0x10(%r13,%rbp,8)
   2873d:	40 0f 95 c7          	setne  %dil
   28741:	48 0f 47 f9          	cmova  %rcx,%rdi
   28745:	48 83 c5 01          	add    $0x1,%rbp
   28749:	48 83 ff ff          	cmp    $0xffffffffffffffff,%rdi
   2874d:	74 11                	je     28760 <gimli::read::abbrev::Abbreviations::insert+0x280>
   2874f:	48 85 ff             	test   %rdi,%rdi
   28752:	75 d8                	jne    2872c <gimli::read::abbrev::Abbreviations::insert+0x24c>
   28754:	e9 ac fd ff ff       	jmpq   28505 <gimli::read::abbrev::Abbreviations::insert+0x25>
   28759:	48 89 d5             	mov    %rdx,%rbp
   2875c:	0f 1f 40 00          	nopl   0x0(%rax)
   28760:	48 85 c0             	test   %rax,%rax
   28763:	0f 84 d0 00 00 00    	je     28839 <gimli::read::abbrev::Abbreviations::insert+0x359>
   28769:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
   2876d:	4d 8b ac ed 38 05 00 	mov    0x538(%r13,%rbp,8),%r13
   28774:	00 
   28775:	eb 9c                	jmp    28713 <gimli::read::abbrev::Abbreviations::insert+0x233>
   28777:	49 8b 0e             	mov    (%r14),%rcx
   2877a:	eb 44                	jmp    287c0 <gimli::read::abbrev::Abbreviations::insert+0x2e0>
   2877c:	84 c0                	test   %al,%al
   2877e:	0f 85 e4 0e 00 00    	jne    29668 <gimli::read::abbrev::Abbreviations::insert+0x1188>
   28784:	48 85 db             	test   %rbx,%rbx
   28787:	74 0f                	je     28798 <gimli::read::abbrev::Abbreviations::insert+0x2b8>
   28789:	48 89 df             	mov    %rbx,%rdi
   2878c:	48 89 ce             	mov    %rcx,%rsi
   2878f:	ff 15 f3 d3 01 00    	callq  *0x1d3f3(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   28795:	48 89 c1             	mov    %rax,%rcx
   28798:	48 85 c9             	test   %rcx,%rcx
   2879b:	0f 84 d6 0e 00 00    	je     29677 <gimli::read::abbrev::Abbreviations::insert+0x1197>
   287a1:	49 89 0e             	mov    %rcx,(%r14)
   287a4:	48 c1 eb 04          	shr    $0x4,%rbx
   287a8:	48 ba 93 24 49 92 24 	movabs $0x2492492492492493,%rdx
   287af:	49 92 24 
   287b2:	48 89 d8             	mov    %rbx,%rax
   287b5:	48 f7 e2             	mul    %rdx
   287b8:	49 89 56 08          	mov    %rdx,0x8(%r14)
   287bc:	49 8b 76 10          	mov    0x10(%r14),%rsi
   287c0:	48 6b c6 70          	imul   $0x70,%rsi,%rax
   287c4:	0f 28 84 24 a0 02 00 	movaps 0x2a0(%rsp),%xmm0
   287cb:	00 
   287cc:	0f 11 44 01 60       	movups %xmm0,0x60(%rcx,%rax,1)
   287d1:	0f 28 84 24 90 02 00 	movaps 0x290(%rsp),%xmm0
   287d8:	00 
   287d9:	0f 11 44 01 50       	movups %xmm0,0x50(%rcx,%rax,1)
   287de:	0f 28 84 24 80 02 00 	movaps 0x280(%rsp),%xmm0
   287e5:	00 
   287e6:	0f 11 44 01 40       	movups %xmm0,0x40(%rcx,%rax,1)
   287eb:	0f 28 84 24 40 02 00 	movaps 0x240(%rsp),%xmm0
   287f2:	00 
   287f3:	0f 28 8c 24 50 02 00 	movaps 0x250(%rsp),%xmm1
   287fa:	00 
   287fb:	0f 28 94 24 60 02 00 	movaps 0x260(%rsp),%xmm2
   28802:	00 
   28803:	0f 28 9c 24 70 02 00 	movaps 0x270(%rsp),%xmm3
   2880a:	00 
   2880b:	0f 11 5c 01 30       	movups %xmm3,0x30(%rcx,%rax,1)
   28810:	0f 11 54 01 20       	movups %xmm2,0x20(%rcx,%rax,1)
   28815:	0f 11 4c 01 10       	movups %xmm1,0x10(%rcx,%rax,1)
   2881a:	0f 11 04 01          	movups %xmm0,(%rcx,%rax,1)
   2881e:	49 83 46 10 01       	addq   $0x1,0x10(%r14)
   28823:	31 ed                	xor    %ebp,%ebp
   28825:	89 e8                	mov    %ebp,%eax
   28827:	48 81 c4 78 07 00 00 	add    $0x778,%rsp
   2882e:	5b                   	pop    %rbx
   2882f:	41 5c                	pop    %r12
   28831:	41 5d                	pop    %r13
   28833:	41 5e                	pop    %r14
   28835:	41 5f                	pop    %r15
   28837:	5d                   	pop    %rbp
   28838:	c3                   	retq   
   28839:	0f 10 43 60          	movups 0x60(%rbx),%xmm0
   2883d:	0f 29 84 24 00 01 00 	movaps %xmm0,0x100(%rsp)
   28844:	00 
   28845:	0f 10 43 50          	movups 0x50(%rbx),%xmm0
   28849:	0f 29 84 24 f0 00 00 	movaps %xmm0,0xf0(%rsp)
   28850:	00 
   28851:	0f 10 43 40          	movups 0x40(%rbx),%xmm0
   28855:	0f 29 84 24 e0 00 00 	movaps %xmm0,0xe0(%rsp)
   2885c:	00 
   2885d:	0f 10 03             	movups (%rbx),%xmm0
   28860:	0f 10 4b 10          	movups 0x10(%rbx),%xmm1
   28864:	0f 10 53 20          	movups 0x20(%rbx),%xmm2
   28868:	0f 10 5b 30          	movups 0x30(%rbx),%xmm3
   2886c:	0f 29 9c 24 d0 00 00 	movaps %xmm3,0xd0(%rsp)
   28873:	00 
   28874:	0f 29 94 24 c0 00 00 	movaps %xmm2,0xc0(%rsp)
   2887b:	00 
   2887c:	0f 29 8c 24 b0 00 00 	movaps %xmm1,0xb0(%rsp)
   28883:	00 
   28884:	0f 29 84 24 a0 00 00 	movaps %xmm0,0xa0(%rsp)
   2888b:	00 
   2888c:	66 83 fa 0b          	cmp    $0xb,%dx
   28890:	0f 83 ca 00 00 00    	jae    28960 <gimli::read::abbrev::Abbreviations::insert+0x480>
   28896:	49 8d 34 ef          	lea    (%r15,%rbp,8),%rsi
   2889a:	49 8d 3c ef          	lea    (%r15,%rbp,8),%rdi
   2889e:	48 83 c7 08          	add    $0x8,%rdi
   288a2:	48 29 ea             	sub    %rbp,%rdx
   288a5:	48 c1 e2 03          	shl    $0x3,%rdx
   288a9:	4c 8b 3d c0 d5 01 00 	mov    0x1d5c0(%rip),%r15        # 45e70 <memmove@GLIBC_2.2.5>
   288b0:	41 ff d7             	callq  *%r15
   288b3:	4d 89 64 ed 08       	mov    %r12,0x8(%r13,%rbp,8)
   288b8:	41 0f b7 85 32 05 00 	movzwl 0x532(%r13),%eax
   288bf:	00 
   288c0:	48 6b dd 70          	imul   $0x70,%rbp,%rbx
   288c4:	4a 8d 34 2b          	lea    (%rbx,%r13,1),%rsi
   288c8:	48 83 c6 60          	add    $0x60,%rsi
   288cc:	4a 8d 3c 2b          	lea    (%rbx,%r13,1),%rdi
   288d0:	48 81 c7 d0 00 00 00 	add    $0xd0,%rdi
   288d7:	48 29 e8             	sub    %rbp,%rax
   288da:	48 6b d0 70          	imul   $0x70,%rax,%rdx
   288de:	41 ff d7             	callq  *%r15
   288e1:	0f 28 84 24 a0 00 00 	movaps 0xa0(%rsp),%xmm0
   288e8:	00 
   288e9:	0f 28 8c 24 b0 00 00 	movaps 0xb0(%rsp),%xmm1
   288f0:	00 
   288f1:	0f 28 94 24 c0 00 00 	movaps 0xc0(%rsp),%xmm2
   288f8:	00 
   288f9:	0f 28 9c 24 d0 00 00 	movaps 0xd0(%rsp),%xmm3
   28900:	00 
   28901:	41 0f 11 44 1d 60    	movups %xmm0,0x60(%r13,%rbx,1)
   28907:	41 0f 11 4c 1d 70    	movups %xmm1,0x70(%r13,%rbx,1)
   2890d:	41 0f 11 94 1d 80 00 	movups %xmm2,0x80(%r13,%rbx,1)
   28914:	00 00 
   28916:	41 0f 11 9c 1d 90 00 	movups %xmm3,0x90(%r13,%rbx,1)
   2891d:	00 00 
   2891f:	0f 28 84 24 e0 00 00 	movaps 0xe0(%rsp),%xmm0
   28926:	00 
   28927:	41 0f 11 84 1d a0 00 	movups %xmm0,0xa0(%r13,%rbx,1)
   2892e:	00 00 
   28930:	0f 28 84 24 f0 00 00 	movaps 0xf0(%rsp),%xmm0
   28937:	00 
   28938:	41 0f 11 84 1d b0 00 	movups %xmm0,0xb0(%r13,%rbx,1)
   2893f:	00 00 
   28941:	0f 28 84 24 00 01 00 	movaps 0x100(%rsp),%xmm0
   28948:	00 
   28949:	41 0f 11 84 1d c0 00 	movups %xmm0,0xc0(%r13,%rbx,1)
   28950:	00 00 
   28952:	66 41 83 85 32 05 00 	addw   $0x1,0x532(%r13)
   28959:	00 01 
   2895b:	e9 90 0b 00 00       	jmpq   294f0 <gimli::read::abbrev::Abbreviations::insert+0x1010>
   28960:	48 8d bc 24 40 02 00 	lea    0x240(%rsp),%rdi
   28967:	00 
   28968:	48 89 ee             	mov    %rbp,%rsi
   2896b:	ff 15 b7 d5 01 00    	callq  *0x1d5b7(%rip)        # 45f28 <_GLOBAL_OFFSET_TABLE_+0x598>
   28971:	48 8b 9c 24 40 02 00 	mov    0x240(%rsp),%rbx
   28978:	00 
   28979:	48 8b 84 24 48 02 00 	mov    0x248(%rsp),%rax
   28980:	00 
   28981:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   28986:	48 8b 84 24 50 02 00 	mov    0x250(%rsp),%rax
   2898d:	00 
   2898e:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   28993:	bf 38 05 00 00       	mov    $0x538,%edi
   28998:	be 08 00 00 00       	mov    $0x8,%esi
   2899d:	ff 15 e5 d1 01 00    	callq  *0x1d1e5(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   289a3:	48 85 c0             	test   %rax,%rax
   289a6:	0f 84 c4 0c 00 00    	je     29670 <gimli::read::abbrev::Abbreviations::insert+0x1190>
   289ac:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   289b3:	48 8d 78 08          	lea    0x8(%rax),%rdi
   289b7:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
   289bc:	48 8d b4 24 40 02 00 	lea    0x240(%rsp),%rsi
   289c3:	00 
   289c4:	ba 2a 05 00 00       	mov    $0x52a,%edx
   289c9:	48 89 c5             	mov    %rax,%rbp
   289cc:	48 89 04 24          	mov    %rax,(%rsp)
   289d0:	ff 15 2a d3 01 00    	callq  *0x1d32a(%rip)        # 45d00 <memcpy@GLIBC_2.14>
   289d6:	66 c7 85 32 05 00 00 	movw   $0x0,0x532(%rbp)
   289dd:	00 00 
   289df:	49 8b 44 dd 08       	mov    0x8(%r13,%rbx,8),%rax
   289e4:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   289e9:	48 6b eb 70          	imul   $0x70,%rbx,%rbp
   289ed:	41 0f 10 84 2d c0 00 	movups 0xc0(%r13,%rbp,1),%xmm0
   289f4:	00 00 
   289f6:	0f 29 84 24 90 00 00 	movaps %xmm0,0x90(%rsp)
   289fd:	00 
   289fe:	41 0f 10 84 2d b0 00 	movups 0xb0(%r13,%rbp,1),%xmm0
   28a05:	00 00 
   28a07:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
   28a0e:	00 
   28a0f:	41 0f 10 84 2d a0 00 	movups 0xa0(%r13,%rbp,1),%xmm0
   28a16:	00 00 
   28a18:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
   28a1d:	41 0f 10 44 2d 60    	movups 0x60(%r13,%rbp,1),%xmm0
   28a23:	41 0f 10 4c 2d 70    	movups 0x70(%r13,%rbp,1),%xmm1
   28a29:	41 0f 10 94 2d 80 00 	movups 0x80(%r13,%rbp,1),%xmm2
   28a30:	00 00 
   28a32:	41 0f 10 9c 2d 90 00 	movups 0x90(%r13,%rbp,1),%xmm3
   28a39:	00 00 
   28a3b:	0f 29 5c 24 60       	movaps %xmm3,0x60(%rsp)
   28a40:	0f 29 54 24 50       	movaps %xmm2,0x50(%rsp)
   28a45:	0f 29 4c 24 40       	movaps %xmm1,0x40(%rsp)
   28a4a:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
   28a4f:	41 0f b7 85 32 05 00 	movzwl 0x532(%r13),%eax
   28a56:	00 
   28a57:	48 89 d9             	mov    %rbx,%rcx
   28a5a:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
   28a5f:	48 f7 d3             	not    %rbx
   28a62:	48 01 c3             	add    %rax,%rbx
   28a65:	49 8d 34 cf          	lea    (%r15,%rcx,8),%rsi
   28a69:	48 83 c6 08          	add    $0x8,%rsi
   28a6d:	48 8d 14 dd 00 00 00 	lea    0x0(,%rbx,8),%rdx
   28a74:	00 
   28a75:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   28a7a:	4c 8b 3d 7f d2 01 00 	mov    0x1d27f(%rip),%r15        # 45d00 <memcpy@GLIBC_2.14>
   28a81:	41 ff d7             	callq  *%r15
   28a84:	48 8d 34 2d d0 00 00 	lea    0xd0(,%rbp,1),%rsi
   28a8b:	00 
   28a8c:	4c 01 ee             	add    %r13,%rsi
   28a8f:	48 8b 2c 24          	mov    (%rsp),%rbp
   28a93:	48 8d 7d 60          	lea    0x60(%rbp),%rdi
   28a97:	48 6b d3 70          	imul   $0x70,%rbx,%rdx
   28a9b:	41 ff d7             	callq  *%r15
   28a9e:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   28aa3:	66 41 89 85 32 05 00 	mov    %ax,0x532(%r13)
   28aaa:	00 
   28aab:	66 89 9d 32 05 00 00 	mov    %bx,0x532(%rbp)
   28ab2:	48 83 7c 24 20 00    	cmpq   $0x0,0x20(%rsp)
   28ab8:	48 89 eb             	mov    %rbp,%rbx
   28abb:	49 0f 44 dd          	cmove  %r13,%rbx
   28abf:	0f b7 93 32 05 00 00 	movzwl 0x532(%rbx),%edx
   28ac6:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
   28acb:	4a 8d 34 fb          	lea    (%rbx,%r15,8),%rsi
   28acf:	48 83 c6 08          	add    $0x8,%rsi
   28ad3:	4a 8d 3c fb          	lea    (%rbx,%r15,8),%rdi
   28ad7:	48 83 c7 10          	add    $0x10,%rdi
   28adb:	4c 29 fa             	sub    %r15,%rdx
   28ade:	48 c1 e2 03          	shl    $0x3,%rdx
   28ae2:	48 8b 2d 87 d3 01 00 	mov    0x1d387(%rip),%rbp        # 45e70 <memmove@GLIBC_2.2.5>
   28ae9:	ff d5                	callq  *%rbp
   28aeb:	48 89 e9             	mov    %rbp,%rcx
   28aee:	4e 89 64 fb 08       	mov    %r12,0x8(%rbx,%r15,8)
   28af3:	0f b7 83 32 05 00 00 	movzwl 0x532(%rbx),%eax
   28afa:	49 6b ef 70          	imul   $0x70,%r15,%rbp
   28afe:	48 8d 34 2b          	lea    (%rbx,%rbp,1),%rsi
   28b02:	48 83 c6 60          	add    $0x60,%rsi
   28b06:	48 8d 3c 2b          	lea    (%rbx,%rbp,1),%rdi
   28b0a:	48 81 c7 d0 00 00 00 	add    $0xd0,%rdi
   28b11:	4c 29 f8             	sub    %r15,%rax
   28b14:	48 6b d0 70          	imul   $0x70,%rax,%rdx
   28b18:	ff d1                	callq  *%rcx
   28b1a:	0f 28 84 24 a0 00 00 	movaps 0xa0(%rsp),%xmm0
   28b21:	00 
   28b22:	0f 28 8c 24 b0 00 00 	movaps 0xb0(%rsp),%xmm1
   28b29:	00 
   28b2a:	0f 28 94 24 c0 00 00 	movaps 0xc0(%rsp),%xmm2
   28b31:	00 
   28b32:	0f 28 9c 24 d0 00 00 	movaps 0xd0(%rsp),%xmm3
   28b39:	00 
   28b3a:	0f 11 44 2b 60       	movups %xmm0,0x60(%rbx,%rbp,1)
   28b3f:	0f 11 4c 2b 70       	movups %xmm1,0x70(%rbx,%rbp,1)
   28b44:	0f 11 94 2b 80 00 00 	movups %xmm2,0x80(%rbx,%rbp,1)
   28b4b:	00 
   28b4c:	0f 11 9c 2b 90 00 00 	movups %xmm3,0x90(%rbx,%rbp,1)
   28b53:	00 
   28b54:	0f 28 84 24 e0 00 00 	movaps 0xe0(%rsp),%xmm0
   28b5b:	00 
   28b5c:	0f 11 84 2b a0 00 00 	movups %xmm0,0xa0(%rbx,%rbp,1)
   28b63:	00 
   28b64:	0f 28 84 24 f0 00 00 	movaps 0xf0(%rsp),%xmm0
   28b6b:	00 
   28b6c:	0f 11 84 2b b0 00 00 	movups %xmm0,0xb0(%rbx,%rbp,1)
   28b73:	00 
   28b74:	0f 28 84 24 00 01 00 	movaps 0x100(%rsp),%xmm0
   28b7b:	00 
   28b7c:	0f 11 84 2b c0 00 00 	movups %xmm0,0xc0(%rbx,%rbp,1)
   28b83:	00 
   28b84:	66 83 83 32 05 00 00 	addw   $0x1,0x532(%rbx)
   28b8b:	01 
   28b8c:	0f 28 84 24 90 00 00 	movaps 0x90(%rsp),%xmm0
   28b93:	00 
   28b94:	0f 29 84 24 a0 01 00 	movaps %xmm0,0x1a0(%rsp)
   28b9b:	00 
   28b9c:	0f 28 84 24 80 00 00 	movaps 0x80(%rsp),%xmm0
   28ba3:	00 
   28ba4:	0f 29 84 24 90 01 00 	movaps %xmm0,0x190(%rsp)
   28bab:	00 
   28bac:	0f 28 44 24 70       	movaps 0x70(%rsp),%xmm0
   28bb1:	0f 29 84 24 80 01 00 	movaps %xmm0,0x180(%rsp)
   28bb8:	00 
   28bb9:	0f 28 44 24 30       	movaps 0x30(%rsp),%xmm0
   28bbe:	0f 28 4c 24 40       	movaps 0x40(%rsp),%xmm1
   28bc3:	0f 28 54 24 50       	movaps 0x50(%rsp),%xmm2
   28bc8:	0f 28 5c 24 60       	movaps 0x60(%rsp),%xmm3
   28bcd:	0f 29 9c 24 70 01 00 	movaps %xmm3,0x170(%rsp)
   28bd4:	00 
   28bd5:	0f 29 94 24 60 01 00 	movaps %xmm2,0x160(%rsp)
   28bdc:	00 
   28bdd:	0f 29 8c 24 50 01 00 	movaps %xmm1,0x150(%rsp)
   28be4:	00 
   28be5:	0f 29 84 24 40 01 00 	movaps %xmm0,0x140(%rsp)
   28bec:	00 
   28bed:	49 8b 45 00          	mov    0x0(%r13),%rax
   28bf1:	45 31 e4             	xor    %r12d,%r12d
   28bf4:	48 85 c0             	test   %rax,%rax
   28bf7:	0f 84 e2 05 00 00    	je     291df <gimli::read::abbrev::Abbreviations::insert+0xcff>
   28bfd:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   28c02:	4c 89 b4 24 b8 01 00 	mov    %r14,0x1b8(%rsp)
   28c09:	00 
   28c0a:	e9 93 00 00 00       	jmpq   28ca2 <gimli::read::abbrev::Abbreviations::insert+0x7c2>
   28c0f:	0f 28 84 24 00 01 00 	movaps 0x100(%rsp),%xmm0
   28c16:	00 
   28c17:	0f 29 84 24 a0 01 00 	movaps %xmm0,0x1a0(%rsp)
   28c1e:	00 
   28c1f:	0f 28 84 24 f0 00 00 	movaps 0xf0(%rsp),%xmm0
   28c26:	00 
   28c27:	0f 29 84 24 90 01 00 	movaps %xmm0,0x190(%rsp)
   28c2e:	00 
   28c2f:	0f 28 84 24 e0 00 00 	movaps 0xe0(%rsp),%xmm0
   28c36:	00 
   28c37:	0f 29 84 24 80 01 00 	movaps %xmm0,0x180(%rsp)
   28c3e:	00 
   28c3f:	0f 28 84 24 a0 00 00 	movaps 0xa0(%rsp),%xmm0
   28c46:	00 
   28c47:	0f 28 8c 24 b0 00 00 	movaps 0xb0(%rsp),%xmm1
   28c4e:	00 
   28c4f:	0f 28 94 24 c0 00 00 	movaps 0xc0(%rsp),%xmm2
   28c56:	00 
   28c57:	0f 28 9c 24 d0 00 00 	movaps 0xd0(%rsp),%xmm3
   28c5e:	00 
   28c5f:	0f 29 9c 24 70 01 00 	movaps %xmm3,0x170(%rsp)
   28c66:	00 
   28c67:	0f 29 94 24 60 01 00 	movaps %xmm2,0x160(%rsp)
   28c6e:	00 
   28c6f:	0f 29 8c 24 50 01 00 	movaps %xmm1,0x150(%rsp)
   28c76:	00 
   28c77:	0f 29 84 24 40 01 00 	movaps %xmm0,0x140(%rsp)
   28c7e:	00 
   28c7f:	49 8b 45 00          	mov    0x0(%r13),%rax
   28c83:	48 89 1c 24          	mov    %rbx,(%rsp)
   28c87:	48 85 c0             	test   %rax,%rax
   28c8a:	4c 8b b4 24 b8 01 00 	mov    0x1b8(%rsp),%r14
   28c91:	00 
   28c92:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   28c97:	4c 8b 64 24 20       	mov    0x20(%rsp),%r12
   28c9c:	0f 84 46 05 00 00    	je     291e8 <gimli::read::abbrev::Abbreviations::insert+0xd08>
   28ca2:	41 0f b7 9d 30 05 00 	movzwl 0x530(%r13),%ebx
   28ca9:	00 
   28caa:	49 89 c5             	mov    %rax,%r13
   28cad:	0f 28 84 24 a0 01 00 	movaps 0x1a0(%rsp),%xmm0
   28cb4:	00 
   28cb5:	0f 29 84 24 90 00 00 	movaps %xmm0,0x90(%rsp)
   28cbc:	00 
   28cbd:	0f 28 84 24 90 01 00 	movaps 0x190(%rsp),%xmm0
   28cc4:	00 
   28cc5:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
   28ccc:	00 
   28ccd:	0f 28 84 24 80 01 00 	movaps 0x180(%rsp),%xmm0
   28cd4:	00 
   28cd5:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
   28cda:	0f 28 84 24 40 01 00 	movaps 0x140(%rsp),%xmm0
   28ce1:	00 
   28ce2:	0f 28 8c 24 50 01 00 	movaps 0x150(%rsp),%xmm1
   28ce9:	00 
   28cea:	0f 28 94 24 60 01 00 	movaps 0x160(%rsp),%xmm2
   28cf1:	00 
   28cf2:	0f 28 9c 24 70 01 00 	movaps 0x170(%rsp),%xmm3
   28cf9:	00 
   28cfa:	0f 29 5c 24 60       	movaps %xmm3,0x60(%rsp)
   28cff:	0f 29 54 24 50       	movaps %xmm2,0x50(%rsp)
   28d04:	0f 29 4c 24 40       	movaps %xmm1,0x40(%rsp)
   28d09:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
   28d0e:	0f b7 a8 32 05 00 00 	movzwl 0x532(%rax),%ebp
   28d15:	48 83 fd 0b          	cmp    $0xb,%rbp
   28d19:	0f 82 db 07 00 00    	jb     294fa <gimli::read::abbrev::Abbreviations::insert+0x101a>
   28d1f:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   28d24:	48 8d bc 24 40 02 00 	lea    0x240(%rsp),%rdi
   28d2b:	00 
   28d2c:	48 89 de             	mov    %rbx,%rsi
   28d2f:	ff 15 f3 d1 01 00    	callq  *0x1d1f3(%rip)        # 45f28 <_GLOBAL_OFFSET_TABLE_+0x598>
   28d35:	48 8b ac 24 40 02 00 	mov    0x240(%rsp),%rbp
   28d3c:	00 
   28d3d:	48 8b 84 24 48 02 00 	mov    0x248(%rsp),%rax
   28d44:	00 
   28d45:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   28d4a:	48 8b 84 24 50 02 00 	mov    0x250(%rsp),%rax
   28d51:	00 
   28d52:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   28d57:	bf 98 05 00 00       	mov    $0x598,%edi
   28d5c:	be 08 00 00 00       	mov    $0x8,%esi
   28d61:	ff 15 21 ce 01 00    	callq  *0x1ce21(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   28d67:	48 85 c0             	test   %rax,%rax
   28d6a:	0f 84 17 09 00 00    	je     29687 <gimli::read::abbrev::Abbreviations::insert+0x11a7>
   28d70:	49 89 c7             	mov    %rax,%r15
   28d73:	49 83 c4 01          	add    $0x1,%r12
   28d77:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
   28d7c:	48 89 c3             	mov    %rax,%rbx
   28d7f:	49 c7 07 00 00 00 00 	movq   $0x0,(%r15)
   28d86:	48 8d 78 08          	lea    0x8(%rax),%rdi
   28d8a:	48 89 bc 24 c8 01 00 	mov    %rdi,0x1c8(%rsp)
   28d91:	00 
   28d92:	ba 2a 05 00 00       	mov    $0x52a,%edx
   28d97:	48 8d b4 24 40 02 00 	lea    0x240(%rsp),%rsi
   28d9e:	00 
   28d9f:	48 8b 05 5a cf 01 00 	mov    0x1cf5a(%rip),%rax        # 45d00 <memcpy@GLIBC_2.14>
   28da6:	ff d0                	callq  *%rax
   28da8:	66 41 c7 87 32 05 00 	movw   $0x0,0x532(%r15)
   28daf:	00 00 00 
   28db2:	0f 10 84 24 dc 01 00 	movups 0x1dc(%rsp),%xmm0
   28db9:	00 
   28dba:	0f 10 8c 24 ec 01 00 	movups 0x1ec(%rsp),%xmm1
   28dc1:	00 
   28dc2:	0f 10 94 24 fc 01 00 	movups 0x1fc(%rsp),%xmm2
   28dc9:	00 
   28dca:	0f 10 9c 24 0c 02 00 	movups 0x20c(%rsp),%xmm3
   28dd1:	00 
   28dd2:	41 0f 11 87 34 05 00 	movups %xmm0,0x534(%r15)
   28dd9:	00 
   28dda:	41 0f 11 8f 44 05 00 	movups %xmm1,0x544(%r15)
   28de1:	00 
   28de2:	41 0f 11 97 54 05 00 	movups %xmm2,0x554(%r15)
   28de9:	00 
   28dea:	41 0f 11 9f 64 05 00 	movups %xmm3,0x564(%r15)
   28df1:	00 
   28df2:	0f 10 84 24 1c 02 00 	movups 0x21c(%rsp),%xmm0
   28df9:	00 
   28dfa:	41 0f 11 87 74 05 00 	movups %xmm0,0x574(%r15)
   28e01:	00 
   28e02:	0f 10 84 24 2c 02 00 	movups 0x22c(%rsp),%xmm0
   28e09:	00 
   28e0a:	41 0f 11 87 84 05 00 	movups %xmm0,0x584(%r15)
   28e11:	00 
   28e12:	8b 84 24 3c 02 00 00 	mov    0x23c(%rsp),%eax
   28e19:	41 89 87 94 05 00 00 	mov    %eax,0x594(%r15)
   28e20:	49 8b 44 ed 08       	mov    0x8(%r13,%rbp,8),%rax
   28e25:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   28e2a:	4c 6b f5 70          	imul   $0x70,%rbp,%r14
   28e2e:	48 89 e8             	mov    %rbp,%rax
   28e31:	48 89 ac 24 c0 01 00 	mov    %rbp,0x1c0(%rsp)
   28e38:	00 
   28e39:	43 0f 10 84 35 c0 00 	movups 0xc0(%r13,%r14,1),%xmm0
   28e40:	00 00 
   28e42:	0f 29 84 24 a0 02 00 	movaps %xmm0,0x2a0(%rsp)
   28e49:	00 
   28e4a:	43 0f 10 84 35 b0 00 	movups 0xb0(%r13,%r14,1),%xmm0
   28e51:	00 00 
   28e53:	0f 29 84 24 90 02 00 	movaps %xmm0,0x290(%rsp)
   28e5a:	00 
   28e5b:	43 0f 10 84 35 a0 00 	movups 0xa0(%r13,%r14,1),%xmm0
   28e62:	00 00 
   28e64:	0f 29 84 24 80 02 00 	movaps %xmm0,0x280(%rsp)
   28e6b:	00 
   28e6c:	43 0f 10 44 35 60    	movups 0x60(%r13,%r14,1),%xmm0
   28e72:	43 0f 10 4c 35 70    	movups 0x70(%r13,%r14,1),%xmm1
   28e78:	43 0f 10 94 35 80 00 	movups 0x80(%r13,%r14,1),%xmm2
   28e7f:	00 00 
   28e81:	43 0f 10 9c 35 90 00 	movups 0x90(%r13,%r14,1),%xmm3
   28e88:	00 00 
   28e8a:	0f 29 9c 24 70 02 00 	movaps %xmm3,0x270(%rsp)
   28e91:	00 
   28e92:	0f 29 94 24 60 02 00 	movaps %xmm2,0x260(%rsp)
   28e99:	00 
   28e9a:	0f 29 8c 24 50 02 00 	movaps %xmm1,0x250(%rsp)
   28ea1:	00 
   28ea2:	0f 29 84 24 40 02 00 	movaps %xmm0,0x240(%rsp)
   28ea9:	00 
   28eaa:	41 0f b7 ad 32 05 00 	movzwl 0x532(%r13),%ebp
   28eb1:	00 
   28eb2:	49 89 c4             	mov    %rax,%r12
   28eb5:	49 f7 d4             	not    %r12
   28eb8:	49 01 ec             	add    %rbp,%r12
   28ebb:	48 8d 34 c5 10 00 00 	lea    0x10(,%rax,8),%rsi
   28ec2:	00 
   28ec3:	4c 01 ee             	add    %r13,%rsi
   28ec6:	4a 8d 14 e5 00 00 00 	lea    0x0(,%r12,8),%rdx
   28ecd:	00 
   28ece:	48 8b bc 24 c8 01 00 	mov    0x1c8(%rsp),%rdi
   28ed5:	00 
   28ed6:	ff 15 24 ce 01 00    	callq  *0x1ce24(%rip)        # 45d00 <memcpy@GLIBC_2.14>
   28edc:	4b 8d 34 2e          	lea    (%r14,%r13,1),%rsi
   28ee0:	48 81 c6 d0 00 00 00 	add    $0xd0,%rsi
   28ee7:	49 8d 7f 60          	lea    0x60(%r15),%rdi
   28eeb:	49 6b d4 70          	imul   $0x70,%r12,%rdx
   28eef:	4c 8b 35 0a ce 01 00 	mov    0x1ce0a(%rip),%r14        # 45d00 <memcpy@GLIBC_2.14>
   28ef6:	41 ff d6             	callq  *%r14
   28ef9:	48 8b 84 24 c0 01 00 	mov    0x1c0(%rsp),%rax
   28f00:	00 
   28f01:	66 41 89 85 32 05 00 	mov    %ax,0x532(%r13)
   28f08:	00 
   28f09:	66 45 89 a7 32 05 00 	mov    %r12w,0x532(%r15)
   28f10:	00 
   28f11:	0f 28 84 24 a0 02 00 	movaps 0x2a0(%rsp),%xmm0
   28f18:	00 
   28f19:	0f 29 84 24 00 01 00 	movaps %xmm0,0x100(%rsp)
   28f20:	00 
   28f21:	0f 28 84 24 90 02 00 	movaps 0x290(%rsp),%xmm0
   28f28:	00 
   28f29:	0f 29 84 24 f0 00 00 	movaps %xmm0,0xf0(%rsp)
   28f30:	00 
   28f31:	0f 28 84 24 80 02 00 	movaps 0x280(%rsp),%xmm0
   28f38:	00 
   28f39:	0f 29 84 24 e0 00 00 	movaps %xmm0,0xe0(%rsp)
   28f40:	00 
   28f41:	0f 28 84 24 40 02 00 	movaps 0x240(%rsp),%xmm0
   28f48:	00 
   28f49:	0f 28 8c 24 50 02 00 	movaps 0x250(%rsp),%xmm1
   28f50:	00 
   28f51:	0f 28 94 24 60 02 00 	movaps 0x260(%rsp),%xmm2
   28f58:	00 
   28f59:	0f 28 9c 24 70 02 00 	movaps 0x270(%rsp),%xmm3
   28f60:	00 
   28f61:	0f 29 9c 24 d0 00 00 	movaps %xmm3,0xd0(%rsp)
   28f68:	00 
   28f69:	0f 29 94 24 c0 00 00 	movaps %xmm2,0xc0(%rsp)
   28f70:	00 
   28f71:	0f 29 8c 24 b0 00 00 	movaps %xmm1,0xb0(%rsp)
   28f78:	00 
   28f79:	0f 29 84 24 a0 00 00 	movaps %xmm0,0xa0(%rsp)
   28f80:	00 
   28f81:	48 8d 34 c5 40 05 00 	lea    0x540(,%rax,8),%rsi
   28f88:	00 
   28f89:	4c 01 ee             	add    %r13,%rsi
   28f8c:	49 8d bf 38 05 00 00 	lea    0x538(%r15),%rdi
   28f93:	48 29 c5             	sub    %rax,%rbp
   28f96:	48 c1 e5 03          	shl    $0x3,%rbp
   28f9a:	48 89 ea             	mov    %rbp,%rdx
   28f9d:	41 ff d6             	callq  *%r14
   28fa0:	31 c9                	xor    %ecx,%ecx
   28fa2:	31 c0                	xor    %eax,%eax
   28fa4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   28fab:	00 00 00 
   28fae:	66 90                	xchg   %ax,%ax
   28fb0:	4c 39 e1             	cmp    %r12,%rcx
   28fb3:	48 83 d0 00          	adc    $0x0,%rax
   28fb7:	48 8b 94 cb 38 05 00 	mov    0x538(%rbx,%rcx,8),%rdx
   28fbe:	00 
   28fbf:	48 89 1a             	mov    %rbx,(%rdx)
   28fc2:	66 89 8a 30 05 00 00 	mov    %cx,0x530(%rdx)
   28fc9:	4c 39 e0             	cmp    %r12,%rax
   28fcc:	77 08                	ja     28fd6 <gimli::read::abbrev::Abbreviations::insert+0xaf6>
   28fce:	4c 39 e1             	cmp    %r12,%rcx
   28fd1:	48 89 c1             	mov    %rax,%rcx
   28fd4:	72 da                	jb     28fb0 <gimli::read::abbrev::Abbreviations::insert+0xad0>
   28fd6:	0f 28 84 24 00 01 00 	movaps 0x100(%rsp),%xmm0
   28fdd:	00 
   28fde:	0f 29 84 24 a0 02 00 	movaps %xmm0,0x2a0(%rsp)
   28fe5:	00 
   28fe6:	0f 28 8c 24 f0 00 00 	movaps 0xf0(%rsp),%xmm1
   28fed:	00 
   28fee:	0f 29 8c 24 90 02 00 	movaps %xmm1,0x290(%rsp)
   28ff5:	00 
   28ff6:	0f 28 94 24 e0 00 00 	movaps 0xe0(%rsp),%xmm2
   28ffd:	00 
   28ffe:	0f 29 94 24 80 02 00 	movaps %xmm2,0x280(%rsp)
   29005:	00 
   29006:	0f 28 9c 24 a0 00 00 	movaps 0xa0(%rsp),%xmm3
   2900d:	00 
   2900e:	0f 28 a4 24 b0 00 00 	movaps 0xb0(%rsp),%xmm4
   29015:	00 
   29016:	0f 28 ac 24 c0 00 00 	movaps 0xc0(%rsp),%xmm5
   2901d:	00 
   2901e:	0f 28 b4 24 d0 00 00 	movaps 0xd0(%rsp),%xmm6
   29025:	00 
   29026:	0f 29 b4 24 70 02 00 	movaps %xmm6,0x270(%rsp)
   2902d:	00 
   2902e:	0f 29 ac 24 60 02 00 	movaps %xmm5,0x260(%rsp)
   29035:	00 
   29036:	0f 29 a4 24 50 02 00 	movaps %xmm4,0x250(%rsp)
   2903d:	00 
   2903e:	0f 29 9c 24 40 02 00 	movaps %xmm3,0x240(%rsp)
   29045:	00 
   29046:	0f 29 84 24 00 01 00 	movaps %xmm0,0x100(%rsp)
   2904d:	00 
   2904e:	0f 29 8c 24 f0 00 00 	movaps %xmm1,0xf0(%rsp)
   29055:	00 
   29056:	0f 29 94 24 e0 00 00 	movaps %xmm2,0xe0(%rsp)
   2905d:	00 
   2905e:	0f 29 b4 24 d0 00 00 	movaps %xmm6,0xd0(%rsp)
   29065:	00 
   29066:	0f 29 ac 24 c0 00 00 	movaps %xmm5,0xc0(%rsp)
   2906d:	00 
   2906e:	0f 29 a4 24 b0 00 00 	movaps %xmm4,0xb0(%rsp)
   29075:	00 
   29076:	0f 29 9c 24 a0 00 00 	movaps %xmm3,0xa0(%rsp)
   2907d:	00 
   2907e:	48 83 7c 24 10 00    	cmpq   $0x0,0x10(%rsp)
   29084:	4d 0f 44 fd          	cmove  %r13,%r15
   29088:	41 0f b7 97 32 05 00 	movzwl 0x532(%r15),%edx
   2908f:	00 
   29090:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
   29095:	49 8d 6c 24 01       	lea    0x1(%r12),%rbp
   2909a:	4b 8d 34 e7          	lea    (%r15,%r12,8),%rsi
   2909e:	48 81 c6 40 05 00 00 	add    $0x540,%rsi
   290a5:	4b 8d 3c e7          	lea    (%r15,%r12,8),%rdi
   290a9:	48 81 c7 48 05 00 00 	add    $0x548,%rdi
   290b0:	4c 29 e2             	sub    %r12,%rdx
   290b3:	48 c1 e2 03          	shl    $0x3,%rdx
   290b7:	4c 8b 35 b2 cd 01 00 	mov    0x1cdb2(%rip),%r14        # 45e70 <memmove@GLIBC_2.2.5>
   290be:	41 ff d6             	callq  *%r14
   290c1:	48 8b 04 24          	mov    (%rsp),%rax
   290c5:	4b 89 84 e7 40 05 00 	mov    %rax,0x540(%r15,%r12,8)
   290cc:	00 
   290cd:	41 0f b7 97 32 05 00 	movzwl 0x532(%r15),%edx
   290d4:	00 
   290d5:	4b 8d 34 e7          	lea    (%r15,%r12,8),%rsi
   290d9:	48 83 c6 08          	add    $0x8,%rsi
   290dd:	4b 8d 3c e7          	lea    (%r15,%r12,8),%rdi
   290e1:	48 83 c7 10          	add    $0x10,%rdi
   290e5:	4c 29 e2             	sub    %r12,%rdx
   290e8:	48 c1 e2 03          	shl    $0x3,%rdx
   290ec:	41 ff d6             	callq  *%r14
   290ef:	4c 89 f1             	mov    %r14,%rcx
   290f2:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   290f7:	4b 89 44 e7 08       	mov    %rax,0x8(%r15,%r12,8)
   290fc:	41 0f b7 87 32 05 00 	movzwl 0x532(%r15),%eax
   29103:	00 
   29104:	4d 6b f4 70          	imul   $0x70,%r12,%r14
   29108:	4b 8d 34 37          	lea    (%r15,%r14,1),%rsi
   2910c:	48 83 c6 60          	add    $0x60,%rsi
   29110:	4b 8d 3c 37          	lea    (%r15,%r14,1),%rdi
   29114:	48 81 c7 d0 00 00 00 	add    $0xd0,%rdi
   2911b:	4c 29 e0             	sub    %r12,%rax
   2911e:	48 6b d0 70          	imul   $0x70,%rax,%rdx
   29122:	ff d1                	callq  *%rcx
   29124:	0f 28 44 24 30       	movaps 0x30(%rsp),%xmm0
   29129:	0f 28 4c 24 40       	movaps 0x40(%rsp),%xmm1
   2912e:	0f 28 54 24 50       	movaps 0x50(%rsp),%xmm2
   29133:	0f 28 5c 24 60       	movaps 0x60(%rsp),%xmm3
   29138:	43 0f 11 44 37 60    	movups %xmm0,0x60(%r15,%r14,1)
   2913e:	43 0f 11 4c 37 70    	movups %xmm1,0x70(%r15,%r14,1)
   29144:	43 0f 11 94 37 80 00 	movups %xmm2,0x80(%r15,%r14,1)
   2914b:	00 00 
   2914d:	43 0f 11 9c 37 90 00 	movups %xmm3,0x90(%r15,%r14,1)
   29154:	00 00 
   29156:	0f 28 44 24 70       	movaps 0x70(%rsp),%xmm0
   2915b:	43 0f 11 84 37 a0 00 	movups %xmm0,0xa0(%r15,%r14,1)
   29162:	00 00 
   29164:	0f 28 84 24 80 00 00 	movaps 0x80(%rsp),%xmm0
   2916b:	00 
   2916c:	43 0f 11 84 37 b0 00 	movups %xmm0,0xb0(%r15,%r14,1)
   29173:	00 00 
   29175:	0f 28 84 24 90 00 00 	movaps 0x90(%rsp),%xmm0
   2917c:	00 
   2917d:	43 0f 11 84 37 c0 00 	movups %xmm0,0xc0(%r15,%r14,1)
   29184:	00 00 
   29186:	41 0f b7 87 32 05 00 	movzwl 0x532(%r15),%eax
   2918d:	00 
   2918e:	83 c0 01             	add    $0x1,%eax
   29191:	66 41 89 87 32 05 00 	mov    %ax,0x532(%r15)
   29198:	00 
   29199:	0f b7 c0             	movzwl %ax,%eax
   2919c:	48 39 c5             	cmp    %rax,%rbp
   2919f:	0f 87 6a fa ff ff    	ja     28c0f <gimli::read::abbrev::Abbreviations::insert+0x72f>
   291a5:	48 89 e9             	mov    %rbp,%rcx
   291a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   291af:	00 
   291b0:	48 39 c5             	cmp    %rax,%rbp
   291b3:	48 83 d1 00          	adc    $0x0,%rcx
   291b7:	49 8b 94 ef 38 05 00 	mov    0x538(%r15,%rbp,8),%rdx
   291be:	00 
   291bf:	4c 89 3a             	mov    %r15,(%rdx)
   291c2:	66 89 aa 30 05 00 00 	mov    %bp,0x530(%rdx)
   291c9:	48 39 c1             	cmp    %rax,%rcx
   291cc:	0f 87 3d fa ff ff    	ja     28c0f <gimli::read::abbrev::Abbreviations::insert+0x72f>
   291d2:	48 39 c5             	cmp    %rax,%rbp
   291d5:	48 89 cd             	mov    %rcx,%rbp
   291d8:	72 d6                	jb     291b0 <gimli::read::abbrev::Abbreviations::insert+0xcd0>
   291da:	e9 30 fa ff ff       	jmpq   28c0f <gimli::read::abbrev::Abbreviations::insert+0x72f>
   291df:	48 8b 1c 24          	mov    (%rsp),%rbx
   291e3:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   291e8:	0f 28 84 24 a0 01 00 	movaps 0x1a0(%rsp),%xmm0
   291ef:	00 
   291f0:	0f 29 84 24 90 00 00 	movaps %xmm0,0x90(%rsp)
   291f7:	00 
   291f8:	0f 28 84 24 90 01 00 	movaps 0x190(%rsp),%xmm0
   291ff:	00 
   29200:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
   29207:	00 
   29208:	0f 28 84 24 80 01 00 	movaps 0x180(%rsp),%xmm0
   2920f:	00 
   29210:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
   29215:	0f 28 84 24 40 01 00 	movaps 0x140(%rsp),%xmm0
   2921c:	00 
   2921d:	0f 28 8c 24 50 01 00 	movaps 0x150(%rsp),%xmm1
   29224:	00 
   29225:	0f 28 94 24 60 01 00 	movaps 0x160(%rsp),%xmm2
   2922c:	00 
   2922d:	0f 28 9c 24 70 01 00 	movaps 0x170(%rsp),%xmm3
   29234:	00 
   29235:	0f 29 5c 24 60       	movaps %xmm3,0x60(%rsp)
   2923a:	0f 29 54 24 50       	movaps %xmm2,0x50(%rsp)
   2923f:	0f 29 4c 24 40       	movaps %xmm1,0x40(%rsp)
   29244:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
   29249:	4c 89 a4 24 a0 00 00 	mov    %r12,0xa0(%rsp)
   29250:	00 
   29251:	4c 89 ac 24 a8 00 00 	mov    %r13,0xa8(%rsp)
   29258:	00 
   29259:	48 89 8c 24 b0 00 00 	mov    %rcx,0xb0(%rsp)
   29260:	00 
   29261:	4c 89 e0             	mov    %r12,%rax
   29264:	4c 8d a4 24 b8 00 00 	lea    0xb8(%rsp),%r12
   2926b:	00 
   2926c:	0f 28 84 24 90 00 00 	movaps 0x90(%rsp),%xmm0
   29273:	00 
   29274:	0f 11 84 24 18 01 00 	movups %xmm0,0x118(%rsp)
   2927b:	00 
   2927c:	0f 28 84 24 80 00 00 	movaps 0x80(%rsp),%xmm0
   29283:	00 
   29284:	0f 11 84 24 08 01 00 	movups %xmm0,0x108(%rsp)
   2928b:	00 
   2928c:	0f 28 44 24 70       	movaps 0x70(%rsp),%xmm0
   29291:	0f 11 84 24 f8 00 00 	movups %xmm0,0xf8(%rsp)
   29298:	00 
   29299:	0f 28 44 24 30       	movaps 0x30(%rsp),%xmm0
   2929e:	0f 28 4c 24 40       	movaps 0x40(%rsp),%xmm1
   292a3:	0f 28 54 24 50       	movaps 0x50(%rsp),%xmm2
   292a8:	0f 28 5c 24 60       	movaps 0x60(%rsp),%xmm3
   292ad:	0f 11 9c 24 e8 00 00 	movups %xmm3,0xe8(%rsp)
   292b4:	00 
   292b5:	0f 11 94 24 d8 00 00 	movups %xmm2,0xd8(%rsp)
   292bc:	00 
   292bd:	0f 11 8c 24 c8 00 00 	movups %xmm1,0xc8(%rsp)
   292c4:	00 
   292c5:	0f 11 84 24 b8 00 00 	movups %xmm0,0xb8(%rsp)
   292cc:	00 
   292cd:	48 89 9c 24 28 01 00 	mov    %rbx,0x128(%rsp)
   292d4:	00 
   292d5:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
   292dc:	00 
   292dd:	48 8b ac 24 d0 01 00 	mov    0x1d0(%rsp),%rbp
   292e4:	00 
   292e5:	48 8b 45 00          	mov    0x0(%rbp),%rax
   292e9:	48 85 c0             	test   %rax,%rax
   292ec:	48 0f 44 e8          	cmove  %rax,%rbp
   292f0:	0f 84 a3 03 00 00    	je     29699 <gimli::read::abbrev::Abbreviations::insert+0x11b9>
   292f6:	bf 98 05 00 00       	mov    $0x598,%edi
   292fb:	be 08 00 00 00       	mov    $0x8,%esi
   29300:	ff 15 82 c8 01 00    	callq  *0x1c882(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   29306:	48 85 c0             	test   %rax,%rax
   29309:	0f 84 78 03 00 00    	je     29687 <gimli::read::abbrev::Abbreviations::insert+0x11a7>
   2930f:	48 89 c3             	mov    %rax,%rbx
   29312:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   29319:	48 89 c7             	mov    %rax,%rdi
   2931c:	48 83 c7 08          	add    $0x8,%rdi
   29320:	4c 8d bc 24 40 02 00 	lea    0x240(%rsp),%r15
   29327:	00 
   29328:	ba 2a 05 00 00       	mov    $0x52a,%edx
   2932d:	4c 89 fe             	mov    %r15,%rsi
   29330:	ff 15 ca c9 01 00    	callq  *0x1c9ca(%rip)        # 45d00 <memcpy@GLIBC_2.14>
   29336:	66 c7 83 32 05 00 00 	movw   $0x0,0x532(%rbx)
   2933d:	00 00 
   2933f:	0f 10 84 24 dc 01 00 	movups 0x1dc(%rsp),%xmm0
   29346:	00 
   29347:	0f 10 8c 24 ec 01 00 	movups 0x1ec(%rsp),%xmm1
   2934e:	00 
   2934f:	0f 10 94 24 fc 01 00 	movups 0x1fc(%rsp),%xmm2
   29356:	00 
   29357:	0f 10 9c 24 0c 02 00 	movups 0x20c(%rsp),%xmm3
   2935e:	00 
   2935f:	0f 11 83 34 05 00 00 	movups %xmm0,0x534(%rbx)
   29366:	0f 11 8b 44 05 00 00 	movups %xmm1,0x544(%rbx)
   2936d:	0f 11 93 54 05 00 00 	movups %xmm2,0x554(%rbx)
   29374:	0f 11 9b 64 05 00 00 	movups %xmm3,0x564(%rbx)
   2937b:	0f 10 84 24 1c 02 00 	movups 0x21c(%rsp),%xmm0
   29382:	00 
   29383:	0f 11 83 74 05 00 00 	movups %xmm0,0x574(%rbx)
   2938a:	0f 10 84 24 2c 02 00 	movups 0x22c(%rsp),%xmm0
   29391:	00 
   29392:	0f 11 83 84 05 00 00 	movups %xmm0,0x584(%rbx)
   29399:	8b 84 24 3c 02 00 00 	mov    0x23c(%rsp),%eax
   293a0:	89 83 94 05 00 00    	mov    %eax,0x594(%rbx)
   293a6:	48 8b 45 00          	mov    0x0(%rbp),%rax
   293aa:	48 89 83 38 05 00 00 	mov    %rax,0x538(%rbx)
   293b1:	48 89 5d 00          	mov    %rbx,0x0(%rbp)
   293b5:	48 8b 4d 08          	mov    0x8(%rbp),%rcx
   293b9:	48 8d 51 01          	lea    0x1(%rcx),%rdx
   293bd:	48 89 55 08          	mov    %rdx,0x8(%rbp)
   293c1:	48 89 18             	mov    %rbx,(%rax)
   293c4:	66 c7 80 30 05 00 00 	movw   $0x0,0x530(%rax)
   293cb:	00 00 
   293cd:	48 8b 94 24 b0 00 00 	mov    0xb0(%rsp),%rdx
   293d4:	00 
   293d5:	48 8b 84 24 28 01 00 	mov    0x128(%rsp),%rax
   293dc:	00 
   293dd:	41 0f 10 44 24 60    	movups 0x60(%r12),%xmm0
   293e3:	0f 29 84 24 a0 02 00 	movaps %xmm0,0x2a0(%rsp)
   293ea:	00 
   293eb:	41 0f 10 44 24 50    	movups 0x50(%r12),%xmm0
   293f1:	0f 29 84 24 90 02 00 	movaps %xmm0,0x290(%rsp)
   293f8:	00 
   293f9:	41 0f 10 44 24 40    	movups 0x40(%r12),%xmm0
   293ff:	0f 29 84 24 80 02 00 	movaps %xmm0,0x280(%rsp)
   29406:	00 
   29407:	41 0f 10 04 24       	movups (%r12),%xmm0
   2940c:	41 0f 10 4c 24 10    	movups 0x10(%r12),%xmm1
   29412:	41 0f 10 54 24 20    	movups 0x20(%r12),%xmm2
   29418:	41 0f 10 5c 24 30    	movups 0x30(%r12),%xmm3
   2941e:	0f 29 9c 24 70 02 00 	movaps %xmm3,0x270(%rsp)
   29425:	00 
   29426:	0f 29 94 24 60 02 00 	movaps %xmm2,0x260(%rsp)
   2942d:	00 
   2942e:	0f 29 8c 24 50 02 00 	movaps %xmm1,0x250(%rsp)
   29435:	00 
   29436:	0f 29 84 24 40 02 00 	movaps %xmm0,0x240(%rsp)
   2943d:	00 
   2943e:	48 3b 8c 24 30 01 00 	cmp    0x130(%rsp),%rcx
   29445:	00 
   29446:	0f 85 68 02 00 00    	jne    296b4 <gimli::read::abbrev::Abbreviations::insert+0x11d4>
   2944c:	0f b7 8b 32 05 00 00 	movzwl 0x532(%rbx),%ecx
   29453:	48 83 f9 0b          	cmp    $0xb,%rcx
   29457:	0f 83 72 02 00 00    	jae    296cf <gimli::read::abbrev::Abbreviations::insert+0x11ef>
   2945d:	8d 71 01             	lea    0x1(%rcx),%esi
   29460:	66 89 b3 32 05 00 00 	mov    %si,0x532(%rbx)
   29467:	48 89 54 cb 08       	mov    %rdx,0x8(%rbx,%rcx,8)
   2946c:	48 6b d1 70          	imul   $0x70,%rcx,%rdx
   29470:	0f 28 84 24 a0 02 00 	movaps 0x2a0(%rsp),%xmm0
   29477:	00 
   29478:	0f 11 84 13 c0 00 00 	movups %xmm0,0xc0(%rbx,%rdx,1)
   2947f:	00 
   29480:	0f 28 84 24 90 02 00 	movaps 0x290(%rsp),%xmm0
   29487:	00 
   29488:	0f 11 84 13 b0 00 00 	movups %xmm0,0xb0(%rbx,%rdx,1)
   2948f:	00 
   29490:	0f 28 84 24 80 02 00 	movaps 0x280(%rsp),%xmm0
   29497:	00 
   29498:	0f 11 84 13 a0 00 00 	movups %xmm0,0xa0(%rbx,%rdx,1)
   2949f:	00 
   294a0:	0f 28 84 24 40 02 00 	movaps 0x240(%rsp),%xmm0
   294a7:	00 
   294a8:	0f 28 8c 24 50 02 00 	movaps 0x250(%rsp),%xmm1
   294af:	00 
   294b0:	0f 28 94 24 60 02 00 	movaps 0x260(%rsp),%xmm2
   294b7:	00 
   294b8:	0f 28 9c 24 70 02 00 	movaps 0x270(%rsp),%xmm3
   294bf:	00 
   294c0:	0f 11 9c 13 90 00 00 	movups %xmm3,0x90(%rbx,%rdx,1)
   294c7:	00 
   294c8:	0f 11 94 13 80 00 00 	movups %xmm2,0x80(%rbx,%rdx,1)
   294cf:	00 
   294d0:	0f 11 4c 13 70       	movups %xmm1,0x70(%rbx,%rdx,1)
   294d5:	0f 11 44 13 60       	movups %xmm0,0x60(%rbx,%rdx,1)
   294da:	48 89 84 cb 40 05 00 	mov    %rax,0x540(%rbx,%rcx,8)
   294e1:	00 
   294e2:	48 83 c1 01          	add    $0x1,%rcx
   294e6:	48 89 18             	mov    %rbx,(%rax)
   294e9:	66 89 88 30 05 00 00 	mov    %cx,0x530(%rax)
   294f0:	49 83 46 28 01       	addq   $0x1,0x28(%r14)
   294f5:	e9 29 f3 ff ff       	jmpq   28823 <gimli::read::abbrev::Abbreviations::insert+0x343>
   294fa:	48 8d 34 dd 40 05 00 	lea    0x540(,%rbx,8),%rsi
   29501:	00 
   29502:	4c 01 ee             	add    %r13,%rsi
   29505:	48 8d 3c dd 48 05 00 	lea    0x548(,%rbx,8),%rdi
   2950c:	00 
   2950d:	4c 01 ef             	add    %r13,%rdi
   29510:	48 29 dd             	sub    %rbx,%rbp
   29513:	48 c1 e5 03          	shl    $0x3,%rbp
   29517:	48 89 ea             	mov    %rbp,%rdx
   2951a:	4c 8b 3d 4f c9 01 00 	mov    0x1c94f(%rip),%r15        # 45e70 <memmove@GLIBC_2.2.5>
   29521:	49 89 cc             	mov    %rcx,%r12
   29524:	41 ff d7             	callq  *%r15
   29527:	48 8b 04 24          	mov    (%rsp),%rax
   2952b:	49 89 84 dd 40 05 00 	mov    %rax,0x540(%r13,%rbx,8)
   29532:	00 
   29533:	48 8d 34 dd 08 00 00 	lea    0x8(,%rbx,8),%rsi
   2953a:	00 
   2953b:	4c 01 ee             	add    %r13,%rsi
   2953e:	48 8d 3c dd 10 00 00 	lea    0x10(,%rbx,8),%rdi
   29545:	00 
   29546:	4c 01 ef             	add    %r13,%rdi
   29549:	48 89 ea             	mov    %rbp,%rdx
   2954c:	41 ff d7             	callq  *%r15
   2954f:	4d 89 64 dd 08       	mov    %r12,0x8(%r13,%rbx,8)
   29554:	41 0f b7 85 32 05 00 	movzwl 0x532(%r13),%eax
   2955b:	00 
   2955c:	48 6b eb 70          	imul   $0x70,%rbx,%rbp
   29560:	48 8d 34 2d 60 00 00 	lea    0x60(,%rbp,1),%rsi
   29567:	00 
   29568:	4c 01 ee             	add    %r13,%rsi
   2956b:	48 8d 3c 2d d0 00 00 	lea    0xd0(,%rbp,1),%rdi
   29572:	00 
   29573:	4c 01 ef             	add    %r13,%rdi
   29576:	48 29 d8             	sub    %rbx,%rax
   29579:	48 6b d0 70          	imul   $0x70,%rax,%rdx
   2957d:	41 ff d7             	callq  *%r15
   29580:	0f 28 44 24 30       	movaps 0x30(%rsp),%xmm0
   29585:	0f 28 4c 24 40       	movaps 0x40(%rsp),%xmm1
   2958a:	0f 28 54 24 50       	movaps 0x50(%rsp),%xmm2
   2958f:	0f 28 5c 24 60       	movaps 0x60(%rsp),%xmm3
   29594:	41 0f 11 44 2d 60    	movups %xmm0,0x60(%r13,%rbp,1)
   2959a:	41 0f 11 4c 2d 70    	movups %xmm1,0x70(%r13,%rbp,1)
   295a0:	41 0f 11 94 2d 80 00 	movups %xmm2,0x80(%r13,%rbp,1)
   295a7:	00 00 
   295a9:	41 0f 11 9c 2d 90 00 	movups %xmm3,0x90(%r13,%rbp,1)
   295b0:	00 00 
   295b2:	0f 28 44 24 70       	movaps 0x70(%rsp),%xmm0
   295b7:	41 0f 11 84 2d a0 00 	movups %xmm0,0xa0(%r13,%rbp,1)
   295be:	00 00 
   295c0:	0f 28 84 24 80 00 00 	movaps 0x80(%rsp),%xmm0
   295c7:	00 
   295c8:	41 0f 11 84 2d b0 00 	movups %xmm0,0xb0(%r13,%rbp,1)
   295cf:	00 00 
   295d1:	0f 28 84 24 90 00 00 	movaps 0x90(%rsp),%xmm0
   295d8:	00 
   295d9:	41 0f 11 84 2d c0 00 	movups %xmm0,0xc0(%r13,%rbp,1)
   295e0:	00 00 
   295e2:	41 0f b7 85 32 05 00 	movzwl 0x532(%r13),%eax
   295e9:	00 
   295ea:	83 c0 01             	add    $0x1,%eax
   295ed:	66 41 89 85 32 05 00 	mov    %ax,0x532(%r13)
   295f4:	00 
   295f5:	66 39 c3             	cmp    %ax,%bx
   295f8:	0f 83 f2 fe ff ff    	jae    294f0 <gimli::read::abbrev::Abbreviations::insert+0x1010>
   295fe:	48 89 da             	mov    %rbx,%rdx
   29601:	48 83 c3 01          	add    $0x1,%rbx
   29605:	0f b7 c0             	movzwl %ax,%eax
   29608:	48 39 c3             	cmp    %rax,%rbx
   2960b:	48 89 d9             	mov    %rbx,%rcx
   2960e:	48 83 d1 00          	adc    $0x0,%rcx
   29612:	49 8b 94 d5 40 05 00 	mov    0x540(%r13,%rdx,8),%rdx
   29619:	00 
   2961a:	4c 89 2a             	mov    %r13,(%rdx)
   2961d:	66 89 9a 30 05 00 00 	mov    %bx,0x530(%rdx)
   29624:	48 39 c1             	cmp    %rax,%rcx
   29627:	0f 87 c3 fe ff ff    	ja     294f0 <gimli::read::abbrev::Abbreviations::insert+0x1010>
   2962d:	48 39 c3             	cmp    %rax,%rbx
   29630:	0f 83 ba fe ff ff    	jae    294f0 <gimli::read::abbrev::Abbreviations::insert+0x1010>
   29636:	48 89 ca             	mov    %rcx,%rdx
   29639:	48 39 c1             	cmp    %rax,%rcx
   2963c:	48 83 d2 00          	adc    $0x0,%rdx
   29640:	49 8b b4 cd 38 05 00 	mov    0x538(%r13,%rcx,8),%rsi
   29647:	00 
   29648:	4c 89 2e             	mov    %r13,(%rsi)
   2964b:	66 89 8e 30 05 00 00 	mov    %cx,0x530(%rsi)
   29652:	48 39 c2             	cmp    %rax,%rdx
   29655:	0f 87 95 fe ff ff    	ja     294f0 <gimli::read::abbrev::Abbreviations::insert+0x1010>
   2965b:	48 39 c1             	cmp    %rax,%rcx
   2965e:	48 89 d1             	mov    %rdx,%rcx
   29661:	72 d6                	jb     29639 <gimli::read::abbrev::Abbreviations::insert+0x1159>
   29663:	e9 88 fe ff ff       	jmpq   294f0 <gimli::read::abbrev::Abbreviations::insert+0x1010>
   29668:	ff 15 7a c4 01 00    	callq  *0x1c47a(%rip)        # 45ae8 <_GLOBAL_OFFSET_TABLE_+0x158>
   2966e:	0f 0b                	ud2    
   29670:	bf 38 05 00 00       	mov    $0x538,%edi
   29675:	eb 15                	jmp    2968c <gimli::read::abbrev::Abbreviations::insert+0x11ac>
   29677:	be 08 00 00 00       	mov    $0x8,%esi
   2967c:	48 89 df             	mov    %rbx,%rdi
   2967f:	ff 15 a3 c4 01 00    	callq  *0x1c4a3(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   29685:	0f 0b                	ud2    
   29687:	bf 98 05 00 00       	mov    $0x598,%edi
   2968c:	be 08 00 00 00       	mov    $0x8,%esi
   29691:	ff 15 91 c4 01 00    	callq  *0x1c491(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   29697:	0f 0b                	ud2    
   29699:	48 8d 3d 98 fa 00 00 	lea    0xfa98(%rip),%rdi        # 39138 <str.6+0x1e18>
   296a0:	48 8d 15 11 b6 01 00 	lea    0x1b611(%rip),%rdx        # 44cb8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1760>
   296a7:	be 2b 00 00 00       	mov    $0x2b,%esi
   296ac:	ff 15 2e c8 01 00    	callq  *0x1c82e(%rip)        # 45ee0 <_GLOBAL_OFFSET_TABLE_+0x550>
   296b2:	eb ba                	jmp    2966e <gimli::read::abbrev::Abbreviations::insert+0x118e>
   296b4:	48 8d 3d 02 fb 00 00 	lea    0xfb02(%rip),%rdi        # 391bd <str.6+0x1e9d>
   296bb:	48 8d 15 0e b6 01 00 	lea    0x1b60e(%rip),%rdx        # 44cd0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1778>
   296c2:	be 30 00 00 00       	mov    $0x30,%esi
   296c7:	ff 15 13 c8 01 00    	callq  *0x1c813(%rip)        # 45ee0 <_GLOBAL_OFFSET_TABLE_+0x550>
   296cd:	eb 9f                	jmp    2966e <gimli::read::abbrev::Abbreviations::insert+0x118e>
   296cf:	48 8d 3d a5 dd 00 00 	lea    0xdda5(%rip),%rdi        # 3747b <str.6+0x15b>
   296d6:	48 8d 15 0b b6 01 00 	lea    0x1b60b(%rip),%rdx        # 44ce8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1790>
   296dd:	be 20 00 00 00       	mov    $0x20,%esi
   296e2:	ff 15 f8 c7 01 00    	callq  *0x1c7f8(%rip)        # 45ee0 <_GLOBAL_OFFSET_TABLE_+0x550>
   296e8:	eb 84                	jmp    2966e <gimli::read::abbrev::Abbreviations::insert+0x118e>
   296ea:	48 89 c3             	mov    %rax,%rbx
   296ed:	4d 89 e7             	mov    %r12,%r15
   296f0:	eb 27                	jmp    29719 <gimli::read::abbrev::Abbreviations::insert+0x1239>
   296f2:	48 89 c3             	mov    %rax,%rbx
   296f5:	eb 22                	jmp    29719 <gimli::read::abbrev::Abbreviations::insert+0x1239>
   296f7:	48 89 c3             	mov    %rax,%rbx
   296fa:	4c 8d bc 24 40 02 00 	lea    0x240(%rsp),%r15
   29701:	00 
   29702:	eb 15                	jmp    29719 <gimli::read::abbrev::Abbreviations::insert+0x1239>
   29704:	48 89 c3             	mov    %rax,%rbx
   29707:	4c 8d bc 24 a0 00 00 	lea    0xa0(%rsp),%r15
   2970e:	00 
   2970f:	eb 08                	jmp    29719 <gimli::read::abbrev::Abbreviations::insert+0x1239>
   29711:	48 89 c3             	mov    %rax,%rbx
   29714:	4c 8d 7c 24 30       	lea    0x30(%rsp),%r15
   29719:	4c 89 ff             	mov    %r15,%rdi
   2971c:	e8 7f eb ff ff       	callq  282a0 <core::ptr::drop_in_place>
   29721:	48 89 df             	mov    %rbx,%rdi
   29724:	e8 27 b9 fd ff       	callq  5050 <_Unwind_Resume@plt>
   29729:	0f 0b                	ud2    
   2972b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000029730 <gimli::read::abbrev::Abbreviation::new>:
   29730:	41 56                	push   %r14
   29732:	53                   	push   %rbx
   29733:	48 83 ec 68          	sub    $0x68,%rsp
   29737:	4c 89 c3             	mov    %r8,%rbx
   2973a:	48 89 34 24          	mov    %rsi,(%rsp)
   2973e:	48 85 f6             	test   %rsi,%rsi
   29741:	74 44                	je     29787 <gimli::read::abbrev::Abbreviation::new+0x57>
   29743:	48 89 f8             	mov    %rdi,%rax
   29746:	48 89 37             	mov    %rsi,(%rdi)
   29749:	66 89 57 68          	mov    %dx,0x68(%rdi)
   2974d:	88 4f 6a             	mov    %cl,0x6a(%rdi)
   29750:	0f 10 03             	movups (%rbx),%xmm0
   29753:	0f 10 4b 10          	movups 0x10(%rbx),%xmm1
   29757:	0f 10 53 20          	movups 0x20(%rbx),%xmm2
   2975b:	0f 10 5b 30          	movups 0x30(%rbx),%xmm3
   2975f:	0f 11 47 08          	movups %xmm0,0x8(%rdi)
   29763:	0f 11 4f 18          	movups %xmm1,0x18(%rdi)
   29767:	0f 11 57 28          	movups %xmm2,0x28(%rdi)
   2976b:	0f 11 5f 38          	movups %xmm3,0x38(%rdi)
   2976f:	0f 10 43 40          	movups 0x40(%rbx),%xmm0
   29773:	0f 11 47 48          	movups %xmm0,0x48(%rdi)
   29777:	0f 10 43 50          	movups 0x50(%rbx),%xmm0
   2977b:	0f 11 47 58          	movups %xmm0,0x58(%rdi)
   2977f:	48 83 c4 68          	add    $0x68,%rsp
   29783:	5b                   	pop    %rbx
   29784:	41 5e                	pop    %r14
   29786:	c3                   	retq   
   29787:	48 89 e0             	mov    %rsp,%rax
   2978a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   2978f:	48 8d 05 2a e3 00 00 	lea    0xe32a(%rip),%rax        # 37ac0 <str.6+0x7a0>
   29796:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   2979b:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   297a0:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   297a5:	48 8d 05 34 ea ff ff 	lea    -0x15cc(%rip),%rax        # 281e0 <<&T as core::fmt::Debug>::fmt>
   297ac:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   297b1:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
   297b6:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   297bb:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   297c0:	48 8d 05 39 b5 01 00 	lea    0x1b539(%rip),%rax        # 44d00 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x17a8>
   297c7:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   297cc:	48 c7 44 24 40 03 00 	movq   $0x3,0x40(%rsp)
   297d3:	00 00 
   297d5:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
   297dc:	00 00 
   297de:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
   297e3:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   297e8:	48 c7 44 24 60 02 00 	movq   $0x2,0x60(%rsp)
   297ef:	00 00 
   297f1:	48 8d 35 38 b5 01 00 	lea    0x1b538(%rip),%rsi        # 44d30 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x17d8>
   297f8:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
   297fd:	ff 15 4d c4 01 00    	callq  *0x1c44d(%rip)        # 45c50 <_GLOBAL_OFFSET_TABLE_+0x2c0>
   29803:	0f 0b                	ud2    
   29805:	49 89 c6             	mov    %rax,%r14
   29808:	48 89 df             	mov    %rbx,%rdi
   2980b:	e8 60 ea ff ff       	callq  28270 <core::ptr::drop_in_place>
   29810:	4c 89 f7             	mov    %r14,%rdi
   29813:	e8 38 b8 fd ff       	callq  5050 <_Unwind_Resume@plt>
   29818:	0f 0b                	ud2    
   2981a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000029820 <gimli::read::abbrev::Attributes::new>:
   29820:	48 89 f8             	mov    %rdi,%rax
   29823:	0f 57 c0             	xorps  %xmm0,%xmm0
   29826:	0f 11 47 50          	movups %xmm0,0x50(%rdi)
   2982a:	0f 11 47 40          	movups %xmm0,0x40(%rdi)
   2982e:	0f 11 47 30          	movups %xmm0,0x30(%rdi)
   29832:	0f 11 47 20          	movups %xmm0,0x20(%rdi)
   29836:	0f 11 47 10          	movups %xmm0,0x10(%rdi)
   2983a:	0f 11 07             	movups %xmm0,(%rdi)
   2983d:	c3                   	retq   
   2983e:	66 90                	xchg   %ax,%ax

0000000000029840 <gimli::read::abbrev::Attributes::push>:
   29840:	41 57                	push   %r15
   29842:	41 56                	push   %r14
   29844:	53                   	push   %rbx
   29845:	48 81 ec 80 00 00 00 	sub    $0x80,%rsp
   2984c:	49 89 f6             	mov    %rsi,%r14
   2984f:	48 89 fb             	mov    %rdi,%rbx
   29852:	83 3f 01             	cmpl   $0x1,(%rdi)
   29855:	75 40                	jne    29897 <gimli::read::abbrev::Attributes::push+0x57>
   29857:	41 0f 10 06          	movups (%r14),%xmm0
   2985b:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
   29860:	48 8b 43 18          	mov    0x18(%rbx),%rax
   29864:	48 3b 43 10          	cmp    0x10(%rbx),%rax
   29868:	75 12                	jne    2987c <gimli::read::abbrev::Attributes::push+0x3c>
   2986a:	48 8d 7b 08          	lea    0x8(%rbx),%rdi
   2986e:	be 01 00 00 00       	mov    $0x1,%esi
   29873:	e8 58 ea ff ff       	callq  282d0 <alloc::vec::Vec<T>::reserve>
   29878:	48 8b 43 18          	mov    0x18(%rbx),%rax
   2987c:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
   29880:	48 c1 e0 04          	shl    $0x4,%rax
   29884:	0f 28 44 24 40       	movaps 0x40(%rsp),%xmm0
   29889:	0f 11 04 01          	movups %xmm0,(%rcx,%rax,1)
   2988d:	48 83 43 18 01       	addq   $0x1,0x18(%rbx)
   29892:	e9 6c 01 00 00       	jmpq   29a03 <gimli::read::abbrev::Attributes::push+0x1c3>
   29897:	4c 8d 7b 08          	lea    0x8(%rbx),%r15
   2989b:	48 8b 7b 58          	mov    0x58(%rbx),%rdi
   2989f:	48 83 ff 05          	cmp    $0x5,%rdi
   298a3:	0f 85 3c 01 00 00    	jne    299e5 <gimli::read::abbrev::Attributes::push+0x1a5>
   298a9:	bf 50 00 00 00       	mov    $0x50,%edi
   298ae:	be 08 00 00 00       	mov    $0x8,%esi
   298b3:	ff 15 cf c2 01 00    	callq  *0x1c2cf(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   298b9:	48 85 c0             	test   %rax,%rax
   298bc:	0f 84 4e 01 00 00    	je     29a10 <gimli::read::abbrev::Attributes::push+0x1d0>
   298c2:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   298c7:	0f 28 05 32 f1 00 00 	movaps 0xf132(%rip),%xmm0        # 38a00 <str.6+0x16e0>
   298ce:	0f 11 44 24 10       	movups %xmm0,0x10(%rsp)
   298d3:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   298d8:	be 05 00 00 00       	mov    $0x5,%esi
   298dd:	e8 ee e9 ff ff       	callq  282d0 <alloc::vec::Vec<T>::reserve>
   298e2:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   298e7:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   298ec:	48 89 c2             	mov    %rax,%rdx
   298ef:	48 c1 e2 04          	shl    $0x4,%rdx
   298f3:	41 0f 10 47 40       	movups 0x40(%r15),%xmm0
   298f8:	0f 11 44 11 40       	movups %xmm0,0x40(%rcx,%rdx,1)
   298fd:	41 0f 10 07          	movups (%r15),%xmm0
   29901:	41 0f 10 4f 10       	movups 0x10(%r15),%xmm1
   29906:	41 0f 10 57 20       	movups 0x20(%r15),%xmm2
   2990b:	41 0f 10 5f 30       	movups 0x30(%r15),%xmm3
   29910:	0f 11 5c 11 30       	movups %xmm3,0x30(%rcx,%rdx,1)
   29915:	0f 11 54 11 20       	movups %xmm2,0x20(%rcx,%rdx,1)
   2991a:	0f 11 4c 11 10       	movups %xmm1,0x10(%rcx,%rdx,1)
   2991f:	0f 11 04 11          	movups %xmm0,(%rcx,%rdx,1)
   29923:	48 83 c0 05          	add    $0x5,%rax
   29927:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2992c:	41 0f 10 06          	movups (%r14),%xmm0
   29930:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
   29935:	48 3b 44 24 10       	cmp    0x10(%rsp),%rax
   2993a:	75 19                	jne    29955 <gimli::read::abbrev::Attributes::push+0x115>
   2993c:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   29941:	be 01 00 00 00       	mov    $0x1,%esi
   29946:	e8 85 e9 ff ff       	callq  282d0 <alloc::vec::Vec<T>::reserve>
   2994b:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   29950:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   29955:	48 89 c2             	mov    %rax,%rdx
   29958:	48 c1 e2 04          	shl    $0x4,%rdx
   2995c:	0f 28 44 24 40       	movaps 0x40(%rsp),%xmm0
   29961:	0f 11 04 11          	movups %xmm0,(%rcx,%rdx,1)
   29965:	48 83 c0 01          	add    $0x1,%rax
   29969:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2996e:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   29973:	0f 10 44 24 08       	movups 0x8(%rsp),%xmm0
   29978:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   2997d:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   29981:	74 23                	je     299a6 <gimli::read::abbrev::Attributes::push+0x166>
   29983:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   29987:	48 85 f6             	test   %rsi,%rsi
   2998a:	74 1a                	je     299a6 <gimli::read::abbrev::Attributes::push+0x166>
   2998c:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   29990:	48 85 ff             	test   %rdi,%rdi
   29993:	74 11                	je     299a6 <gimli::read::abbrev::Attributes::push+0x166>
   29995:	48 c1 e6 04          	shl    $0x4,%rsi
   29999:	74 0b                	je     299a6 <gimli::read::abbrev::Attributes::push+0x166>
   2999b:	ba 08 00 00 00       	mov    $0x8,%edx
   299a0:	ff 15 5a c2 01 00    	callq  *0x1c25a(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   299a6:	48 c7 03 01 00 00 00 	movq   $0x1,(%rbx)
   299ad:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   299b2:	49 89 47 10          	mov    %rax,0x10(%r15)
   299b6:	0f 28 44 24 20       	movaps 0x20(%rsp),%xmm0
   299bb:	41 0f 11 07          	movups %xmm0,(%r15)
   299bf:	0f 10 44 24 40       	movups 0x40(%rsp),%xmm0
   299c4:	0f 10 4c 24 50       	movups 0x50(%rsp),%xmm1
   299c9:	0f 10 54 24 60       	movups 0x60(%rsp),%xmm2
   299ce:	0f 10 5c 24 70       	movups 0x70(%rsp),%xmm3
   299d3:	0f 11 5b 50          	movups %xmm3,0x50(%rbx)
   299d7:	0f 11 53 40          	movups %xmm2,0x40(%rbx)
   299db:	0f 11 4b 30          	movups %xmm1,0x30(%rbx)
   299df:	0f 11 43 20          	movups %xmm0,0x20(%rbx)
   299e3:	eb 1e                	jmp    29a03 <gimli::read::abbrev::Attributes::push+0x1c3>
   299e5:	41 0f 10 06          	movups (%r14),%xmm0
   299e9:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
   299ee:	73 32                	jae    29a22 <gimli::read::abbrev::Attributes::push+0x1e2>
   299f0:	48 c1 e7 04          	shl    $0x4,%rdi
   299f4:	0f 28 44 24 40       	movaps 0x40(%rsp),%xmm0
   299f9:	41 0f 11 04 3f       	movups %xmm0,(%r15,%rdi,1)
   299fe:	48 83 43 58 01       	addq   $0x1,0x58(%rbx)
   29a03:	48 81 c4 80 00 00 00 	add    $0x80,%rsp
   29a0a:	5b                   	pop    %rbx
   29a0b:	41 5e                	pop    %r14
   29a0d:	41 5f                	pop    %r15
   29a0f:	c3                   	retq   
   29a10:	bf 50 00 00 00       	mov    $0x50,%edi
   29a15:	be 08 00 00 00       	mov    $0x8,%esi
   29a1a:	ff 15 08 c1 01 00    	callq  *0x1c108(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   29a20:	0f 0b                	ud2    
   29a22:	48 8d 15 1f b3 01 00 	lea    0x1b31f(%rip),%rdx        # 44d48 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x17f0>
   29a29:	be 05 00 00 00       	mov    $0x5,%esi
   29a2e:	ff 15 64 c2 01 00    	callq  *0x1c264(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   29a34:	0f 0b                	ud2    
   29a36:	eb 00                	jmp    29a38 <gimli::read::abbrev::Attributes::push+0x1f8>
   29a38:	48 89 c3             	mov    %rax,%rbx
   29a3b:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   29a40:	e8 fb e7 ff ff       	callq  28240 <core::ptr::drop_in_place>
   29a45:	48 89 df             	mov    %rbx,%rdi
   29a48:	e8 03 b6 fd ff       	callq  5050 <_Unwind_Resume@plt>
   29a4d:	0f 0b                	ud2    
   29a4f:	90                   	nop

0000000000029a50 <<gimli::read::abbrev::Attributes as core::ops::deref::Deref>::deref>:
   29a50:	50                   	push   %rax
   29a51:	83 3f 01             	cmpl   $0x1,(%rdi)
   29a54:	75 0a                	jne    29a60 <<gimli::read::abbrev::Attributes as core::ops::deref::Deref>::deref+0x10>
   29a56:	48 8b 47 08          	mov    0x8(%rdi),%rax
   29a5a:	48 8b 57 18          	mov    0x18(%rdi),%rdx
   29a5e:	59                   	pop    %rcx
   29a5f:	c3                   	retq   
   29a60:	48 8b 57 58          	mov    0x58(%rdi),%rdx
   29a64:	48 83 fa 06          	cmp    $0x6,%rdx
   29a68:	73 09                	jae    29a73 <<gimli::read::abbrev::Attributes as core::ops::deref::Deref>::deref+0x23>
   29a6a:	48 83 c7 08          	add    $0x8,%rdi
   29a6e:	48 89 f8             	mov    %rdi,%rax
   29a71:	59                   	pop    %rcx
   29a72:	c3                   	retq   
   29a73:	48 8d 05 e6 b2 01 00 	lea    0x1b2e6(%rip),%rax        # 44d60 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1808>
   29a7a:	be 05 00 00 00       	mov    $0x5,%esi
   29a7f:	48 89 d7             	mov    %rdx,%rdi
   29a82:	48 89 c2             	mov    %rax,%rdx
   29a85:	ff 15 a5 bf 01 00    	callq  *0x1bfa5(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   29a8b:	0f 0b                	ud2    
   29a8d:	0f 1f 00             	nopl   (%rax)

0000000000029a90 <gimli::read::line::LineRow::apply_line_advance>:
   29a90:	48 85 f6             	test   %rsi,%rsi
   29a93:	78 05                	js     29a9a <gimli::read::line::LineRow::apply_line_advance+0xa>
   29a95:	48 01 77 18          	add    %rsi,0x18(%rdi)
   29a99:	c3                   	retq   
   29a9a:	48 89 f1             	mov    %rsi,%rcx
   29a9d:	48 f7 d9             	neg    %rcx
   29aa0:	48 8b 47 18          	mov    0x18(%rdi),%rax
   29aa4:	48 39 c8             	cmp    %rcx,%rax
   29aa7:	73 09                	jae    29ab2 <gimli::read::line::LineRow::apply_line_advance+0x22>
   29aa9:	48 c7 47 18 00 00 00 	movq   $0x0,0x18(%rdi)
   29ab0:	00 
   29ab1:	c3                   	retq   
   29ab2:	48 01 f0             	add    %rsi,%rax
   29ab5:	48 89 47 18          	mov    %rax,0x18(%rdi)
   29ab9:	c3                   	retq   
   29aba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000029ac0 <gimli::read::unit::allow_section_offset>:
   29ac0:	31 c0                	xor    %eax,%eax
   29ac2:	83 c7 fe             	add    $0xfffffffe,%edi
   29ac5:	66 83 ff 77          	cmp    $0x77,%di
   29ac9:	77 15                	ja     29ae0 <gimli::read::unit::allow_section_offset+0x20>
   29acb:	0f b7 cf             	movzwl %di,%ecx
   29ace:	48 8d 15 7b f3 00 00 	lea    0xf37b(%rip),%rdx        # 38e50 <str.6+0x1b30>
   29ad5:	48 63 0c 8a          	movslq (%rdx,%rcx,4),%rcx
   29ad9:	48 01 d1             	add    %rdx,%rcx
   29adc:	ff e1                	jmpq   *%rcx
   29ade:	b0 01                	mov    $0x1,%al
   29ae0:	c3                   	retq   
   29ae1:	81 e6 fe ff 00 00    	and    $0xfffe,%esi
   29ae7:	66 83 fe 02          	cmp    $0x2,%si
   29aeb:	0f 94 c0             	sete   %al
   29aee:	c3                   	retq   
   29aef:	90                   	nop

0000000000029af0 <core::ptr::drop_in_place>:
   29af0:	c3                   	retq   
   29af1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   29af8:	00 00 00 
   29afb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000029b00 <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match>:
   29b00:	55                   	push   %rbp
   29b01:	41 57                	push   %r15
   29b03:	41 56                	push   %r14
   29b05:	41 55                	push   %r13
   29b07:	41 54                	push   %r12
   29b09:	53                   	push   %rbx
   29b0a:	48 83 ec 18          	sub    $0x18,%rsp
   29b0e:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
   29b13:	48 8b 6e 10          	mov    0x10(%rsi),%rbp
   29b17:	48 8b 46 18          	mov    0x18(%rsi),%rax
   29b1b:	45 31 ed             	xor    %r13d,%r13d
   29b1e:	48 89 c2             	mov    %rax,%rdx
   29b21:	48 29 ea             	sub    %rbp,%rdx
   29b24:	0f 82 d6 00 00 00    	jb     29c00 <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match+0x100>
   29b2a:	48 89 f3             	mov    %rsi,%rbx
   29b2d:	48 39 46 08          	cmp    %rax,0x8(%rsi)
   29b31:	0f 82 c9 00 00 00    	jb     29c00 <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match+0x100>
   29b37:	48 8d 4b 2c          	lea    0x2c(%rbx),%rcx
   29b3b:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   29b40:	4c 8b 63 20          	mov    0x20(%rbx),%r12
   29b44:	45 31 ed             	xor    %r13d,%r13d
   29b47:	48 8b 33             	mov    (%rbx),%rsi
   29b4a:	48 01 ee             	add    %rbp,%rsi
   29b4d:	41 8a 4c 1c 2b       	mov    0x2b(%r12,%rbx,1),%cl
   29b52:	48 83 fa 0f          	cmp    $0xf,%rdx
   29b56:	77 28                	ja     29b80 <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match+0x80>
   29b58:	48 85 d2             	test   %rdx,%rdx
   29b5b:	0f 84 98 00 00 00    	je     29bf9 <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match+0xf9>
   29b61:	48 89 c7             	mov    %rax,%rdi
   29b64:	48 29 ef             	sub    %rbp,%rdi
   29b67:	31 d2                	xor    %edx,%edx
   29b69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   29b70:	38 0c 16             	cmp    %cl,(%rsi,%rdx,1)
   29b73:	74 22                	je     29b97 <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match+0x97>
   29b75:	48 83 c2 01          	add    $0x1,%rdx
   29b79:	48 39 d7             	cmp    %rdx,%rdi
   29b7c:	75 f2                	jne    29b70 <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match+0x70>
   29b7e:	eb 79                	jmp    29bf9 <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match+0xf9>
   29b80:	0f b6 f9             	movzbl %cl,%edi
   29b83:	ff 15 f7 c1 01 00    	callq  *0x1c1f7(%rip)        # 45d80 <_GLOBAL_OFFSET_TABLE_+0x3f0>
   29b89:	48 83 f8 01          	cmp    $0x1,%rax
   29b8d:	75 66                	jne    29bf5 <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match+0xf5>
   29b8f:	48 8b 6b 10          	mov    0x10(%rbx),%rbp
   29b93:	4c 8b 63 20          	mov    0x20(%rbx),%r12
   29b97:	48 01 d5             	add    %rdx,%rbp
   29b9a:	48 83 c5 01          	add    $0x1,%rbp
   29b9e:	48 89 6b 10          	mov    %rbp,0x10(%rbx)
   29ba2:	49 89 ee             	mov    %rbp,%r14
   29ba5:	4d 29 e6             	sub    %r12,%r14
   29ba8:	73 06                	jae    29bb0 <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match+0xb0>
   29baa:	4c 8b 7b 08          	mov    0x8(%rbx),%r15
   29bae:	eb 2e                	jmp    29bde <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match+0xde>
   29bb0:	4c 8b 7b 08          	mov    0x8(%rbx),%r15
   29bb4:	49 39 ef             	cmp    %rbp,%r15
   29bb7:	72 25                	jb     29bde <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match+0xde>
   29bb9:	49 83 fc 05          	cmp    $0x5,%r12
   29bbd:	73 6d                	jae    29c2c <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match+0x12c>
   29bbf:	48 8b 3b             	mov    (%rbx),%rdi
   29bc2:	4c 01 f7             	add    %r14,%rdi
   29bc5:	48 3b 7c 24 08       	cmp    0x8(%rsp),%rdi
   29bca:	74 4b                	je     29c17 <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match+0x117>
   29bcc:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   29bd1:	4c 89 e2             	mov    %r12,%rdx
   29bd4:	ff 15 e6 c1 01 00    	callq  *0x1c1e6(%rip)        # 45dc0 <bcmp@GLIBC_2.2.5>
   29bda:	85 c0                	test   %eax,%eax
   29bdc:	74 39                	je     29c17 <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match+0x117>
   29bde:	48 8b 43 18          	mov    0x18(%rbx),%rax
   29be2:	48 89 c2             	mov    %rax,%rdx
   29be5:	48 29 ea             	sub    %rbp,%rdx
   29be8:	72 16                	jb     29c00 <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match+0x100>
   29bea:	49 39 c7             	cmp    %rax,%r15
   29bed:	0f 83 54 ff ff ff    	jae    29b47 <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match+0x47>
   29bf3:	eb 0b                	jmp    29c00 <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match+0x100>
   29bf5:	48 8b 43 18          	mov    0x18(%rbx),%rax
   29bf9:	48 89 43 10          	mov    %rax,0x10(%rbx)
   29bfd:	45 31 ed             	xor    %r13d,%r13d
   29c00:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   29c05:	4c 89 28             	mov    %r13,(%rax)
   29c08:	48 83 c4 18          	add    $0x18,%rsp
   29c0c:	5b                   	pop    %rbx
   29c0d:	41 5c                	pop    %r12
   29c0f:	41 5d                	pop    %r13
   29c11:	41 5e                	pop    %r14
   29c13:	41 5f                	pop    %r15
   29c15:	5d                   	pop    %rbp
   29c16:	c3                   	retq   
   29c17:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   29c1c:	4c 89 70 08          	mov    %r14,0x8(%rax)
   29c20:	48 89 68 10          	mov    %rbp,0x10(%rax)
   29c24:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   29c2a:	eb d4                	jmp    29c00 <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match+0x100>
   29c2c:	48 8d 15 c5 b1 01 00 	lea    0x1b1c5(%rip),%rdx        # 44df8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x18a0>
   29c33:	be 04 00 00 00       	mov    $0x4,%esi
   29c38:	4c 89 e7             	mov    %r12,%rdi
   29c3b:	ff 15 ef bd 01 00    	callq  *0x1bdef(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   29c41:	0f 0b                	ud2    
   29c43:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   29c4a:	00 00 00 
   29c4d:	0f 1f 00             	nopl   (%rax)

0000000000029c50 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt>:
   29c50:	55                   	push   %rbp
   29c51:	41 57                	push   %r15
   29c53:	41 56                	push   %r14
   29c55:	41 55                	push   %r13
   29c57:	41 54                	push   %r12
   29c59:	53                   	push   %rbx
   29c5a:	48 83 ec 78          	sub    $0x78,%rsp
   29c5e:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   29c63:	4c 8b 37             	mov    (%rdi),%r14
   29c66:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   29c6a:	48 8b 47 10          	mov    0x10(%rdi),%rax
   29c6e:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   29c73:	31 c0                	xor    %eax,%eax
   29c75:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   29c7a:	e9 1f 00 00 00       	jmpq   29c9e <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x4e>
   29c7f:	90                   	nop
   29c80:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   29c85:	4c 89 fe             	mov    %r15,%rsi
   29c88:	4c 89 e2             	mov    %r12,%rdx
   29c8b:	ff 15 b7 bd 01 00    	callq  *0x1bdb7(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   29c91:	84 c0                	test   %al,%al
   29c93:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
   29c98:	0f 85 93 0a 00 00    	jne    2a731 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xae1>
   29c9e:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
   29ca3:	4c 3b 64 24 20       	cmp    0x20(%rsp),%r12
   29ca8:	0f 84 7f 0a 00 00    	je     2a72d <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xadd>
   29cae:	48 85 f6             	test   %rsi,%rsi
   29cb1:	0f 84 8b 0a 00 00    	je     2a742 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xaf2>
   29cb7:	49 8d 44 24 01       	lea    0x1(%r12),%rax
   29cbc:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   29cc1:	4d 8d 04 36          	lea    (%r14,%rsi,1),%r8
   29cc5:	4c 8d 4e ff          	lea    -0x1(%rsi),%r9
   29cc9:	31 ed                	xor    %ebp,%ebp
   29ccb:	41 0f b6 3c 2e       	movzbl (%r14,%rbp,1),%edi
   29cd0:	40 84 ff             	test   %dil,%dil
   29cd3:	0f 89 c7 00 00 00    	jns    29da0 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x150>
   29cd9:	eb 2c                	jmp    29d07 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xb7>
   29cdb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   29ce0:	49 39 e9             	cmp    %rbp,%r9
   29ce3:	0f 84 59 0a 00 00    	je     2a742 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xaf2>
   29ce9:	41 80 7c 2e 01 bf    	cmpb   $0xbf,0x1(%r14,%rbp,1)
   29cef:	0f 8e 68 0a 00 00    	jle    2a75d <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xb0d>
   29cf5:	48 83 c5 01          	add    $0x1,%rbp
   29cf9:	41 0f b6 3c 2e       	movzbl (%r14,%rbp,1),%edi
   29cfe:	40 84 ff             	test   %dil,%dil
   29d01:	0f 89 99 00 00 00    	jns    29da0 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x150>
   29d07:	31 d2                	xor    %edx,%edx
   29d09:	4c 89 c0             	mov    %r8,%rax
   29d0c:	49 39 e9             	cmp    %rbp,%r9
   29d0f:	74 11                	je     29d22 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xd2>
   29d11:	49 8d 04 2e          	lea    (%r14,%rbp,1),%rax
   29d15:	48 83 c0 02          	add    $0x2,%rax
   29d19:	41 0f b6 54 2e 01    	movzbl 0x1(%r14,%rbp,1),%edx
   29d1f:	83 e2 3f             	and    $0x3f,%edx
   29d22:	89 f9                	mov    %edi,%ecx
   29d24:	83 e1 1f             	and    $0x1f,%ecx
   29d27:	40 80 ff df          	cmp    $0xdf,%dil
   29d2b:	76 33                	jbe    29d60 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x110>
   29d2d:	4c 39 c0             	cmp    %r8,%rax
   29d30:	74 35                	je     29d67 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x117>
   29d32:	0f b6 18             	movzbl (%rax),%ebx
   29d35:	48 83 c0 01          	add    $0x1,%rax
   29d39:	83 e3 3f             	and    $0x3f,%ebx
   29d3c:	c1 e2 06             	shl    $0x6,%edx
   29d3f:	09 da                	or     %ebx,%edx
   29d41:	40 80 ff f0          	cmp    $0xf0,%dil
   29d45:	72 30                	jb     29d77 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x127>
   29d47:	4c 39 c0             	cmp    %r8,%rax
   29d4a:	74 32                	je     29d7e <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x12e>
   29d4c:	0f b6 00             	movzbl (%rax),%eax
   29d4f:	83 e0 3f             	and    $0x3f,%eax
   29d52:	eb 2c                	jmp    29d80 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x130>
   29d54:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   29d5b:	00 00 00 
   29d5e:	66 90                	xchg   %ax,%ax
   29d60:	c1 e1 06             	shl    $0x6,%ecx
   29d63:	09 ca                	or     %ecx,%edx
   29d65:	eb 3b                	jmp    29da2 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x152>
   29d67:	31 db                	xor    %ebx,%ebx
   29d69:	4c 89 c0             	mov    %r8,%rax
   29d6c:	c1 e2 06             	shl    $0x6,%edx
   29d6f:	09 da                	or     %ebx,%edx
   29d71:	40 80 ff f0          	cmp    $0xf0,%dil
   29d75:	73 d0                	jae    29d47 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xf7>
   29d77:	c1 e1 0c             	shl    $0xc,%ecx
   29d7a:	09 ca                	or     %ecx,%edx
   29d7c:	eb 24                	jmp    29da2 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x152>
   29d7e:	31 c0                	xor    %eax,%eax
   29d80:	83 e1 07             	and    $0x7,%ecx
   29d83:	c1 e1 12             	shl    $0x12,%ecx
   29d86:	c1 e2 06             	shl    $0x6,%edx
   29d89:	09 ca                	or     %ecx,%edx
   29d8b:	09 c2                	or     %eax,%edx
   29d8d:	81 fa 00 00 11 00    	cmp    $0x110000,%edx
   29d93:	75 0d                	jne    29da2 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x152>
   29d95:	e9 a8 09 00 00       	jmpq   2a742 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xaf2>
   29d9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   29da0:	89 fa                	mov    %edi,%edx
   29da2:	83 c2 d0             	add    $0xffffffd0,%edx
   29da5:	83 fa 0a             	cmp    $0xa,%edx
   29da8:	0f 82 32 ff ff ff    	jb     29ce0 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x90>
   29dae:	49 89 f7             	mov    %rsi,%r15
   29db1:	49 29 ef             	sub    %rbp,%r15
   29db4:	48 85 ed             	test   %rbp,%rbp
   29db7:	74 14                	je     29dcd <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x17d>
   29db9:	4c 39 fe             	cmp    %r15,%rsi
   29dbc:	0f 82 64 0a 00 00    	jb     2a826 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xbd6>
   29dc2:	41 80 3c 2e bf       	cmpb   $0xbf,(%r14,%rbp,1)
   29dc7:	0f 8e 59 0a 00 00    	jle    2a826 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xbd6>
   29dcd:	48 89 f3             	mov    %rsi,%rbx
   29dd0:	4c 89 f7             	mov    %r14,%rdi
   29dd3:	48 89 ee             	mov    %rbp,%rsi
   29dd6:	ff 15 7c c0 01 00    	callq  *0x1c07c(%rip)        # 45e58 <_GLOBAL_OFFSET_TABLE_+0x4c8>
   29ddc:	3c 01                	cmp    $0x1,%al
   29dde:	0f 84 71 0a 00 00    	je     2a855 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xc05>
   29de4:	49 89 d5             	mov    %rdx,%r13
   29de7:	49 8d 3c 2e          	lea    (%r14,%rbp,1),%rdi
   29deb:	48 29 d3             	sub    %rdx,%rbx
   29dee:	48 85 d2             	test   %rdx,%rdx
   29df1:	48 89 5c 24 28       	mov    %rbx,0x28(%rsp)
   29df6:	74 28                	je     29e20 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x1d0>
   29df8:	48 39 eb             	cmp    %rbp,%rbx
   29dfb:	74 23                	je     29e20 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x1d0>
   29dfd:	4d 39 ef             	cmp    %r13,%r15
   29e00:	0f 86 37 0a 00 00    	jbe    2a83d <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xbed>
   29e06:	4b 8d 1c 2e          	lea    (%r14,%r13,1),%rbx
   29e0a:	80 7c 1d 00 bf       	cmpb   $0xbf,0x0(%rbp,%rbx,1)
   29e0f:	0f 8e 28 0a 00 00    	jle    2a83d <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xbed>
   29e15:	49 89 ff             	mov    %rdi,%r15
   29e18:	e9 0a 00 00 00       	jmpq   29e27 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x1d7>
   29e1d:	0f 1f 00             	nopl   (%rax)
   29e20:	49 89 ff             	mov    %rdi,%r15
   29e23:	4b 8d 1c 2e          	lea    (%r14,%r13,1),%rbx
   29e27:	48 01 eb             	add    %rbp,%rbx
   29e2a:	49 8d 04 2e          	lea    (%r14,%rbp,1),%rax
   29e2e:	48 83 c0 01          	add    $0x1,%rax
   29e32:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   29e37:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   29e3c:	ff 15 0e bc 01 00    	callq  *0x1bc0e(%rip)        # 45a50 <_GLOBAL_OFFSET_TABLE_+0xc0>
   29e42:	4d 85 ed             	test   %r13,%r13
   29e45:	0f 84 45 01 00 00    	je     29f90 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x340>
   29e4b:	84 c0                	test   %al,%al
   29e4d:	0f 84 3d 01 00 00    	je     29f90 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x340>
   29e53:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   29e58:	48 3b 44 24 20       	cmp    0x20(%rsp),%rax
   29e5d:	0f 85 2d 01 00 00    	jne    29f90 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x340>
   29e63:	41 80 3c 2e 68       	cmpb   $0x68,(%r14,%rbp,1)
   29e68:	0f 85 22 01 00 00    	jne    29f90 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x340>
   29e6e:	49 83 fd 01          	cmp    $0x1,%r13
   29e72:	0f 84 b5 08 00 00    	je     2a72d <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xadd>
   29e78:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   29e7d:	8a 17                	mov    (%rdi),%dl
   29e7f:	80 fa c0             	cmp    $0xc0,%dl
   29e82:	0f 8c f8 09 00 00    	jl     2a880 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xc30>
   29e88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   29e8f:	00 
   29e90:	48 8d 77 01          	lea    0x1(%rdi),%rsi
   29e94:	84 d2                	test   %dl,%dl
   29e96:	78 18                	js     29eb0 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x260>
   29e98:	0f b6 ca             	movzbl %dl,%ecx
   29e9b:	48 89 f7             	mov    %rsi,%rdi
   29e9e:	e9 9d 00 00 00       	jmpq   29f40 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x2f0>
   29ea3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   29eaa:	00 00 00 
   29ead:	0f 1f 00             	nopl   (%rax)
   29eb0:	89 d0                	mov    %edx,%eax
   29eb2:	24 1f                	and    $0x1f,%al
   29eb4:	48 39 de             	cmp    %rbx,%rsi
   29eb7:	74 3d                	je     29ef6 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x2a6>
   29eb9:	0f b6 4f 01          	movzbl 0x1(%rdi),%ecx
   29ebd:	48 83 c7 02          	add    $0x2,%rdi
   29ec1:	83 e1 3f             	and    $0x3f,%ecx
   29ec4:	0f b6 f0             	movzbl %al,%esi
   29ec7:	80 fa df             	cmp    $0xdf,%dl
   29eca:	76 37                	jbe    29f03 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x2b3>
   29ecc:	48 39 df             	cmp    %rbx,%rdi
   29ecf:	74 39                	je     29f0a <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x2ba>
   29ed1:	0f b6 07             	movzbl (%rdi),%eax
   29ed4:	48 83 c7 01          	add    $0x1,%rdi
   29ed8:	83 e0 3f             	and    $0x3f,%eax
   29edb:	c1 e1 06             	shl    $0x6,%ecx
   29ede:	09 c1                	or     %eax,%ecx
   29ee0:	80 fa f0             	cmp    $0xf0,%dl
   29ee3:	72 34                	jb     29f19 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x2c9>
   29ee5:	48 39 df             	cmp    %rbx,%rdi
   29ee8:	74 36                	je     29f20 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x2d0>
   29eea:	0f b6 17             	movzbl (%rdi),%edx
   29eed:	48 83 c7 01          	add    $0x1,%rdi
   29ef1:	83 e2 3f             	and    $0x3f,%edx
   29ef4:	eb 2f                	jmp    29f25 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x2d5>
   29ef6:	31 c9                	xor    %ecx,%ecx
   29ef8:	48 89 df             	mov    %rbx,%rdi
   29efb:	0f b6 f0             	movzbl %al,%esi
   29efe:	80 fa df             	cmp    $0xdf,%dl
   29f01:	77 c9                	ja     29ecc <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x27c>
   29f03:	c1 e6 06             	shl    $0x6,%esi
   29f06:	09 f1                	or     %esi,%ecx
   29f08:	eb 36                	jmp    29f40 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x2f0>
   29f0a:	31 c0                	xor    %eax,%eax
   29f0c:	48 89 df             	mov    %rbx,%rdi
   29f0f:	c1 e1 06             	shl    $0x6,%ecx
   29f12:	09 c1                	or     %eax,%ecx
   29f14:	80 fa f0             	cmp    $0xf0,%dl
   29f17:	73 cc                	jae    29ee5 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x295>
   29f19:	c1 e6 0c             	shl    $0xc,%esi
   29f1c:	09 f1                	or     %esi,%ecx
   29f1e:	eb 20                	jmp    29f40 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x2f0>
   29f20:	31 d2                	xor    %edx,%edx
   29f22:	48 89 df             	mov    %rbx,%rdi
   29f25:	83 e6 07             	and    $0x7,%esi
   29f28:	c1 e6 12             	shl    $0x12,%esi
   29f2b:	c1 e1 06             	shl    $0x6,%ecx
   29f2e:	09 f1                	or     %esi,%ecx
   29f30:	09 d1                	or     %edx,%ecx
   29f32:	81 f9 00 00 11 00    	cmp    $0x110000,%ecx
   29f38:	0f 84 ef 07 00 00    	je     2a72d <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xadd>
   29f3e:	66 90                	xchg   %ax,%ax
   29f40:	8d 41 d0             	lea    -0x30(%rcx),%eax
   29f43:	83 f8 0a             	cmp    $0xa,%eax
   29f46:	72 21                	jb     29f69 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x319>
   29f48:	8d 51 9f             	lea    -0x61(%rcx),%edx
   29f4b:	b8 a9 ff ff ff       	mov    $0xffffffa9,%eax
   29f50:	83 fa 1a             	cmp    $0x1a,%edx
   29f53:	72 0d                	jb     29f62 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x312>
   29f55:	8d 51 bf             	lea    -0x41(%rcx),%edx
   29f58:	b8 c9 ff ff ff       	mov    $0xffffffc9,%eax
   29f5d:	83 fa 19             	cmp    $0x19,%edx
   29f60:	77 2e                	ja     29f90 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x340>
   29f62:	01 c1                	add    %eax,%ecx
   29f64:	83 f9 0f             	cmp    $0xf,%ecx
   29f67:	77 27                	ja     29f90 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x340>
   29f69:	48 39 df             	cmp    %rbx,%rdi
   29f6c:	0f 84 bb 07 00 00    	je     2a72d <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xadd>
   29f72:	8a 17                	mov    (%rdi),%dl
   29f74:	48 8d 77 01          	lea    0x1(%rdi),%rsi
   29f78:	84 d2                	test   %dl,%dl
   29f7a:	0f 89 18 ff ff ff    	jns    29e98 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x248>
   29f80:	e9 2b ff ff ff       	jmpq   29eb0 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x260>
   29f85:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   29f8c:	00 00 00 
   29f8f:	90                   	nop
   29f90:	4d 85 e4             	test   %r12,%r12
   29f93:	74 1f                	je     29fb4 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x364>
   29f95:	ba 02 00 00 00       	mov    $0x2,%edx
   29f9a:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   29f9f:	48 8d 35 11 f9 00 00 	lea    0xf911(%rip),%rsi        # 398b7 <str.6+0x2597>
   29fa6:	ff 15 9c ba 01 00    	callq  *0x1ba9c(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   29fac:	84 c0                	test   %al,%al
   29fae:	0f 85 7d 07 00 00    	jne    2a731 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xae1>
   29fb4:	49 83 fd 02          	cmp    $0x2,%r13
   29fb8:	73 06                	jae    29fc0 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x370>
   29fba:	4c 89 f9             	mov    %r15,%rcx
   29fbd:	eb 39                	jmp    29ff8 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x3a8>
   29fbf:	90                   	nop
   29fc0:	48 8d 05 f2 f8 00 00 	lea    0xf8f2(%rip),%rax        # 398b9 <str.6+0x2599>
   29fc7:	4c 29 f0             	sub    %r14,%rax
   29fca:	48 39 e8             	cmp    %rbp,%rax
   29fcd:	4c 89 f9             	mov    %r15,%rcx
   29fd0:	74 0c                	je     29fde <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x38e>
   29fd2:	41 0f b7 04 2e       	movzwl (%r14,%rbp,1),%eax
   29fd7:	3d 5f 24 00 00       	cmp    $0x245f,%eax
   29fdc:	75 1a                	jne    29ff8 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x3a8>
   29fde:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   29fe3:	80 38 bf             	cmpb   $0xbf,(%rax)
   29fe6:	0f 8e a5 08 00 00    	jle    2a891 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xc41>
   29fec:	49 83 c5 ff          	add    $0xffffffffffffffff,%r13
   29ff0:	49 8d 0c 2e          	lea    (%r14,%rbp,1),%rcx
   29ff4:	48 83 c1 01          	add    $0x1,%rcx
   29ff8:	48 29 6c 24 28       	sub    %rbp,0x28(%rsp)
   29ffd:	49 89 cf             	mov    %rcx,%r15
   2a000:	4d 89 ec             	mov    %r13,%r12
   2a003:	4d 85 ed             	test   %r13,%r13
   2a006:	0f 84 94 01 00 00    	je     2a1a0 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x550>
   2a00c:	41 80 3f 2e          	cmpb   $0x2e,(%r15)
   2a010:	75 6e                	jne    2a080 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x430>
   2a012:	49 8d 6f 01          	lea    0x1(%r15),%rbp
   2a016:	49 83 fc 01          	cmp    $0x1,%r12
   2a01a:	0f 84 d7 02 00 00    	je     2a2f7 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x6a7>
   2a020:	80 7d 00 bf          	cmpb   $0xbf,0x0(%rbp)
   2a024:	0f 8e 53 07 00 00    	jle    2a77d <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xb2d>
   2a02a:	41 0f b6 57 01       	movzbl 0x1(%r15),%edx
   2a02f:	84 d2                	test   %dl,%dl
   2a031:	0f 88 ed 02 00 00    	js     2a324 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x6d4>
   2a037:	89 d0                	mov    %edx,%eax
   2a039:	83 f8 2e             	cmp    $0x2e,%eax
   2a03c:	0f 85 f2 05 00 00    	jne    2a634 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x9e4>
   2a042:	ba 02 00 00 00       	mov    $0x2,%edx
   2a047:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   2a04c:	48 8d 35 64 f8 00 00 	lea    0xf864(%rip),%rsi        # 398b7 <str.6+0x2597>
   2a053:	ff 15 ef b9 01 00    	callq  *0x1b9ef(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2a059:	84 c0                	test   %al,%al
   2a05b:	0f 85 d0 06 00 00    	jne    2a731 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xae1>
   2a061:	49 8d 4f 02          	lea    0x2(%r15),%rcx
   2a065:	49 83 fc 02          	cmp    $0x2,%r12
   2a069:	74 09                	je     2a074 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x424>
   2a06b:	80 39 bf             	cmpb   $0xbf,(%rcx)
   2a06e:	0f 8e 15 07 00 00    	jle    2a789 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xb39>
   2a074:	49 83 c4 fe          	add    $0xfffffffffffffffe,%r12
   2a078:	4d 89 e5             	mov    %r12,%r13
   2a07b:	e9 7d ff ff ff       	jmpq   29ffd <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x3ad>
   2a080:	41 80 3f 24          	cmpb   $0x24,(%r15)
   2a084:	0f 85 16 01 00 00    	jne    2a1a0 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x550>
   2a08a:	49 89 de             	mov    %rbx,%r14
   2a08d:	49 83 fc 01          	cmp    $0x1,%r12
   2a091:	74 0b                	je     2a09e <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x44e>
   2a093:	41 80 7f 01 bf       	cmpb   $0xbf,0x1(%r15)
   2a098:	0f 8e f9 06 00 00    	jle    2a797 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xb47>
   2a09e:	49 8d 5f 01          	lea    0x1(%r15),%rbx
   2a0a2:	49 8d 44 24 ff       	lea    -0x1(%r12),%rax
   2a0a7:	48 89 5c 24 30       	mov    %rbx,0x30(%rsp)
   2a0ac:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   2a0b1:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   2a0b8:	00 00 
   2a0ba:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   2a0bf:	48 b8 24 00 00 00 24 	movabs $0x2400000024,%rax
   2a0c6:	00 00 00 
   2a0c9:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   2a0ce:	48 c7 44 24 50 01 00 	movq   $0x1,0x50(%rsp)
   2a0d5:	00 00 
   2a0d7:	48 8d 7c 24 60       	lea    0x60(%rsp),%rdi
   2a0dc:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
   2a0e1:	e8 1a fa ff ff       	callq  29b00 <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match>
   2a0e6:	48 83 7c 24 60 01    	cmpq   $0x1,0x60(%rsp)
   2a0ec:	0f 85 8e fb ff ff    	jne    29c80 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x30>
   2a0f2:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   2a0f7:	48 89 f1             	mov    %rsi,%rcx
   2a0fa:	48 ff c1             	inc    %rcx
   2a0fd:	0f 84 9d 06 00 00    	je     2a7a0 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xb50>
   2a103:	49 83 fc 01          	cmp    $0x1,%r12
   2a107:	74 09                	je     2a112 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x4c2>
   2a109:	80 3b bf             	cmpb   $0xbf,(%rbx)
   2a10c:	0f 8e 8e 06 00 00    	jle    2a7a0 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xb50>
   2a112:	49 39 cc             	cmp    %rcx,%r12
   2a115:	74 11                	je     2a128 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x4d8>
   2a117:	0f 86 83 06 00 00    	jbe    2a7a0 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xb50>
   2a11d:	41 80 3c 0f bf       	cmpb   $0xbf,(%r15,%rcx,1)
   2a122:	0f 8e 78 06 00 00    	jle    2a7a0 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xb50>
   2a128:	48 89 f2             	mov    %rsi,%rdx
   2a12b:	48 83 c2 02          	add    $0x2,%rdx
   2a12f:	74 16                	je     2a147 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x4f7>
   2a131:	49 39 d4             	cmp    %rdx,%r12
   2a134:	74 11                	je     2a147 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x4f7>
   2a136:	0f 86 7e 06 00 00    	jbe    2a7ba <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xb6a>
   2a13c:	41 80 3c 17 bf       	cmpb   $0xbf,(%r15,%rdx,1)
   2a141:	0f 8e 73 06 00 00    	jle    2a7ba <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xb6a>
   2a147:	49 8d 04 17          	lea    (%r15,%rdx,1),%rax
   2a14b:	4d 89 e5             	mov    %r12,%r13
   2a14e:	49 29 d5             	sub    %rdx,%r13
   2a151:	48 83 fe 01          	cmp    $0x1,%rsi
   2a155:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   2a15a:	0f 84 6e 03 00 00    	je     2a4ce <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x87e>
   2a160:	48 83 fe 02          	cmp    $0x2,%rsi
   2a164:	0f 84 1b 02 00 00    	je     2a385 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x735>
   2a16a:	48 85 f6             	test   %rsi,%rsi
   2a16d:	0f 84 0d fb ff ff    	je     29c80 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x30>
   2a173:	80 3b 75             	cmpb   $0x75,(%rbx)
   2a176:	0f 85 04 fb ff ff    	jne    29c80 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x30>
   2a17c:	48 83 fe 02          	cmp    $0x2,%rsi
   2a180:	0f 82 3d 06 00 00    	jb     2a7c3 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xb73>
   2a186:	41 80 7f 02 bf       	cmpb   $0xbf,0x2(%r15)
   2a18b:	0f 8f 6f 03 00 00    	jg     2a500 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x8b0>
   2a191:	e9 2d 06 00 00       	jmpq   2a7c3 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xb73>
   2a196:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2a19d:	00 00 00 
   2a1a0:	49 89 de             	mov    %rbx,%r14
   2a1a3:	4f 8d 04 27          	lea    (%r15,%r12,1),%r8
   2a1a7:	31 c0                	xor    %eax,%eax
   2a1a9:	4c 89 f9             	mov    %r15,%rcx
   2a1ac:	0f 1f 40 00          	nopl   0x0(%rax)
   2a1b0:	49 39 c8             	cmp    %rcx,%r8
   2a1b3:	0f 84 c7 fa ff ff    	je     29c80 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x30>
   2a1b9:	48 89 c3             	mov    %rax,%rbx
   2a1bc:	48 8d 51 01          	lea    0x1(%rcx),%rdx
   2a1c0:	0f b6 39             	movzbl (%rcx),%edi
   2a1c3:	40 84 ff             	test   %dil,%dil
   2a1c6:	78 08                	js     2a1d0 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x580>
   2a1c8:	89 fe                	mov    %edi,%esi
   2a1ca:	e9 a1 00 00 00       	jmpq   2a270 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x620>
   2a1cf:	90                   	nop
   2a1d0:	4c 39 c2             	cmp    %r8,%rdx
   2a1d3:	74 4d                	je     2a222 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x5d2>
   2a1d5:	48 8d 51 02          	lea    0x2(%rcx),%rdx
   2a1d9:	0f b6 71 01          	movzbl 0x1(%rcx),%esi
   2a1dd:	83 e6 3f             	and    $0x3f,%esi
   2a1e0:	48 89 d0             	mov    %rdx,%rax
   2a1e3:	89 fd                	mov    %edi,%ebp
   2a1e5:	83 e5 1f             	and    $0x1f,%ebp
   2a1e8:	40 80 ff df          	cmp    $0xdf,%dil
   2a1ec:	76 44                	jbe    2a232 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x5e2>
   2a1ee:	4c 39 c0             	cmp    %r8,%rax
   2a1f1:	74 46                	je     2a239 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x5e9>
   2a1f3:	44 0f b6 08          	movzbl (%rax),%r9d
   2a1f7:	48 83 c0 01          	add    $0x1,%rax
   2a1fb:	41 83 e1 3f          	and    $0x3f,%r9d
   2a1ff:	48 89 c2             	mov    %rax,%rdx
   2a202:	c1 e6 06             	shl    $0x6,%esi
   2a205:	44 09 ce             	or     %r9d,%esi
   2a208:	40 80 ff f0          	cmp    $0xf0,%dil
   2a20c:	72 3d                	jb     2a24b <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x5fb>
   2a20e:	4c 39 c0             	cmp    %r8,%rax
   2a211:	74 3f                	je     2a252 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x602>
   2a213:	0f b6 38             	movzbl (%rax),%edi
   2a216:	48 83 c0 01          	add    $0x1,%rax
   2a21a:	83 e7 3f             	and    $0x3f,%edi
   2a21d:	48 89 c2             	mov    %rax,%rdx
   2a220:	eb 32                	jmp    2a254 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x604>
   2a222:	31 f6                	xor    %esi,%esi
   2a224:	4c 89 c0             	mov    %r8,%rax
   2a227:	89 fd                	mov    %edi,%ebp
   2a229:	83 e5 1f             	and    $0x1f,%ebp
   2a22c:	40 80 ff df          	cmp    $0xdf,%dil
   2a230:	77 bc                	ja     2a1ee <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x59e>
   2a232:	c1 e5 06             	shl    $0x6,%ebp
   2a235:	09 ee                	or     %ebp,%esi
   2a237:	eb 37                	jmp    2a270 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x620>
   2a239:	45 31 c9             	xor    %r9d,%r9d
   2a23c:	4c 89 c0             	mov    %r8,%rax
   2a23f:	c1 e6 06             	shl    $0x6,%esi
   2a242:	44 09 ce             	or     %r9d,%esi
   2a245:	40 80 ff f0          	cmp    $0xf0,%dil
   2a249:	73 c3                	jae    2a20e <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x5be>
   2a24b:	c1 e5 0c             	shl    $0xc,%ebp
   2a24e:	09 ee                	or     %ebp,%esi
   2a250:	eb 1e                	jmp    2a270 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x620>
   2a252:	31 ff                	xor    %edi,%edi
   2a254:	83 e5 07             	and    $0x7,%ebp
   2a257:	c1 e5 12             	shl    $0x12,%ebp
   2a25a:	c1 e6 06             	shl    $0x6,%esi
   2a25d:	09 ee                	or     %ebp,%esi
   2a25f:	09 fe                	or     %edi,%esi
   2a261:	81 fe 00 00 11 00    	cmp    $0x110000,%esi
   2a267:	0f 84 13 fa ff ff    	je     29c80 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x30>
   2a26d:	0f 1f 00             	nopl   (%rax)
   2a270:	83 fe 24             	cmp    $0x24,%esi
   2a273:	74 15                	je     2a28a <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x63a>
   2a275:	48 89 d8             	mov    %rbx,%rax
   2a278:	48 29 c8             	sub    %rcx,%rax
   2a27b:	48 01 d0             	add    %rdx,%rax
   2a27e:	48 89 d1             	mov    %rdx,%rcx
   2a281:	83 fe 2e             	cmp    $0x2e,%esi
   2a284:	0f 85 26 ff ff ff    	jne    2a1b0 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x560>
   2a28a:	48 85 db             	test   %rbx,%rbx
   2a28d:	74 3b                	je     2a2ca <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x67a>
   2a28f:	49 39 dc             	cmp    %rbx,%r12
   2a292:	74 36                	je     2a2ca <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x67a>
   2a294:	0f 86 43 05 00 00    	jbe    2a7dd <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xb8d>
   2a29a:	41 80 3c 1f bf       	cmpb   $0xbf,(%r15,%rbx,1)
   2a29f:	0f 8e 38 05 00 00    	jle    2a7dd <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xb8d>
   2a2a5:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   2a2aa:	4c 89 fe             	mov    %r15,%rsi
   2a2ad:	48 89 da             	mov    %rbx,%rdx
   2a2b0:	ff 15 92 b7 01 00    	callq  *0x1b792(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2a2b6:	84 c0                	test   %al,%al
   2a2b8:	0f 85 73 04 00 00    	jne    2a731 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xae1>
   2a2be:	41 80 3c 1f bf       	cmpb   $0xbf,(%r15,%rbx,1)
   2a2c3:	7f 1e                	jg     2a2e3 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x693>
   2a2c5:	e9 2d 05 00 00       	jmpq   2a7f7 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xba7>
   2a2ca:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   2a2cf:	4c 89 fe             	mov    %r15,%rsi
   2a2d2:	48 89 da             	mov    %rbx,%rdx
   2a2d5:	ff 15 6d b7 01 00    	callq  *0x1b76d(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2a2db:	84 c0                	test   %al,%al
   2a2dd:	0f 85 4e 04 00 00    	jne    2a731 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xae1>
   2a2e3:	49 01 df             	add    %rbx,%r15
   2a2e6:	49 29 dc             	sub    %rbx,%r12
   2a2e9:	4d 89 e5             	mov    %r12,%r13
   2a2ec:	4c 89 f9             	mov    %r15,%rcx
   2a2ef:	4c 89 f3             	mov    %r14,%rbx
   2a2f2:	e9 06 fd ff ff       	jmpq   29ffd <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x3ad>
   2a2f7:	ba 01 00 00 00       	mov    $0x1,%edx
   2a2fc:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   2a301:	48 8d 35 b3 f5 00 00 	lea    0xf5b3(%rip),%rsi        # 398bb <str.6+0x259b>
   2a308:	ff 15 3a b7 01 00    	callq  *0x1b73a(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2a30e:	48 89 e9             	mov    %rbp,%rcx
   2a311:	41 bd 00 00 00 00    	mov    $0x0,%r13d
   2a317:	84 c0                	test   %al,%al
   2a319:	0f 84 de fc ff ff    	je     29ffd <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x3ad>
   2a31f:	e9 0d 04 00 00       	jmpq   2a731 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xae1>
   2a324:	4b 8d 34 27          	lea    (%r15,%r12,1),%rsi
   2a328:	31 c0                	xor    %eax,%eax
   2a32a:	48 89 f7             	mov    %rsi,%rdi
   2a32d:	49 83 fc 02          	cmp    $0x2,%r12
   2a331:	74 0c                	je     2a33f <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x6ef>
   2a333:	49 8d 7f 03          	lea    0x3(%r15),%rdi
   2a337:	41 0f b6 47 02       	movzbl 0x2(%r15),%eax
   2a33c:	83 e0 3f             	and    $0x3f,%eax
   2a33f:	89 d1                	mov    %edx,%ecx
   2a341:	83 e1 1f             	and    $0x1f,%ecx
   2a344:	80 fa df             	cmp    $0xdf,%dl
   2a347:	0f 86 d9 02 00 00    	jbe    2a626 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x9d6>
   2a34d:	48 39 f7             	cmp    %rsi,%rdi
   2a350:	0f 84 92 03 00 00    	je     2a6e8 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xa98>
   2a356:	44 0f b6 07          	movzbl (%rdi),%r8d
   2a35a:	48 83 c7 01          	add    $0x1,%rdi
   2a35e:	41 83 e0 3f          	and    $0x3f,%r8d
   2a362:	c1 e0 06             	shl    $0x6,%eax
   2a365:	44 09 c0             	or     %r8d,%eax
   2a368:	80 fa f0             	cmp    $0xf0,%dl
   2a36b:	0f 82 8c 03 00 00    	jb     2a6fd <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xaad>
   2a371:	48 39 f7             	cmp    %rsi,%rdi
   2a374:	0f 84 96 03 00 00    	je     2a710 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xac0>
   2a37a:	0f b6 17             	movzbl (%rdi),%edx
   2a37d:	83 e2 3f             	and    $0x3f,%edx
   2a380:	e9 8d 03 00 00       	jmpq   2a712 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xac2>
   2a385:	48 8d 05 32 f5 00 00 	lea    0xf532(%rip),%rax        # 398be <str.6+0x259e>
   2a38c:	48 8d 0d 29 f5 00 00 	lea    0xf529(%rip),%rcx        # 398bc <str.6+0x259c>
   2a393:	48 39 cb             	cmp    %rcx,%rbx
   2a396:	0f 84 72 02 00 00    	je     2a60e <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x9be>
   2a39c:	0f b7 0b             	movzwl (%rbx),%ecx
   2a39f:	48 8d 05 18 f5 00 00 	lea    0xf518(%rip),%rax        # 398be <str.6+0x259e>
   2a3a6:	81 f9 53 50 00 00    	cmp    $0x5053,%ecx
   2a3ac:	0f 84 5c 02 00 00    	je     2a60e <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x9be>
   2a3b2:	48 8d 05 08 f5 00 00 	lea    0xf508(%rip),%rax        # 398c1 <str.6+0x25a1>
   2a3b9:	48 8d 0d ff f4 00 00 	lea    0xf4ff(%rip),%rcx        # 398bf <str.6+0x259f>
   2a3c0:	48 39 cb             	cmp    %rcx,%rbx
   2a3c3:	0f 84 45 02 00 00    	je     2a60e <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x9be>
   2a3c9:	0f b7 0b             	movzwl (%rbx),%ecx
   2a3cc:	48 8d 05 ee f4 00 00 	lea    0xf4ee(%rip),%rax        # 398c1 <str.6+0x25a1>
   2a3d3:	81 f9 42 50 00 00    	cmp    $0x5042,%ecx
   2a3d9:	0f 84 2f 02 00 00    	je     2a60e <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x9be>
   2a3df:	48 8d 05 de f4 00 00 	lea    0xf4de(%rip),%rax        # 398c4 <str.6+0x25a4>
   2a3e6:	48 8d 0d d5 f4 00 00 	lea    0xf4d5(%rip),%rcx        # 398c2 <str.6+0x25a2>
   2a3ed:	48 39 cb             	cmp    %rcx,%rbx
   2a3f0:	0f 84 18 02 00 00    	je     2a60e <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x9be>
   2a3f6:	0f b7 0b             	movzwl (%rbx),%ecx
   2a3f9:	48 8d 05 c4 f4 00 00 	lea    0xf4c4(%rip),%rax        # 398c4 <str.6+0x25a4>
   2a400:	81 f9 52 46 00 00    	cmp    $0x4652,%ecx
   2a406:	0f 84 02 02 00 00    	je     2a60e <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x9be>
   2a40c:	48 8d 05 b4 f4 00 00 	lea    0xf4b4(%rip),%rax        # 398c7 <str.6+0x25a7>
   2a413:	48 8d 0d ab f4 00 00 	lea    0xf4ab(%rip),%rcx        # 398c5 <str.6+0x25a5>
   2a41a:	48 39 cb             	cmp    %rcx,%rbx
   2a41d:	0f 84 eb 01 00 00    	je     2a60e <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x9be>
   2a423:	0f b7 0b             	movzwl (%rbx),%ecx
   2a426:	48 8d 05 9a f4 00 00 	lea    0xf49a(%rip),%rax        # 398c7 <str.6+0x25a7>
   2a42d:	81 f9 4c 54 00 00    	cmp    $0x544c,%ecx
   2a433:	0f 84 d5 01 00 00    	je     2a60e <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x9be>
   2a439:	48 8d 05 8a f4 00 00 	lea    0xf48a(%rip),%rax        # 398ca <str.6+0x25aa>
   2a440:	48 8d 0d 81 f4 00 00 	lea    0xf481(%rip),%rcx        # 398c8 <str.6+0x25a8>
   2a447:	48 39 cb             	cmp    %rcx,%rbx
   2a44a:	0f 84 be 01 00 00    	je     2a60e <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x9be>
   2a450:	0f b7 0b             	movzwl (%rbx),%ecx
   2a453:	48 8d 05 70 f4 00 00 	lea    0xf470(%rip),%rax        # 398ca <str.6+0x25aa>
   2a45a:	81 f9 47 54 00 00    	cmp    $0x5447,%ecx
   2a460:	0f 84 a8 01 00 00    	je     2a60e <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x9be>
   2a466:	48 8d 05 60 f4 00 00 	lea    0xf460(%rip),%rax        # 398cd <str.6+0x25ad>
   2a46d:	48 8d 0d 57 f4 00 00 	lea    0xf457(%rip),%rcx        # 398cb <str.6+0x25ab>
   2a474:	48 39 cb             	cmp    %rcx,%rbx
   2a477:	0f 84 91 01 00 00    	je     2a60e <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x9be>
   2a47d:	0f b7 0b             	movzwl (%rbx),%ecx
   2a480:	48 8d 05 46 f4 00 00 	lea    0xf446(%rip),%rax        # 398cd <str.6+0x25ad>
   2a487:	81 f9 4c 50 00 00    	cmp    $0x504c,%ecx
   2a48d:	0f 84 7b 01 00 00    	je     2a60e <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x9be>
   2a493:	48 8d 05 36 f4 00 00 	lea    0xf436(%rip),%rax        # 398d0 <str.6+0x25b0>
   2a49a:	48 8d 0d 2d f4 00 00 	lea    0xf42d(%rip),%rcx        # 398ce <str.6+0x25ae>
   2a4a1:	48 39 cb             	cmp    %rcx,%rbx
   2a4a4:	0f 84 64 01 00 00    	je     2a60e <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x9be>
   2a4aa:	0f b7 0b             	movzwl (%rbx),%ecx
   2a4ad:	48 8d 05 1c f4 00 00 	lea    0xf41c(%rip),%rax        # 398d0 <str.6+0x25b0>
   2a4b4:	81 f9 52 50 00 00    	cmp    $0x5052,%ecx
   2a4ba:	0f 84 4e 01 00 00    	je     2a60e <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x9be>
   2a4c0:	80 3b 75             	cmpb   $0x75,(%rbx)
   2a4c3:	0f 84 bd fc ff ff    	je     2a186 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x536>
   2a4c9:	e9 b2 f7 ff ff       	jmpq   29c80 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x30>
   2a4ce:	48 8d 05 fd f3 00 00 	lea    0xf3fd(%rip),%rax        # 398d2 <str.6+0x25b2>
   2a4d5:	48 8d 0d f5 f3 00 00 	lea    0xf3f5(%rip),%rcx        # 398d1 <str.6+0x25b1>
   2a4dc:	48 39 cb             	cmp    %rcx,%rbx
   2a4df:	0f 84 29 01 00 00    	je     2a60e <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x9be>
   2a4e5:	8a 0b                	mov    (%rbx),%cl
   2a4e7:	48 8d 05 e4 f3 00 00 	lea    0xf3e4(%rip),%rax        # 398d2 <str.6+0x25b2>
   2a4ee:	80 f9 43             	cmp    $0x43,%cl
   2a4f1:	0f 84 17 01 00 00    	je     2a60e <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x9be>
   2a4f7:	80 f9 75             	cmp    $0x75,%cl
   2a4fa:	0f 85 80 f7 ff ff    	jne    29c80 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x30>
   2a500:	49 8d 7f 02          	lea    0x2(%r15),%rdi
   2a504:	4d 8d 04 37          	lea    (%r15,%rsi,1),%r8
   2a508:	49 83 c0 01          	add    $0x1,%r8
   2a50c:	48 83 c6 ff          	add    $0xffffffffffffffff,%rsi
   2a510:	48 89 f9             	mov    %rdi,%rcx
   2a513:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2a51a:	00 00 00 
   2a51d:	0f 1f 00             	nopl   (%rax)
   2a520:	4c 39 c1             	cmp    %r8,%rcx
   2a523:	0f 84 41 01 00 00    	je     2a66a <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xa1a>
   2a529:	48 8d 41 01          	lea    0x1(%rcx),%rax
   2a52d:	0f b6 29             	movzbl (%rcx),%ebp
   2a530:	40 84 ed             	test   %bpl,%bpl
   2a533:	78 0b                	js     2a540 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x8f0>
   2a535:	48 89 c1             	mov    %rax,%rcx
   2a538:	89 ea                	mov    %ebp,%edx
   2a53a:	e9 a1 00 00 00       	jmpq   2a5e0 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x990>
   2a53f:	90                   	nop
   2a540:	4c 39 c0             	cmp    %r8,%rax
   2a543:	74 41                	je     2a586 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x936>
   2a545:	0f b6 51 01          	movzbl 0x1(%rcx),%edx
   2a549:	48 83 c1 02          	add    $0x2,%rcx
   2a54d:	83 e2 3f             	and    $0x3f,%edx
   2a550:	89 eb                	mov    %ebp,%ebx
   2a552:	83 e3 1f             	and    $0x1f,%ebx
   2a555:	40 80 fd df          	cmp    $0xdf,%bpl
   2a559:	76 3b                	jbe    2a596 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x946>
   2a55b:	4c 39 c1             	cmp    %r8,%rcx
   2a55e:	74 3d                	je     2a59d <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x94d>
   2a560:	0f b6 01             	movzbl (%rcx),%eax
   2a563:	48 83 c1 01          	add    $0x1,%rcx
   2a567:	83 e0 3f             	and    $0x3f,%eax
   2a56a:	c1 e2 06             	shl    $0x6,%edx
   2a56d:	09 c2                	or     %eax,%edx
   2a56f:	40 80 fd f0          	cmp    $0xf0,%bpl
   2a573:	72 38                	jb     2a5ad <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x95d>
   2a575:	4c 39 c1             	cmp    %r8,%rcx
   2a578:	74 3a                	je     2a5b4 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x964>
   2a57a:	0f b6 29             	movzbl (%rcx),%ebp
   2a57d:	48 83 c1 01          	add    $0x1,%rcx
   2a581:	83 e5 3f             	and    $0x3f,%ebp
   2a584:	eb 33                	jmp    2a5b9 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x969>
   2a586:	31 d2                	xor    %edx,%edx
   2a588:	4c 89 c1             	mov    %r8,%rcx
   2a58b:	89 eb                	mov    %ebp,%ebx
   2a58d:	83 e3 1f             	and    $0x1f,%ebx
   2a590:	40 80 fd df          	cmp    $0xdf,%bpl
   2a594:	77 c5                	ja     2a55b <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x90b>
   2a596:	c1 e3 06             	shl    $0x6,%ebx
   2a599:	09 da                	or     %ebx,%edx
   2a59b:	eb 43                	jmp    2a5e0 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x990>
   2a59d:	31 c0                	xor    %eax,%eax
   2a59f:	4c 89 c1             	mov    %r8,%rcx
   2a5a2:	c1 e2 06             	shl    $0x6,%edx
   2a5a5:	09 c2                	or     %eax,%edx
   2a5a7:	40 80 fd f0          	cmp    $0xf0,%bpl
   2a5ab:	73 c8                	jae    2a575 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x925>
   2a5ad:	c1 e3 0c             	shl    $0xc,%ebx
   2a5b0:	09 da                	or     %ebx,%edx
   2a5b2:	eb 2c                	jmp    2a5e0 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x990>
   2a5b4:	31 ed                	xor    %ebp,%ebp
   2a5b6:	4c 89 c1             	mov    %r8,%rcx
   2a5b9:	83 e3 07             	and    $0x7,%ebx
   2a5bc:	c1 e3 12             	shl    $0x12,%ebx
   2a5bf:	c1 e2 06             	shl    $0x6,%edx
   2a5c2:	09 da                	or     %ebx,%edx
   2a5c4:	09 ea                	or     %ebp,%edx
   2a5c6:	81 fa 00 00 11 00    	cmp    $0x110000,%edx
   2a5cc:	0f 84 98 00 00 00    	je     2a66a <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xa1a>
   2a5d2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2a5d9:	00 00 00 
   2a5dc:	0f 1f 40 00          	nopl   0x0(%rax)
   2a5e0:	8d 42 d0             	lea    -0x30(%rdx),%eax
   2a5e3:	83 f8 0a             	cmp    $0xa,%eax
   2a5e6:	0f 82 34 ff ff ff    	jb     2a520 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x8d0>
   2a5ec:	83 c2 9f             	add    $0xffffff9f,%edx
   2a5ef:	83 fa 06             	cmp    $0x6,%edx
   2a5f2:	0f 82 28 ff ff ff    	jb     2a520 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x8d0>
   2a5f8:	b3 01                	mov    $0x1,%bl
   2a5fa:	ba 10 00 00 00       	mov    $0x10,%edx
   2a5ff:	ff 15 db b4 01 00    	callq  *0x1b4db(%rip)        # 45ae0 <_GLOBAL_OFFSET_TABLE_+0x150>
   2a605:	a8 01                	test   $0x1,%al
   2a607:	74 76                	je     2a67f <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xa2f>
   2a609:	e9 72 f6 ff ff       	jmpq   29c80 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x30>
   2a60e:	ba 01 00 00 00       	mov    $0x1,%edx
   2a613:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   2a618:	48 89 c6             	mov    %rax,%rsi
   2a61b:	ff 15 27 b4 01 00    	callq  *0x1b427(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2a621:	e9 b0 00 00 00       	jmpq   2a6d6 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xa86>
   2a626:	c1 e1 06             	shl    $0x6,%ecx
   2a629:	09 c8                	or     %ecx,%eax
   2a62b:	83 f8 2e             	cmp    $0x2e,%eax
   2a62e:	0f 84 0e fa ff ff    	je     2a042 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x3f2>
   2a634:	ba 01 00 00 00       	mov    $0x1,%edx
   2a639:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   2a63e:	48 8d 35 76 f2 00 00 	lea    0xf276(%rip),%rsi        # 398bb <str.6+0x259b>
   2a645:	ff 15 fd b3 01 00    	callq  *0x1b3fd(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2a64b:	84 c0                	test   %al,%al
   2a64d:	0f 85 de 00 00 00    	jne    2a731 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xae1>
   2a653:	4d 8d 6c 24 ff       	lea    -0x1(%r12),%r13
   2a658:	48 89 e9             	mov    %rbp,%rcx
   2a65b:	80 7d 00 bf          	cmpb   $0xbf,0x0(%rbp)
   2a65f:	0f 8f 98 f9 ff ff    	jg     29ffd <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x3ad>
   2a665:	e9 9f 01 00 00       	jmpq   2a809 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xbb9>
   2a66a:	31 db                	xor    %ebx,%ebx
   2a66c:	ba 10 00 00 00       	mov    $0x10,%edx
   2a671:	ff 15 69 b4 01 00    	callq  *0x1b469(%rip)        # 45ae0 <_GLOBAL_OFFSET_TABLE_+0x150>
   2a677:	a8 01                	test   $0x1,%al
   2a679:	0f 85 01 f6 ff ff    	jne    29c80 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x30>
   2a67f:	48 c1 e8 20          	shr    $0x20,%rax
   2a683:	89 c1                	mov    %eax,%ecx
   2a685:	81 e1 00 f8 ff ff    	and    $0xfffff800,%ecx
   2a68b:	81 f9 00 d8 00 00    	cmp    $0xd800,%ecx
   2a691:	89 c7                	mov    %eax,%edi
   2a693:	b9 00 00 11 00       	mov    $0x110000,%ecx
   2a698:	0f 44 f9             	cmove  %ecx,%edi
   2a69b:	3d ff ff 10 00       	cmp    $0x10ffff,%eax
   2a6a0:	0f 47 f9             	cmova  %ecx,%edi
   2a6a3:	81 ff 00 00 11 00    	cmp    $0x110000,%edi
   2a6a9:	0f 94 c0             	sete   %al
   2a6ac:	08 c3                	or     %al,%bl
   2a6ae:	0f 85 cc f5 ff ff    	jne    29c80 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x30>
   2a6b4:	89 7c 24 30          	mov    %edi,0x30(%rsp)
   2a6b8:	ff 15 32 b7 01 00    	callq  *0x1b732(%rip)        # 45df0 <_GLOBAL_OFFSET_TABLE_+0x460>
   2a6be:	84 c0                	test   %al,%al
   2a6c0:	0f 85 ba f5 ff ff    	jne    29c80 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x30>
   2a6c6:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
   2a6cb:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   2a6d0:	ff 15 4a b6 01 00    	callq  *0x1b64a(%rip)        # 45d20 <_GLOBAL_OFFSET_TABLE_+0x390>
   2a6d6:	84 c0                	test   %al,%al
   2a6d8:	4c 89 f3             	mov    %r14,%rbx
   2a6db:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   2a6e0:	0f 84 17 f9 ff ff    	je     29ffd <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x3ad>
   2a6e6:	eb 49                	jmp    2a731 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xae1>
   2a6e8:	45 31 c0             	xor    %r8d,%r8d
   2a6eb:	48 89 f7             	mov    %rsi,%rdi
   2a6ee:	c1 e0 06             	shl    $0x6,%eax
   2a6f1:	44 09 c0             	or     %r8d,%eax
   2a6f4:	80 fa f0             	cmp    $0xf0,%dl
   2a6f7:	0f 83 74 fc ff ff    	jae    2a371 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x721>
   2a6fd:	c1 e1 0c             	shl    $0xc,%ecx
   2a700:	09 c8                	or     %ecx,%eax
   2a702:	83 f8 2e             	cmp    $0x2e,%eax
   2a705:	0f 84 37 f9 ff ff    	je     2a042 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x3f2>
   2a70b:	e9 24 ff ff ff       	jmpq   2a634 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x9e4>
   2a710:	31 d2                	xor    %edx,%edx
   2a712:	83 e1 07             	and    $0x7,%ecx
   2a715:	c1 e1 12             	shl    $0x12,%ecx
   2a718:	c1 e0 06             	shl    $0x6,%eax
   2a71b:	09 c8                	or     %ecx,%eax
   2a71d:	09 d0                	or     %edx,%eax
   2a71f:	83 f8 2e             	cmp    $0x2e,%eax
   2a722:	0f 85 0c ff ff ff    	jne    2a634 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x9e4>
   2a728:	e9 15 f9 ff ff       	jmpq   2a042 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0x3f2>
   2a72d:	31 c0                	xor    %eax,%eax
   2a72f:	eb 02                	jmp    2a733 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xae3>
   2a731:	b0 01                	mov    $0x1,%al
   2a733:	48 83 c4 78          	add    $0x78,%rsp
   2a737:	5b                   	pop    %rbx
   2a738:	41 5c                	pop    %r12
   2a73a:	41 5d                	pop    %r13
   2a73c:	41 5e                	pop    %r14
   2a73e:	41 5f                	pop    %r15
   2a740:	5d                   	pop    %rbp
   2a741:	c3                   	retq   
   2a742:	48 8d 3d 94 f0 00 00 	lea    0xf094(%rip),%rdi        # 397dd <str.6+0x24bd>
   2a749:	48 8d 15 20 a7 01 00 	lea    0x1a720(%rip),%rdx        # 44e70 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1918>
   2a750:	be 2b 00 00 00       	mov    $0x2b,%esi
   2a755:	ff 15 85 b7 01 00    	callq  *0x1b785(%rip)        # 45ee0 <_GLOBAL_OFFSET_TABLE_+0x550>
   2a75b:	0f 0b                	ud2    
   2a75d:	49 01 ee             	add    %rbp,%r14
   2a760:	48 29 ee             	sub    %rbp,%rsi
   2a763:	4c 8d 05 1e a7 01 00 	lea    0x1a71e(%rip),%r8        # 44e88 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1930>
   2a76a:	ba 01 00 00 00       	mov    $0x1,%edx
   2a76f:	4c 89 f7             	mov    %r14,%rdi
   2a772:	48 89 f1             	mov    %rsi,%rcx
   2a775:	ff 15 bd b6 01 00    	callq  *0x1b6bd(%rip)        # 45e38 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   2a77b:	0f 0b                	ud2    
   2a77d:	4c 8d 05 7c a7 01 00 	lea    0x1a77c(%rip),%r8        # 44f00 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x19a8>
   2a784:	e9 87 00 00 00       	jmpq   2a810 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xbc0>
   2a789:	4c 8d 05 a0 a7 01 00 	lea    0x1a7a0(%rip),%r8        # 44f30 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x19d8>
   2a790:	ba 02 00 00 00       	mov    $0x2,%edx
   2a795:	eb 7e                	jmp    2a815 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xbc5>
   2a797:	4c 8d 05 aa a7 01 00 	lea    0x1a7aa(%rip),%r8        # 44f48 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x19f0>
   2a79e:	eb 70                	jmp    2a810 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xbc0>
   2a7a0:	4c 8d 05 b9 a7 01 00 	lea    0x1a7b9(%rip),%r8        # 44f60 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1a08>
   2a7a7:	ba 01 00 00 00       	mov    $0x1,%edx
   2a7ac:	4c 89 ff             	mov    %r15,%rdi
   2a7af:	4c 89 e6             	mov    %r12,%rsi
   2a7b2:	ff 15 80 b6 01 00    	callq  *0x1b680(%rip)        # 45e38 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   2a7b8:	0f 0b                	ud2    
   2a7ba:	4c 8d 05 b7 a7 01 00 	lea    0x1a7b7(%rip),%r8        # 44f78 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1a20>
   2a7c1:	eb 52                	jmp    2a815 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xbc5>
   2a7c3:	4c 8d 05 c6 a7 01 00 	lea    0x1a7c6(%rip),%r8        # 44f90 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1a38>
   2a7ca:	ba 01 00 00 00       	mov    $0x1,%edx
   2a7cf:	48 89 df             	mov    %rbx,%rdi
   2a7d2:	48 89 f1             	mov    %rsi,%rcx
   2a7d5:	ff 15 5d b6 01 00    	callq  *0x1b65d(%rip)        # 45e38 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   2a7db:	0f 0b                	ud2    
   2a7dd:	4c 8d 05 c4 a7 01 00 	lea    0x1a7c4(%rip),%r8        # 44fa8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1a50>
   2a7e4:	4c 89 ff             	mov    %r15,%rdi
   2a7e7:	4c 89 e6             	mov    %r12,%rsi
   2a7ea:	31 d2                	xor    %edx,%edx
   2a7ec:	48 89 d9             	mov    %rbx,%rcx
   2a7ef:	ff 15 43 b6 01 00    	callq  *0x1b643(%rip)        # 45e38 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   2a7f5:	0f 0b                	ud2    
   2a7f7:	4c 8d 05 c2 a7 01 00 	lea    0x1a7c2(%rip),%r8        # 44fc0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1a68>
   2a7fe:	4c 89 ff             	mov    %r15,%rdi
   2a801:	4c 89 e6             	mov    %r12,%rsi
   2a804:	48 89 da             	mov    %rbx,%rdx
   2a807:	eb 12                	jmp    2a81b <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xbcb>
   2a809:	4c 8d 05 08 a7 01 00 	lea    0x1a708(%rip),%r8        # 44f18 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x19c0>
   2a810:	ba 01 00 00 00       	mov    $0x1,%edx
   2a815:	4c 89 ff             	mov    %r15,%rdi
   2a818:	4c 89 e6             	mov    %r12,%rsi
   2a81b:	4c 89 e1             	mov    %r12,%rcx
   2a81e:	ff 15 14 b6 01 00    	callq  *0x1b614(%rip)        # 45e38 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   2a824:	0f 0b                	ud2    
   2a826:	4c 8d 05 73 a6 01 00 	lea    0x1a673(%rip),%r8        # 44ea0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1948>
   2a82d:	4c 89 f7             	mov    %r14,%rdi
   2a830:	31 d2                	xor    %edx,%edx
   2a832:	48 89 e9             	mov    %rbp,%rcx
   2a835:	ff 15 fd b5 01 00    	callq  *0x1b5fd(%rip)        # 45e38 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   2a83b:	0f 0b                	ud2    
   2a83d:	4c 8d 05 8c a6 01 00 	lea    0x1a68c(%rip),%r8        # 44ed0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1978>
   2a844:	4c 89 fe             	mov    %r15,%rsi
   2a847:	4c 89 ea             	mov    %r13,%rdx
   2a84a:	4c 89 f9             	mov    %r15,%rcx
   2a84d:	ff 15 e5 b5 01 00    	callq  *0x1b5e5(%rip)        # 45e38 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   2a853:	0f 0b                	ud2    
   2a855:	88 64 24 30          	mov    %ah,0x30(%rsp)
   2a859:	48 8d 3d a8 ef 00 00 	lea    0xefa8(%rip),%rdi        # 39808 <str.6+0x24e8>
   2a860:	48 8d 0d 59 a5 01 00 	lea    0x1a559(%rip),%rcx        # 44dc0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1868>
   2a867:	4c 8d 05 4a a6 01 00 	lea    0x1a64a(%rip),%r8        # 44eb8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1960>
   2a86e:	48 8d 54 24 30       	lea    0x30(%rsp),%rdx
   2a873:	be 2b 00 00 00       	mov    $0x2b,%esi
   2a878:	ff 15 6a b3 01 00    	callq  *0x1b36a(%rip)        # 45be8 <_GLOBAL_OFFSET_TABLE_+0x258>
   2a87e:	0f 0b                	ud2    
   2a880:	4c 8d 05 d1 a5 01 00 	lea    0x1a5d1(%rip),%r8        # 44e58 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1900>
   2a887:	ba 01 00 00 00       	mov    $0x1,%edx
   2a88c:	4c 89 ff             	mov    %r15,%rdi
   2a88f:	eb 0f                	jmp    2a8a0 <<rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt+0xc50>
   2a891:	48 89 cf             	mov    %rcx,%rdi
   2a894:	4c 8d 05 4d a6 01 00 	lea    0x1a64d(%rip),%r8        # 44ee8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1990>
   2a89b:	ba 01 00 00 00       	mov    $0x1,%edx
   2a8a0:	4c 89 ee             	mov    %r13,%rsi
   2a8a3:	4c 89 e9             	mov    %r13,%rcx
   2a8a6:	ff 15 8c b5 01 00    	callq  *0x1b58c(%rip)        # 45e38 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   2a8ac:	0f 0b                	ud2    
   2a8ae:	66 90                	xchg   %ax,%ax

000000000002a8b0 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt>:
   2a8b0:	55                   	push   %rbp
   2a8b1:	41 57                	push   %r15
   2a8b3:	41 56                	push   %r14
   2a8b5:	41 55                	push   %r13
   2a8b7:	41 54                	push   %r12
   2a8b9:	53                   	push   %rbx
   2a8ba:	48 81 ec 48 02 00 00 	sub    $0x248,%rsp
   2a8c1:	48 89 f3             	mov    %rsi,%rbx
   2a8c4:	48 89 fd             	mov    %rdi,%rbp
   2a8c7:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
   2a8cc:	ba 00 02 00 00       	mov    $0x200,%edx
   2a8d1:	31 f6                	xor    %esi,%esi
   2a8d3:	ff 15 37 b3 01 00    	callq  *0x1b337(%rip)        # 45c10 <memset@GLIBC_2.2.5>
   2a8d9:	4c 8b 6d 18          	mov    0x18(%rbp),%r13
   2a8dd:	4d 85 ed             	test   %r13,%r13
   2a8e0:	0f 84 0a 01 00 00    	je     2a9f0 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x140>
   2a8e6:	48 89 5c 24 30       	mov    %rbx,0x30(%rsp)
   2a8eb:	48 8b 45 10          	mov    0x10(%rbp),%rax
   2a8ef:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   2a8f4:	44 8a 20             	mov    (%rax),%r12b
   2a8f7:	48 8b 4d 00          	mov    0x0(%rbp),%rcx
   2a8fb:	48 8b 45 08          	mov    0x8(%rbp),%rax
   2a8ff:	48 85 c0             	test   %rax,%rax
   2a902:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   2a907:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   2a90c:	0f 84 f6 00 00 00    	je     2aa08 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x158>
   2a912:	48 01 c8             	add    %rcx,%rax
   2a915:	31 ff                	xor    %edi,%edi
   2a917:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2a91e:	00 00 
   2a920:	48 8d 71 01          	lea    0x1(%rcx),%rsi
   2a924:	0f b6 11             	movzbl (%rcx),%edx
   2a927:	84 d2                	test   %dl,%dl
   2a929:	78 15                	js     2a940 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x90>
   2a92b:	89 d5                	mov    %edx,%ebp
   2a92d:	48 89 f1             	mov    %rsi,%rcx
   2a930:	e9 9b 00 00 00       	jmpq   2a9d0 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x120>
   2a935:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2a93c:	00 00 00 
   2a93f:	90                   	nop
   2a940:	48 39 c6             	cmp    %rax,%rsi
   2a943:	74 3f                	je     2a984 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0xd4>
   2a945:	0f b6 69 01          	movzbl 0x1(%rcx),%ebp
   2a949:	48 83 c1 02          	add    $0x2,%rcx
   2a94d:	83 e5 3f             	and    $0x3f,%ebp
   2a950:	89 d6                	mov    %edx,%esi
   2a952:	83 e6 1f             	and    $0x1f,%esi
   2a955:	80 fa df             	cmp    $0xdf,%dl
   2a958:	76 39                	jbe    2a993 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0xe3>
   2a95a:	48 39 c1             	cmp    %rax,%rcx
   2a95d:	74 3b                	je     2a99a <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0xea>
   2a95f:	0f b6 19             	movzbl (%rcx),%ebx
   2a962:	48 83 c1 01          	add    $0x1,%rcx
   2a966:	83 e3 3f             	and    $0x3f,%ebx
   2a969:	c1 e5 06             	shl    $0x6,%ebp
   2a96c:	09 dd                	or     %ebx,%ebp
   2a96e:	80 fa f0             	cmp    $0xf0,%dl
   2a971:	72 36                	jb     2a9a9 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0xf9>
   2a973:	48 39 c1             	cmp    %rax,%rcx
   2a976:	74 38                	je     2a9b0 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x100>
   2a978:	0f b6 11             	movzbl (%rcx),%edx
   2a97b:	48 83 c1 01          	add    $0x1,%rcx
   2a97f:	83 e2 3f             	and    $0x3f,%edx
   2a982:	eb 31                	jmp    2a9b5 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x105>
   2a984:	31 ed                	xor    %ebp,%ebp
   2a986:	48 89 c1             	mov    %rax,%rcx
   2a989:	89 d6                	mov    %edx,%esi
   2a98b:	83 e6 1f             	and    $0x1f,%esi
   2a98e:	80 fa df             	cmp    $0xdf,%dl
   2a991:	77 c7                	ja     2a95a <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0xaa>
   2a993:	c1 e6 06             	shl    $0x6,%esi
   2a996:	09 f5                	or     %esi,%ebp
   2a998:	eb 36                	jmp    2a9d0 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x120>
   2a99a:	31 db                	xor    %ebx,%ebx
   2a99c:	48 89 c1             	mov    %rax,%rcx
   2a99f:	c1 e5 06             	shl    $0x6,%ebp
   2a9a2:	09 dd                	or     %ebx,%ebp
   2a9a4:	80 fa f0             	cmp    $0xf0,%dl
   2a9a7:	73 ca                	jae    2a973 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0xc3>
   2a9a9:	c1 e6 0c             	shl    $0xc,%esi
   2a9ac:	09 f5                	or     %esi,%ebp
   2a9ae:	eb 20                	jmp    2a9d0 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x120>
   2a9b0:	31 d2                	xor    %edx,%edx
   2a9b2:	48 89 c1             	mov    %rax,%rcx
   2a9b5:	83 e6 07             	and    $0x7,%esi
   2a9b8:	c1 e6 12             	shl    $0x12,%esi
   2a9bb:	c1 e5 06             	shl    $0x6,%ebp
   2a9be:	09 f5                	or     %esi,%ebp
   2a9c0:	09 d5                	or     %edx,%ebp
   2a9c2:	81 fd 00 00 11 00    	cmp    $0x110000,%ebp
   2a9c8:	0f 84 3c 00 00 00    	je     2aa0a <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x15a>
   2a9ce:	66 90                	xchg   %ax,%ax
   2a9d0:	48 81 ff 80 00 00 00 	cmp    $0x80,%rdi
   2a9d7:	0f 84 c9 02 00 00    	je     2aca6 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x3f6>
   2a9dd:	89 6c bc 48          	mov    %ebp,0x48(%rsp,%rdi,4)
   2a9e1:	48 83 c7 01          	add    $0x1,%rdi
   2a9e5:	48 39 c1             	cmp    %rax,%rcx
   2a9e8:	0f 85 32 ff ff ff    	jne    2a920 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x70>
   2a9ee:	eb 1a                	jmp    2aa0a <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x15a>
   2a9f0:	48 8b 75 00          	mov    0x0(%rbp),%rsi
   2a9f4:	48 8b 55 08          	mov    0x8(%rbp),%rdx
   2a9f8:	48 89 df             	mov    %rbx,%rdi
   2a9fb:	ff 15 47 b0 01 00    	callq  *0x1b047(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2aa01:	89 c5                	mov    %eax,%ebp
   2aa03:	e9 09 03 00 00       	jmpq   2ad11 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x461>
   2aa08:	31 ff                	xor    %edi,%edi
   2aa0a:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   2aa0f:	4e 8d 04 28          	lea    (%rax,%r13,1),%r8
   2aa13:	48 8d 48 01          	lea    0x1(%rax),%rcx
   2aa17:	48 8d 04 bd 04 00 00 	lea    0x4(,%rdi,4),%rax
   2aa1e:	00 
   2aa1f:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   2aa24:	b8 bc 02 00 00       	mov    $0x2bc,%eax
   2aa29:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   2aa2e:	41 bf 48 00 00 00    	mov    $0x48,%r15d
   2aa34:	b8 80 00 00 00       	mov    $0x80,%eax
   2aa39:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   2aa3e:	41 bb 01 00 00 00    	mov    $0x1,%r11d
   2aa44:	41 ba 1a 00 00 00    	mov    $0x1a,%r10d
   2aa4a:	45 31 c9             	xor    %r9d,%r9d
   2aa4d:	41 0f b6 d4          	movzbl %r12b,%edx
   2aa51:	c1 e2 08             	shl    $0x8,%edx
   2aa54:	83 ca 01             	or     $0x1,%edx
   2aa57:	41 bc 24 00 00 00    	mov    $0x24,%r12d
   2aa5d:	31 f6                	xor    %esi,%esi
   2aa5f:	bd 01 00 00 00       	mov    $0x1,%ebp
   2aa64:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2aa6b:	00 00 00 
   2aa6e:	66 90                	xchg   %ax,%ax
   2aa70:	4c 89 e0             	mov    %r12,%rax
   2aa73:	4c 29 f8             	sub    %r15,%rax
   2aa76:	41 be 00 00 00 00    	mov    $0x0,%r14d
   2aa7c:	4c 0f 43 f0          	cmovae %rax,%r14
   2aa80:	49 83 fe 01          	cmp    $0x1,%r14
   2aa84:	4d 0f 46 f3          	cmovbe %r11,%r14
   2aa88:	49 83 fe 1a          	cmp    $0x1a,%r14
   2aa8c:	4d 0f 43 f2          	cmovae %r10,%r14
   2aa90:	80 fa 02             	cmp    $0x2,%dl
   2aa93:	75 1b                	jne    2aab0 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x200>
   2aa95:	4c 39 c1             	cmp    %r8,%rcx
   2aa98:	0f 84 08 02 00 00    	je     2aca6 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x3f6>
   2aa9e:	0f b6 11             	movzbl (%rcx),%edx
   2aaa1:	48 83 c1 01          	add    $0x1,%rcx
   2aaa5:	8d 42 9f             	lea    -0x61(%rdx),%eax
   2aaa8:	3c 1a                	cmp    $0x1a,%al
   2aaaa:	73 17                	jae    2aac3 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x213>
   2aaac:	eb 25                	jmp    2aad3 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x223>
   2aaae:	66 90                	xchg   %ax,%ax
   2aab0:	f6 c2 01             	test   $0x1,%dl
   2aab3:	0f 84 ed 01 00 00    	je     2aca6 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x3f6>
   2aab9:	c1 ea 08             	shr    $0x8,%edx
   2aabc:	8d 42 9f             	lea    -0x61(%rdx),%eax
   2aabf:	3c 1a                	cmp    $0x1a,%al
   2aac1:	72 10                	jb     2aad3 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x223>
   2aac3:	8d 42 d0             	lea    -0x30(%rdx),%eax
   2aac6:	3c 09                	cmp    $0x9,%al
   2aac8:	0f 87 d8 01 00 00    	ja     2aca6 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x3f6>
   2aace:	80 c2 ea             	add    $0xea,%dl
   2aad1:	89 d0                	mov    %edx,%eax
   2aad3:	0f b6 d8             	movzbl %al,%ebx
   2aad6:	48 89 d8             	mov    %rbx,%rax
   2aad9:	48 f7 e5             	mul    %rbp
   2aadc:	0f 80 c4 01 00 00    	jo     2aca6 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x3f6>
   2aae2:	48 01 c6             	add    %rax,%rsi
   2aae5:	0f 82 bb 01 00 00    	jb     2aca6 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x3f6>
   2aaeb:	49 39 de             	cmp    %rbx,%r14
   2aaee:	77 24                	ja     2ab14 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x264>
   2aaf0:	bb 24 00 00 00       	mov    $0x24,%ebx
   2aaf5:	4c 29 f3             	sub    %r14,%rbx
   2aaf8:	49 83 c4 24          	add    $0x24,%r12
   2aafc:	48 89 e8             	mov    %rbp,%rax
   2aaff:	48 f7 e3             	mul    %rbx
   2ab02:	66 ba 02 00          	mov    $0x2,%dx
   2ab06:	48 89 c5             	mov    %rax,%rbp
   2ab09:	0f 81 61 ff ff ff    	jno    2aa70 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x1c0>
   2ab0f:	e9 92 01 00 00       	jmpq   2aca6 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x3f6>
   2ab14:	49 01 f1             	add    %rsi,%r9
   2ab17:	0f 82 89 01 00 00    	jb     2aca6 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x3f6>
   2ab1d:	4c 8d 77 01          	lea    0x1(%rdi),%r14
   2ab21:	4c 89 c8             	mov    %r9,%rax
   2ab24:	4c 09 f0             	or     %r14,%rax
   2ab27:	48 c1 e8 20          	shr    $0x20,%rax
   2ab2b:	74 17                	je     2ab44 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x294>
   2ab2d:	4c 89 c8             	mov    %r9,%rax
   2ab30:	31 d2                	xor    %edx,%edx
   2ab32:	49 f7 f6             	div    %r14
   2ab35:	49 89 d1             	mov    %rdx,%r9
   2ab38:	48 01 44 24 08       	add    %rax,0x8(%rsp)
   2ab3d:	73 1b                	jae    2ab5a <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x2aa>
   2ab3f:	e9 62 01 00 00       	jmpq   2aca6 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x3f6>
   2ab44:	44 89 c8             	mov    %r9d,%eax
   2ab47:	31 d2                	xor    %edx,%edx
   2ab49:	41 f7 f6             	div    %r14d
   2ab4c:	41 89 d1             	mov    %edx,%r9d
   2ab4f:	48 01 44 24 08       	add    %rax,0x8(%rsp)
   2ab54:	0f 82 4c 01 00 00    	jb     2aca6 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x3f6>
   2ab5a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   2ab5f:	48 c1 e8 20          	shr    $0x20,%rax
   2ab63:	0f 85 3d 01 00 00    	jne    2aca6 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x3f6>
   2ab69:	48 83 ff 7f          	cmp    $0x7f,%rdi
   2ab6d:	0f 87 33 01 00 00    	ja     2aca6 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x3f6>
   2ab73:	81 7c 24 08 ff ff 10 	cmpl   $0x10ffff,0x8(%rsp)
   2ab7a:	00 
   2ab7b:	0f 87 25 01 00 00    	ja     2aca6 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x3f6>
   2ab81:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   2ab86:	25 00 f8 ff ff       	and    $0xfffff800,%eax
   2ab8b:	3d 00 d8 00 00       	cmp    $0xd800,%eax
   2ab90:	0f 84 10 01 00 00    	je     2aca6 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x3f6>
   2ab96:	4c 39 cf             	cmp    %r9,%rdi
   2ab99:	48 8d 6c 24 48       	lea    0x48(%rsp),%rbp
   2ab9e:	76 1e                	jbe    2abbe <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x30e>
   2aba0:	48 8d 47 ff          	lea    -0x1(%rdi),%rax
   2aba4:	48 83 f8 7f          	cmp    $0x7f,%rax
   2aba8:	0f 87 c8 01 00 00    	ja     2ad76 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x4c6>
   2abae:	8b 54 bc 44          	mov    0x44(%rsp,%rdi,4),%edx
   2abb2:	89 54 bc 48          	mov    %edx,0x48(%rsp,%rdi,4)
   2abb6:	48 89 c7             	mov    %rax,%rdi
   2abb9:	4c 39 c8             	cmp    %r9,%rax
   2abbc:	77 e2                	ja     2aba0 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x2f0>
   2abbe:	49 81 f9 80 00 00 00 	cmp    $0x80,%r9
   2abc5:	0f 83 c3 01 00 00    	jae    2ad8e <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x4de>
   2abcb:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   2abd0:	42 89 44 8c 48       	mov    %eax,0x48(%rsp,%r9,4)
   2abd5:	4c 39 c1             	cmp    %r8,%rcx
   2abd8:	0f 84 58 01 00 00    	je     2ad36 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x486>
   2abde:	44 8a 21             	mov    (%rcx),%r12b
   2abe1:	48 89 f0             	mov    %rsi,%rax
   2abe4:	48 c1 e8 20          	shr    $0x20,%rax
   2abe8:	74 0f                	je     2abf9 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x349>
   2abea:	48 89 f0             	mov    %rsi,%rax
   2abed:	31 d2                	xor    %edx,%edx
   2abef:	48 f7 74 24 10       	divq   0x10(%rsp)
   2abf4:	48 89 c7             	mov    %rax,%rdi
   2abf7:	eb 0a                	jmp    2ac03 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x353>
   2abf9:	89 f0                	mov    %esi,%eax
   2abfb:	31 d2                	xor    %edx,%edx
   2abfd:	f7 74 24 10          	divl   0x10(%rsp)
   2ac01:	89 c7                	mov    %eax,%edi
   2ac03:	48 bb 0f ea a0 0e ea 	movabs $0xea0ea0ea0ea0ea0f,%rbx
   2ac0a:	a0 0e ea 
   2ac0d:	48 89 f8             	mov    %rdi,%rax
   2ac10:	4c 09 f0             	or     %r14,%rax
   2ac13:	48 c1 e8 20          	shr    $0x20,%rax
   2ac17:	74 1b                	je     2ac34 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x384>
   2ac19:	48 89 f8             	mov    %rdi,%rax
   2ac1c:	31 d2                	xor    %edx,%edx
   2ac1e:	49 f7 f6             	div    %r14
   2ac21:	48 89 c6             	mov    %rax,%rsi
   2ac24:	48 01 fe             	add    %rdi,%rsi
   2ac27:	31 ed                	xor    %ebp,%ebp
   2ac29:	48 81 fe c8 01 00 00 	cmp    $0x1c8,%rsi
   2ac30:	73 19                	jae    2ac4b <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x39b>
   2ac32:	eb 39                	jmp    2ac6d <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x3bd>
   2ac34:	89 f8                	mov    %edi,%eax
   2ac36:	31 d2                	xor    %edx,%edx
   2ac38:	41 f7 f6             	div    %r14d
   2ac3b:	89 c6                	mov    %eax,%esi
   2ac3d:	48 01 fe             	add    %rdi,%rsi
   2ac40:	31 ed                	xor    %ebp,%ebp
   2ac42:	48 81 fe c8 01 00 00 	cmp    $0x1c8,%rsi
   2ac49:	72 22                	jb     2ac6d <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x3bd>
   2ac4b:	48 89 f7             	mov    %rsi,%rdi
   2ac4e:	66 90                	xchg   %ax,%ax
   2ac50:	48 89 f8             	mov    %rdi,%rax
   2ac53:	48 f7 e3             	mul    %rbx
   2ac56:	48 89 d6             	mov    %rdx,%rsi
   2ac59:	48 c1 ee 05          	shr    $0x5,%rsi
   2ac5d:	48 83 c5 24          	add    $0x24,%rbp
   2ac61:	48 81 ff 57 3e 00 00 	cmp    $0x3e57,%rdi
   2ac68:	48 89 f7             	mov    %rsi,%rdi
   2ac6b:	77 e3                	ja     2ac50 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x3a0>
   2ac6d:	49 83 c1 01          	add    $0x1,%r9
   2ac71:	48 83 c1 01          	add    $0x1,%rcx
   2ac75:	8d 04 b5 00 00 00 00 	lea    0x0(,%rsi,4),%eax
   2ac7c:	8d 04 c0             	lea    (%rax,%rax,8),%eax
   2ac7f:	83 c6 26             	add    $0x26,%esi
   2ac82:	31 d2                	xor    %edx,%edx
   2ac84:	66 f7 f6             	div    %si
   2ac87:	44 0f b7 f8          	movzwl %ax,%r15d
   2ac8b:	49 01 ef             	add    %rbp,%r15
   2ac8e:	48 83 44 24 20 04    	addq   $0x4,0x20(%rsp)
   2ac94:	b8 02 00 00 00       	mov    $0x2,%eax
   2ac99:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   2ac9e:	4c 89 f7             	mov    %r14,%rdi
   2aca1:	e9 a7 fd ff ff       	jmpq   2aa4d <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x19d>
   2aca6:	48 8d 35 7b ec 00 00 	lea    0xec7b(%rip),%rsi        # 39928 <str.6+0x2608>
   2acad:	ba 09 00 00 00       	mov    $0x9,%edx
   2acb2:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
   2acb7:	48 89 df             	mov    %rbx,%rdi
   2acba:	ff 15 88 ad 01 00    	callq  *0x1ad88(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2acc0:	40 b5 01             	mov    $0x1,%bpl
   2acc3:	84 c0                	test   %al,%al
   2acc5:	75 4a                	jne    2ad11 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x461>
   2acc7:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   2accc:	48 85 d2             	test   %rdx,%rdx
   2accf:	74 2b                	je     2acfc <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x44c>
   2acd1:	48 89 df             	mov    %rbx,%rdi
   2acd4:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
   2acd9:	ff 15 69 ad 01 00    	callq  *0x1ad69(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2acdf:	84 c0                	test   %al,%al
   2ace1:	75 2e                	jne    2ad11 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x461>
   2ace3:	48 8d 35 47 ec 00 00 	lea    0xec47(%rip),%rsi        # 39931 <str.6+0x2611>
   2acea:	ba 01 00 00 00       	mov    $0x1,%edx
   2acef:	48 89 df             	mov    %rbx,%rdi
   2acf2:	ff 15 50 ad 01 00    	callq  *0x1ad50(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2acf8:	84 c0                	test   %al,%al
   2acfa:	75 15                	jne    2ad11 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x461>
   2acfc:	48 89 df             	mov    %rbx,%rdi
   2acff:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
   2ad04:	4c 89 ea             	mov    %r13,%rdx
   2ad07:	ff 15 3b ad 01 00    	callq  *0x1ad3b(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2ad0d:	84 c0                	test   %al,%al
   2ad0f:	74 14                	je     2ad25 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x475>
   2ad11:	89 e8                	mov    %ebp,%eax
   2ad13:	48 81 c4 48 02 00 00 	add    $0x248,%rsp
   2ad1a:	5b                   	pop    %rbx
   2ad1b:	41 5c                	pop    %r12
   2ad1d:	41 5d                	pop    %r13
   2ad1f:	41 5e                	pop    %r14
   2ad21:	41 5f                	pop    %r15
   2ad23:	5d                   	pop    %rbp
   2ad24:	c3                   	retq   
   2ad25:	48 8d 35 06 ec 00 00 	lea    0xec06(%rip),%rsi        # 39932 <str.6+0x2612>
   2ad2c:	ba 01 00 00 00       	mov    $0x1,%edx
   2ad31:	e9 c2 fc ff ff       	jmpq   2a9f8 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x148>
   2ad36:	4c 8d 74 24 1c       	lea    0x1c(%rsp),%r14
   2ad3b:	4c 8d 3d 4e 6d 00 00 	lea    0x6d4e(%rip),%r15        # 31a90 <<char as core::fmt::Display>::fmt>
   2ad42:	4c 8b 64 24 30       	mov    0x30(%rsp),%r12
   2ad47:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
   2ad4c:	48 85 db             	test   %rbx,%rbx
   2ad4f:	74 21                	je     2ad72 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x4c2>
   2ad51:	8b 45 00             	mov    0x0(%rbp),%eax
   2ad54:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
   2ad58:	4c 89 f7             	mov    %r14,%rdi
   2ad5b:	4c 89 e6             	mov    %r12,%rsi
   2ad5e:	41 ff d7             	callq  *%r15
   2ad61:	48 83 c5 04          	add    $0x4,%rbp
   2ad65:	48 83 c3 fc          	add    $0xfffffffffffffffc,%rbx
   2ad69:	84 c0                	test   %al,%al
   2ad6b:	74 df                	je     2ad4c <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x49c>
   2ad6d:	40 b5 01             	mov    $0x1,%bpl
   2ad70:	eb 9f                	jmp    2ad11 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x461>
   2ad72:	31 ed                	xor    %ebp,%ebp
   2ad74:	eb 9b                	jmp    2ad11 <<rustc_demangle::v0::Ident as core::fmt::Display>::fmt+0x461>
   2ad76:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   2ad7a:	48 8d 15 b7 a2 01 00 	lea    0x1a2b7(%rip),%rdx        # 45038 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1ae0>
   2ad81:	be 80 00 00 00       	mov    $0x80,%esi
   2ad86:	ff 15 0c af 01 00    	callq  *0x1af0c(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   2ad8c:	0f 0b                	ud2    
   2ad8e:	48 8d 15 bb a2 01 00 	lea    0x1a2bb(%rip),%rdx        # 45050 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1af8>
   2ad95:	be 80 00 00 00       	mov    $0x80,%esi
   2ad9a:	4c 89 cf             	mov    %r9,%rdi
   2ad9d:	ff 15 f5 ae 01 00    	callq  *0x1aef5(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   2ada3:	0f 0b                	ud2    
   2ada5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2adac:	00 00 00 
   2adaf:	90                   	nop

000000000002adb0 <rustc_demangle::v0::Parser::ident>:
   2adb0:	41 57                	push   %r15
   2adb2:	41 56                	push   %r14
   2adb4:	41 54                	push   %r12
   2adb6:	53                   	push   %rbx
   2adb7:	50                   	push   %rax
   2adb8:	49 89 f1             	mov    %rsi,%r9
   2adbb:	48 8b 76 08          	mov    0x8(%rsi),%rsi
   2adbf:	4d 8b 51 10          	mov    0x10(%r9),%r10
   2adc3:	4c 39 d6             	cmp    %r10,%rsi
   2adc6:	76 1c                	jbe    2ade4 <rustc_demangle::v0::Parser::ident+0x34>
   2adc8:	49 8b 01             	mov    (%r9),%rax
   2adcb:	42 80 3c 10 75       	cmpb   $0x75,(%rax,%r10,1)
   2add0:	75 12                	jne    2ade4 <rustc_demangle::v0::Parser::ident+0x34>
   2add2:	49 83 c2 01          	add    $0x1,%r10
   2add6:	4d 89 51 10          	mov    %r10,0x10(%r9)
   2adda:	41 b0 01             	mov    $0x1,%r8b
   2addd:	4c 39 d6             	cmp    %r10,%rsi
   2ade0:	77 0a                	ja     2adec <rustc_demangle::v0::Parser::ident+0x3c>
   2ade2:	eb 7c                	jmp    2ae60 <rustc_demangle::v0::Parser::ident+0xb0>
   2ade4:	45 31 c0             	xor    %r8d,%r8d
   2ade7:	4c 39 d6             	cmp    %r10,%rsi
   2adea:	76 74                	jbe    2ae60 <rustc_demangle::v0::Parser::ident+0xb0>
   2adec:	4d 8b 19             	mov    (%r9),%r11
   2adef:	43 8a 04 13          	mov    (%r11,%r10,1),%al
   2adf3:	04 d0                	add    $0xd0,%al
   2adf5:	3c 0a                	cmp    $0xa,%al
   2adf7:	73 67                	jae    2ae60 <rustc_demangle::v0::Parser::ident+0xb0>
   2adf9:	49 83 c2 01          	add    $0x1,%r10
   2adfd:	4d 89 51 10          	mov    %r10,0x10(%r9)
   2ae01:	84 c0                	test   %al,%al
   2ae03:	74 34                	je     2ae39 <rustc_demangle::v0::Parser::ident+0x89>
   2ae05:	0f b6 c0             	movzbl %al,%eax
   2ae08:	b9 0a 00 00 00       	mov    $0xa,%ecx
   2ae0d:	0f 1f 00             	nopl   (%rax)
   2ae10:	4c 39 d6             	cmp    %r10,%rsi
   2ae13:	76 26                	jbe    2ae3b <rustc_demangle::v0::Parser::ident+0x8b>
   2ae15:	43 0f b6 1c 13       	movzbl (%r11,%r10,1),%ebx
   2ae1a:	80 c3 d0             	add    $0xd0,%bl
   2ae1d:	80 fb 09             	cmp    $0x9,%bl
   2ae20:	77 19                	ja     2ae3b <rustc_demangle::v0::Parser::ident+0x8b>
   2ae22:	49 83 c2 01          	add    $0x1,%r10
   2ae26:	4d 89 51 10          	mov    %r10,0x10(%r9)
   2ae2a:	48 f7 e1             	mul    %rcx
   2ae2d:	70 31                	jo     2ae60 <rustc_demangle::v0::Parser::ident+0xb0>
   2ae2f:	0f b6 d3             	movzbl %bl,%edx
   2ae32:	48 01 d0             	add    %rdx,%rax
   2ae35:	73 d9                	jae    2ae10 <rustc_demangle::v0::Parser::ident+0x60>
   2ae37:	eb 27                	jmp    2ae60 <rustc_demangle::v0::Parser::ident+0xb0>
   2ae39:	31 c0                	xor    %eax,%eax
   2ae3b:	4c 39 d6             	cmp    %r10,%rsi
   2ae3e:	76 0f                	jbe    2ae4f <rustc_demangle::v0::Parser::ident+0x9f>
   2ae40:	43 80 3c 13 5f       	cmpb   $0x5f,(%r11,%r10,1)
   2ae45:	75 08                	jne    2ae4f <rustc_demangle::v0::Parser::ident+0x9f>
   2ae47:	49 83 c2 01          	add    $0x1,%r10
   2ae4b:	4d 89 51 10          	mov    %r10,0x10(%r9)
   2ae4f:	4c 89 d1             	mov    %r10,%rcx
   2ae52:	48 01 c1             	add    %rax,%rcx
   2ae55:	72 09                	jb     2ae60 <rustc_demangle::v0::Parser::ident+0xb0>
   2ae57:	49 89 49 10          	mov    %rcx,0x10(%r9)
   2ae5b:	48 39 f1             	cmp    %rsi,%rcx
   2ae5e:	76 13                	jbe    2ae73 <rustc_demangle::v0::Parser::ident+0xc3>
   2ae60:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   2ae67:	48 83 c4 08          	add    $0x8,%rsp
   2ae6b:	5b                   	pop    %rbx
   2ae6c:	41 5c                	pop    %r12
   2ae6e:	41 5e                	pop    %r14
   2ae70:	41 5f                	pop    %r15
   2ae72:	c3                   	retq   
   2ae73:	4c 39 d6             	cmp    %r10,%rsi
   2ae76:	74 11                	je     2ae89 <rustc_demangle::v0::Parser::ident+0xd9>
   2ae78:	0f 86 43 01 00 00    	jbe    2afc1 <rustc_demangle::v0::Parser::ident+0x211>
   2ae7e:	43 80 3c 13 bf       	cmpb   $0xbf,(%r11,%r10,1)
   2ae83:	0f 8e 38 01 00 00    	jle    2afc1 <rustc_demangle::v0::Parser::ident+0x211>
   2ae89:	48 85 c9             	test   %rcx,%rcx
   2ae8c:	74 16                	je     2aea4 <rustc_demangle::v0::Parser::ident+0xf4>
   2ae8e:	48 39 ce             	cmp    %rcx,%rsi
   2ae91:	74 11                	je     2aea4 <rustc_demangle::v0::Parser::ident+0xf4>
   2ae93:	0f 86 28 01 00 00    	jbe    2afc1 <rustc_demangle::v0::Parser::ident+0x211>
   2ae99:	41 80 3c 0b bf       	cmpb   $0xbf,(%r11,%rcx,1)
   2ae9e:	0f 8e 1d 01 00 00    	jle    2afc1 <rustc_demangle::v0::Parser::ident+0x211>
   2aea4:	4f 8d 0c 13          	lea    (%r11,%r10,1),%r9
   2aea8:	48 89 ce             	mov    %rcx,%rsi
   2aeab:	4c 29 d6             	sub    %r10,%rsi
   2aeae:	45 84 c0             	test   %r8b,%r8b
   2aeb1:	0f 84 cb 00 00 00    	je     2af82 <rustc_demangle::v0::Parser::ident+0x1d2>
   2aeb7:	4d 8d 04 0b          	lea    (%r11,%rcx,1),%r8
   2aebb:	4d 8d 3c 0b          	lea    (%r11,%rcx,1),%r15
   2aebf:	49 83 c7 ff          	add    $0xffffffffffffffff,%r15
   2aec3:	48 89 c2             	mov    %rax,%rdx
   2aec6:	48 f7 da             	neg    %rdx
   2aec9:	31 c9                	xor    %ecx,%ecx
   2aecb:	4c 8d 35 8f ea 00 00 	lea    0xea8f(%rip),%r14        # 39961 <str.6+0x2641>
   2aed2:	31 db                	xor    %ebx,%ebx
   2aed4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2aedb:	00 00 00 
   2aede:	66 90                	xchg   %ax,%ax
   2aee0:	48 39 da             	cmp    %rbx,%rdx
   2aee3:	0f 84 b8 00 00 00    	je     2afa1 <rustc_demangle::v0::Parser::ident+0x1f1>
   2aee9:	4c 8d 63 ff          	lea    -0x1(%rbx),%r12
   2aeed:	41 80 3c 1f 5f       	cmpb   $0x5f,(%r15,%rbx,1)
   2aef2:	4c 89 e3             	mov    %r12,%rbx
   2aef5:	75 e9                	jne    2aee0 <rustc_demangle::v0::Parser::ident+0x130>
   2aef7:	4c 89 c2             	mov    %r8,%rdx
   2aefa:	4c 29 ca             	sub    %r9,%rdx
   2aefd:	4a 8d 0c 22          	lea    (%rdx,%r12,1),%rcx
   2af01:	4c 01 c8             	add    %r9,%rax
   2af04:	4c 29 c0             	sub    %r8,%rax
   2af07:	48 85 c9             	test   %rcx,%rcx
   2af0a:	74 23                	je     2af2f <rustc_demangle::v0::Parser::ident+0x17f>
   2af0c:	4c 39 e0             	cmp    %r12,%rax
   2af0f:	74 1e                	je     2af2f <rustc_demangle::v0::Parser::ident+0x17f>
   2af11:	48 39 ce             	cmp    %rcx,%rsi
   2af14:	0f 86 bc 00 00 00    	jbe    2afd6 <rustc_demangle::v0::Parser::ident+0x226>
   2af1a:	4b 8d 1c 02          	lea    (%r10,%r8,1),%rbx
   2af1e:	4c 29 cb             	sub    %r9,%rbx
   2af21:	4c 01 db             	add    %r11,%rbx
   2af24:	41 80 3c 1c bf       	cmpb   $0xbf,(%r12,%rbx,1)
   2af29:	0f 8e a7 00 00 00    	jle    2afd6 <rustc_demangle::v0::Parser::ident+0x226>
   2af2f:	4c 01 e2             	add    %r12,%rdx
   2af32:	48 83 c2 01          	add    $0x1,%rdx
   2af36:	48 85 d2             	test   %rdx,%rdx
   2af39:	74 28                	je     2af63 <rustc_demangle::v0::Parser::ident+0x1b3>
   2af3b:	48 8d 58 ff          	lea    -0x1(%rax),%rbx
   2af3f:	4c 39 e3             	cmp    %r12,%rbx
   2af42:	74 1f                	je     2af63 <rustc_demangle::v0::Parser::ident+0x1b3>
   2af44:	48 39 d6             	cmp    %rdx,%rsi
   2af47:	0f 86 9d 00 00 00    	jbe    2afea <rustc_demangle::v0::Parser::ident+0x23a>
   2af4d:	4b 8d 1c 02          	lea    (%r10,%r8,1),%rbx
   2af51:	4c 29 cb             	sub    %r9,%rbx
   2af54:	4c 01 db             	add    %r11,%rbx
   2af57:	41 80 7c 1c 01 bf    	cmpb   $0xbf,0x1(%r12,%rbx,1)
   2af5d:	0f 8e 87 00 00 00    	jle    2afea <rustc_demangle::v0::Parser::ident+0x23a>
   2af63:	4c 89 e6             	mov    %r12,%rsi
   2af66:	48 f7 d6             	not    %rsi
   2af69:	48 01 c6             	add    %rax,%rsi
   2af6c:	4d 01 c2             	add    %r8,%r10
   2af6f:	4d 29 ca             	sub    %r9,%r10
   2af72:	4d 01 da             	add    %r11,%r10
   2af75:	4b 8d 04 14          	lea    (%r12,%r10,1),%rax
   2af79:	48 83 c0 01          	add    $0x1,%rax
   2af7d:	4d 89 ce             	mov    %r9,%r14
   2af80:	eb 22                	jmp    2afa4 <rustc_demangle::v0::Parser::ident+0x1f4>
   2af82:	4c 89 0f             	mov    %r9,(%rdi)
   2af85:	48 89 77 08          	mov    %rsi,0x8(%rdi)
   2af89:	48 8d 05 d1 e9 00 00 	lea    0xe9d1(%rip),%rax        # 39961 <str.6+0x2641>
   2af90:	48 89 47 10          	mov    %rax,0x10(%rdi)
   2af94:	48 c7 47 18 00 00 00 	movq   $0x0,0x18(%rdi)
   2af9b:	00 
   2af9c:	e9 c6 fe ff ff       	jmpq   2ae67 <rustc_demangle::v0::Parser::ident+0xb7>
   2afa1:	4c 89 c8             	mov    %r9,%rax
   2afa4:	48 85 f6             	test   %rsi,%rsi
   2afa7:	0f 84 b3 fe ff ff    	je     2ae60 <rustc_demangle::v0::Parser::ident+0xb0>
   2afad:	4c 89 37             	mov    %r14,(%rdi)
   2afb0:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
   2afb4:	48 89 47 10          	mov    %rax,0x10(%rdi)
   2afb8:	48 89 77 18          	mov    %rsi,0x18(%rdi)
   2afbc:	e9 a6 fe ff ff       	jmpq   2ae67 <rustc_demangle::v0::Parser::ident+0xb7>
   2afc1:	4c 8d 05 b8 a0 01 00 	lea    0x1a0b8(%rip),%r8        # 45080 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1b28>
   2afc8:	4c 89 df             	mov    %r11,%rdi
   2afcb:	4c 89 d2             	mov    %r10,%rdx
   2afce:	ff 15 64 ae 01 00    	callq  *0x1ae64(%rip)        # 45e38 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   2afd4:	0f 0b                	ud2    
   2afd6:	4c 8d 05 bb a0 01 00 	lea    0x1a0bb(%rip),%r8        # 45098 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1b40>
   2afdd:	4c 89 cf             	mov    %r9,%rdi
   2afe0:	31 d2                	xor    %edx,%edx
   2afe2:	ff 15 50 ae 01 00    	callq  *0x1ae50(%rip)        # 45e38 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   2afe8:	0f 0b                	ud2    
   2afea:	4c 8d 05 bf a0 01 00 	lea    0x1a0bf(%rip),%r8        # 450b0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1b58>
   2aff1:	4c 89 cf             	mov    %r9,%rdi
   2aff4:	48 89 f1             	mov    %rsi,%rcx
   2aff7:	ff 15 3b ae 01 00    	callq  *0x1ae3b(%rip)        # 45e38 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   2affd:	0f 0b                	ud2    
   2afff:	90                   	nop

000000000002b000 <rustc_demangle::v0::Parser::skip_path>:
   2b000:	55                   	push   %rbp
   2b001:	41 57                	push   %r15
   2b003:	41 56                	push   %r14
   2b005:	41 54                	push   %r12
   2b007:	53                   	push   %rbx
   2b008:	48 83 ec 20          	sub    $0x20,%rsp
   2b00c:	48 89 fb             	mov    %rdi,%rbx
   2b00f:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   2b013:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   2b017:	41 b6 01             	mov    $0x1,%r14b
   2b01a:	48 39 fe             	cmp    %rdi,%rsi
   2b01d:	0f 86 f2 04 00 00    	jbe    2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b023:	48 8b 0b             	mov    (%rbx),%rcx
   2b026:	8a 14 39             	mov    (%rcx,%rdi,1),%dl
   2b029:	48 8d 47 01          	lea    0x1(%rdi),%rax
   2b02d:	48 89 43 10          	mov    %rax,0x10(%rbx)
   2b031:	80 c2 be             	add    $0xbe,%dl
   2b034:	80 fa 17             	cmp    $0x17,%dl
   2b037:	0f 87 d8 04 00 00    	ja     2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b03d:	4c 8d 63 10          	lea    0x10(%rbx),%r12
   2b041:	0f b6 d2             	movzbl %dl,%edx
   2b044:	48 8d 2d 69 e4 00 00 	lea    0xe469(%rip),%rbp        # 394b4 <str.6+0x2194>
   2b04b:	48 63 54 95 00       	movslq 0x0(%rbp,%rdx,4),%rdx
   2b050:	48 01 ea             	add    %rbp,%rdx
   2b053:	ff e2                	jmpq   *%rdx
   2b055:	48 39 c6             	cmp    %rax,%rsi
   2b058:	0f 86 66 02 00 00    	jbe    2b2c4 <rustc_demangle::v0::Parser::skip_path+0x2c4>
   2b05e:	80 3c 01 5f          	cmpb   $0x5f,(%rcx,%rax,1)
   2b062:	0f 85 5f 02 00 00    	jne    2b2c7 <rustc_demangle::v0::Parser::skip_path+0x2c7>
   2b068:	48 8d 47 02          	lea    0x2(%rdi),%rax
   2b06c:	49 89 04 24          	mov    %rax,(%r12)
   2b070:	31 c0                	xor    %eax,%eax
   2b072:	e9 0c 04 00 00       	jmpq   2b483 <rustc_demangle::v0::Parser::skip_path+0x483>
   2b077:	48 39 c6             	cmp    %rax,%rsi
   2b07a:	0f 86 21 04 00 00    	jbe    2b4a1 <rustc_demangle::v0::Parser::skip_path+0x4a1>
   2b080:	80 3c 01 73          	cmpb   $0x73,(%rcx,%rax,1)
   2b084:	0f 85 17 04 00 00    	jne    2b4a1 <rustc_demangle::v0::Parser::skip_path+0x4a1>
   2b08a:	48 8d 6f 02          	lea    0x2(%rdi),%rbp
   2b08e:	49 89 2c 24          	mov    %rbp,(%r12)
   2b092:	48 39 ee             	cmp    %rbp,%rsi
   2b095:	0f 86 a9 02 00 00    	jbe    2b344 <rustc_demangle::v0::Parser::skip_path+0x344>
   2b09b:	80 3c 29 5f          	cmpb   $0x5f,(%rcx,%rbp,1)
   2b09f:	0f 85 9f 02 00 00    	jne    2b344 <rustc_demangle::v0::Parser::skip_path+0x344>
   2b0a5:	48 83 c7 03          	add    $0x3,%rdi
   2b0a9:	49 89 3c 24          	mov    %rdi,(%r12)
   2b0ad:	e9 ef 03 00 00       	jmpq   2b4a1 <rustc_demangle::v0::Parser::skip_path+0x4a1>
   2b0b2:	48 89 df             	mov    %rbx,%rdi
   2b0b5:	e8 46 ff ff ff       	callq  2b000 <rustc_demangle::v0::Parser::skip_path>
   2b0ba:	84 c0                	test   %al,%al
   2b0bc:	0f 85 53 04 00 00    	jne    2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b0c2:	41 bf 3e 00 00 00    	mov    $0x3e,%r15d
   2b0c8:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
   2b0cc:	48 8b 43 10          	mov    0x10(%rbx),%rax
   2b0d0:	48 39 c1             	cmp    %rax,%rcx
   2b0d3:	77 1d                	ja     2b0f2 <rustc_demangle::v0::Parser::skip_path+0xf2>
   2b0d5:	48 89 df             	mov    %rbx,%rdi
   2b0d8:	e8 e3 04 00 00       	callq  2b5c0 <rustc_demangle::v0::Parser::skip_type>
   2b0dd:	84 c0                	test   %al,%al
   2b0df:	0f 85 30 04 00 00    	jne    2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b0e5:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
   2b0e9:	48 8b 43 10          	mov    0x10(%rbx),%rax
   2b0ed:	48 39 c1             	cmp    %rax,%rcx
   2b0f0:	76 e3                	jbe    2b0d5 <rustc_demangle::v0::Parser::skip_path+0xd5>
   2b0f2:	48 8b 13             	mov    (%rbx),%rdx
   2b0f5:	80 3c 02 45          	cmpb   $0x45,(%rdx,%rax,1)
   2b0f9:	0f 84 3a 04 00 00    	je     2b539 <rustc_demangle::v0::Parser::skip_path+0x539>
   2b0ff:	48 8b 33             	mov    (%rbx),%rsi
   2b102:	80 3c 06 4c          	cmpb   $0x4c,(%rsi,%rax,1)
   2b106:	75 2a                	jne    2b132 <rustc_demangle::v0::Parser::skip_path+0x132>
   2b108:	48 8d 78 01          	lea    0x1(%rax),%rdi
   2b10c:	49 89 3c 24          	mov    %rdi,(%r12)
   2b110:	48 39 f9             	cmp    %rdi,%rcx
   2b113:	76 3f                	jbe    2b154 <rustc_demangle::v0::Parser::skip_path+0x154>
   2b115:	80 3c 3e 5f          	cmpb   $0x5f,(%rsi,%rdi,1)
   2b119:	75 39                	jne    2b154 <rustc_demangle::v0::Parser::skip_path+0x154>
   2b11b:	48 83 c0 02          	add    $0x2,%rax
   2b11f:	49 89 04 24          	mov    %rax,(%r12)
   2b123:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
   2b127:	48 8b 43 10          	mov    0x10(%rbx),%rax
   2b12b:	48 39 c1             	cmp    %rax,%rcx
   2b12e:	76 a5                	jbe    2b0d5 <rustc_demangle::v0::Parser::skip_path+0xd5>
   2b130:	eb c0                	jmp    2b0f2 <rustc_demangle::v0::Parser::skip_path+0xf2>
   2b132:	48 8b 0b             	mov    (%rbx),%rcx
   2b135:	80 3c 01 4b          	cmpb   $0x4b,(%rcx,%rax,1)
   2b139:	75 9a                	jne    2b0d5 <rustc_demangle::v0::Parser::skip_path+0xd5>
   2b13b:	48 83 c0 01          	add    $0x1,%rax
   2b13f:	48 89 43 10          	mov    %rax,0x10(%rbx)
   2b143:	48 89 df             	mov    %rbx,%rdi
   2b146:	e8 d5 09 00 00       	callq  2bb20 <rustc_demangle::v0::Parser::skip_const>
   2b14b:	84 c0                	test   %al,%al
   2b14d:	74 96                	je     2b0e5 <rustc_demangle::v0::Parser::skip_path+0xe5>
   2b14f:	e9 c1 03 00 00       	jmpq   2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b154:	31 c0                	xor    %eax,%eax
   2b156:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2b15d:	00 00 00 
   2b160:	48 39 f9             	cmp    %rdi,%rcx
   2b163:	0f 86 ac 03 00 00    	jbe    2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b169:	0f b6 14 3e          	movzbl (%rsi,%rdi,1),%edx
   2b16d:	80 fa 5f             	cmp    $0x5f,%dl
   2b170:	74 48                	je     2b1ba <rustc_demangle::v0::Parser::skip_path+0x1ba>
   2b172:	8d 6a d0             	lea    -0x30(%rdx),%ebp
   2b175:	40 80 fd 0a          	cmp    $0xa,%bpl
   2b179:	72 20                	jb     2b19b <rustc_demangle::v0::Parser::skip_path+0x19b>
   2b17b:	8d 6a 9f             	lea    -0x61(%rdx),%ebp
   2b17e:	40 80 fd 1a          	cmp    $0x1a,%bpl
   2b182:	73 05                	jae    2b189 <rustc_demangle::v0::Parser::skip_path+0x189>
   2b184:	80 c2 a9             	add    $0xa9,%dl
   2b187:	eb 10                	jmp    2b199 <rustc_demangle::v0::Parser::skip_path+0x199>
   2b189:	8d 6a bf             	lea    -0x41(%rdx),%ebp
   2b18c:	40 80 fd 1a          	cmp    $0x1a,%bpl
   2b190:	0f 83 7f 03 00 00    	jae    2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b196:	80 c2 e3             	add    $0xe3,%dl
   2b199:	89 d5                	mov    %edx,%ebp
   2b19b:	48 83 c7 01          	add    $0x1,%rdi
   2b19f:	49 89 3c 24          	mov    %rdi,(%r12)
   2b1a3:	49 f7 e7             	mul    %r15
   2b1a6:	0f 80 69 03 00 00    	jo     2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b1ac:	40 0f b6 d5          	movzbl %bpl,%edx
   2b1b0:	48 01 d0             	add    %rdx,%rax
   2b1b3:	73 ab                	jae    2b160 <rustc_demangle::v0::Parser::skip_path+0x160>
   2b1b5:	e9 5b 03 00 00       	jmpq   2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b1ba:	48 83 c7 01          	add    $0x1,%rdi
   2b1be:	49 89 3c 24          	mov    %rdi,(%r12)
   2b1c2:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   2b1c6:	0f 85 19 ff ff ff    	jne    2b0e5 <rustc_demangle::v0::Parser::skip_path+0xe5>
   2b1cc:	e9 44 03 00 00       	jmpq   2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b1d1:	48 39 c6             	cmp    %rax,%rsi
   2b1d4:	0f 86 2f 03 00 00    	jbe    2b509 <rustc_demangle::v0::Parser::skip_path+0x509>
   2b1da:	80 3c 01 73          	cmpb   $0x73,(%rcx,%rax,1)
   2b1de:	0f 85 25 03 00 00    	jne    2b509 <rustc_demangle::v0::Parser::skip_path+0x509>
   2b1e4:	48 8d 6f 02          	lea    0x2(%rdi),%rbp
   2b1e8:	49 89 2c 24          	mov    %rbp,(%r12)
   2b1ec:	48 39 ee             	cmp    %rbp,%rsi
   2b1ef:	0f 86 b5 01 00 00    	jbe    2b3aa <rustc_demangle::v0::Parser::skip_path+0x3aa>
   2b1f5:	80 3c 29 5f          	cmpb   $0x5f,(%rcx,%rbp,1)
   2b1f9:	0f 85 ab 01 00 00    	jne    2b3aa <rustc_demangle::v0::Parser::skip_path+0x3aa>
   2b1ff:	48 83 c7 03          	add    $0x3,%rdi
   2b203:	49 89 3c 24          	mov    %rdi,(%r12)
   2b207:	e9 fd 02 00 00       	jmpq   2b509 <rustc_demangle::v0::Parser::skip_path+0x509>
   2b20c:	48 39 c6             	cmp    %rax,%rsi
   2b20f:	0f 86 00 03 00 00    	jbe    2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b215:	8a 44 39 01          	mov    0x1(%rcx,%rdi,1),%al
   2b219:	48 83 c7 02          	add    $0x2,%rdi
   2b21d:	49 89 3c 24          	mov    %rdi,(%r12)
   2b221:	8d 48 bf             	lea    -0x41(%rax),%ecx
   2b224:	80 f9 1a             	cmp    $0x1a,%cl
   2b227:	72 0a                	jb     2b233 <rustc_demangle::v0::Parser::skip_path+0x233>
   2b229:	04 9f                	add    $0x9f,%al
   2b22b:	3c 19                	cmp    $0x19,%al
   2b22d:	0f 87 e2 02 00 00    	ja     2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b233:	48 89 df             	mov    %rbx,%rdi
   2b236:	e8 c5 fd ff ff       	callq  2b000 <rustc_demangle::v0::Parser::skip_path>
   2b23b:	84 c0                	test   %al,%al
   2b23d:	0f 85 d2 02 00 00    	jne    2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b243:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
   2b247:	48 8b 43 10          	mov    0x10(%rbx),%rax
   2b24b:	48 39 c1             	cmp    %rax,%rcx
   2b24e:	0f 86 4d 02 00 00    	jbe    2b4a1 <rustc_demangle::v0::Parser::skip_path+0x4a1>
   2b254:	48 8b 33             	mov    (%rbx),%rsi
   2b257:	80 3c 06 73          	cmpb   $0x73,(%rsi,%rax,1)
   2b25b:	0f 85 40 02 00 00    	jne    2b4a1 <rustc_demangle::v0::Parser::skip_path+0x4a1>
   2b261:	48 8d 78 01          	lea    0x1(%rax),%rdi
   2b265:	49 89 3c 24          	mov    %rdi,(%r12)
   2b269:	48 39 f9             	cmp    %rdi,%rcx
   2b26c:	0f 86 d4 02 00 00    	jbe    2b546 <rustc_demangle::v0::Parser::skip_path+0x546>
   2b272:	80 3c 3e 5f          	cmpb   $0x5f,(%rsi,%rdi,1)
   2b276:	0f 85 ca 02 00 00    	jne    2b546 <rustc_demangle::v0::Parser::skip_path+0x546>
   2b27c:	48 83 c0 02          	add    $0x2,%rax
   2b280:	49 89 04 24          	mov    %rax,(%r12)
   2b284:	e9 18 02 00 00       	jmpq   2b4a1 <rustc_demangle::v0::Parser::skip_path+0x4a1>
   2b289:	48 39 c6             	cmp    %rax,%rsi
   2b28c:	0f 86 38 02 00 00    	jbe    2b4ca <rustc_demangle::v0::Parser::skip_path+0x4ca>
   2b292:	80 3c 01 73          	cmpb   $0x73,(%rcx,%rax,1)
   2b296:	0f 85 2e 02 00 00    	jne    2b4ca <rustc_demangle::v0::Parser::skip_path+0x4ca>
   2b29c:	48 8d 6f 02          	lea    0x2(%rdi),%rbp
   2b2a0:	49 89 2c 24          	mov    %rbp,(%r12)
   2b2a4:	48 39 ee             	cmp    %rbp,%rsi
   2b2a7:	0f 86 63 01 00 00    	jbe    2b410 <rustc_demangle::v0::Parser::skip_path+0x410>
   2b2ad:	80 3c 29 5f          	cmpb   $0x5f,(%rcx,%rbp,1)
   2b2b1:	0f 85 59 01 00 00    	jne    2b410 <rustc_demangle::v0::Parser::skip_path+0x410>
   2b2b7:	48 83 c7 03          	add    $0x3,%rdi
   2b2bb:	49 89 3c 24          	mov    %rdi,(%r12)
   2b2bf:	e9 06 02 00 00       	jmpq   2b4ca <rustc_demangle::v0::Parser::skip_path+0x4ca>
   2b2c4:	48 89 c6             	mov    %rax,%rsi
   2b2c7:	48 8d 6f 02          	lea    0x2(%rdi),%rbp
   2b2cb:	bb 01 00 00 00       	mov    $0x1,%ebx
   2b2d0:	48 29 f3             	sub    %rsi,%rbx
   2b2d3:	31 c0                	xor    %eax,%eax
   2b2d5:	41 b8 3e 00 00 00    	mov    $0x3e,%r8d
   2b2db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   2b2e0:	48 8d 14 2b          	lea    (%rbx,%rbp,1),%rdx
   2b2e4:	48 83 fa 02          	cmp    $0x2,%rdx
   2b2e8:	0f 84 27 02 00 00    	je     2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b2ee:	0f b6 54 29 ff       	movzbl -0x1(%rcx,%rbp,1),%edx
   2b2f3:	80 fa 5f             	cmp    $0x5f,%dl
   2b2f6:	0f 84 7a 01 00 00    	je     2b476 <rustc_demangle::v0::Parser::skip_path+0x476>
   2b2fc:	8d 72 d0             	lea    -0x30(%rdx),%esi
   2b2ff:	40 80 fe 0a          	cmp    $0xa,%sil
   2b303:	72 20                	jb     2b325 <rustc_demangle::v0::Parser::skip_path+0x325>
   2b305:	8d 72 9f             	lea    -0x61(%rdx),%esi
   2b308:	40 80 fe 1a          	cmp    $0x1a,%sil
   2b30c:	73 05                	jae    2b313 <rustc_demangle::v0::Parser::skip_path+0x313>
   2b30e:	80 c2 a9             	add    $0xa9,%dl
   2b311:	eb 10                	jmp    2b323 <rustc_demangle::v0::Parser::skip_path+0x323>
   2b313:	8d 72 bf             	lea    -0x41(%rdx),%esi
   2b316:	40 80 fe 1a          	cmp    $0x1a,%sil
   2b31a:	0f 83 f5 01 00 00    	jae    2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b320:	80 c2 e3             	add    $0xe3,%dl
   2b323:	89 d6                	mov    %edx,%esi
   2b325:	49 89 2c 24          	mov    %rbp,(%r12)
   2b329:	49 f7 e0             	mul    %r8
   2b32c:	0f 80 e3 01 00 00    	jo     2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b332:	40 0f b6 d6          	movzbl %sil,%edx
   2b336:	48 83 c5 01          	add    $0x1,%rbp
   2b33a:	48 01 d0             	add    %rdx,%rax
   2b33d:	73 a1                	jae    2b2e0 <rustc_demangle::v0::Parser::skip_path+0x2e0>
   2b33f:	e9 d1 01 00 00       	jmpq   2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b344:	31 c0                	xor    %eax,%eax
   2b346:	41 b8 3e 00 00 00    	mov    $0x3e,%r8d
   2b34c:	48 39 ee             	cmp    %rbp,%rsi
   2b34f:	0f 86 c0 01 00 00    	jbe    2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b355:	0f b6 14 29          	movzbl (%rcx,%rbp,1),%edx
   2b359:	80 fa 5f             	cmp    $0x5f,%dl
   2b35c:	0f 84 2c 01 00 00    	je     2b48e <rustc_demangle::v0::Parser::skip_path+0x48e>
   2b362:	8d 7a d0             	lea    -0x30(%rdx),%edi
   2b365:	40 80 ff 0a          	cmp    $0xa,%dil
   2b369:	72 20                	jb     2b38b <rustc_demangle::v0::Parser::skip_path+0x38b>
   2b36b:	8d 7a 9f             	lea    -0x61(%rdx),%edi
   2b36e:	40 80 ff 1a          	cmp    $0x1a,%dil
   2b372:	73 05                	jae    2b379 <rustc_demangle::v0::Parser::skip_path+0x379>
   2b374:	80 c2 a9             	add    $0xa9,%dl
   2b377:	eb 10                	jmp    2b389 <rustc_demangle::v0::Parser::skip_path+0x389>
   2b379:	8d 7a bf             	lea    -0x41(%rdx),%edi
   2b37c:	40 80 ff 1a          	cmp    $0x1a,%dil
   2b380:	0f 83 8f 01 00 00    	jae    2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b386:	80 c2 e3             	add    $0xe3,%dl
   2b389:	89 d7                	mov    %edx,%edi
   2b38b:	48 83 c5 01          	add    $0x1,%rbp
   2b38f:	49 89 2c 24          	mov    %rbp,(%r12)
   2b393:	49 f7 e0             	mul    %r8
   2b396:	0f 80 79 01 00 00    	jo     2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b39c:	40 0f b6 d7          	movzbl %dil,%edx
   2b3a0:	48 01 d0             	add    %rdx,%rax
   2b3a3:	73 a7                	jae    2b34c <rustc_demangle::v0::Parser::skip_path+0x34c>
   2b3a5:	e9 6b 01 00 00       	jmpq   2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b3aa:	31 c0                	xor    %eax,%eax
   2b3ac:	41 b8 3e 00 00 00    	mov    $0x3e,%r8d
   2b3b2:	48 39 ee             	cmp    %rbp,%rsi
   2b3b5:	0f 86 5a 01 00 00    	jbe    2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b3bb:	0f b6 14 29          	movzbl (%rcx,%rbp,1),%edx
   2b3bf:	80 fa 5f             	cmp    $0x5f,%dl
   2b3c2:	0f 84 2e 01 00 00    	je     2b4f6 <rustc_demangle::v0::Parser::skip_path+0x4f6>
   2b3c8:	8d 7a d0             	lea    -0x30(%rdx),%edi
   2b3cb:	40 80 ff 0a          	cmp    $0xa,%dil
   2b3cf:	72 20                	jb     2b3f1 <rustc_demangle::v0::Parser::skip_path+0x3f1>
   2b3d1:	8d 7a 9f             	lea    -0x61(%rdx),%edi
   2b3d4:	40 80 ff 1a          	cmp    $0x1a,%dil
   2b3d8:	73 05                	jae    2b3df <rustc_demangle::v0::Parser::skip_path+0x3df>
   2b3da:	80 c2 a9             	add    $0xa9,%dl
   2b3dd:	eb 10                	jmp    2b3ef <rustc_demangle::v0::Parser::skip_path+0x3ef>
   2b3df:	8d 7a bf             	lea    -0x41(%rdx),%edi
   2b3e2:	40 80 ff 1a          	cmp    $0x1a,%dil
   2b3e6:	0f 83 29 01 00 00    	jae    2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b3ec:	80 c2 e3             	add    $0xe3,%dl
   2b3ef:	89 d7                	mov    %edx,%edi
   2b3f1:	48 83 c5 01          	add    $0x1,%rbp
   2b3f5:	49 89 2c 24          	mov    %rbp,(%r12)
   2b3f9:	49 f7 e0             	mul    %r8
   2b3fc:	0f 80 13 01 00 00    	jo     2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b402:	40 0f b6 d7          	movzbl %dil,%edx
   2b406:	48 01 d0             	add    %rdx,%rax
   2b409:	73 a7                	jae    2b3b2 <rustc_demangle::v0::Parser::skip_path+0x3b2>
   2b40b:	e9 05 01 00 00       	jmpq   2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b410:	31 c0                	xor    %eax,%eax
   2b412:	41 b8 3e 00 00 00    	mov    $0x3e,%r8d
   2b418:	48 39 ee             	cmp    %rbp,%rsi
   2b41b:	0f 86 f4 00 00 00    	jbe    2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b421:	0f b6 14 29          	movzbl (%rcx,%rbp,1),%edx
   2b425:	80 fa 5f             	cmp    $0x5f,%dl
   2b428:	0f 84 89 00 00 00    	je     2b4b7 <rustc_demangle::v0::Parser::skip_path+0x4b7>
   2b42e:	8d 7a d0             	lea    -0x30(%rdx),%edi
   2b431:	40 80 ff 0a          	cmp    $0xa,%dil
   2b435:	72 20                	jb     2b457 <rustc_demangle::v0::Parser::skip_path+0x457>
   2b437:	8d 7a 9f             	lea    -0x61(%rdx),%edi
   2b43a:	40 80 ff 1a          	cmp    $0x1a,%dil
   2b43e:	73 05                	jae    2b445 <rustc_demangle::v0::Parser::skip_path+0x445>
   2b440:	80 c2 a9             	add    $0xa9,%dl
   2b443:	eb 10                	jmp    2b455 <rustc_demangle::v0::Parser::skip_path+0x455>
   2b445:	8d 7a bf             	lea    -0x41(%rdx),%edi
   2b448:	40 80 ff 1a          	cmp    $0x1a,%dil
   2b44c:	0f 83 c3 00 00 00    	jae    2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b452:	80 c2 e3             	add    $0xe3,%dl
   2b455:	89 d7                	mov    %edx,%edi
   2b457:	48 83 c5 01          	add    $0x1,%rbp
   2b45b:	49 89 2c 24          	mov    %rbp,(%r12)
   2b45f:	49 f7 e0             	mul    %r8
   2b462:	0f 80 ad 00 00 00    	jo     2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b468:	40 0f b6 d7          	movzbl %dil,%edx
   2b46c:	48 01 d0             	add    %rdx,%rax
   2b46f:	73 a7                	jae    2b418 <rustc_demangle::v0::Parser::skip_path+0x418>
   2b471:	e9 9f 00 00 00       	jmpq   2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b476:	49 89 2c 24          	mov    %rbp,(%r12)
   2b47a:	48 ff c0             	inc    %rax
   2b47d:	0f 84 92 00 00 00    	je     2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b483:	48 39 f8             	cmp    %rdi,%rax
   2b486:	0f 93 c0             	setae  %al
   2b489:	e9 8a 00 00 00       	jmpq   2b518 <rustc_demangle::v0::Parser::skip_path+0x518>
   2b48e:	48 83 c5 01          	add    $0x1,%rbp
   2b492:	49 89 2c 24          	mov    %rbp,(%r12)
   2b496:	48 ff c0             	inc    %rax
   2b499:	74 7a                	je     2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b49b:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   2b49f:	74 74                	je     2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b4a1:	48 89 e7             	mov    %rsp,%rdi
   2b4a4:	48 89 de             	mov    %rbx,%rsi
   2b4a7:	e8 04 f9 ff ff       	callq  2adb0 <rustc_demangle::v0::Parser::ident>
   2b4ac:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
   2b4b1:	41 0f 94 c6          	sete   %r14b
   2b4b5:	eb 5e                	jmp    2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b4b7:	48 83 c5 01          	add    $0x1,%rbp
   2b4bb:	49 89 2c 24          	mov    %rbp,(%r12)
   2b4bf:	48 ff c0             	inc    %rax
   2b4c2:	74 51                	je     2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b4c4:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   2b4c8:	74 4b                	je     2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b4ca:	48 89 df             	mov    %rbx,%rdi
   2b4cd:	e8 2e fb ff ff       	callq  2b000 <rustc_demangle::v0::Parser::skip_path>
   2b4d2:	84 c0                	test   %al,%al
   2b4d4:	75 3f                	jne    2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b4d6:	48 89 df             	mov    %rbx,%rdi
   2b4d9:	e8 e2 00 00 00       	callq  2b5c0 <rustc_demangle::v0::Parser::skip_type>
   2b4de:	84 c0                	test   %al,%al
   2b4e0:	75 33                	jne    2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b4e2:	48 89 df             	mov    %rbx,%rdi
   2b4e5:	48 83 c4 20          	add    $0x20,%rsp
   2b4e9:	5b                   	pop    %rbx
   2b4ea:	41 5c                	pop    %r12
   2b4ec:	41 5e                	pop    %r14
   2b4ee:	41 5f                	pop    %r15
   2b4f0:	5d                   	pop    %rbp
   2b4f1:	e9 0a fb ff ff       	jmpq   2b000 <rustc_demangle::v0::Parser::skip_path>
   2b4f6:	48 83 c5 01          	add    $0x1,%rbp
   2b4fa:	49 89 2c 24          	mov    %rbp,(%r12)
   2b4fe:	48 ff c0             	inc    %rax
   2b501:	74 12                	je     2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b503:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   2b507:	74 0c                	je     2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b509:	48 89 df             	mov    %rbx,%rdi
   2b50c:	e8 ef fa ff ff       	callq  2b000 <rustc_demangle::v0::Parser::skip_path>
   2b511:	84 c0                	test   %al,%al
   2b513:	74 10                	je     2b525 <rustc_demangle::v0::Parser::skip_path+0x525>
   2b515:	44 89 f0             	mov    %r14d,%eax
   2b518:	48 83 c4 20          	add    $0x20,%rsp
   2b51c:	5b                   	pop    %rbx
   2b51d:	41 5c                	pop    %r12
   2b51f:	41 5e                	pop    %r14
   2b521:	41 5f                	pop    %r15
   2b523:	5d                   	pop    %rbp
   2b524:	c3                   	retq   
   2b525:	48 89 df             	mov    %rbx,%rdi
   2b528:	48 83 c4 20          	add    $0x20,%rsp
   2b52c:	5b                   	pop    %rbx
   2b52d:	41 5c                	pop    %r12
   2b52f:	41 5e                	pop    %r14
   2b531:	41 5f                	pop    %r15
   2b533:	5d                   	pop    %rbp
   2b534:	e9 87 00 00 00       	jmpq   2b5c0 <rustc_demangle::v0::Parser::skip_type>
   2b539:	48 83 c0 01          	add    $0x1,%rax
   2b53d:	49 89 04 24          	mov    %rax,(%r12)
   2b541:	45 31 f6             	xor    %r14d,%r14d
   2b544:	eb cf                	jmp    2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b546:	31 c0                	xor    %eax,%eax
   2b548:	41 b8 3e 00 00 00    	mov    $0x3e,%r8d
   2b54e:	48 39 f9             	cmp    %rdi,%rcx
   2b551:	76 c2                	jbe    2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b553:	0f b6 14 3e          	movzbl (%rsi,%rdi,1),%edx
   2b557:	80 fa 5f             	cmp    $0x5f,%dl
   2b55a:	74 40                	je     2b59c <rustc_demangle::v0::Parser::skip_path+0x59c>
   2b55c:	8d 6a d0             	lea    -0x30(%rdx),%ebp
   2b55f:	40 80 fd 0a          	cmp    $0xa,%bpl
   2b563:	72 1c                	jb     2b581 <rustc_demangle::v0::Parser::skip_path+0x581>
   2b565:	8d 6a 9f             	lea    -0x61(%rdx),%ebp
   2b568:	40 80 fd 1a          	cmp    $0x1a,%bpl
   2b56c:	73 05                	jae    2b573 <rustc_demangle::v0::Parser::skip_path+0x573>
   2b56e:	80 c2 a9             	add    $0xa9,%dl
   2b571:	eb 0c                	jmp    2b57f <rustc_demangle::v0::Parser::skip_path+0x57f>
   2b573:	8d 6a bf             	lea    -0x41(%rdx),%ebp
   2b576:	40 80 fd 1a          	cmp    $0x1a,%bpl
   2b57a:	73 99                	jae    2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b57c:	80 c2 e3             	add    $0xe3,%dl
   2b57f:	89 d5                	mov    %edx,%ebp
   2b581:	48 83 c7 01          	add    $0x1,%rdi
   2b585:	49 89 3c 24          	mov    %rdi,(%r12)
   2b589:	49 f7 e0             	mul    %r8
   2b58c:	70 87                	jo     2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b58e:	40 0f b6 d5          	movzbl %bpl,%edx
   2b592:	48 01 d0             	add    %rdx,%rax
   2b595:	73 b7                	jae    2b54e <rustc_demangle::v0::Parser::skip_path+0x54e>
   2b597:	e9 79 ff ff ff       	jmpq   2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b59c:	48 83 c7 01          	add    $0x1,%rdi
   2b5a0:	49 89 3c 24          	mov    %rdi,(%r12)
   2b5a4:	48 ff c0             	inc    %rax
   2b5a7:	0f 85 ee fe ff ff    	jne    2b49b <rustc_demangle::v0::Parser::skip_path+0x49b>
   2b5ad:	e9 63 ff ff ff       	jmpq   2b515 <rustc_demangle::v0::Parser::skip_path+0x515>
   2b5b2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2b5b9:	00 00 00 
   2b5bc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000002b5c0 <rustc_demangle::v0::Parser::skip_type>:
   2b5c0:	41 57                	push   %r15
   2b5c2:	41 56                	push   %r14
   2b5c4:	53                   	push   %rbx
   2b5c5:	48 83 ec 20          	sub    $0x20,%rsp
   2b5c9:	4c 8b 5f 08          	mov    0x8(%rdi),%r11
   2b5cd:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
   2b5d1:	49 39 cb             	cmp    %rcx,%r11
   2b5d4:	0f 86 d2 03 00 00    	jbe    2b9ac <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2b5da:	48 89 fb             	mov    %rdi,%rbx
   2b5dd:	4c 8b 07             	mov    (%rdi),%r8
   2b5e0:	41 8a 14 08          	mov    (%r8,%rcx,1),%dl
   2b5e4:	48 8d 71 01          	lea    0x1(%rcx),%rsi
   2b5e8:	48 89 77 10          	mov    %rsi,0x10(%rdi)
   2b5ec:	80 c2 bf             	add    $0xbf,%dl
   2b5ef:	80 fa 39             	cmp    $0x39,%dl
   2b5f2:	0f 87 d3 00 00 00    	ja     2b6cb <rustc_demangle::v0::Parser::skip_type+0x10b>
   2b5f8:	4c 8d 7b 10          	lea    0x10(%rbx),%r15
   2b5fc:	31 c0                	xor    %eax,%eax
   2b5fe:	0f b6 d2             	movzbl %dl,%edx
   2b601:	48 8d 3d 0c df 00 00 	lea    0xdf0c(%rip),%rdi        # 39514 <str.6+0x21f4>
   2b608:	48 63 14 97          	movslq (%rdi,%rdx,4),%rdx
   2b60c:	48 01 fa             	add    %rdi,%rdx
   2b60f:	ff e2                	jmpq   *%rdx
   2b611:	49 39 f3             	cmp    %rsi,%r11
   2b614:	0f 86 41 04 00 00    	jbe    2ba5b <rustc_demangle::v0::Parser::skip_type+0x49b>
   2b61a:	41 80 3c 30 4c       	cmpb   $0x4c,(%r8,%rsi,1)
   2b61f:	0f 85 36 04 00 00    	jne    2ba5b <rustc_demangle::v0::Parser::skip_type+0x49b>
   2b625:	48 8d 71 02          	lea    0x2(%rcx),%rsi
   2b629:	49 89 37             	mov    %rsi,(%r15)
   2b62c:	49 39 f3             	cmp    %rsi,%r11
   2b62f:	0f 86 a5 01 00 00    	jbe    2b7da <rustc_demangle::v0::Parser::skip_type+0x21a>
   2b635:	41 80 3c 30 5f       	cmpb   $0x5f,(%r8,%rsi,1)
   2b63a:	0f 85 9a 01 00 00    	jne    2b7da <rustc_demangle::v0::Parser::skip_type+0x21a>
   2b640:	48 83 c1 03          	add    $0x3,%rcx
   2b644:	49 89 0f             	mov    %rcx,(%r15)
   2b647:	e9 0f 04 00 00       	jmpq   2ba5b <rustc_demangle::v0::Parser::skip_type+0x49b>
   2b64c:	0f 1f 40 00          	nopl   0x0(%rax)
   2b650:	48 89 df             	mov    %rbx,%rdi
   2b653:	e8 68 ff ff ff       	callq  2b5c0 <rustc_demangle::v0::Parser::skip_type>
   2b658:	84 c0                	test   %al,%al
   2b65a:	0f 85 4c 03 00 00    	jne    2b9ac <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2b660:	4c 8b 5b 08          	mov    0x8(%rbx),%r11
   2b664:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   2b668:	49 39 f3             	cmp    %rsi,%r11
   2b66b:	76 e3                	jbe    2b650 <rustc_demangle::v0::Parser::skip_type+0x90>
   2b66d:	48 8b 03             	mov    (%rbx),%rax
   2b670:	80 3c 30 45          	cmpb   $0x45,(%rax,%rsi,1)
   2b674:	75 da                	jne    2b650 <rustc_demangle::v0::Parser::skip_type+0x90>
   2b676:	48 83 c6 01          	add    $0x1,%rsi
   2b67a:	49 89 37             	mov    %rsi,(%r15)
   2b67d:	31 c0                	xor    %eax,%eax
   2b67f:	e9 2a 03 00 00       	jmpq   2b9ae <rustc_demangle::v0::Parser::skip_type+0x3ee>
   2b684:	48 89 df             	mov    %rbx,%rdi
   2b687:	e8 34 ff ff ff       	callq  2b5c0 <rustc_demangle::v0::Parser::skip_type>
   2b68c:	89 c1                	mov    %eax,%ecx
   2b68e:	b0 01                	mov    $0x1,%al
   2b690:	84 c9                	test   %cl,%cl
   2b692:	0f 85 16 03 00 00    	jne    2b9ae <rustc_demangle::v0::Parser::skip_type+0x3ee>
   2b698:	48 89 df             	mov    %rbx,%rdi
   2b69b:	48 83 c4 20          	add    $0x20,%rsp
   2b69f:	5b                   	pop    %rbx
   2b6a0:	41 5e                	pop    %r14
   2b6a2:	41 5f                	pop    %r15
   2b6a4:	e9 77 04 00 00       	jmpq   2bb20 <rustc_demangle::v0::Parser::skip_const>
   2b6a9:	49 39 f3             	cmp    %rsi,%r11
   2b6ac:	0f 86 aa 00 00 00    	jbe    2b75c <rustc_demangle::v0::Parser::skip_type+0x19c>
   2b6b2:	41 80 3c 30 5f       	cmpb   $0x5f,(%r8,%rsi,1)
   2b6b7:	0f 85 a2 00 00 00    	jne    2b75f <rustc_demangle::v0::Parser::skip_type+0x19f>
   2b6bd:	48 8d 41 02          	lea    0x2(%rcx),%rax
   2b6c1:	49 89 07             	mov    %rax,(%r15)
   2b6c4:	31 d2                	xor    %edx,%edx
   2b6c6:	e9 4a 02 00 00       	jmpq   2b915 <rustc_demangle::v0::Parser::skip_type+0x355>
   2b6cb:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
   2b6cf:	48 89 df             	mov    %rbx,%rdi
   2b6d2:	48 83 c4 20          	add    $0x20,%rsp
   2b6d6:	5b                   	pop    %rbx
   2b6d7:	41 5e                	pop    %r14
   2b6d9:	41 5f                	pop    %r15
   2b6db:	e9 20 f9 ff ff       	jmpq   2b000 <rustc_demangle::v0::Parser::skip_path>
   2b6e0:	49 39 f3             	cmp    %rsi,%r11
   2b6e3:	0f 86 5e 02 00 00    	jbe    2b947 <rustc_demangle::v0::Parser::skip_type+0x387>
   2b6e9:	41 80 3c 30 47       	cmpb   $0x47,(%r8,%rsi,1)
   2b6ee:	0f 85 53 02 00 00    	jne    2b947 <rustc_demangle::v0::Parser::skip_type+0x387>
   2b6f4:	48 8d 71 02          	lea    0x2(%rcx),%rsi
   2b6f8:	49 89 37             	mov    %rsi,(%r15)
   2b6fb:	49 39 f3             	cmp    %rsi,%r11
   2b6fe:	0f 86 3f 01 00 00    	jbe    2b843 <rustc_demangle::v0::Parser::skip_type+0x283>
   2b704:	41 80 3c 30 5f       	cmpb   $0x5f,(%r8,%rsi,1)
   2b709:	0f 85 34 01 00 00    	jne    2b843 <rustc_demangle::v0::Parser::skip_type+0x283>
   2b70f:	48 83 c1 03          	add    $0x3,%rcx
   2b713:	49 89 0f             	mov    %rcx,(%r15)
   2b716:	48 89 ce             	mov    %rcx,%rsi
   2b719:	e9 29 02 00 00       	jmpq   2b947 <rustc_demangle::v0::Parser::skip_type+0x387>
   2b71e:	49 39 f3             	cmp    %rsi,%r11
   2b721:	0f 86 a3 02 00 00    	jbe    2b9ca <rustc_demangle::v0::Parser::skip_type+0x40a>
   2b727:	41 80 3c 30 47       	cmpb   $0x47,(%r8,%rsi,1)
   2b72c:	0f 85 98 02 00 00    	jne    2b9ca <rustc_demangle::v0::Parser::skip_type+0x40a>
   2b732:	48 8d 71 02          	lea    0x2(%rcx),%rsi
   2b736:	49 89 37             	mov    %rsi,(%r15)
   2b739:	49 39 f3             	cmp    %rsi,%r11
   2b73c:	0f 86 63 01 00 00    	jbe    2b8a5 <rustc_demangle::v0::Parser::skip_type+0x2e5>
   2b742:	41 80 3c 30 5f       	cmpb   $0x5f,(%r8,%rsi,1)
   2b747:	0f 85 58 01 00 00    	jne    2b8a5 <rustc_demangle::v0::Parser::skip_type+0x2e5>
   2b74d:	48 83 c1 03          	add    $0x3,%rcx
   2b751:	49 89 0f             	mov    %rcx,(%r15)
   2b754:	48 89 ce             	mov    %rcx,%rsi
   2b757:	e9 6e 02 00 00       	jmpq   2b9ca <rustc_demangle::v0::Parser::skip_type+0x40a>
   2b75c:	49 89 f3             	mov    %rsi,%r11
   2b75f:	48 8d 71 02          	lea    0x2(%rcx),%rsi
   2b763:	bb 01 00 00 00       	mov    $0x1,%ebx
   2b768:	4c 29 db             	sub    %r11,%rbx
   2b76b:	31 d2                	xor    %edx,%edx
   2b76d:	41 b9 3e 00 00 00    	mov    $0x3e,%r9d
   2b773:	48 8d 04 33          	lea    (%rbx,%rsi,1),%rax
   2b777:	48 83 f8 02          	cmp    $0x2,%rax
   2b77b:	0f 84 2b 02 00 00    	je     2b9ac <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2b781:	41 0f b6 44 30 ff    	movzbl -0x1(%r8,%rsi,1),%eax
   2b787:	3c 5f                	cmp    $0x5f,%al
   2b789:	0f 84 78 01 00 00    	je     2b907 <rustc_demangle::v0::Parser::skip_type+0x347>
   2b78f:	8d 78 d0             	lea    -0x30(%rax),%edi
   2b792:	40 80 ff 0a          	cmp    $0xa,%dil
   2b796:	72 1e                	jb     2b7b6 <rustc_demangle::v0::Parser::skip_type+0x1f6>
   2b798:	8d 78 9f             	lea    -0x61(%rax),%edi
   2b79b:	40 80 ff 1a          	cmp    $0x1a,%dil
   2b79f:	73 04                	jae    2b7a5 <rustc_demangle::v0::Parser::skip_type+0x1e5>
   2b7a1:	04 a9                	add    $0xa9,%al
   2b7a3:	eb 0f                	jmp    2b7b4 <rustc_demangle::v0::Parser::skip_type+0x1f4>
   2b7a5:	8d 78 bf             	lea    -0x41(%rax),%edi
   2b7a8:	40 80 ff 1a          	cmp    $0x1a,%dil
   2b7ac:	0f 83 fa 01 00 00    	jae    2b9ac <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2b7b2:	04 e3                	add    $0xe3,%al
   2b7b4:	89 c7                	mov    %eax,%edi
   2b7b6:	49 89 37             	mov    %rsi,(%r15)
   2b7b9:	48 89 d0             	mov    %rdx,%rax
   2b7bc:	49 f7 e1             	mul    %r9
   2b7bf:	0f 80 e7 01 00 00    	jo     2b9ac <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2b7c5:	48 89 c2             	mov    %rax,%rdx
   2b7c8:	40 0f b6 c7          	movzbl %dil,%eax
   2b7cc:	48 83 c6 01          	add    $0x1,%rsi
   2b7d0:	48 01 c2             	add    %rax,%rdx
   2b7d3:	73 9e                	jae    2b773 <rustc_demangle::v0::Parser::skip_type+0x1b3>
   2b7d5:	e9 d2 01 00 00       	jmpq   2b9ac <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2b7da:	31 c9                	xor    %ecx,%ecx
   2b7dc:	41 b9 3e 00 00 00    	mov    $0x3e,%r9d
   2b7e2:	49 39 f3             	cmp    %rsi,%r11
   2b7e5:	0f 86 c1 01 00 00    	jbe    2b9ac <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2b7eb:	41 0f b6 04 30       	movzbl (%r8,%rsi,1),%eax
   2b7f0:	3c 5f                	cmp    $0x5f,%al
   2b7f2:	0f 84 28 01 00 00    	je     2b920 <rustc_demangle::v0::Parser::skip_type+0x360>
   2b7f8:	44 8d 50 d0          	lea    -0x30(%rax),%r10d
   2b7fc:	41 80 fa 0a          	cmp    $0xa,%r10b
   2b800:	72 1d                	jb     2b81f <rustc_demangle::v0::Parser::skip_type+0x25f>
   2b802:	8d 50 9f             	lea    -0x61(%rax),%edx
   2b805:	80 fa 1a             	cmp    $0x1a,%dl
   2b808:	73 04                	jae    2b80e <rustc_demangle::v0::Parser::skip_type+0x24e>
   2b80a:	04 a9                	add    $0xa9,%al
   2b80c:	eb 0e                	jmp    2b81c <rustc_demangle::v0::Parser::skip_type+0x25c>
   2b80e:	8d 50 bf             	lea    -0x41(%rax),%edx
   2b811:	80 fa 1a             	cmp    $0x1a,%dl
   2b814:	0f 83 92 01 00 00    	jae    2b9ac <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2b81a:	04 e3                	add    $0xe3,%al
   2b81c:	41 89 c2             	mov    %eax,%r10d
   2b81f:	48 83 c6 01          	add    $0x1,%rsi
   2b823:	49 89 37             	mov    %rsi,(%r15)
   2b826:	48 89 c8             	mov    %rcx,%rax
   2b829:	49 f7 e1             	mul    %r9
   2b82c:	0f 80 7a 01 00 00    	jo     2b9ac <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2b832:	48 89 c1             	mov    %rax,%rcx
   2b835:	41 0f b6 c2          	movzbl %r10b,%eax
   2b839:	48 01 c1             	add    %rax,%rcx
   2b83c:	73 a4                	jae    2b7e2 <rustc_demangle::v0::Parser::skip_type+0x222>
   2b83e:	e9 69 01 00 00       	jmpq   2b9ac <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2b843:	31 c0                	xor    %eax,%eax
   2b845:	41 b9 3e 00 00 00    	mov    $0x3e,%r9d
   2b84b:	49 39 f3             	cmp    %rsi,%r11
   2b84e:	0f 86 58 01 00 00    	jbe    2b9ac <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2b854:	41 0f b6 14 30       	movzbl (%r8,%rsi,1),%edx
   2b859:	80 fa 5f             	cmp    $0x5f,%dl
   2b85c:	0f 84 d3 00 00 00    	je     2b935 <rustc_demangle::v0::Parser::skip_type+0x375>
   2b862:	8d 4a d0             	lea    -0x30(%rdx),%ecx
   2b865:	80 f9 0a             	cmp    $0xa,%cl
   2b868:	72 1e                	jb     2b888 <rustc_demangle::v0::Parser::skip_type+0x2c8>
   2b86a:	8d 4a 9f             	lea    -0x61(%rdx),%ecx
   2b86d:	80 f9 1a             	cmp    $0x1a,%cl
   2b870:	73 05                	jae    2b877 <rustc_demangle::v0::Parser::skip_type+0x2b7>
   2b872:	80 c2 a9             	add    $0xa9,%dl
   2b875:	eb 0f                	jmp    2b886 <rustc_demangle::v0::Parser::skip_type+0x2c6>
   2b877:	8d 4a bf             	lea    -0x41(%rdx),%ecx
   2b87a:	80 f9 1a             	cmp    $0x1a,%cl
   2b87d:	0f 83 29 01 00 00    	jae    2b9ac <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2b883:	80 c2 e3             	add    $0xe3,%dl
   2b886:	89 d1                	mov    %edx,%ecx
   2b888:	48 83 c6 01          	add    $0x1,%rsi
   2b88c:	49 89 37             	mov    %rsi,(%r15)
   2b88f:	49 f7 e1             	mul    %r9
   2b892:	0f 80 14 01 00 00    	jo     2b9ac <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2b898:	0f b6 c9             	movzbl %cl,%ecx
   2b89b:	48 01 c8             	add    %rcx,%rax
   2b89e:	73 ab                	jae    2b84b <rustc_demangle::v0::Parser::skip_type+0x28b>
   2b8a0:	e9 07 01 00 00       	jmpq   2b9ac <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2b8a5:	31 c0                	xor    %eax,%eax
   2b8a7:	41 b9 3e 00 00 00    	mov    $0x3e,%r9d
   2b8ad:	49 39 f3             	cmp    %rsi,%r11
   2b8b0:	0f 86 f6 00 00 00    	jbe    2b9ac <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2b8b6:	41 0f b6 14 30       	movzbl (%r8,%rsi,1),%edx
   2b8bb:	80 fa 5f             	cmp    $0x5f,%dl
   2b8be:	0f 84 f4 00 00 00    	je     2b9b8 <rustc_demangle::v0::Parser::skip_type+0x3f8>
   2b8c4:	8d 4a d0             	lea    -0x30(%rdx),%ecx
   2b8c7:	80 f9 0a             	cmp    $0xa,%cl
   2b8ca:	72 1e                	jb     2b8ea <rustc_demangle::v0::Parser::skip_type+0x32a>
   2b8cc:	8d 4a 9f             	lea    -0x61(%rdx),%ecx
   2b8cf:	80 f9 1a             	cmp    $0x1a,%cl
   2b8d2:	73 05                	jae    2b8d9 <rustc_demangle::v0::Parser::skip_type+0x319>
   2b8d4:	80 c2 a9             	add    $0xa9,%dl
   2b8d7:	eb 0f                	jmp    2b8e8 <rustc_demangle::v0::Parser::skip_type+0x328>
   2b8d9:	8d 4a bf             	lea    -0x41(%rdx),%ecx
   2b8dc:	80 f9 1a             	cmp    $0x1a,%cl
   2b8df:	0f 83 c7 00 00 00    	jae    2b9ac <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2b8e5:	80 c2 e3             	add    $0xe3,%dl
   2b8e8:	89 d1                	mov    %edx,%ecx
   2b8ea:	48 83 c6 01          	add    $0x1,%rsi
   2b8ee:	49 89 37             	mov    %rsi,(%r15)
   2b8f1:	49 f7 e1             	mul    %r9
   2b8f4:	0f 80 b2 00 00 00    	jo     2b9ac <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2b8fa:	0f b6 c9             	movzbl %cl,%ecx
   2b8fd:	48 01 c8             	add    %rcx,%rax
   2b900:	73 ab                	jae    2b8ad <rustc_demangle::v0::Parser::skip_type+0x2ed>
   2b902:	e9 a5 00 00 00       	jmpq   2b9ac <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2b907:	49 89 37             	mov    %rsi,(%r15)
   2b90a:	b0 01                	mov    $0x1,%al
   2b90c:	48 ff c2             	inc    %rdx
   2b90f:	0f 84 99 00 00 00    	je     2b9ae <rustc_demangle::v0::Parser::skip_type+0x3ee>
   2b915:	48 39 ca             	cmp    %rcx,%rdx
   2b918:	0f 93 c0             	setae  %al
   2b91b:	e9 8e 00 00 00       	jmpq   2b9ae <rustc_demangle::v0::Parser::skip_type+0x3ee>
   2b920:	48 83 c6 01          	add    $0x1,%rsi
   2b924:	49 89 37             	mov    %rsi,(%r15)
   2b927:	b0 01                	mov    $0x1,%al
   2b929:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
   2b92d:	0f 85 28 01 00 00    	jne    2ba5b <rustc_demangle::v0::Parser::skip_type+0x49b>
   2b933:	eb 79                	jmp    2b9ae <rustc_demangle::v0::Parser::skip_type+0x3ee>
   2b935:	48 83 c6 01          	add    $0x1,%rsi
   2b939:	49 89 37             	mov    %rsi,(%r15)
   2b93c:	48 ff c0             	inc    %rax
   2b93f:	74 6b                	je     2b9ac <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2b941:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   2b945:	74 65                	je     2b9ac <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2b947:	49 89 e6             	mov    %rsp,%r14
   2b94a:	49 39 f3             	cmp    %rsi,%r11
   2b94d:	76 0d                	jbe    2b95c <rustc_demangle::v0::Parser::skip_type+0x39c>
   2b94f:	48 8b 0b             	mov    (%rbx),%rcx
   2b952:	80 3c 31 45          	cmpb   $0x45,(%rcx,%rsi,1)
   2b956:	0f 84 10 01 00 00    	je     2ba6c <rustc_demangle::v0::Parser::skip_type+0x4ac>
   2b95c:	48 89 df             	mov    %rbx,%rdi
   2b95f:	e8 9c f6 ff ff       	callq  2b000 <rustc_demangle::v0::Parser::skip_path>
   2b964:	84 c0                	test   %al,%al
   2b966:	0f 85 40 00 00 00    	jne    2b9ac <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2b96c:	0f 1f 40 00          	nopl   0x0(%rax)
   2b970:	4c 8b 5b 08          	mov    0x8(%rbx),%r11
   2b974:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   2b978:	49 39 f3             	cmp    %rsi,%r11
   2b97b:	76 cd                	jbe    2b94a <rustc_demangle::v0::Parser::skip_type+0x38a>
   2b97d:	48 8b 03             	mov    (%rbx),%rax
   2b980:	80 3c 30 70          	cmpb   $0x70,(%rax,%rsi,1)
   2b984:	75 c4                	jne    2b94a <rustc_demangle::v0::Parser::skip_type+0x38a>
   2b986:	48 83 c6 01          	add    $0x1,%rsi
   2b98a:	48 89 73 10          	mov    %rsi,0x10(%rbx)
   2b98e:	4c 89 f7             	mov    %r14,%rdi
   2b991:	48 89 de             	mov    %rbx,%rsi
   2b994:	e8 17 f4 ff ff       	callq  2adb0 <rustc_demangle::v0::Parser::ident>
   2b999:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
   2b99e:	74 0c                	je     2b9ac <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2b9a0:	48 89 df             	mov    %rbx,%rdi
   2b9a3:	e8 18 fc ff ff       	callq  2b5c0 <rustc_demangle::v0::Parser::skip_type>
   2b9a8:	84 c0                	test   %al,%al
   2b9aa:	74 c4                	je     2b970 <rustc_demangle::v0::Parser::skip_type+0x3b0>
   2b9ac:	b0 01                	mov    $0x1,%al
   2b9ae:	48 83 c4 20          	add    $0x20,%rsp
   2b9b2:	5b                   	pop    %rbx
   2b9b3:	41 5e                	pop    %r14
   2b9b5:	41 5f                	pop    %r15
   2b9b7:	c3                   	retq   
   2b9b8:	48 83 c6 01          	add    $0x1,%rsi
   2b9bc:	49 89 37             	mov    %rsi,(%r15)
   2b9bf:	48 ff c0             	inc    %rax
   2b9c2:	74 e8                	je     2b9ac <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2b9c4:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   2b9c8:	74 e2                	je     2b9ac <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2b9ca:	49 39 f3             	cmp    %rsi,%r11
   2b9cd:	76 0e                	jbe    2b9dd <rustc_demangle::v0::Parser::skip_type+0x41d>
   2b9cf:	41 80 3c 30 55       	cmpb   $0x55,(%r8,%rsi,1)
   2b9d4:	75 07                	jne    2b9dd <rustc_demangle::v0::Parser::skip_type+0x41d>
   2b9d6:	48 83 c6 01          	add    $0x1,%rsi
   2b9da:	49 89 37             	mov    %rsi,(%r15)
   2b9dd:	49 39 f3             	cmp    %rsi,%r11
   2b9e0:	76 5e                	jbe    2ba40 <rustc_demangle::v0::Parser::skip_type+0x480>
   2b9e2:	41 80 3c 30 4b       	cmpb   $0x4b,(%r8,%rsi,1)
   2b9e7:	75 57                	jne    2ba40 <rustc_demangle::v0::Parser::skip_type+0x480>
   2b9e9:	48 8d 46 01          	lea    0x1(%rsi),%rax
   2b9ed:	49 89 07             	mov    %rax,(%r15)
   2b9f0:	49 39 c3             	cmp    %rax,%r11
   2b9f3:	76 10                	jbe    2ba05 <rustc_demangle::v0::Parser::skip_type+0x445>
   2b9f5:	41 80 3c 00 43       	cmpb   $0x43,(%r8,%rax,1)
   2b9fa:	75 09                	jne    2ba05 <rustc_demangle::v0::Parser::skip_type+0x445>
   2b9fc:	48 83 c6 02          	add    $0x2,%rsi
   2ba00:	49 89 37             	mov    %rsi,(%r15)
   2ba03:	eb 3b                	jmp    2ba40 <rustc_demangle::v0::Parser::skip_type+0x480>
   2ba05:	48 89 e7             	mov    %rsp,%rdi
   2ba08:	48 89 de             	mov    %rbx,%rsi
   2ba0b:	e8 a0 f3 ff ff       	callq  2adb0 <rustc_demangle::v0::Parser::ident>
   2ba10:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
   2ba15:	74 95                	je     2b9ac <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2ba17:	48 83 7c 24 08 00    	cmpq   $0x0,0x8(%rsp)
   2ba1d:	74 8d                	je     2b9ac <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2ba1f:	48 83 7c 24 18 00    	cmpq   $0x0,0x18(%rsp)
   2ba25:	75 85                	jne    2b9ac <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2ba27:	eb 17                	jmp    2ba40 <rustc_demangle::v0::Parser::skip_type+0x480>
   2ba29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   2ba30:	48 89 df             	mov    %rbx,%rdi
   2ba33:	e8 88 fb ff ff       	callq  2b5c0 <rustc_demangle::v0::Parser::skip_type>
   2ba38:	84 c0                	test   %al,%al
   2ba3a:	0f 85 6c ff ff ff    	jne    2b9ac <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2ba40:	48 8b 43 10          	mov    0x10(%rbx),%rax
   2ba44:	48 39 43 08          	cmp    %rax,0x8(%rbx)
   2ba48:	76 e6                	jbe    2ba30 <rustc_demangle::v0::Parser::skip_type+0x470>
   2ba4a:	48 8b 0b             	mov    (%rbx),%rcx
   2ba4d:	80 3c 01 45          	cmpb   $0x45,(%rcx,%rax,1)
   2ba51:	75 dd                	jne    2ba30 <rustc_demangle::v0::Parser::skip_type+0x470>
   2ba53:	48 83 c0 01          	add    $0x1,%rax
   2ba57:	48 89 43 10          	mov    %rax,0x10(%rbx)
   2ba5b:	48 89 df             	mov    %rbx,%rdi
   2ba5e:	48 83 c4 20          	add    $0x20,%rsp
   2ba62:	5b                   	pop    %rbx
   2ba63:	41 5e                	pop    %r14
   2ba65:	41 5f                	pop    %r15
   2ba67:	e9 54 fb ff ff       	jmpq   2b5c0 <rustc_demangle::v0::Parser::skip_type>
   2ba6c:	48 8d 46 01          	lea    0x1(%rsi),%rax
   2ba70:	49 89 07             	mov    %rax,(%r15)
   2ba73:	49 39 c3             	cmp    %rax,%r11
   2ba76:	0f 86 30 ff ff ff    	jbe    2b9ac <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2ba7c:	80 3c 01 4c          	cmpb   $0x4c,(%rcx,%rax,1)
   2ba80:	0f 85 26 ff ff ff    	jne    2b9ac <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2ba86:	48 8d 5e 02          	lea    0x2(%rsi),%rbx
   2ba8a:	49 89 1f             	mov    %rbx,(%r15)
   2ba8d:	49 39 db             	cmp    %rbx,%r11
   2ba90:	76 0f                	jbe    2baa1 <rustc_demangle::v0::Parser::skip_type+0x4e1>
   2ba92:	80 3c 19 5f          	cmpb   $0x5f,(%rcx,%rbx,1)
   2ba96:	75 09                	jne    2baa1 <rustc_demangle::v0::Parser::skip_type+0x4e1>
   2ba98:	48 83 c6 03          	add    $0x3,%rsi
   2ba9c:	e9 d9 fb ff ff       	jmpq   2b67a <rustc_demangle::v0::Parser::skip_type+0xba>
   2baa1:	31 c0                	xor    %eax,%eax
   2baa3:	41 b8 3e 00 00 00    	mov    $0x3e,%r8d
   2baa9:	49 39 db             	cmp    %rbx,%r11
   2baac:	0f 86 fa fe ff ff    	jbe    2b9ac <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2bab2:	0f b6 14 19          	movzbl (%rcx,%rbx,1),%edx
   2bab6:	80 fa 5f             	cmp    $0x5f,%dl
   2bab9:	74 47                	je     2bb02 <rustc_demangle::v0::Parser::skip_type+0x542>
   2babb:	8d 72 d0             	lea    -0x30(%rdx),%esi
   2babe:	40 80 fe 0a          	cmp    $0xa,%sil
   2bac2:	72 20                	jb     2bae4 <rustc_demangle::v0::Parser::skip_type+0x524>
   2bac4:	8d 72 9f             	lea    -0x61(%rdx),%esi
   2bac7:	40 80 fe 1a          	cmp    $0x1a,%sil
   2bacb:	73 05                	jae    2bad2 <rustc_demangle::v0::Parser::skip_type+0x512>
   2bacd:	80 c2 a9             	add    $0xa9,%dl
   2bad0:	eb 10                	jmp    2bae2 <rustc_demangle::v0::Parser::skip_type+0x522>
   2bad2:	8d 72 bf             	lea    -0x41(%rdx),%esi
   2bad5:	40 80 fe 1a          	cmp    $0x1a,%sil
   2bad9:	0f 83 cd fe ff ff    	jae    2b9ac <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2badf:	80 c2 e3             	add    $0xe3,%dl
   2bae2:	89 d6                	mov    %edx,%esi
   2bae4:	48 83 c3 01          	add    $0x1,%rbx
   2bae8:	49 89 1f             	mov    %rbx,(%r15)
   2baeb:	49 f7 e0             	mul    %r8
   2baee:	0f 80 b8 fe ff ff    	jo     2b9ac <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2baf4:	40 0f b6 d6          	movzbl %sil,%edx
   2baf8:	48 01 d0             	add    %rdx,%rax
   2bafb:	73 ac                	jae    2baa9 <rustc_demangle::v0::Parser::skip_type+0x4e9>
   2bafd:	e9 aa fe ff ff       	jmpq   2b9ac <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2bb02:	48 83 c3 01          	add    $0x1,%rbx
   2bb06:	49 89 1f             	mov    %rbx,(%r15)
   2bb09:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   2bb0d:	0f 84 99 fe ff ff    	je     2b9ac <rustc_demangle::v0::Parser::skip_type+0x3ec>
   2bb13:	31 c0                	xor    %eax,%eax
   2bb15:	e9 94 fe ff ff       	jmpq   2b9ae <rustc_demangle::v0::Parser::skip_type+0x3ee>
   2bb1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000002bb20 <rustc_demangle::v0::Parser::skip_const>:
   2bb20:	53                   	push   %rbx
   2bb21:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   2bb25:	4c 8b 4f 10          	mov    0x10(%rdi),%r9
   2bb29:	41 b0 01             	mov    $0x1,%r8b
   2bb2c:	4c 39 ce             	cmp    %r9,%rsi
   2bb2f:	0f 86 68 01 00 00    	jbe    2bc9d <rustc_demangle::v0::Parser::skip_const+0x17d>
   2bb35:	4c 8b 17             	mov    (%rdi),%r10
   2bb38:	43 80 3c 0a 42       	cmpb   $0x42,(%r10,%r9,1)
   2bb3d:	75 2b                	jne    2bb6a <rustc_demangle::v0::Parser::skip_const+0x4a>
   2bb3f:	49 8d 41 01          	lea    0x1(%r9),%rax
   2bb43:	48 89 47 10          	mov    %rax,0x10(%rdi)
   2bb47:	48 39 c6             	cmp    %rax,%rsi
   2bb4a:	0f 86 d7 00 00 00    	jbe    2bc27 <rustc_demangle::v0::Parser::skip_const+0x107>
   2bb50:	41 80 3c 02 5f       	cmpb   $0x5f,(%r10,%rax,1)
   2bb55:	0f 85 cf 00 00 00    	jne    2bc2a <rustc_demangle::v0::Parser::skip_const+0x10a>
   2bb5b:	49 8d 41 02          	lea    0x2(%r9),%rax
   2bb5f:	48 89 47 10          	mov    %rax,0x10(%rdi)
   2bb63:	31 c0                	xor    %eax,%eax
   2bb65:	e9 38 01 00 00       	jmpq   2bca2 <rustc_demangle::v0::Parser::skip_const+0x182>
   2bb6a:	4c 8b 17             	mov    (%rdi),%r10
   2bb6d:	43 8a 04 0a          	mov    (%r10,%r9,1),%al
   2bb71:	49 8d 51 01          	lea    0x1(%r9),%rdx
   2bb75:	48 89 57 10          	mov    %rdx,0x10(%rdi)
   2bb79:	04 98                	add    $0x98,%al
   2bb7b:	3c 11                	cmp    $0x11,%al
   2bb7d:	0f 87 1a 01 00 00    	ja     2bc9d <rustc_demangle::v0::Parser::skip_const+0x17d>
   2bb83:	0f b6 c0             	movzbl %al,%eax
   2bb86:	b9 a5 10 02 00       	mov    $0x210a5,%ecx
   2bb8b:	48 0f a3 c1          	bt     %rax,%rcx
   2bb8f:	0f 83 08 01 00 00    	jae    2bc9d <rustc_demangle::v0::Parser::skip_const+0x17d>
   2bb95:	49 89 d3             	mov    %rdx,%r11
   2bb98:	48 39 d6             	cmp    %rdx,%rsi
   2bb9b:	76 14                	jbe    2bbb1 <rustc_demangle::v0::Parser::skip_const+0x91>
   2bb9d:	41 80 3c 12 70       	cmpb   $0x70,(%r10,%rdx,1)
   2bba2:	49 89 f3             	mov    %rsi,%r11
   2bba5:	75 0a                	jne    2bbb1 <rustc_demangle::v0::Parser::skip_const+0x91>
   2bba7:	49 83 c1 02          	add    $0x2,%r9
   2bbab:	4c 89 4f 10          	mov    %r9,0x10(%rdi)
   2bbaf:	eb 71                	jmp    2bc22 <rustc_demangle::v0::Parser::skip_const+0x102>
   2bbb1:	49 83 c3 ff          	add    $0xffffffffffffffff,%r11
   2bbb5:	4c 89 c9             	mov    %r9,%rcx
   2bbb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2bbbf:	00 
   2bbc0:	49 39 cb             	cmp    %rcx,%r11
   2bbc3:	0f 84 d4 00 00 00    	je     2bc9d <rustc_demangle::v0::Parser::skip_const+0x17d>
   2bbc9:	41 0f b6 44 0a 01    	movzbl 0x1(%r10,%rcx,1),%eax
   2bbcf:	48 8d 59 02          	lea    0x2(%rcx),%rbx
   2bbd3:	48 89 5f 10          	mov    %rbx,0x10(%rdi)
   2bbd7:	8d 58 d0             	lea    -0x30(%rax),%ebx
   2bbda:	48 83 c1 01          	add    $0x1,%rcx
   2bbde:	80 fb 0a             	cmp    $0xa,%bl
   2bbe1:	72 dd                	jb     2bbc0 <rustc_demangle::v0::Parser::skip_const+0xa0>
   2bbe3:	8d 58 9f             	lea    -0x61(%rax),%ebx
   2bbe6:	80 fb 06             	cmp    $0x6,%bl
   2bbe9:	72 d5                	jb     2bbc0 <rustc_demangle::v0::Parser::skip_const+0xa0>
   2bbeb:	3c 5f                	cmp    $0x5f,%al
   2bbed:	0f 85 aa 00 00 00    	jne    2bc9d <rustc_demangle::v0::Parser::skip_const+0x17d>
   2bbf3:	4c 39 c9             	cmp    %r9,%rcx
   2bbf6:	0f 86 ae 00 00 00    	jbe    2bcaa <rustc_demangle::v0::Parser::skip_const+0x18a>
   2bbfc:	48 39 d6             	cmp    %rdx,%rsi
   2bbff:	74 11                	je     2bc12 <rustc_demangle::v0::Parser::skip_const+0xf2>
   2bc01:	0f 86 a3 00 00 00    	jbe    2bcaa <rustc_demangle::v0::Parser::skip_const+0x18a>
   2bc07:	41 80 3c 12 bf       	cmpb   $0xbf,(%r10,%rdx,1)
   2bc0c:	0f 8e 98 00 00 00    	jle    2bcaa <rustc_demangle::v0::Parser::skip_const+0x18a>
   2bc12:	48 39 ce             	cmp    %rcx,%rsi
   2bc15:	74 0b                	je     2bc22 <rustc_demangle::v0::Parser::skip_const+0x102>
   2bc17:	41 80 3c 0a bf       	cmpb   $0xbf,(%r10,%rcx,1)
   2bc1c:	0f 8e 88 00 00 00    	jle    2bcaa <rustc_demangle::v0::Parser::skip_const+0x18a>
   2bc22:	45 31 c0             	xor    %r8d,%r8d
   2bc25:	eb 76                	jmp    2bc9d <rustc_demangle::v0::Parser::skip_const+0x17d>
   2bc27:	48 89 c6             	mov    %rax,%rsi
   2bc2a:	49 8d 49 02          	lea    0x2(%r9),%rcx
   2bc2e:	41 bb 01 00 00 00    	mov    $0x1,%r11d
   2bc34:	49 29 f3             	sub    %rsi,%r11
   2bc37:	31 c0                	xor    %eax,%eax
   2bc39:	be 3e 00 00 00       	mov    $0x3e,%esi
   2bc3e:	66 90                	xchg   %ax,%ax
   2bc40:	49 8d 14 0b          	lea    (%r11,%rcx,1),%rdx
   2bc44:	48 83 fa 02          	cmp    $0x2,%rdx
   2bc48:	74 53                	je     2bc9d <rustc_demangle::v0::Parser::skip_const+0x17d>
   2bc4a:	41 0f b6 54 0a ff    	movzbl -0x1(%r10,%rcx,1),%edx
   2bc50:	80 fa 5f             	cmp    $0x5f,%dl
   2bc53:	74 3f                	je     2bc94 <rustc_demangle::v0::Parser::skip_const+0x174>
   2bc55:	8d 5a d0             	lea    -0x30(%rdx),%ebx
   2bc58:	80 fb 0a             	cmp    $0xa,%bl
   2bc5b:	72 20                	jb     2bc7d <rustc_demangle::v0::Parser::skip_const+0x15d>
   2bc5d:	8d 5a 9f             	lea    -0x61(%rdx),%ebx
   2bc60:	80 fb 1a             	cmp    $0x1a,%bl
   2bc63:	73 0b                	jae    2bc70 <rustc_demangle::v0::Parser::skip_const+0x150>
   2bc65:	80 c2 a9             	add    $0xa9,%dl
   2bc68:	e9 0e 00 00 00       	jmpq   2bc7b <rustc_demangle::v0::Parser::skip_const+0x15b>
   2bc6d:	0f 1f 00             	nopl   (%rax)
   2bc70:	8d 5a bf             	lea    -0x41(%rdx),%ebx
   2bc73:	80 fb 1a             	cmp    $0x1a,%bl
   2bc76:	73 25                	jae    2bc9d <rustc_demangle::v0::Parser::skip_const+0x17d>
   2bc78:	80 c2 e3             	add    $0xe3,%dl
   2bc7b:	89 d3                	mov    %edx,%ebx
   2bc7d:	48 89 4f 10          	mov    %rcx,0x10(%rdi)
   2bc81:	48 f7 e6             	mul    %rsi
   2bc84:	70 17                	jo     2bc9d <rustc_demangle::v0::Parser::skip_const+0x17d>
   2bc86:	0f b6 d3             	movzbl %bl,%edx
   2bc89:	48 83 c1 01          	add    $0x1,%rcx
   2bc8d:	48 01 d0             	add    %rdx,%rax
   2bc90:	73 ae                	jae    2bc40 <rustc_demangle::v0::Parser::skip_const+0x120>
   2bc92:	eb 09                	jmp    2bc9d <rustc_demangle::v0::Parser::skip_const+0x17d>
   2bc94:	48 89 4f 10          	mov    %rcx,0x10(%rdi)
   2bc98:	48 ff c0             	inc    %rax
   2bc9b:	75 05                	jne    2bca2 <rustc_demangle::v0::Parser::skip_const+0x182>
   2bc9d:	44 89 c0             	mov    %r8d,%eax
   2bca0:	5b                   	pop    %rbx
   2bca1:	c3                   	retq   
   2bca2:	4c 39 c8             	cmp    %r9,%rax
   2bca5:	0f 93 c0             	setae  %al
   2bca8:	5b                   	pop    %rbx
   2bca9:	c3                   	retq   
   2bcaa:	4c 8d 05 b7 93 01 00 	lea    0x193b7(%rip),%r8        # 45068 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1b10>
   2bcb1:	4c 89 d7             	mov    %r10,%rdi
   2bcb4:	ff 15 7e a1 01 00    	callq  *0x1a17e(%rip)        # 45e38 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   2bcba:	0f 0b                	ud2    
   2bcbc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000002bcc0 <rustc_demangle::v0::Printer::print_lifetime_from_index>:
   2bcc0:	55                   	push   %rbp
   2bcc1:	41 56                	push   %r14
   2bcc3:	53                   	push   %rbx
   2bcc4:	48 83 ec 10          	sub    $0x10,%rsp
   2bcc8:	48 89 f5             	mov    %rsi,%rbp
   2bccb:	48 89 fb             	mov    %rdi,%rbx
   2bcce:	48 8b 7f 18          	mov    0x18(%rdi),%rdi
   2bcd2:	48 8d 35 88 dc 00 00 	lea    0xdc88(%rip),%rsi        # 39961 <str.6+0x2641>
   2bcd9:	ba 01 00 00 00       	mov    $0x1,%edx
   2bcde:	ff 15 64 9d 01 00    	callq  *0x19d64(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2bce4:	41 b6 01             	mov    $0x1,%r14b
   2bce7:	84 c0                	test   %al,%al
   2bce9:	74 0c                	je     2bcf7 <rustc_demangle::v0::Printer::print_lifetime_from_index+0x37>
   2bceb:	44 89 f0             	mov    %r14d,%eax
   2bcee:	48 83 c4 10          	add    $0x10,%rsp
   2bcf2:	5b                   	pop    %rbx
   2bcf3:	41 5e                	pop    %r14
   2bcf5:	5d                   	pop    %rbp
   2bcf6:	c3                   	retq   
   2bcf7:	48 85 ed             	test   %rbp,%rbp
   2bcfa:	74 1c                	je     2bd18 <rustc_demangle::v0::Printer::print_lifetime_from_index+0x58>
   2bcfc:	8b 43 20             	mov    0x20(%rbx),%eax
   2bcff:	48 29 e8             	sub    %rbp,%rax
   2bd02:	73 32                	jae    2bd36 <rustc_demangle::v0::Printer::print_lifetime_from_index+0x76>
   2bd04:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   2bd0b:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2bd0f:	48 8d 35 4c dc 00 00 	lea    0xdc4c(%rip),%rsi        # 39962 <str.6+0x2642>
   2bd16:	eb 0b                	jmp    2bd23 <rustc_demangle::v0::Printer::print_lifetime_from_index+0x63>
   2bd18:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2bd1c:	48 8d 35 13 dc 00 00 	lea    0xdc13(%rip),%rsi        # 39936 <str.6+0x2616>
   2bd23:	ba 01 00 00 00       	mov    $0x1,%edx
   2bd28:	48 83 c4 10          	add    $0x10,%rsp
   2bd2c:	5b                   	pop    %rbx
   2bd2d:	41 5e                	pop    %r14
   2bd2f:	5d                   	pop    %rbp
   2bd30:	ff 25 12 9d 01 00    	jmpq   *0x19d12(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2bd36:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   2bd3b:	48 83 f8 1a          	cmp    $0x1a,%rax
   2bd3f:	73 18                	jae    2bd59 <rustc_demangle::v0::Printer::print_lifetime_from_index+0x99>
   2bd41:	83 c0 61             	add    $0x61,%eax
   2bd44:	89 44 24 04          	mov    %eax,0x4(%rsp)
   2bd48:	48 8b 73 18          	mov    0x18(%rbx),%rsi
   2bd4c:	48 8d 7c 24 04       	lea    0x4(%rsp),%rdi
   2bd51:	ff 15 c9 9f 01 00    	callq  *0x19fc9(%rip)        # 45d20 <_GLOBAL_OFFSET_TABLE_+0x390>
   2bd57:	eb 2d                	jmp    2bd86 <rustc_demangle::v0::Printer::print_lifetime_from_index+0xc6>
   2bd59:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2bd5d:	48 8d 35 d2 db 00 00 	lea    0xdbd2(%rip),%rsi        # 39936 <str.6+0x2616>
   2bd64:	ba 01 00 00 00       	mov    $0x1,%edx
   2bd69:	ff 15 d9 9c 01 00    	callq  *0x19cd9(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2bd6f:	84 c0                	test   %al,%al
   2bd71:	0f 85 74 ff ff ff    	jne    2bceb <rustc_demangle::v0::Printer::print_lifetime_from_index+0x2b>
   2bd77:	48 8b 73 18          	mov    0x18(%rbx),%rsi
   2bd7b:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   2bd80:	ff 15 1a 9e 01 00    	callq  *0x19e1a(%rip)        # 45ba0 <_GLOBAL_OFFSET_TABLE_+0x210>
   2bd86:	41 89 c6             	mov    %eax,%r14d
   2bd89:	e9 5d ff ff ff       	jmpq   2bceb <rustc_demangle::v0::Printer::print_lifetime_from_index+0x2b>
   2bd8e:	66 90                	xchg   %ax,%ax

000000000002bd90 <rustc_demangle::v0::Printer::print_path>:
   2bd90:	55                   	push   %rbp
   2bd91:	41 57                	push   %r15
   2bd93:	41 56                	push   %r14
   2bd95:	41 54                	push   %r12
   2bd97:	53                   	push   %rbx
   2bd98:	48 83 ec 50          	sub    $0x50,%rsp
   2bd9c:	48 89 fb             	mov    %rdi,%rbx
   2bd9f:	48 8b 07             	mov    (%rdi),%rax
   2bda2:	48 85 c0             	test   %rax,%rax
   2bda5:	48 0f 45 c7          	cmovne %rdi,%rax
   2bda9:	0f 84 29 05 00 00    	je     2c2d8 <rustc_demangle::v0::Printer::print_path+0x548>
   2bdaf:	48 8b 48 10          	mov    0x10(%rax),%rcx
   2bdb3:	48 39 48 08          	cmp    %rcx,0x8(%rax)
   2bdb7:	0f 86 1b 05 00 00    	jbe    2c2d8 <rustc_demangle::v0::Printer::print_path+0x548>
   2bdbd:	48 8b 10             	mov    (%rax),%rdx
   2bdc0:	44 8a 3c 0a          	mov    (%rdx,%rcx,1),%r15b
   2bdc4:	48 83 c1 01          	add    $0x1,%rcx
   2bdc8:	48 89 48 10          	mov    %rcx,0x10(%rax)
   2bdcc:	41 8d 47 be          	lea    -0x42(%r15),%eax
   2bdd0:	3c 17                	cmp    $0x17,%al
   2bdd2:	0f 87 00 05 00 00    	ja     2c2d8 <rustc_demangle::v0::Printer::print_path+0x548>
   2bdd8:	89 f5                	mov    %esi,%ebp
   2bdda:	0f b6 c0             	movzbl %al,%eax
   2bddd:	48 8d 0d 18 d8 00 00 	lea    0xd818(%rip),%rcx        # 395fc <str.6+0x22dc>
   2bde4:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   2bde8:	48 01 c8             	add    %rcx,%rax
   2bdeb:	ff e0                	jmpq   *%rax
   2bded:	48 8b 0b             	mov    (%rbx),%rcx
   2bdf0:	48 85 c9             	test   %rcx,%rcx
   2bdf3:	48 0f 45 cb          	cmovne %rbx,%rcx
   2bdf7:	0f 84 db 04 00 00    	je     2c2d8 <rustc_demangle::v0::Printer::print_path+0x548>
   2bdfd:	48 8b 71 08          	mov    0x8(%rcx),%rsi
   2be01:	48 8b 41 10          	mov    0x10(%rcx),%rax
   2be05:	48 39 c6             	cmp    %rax,%rsi
   2be08:	0f 86 b8 04 00 00    	jbe    2c2c6 <rustc_demangle::v0::Printer::print_path+0x536>
   2be0e:	4c 8b 09             	mov    (%rcx),%r9
   2be11:	41 80 3c 01 73       	cmpb   $0x73,(%r9,%rax,1)
   2be16:	0f 85 aa 04 00 00    	jne    2c2c6 <rustc_demangle::v0::Printer::print_path+0x536>
   2be1c:	48 8d 68 01          	lea    0x1(%rax),%rbp
   2be20:	48 89 69 10          	mov    %rbp,0x10(%rcx)
   2be24:	48 39 ee             	cmp    %rbp,%rsi
   2be27:	0f 86 14 03 00 00    	jbe    2c141 <rustc_demangle::v0::Printer::print_path+0x3b1>
   2be2d:	41 80 3c 29 5f       	cmpb   $0x5f,(%r9,%rbp,1)
   2be32:	0f 85 09 03 00 00    	jne    2c141 <rustc_demangle::v0::Printer::print_path+0x3b1>
   2be38:	48 83 c0 02          	add    $0x2,%rax
   2be3c:	48 89 41 10          	mov    %rax,0x10(%rcx)
   2be40:	e9 81 04 00 00       	jmpq   2c2c6 <rustc_demangle::v0::Printer::print_path+0x536>
   2be45:	48 8b 33             	mov    (%rbx),%rsi
   2be48:	48 85 f6             	test   %rsi,%rsi
   2be4b:	48 0f 45 f3          	cmovne %rbx,%rsi
   2be4f:	0f 84 c3 03 00 00    	je     2c218 <rustc_demangle::v0::Printer::print_path+0x488>
   2be55:	4c 8b 56 10          	mov    0x10(%rsi),%r10
   2be59:	4c 8b 1e             	mov    (%rsi),%r11
   2be5c:	4c 8b 46 08          	mov    0x8(%rsi),%r8
   2be60:	4d 89 d7             	mov    %r10,%r15
   2be63:	4d 39 d0             	cmp    %r10,%r8
   2be66:	0f 86 f6 01 00 00    	jbe    2c062 <rustc_demangle::v0::Printer::print_path+0x2d2>
   2be6c:	43 80 3c 13 5f       	cmpb   $0x5f,(%r11,%r10,1)
   2be71:	4d 89 c7             	mov    %r8,%r15
   2be74:	0f 85 e8 01 00 00    	jne    2c062 <rustc_demangle::v0::Printer::print_path+0x2d2>
   2be7a:	49 8d 42 01          	lea    0x1(%r10),%rax
   2be7e:	48 89 46 10          	mov    %rax,0x10(%rsi)
   2be82:	31 c0                	xor    %eax,%eax
   2be84:	e9 94 03 00 00       	jmpq   2c21d <rustc_demangle::v0::Printer::print_path+0x48d>
   2be89:	48 8b 0b             	mov    (%rbx),%rcx
   2be8c:	48 85 c9             	test   %rcx,%rcx
   2be8f:	48 0f 45 cb          	cmovne %rbx,%rcx
   2be93:	0f 84 6e 06 00 00    	je     2c507 <rustc_demangle::v0::Printer::print_path+0x777>
   2be99:	48 8b 71 08          	mov    0x8(%rcx),%rsi
   2be9d:	48 8b 41 10          	mov    0x10(%rcx),%rax
   2bea1:	48 39 c6             	cmp    %rax,%rsi
   2bea4:	0f 86 2b 02 00 00    	jbe    2c0d5 <rustc_demangle::v0::Printer::print_path+0x345>
   2beaa:	4c 8b 09             	mov    (%rcx),%r9
   2bead:	41 80 3c 01 73       	cmpb   $0x73,(%r9,%rax,1)
   2beb2:	0f 85 1d 02 00 00    	jne    2c0d5 <rustc_demangle::v0::Printer::print_path+0x345>
   2beb8:	48 8d 68 01          	lea    0x1(%rax),%rbp
   2bebc:	48 89 69 10          	mov    %rbp,0x10(%rcx)
   2bec0:	48 39 ee             	cmp    %rbp,%rsi
   2bec3:	0f 86 df 02 00 00    	jbe    2c1a8 <rustc_demangle::v0::Printer::print_path+0x418>
   2bec9:	41 80 3c 29 5f       	cmpb   $0x5f,(%r9,%rbp,1)
   2bece:	0f 85 d4 02 00 00    	jne    2c1a8 <rustc_demangle::v0::Printer::print_path+0x418>
   2bed4:	48 83 c0 02          	add    $0x2,%rax
   2bed8:	48 89 41 10          	mov    %rax,0x10(%rcx)
   2bedc:	31 c0                	xor    %eax,%eax
   2bede:	e9 35 05 00 00       	jmpq   2c418 <rustc_demangle::v0::Printer::print_path+0x688>
   2bee3:	40 0f b6 f5          	movzbl %bpl,%esi
   2bee7:	48 89 df             	mov    %rbx,%rdi
   2beea:	e8 a1 fe ff ff       	callq  2bd90 <rustc_demangle::v0::Printer::print_path>
   2beef:	41 b6 01             	mov    $0x1,%r14b
   2bef2:	84 c0                	test   %al,%al
   2bef4:	0f 85 2d 06 00 00    	jne    2c527 <rustc_demangle::v0::Printer::print_path+0x797>
   2befa:	40 84 ed             	test   %bpl,%bpl
   2befd:	74 1e                	je     2bf1d <rustc_demangle::v0::Printer::print_path+0x18d>
   2beff:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2bf03:	48 8d 35 ad d9 00 00 	lea    0xd9ad(%rip),%rsi        # 398b7 <str.6+0x2597>
   2bf0a:	ba 02 00 00 00       	mov    $0x2,%edx
   2bf0f:	ff 15 33 9b 01 00    	callq  *0x19b33(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2bf15:	84 c0                	test   %al,%al
   2bf17:	0f 85 0a 06 00 00    	jne    2c527 <rustc_demangle::v0::Printer::print_path+0x797>
   2bf1d:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2bf21:	48 8d 35 9f d9 00 00 	lea    0xd99f(%rip),%rsi        # 398c7 <str.6+0x25a7>
   2bf28:	ba 01 00 00 00       	mov    $0x1,%edx
   2bf2d:	ff 15 15 9b 01 00    	callq  *0x19b15(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2bf33:	84 c0                	test   %al,%al
   2bf35:	0f 85 ec 05 00 00    	jne    2c527 <rustc_demangle::v0::Printer::print_path+0x797>
   2bf3b:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   2bf3f:	0f 84 00 05 00 00    	je     2c445 <rustc_demangle::v0::Printer::print_path+0x6b5>
   2bf45:	31 ed                	xor    %ebp,%ebp
   2bf47:	4c 8d 3d 15 da 00 00 	lea    0xda15(%rip),%r15        # 39963 <str.6+0x2643>
   2bf4e:	4c 8d 25 bb 52 00 00 	lea    0x52bb(%rip),%r12        # 31210 <core::fmt::Formatter::write_str>
   2bf55:	48 8b 43 10          	mov    0x10(%rbx),%rax
   2bf59:	48 39 43 08          	cmp    %rax,0x8(%rbx)
   2bf5d:	76 0d                	jbe    2bf6c <rustc_demangle::v0::Printer::print_path+0x1dc>
   2bf5f:	48 8b 0b             	mov    (%rbx),%rcx
   2bf62:	80 3c 01 45          	cmpb   $0x45,(%rcx,%rax,1)
   2bf66:	0f 84 d1 04 00 00    	je     2c43d <rustc_demangle::v0::Printer::print_path+0x6ad>
   2bf6c:	48 85 ed             	test   %rbp,%rbp
   2bf6f:	74 17                	je     2bf88 <rustc_demangle::v0::Printer::print_path+0x1f8>
   2bf71:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2bf75:	ba 02 00 00 00       	mov    $0x2,%edx
   2bf7a:	4c 89 fe             	mov    %r15,%rsi
   2bf7d:	41 ff d4             	callq  *%r12
   2bf80:	84 c0                	test   %al,%al
   2bf82:	0f 85 9f 05 00 00    	jne    2c527 <rustc_demangle::v0::Printer::print_path+0x797>
   2bf88:	48 89 df             	mov    %rbx,%rdi
   2bf8b:	e8 80 06 00 00       	callq  2c610 <rustc_demangle::v0::Printer::print_generic_arg>
   2bf90:	84 c0                	test   %al,%al
   2bf92:	0f 85 8f 05 00 00    	jne    2c527 <rustc_demangle::v0::Printer::print_path+0x797>
   2bf98:	48 83 c5 ff          	add    $0xffffffffffffffff,%rbp
   2bf9c:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   2bfa0:	75 b3                	jne    2bf55 <rustc_demangle::v0::Printer::print_path+0x1c5>
   2bfa2:	e9 9e 04 00 00       	jmpq   2c445 <rustc_demangle::v0::Printer::print_path+0x6b5>
   2bfa7:	48 8b 03             	mov    (%rbx),%rax
   2bfaa:	48 85 c0             	test   %rax,%rax
   2bfad:	48 0f 45 c3          	cmovne %rbx,%rax
   2bfb1:	0f 84 21 03 00 00    	je     2c2d8 <rustc_demangle::v0::Printer::print_path+0x548>
   2bfb7:	48 8b 48 10          	mov    0x10(%rax),%rcx
   2bfbb:	48 39 48 08          	cmp    %rcx,0x8(%rax)
   2bfbf:	0f 86 13 03 00 00    	jbe    2c2d8 <rustc_demangle::v0::Printer::print_path+0x548>
   2bfc5:	48 8b 10             	mov    (%rax),%rdx
   2bfc8:	44 0f b6 3c 0a       	movzbl (%rdx,%rcx,1),%r15d
   2bfcd:	48 83 c1 01          	add    $0x1,%rcx
   2bfd1:	48 89 48 10          	mov    %rcx,0x10(%rax)
   2bfd5:	41 8d 47 bf          	lea    -0x41(%r15),%eax
   2bfd9:	3c 1a                	cmp    $0x1a,%al
   2bfdb:	72 14                	jb     2bff1 <rustc_demangle::v0::Printer::print_path+0x261>
   2bfdd:	41 80 c7 9f          	add    $0x9f,%r15b
   2bfe1:	41 80 ff 1a          	cmp    $0x1a,%r15b
   2bfe5:	41 bf 00 00 11 00    	mov    $0x110000,%r15d
   2bfeb:	0f 83 e7 02 00 00    	jae    2c2d8 <rustc_demangle::v0::Printer::print_path+0x548>
   2bff1:	40 0f b6 f5          	movzbl %bpl,%esi
   2bff5:	48 89 df             	mov    %rbx,%rdi
   2bff8:	e8 93 fd ff ff       	callq  2bd90 <rustc_demangle::v0::Printer::print_path>
   2bffd:	41 b6 01             	mov    $0x1,%r14b
   2c000:	84 c0                	test   %al,%al
   2c002:	0f 85 1f 05 00 00    	jne    2c527 <rustc_demangle::v0::Printer::print_path+0x797>
   2c008:	48 8b 0b             	mov    (%rbx),%rcx
   2c00b:	48 85 c9             	test   %rcx,%rcx
   2c00e:	48 0f 45 cb          	cmovne %rbx,%rcx
   2c012:	0f 84 ef 04 00 00    	je     2c507 <rustc_demangle::v0::Printer::print_path+0x777>
   2c018:	48 8b 71 08          	mov    0x8(%rcx),%rsi
   2c01c:	48 8b 41 10          	mov    0x10(%rcx),%rax
   2c020:	48 39 c6             	cmp    %rax,%rsi
   2c023:	0f 86 48 03 00 00    	jbe    2c371 <rustc_demangle::v0::Printer::print_path+0x5e1>
   2c029:	4c 8b 09             	mov    (%rcx),%r9
   2c02c:	41 80 3c 01 73       	cmpb   $0x73,(%r9,%rax,1)
   2c031:	0f 85 3a 03 00 00    	jne    2c371 <rustc_demangle::v0::Printer::print_path+0x5e1>
   2c037:	48 8d 68 01          	lea    0x1(%rax),%rbp
   2c03b:	48 89 69 10          	mov    %rbp,0x10(%rcx)
   2c03f:	48 39 ee             	cmp    %rbp,%rsi
   2c042:	0f 86 59 04 00 00    	jbe    2c4a1 <rustc_demangle::v0::Printer::print_path+0x711>
   2c048:	41 80 3c 29 5f       	cmpb   $0x5f,(%r9,%rbp,1)
   2c04d:	0f 85 4e 04 00 00    	jne    2c4a1 <rustc_demangle::v0::Printer::print_path+0x711>
   2c053:	48 83 c0 02          	add    $0x2,%rax
   2c057:	48 89 41 10          	mov    %rax,0x10(%rcx)
   2c05b:	31 c0                	xor    %eax,%eax
   2c05d:	e9 a0 04 00 00       	jmpq   2c502 <rustc_demangle::v0::Printer::print_path+0x772>
   2c062:	49 8d 7a 01          	lea    0x1(%r10),%rdi
   2c066:	49 f7 df             	neg    %r15
   2c069:	45 31 c9             	xor    %r9d,%r9d
   2c06c:	41 be 3e 00 00 00    	mov    $0x3e,%r14d
   2c072:	31 c0                	xor    %eax,%eax
   2c074:	49 8d 0c 3f          	lea    (%r15,%rdi,1),%rcx
   2c078:	48 83 f9 01          	cmp    $0x1,%rcx
   2c07c:	0f 84 99 01 00 00    	je     2c21b <rustc_demangle::v0::Printer::print_path+0x48b>
   2c082:	41 0f b6 54 3b ff    	movzbl -0x1(%r11,%rdi,1),%edx
   2c088:	80 fa 5f             	cmp    $0x5f,%dl
   2c08b:	0f 84 7e 01 00 00    	je     2c20f <rustc_demangle::v0::Printer::print_path+0x47f>
   2c091:	8d 4a d0             	lea    -0x30(%rdx),%ecx
   2c094:	80 f9 0a             	cmp    $0xa,%cl
   2c097:	72 1e                	jb     2c0b7 <rustc_demangle::v0::Printer::print_path+0x327>
   2c099:	8d 4a 9f             	lea    -0x61(%rdx),%ecx
   2c09c:	80 f9 1a             	cmp    $0x1a,%cl
   2c09f:	73 05                	jae    2c0a6 <rustc_demangle::v0::Printer::print_path+0x316>
   2c0a1:	80 c2 a9             	add    $0xa9,%dl
   2c0a4:	eb 0f                	jmp    2c0b5 <rustc_demangle::v0::Printer::print_path+0x325>
   2c0a6:	8d 4a bf             	lea    -0x41(%rdx),%ecx
   2c0a9:	80 f9 1a             	cmp    $0x1a,%cl
   2c0ac:	0f 83 69 01 00 00    	jae    2c21b <rustc_demangle::v0::Printer::print_path+0x48b>
   2c0b2:	80 c2 e3             	add    $0xe3,%dl
   2c0b5:	89 d1                	mov    %edx,%ecx
   2c0b7:	48 89 7e 10          	mov    %rdi,0x10(%rsi)
   2c0bb:	49 f7 e6             	mul    %r14
   2c0be:	0f 80 57 01 00 00    	jo     2c21b <rustc_demangle::v0::Printer::print_path+0x48b>
   2c0c4:	0f b6 c9             	movzbl %cl,%ecx
   2c0c7:	48 83 c7 01          	add    $0x1,%rdi
   2c0cb:	48 01 c8             	add    %rcx,%rax
   2c0ce:	73 a4                	jae    2c074 <rustc_demangle::v0::Printer::print_path+0x2e4>
   2c0d0:	e9 46 01 00 00       	jmpq   2c21b <rustc_demangle::v0::Printer::print_path+0x48b>
   2c0d5:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   2c0dc:	00 
   2c0dd:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
   2c0e2:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   2c0e7:	48 89 de             	mov    %rbx,%rsi
   2c0ea:	e8 c1 ec ff ff       	callq  2adb0 <rustc_demangle::v0::Parser::ident>
   2c0ef:	48 83 7c 24 08 00    	cmpq   $0x0,0x8(%rsp)
   2c0f5:	0f 84 0c 04 00 00    	je     2c507 <rustc_demangle::v0::Printer::print_path+0x777>
   2c0fb:	0f 10 45 00          	movups 0x0(%rbp),%xmm0
   2c0ff:	0f 10 4d 10          	movups 0x10(%rbp),%xmm1
   2c103:	0f 29 4c 24 40       	movaps %xmm1,0x40(%rsp)
   2c108:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
   2c10d:	48 8b 73 18          	mov    0x18(%rbx),%rsi
   2c111:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
   2c116:	ff 15 3c 9a 01 00    	callq  *0x19a3c(%rip)        # 45b58 <_GLOBAL_OFFSET_TABLE_+0x1c8>
   2c11c:	41 b6 01             	mov    $0x1,%r14b
   2c11f:	84 c0                	test   %al,%al
   2c121:	0f 85 00 04 00 00    	jne    2c527 <rustc_demangle::v0::Printer::print_path+0x797>
   2c127:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c12b:	ff 15 1f 99 01 00    	callq  *0x1991f(%rip)        # 45a50 <_GLOBAL_OFFSET_TABLE_+0xc0>
   2c131:	84 c0                	test   %al,%al
   2c133:	0f 84 24 01 00 00    	je     2c25d <rustc_demangle::v0::Printer::print_path+0x4cd>
   2c139:	45 31 f6             	xor    %r14d,%r14d
   2c13c:	e9 e6 03 00 00       	jmpq   2c527 <rustc_demangle::v0::Printer::print_path+0x797>
   2c141:	31 c0                	xor    %eax,%eax
   2c143:	41 b8 3e 00 00 00    	mov    $0x3e,%r8d
   2c149:	48 39 ee             	cmp    %rbp,%rsi
   2c14c:	0f 86 86 01 00 00    	jbe    2c2d8 <rustc_demangle::v0::Printer::print_path+0x548>
   2c152:	41 0f b6 14 29       	movzbl (%r9,%rbp,1),%edx
   2c157:	80 fa 5f             	cmp    $0x5f,%dl
   2c15a:	0f 84 53 01 00 00    	je     2c2b3 <rustc_demangle::v0::Printer::print_path+0x523>
   2c160:	8d 7a d0             	lea    -0x30(%rdx),%edi
   2c163:	40 80 ff 0a          	cmp    $0xa,%dil
   2c167:	72 20                	jb     2c189 <rustc_demangle::v0::Printer::print_path+0x3f9>
   2c169:	8d 7a 9f             	lea    -0x61(%rdx),%edi
   2c16c:	40 80 ff 1a          	cmp    $0x1a,%dil
   2c170:	73 05                	jae    2c177 <rustc_demangle::v0::Printer::print_path+0x3e7>
   2c172:	80 c2 a9             	add    $0xa9,%dl
   2c175:	eb 10                	jmp    2c187 <rustc_demangle::v0::Printer::print_path+0x3f7>
   2c177:	8d 7a bf             	lea    -0x41(%rdx),%edi
   2c17a:	40 80 ff 1a          	cmp    $0x1a,%dil
   2c17e:	0f 83 54 01 00 00    	jae    2c2d8 <rustc_demangle::v0::Printer::print_path+0x548>
   2c184:	80 c2 e3             	add    $0xe3,%dl
   2c187:	89 d7                	mov    %edx,%edi
   2c189:	48 83 c5 01          	add    $0x1,%rbp
   2c18d:	48 89 69 10          	mov    %rbp,0x10(%rcx)
   2c191:	49 f7 e0             	mul    %r8
   2c194:	0f 80 3e 01 00 00    	jo     2c2d8 <rustc_demangle::v0::Printer::print_path+0x548>
   2c19a:	40 0f b6 d7          	movzbl %dil,%edx
   2c19e:	48 01 d0             	add    %rdx,%rax
   2c1a1:	73 a6                	jae    2c149 <rustc_demangle::v0::Printer::print_path+0x3b9>
   2c1a3:	e9 30 01 00 00       	jmpq   2c2d8 <rustc_demangle::v0::Printer::print_path+0x548>
   2c1a8:	31 c0                	xor    %eax,%eax
   2c1aa:	41 b8 3e 00 00 00    	mov    $0x3e,%r8d
   2c1b0:	48 39 ee             	cmp    %rbp,%rsi
   2c1b3:	0f 86 4e 03 00 00    	jbe    2c507 <rustc_demangle::v0::Printer::print_path+0x777>
   2c1b9:	41 0f b6 14 29       	movzbl (%r9,%rbp,1),%edx
   2c1be:	80 fa 5f             	cmp    $0x5f,%dl
   2c1c1:	0f 84 40 02 00 00    	je     2c407 <rustc_demangle::v0::Printer::print_path+0x677>
   2c1c7:	8d 7a d0             	lea    -0x30(%rdx),%edi
   2c1ca:	40 80 ff 0a          	cmp    $0xa,%dil
   2c1ce:	72 20                	jb     2c1f0 <rustc_demangle::v0::Printer::print_path+0x460>
   2c1d0:	8d 7a 9f             	lea    -0x61(%rdx),%edi
   2c1d3:	40 80 ff 1a          	cmp    $0x1a,%dil
   2c1d7:	73 05                	jae    2c1de <rustc_demangle::v0::Printer::print_path+0x44e>
   2c1d9:	80 c2 a9             	add    $0xa9,%dl
   2c1dc:	eb 10                	jmp    2c1ee <rustc_demangle::v0::Printer::print_path+0x45e>
   2c1de:	8d 7a bf             	lea    -0x41(%rdx),%edi
   2c1e1:	40 80 ff 1a          	cmp    $0x1a,%dil
   2c1e5:	0f 83 1c 03 00 00    	jae    2c507 <rustc_demangle::v0::Printer::print_path+0x777>
   2c1eb:	80 c2 e3             	add    $0xe3,%dl
   2c1ee:	89 d7                	mov    %edx,%edi
   2c1f0:	48 83 c5 01          	add    $0x1,%rbp
   2c1f4:	48 89 69 10          	mov    %rbp,0x10(%rcx)
   2c1f8:	49 f7 e0             	mul    %r8
   2c1fb:	0f 80 06 03 00 00    	jo     2c507 <rustc_demangle::v0::Printer::print_path+0x777>
   2c201:	40 0f b6 d7          	movzbl %dil,%edx
   2c205:	48 01 d0             	add    %rdx,%rax
   2c208:	73 a6                	jae    2c1b0 <rustc_demangle::v0::Printer::print_path+0x420>
   2c20a:	e9 f8 02 00 00       	jmpq   2c507 <rustc_demangle::v0::Printer::print_path+0x777>
   2c20f:	48 89 7e 10          	mov    %rdi,0x10(%rsi)
   2c213:	48 ff c0             	inc    %rax
   2c216:	75 05                	jne    2c21d <rustc_demangle::v0::Printer::print_path+0x48d>
   2c218:	45 31 c9             	xor    %r9d,%r9d
   2c21b:	eb 0e                	jmp    2c22b <rustc_demangle::v0::Printer::print_path+0x49b>
   2c21d:	49 83 c2 ff          	add    $0xffffffffffffffff,%r10
   2c221:	45 31 c9             	xor    %r9d,%r9d
   2c224:	4c 39 d0             	cmp    %r10,%rax
   2c227:	4d 0f 42 cb          	cmovb  %r11,%r9
   2c22b:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
   2c22f:	8b 53 20             	mov    0x20(%rbx),%edx
   2c232:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   2c237:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
   2c23c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2c241:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   2c246:	89 54 24 28          	mov    %edx,0x28(%rsp)
   2c24a:	40 0f b6 f5          	movzbl %bpl,%esi
   2c24e:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   2c253:	e8 38 fb ff ff       	callq  2bd90 <rustc_demangle::v0::Printer::print_path>
   2c258:	e9 c7 02 00 00       	jmpq   2c524 <rustc_demangle::v0::Printer::print_path+0x794>
   2c25d:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c261:	48 8d 35 0b d7 00 00 	lea    0xd70b(%rip),%rsi        # 39973 <str.6+0x2653>
   2c268:	ba 01 00 00 00       	mov    $0x1,%edx
   2c26d:	ff 15 d5 97 01 00    	callq  *0x197d5(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2c273:	84 c0                	test   %al,%al
   2c275:	0f 85 84 03 00 00    	jne    2c5ff <rustc_demangle::v0::Printer::print_path+0x86f>
   2c27b:	48 8b 73 18          	mov    0x18(%rbx),%rsi
   2c27f:	48 89 e7             	mov    %rsp,%rdi
   2c282:	ff 15 90 9a 01 00    	callq  *0x19a90(%rip)        # 45d18 <_GLOBAL_OFFSET_TABLE_+0x388>
   2c288:	84 c0                	test   %al,%al
   2c28a:	0f 85 6f 03 00 00    	jne    2c5ff <rustc_demangle::v0::Printer::print_path+0x86f>
   2c290:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c294:	48 8d 35 d9 d6 00 00 	lea    0xd6d9(%rip),%rsi        # 39974 <str.6+0x2654>
   2c29b:	ba 01 00 00 00       	mov    $0x1,%edx
   2c2a0:	ff 15 a2 97 01 00    	callq  *0x197a2(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2c2a6:	84 c0                	test   %al,%al
   2c2a8:	0f 84 8b fe ff ff    	je     2c139 <rustc_demangle::v0::Printer::print_path+0x3a9>
   2c2ae:	e9 4c 03 00 00       	jmpq   2c5ff <rustc_demangle::v0::Printer::print_path+0x86f>
   2c2b3:	48 83 c5 01          	add    $0x1,%rbp
   2c2b7:	48 89 69 10          	mov    %rbp,0x10(%rcx)
   2c2bb:	48 ff c0             	inc    %rax
   2c2be:	74 18                	je     2c2d8 <rustc_demangle::v0::Printer::print_path+0x548>
   2c2c0:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   2c2c4:	74 12                	je     2c2d8 <rustc_demangle::v0::Printer::print_path+0x548>
   2c2c6:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   2c2ca:	74 0c                	je     2c2d8 <rustc_demangle::v0::Printer::print_path+0x548>
   2c2cc:	48 89 df             	mov    %rbx,%rdi
   2c2cf:	e8 2c ed ff ff       	callq  2b000 <rustc_demangle::v0::Parser::skip_path>
   2c2d4:	84 c0                	test   %al,%al
   2c2d6:	74 29                	je     2c301 <rustc_demangle::v0::Printer::print_path+0x571>
   2c2d8:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   2c2df:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c2e3:	48 8d 35 78 d6 00 00 	lea    0xd678(%rip),%rsi        # 39962 <str.6+0x2642>
   2c2ea:	ba 01 00 00 00       	mov    $0x1,%edx
   2c2ef:	48 83 c4 50          	add    $0x50,%rsp
   2c2f3:	5b                   	pop    %rbx
   2c2f4:	41 5c                	pop    %r12
   2c2f6:	41 5e                	pop    %r14
   2c2f8:	41 5f                	pop    %r15
   2c2fa:	5d                   	pop    %rbp
   2c2fb:	ff 25 47 97 01 00    	jmpq   *0x19747(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2c301:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c305:	48 8d 35 bb d5 00 00 	lea    0xd5bb(%rip),%rsi        # 398c7 <str.6+0x25a7>
   2c30c:	ba 01 00 00 00       	mov    $0x1,%edx
   2c311:	ff 15 31 97 01 00    	callq  *0x19731(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2c317:	41 b6 01             	mov    $0x1,%r14b
   2c31a:	84 c0                	test   %al,%al
   2c31c:	0f 85 05 02 00 00    	jne    2c527 <rustc_demangle::v0::Printer::print_path+0x797>
   2c322:	48 89 df             	mov    %rbx,%rdi
   2c325:	e8 06 04 00 00       	callq  2c730 <rustc_demangle::v0::Printer::print_type>
   2c32a:	84 c0                	test   %al,%al
   2c32c:	0f 85 f5 01 00 00    	jne    2c527 <rustc_demangle::v0::Printer::print_path+0x797>
   2c332:	41 80 ff 4d          	cmp    $0x4d,%r15b
   2c336:	0f 84 09 01 00 00    	je     2c445 <rustc_demangle::v0::Printer::print_path+0x6b5>
   2c33c:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c340:	48 8d 35 5c d5 00 00 	lea    0xd55c(%rip),%rsi        # 398a3 <str.6+0x2583>
   2c347:	ba 04 00 00 00       	mov    $0x4,%edx
   2c34c:	ff 15 f6 96 01 00    	callq  *0x196f6(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2c352:	84 c0                	test   %al,%al
   2c354:	0f 85 cd 01 00 00    	jne    2c527 <rustc_demangle::v0::Printer::print_path+0x797>
   2c35a:	48 89 df             	mov    %rbx,%rdi
   2c35d:	31 f6                	xor    %esi,%esi
   2c35f:	e8 2c fa ff ff       	callq  2bd90 <rustc_demangle::v0::Printer::print_path>
   2c364:	84 c0                	test   %al,%al
   2c366:	0f 84 d9 00 00 00    	je     2c445 <rustc_demangle::v0::Printer::print_path+0x6b5>
   2c36c:	e9 b6 01 00 00       	jmpq   2c527 <rustc_demangle::v0::Printer::print_path+0x797>
   2c371:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   2c378:	00 
   2c379:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
   2c37e:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   2c383:	48 89 de             	mov    %rbx,%rsi
   2c386:	e8 25 ea ff ff       	callq  2adb0 <rustc_demangle::v0::Parser::ident>
   2c38b:	48 83 7c 24 08 00    	cmpq   $0x0,0x8(%rsp)
   2c391:	0f 84 70 01 00 00    	je     2c507 <rustc_demangle::v0::Printer::print_path+0x777>
   2c397:	0f 10 45 00          	movups 0x0(%rbp),%xmm0
   2c39b:	0f 10 4d 10          	movups 0x10(%rbp),%xmm1
   2c39f:	0f 29 4c 24 40       	movaps %xmm1,0x40(%rsp)
   2c3a4:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
   2c3a9:	41 81 ff 00 00 11 00 	cmp    $0x110000,%r15d
   2c3b0:	0f 85 9f 00 00 00    	jne    2c455 <rustc_demangle::v0::Printer::print_path+0x6c5>
   2c3b6:	48 83 7c 24 38 00    	cmpq   $0x0,0x38(%rsp)
   2c3bc:	75 0c                	jne    2c3ca <rustc_demangle::v0::Printer::print_path+0x63a>
   2c3be:	48 83 7c 24 48 00    	cmpq   $0x0,0x48(%rsp)
   2c3c4:	0f 84 6f fd ff ff    	je     2c139 <rustc_demangle::v0::Printer::print_path+0x3a9>
   2c3ca:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c3ce:	48 8d 35 e2 d4 00 00 	lea    0xd4e2(%rip),%rsi        # 398b7 <str.6+0x2597>
   2c3d5:	ba 02 00 00 00       	mov    $0x2,%edx
   2c3da:	ff 15 68 96 01 00    	callq  *0x19668(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2c3e0:	41 b6 01             	mov    $0x1,%r14b
   2c3e3:	84 c0                	test   %al,%al
   2c3e5:	0f 85 3c 01 00 00    	jne    2c527 <rustc_demangle::v0::Printer::print_path+0x797>
   2c3eb:	48 8b 73 18          	mov    0x18(%rbx),%rsi
   2c3ef:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
   2c3f4:	ff 15 5e 97 01 00    	callq  *0x1975e(%rip)        # 45b58 <_GLOBAL_OFFSET_TABLE_+0x1c8>
   2c3fa:	84 c0                	test   %al,%al
   2c3fc:	0f 84 37 fd ff ff    	je     2c139 <rustc_demangle::v0::Printer::print_path+0x3a9>
   2c402:	e9 20 01 00 00       	jmpq   2c527 <rustc_demangle::v0::Printer::print_path+0x797>
   2c407:	48 83 c5 01          	add    $0x1,%rbp
   2c40b:	48 89 69 10          	mov    %rbp,0x10(%rcx)
   2c40f:	48 ff c0             	inc    %rax
   2c412:	0f 84 ef 00 00 00    	je     2c507 <rustc_demangle::v0::Printer::print_path+0x777>
   2c418:	48 ff c0             	inc    %rax
   2c41b:	0f 84 e6 00 00 00    	je     2c507 <rustc_demangle::v0::Printer::print_path+0x777>
   2c421:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   2c425:	48 89 04 24          	mov    %rax,(%rsp)
   2c429:	0f 85 ae fc ff ff    	jne    2c0dd <rustc_demangle::v0::Printer::print_path+0x34d>
   2c42f:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   2c436:	00 00 
   2c438:	e9 ca 00 00 00       	jmpq   2c507 <rustc_demangle::v0::Printer::print_path+0x777>
   2c43d:	48 83 c0 01          	add    $0x1,%rax
   2c441:	48 89 43 10          	mov    %rax,0x10(%rbx)
   2c445:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c449:	48 8d 35 7a d4 00 00 	lea    0xd47a(%rip),%rsi        # 398ca <str.6+0x25aa>
   2c450:	e9 95 fe ff ff       	jmpq   2c2ea <rustc_demangle::v0::Printer::print_path+0x55a>
   2c455:	44 89 7c 24 08       	mov    %r15d,0x8(%rsp)
   2c45a:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c45e:	48 8d 35 02 d5 00 00 	lea    0xd502(%rip),%rsi        # 39967 <str.6+0x2647>
   2c465:	ba 03 00 00 00       	mov    $0x3,%edx
   2c46a:	ff 15 d8 95 01 00    	callq  *0x195d8(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2c470:	84 c0                	test   %al,%al
   2c472:	0f 85 87 01 00 00    	jne    2c5ff <rustc_demangle::v0::Printer::print_path+0x86f>
   2c478:	41 83 ff 43          	cmp    $0x43,%r15d
   2c47c:	0f 84 c8 00 00 00    	je     2c54a <rustc_demangle::v0::Printer::print_path+0x7ba>
   2c482:	41 83 ff 53          	cmp    $0x53,%r15d
   2c486:	0f 85 d6 00 00 00    	jne    2c562 <rustc_demangle::v0::Printer::print_path+0x7d2>
   2c48c:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c490:	48 8d 35 10 d4 00 00 	lea    0xd410(%rip),%rsi        # 398a7 <str.6+0x2587>
   2c497:	ba 04 00 00 00       	mov    $0x4,%edx
   2c49c:	e9 b9 00 00 00       	jmpq   2c55a <rustc_demangle::v0::Printer::print_path+0x7ca>
   2c4a1:	31 c0                	xor    %eax,%eax
   2c4a3:	41 b8 3e 00 00 00    	mov    $0x3e,%r8d
   2c4a9:	48 39 ee             	cmp    %rbp,%rsi
   2c4ac:	76 59                	jbe    2c507 <rustc_demangle::v0::Printer::print_path+0x777>
   2c4ae:	41 0f b6 14 29       	movzbl (%r9,%rbp,1),%edx
   2c4b3:	80 fa 5f             	cmp    $0x5f,%dl
   2c4b6:	74 3d                	je     2c4f5 <rustc_demangle::v0::Printer::print_path+0x765>
   2c4b8:	8d 7a d0             	lea    -0x30(%rdx),%edi
   2c4bb:	40 80 ff 0a          	cmp    $0xa,%dil
   2c4bf:	72 1c                	jb     2c4dd <rustc_demangle::v0::Printer::print_path+0x74d>
   2c4c1:	8d 7a 9f             	lea    -0x61(%rdx),%edi
   2c4c4:	40 80 ff 1a          	cmp    $0x1a,%dil
   2c4c8:	73 05                	jae    2c4cf <rustc_demangle::v0::Printer::print_path+0x73f>
   2c4ca:	80 c2 a9             	add    $0xa9,%dl
   2c4cd:	eb 0c                	jmp    2c4db <rustc_demangle::v0::Printer::print_path+0x74b>
   2c4cf:	8d 7a bf             	lea    -0x41(%rdx),%edi
   2c4d2:	40 80 ff 1a          	cmp    $0x1a,%dil
   2c4d6:	73 2f                	jae    2c507 <rustc_demangle::v0::Printer::print_path+0x777>
   2c4d8:	80 c2 e3             	add    $0xe3,%dl
   2c4db:	89 d7                	mov    %edx,%edi
   2c4dd:	48 83 c5 01          	add    $0x1,%rbp
   2c4e1:	48 89 69 10          	mov    %rbp,0x10(%rcx)
   2c4e5:	49 f7 e0             	mul    %r8
   2c4e8:	70 1d                	jo     2c507 <rustc_demangle::v0::Printer::print_path+0x777>
   2c4ea:	40 0f b6 d7          	movzbl %dil,%edx
   2c4ee:	48 01 d0             	add    %rdx,%rax
   2c4f1:	73 b6                	jae    2c4a9 <rustc_demangle::v0::Printer::print_path+0x719>
   2c4f3:	eb 12                	jmp    2c507 <rustc_demangle::v0::Printer::print_path+0x777>
   2c4f5:	48 83 c5 01          	add    $0x1,%rbp
   2c4f9:	48 89 69 10          	mov    %rbp,0x10(%rcx)
   2c4fd:	48 ff c0             	inc    %rax
   2c500:	74 05                	je     2c507 <rustc_demangle::v0::Printer::print_path+0x777>
   2c502:	48 ff c0             	inc    %rax
   2c505:	75 30                	jne    2c537 <rustc_demangle::v0::Printer::print_path+0x7a7>
   2c507:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   2c50e:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c512:	48 8d 35 49 d4 00 00 	lea    0xd449(%rip),%rsi        # 39962 <str.6+0x2642>
   2c519:	ba 01 00 00 00       	mov    $0x1,%edx
   2c51e:	ff 15 24 95 01 00    	callq  *0x19524(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2c524:	41 89 c6             	mov    %eax,%r14d
   2c527:	44 89 f0             	mov    %r14d,%eax
   2c52a:	48 83 c4 50          	add    $0x50,%rsp
   2c52e:	5b                   	pop    %rbx
   2c52f:	41 5c                	pop    %r12
   2c531:	41 5e                	pop    %r14
   2c533:	41 5f                	pop    %r15
   2c535:	5d                   	pop    %rbp
   2c536:	c3                   	retq   
   2c537:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   2c53b:	48 89 04 24          	mov    %rax,(%rsp)
   2c53f:	0f 85 34 fe ff ff    	jne    2c379 <rustc_demangle::v0::Printer::print_path+0x5e9>
   2c545:	e9 e5 fe ff ff       	jmpq   2c42f <rustc_demangle::v0::Printer::print_path+0x69f>
   2c54a:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c54e:	48 8d 35 15 d4 00 00 	lea    0xd415(%rip),%rsi        # 3996a <str.6+0x264a>
   2c555:	ba 07 00 00 00       	mov    $0x7,%edx
   2c55a:	ff 15 e8 94 01 00    	callq  *0x194e8(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2c560:	eb 0f                	jmp    2c571 <rustc_demangle::v0::Printer::print_path+0x7e1>
   2c562:	48 8b 73 18          	mov    0x18(%rbx),%rsi
   2c566:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   2c56b:	ff 15 af 97 01 00    	callq  *0x197af(%rip)        # 45d20 <_GLOBAL_OFFSET_TABLE_+0x390>
   2c571:	84 c0                	test   %al,%al
   2c573:	0f 85 86 00 00 00    	jne    2c5ff <rustc_demangle::v0::Printer::print_path+0x86f>
   2c579:	48 83 7c 24 38 00    	cmpq   $0x0,0x38(%rsp)
   2c57f:	75 08                	jne    2c589 <rustc_demangle::v0::Printer::print_path+0x7f9>
   2c581:	48 83 7c 24 48 00    	cmpq   $0x0,0x48(%rsp)
   2c587:	74 2d                	je     2c5b6 <rustc_demangle::v0::Printer::print_path+0x826>
   2c589:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c58d:	48 8d 35 dd d3 00 00 	lea    0xd3dd(%rip),%rsi        # 39971 <str.6+0x2651>
   2c594:	ba 01 00 00 00       	mov    $0x1,%edx
   2c599:	ff 15 a9 94 01 00    	callq  *0x194a9(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2c59f:	84 c0                	test   %al,%al
   2c5a1:	75 5c                	jne    2c5ff <rustc_demangle::v0::Printer::print_path+0x86f>
   2c5a3:	48 8b 73 18          	mov    0x18(%rbx),%rsi
   2c5a7:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
   2c5ac:	ff 15 a6 95 01 00    	callq  *0x195a6(%rip)        # 45b58 <_GLOBAL_OFFSET_TABLE_+0x1c8>
   2c5b2:	84 c0                	test   %al,%al
   2c5b4:	75 49                	jne    2c5ff <rustc_demangle::v0::Printer::print_path+0x86f>
   2c5b6:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c5ba:	48 8d 35 b1 d3 00 00 	lea    0xd3b1(%rip),%rsi        # 39972 <str.6+0x2652>
   2c5c1:	ba 01 00 00 00       	mov    $0x1,%edx
   2c5c6:	ff 15 7c 94 01 00    	callq  *0x1947c(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2c5cc:	84 c0                	test   %al,%al
   2c5ce:	75 2f                	jne    2c5ff <rustc_demangle::v0::Printer::print_path+0x86f>
   2c5d0:	48 8b 73 18          	mov    0x18(%rbx),%rsi
   2c5d4:	48 89 e7             	mov    %rsp,%rdi
   2c5d7:	ff 15 c3 95 01 00    	callq  *0x195c3(%rip)        # 45ba0 <_GLOBAL_OFFSET_TABLE_+0x210>
   2c5dd:	84 c0                	test   %al,%al
   2c5df:	75 1e                	jne    2c5ff <rustc_demangle::v0::Printer::print_path+0x86f>
   2c5e1:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c5e5:	48 8d 35 46 d3 00 00 	lea    0xd346(%rip),%rsi        # 39932 <str.6+0x2612>
   2c5ec:	ba 01 00 00 00       	mov    $0x1,%edx
   2c5f1:	ff 15 51 94 01 00    	callq  *0x19451(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2c5f7:	84 c0                	test   %al,%al
   2c5f9:	0f 84 3a fb ff ff    	je     2c139 <rustc_demangle::v0::Printer::print_path+0x3a9>
   2c5ff:	41 b6 01             	mov    $0x1,%r14b
   2c602:	e9 20 ff ff ff       	jmpq   2c527 <rustc_demangle::v0::Printer::print_path+0x797>
   2c607:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2c60e:	00 00 

000000000002c610 <rustc_demangle::v0::Printer::print_generic_arg>:
   2c610:	48 8b 07             	mov    (%rdi),%rax
   2c613:	48 89 f9             	mov    %rdi,%rcx
   2c616:	48 85 c0             	test   %rax,%rax
   2c619:	48 0f 44 c8          	cmove  %rax,%rcx
   2c61d:	74 77                	je     2c696 <rustc_demangle::v0::Printer::print_generic_arg+0x86>
   2c61f:	48 8b 51 10          	mov    0x10(%rcx),%rdx
   2c623:	48 39 51 08          	cmp    %rdx,0x8(%rcx)
   2c627:	76 50                	jbe    2c679 <rustc_demangle::v0::Printer::print_generic_arg+0x69>
   2c629:	48 8b 31             	mov    (%rcx),%rsi
   2c62c:	80 3c 16 4c          	cmpb   $0x4c,(%rsi,%rdx,1)
   2c630:	75 47                	jne    2c679 <rustc_demangle::v0::Printer::print_generic_arg+0x69>
   2c632:	48 83 c2 01          	add    $0x1,%rdx
   2c636:	48 89 51 10          	mov    %rdx,0x10(%rcx)
   2c63a:	4c 8b 1f             	mov    (%rdi),%r11
   2c63d:	4d 85 db             	test   %r11,%r11
   2c640:	4c 0f 45 df          	cmovne %rdi,%r11
   2c644:	0f 84 bd 00 00 00    	je     2c707 <rustc_demangle::v0::Printer::print_generic_arg+0xf7>
   2c64a:	4d 8b 03             	mov    (%r11),%r8
   2c64d:	49 8b 43 08          	mov    0x8(%r11),%rax
   2c651:	49 8b 73 10          	mov    0x10(%r11),%rsi
   2c655:	49 89 f1             	mov    %rsi,%r9
   2c658:	48 39 f0             	cmp    %rsi,%rax
   2c65b:	76 3e                	jbe    2c69b <rustc_demangle::v0::Printer::print_generic_arg+0x8b>
   2c65d:	41 80 3c 30 5f       	cmpb   $0x5f,(%r8,%rsi,1)
   2c662:	49 89 c1             	mov    %rax,%r9
   2c665:	75 34                	jne    2c69b <rustc_demangle::v0::Printer::print_generic_arg+0x8b>
   2c667:	48 83 c6 01          	add    $0x1,%rsi
   2c66b:	49 89 73 10          	mov    %rsi,0x10(%r11)
   2c66f:	31 c0                	xor    %eax,%eax
   2c671:	48 89 c6             	mov    %rax,%rsi
   2c674:	e9 47 f6 ff ff       	jmpq   2bcc0 <rustc_demangle::v0::Printer::print_lifetime_from_index>
   2c679:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
   2c67d:	48 39 4f 08          	cmp    %rcx,0x8(%rdi)
   2c681:	76 13                	jbe    2c696 <rustc_demangle::v0::Printer::print_generic_arg+0x86>
   2c683:	80 3c 08 4b          	cmpb   $0x4b,(%rax,%rcx,1)
   2c687:	75 0d                	jne    2c696 <rustc_demangle::v0::Printer::print_generic_arg+0x86>
   2c689:	48 83 c1 01          	add    $0x1,%rcx
   2c68d:	48 89 4f 10          	mov    %rcx,0x10(%rdi)
   2c691:	e9 ba 13 00 00       	jmpq   2da50 <rustc_demangle::v0::Printer::print_const>
   2c696:	e9 95 00 00 00       	jmpq   2c730 <rustc_demangle::v0::Printer::print_type>
   2c69b:	48 83 c6 01          	add    $0x1,%rsi
   2c69f:	49 f7 d9             	neg    %r9
   2c6a2:	31 c0                	xor    %eax,%eax
   2c6a4:	41 ba 3e 00 00 00    	mov    $0x3e,%r10d
   2c6aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   2c6b0:	49 8d 0c 31          	lea    (%r9,%rsi,1),%rcx
   2c6b4:	48 83 f9 01          	cmp    $0x1,%rcx
   2c6b8:	74 4d                	je     2c707 <rustc_demangle::v0::Printer::print_generic_arg+0xf7>
   2c6ba:	41 0f b6 54 30 ff    	movzbl -0x1(%r8,%rsi,1),%edx
   2c6c0:	80 fa 5f             	cmp    $0x5f,%dl
   2c6c3:	74 39                	je     2c6fe <rustc_demangle::v0::Printer::print_generic_arg+0xee>
   2c6c5:	8d 4a d0             	lea    -0x30(%rdx),%ecx
   2c6c8:	80 f9 0a             	cmp    $0xa,%cl
   2c6cb:	72 1a                	jb     2c6e7 <rustc_demangle::v0::Printer::print_generic_arg+0xd7>
   2c6cd:	8d 4a 9f             	lea    -0x61(%rdx),%ecx
   2c6d0:	80 f9 1a             	cmp    $0x1a,%cl
   2c6d3:	73 05                	jae    2c6da <rustc_demangle::v0::Printer::print_generic_arg+0xca>
   2c6d5:	80 c2 a9             	add    $0xa9,%dl
   2c6d8:	eb 0b                	jmp    2c6e5 <rustc_demangle::v0::Printer::print_generic_arg+0xd5>
   2c6da:	8d 4a bf             	lea    -0x41(%rdx),%ecx
   2c6dd:	80 f9 1a             	cmp    $0x1a,%cl
   2c6e0:	73 25                	jae    2c707 <rustc_demangle::v0::Printer::print_generic_arg+0xf7>
   2c6e2:	80 c2 e3             	add    $0xe3,%dl
   2c6e5:	89 d1                	mov    %edx,%ecx
   2c6e7:	49 89 73 10          	mov    %rsi,0x10(%r11)
   2c6eb:	49 f7 e2             	mul    %r10
   2c6ee:	70 17                	jo     2c707 <rustc_demangle::v0::Printer::print_generic_arg+0xf7>
   2c6f0:	0f b6 c9             	movzbl %cl,%ecx
   2c6f3:	48 83 c6 01          	add    $0x1,%rsi
   2c6f7:	48 01 c8             	add    %rcx,%rax
   2c6fa:	73 b4                	jae    2c6b0 <rustc_demangle::v0::Printer::print_generic_arg+0xa0>
   2c6fc:	eb 09                	jmp    2c707 <rustc_demangle::v0::Printer::print_generic_arg+0xf7>
   2c6fe:	49 89 73 10          	mov    %rsi,0x10(%r11)
   2c702:	48 ff c0             	inc    %rax
   2c705:	75 1d                	jne    2c724 <rustc_demangle::v0::Printer::print_generic_arg+0x114>
   2c707:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   2c70e:	48 8b 7f 18          	mov    0x18(%rdi),%rdi
   2c712:	48 8d 35 49 d2 00 00 	lea    0xd249(%rip),%rsi        # 39962 <str.6+0x2642>
   2c719:	ba 01 00 00 00       	mov    $0x1,%edx
   2c71e:	ff 25 24 93 01 00    	jmpq   *0x19324(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2c724:	48 89 c6             	mov    %rax,%rsi
   2c727:	e9 94 f5 ff ff       	jmpq   2bcc0 <rustc_demangle::v0::Printer::print_lifetime_from_index>
   2c72c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000002c730 <rustc_demangle::v0::Printer::print_type>:
   2c730:	55                   	push   %rbp
   2c731:	41 57                	push   %r15
   2c733:	41 56                	push   %r14
   2c735:	41 55                	push   %r13
   2c737:	41 54                	push   %r12
   2c739:	53                   	push   %rbx
   2c73a:	48 83 ec 28          	sub    $0x28,%rsp
   2c73e:	48 89 fb             	mov    %rdi,%rbx
   2c741:	48 8b 07             	mov    (%rdi),%rax
   2c744:	48 85 c0             	test   %rax,%rax
   2c747:	48 0f 45 c7          	cmovne %rdi,%rax
   2c74b:	0f 84 4b 0a 00 00    	je     2d19c <rustc_demangle::v0::Printer::print_type+0xa6c>
   2c751:	48 8b 48 10          	mov    0x10(%rax),%rcx
   2c755:	48 39 48 08          	cmp    %rcx,0x8(%rax)
   2c759:	0f 86 3d 0a 00 00    	jbe    2d19c <rustc_demangle::v0::Printer::print_type+0xa6c>
   2c75f:	48 8b 10             	mov    (%rax),%rdx
   2c762:	40 8a 2c 0a          	mov    (%rdx,%rcx,1),%bpl
   2c766:	48 83 c1 01          	add    $0x1,%rcx
   2c76a:	48 89 48 10          	mov    %rcx,0x10(%rax)
   2c76e:	8d 45 bf             	lea    -0x41(%rbp),%eax
   2c771:	3c 39                	cmp    $0x39,%al
   2c773:	0f 87 d7 01 00 00    	ja     2c950 <rustc_demangle::v0::Printer::print_type+0x220>
   2c779:	48 8d 35 1b d1 00 00 	lea    0xd11b(%rip),%rsi        # 3989b <str.6+0x257b>
   2c780:	ba 04 00 00 00       	mov    $0x4,%edx
   2c785:	0f b6 c0             	movzbl %al,%eax
   2c788:	48 8d 0d cd ce 00 00 	lea    0xcecd(%rip),%rcx        # 3965c <str.6+0x233c>
   2c78f:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   2c793:	48 01 c8             	add    %rcx,%rax
   2c796:	ff e0                	jmpq   *%rax
   2c798:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c79c:	48 8d 35 d0 d1 00 00 	lea    0xd1d0(%rip),%rsi        # 39973 <str.6+0x2653>
   2c7a3:	ba 01 00 00 00       	mov    $0x1,%edx
   2c7a8:	ff 15 9a 92 01 00    	callq  *0x1929a(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2c7ae:	41 b4 01             	mov    $0x1,%r12b
   2c7b1:	84 c0                	test   %al,%al
   2c7b3:	0f 85 53 08 00 00    	jne    2d00c <rustc_demangle::v0::Printer::print_type+0x8dc>
   2c7b9:	48 89 df             	mov    %rbx,%rdi
   2c7bc:	e8 6f ff ff ff       	callq  2c730 <rustc_demangle::v0::Printer::print_type>
   2c7c1:	84 c0                	test   %al,%al
   2c7c3:	0f 85 43 08 00 00    	jne    2d00c <rustc_demangle::v0::Printer::print_type+0x8dc>
   2c7c9:	40 80 fd 41          	cmp    $0x41,%bpl
   2c7cd:	75 2e                	jne    2c7fd <rustc_demangle::v0::Printer::print_type+0xcd>
   2c7cf:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c7d3:	48 8d 35 9e d1 00 00 	lea    0xd19e(%rip),%rsi        # 39978 <str.6+0x2658>
   2c7da:	ba 02 00 00 00       	mov    $0x2,%edx
   2c7df:	ff 15 63 92 01 00    	callq  *0x19263(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2c7e5:	84 c0                	test   %al,%al
   2c7e7:	0f 85 1f 08 00 00    	jne    2d00c <rustc_demangle::v0::Printer::print_type+0x8dc>
   2c7ed:	48 89 df             	mov    %rbx,%rdi
   2c7f0:	e8 5b 12 00 00       	callq  2da50 <rustc_demangle::v0::Printer::print_const>
   2c7f5:	84 c0                	test   %al,%al
   2c7f7:	0f 85 0f 08 00 00    	jne    2d00c <rustc_demangle::v0::Printer::print_type+0x8dc>
   2c7fd:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c801:	48 8d 35 6c d1 00 00 	lea    0xd16c(%rip),%rsi        # 39974 <str.6+0x2654>
   2c808:	e9 a1 09 00 00       	jmpq   2d1ae <rustc_demangle::v0::Printer::print_type+0xa7e>
   2c80d:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c811:	48 8d 35 a9 d0 00 00 	lea    0xd0a9(%rip),%rsi        # 398c1 <str.6+0x25a1>
   2c818:	ba 01 00 00 00       	mov    $0x1,%edx
   2c81d:	ff 15 25 92 01 00    	callq  *0x19225(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2c823:	41 b4 01             	mov    $0x1,%r12b
   2c826:	84 c0                	test   %al,%al
   2c828:	0f 85 de 07 00 00    	jne    2d00c <rustc_demangle::v0::Printer::print_type+0x8dc>
   2c82e:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c832:	40 80 fd 50          	cmp    $0x50,%bpl
   2c836:	0f 85 a0 00 00 00    	jne    2c8dc <rustc_demangle::v0::Printer::print_type+0x1ac>
   2c83c:	48 8d 35 37 d1 00 00 	lea    0xd137(%rip),%rsi        # 3997a <str.6+0x265a>
   2c843:	ba 06 00 00 00       	mov    $0x6,%edx
   2c848:	e9 9b 00 00 00       	jmpq   2c8e8 <rustc_demangle::v0::Printer::print_type+0x1b8>
   2c84d:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c851:	48 8d 35 6c d0 00 00 	lea    0xd06c(%rip),%rsi        # 398c4 <str.6+0x25a4>
   2c858:	ba 01 00 00 00       	mov    $0x1,%edx
   2c85d:	ff 15 e5 91 01 00    	callq  *0x191e5(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2c863:	41 b4 01             	mov    $0x1,%r12b
   2c866:	84 c0                	test   %al,%al
   2c868:	0f 85 9e 07 00 00    	jne    2d00c <rustc_demangle::v0::Printer::print_type+0x8dc>
   2c86e:	48 8b 03             	mov    (%rbx),%rax
   2c871:	48 85 c0             	test   %rax,%rax
   2c874:	48 0f 45 c3          	cmovne %rbx,%rax
   2c878:	74 58                	je     2c8d2 <rustc_demangle::v0::Printer::print_type+0x1a2>
   2c87a:	48 8b 48 10          	mov    0x10(%rax),%rcx
   2c87e:	48 39 48 08          	cmp    %rcx,0x8(%rax)
   2c882:	76 4e                	jbe    2c8d2 <rustc_demangle::v0::Printer::print_type+0x1a2>
   2c884:	48 8b 10             	mov    (%rax),%rdx
   2c887:	80 3c 0a 4c          	cmpb   $0x4c,(%rdx,%rcx,1)
   2c88b:	75 45                	jne    2c8d2 <rustc_demangle::v0::Printer::print_type+0x1a2>
   2c88d:	48 83 c1 01          	add    $0x1,%rcx
   2c891:	48 89 48 10          	mov    %rcx,0x10(%rax)
   2c895:	48 8b 0b             	mov    (%rbx),%rcx
   2c898:	48 85 c9             	test   %rcx,%rcx
   2c89b:	48 0f 45 cb          	cmovne %rbx,%rcx
   2c89f:	0f 84 f7 08 00 00    	je     2d19c <rustc_demangle::v0::Printer::print_type+0xa6c>
   2c8a5:	4c 8b 01             	mov    (%rcx),%r8
   2c8a8:	48 8b 41 08          	mov    0x8(%rcx),%rax
   2c8ac:	48 8b 71 10          	mov    0x10(%rcx),%rsi
   2c8b0:	49 89 f2             	mov    %rsi,%r10
   2c8b3:	48 39 f0             	cmp    %rsi,%rax
   2c8b6:	0f 86 07 05 00 00    	jbe    2cdc3 <rustc_demangle::v0::Printer::print_type+0x693>
   2c8bc:	41 80 3c 30 5f       	cmpb   $0x5f,(%r8,%rsi,1)
   2c8c1:	49 89 c2             	mov    %rax,%r10
   2c8c4:	0f 85 f9 04 00 00    	jne    2cdc3 <rustc_demangle::v0::Printer::print_type+0x693>
   2c8ca:	48 83 c6 01          	add    $0x1,%rsi
   2c8ce:	48 89 71 10          	mov    %rsi,0x10(%rcx)
   2c8d2:	40 80 fd 52          	cmp    $0x52,%bpl
   2c8d6:	74 1e                	je     2c8f6 <rustc_demangle::v0::Printer::print_type+0x1c6>
   2c8d8:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c8dc:	48 8d 35 cc cf 00 00 	lea    0xcfcc(%rip),%rsi        # 398af <str.6+0x258f>
   2c8e3:	ba 04 00 00 00       	mov    $0x4,%edx
   2c8e8:	ff 15 5a 91 01 00    	callq  *0x1915a(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2c8ee:	84 c0                	test   %al,%al
   2c8f0:	0f 85 16 07 00 00    	jne    2d00c <rustc_demangle::v0::Printer::print_type+0x8dc>
   2c8f6:	48 89 df             	mov    %rbx,%rdi
   2c8f9:	48 83 c4 28          	add    $0x28,%rsp
   2c8fd:	5b                   	pop    %rbx
   2c8fe:	41 5c                	pop    %r12
   2c900:	41 5d                	pop    %r13
   2c902:	41 5e                	pop    %r14
   2c904:	41 5f                	pop    %r15
   2c906:	5d                   	pop    %rbp
   2c907:	e9 24 fe ff ff       	jmpq   2c730 <rustc_demangle::v0::Printer::print_type>
   2c90c:	48 8b 0b             	mov    (%rbx),%rcx
   2c90f:	48 85 c9             	test   %rcx,%rcx
   2c912:	48 0f 45 cb          	cmovne %rbx,%rcx
   2c916:	0f 84 5d 04 00 00    	je     2cd79 <rustc_demangle::v0::Printer::print_type+0x649>
   2c91c:	4c 8b 51 10          	mov    0x10(%rcx),%r10
   2c920:	4c 8b 31             	mov    (%rcx),%r14
   2c923:	4c 8b 41 08          	mov    0x8(%rcx),%r8
   2c927:	4c 89 d5             	mov    %r10,%rbp
   2c92a:	4d 39 d0             	cmp    %r10,%r8
   2c92d:	0f 86 d5 02 00 00    	jbe    2cc08 <rustc_demangle::v0::Printer::print_type+0x4d8>
   2c933:	43 80 3c 16 5f       	cmpb   $0x5f,(%r14,%r10,1)
   2c938:	4c 89 c5             	mov    %r8,%rbp
   2c93b:	0f 85 c7 02 00 00    	jne    2cc08 <rustc_demangle::v0::Printer::print_type+0x4d8>
   2c941:	49 8d 42 01          	lea    0x1(%r10),%rax
   2c945:	48 89 41 10          	mov    %rax,0x10(%rcx)
   2c949:	31 c0                	xor    %eax,%eax
   2c94b:	e9 2e 04 00 00       	jmpq   2cd7e <rustc_demangle::v0::Printer::print_type+0x64e>
   2c950:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   2c954:	74 05                	je     2c95b <rustc_demangle::v0::Printer::print_type+0x22b>
   2c956:	48 83 43 10 ff       	addq   $0xffffffffffffffff,0x10(%rbx)
   2c95b:	48 89 df             	mov    %rbx,%rdi
   2c95e:	31 f6                	xor    %esi,%esi
   2c960:	48 83 c4 28          	add    $0x28,%rsp
   2c964:	5b                   	pop    %rbx
   2c965:	41 5c                	pop    %r12
   2c967:	41 5d                	pop    %r13
   2c969:	41 5e                	pop    %r14
   2c96b:	41 5f                	pop    %r15
   2c96d:	5d                   	pop    %rbp
   2c96e:	e9 1d f4 ff ff       	jmpq   2bd90 <rustc_demangle::v0::Printer::print_path>
   2c973:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2c977:	48 8d 35 2d cf 00 00 	lea    0xcf2d(%rip),%rsi        # 398ab <str.6+0x258b>
   2c97e:	ba 04 00 00 00       	mov    $0x4,%edx
   2c983:	ff 15 bf 90 01 00    	callq  *0x190bf(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2c989:	41 b4 01             	mov    $0x1,%r12b
   2c98c:	84 c0                	test   %al,%al
   2c98e:	0f 85 78 06 00 00    	jne    2d00c <rustc_demangle::v0::Printer::print_type+0x8dc>
   2c994:	48 8b 0b             	mov    (%rbx),%rcx
   2c997:	48 85 c9             	test   %rcx,%rcx
   2c99a:	48 0f 45 cb          	cmovne %rbx,%rcx
   2c99e:	0f 84 47 06 00 00    	je     2cfeb <rustc_demangle::v0::Printer::print_type+0x8bb>
   2c9a4:	48 8b 71 08          	mov    0x8(%rcx),%rsi
   2c9a8:	48 8b 41 10          	mov    0x10(%rcx),%rax
   2c9ac:	48 39 c6             	cmp    %rax,%rsi
   2c9af:	0f 86 e4 02 00 00    	jbe    2cc99 <rustc_demangle::v0::Printer::print_type+0x569>
   2c9b5:	4c 8b 09             	mov    (%rcx),%r9
   2c9b8:	41 80 3c 01 47       	cmpb   $0x47,(%r9,%rax,1)
   2c9bd:	0f 85 d6 02 00 00    	jne    2cc99 <rustc_demangle::v0::Printer::print_type+0x569>
   2c9c3:	48 8d 68 01          	lea    0x1(%rax),%rbp
   2c9c7:	48 89 69 10          	mov    %rbp,0x10(%rcx)
   2c9cb:	48 39 ee             	cmp    %rbp,%rsi
   2c9ce:	0f 86 63 04 00 00    	jbe    2ce37 <rustc_demangle::v0::Printer::print_type+0x707>
   2c9d4:	41 80 3c 29 5f       	cmpb   $0x5f,(%r9,%rbp,1)
   2c9d9:	0f 85 58 04 00 00    	jne    2ce37 <rustc_demangle::v0::Printer::print_type+0x707>
   2c9df:	48 83 c0 02          	add    $0x2,%rax
   2c9e3:	48 89 41 10          	mov    %rax,0x10(%rcx)
   2c9e7:	45 31 f6             	xor    %r14d,%r14d
   2c9ea:	e9 f3 05 00 00       	jmpq   2cfe2 <rustc_demangle::v0::Printer::print_type+0x8b2>
   2c9ef:	48 8b 0b             	mov    (%rbx),%rcx
   2c9f2:	48 85 c9             	test   %rcx,%rcx
   2c9f5:	48 0f 45 cb          	cmovne %rbx,%rcx
   2c9f9:	0f 84 ef 04 00 00    	je     2ceee <rustc_demangle::v0::Printer::print_type+0x7be>
   2c9ff:	4c 8b 51 08          	mov    0x8(%rcx),%r10
   2ca03:	48 8b 41 10          	mov    0x10(%rcx),%rax
   2ca07:	49 39 c2             	cmp    %rax,%r10
   2ca0a:	0f 86 6f 02 00 00    	jbe    2cc7f <rustc_demangle::v0::Printer::print_type+0x54f>
   2ca10:	4c 8b 01             	mov    (%rcx),%r8
   2ca13:	41 80 3c 00 47       	cmpb   $0x47,(%r8,%rax,1)
   2ca18:	0f 85 61 02 00 00    	jne    2cc7f <rustc_demangle::v0::Printer::print_type+0x54f>
   2ca1e:	48 8d 78 01          	lea    0x1(%rax),%rdi
   2ca22:	48 89 79 10          	mov    %rdi,0x10(%rcx)
   2ca26:	49 39 fa             	cmp    %rdi,%r10
   2ca29:	0f 86 d9 02 00 00    	jbe    2cd08 <rustc_demangle::v0::Printer::print_type+0x5d8>
   2ca2f:	41 80 3c 38 5f       	cmpb   $0x5f,(%r8,%rdi,1)
   2ca34:	0f 85 ce 02 00 00    	jne    2cd08 <rustc_demangle::v0::Printer::print_type+0x5d8>
   2ca3a:	48 83 c0 02          	add    $0x2,%rax
   2ca3e:	48 89 41 10          	mov    %rax,0x10(%rcx)
   2ca42:	31 ed                	xor    %ebp,%ebp
   2ca44:	e9 a0 04 00 00       	jmpq   2cee9 <rustc_demangle::v0::Printer::print_type+0x7b9>
   2ca49:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2ca4d:	48 8d 35 79 ce 00 00 	lea    0xce79(%rip),%rsi        # 398cd <str.6+0x25ad>
   2ca54:	ba 01 00 00 00       	mov    $0x1,%edx
   2ca59:	ff 15 e9 8f 01 00    	callq  *0x18fe9(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2ca5f:	41 b4 01             	mov    $0x1,%r12b
   2ca62:	84 c0                	test   %al,%al
   2ca64:	0f 85 a2 05 00 00    	jne    2d00c <rustc_demangle::v0::Printer::print_type+0x8dc>
   2ca6a:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   2ca6e:	0f 84 58 04 00 00    	je     2cecc <rustc_demangle::v0::Printer::print_type+0x79c>
   2ca74:	31 ed                	xor    %ebp,%ebp
   2ca76:	4c 8d 35 e6 ce 00 00 	lea    0xcee6(%rip),%r14        # 39963 <str.6+0x2643>
   2ca7d:	4c 8d 3d 8c 47 00 00 	lea    0x478c(%rip),%r15        # 31210 <core::fmt::Formatter::write_str>
   2ca84:	48 8b 43 10          	mov    0x10(%rbx),%rax
   2ca88:	48 39 43 08          	cmp    %rax,0x8(%rbx)
   2ca8c:	76 0d                	jbe    2ca9b <rustc_demangle::v0::Printer::print_type+0x36b>
   2ca8e:	48 8b 0b             	mov    (%rbx),%rcx
   2ca91:	80 3c 01 45          	cmpb   $0x45,(%rcx,%rax,1)
   2ca95:	0f 84 05 04 00 00    	je     2cea0 <rustc_demangle::v0::Printer::print_type+0x770>
   2ca9b:	48 85 ed             	test   %rbp,%rbp
   2ca9e:	74 17                	je     2cab7 <rustc_demangle::v0::Printer::print_type+0x387>
   2caa0:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2caa4:	ba 02 00 00 00       	mov    $0x2,%edx
   2caa9:	4c 89 f6             	mov    %r14,%rsi
   2caac:	41 ff d7             	callq  *%r15
   2caaf:	84 c0                	test   %al,%al
   2cab1:	0f 85 55 05 00 00    	jne    2d00c <rustc_demangle::v0::Printer::print_type+0x8dc>
   2cab7:	48 89 df             	mov    %rbx,%rdi
   2caba:	e8 71 fc ff ff       	callq  2c730 <rustc_demangle::v0::Printer::print_type>
   2cabf:	84 c0                	test   %al,%al
   2cac1:	0f 85 45 05 00 00    	jne    2d00c <rustc_demangle::v0::Printer::print_type+0x8dc>
   2cac7:	48 83 c5 01          	add    $0x1,%rbp
   2cacb:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   2cacf:	75 b3                	jne    2ca84 <rustc_demangle::v0::Printer::print_type+0x354>
   2cad1:	e9 d2 03 00 00       	jmpq   2cea8 <rustc_demangle::v0::Printer::print_type+0x778>
   2cad6:	48 8d 35 7f ce 00 00 	lea    0xce7f(%rip),%rsi        # 3995c <str.6+0x263c>
   2cadd:	ba 02 00 00 00       	mov    $0x2,%edx
   2cae2:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2cae6:	e9 c8 06 00 00       	jmpq   2d1b3 <rustc_demangle::v0::Printer::print_type+0xa83>
   2caeb:	48 8d 35 a5 cd 00 00 	lea    0xcda5(%rip),%rsi        # 39897 <str.6+0x2577>
   2caf2:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2caf6:	e9 b8 06 00 00       	jmpq   2d1b3 <rustc_demangle::v0::Printer::print_type+0xa83>
   2cafb:	48 8d 35 36 ce 00 00 	lea    0xce36(%rip),%rsi        # 39938 <str.6+0x2618>
   2cb02:	e9 de 00 00 00       	jmpq   2cbe5 <rustc_demangle::v0::Printer::print_type+0x4b5>
   2cb07:	48 8d 35 50 ce 00 00 	lea    0xce50(%rip),%rsi        # 3995e <str.6+0x263e>
   2cb0e:	e9 d2 00 00 00       	jmpq   2cbe5 <rustc_demangle::v0::Printer::print_type+0x4b5>
   2cb13:	48 8d 35 21 ce 00 00 	lea    0xce21(%rip),%rsi        # 3993b <str.6+0x261b>
   2cb1a:	e9 c6 00 00 00       	jmpq   2cbe5 <rustc_demangle::v0::Printer::print_type+0x4b5>
   2cb1f:	48 8d 35 26 ce 00 00 	lea    0xce26(%rip),%rsi        # 3994c <str.6+0x262c>
   2cb26:	ba 02 00 00 00       	mov    $0x2,%edx
   2cb2b:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2cb2f:	e9 7f 06 00 00       	jmpq   2d1b3 <rustc_demangle::v0::Printer::print_type+0xa83>
   2cb34:	48 8d 35 13 ce 00 00 	lea    0xce13(%rip),%rsi        # 3994e <str.6+0x262e>
   2cb3b:	ba 05 00 00 00       	mov    $0x5,%edx
   2cb40:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2cb44:	e9 6a 06 00 00       	jmpq   2d1b3 <rustc_demangle::v0::Printer::print_type+0xa83>
   2cb49:	48 8d 35 ee cd 00 00 	lea    0xcdee(%rip),%rsi        # 3993e <str.6+0x261e>
   2cb50:	ba 05 00 00 00       	mov    $0x5,%edx
   2cb55:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2cb59:	e9 55 06 00 00       	jmpq   2d1b3 <rustc_demangle::v0::Printer::print_type+0xa83>
   2cb5e:	48 8d 35 f1 cd 00 00 	lea    0xcdf1(%rip),%rsi        # 39956 <str.6+0x2636>
   2cb65:	eb 7e                	jmp    2cbe5 <rustc_demangle::v0::Printer::print_type+0x4b5>
   2cb67:	48 8d 35 d8 cd 00 00 	lea    0xcdd8(%rip),%rsi        # 39946 <str.6+0x2626>
   2cb6e:	eb 75                	jmp    2cbe5 <rustc_demangle::v0::Printer::print_type+0x4b5>
   2cb70:	48 8d 35 1c cd 00 00 	lea    0xcd1c(%rip),%rsi        # 39893 <str.6+0x2573>
   2cb77:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2cb7b:	e9 33 06 00 00       	jmpq   2d1b3 <rustc_demangle::v0::Printer::print_type+0xa83>
   2cb80:	48 8d 35 08 cd 00 00 	lea    0xcd08(%rip),%rsi        # 3988f <str.6+0x256f>
   2cb87:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2cb8b:	e9 23 06 00 00       	jmpq   2d1b3 <rustc_demangle::v0::Printer::print_type+0xa83>
   2cb90:	48 8d 35 9f cd 00 00 	lea    0xcd9f(%rip),%rsi        # 39936 <str.6+0x2616>
   2cb97:	ba 01 00 00 00       	mov    $0x1,%edx
   2cb9c:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2cba0:	e9 0e 06 00 00       	jmpq   2d1b3 <rustc_demangle::v0::Printer::print_type+0xa83>
   2cba5:	48 8d 35 ad cd 00 00 	lea    0xcdad(%rip),%rsi        # 39959 <str.6+0x2639>
   2cbac:	eb 37                	jmp    2cbe5 <rustc_demangle::v0::Printer::print_type+0x4b5>
   2cbae:	48 8d 35 94 cd 00 00 	lea    0xcd94(%rip),%rsi        # 39949 <str.6+0x2629>
   2cbb5:	eb 2e                	jmp    2cbe5 <rustc_demangle::v0::Printer::print_type+0x4b5>
   2cbb7:	48 8d 35 ce cb 00 00 	lea    0xcbce(%rip),%rsi        # 3978c <str.6+0x246c>
   2cbbe:	ba 02 00 00 00       	mov    $0x2,%edx
   2cbc3:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2cbc7:	e9 e7 05 00 00       	jmpq   2d1b3 <rustc_demangle::v0::Printer::print_type+0xa83>
   2cbcc:	48 8d 35 60 cd 00 00 	lea    0xcd60(%rip),%rsi        # 39933 <str.6+0x2613>
   2cbd3:	eb 10                	jmp    2cbe5 <rustc_demangle::v0::Printer::print_type+0x4b5>
   2cbd5:	48 8d 35 77 cd 00 00 	lea    0xcd77(%rip),%rsi        # 39953 <str.6+0x2633>
   2cbdc:	eb 07                	jmp    2cbe5 <rustc_demangle::v0::Printer::print_type+0x4b5>
   2cbde:	48 8d 35 5e cd 00 00 	lea    0xcd5e(%rip),%rsi        # 39943 <str.6+0x2623>
   2cbe5:	ba 03 00 00 00       	mov    $0x3,%edx
   2cbea:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2cbee:	e9 c0 05 00 00       	jmpq   2d1b3 <rustc_demangle::v0::Printer::print_type+0xa83>
   2cbf3:	48 8d 35 3d cd 00 00 	lea    0xcd3d(%rip),%rsi        # 39937 <str.6+0x2617>
   2cbfa:	ba 01 00 00 00       	mov    $0x1,%edx
   2cbff:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2cc03:	e9 ab 05 00 00       	jmpq   2d1b3 <rustc_demangle::v0::Printer::print_type+0xa83>
   2cc08:	49 8d 72 01          	lea    0x1(%r10),%rsi
   2cc0c:	48 f7 dd             	neg    %rbp
   2cc0f:	45 31 c9             	xor    %r9d,%r9d
   2cc12:	41 bb 3e 00 00 00    	mov    $0x3e,%r11d
   2cc18:	31 c0                	xor    %eax,%eax
   2cc1a:	48 8d 14 2e          	lea    (%rsi,%rbp,1),%rdx
   2cc1e:	48 83 fa 01          	cmp    $0x1,%rdx
   2cc22:	0f 84 54 01 00 00    	je     2cd7c <rustc_demangle::v0::Printer::print_type+0x64c>
   2cc28:	41 0f b6 54 36 ff    	movzbl -0x1(%r14,%rsi,1),%edx
   2cc2e:	80 fa 5f             	cmp    $0x5f,%dl
   2cc31:	0f 84 39 01 00 00    	je     2cd70 <rustc_demangle::v0::Printer::print_type+0x640>
   2cc37:	8d 7a d0             	lea    -0x30(%rdx),%edi
   2cc3a:	40 80 ff 0a          	cmp    $0xa,%dil
   2cc3e:	72 20                	jb     2cc60 <rustc_demangle::v0::Printer::print_type+0x530>
   2cc40:	8d 7a 9f             	lea    -0x61(%rdx),%edi
   2cc43:	40 80 ff 1a          	cmp    $0x1a,%dil
   2cc47:	73 05                	jae    2cc4e <rustc_demangle::v0::Printer::print_type+0x51e>
   2cc49:	80 c2 a9             	add    $0xa9,%dl
   2cc4c:	eb 10                	jmp    2cc5e <rustc_demangle::v0::Printer::print_type+0x52e>
   2cc4e:	8d 7a bf             	lea    -0x41(%rdx),%edi
   2cc51:	40 80 ff 1a          	cmp    $0x1a,%dil
   2cc55:	0f 83 21 01 00 00    	jae    2cd7c <rustc_demangle::v0::Printer::print_type+0x64c>
   2cc5b:	80 c2 e3             	add    $0xe3,%dl
   2cc5e:	89 d7                	mov    %edx,%edi
   2cc60:	48 89 71 10          	mov    %rsi,0x10(%rcx)
   2cc64:	49 f7 e3             	mul    %r11
   2cc67:	0f 80 0f 01 00 00    	jo     2cd7c <rustc_demangle::v0::Printer::print_type+0x64c>
   2cc6d:	40 0f b6 d7          	movzbl %dil,%edx
   2cc71:	48 83 c6 01          	add    $0x1,%rsi
   2cc75:	48 01 d0             	add    %rdx,%rax
   2cc78:	73 a0                	jae    2cc1a <rustc_demangle::v0::Printer::print_type+0x4ea>
   2cc7a:	e9 fd 00 00 00       	jmpq   2cd7c <rustc_demangle::v0::Printer::print_type+0x64c>
   2cc7f:	31 ed                	xor    %ebp,%ebp
   2cc81:	48 89 df             	mov    %rbx,%rdi
   2cc84:	e8 a7 05 00 00       	callq  2d230 <rustc_demangle::v0::Printer::print_type::{{closure}}>
   2cc89:	29 6b 20             	sub    %ebp,0x20(%rbx)
   2cc8c:	84 c0                	test   %al,%al
   2cc8e:	0f 85 7b 02 00 00    	jne    2cf0f <rustc_demangle::v0::Printer::print_type+0x7df>
   2cc94:	e9 7e 02 00 00       	jmpq   2cf17 <rustc_demangle::v0::Printer::print_type+0x7e7>
   2cc99:	45 31 f6             	xor    %r14d,%r14d
   2cc9c:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   2cca0:	0f 84 ea 02 00 00    	je     2cf90 <rustc_demangle::v0::Printer::print_type+0x860>
   2cca6:	31 ed                	xor    %ebp,%ebp
   2cca8:	4c 8d 3d c6 cc 00 00 	lea    0xccc6(%rip),%r15        # 39975 <str.6+0x2655>
   2ccaf:	4c 8d 2d 5a 45 00 00 	lea    0x455a(%rip),%r13        # 31210 <core::fmt::Formatter::write_str>
   2ccb6:	48 8b 43 10          	mov    0x10(%rbx),%rax
   2ccba:	48 39 43 08          	cmp    %rax,0x8(%rbx)
   2ccbe:	76 0d                	jbe    2cccd <rustc_demangle::v0::Printer::print_type+0x59d>
   2ccc0:	48 8b 0b             	mov    (%rbx),%rcx
   2ccc3:	80 3c 01 45          	cmpb   $0x45,(%rcx,%rax,1)
   2ccc7:	0f 84 bb 02 00 00    	je     2cf88 <rustc_demangle::v0::Printer::print_type+0x858>
   2cccd:	48 85 ed             	test   %rbp,%rbp
   2ccd0:	74 17                	je     2cce9 <rustc_demangle::v0::Printer::print_type+0x5b9>
   2ccd2:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2ccd6:	ba 03 00 00 00       	mov    $0x3,%edx
   2ccdb:	4c 89 fe             	mov    %r15,%rsi
   2ccde:	41 ff d5             	callq  *%r13
   2cce1:	84 c0                	test   %al,%al
   2cce3:	0f 85 d1 00 00 00    	jne    2cdba <rustc_demangle::v0::Printer::print_type+0x68a>
   2cce9:	48 89 df             	mov    %rbx,%rdi
   2ccec:	e8 ef 0b 00 00       	callq  2d8e0 <rustc_demangle::v0::Printer::print_dyn_trait>
   2ccf1:	84 c0                	test   %al,%al
   2ccf3:	0f 85 c1 00 00 00    	jne    2cdba <rustc_demangle::v0::Printer::print_type+0x68a>
   2ccf9:	48 83 c5 ff          	add    $0xffffffffffffffff,%rbp
   2ccfd:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   2cd01:	75 b3                	jne    2ccb6 <rustc_demangle::v0::Printer::print_type+0x586>
   2cd03:	e9 88 02 00 00       	jmpq   2cf90 <rustc_demangle::v0::Printer::print_type+0x860>
   2cd08:	31 ed                	xor    %ebp,%ebp
   2cd0a:	41 b9 3e 00 00 00    	mov    $0x3e,%r9d
   2cd10:	49 39 fa             	cmp    %rdi,%r10
   2cd13:	0f 86 d5 01 00 00    	jbe    2ceee <rustc_demangle::v0::Printer::print_type+0x7be>
   2cd19:	41 0f b6 04 38       	movzbl (%r8,%rdi,1),%eax
   2cd1e:	3c 5f                	cmp    $0x5f,%al
   2cd20:	0f 84 b6 01 00 00    	je     2cedc <rustc_demangle::v0::Printer::print_type+0x7ac>
   2cd26:	8d 70 d0             	lea    -0x30(%rax),%esi
   2cd29:	40 80 fe 0a          	cmp    $0xa,%sil
   2cd2d:	72 1c                	jb     2cd4b <rustc_demangle::v0::Printer::print_type+0x61b>
   2cd2f:	8d 50 9f             	lea    -0x61(%rax),%edx
   2cd32:	80 fa 1a             	cmp    $0x1a,%dl
   2cd35:	73 04                	jae    2cd3b <rustc_demangle::v0::Printer::print_type+0x60b>
   2cd37:	04 a9                	add    $0xa9,%al
   2cd39:	eb 0e                	jmp    2cd49 <rustc_demangle::v0::Printer::print_type+0x619>
   2cd3b:	8d 50 bf             	lea    -0x41(%rax),%edx
   2cd3e:	80 fa 1a             	cmp    $0x1a,%dl
   2cd41:	0f 83 a7 01 00 00    	jae    2ceee <rustc_demangle::v0::Printer::print_type+0x7be>
   2cd47:	04 e3                	add    $0xe3,%al
   2cd49:	89 c6                	mov    %eax,%esi
   2cd4b:	48 83 c7 01          	add    $0x1,%rdi
   2cd4f:	48 89 79 10          	mov    %rdi,0x10(%rcx)
   2cd53:	48 89 e8             	mov    %rbp,%rax
   2cd56:	49 f7 e1             	mul    %r9
   2cd59:	0f 80 8f 01 00 00    	jo     2ceee <rustc_demangle::v0::Printer::print_type+0x7be>
   2cd5f:	48 89 c5             	mov    %rax,%rbp
   2cd62:	40 0f b6 c6          	movzbl %sil,%eax
   2cd66:	48 01 c5             	add    %rax,%rbp
   2cd69:	73 a5                	jae    2cd10 <rustc_demangle::v0::Printer::print_type+0x5e0>
   2cd6b:	e9 7e 01 00 00       	jmpq   2ceee <rustc_demangle::v0::Printer::print_type+0x7be>
   2cd70:	48 89 71 10          	mov    %rsi,0x10(%rcx)
   2cd74:	48 ff c0             	inc    %rax
   2cd77:	75 05                	jne    2cd7e <rustc_demangle::v0::Printer::print_type+0x64e>
   2cd79:	45 31 c9             	xor    %r9d,%r9d
   2cd7c:	eb 0e                	jmp    2cd8c <rustc_demangle::v0::Printer::print_type+0x65c>
   2cd7e:	49 83 c2 ff          	add    $0xffffffffffffffff,%r10
   2cd82:	45 31 c9             	xor    %r9d,%r9d
   2cd85:	4c 39 d0             	cmp    %r10,%rax
   2cd88:	4d 0f 42 ce          	cmovb  %r14,%r9
   2cd8c:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
   2cd90:	8b 53 20             	mov    0x20(%rbx),%edx
   2cd93:	4c 89 0c 24          	mov    %r9,(%rsp)
   2cd97:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   2cd9c:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   2cda1:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   2cda6:	89 54 24 20          	mov    %edx,0x20(%rsp)
   2cdaa:	48 89 e7             	mov    %rsp,%rdi
   2cdad:	e8 7e f9 ff ff       	callq  2c730 <rustc_demangle::v0::Printer::print_type>
   2cdb2:	41 89 c4             	mov    %eax,%r12d
   2cdb5:	e9 52 02 00 00       	jmpq   2d00c <rustc_demangle::v0::Printer::print_type+0x8dc>
   2cdba:	44 29 73 20          	sub    %r14d,0x20(%rbx)
   2cdbe:	e9 49 02 00 00       	jmpq   2d00c <rustc_demangle::v0::Printer::print_type+0x8dc>
   2cdc3:	48 83 c6 01          	add    $0x1,%rsi
   2cdc7:	49 f7 da             	neg    %r10
   2cdca:	31 c0                	xor    %eax,%eax
   2cdcc:	41 b9 3e 00 00 00    	mov    $0x3e,%r9d
   2cdd2:	49 8d 14 32          	lea    (%r10,%rsi,1),%rdx
   2cdd6:	48 83 fa 01          	cmp    $0x1,%rdx
   2cdda:	0f 84 bc 03 00 00    	je     2d19c <rustc_demangle::v0::Printer::print_type+0xa6c>
   2cde0:	41 0f b6 54 30 ff    	movzbl -0x1(%r8,%rsi,1),%edx
   2cde6:	80 fa 5f             	cmp    $0x5f,%dl
   2cde9:	0f 84 aa 01 00 00    	je     2cf99 <rustc_demangle::v0::Printer::print_type+0x869>
   2cdef:	8d 7a d0             	lea    -0x30(%rdx),%edi
   2cdf2:	40 80 ff 0a          	cmp    $0xa,%dil
   2cdf6:	72 20                	jb     2ce18 <rustc_demangle::v0::Printer::print_type+0x6e8>
   2cdf8:	8d 7a 9f             	lea    -0x61(%rdx),%edi
   2cdfb:	40 80 ff 1a          	cmp    $0x1a,%dil
   2cdff:	73 05                	jae    2ce06 <rustc_demangle::v0::Printer::print_type+0x6d6>
   2ce01:	80 c2 a9             	add    $0xa9,%dl
   2ce04:	eb 10                	jmp    2ce16 <rustc_demangle::v0::Printer::print_type+0x6e6>
   2ce06:	8d 7a bf             	lea    -0x41(%rdx),%edi
   2ce09:	40 80 ff 1a          	cmp    $0x1a,%dil
   2ce0d:	0f 83 89 03 00 00    	jae    2d19c <rustc_demangle::v0::Printer::print_type+0xa6c>
   2ce13:	80 c2 e3             	add    $0xe3,%dl
   2ce16:	89 d7                	mov    %edx,%edi
   2ce18:	48 89 71 10          	mov    %rsi,0x10(%rcx)
   2ce1c:	49 f7 e1             	mul    %r9
   2ce1f:	0f 80 77 03 00 00    	jo     2d19c <rustc_demangle::v0::Printer::print_type+0xa6c>
   2ce25:	40 0f b6 d7          	movzbl %dil,%edx
   2ce29:	48 83 c6 01          	add    $0x1,%rsi
   2ce2d:	48 01 d0             	add    %rdx,%rax
   2ce30:	73 a0                	jae    2cdd2 <rustc_demangle::v0::Printer::print_type+0x6a2>
   2ce32:	e9 65 03 00 00       	jmpq   2d19c <rustc_demangle::v0::Printer::print_type+0xa6c>
   2ce37:	45 31 f6             	xor    %r14d,%r14d
   2ce3a:	41 b8 3e 00 00 00    	mov    $0x3e,%r8d
   2ce40:	48 39 ee             	cmp    %rbp,%rsi
   2ce43:	0f 86 a2 01 00 00    	jbe    2cfeb <rustc_demangle::v0::Printer::print_type+0x8bb>
   2ce49:	41 0f b6 04 29       	movzbl (%r9,%rbp,1),%eax
   2ce4e:	3c 5f                	cmp    $0x5f,%al
   2ce50:	0f 84 7f 01 00 00    	je     2cfd5 <rustc_demangle::v0::Printer::print_type+0x8a5>
   2ce56:	8d 78 d0             	lea    -0x30(%rax),%edi
   2ce59:	40 80 ff 0a          	cmp    $0xa,%dil
   2ce5d:	72 1c                	jb     2ce7b <rustc_demangle::v0::Printer::print_type+0x74b>
   2ce5f:	8d 50 9f             	lea    -0x61(%rax),%edx
   2ce62:	80 fa 1a             	cmp    $0x1a,%dl
   2ce65:	73 04                	jae    2ce6b <rustc_demangle::v0::Printer::print_type+0x73b>
   2ce67:	04 a9                	add    $0xa9,%al
   2ce69:	eb 0e                	jmp    2ce79 <rustc_demangle::v0::Printer::print_type+0x749>
   2ce6b:	8d 50 bf             	lea    -0x41(%rax),%edx
   2ce6e:	80 fa 1a             	cmp    $0x1a,%dl
   2ce71:	0f 83 74 01 00 00    	jae    2cfeb <rustc_demangle::v0::Printer::print_type+0x8bb>
   2ce77:	04 e3                	add    $0xe3,%al
   2ce79:	89 c7                	mov    %eax,%edi
   2ce7b:	48 83 c5 01          	add    $0x1,%rbp
   2ce7f:	48 89 69 10          	mov    %rbp,0x10(%rcx)
   2ce83:	4c 89 f0             	mov    %r14,%rax
   2ce86:	49 f7 e0             	mul    %r8
   2ce89:	0f 80 5c 01 00 00    	jo     2cfeb <rustc_demangle::v0::Printer::print_type+0x8bb>
   2ce8f:	49 89 c6             	mov    %rax,%r14
   2ce92:	40 0f b6 c7          	movzbl %dil,%eax
   2ce96:	49 01 c6             	add    %rax,%r14
   2ce99:	73 a5                	jae    2ce40 <rustc_demangle::v0::Printer::print_type+0x710>
   2ce9b:	e9 4b 01 00 00       	jmpq   2cfeb <rustc_demangle::v0::Printer::print_type+0x8bb>
   2cea0:	48 83 c0 01          	add    $0x1,%rax
   2cea4:	48 89 43 10          	mov    %rax,0x10(%rbx)
   2cea8:	48 83 fd 01          	cmp    $0x1,%rbp
   2ceac:	75 1e                	jne    2cecc <rustc_demangle::v0::Printer::print_type+0x79c>
   2ceae:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2ceb2:	48 8d 35 19 ca 00 00 	lea    0xca19(%rip),%rsi        # 398d2 <str.6+0x25b2>
   2ceb9:	ba 01 00 00 00       	mov    $0x1,%edx
   2cebe:	ff 15 84 8b 01 00    	callq  *0x18b84(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2cec4:	84 c0                	test   %al,%al
   2cec6:	0f 85 40 01 00 00    	jne    2d00c <rustc_demangle::v0::Printer::print_type+0x8dc>
   2cecc:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2ced0:	48 8d 35 f9 c9 00 00 	lea    0xc9f9(%rip),%rsi        # 398d0 <str.6+0x25b0>
   2ced7:	e9 d2 02 00 00       	jmpq   2d1ae <rustc_demangle::v0::Printer::print_type+0xa7e>
   2cedc:	48 83 c7 01          	add    $0x1,%rdi
   2cee0:	48 89 79 10          	mov    %rdi,0x10(%rcx)
   2cee4:	48 ff c5             	inc    %rbp
   2cee7:	74 05                	je     2ceee <rustc_demangle::v0::Printer::print_type+0x7be>
   2cee9:	48 ff c5             	inc    %rbp
   2ceec:	75 31                	jne    2cf1f <rustc_demangle::v0::Printer::print_type+0x7ef>
   2ceee:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   2cef5:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2cef9:	48 8d 35 62 ca 00 00 	lea    0xca62(%rip),%rsi        # 39962 <str.6+0x2642>
   2cf00:	ba 01 00 00 00       	mov    $0x1,%edx
   2cf05:	ff 15 3d 8b 01 00    	callq  *0x18b3d(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2cf0b:	84 c0                	test   %al,%al
   2cf0d:	74 08                	je     2cf17 <rustc_demangle::v0::Printer::print_type+0x7e7>
   2cf0f:	41 b4 01             	mov    $0x1,%r12b
   2cf12:	e9 f5 00 00 00       	jmpq   2d00c <rustc_demangle::v0::Printer::print_type+0x8dc>
   2cf17:	45 31 e4             	xor    %r12d,%r12d
   2cf1a:	e9 ed 00 00 00       	jmpq   2d00c <rustc_demangle::v0::Printer::print_type+0x8dc>
   2cf1f:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2cf23:	48 8d 35 75 c9 00 00 	lea    0xc975(%rip),%rsi        # 3989f <str.6+0x257f>
   2cf2a:	ba 04 00 00 00       	mov    $0x4,%edx
   2cf2f:	ff 15 13 8b 01 00    	callq  *0x18b13(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2cf35:	84 c0                	test   %al,%al
   2cf37:	75 d6                	jne    2cf0f <rustc_demangle::v0::Printer::print_type+0x7df>
   2cf39:	45 31 ff             	xor    %r15d,%r15d
   2cf3c:	4c 8d 35 20 ca 00 00 	lea    0xca20(%rip),%r14        # 39963 <str.6+0x2643>
   2cf43:	4c 8d 25 c6 42 00 00 	lea    0x42c6(%rip),%r12        # 31210 <core::fmt::Formatter::write_str>
   2cf4a:	eb 19                	jmp    2cf65 <rustc_demangle::v0::Printer::print_type+0x835>
   2cf4c:	49 83 c7 01          	add    $0x1,%r15
   2cf50:	83 43 20 01          	addl   $0x1,0x20(%rbx)
   2cf54:	be 01 00 00 00       	mov    $0x1,%esi
   2cf59:	48 89 df             	mov    %rbx,%rdi
   2cf5c:	e8 5f ed ff ff       	callq  2bcc0 <rustc_demangle::v0::Printer::print_lifetime_from_index>
   2cf61:	84 c0                	test   %al,%al
   2cf63:	75 aa                	jne    2cf0f <rustc_demangle::v0::Printer::print_type+0x7df>
   2cf65:	4c 39 fd             	cmp    %r15,%rbp
   2cf68:	0f 84 02 02 00 00    	je     2d170 <rustc_demangle::v0::Printer::print_type+0xa40>
   2cf6e:	4d 85 ff             	test   %r15,%r15
   2cf71:	74 d9                	je     2cf4c <rustc_demangle::v0::Printer::print_type+0x81c>
   2cf73:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2cf77:	ba 02 00 00 00       	mov    $0x2,%edx
   2cf7c:	4c 89 f6             	mov    %r14,%rsi
   2cf7f:	41 ff d4             	callq  *%r12
   2cf82:	84 c0                	test   %al,%al
   2cf84:	74 c6                	je     2cf4c <rustc_demangle::v0::Printer::print_type+0x81c>
   2cf86:	eb 87                	jmp    2cf0f <rustc_demangle::v0::Printer::print_type+0x7df>
   2cf88:	48 83 c0 01          	add    $0x1,%rax
   2cf8c:	48 89 43 10          	mov    %rax,0x10(%rbx)
   2cf90:	44 29 73 20          	sub    %r14d,0x20(%rbx)
   2cf94:	e9 85 00 00 00       	jmpq   2d01e <rustc_demangle::v0::Printer::print_type+0x8ee>
   2cf99:	48 89 71 10          	mov    %rsi,0x10(%rcx)
   2cf9d:	48 ff c0             	inc    %rax
   2cfa0:	0f 84 f6 01 00 00    	je     2d19c <rustc_demangle::v0::Printer::print_type+0xa6c>
   2cfa6:	48 89 df             	mov    %rbx,%rdi
   2cfa9:	48 89 c6             	mov    %rax,%rsi
   2cfac:	e8 0f ed ff ff       	callq  2bcc0 <rustc_demangle::v0::Printer::print_lifetime_from_index>
   2cfb1:	84 c0                	test   %al,%al
   2cfb3:	75 57                	jne    2d00c <rustc_demangle::v0::Printer::print_type+0x8dc>
   2cfb5:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2cfb9:	48 8d 35 c0 c9 00 00 	lea    0xc9c0(%rip),%rsi        # 39980 <str.6+0x2660>
   2cfc0:	ba 01 00 00 00       	mov    $0x1,%edx
   2cfc5:	ff 15 7d 8a 01 00    	callq  *0x18a7d(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2cfcb:	84 c0                	test   %al,%al
   2cfcd:	0f 84 ff f8 ff ff    	je     2c8d2 <rustc_demangle::v0::Printer::print_type+0x1a2>
   2cfd3:	eb 37                	jmp    2d00c <rustc_demangle::v0::Printer::print_type+0x8dc>
   2cfd5:	48 83 c5 01          	add    $0x1,%rbp
   2cfd9:	48 89 69 10          	mov    %rbp,0x10(%rcx)
   2cfdd:	49 ff c6             	inc    %r14
   2cfe0:	74 09                	je     2cfeb <rustc_demangle::v0::Printer::print_type+0x8bb>
   2cfe2:	49 ff c6             	inc    %r14
   2cfe5:	0f 85 16 01 00 00    	jne    2d101 <rustc_demangle::v0::Printer::print_type+0x9d1>
   2cfeb:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   2cff2:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2cff6:	48 8d 35 65 c9 00 00 	lea    0xc965(%rip),%rsi        # 39962 <str.6+0x2642>
   2cffd:	ba 01 00 00 00       	mov    $0x1,%edx
   2d002:	ff 15 40 8a 01 00    	callq  *0x18a40(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2d008:	84 c0                	test   %al,%al
   2d00a:	74 12                	je     2d01e <rustc_demangle::v0::Printer::print_type+0x8ee>
   2d00c:	44 89 e0             	mov    %r12d,%eax
   2d00f:	48 83 c4 28          	add    $0x28,%rsp
   2d013:	5b                   	pop    %rbx
   2d014:	41 5c                	pop    %r12
   2d016:	41 5d                	pop    %r13
   2d018:	41 5e                	pop    %r14
   2d01a:	41 5f                	pop    %r15
   2d01c:	5d                   	pop    %rbp
   2d01d:	c3                   	retq   
   2d01e:	48 8b 03             	mov    (%rbx),%rax
   2d021:	48 85 c0             	test   %rax,%rax
   2d024:	48 0f 45 c3          	cmovne %rbx,%rax
   2d028:	0f 84 6e 01 00 00    	je     2d19c <rustc_demangle::v0::Printer::print_type+0xa6c>
   2d02e:	48 8b 48 10          	mov    0x10(%rax),%rcx
   2d032:	48 39 48 08          	cmp    %rcx,0x8(%rax)
   2d036:	0f 86 60 01 00 00    	jbe    2d19c <rustc_demangle::v0::Printer::print_type+0xa6c>
   2d03c:	48 8b 10             	mov    (%rax),%rdx
   2d03f:	80 3c 0a 4c          	cmpb   $0x4c,(%rdx,%rcx,1)
   2d043:	0f 85 53 01 00 00    	jne    2d19c <rustc_demangle::v0::Printer::print_type+0xa6c>
   2d049:	48 83 c1 01          	add    $0x1,%rcx
   2d04d:	48 89 48 10          	mov    %rcx,0x10(%rax)
   2d051:	48 8b 0b             	mov    (%rbx),%rcx
   2d054:	48 85 c9             	test   %rcx,%rcx
   2d057:	48 0f 45 cb          	cmovne %rbx,%rcx
   2d05b:	0f 84 3b 01 00 00    	je     2d19c <rustc_demangle::v0::Printer::print_type+0xa6c>
   2d061:	4c 8b 09             	mov    (%rcx),%r9
   2d064:	48 8b 41 08          	mov    0x8(%rcx),%rax
   2d068:	48 8b 71 10          	mov    0x10(%rcx),%rsi
   2d06c:	48 89 f5             	mov    %rsi,%rbp
   2d06f:	48 39 f0             	cmp    %rsi,%rax
   2d072:	76 17                	jbe    2d08b <rustc_demangle::v0::Printer::print_type+0x95b>
   2d074:	41 80 3c 31 5f       	cmpb   $0x5f,(%r9,%rsi,1)
   2d079:	48 89 c5             	mov    %rax,%rbp
   2d07c:	75 0d                	jne    2d08b <rustc_demangle::v0::Printer::print_type+0x95b>
   2d07e:	48 83 c6 01          	add    $0x1,%rsi
   2d082:	48 89 71 10          	mov    %rsi,0x10(%rcx)
   2d086:	45 31 e4             	xor    %r12d,%r12d
   2d089:	eb 81                	jmp    2d00c <rustc_demangle::v0::Printer::print_type+0x8dc>
   2d08b:	48 83 c6 01          	add    $0x1,%rsi
   2d08f:	48 f7 dd             	neg    %rbp
   2d092:	45 31 f6             	xor    %r14d,%r14d
   2d095:	41 b8 3e 00 00 00    	mov    $0x3e,%r8d
   2d09b:	48 8d 04 2e          	lea    (%rsi,%rbp,1),%rax
   2d09f:	48 83 f8 01          	cmp    $0x1,%rax
   2d0a3:	0f 84 f3 00 00 00    	je     2d19c <rustc_demangle::v0::Printer::print_type+0xa6c>
   2d0a9:	41 0f b6 44 31 ff    	movzbl -0x1(%r9,%rsi,1),%eax
   2d0af:	3c 5f                	cmp    $0x5f,%al
   2d0b1:	0f 84 dc 00 00 00    	je     2d193 <rustc_demangle::v0::Printer::print_type+0xa63>
   2d0b7:	8d 78 d0             	lea    -0x30(%rax),%edi
   2d0ba:	40 80 ff 0a          	cmp    $0xa,%dil
   2d0be:	72 1c                	jb     2d0dc <rustc_demangle::v0::Printer::print_type+0x9ac>
   2d0c0:	8d 50 9f             	lea    -0x61(%rax),%edx
   2d0c3:	80 fa 1a             	cmp    $0x1a,%dl
   2d0c6:	73 04                	jae    2d0cc <rustc_demangle::v0::Printer::print_type+0x99c>
   2d0c8:	04 a9                	add    $0xa9,%al
   2d0ca:	eb 0e                	jmp    2d0da <rustc_demangle::v0::Printer::print_type+0x9aa>
   2d0cc:	8d 50 bf             	lea    -0x41(%rax),%edx
   2d0cf:	80 fa 1a             	cmp    $0x1a,%dl
   2d0d2:	0f 83 c4 00 00 00    	jae    2d19c <rustc_demangle::v0::Printer::print_type+0xa6c>
   2d0d8:	04 e3                	add    $0xe3,%al
   2d0da:	89 c7                	mov    %eax,%edi
   2d0dc:	48 89 71 10          	mov    %rsi,0x10(%rcx)
   2d0e0:	4c 89 f0             	mov    %r14,%rax
   2d0e3:	49 f7 e0             	mul    %r8
   2d0e6:	0f 80 b0 00 00 00    	jo     2d19c <rustc_demangle::v0::Printer::print_type+0xa6c>
   2d0ec:	49 89 c6             	mov    %rax,%r14
   2d0ef:	40 0f b6 c7          	movzbl %dil,%eax
   2d0f3:	48 83 c6 01          	add    $0x1,%rsi
   2d0f7:	49 01 c6             	add    %rax,%r14
   2d0fa:	73 9f                	jae    2d09b <rustc_demangle::v0::Printer::print_type+0x96b>
   2d0fc:	e9 9b 00 00 00       	jmpq   2d19c <rustc_demangle::v0::Printer::print_type+0xa6c>
   2d101:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d105:	48 8d 35 93 c7 00 00 	lea    0xc793(%rip),%rsi        # 3989f <str.6+0x257f>
   2d10c:	ba 04 00 00 00       	mov    $0x4,%edx
   2d111:	ff 15 31 89 01 00    	callq  *0x18931(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2d117:	84 c0                	test   %al,%al
   2d119:	0f 85 ed fe ff ff    	jne    2d00c <rustc_demangle::v0::Printer::print_type+0x8dc>
   2d11f:	31 ed                	xor    %ebp,%ebp
   2d121:	4c 8d 3d 3b c8 00 00 	lea    0xc83b(%rip),%r15        # 39963 <str.6+0x2643>
   2d128:	4c 8d 2d e1 40 00 00 	lea    0x40e1(%rip),%r13        # 31210 <core::fmt::Formatter::write_str>
   2d12f:	eb 1d                	jmp    2d14e <rustc_demangle::v0::Printer::print_type+0xa1e>
   2d131:	48 83 c5 01          	add    $0x1,%rbp
   2d135:	83 43 20 01          	addl   $0x1,0x20(%rbx)
   2d139:	be 01 00 00 00       	mov    $0x1,%esi
   2d13e:	48 89 df             	mov    %rbx,%rdi
   2d141:	e8 7a eb ff ff       	callq  2bcc0 <rustc_demangle::v0::Printer::print_lifetime_from_index>
   2d146:	84 c0                	test   %al,%al
   2d148:	0f 85 be fe ff ff    	jne    2d00c <rustc_demangle::v0::Printer::print_type+0x8dc>
   2d14e:	49 39 ee             	cmp    %rbp,%r14
   2d151:	74 74                	je     2d1c7 <rustc_demangle::v0::Printer::print_type+0xa97>
   2d153:	48 85 ed             	test   %rbp,%rbp
   2d156:	74 d9                	je     2d131 <rustc_demangle::v0::Printer::print_type+0xa01>
   2d158:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d15c:	ba 02 00 00 00       	mov    $0x2,%edx
   2d161:	4c 89 fe             	mov    %r15,%rsi
   2d164:	41 ff d5             	callq  *%r13
   2d167:	84 c0                	test   %al,%al
   2d169:	74 c6                	je     2d131 <rustc_demangle::v0::Printer::print_type+0xa01>
   2d16b:	e9 9c fe ff ff       	jmpq   2d00c <rustc_demangle::v0::Printer::print_type+0x8dc>
   2d170:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d174:	48 8d 35 ea c7 00 00 	lea    0xc7ea(%rip),%rsi        # 39965 <str.6+0x2645>
   2d17b:	ba 02 00 00 00       	mov    $0x2,%edx
   2d180:	ff 15 c2 88 01 00    	callq  *0x188c2(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2d186:	84 c0                	test   %al,%al
   2d188:	0f 84 f3 fa ff ff    	je     2cc81 <rustc_demangle::v0::Printer::print_type+0x551>
   2d18e:	e9 7c fd ff ff       	jmpq   2cf0f <rustc_demangle::v0::Printer::print_type+0x7df>
   2d193:	48 89 71 10          	mov    %rsi,0x10(%rcx)
   2d197:	49 ff c6             	inc    %r14
   2d19a:	75 4e                	jne    2d1ea <rustc_demangle::v0::Printer::print_type+0xaba>
   2d19c:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   2d1a3:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d1a7:	48 8d 35 b4 c7 00 00 	lea    0xc7b4(%rip),%rsi        # 39962 <str.6+0x2642>
   2d1ae:	ba 01 00 00 00       	mov    $0x1,%edx
   2d1b3:	48 83 c4 28          	add    $0x28,%rsp
   2d1b7:	5b                   	pop    %rbx
   2d1b8:	41 5c                	pop    %r12
   2d1ba:	41 5d                	pop    %r13
   2d1bc:	41 5e                	pop    %r14
   2d1be:	41 5f                	pop    %r15
   2d1c0:	5d                   	pop    %rbp
   2d1c1:	ff 25 81 88 01 00    	jmpq   *0x18881(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2d1c7:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d1cb:	48 8d 35 93 c7 00 00 	lea    0xc793(%rip),%rsi        # 39965 <str.6+0x2645>
   2d1d2:	ba 02 00 00 00       	mov    $0x2,%edx
   2d1d7:	ff 15 6b 88 01 00    	callq  *0x1886b(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2d1dd:	84 c0                	test   %al,%al
   2d1df:	0f 84 b7 fa ff ff    	je     2cc9c <rustc_demangle::v0::Printer::print_type+0x56c>
   2d1e5:	e9 22 fe ff ff       	jmpq   2d00c <rustc_demangle::v0::Printer::print_type+0x8dc>
   2d1ea:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d1ee:	48 8d 35 80 c7 00 00 	lea    0xc780(%rip),%rsi        # 39975 <str.6+0x2655>
   2d1f5:	ba 03 00 00 00       	mov    $0x3,%edx
   2d1fa:	ff 15 48 88 01 00    	callq  *0x18848(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2d200:	84 c0                	test   %al,%al
   2d202:	0f 85 04 fe ff ff    	jne    2d00c <rustc_demangle::v0::Printer::print_type+0x8dc>
   2d208:	48 89 df             	mov    %rbx,%rdi
   2d20b:	4c 89 f6             	mov    %r14,%rsi
   2d20e:	48 83 c4 28          	add    $0x28,%rsp
   2d212:	5b                   	pop    %rbx
   2d213:	41 5c                	pop    %r12
   2d215:	41 5d                	pop    %r13
   2d217:	41 5e                	pop    %r14
   2d219:	41 5f                	pop    %r15
   2d21b:	5d                   	pop    %rbp
   2d21c:	e9 9f ea ff ff       	jmpq   2bcc0 <rustc_demangle::v0::Printer::print_lifetime_from_index>
   2d221:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2d228:	00 00 00 
   2d22b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000002d230 <rustc_demangle::v0::Printer::print_type::{{closure}}>:
   2d230:	55                   	push   %rbp
   2d231:	41 57                	push   %r15
   2d233:	41 56                	push   %r14
   2d235:	41 55                	push   %r13
   2d237:	41 54                	push   %r12
   2d239:	53                   	push   %rbx
   2d23a:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
   2d241:	48 89 fb             	mov    %rdi,%rbx
   2d244:	48 8b 07             	mov    (%rdi),%rax
   2d247:	48 85 c0             	test   %rax,%rax
   2d24a:	48 0f 45 c7          	cmovne %rdi,%rax
   2d24e:	0f 84 3f 03 00 00    	je     2d593 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x363>
   2d254:	48 8b 48 10          	mov    0x10(%rax),%rcx
   2d258:	48 39 48 08          	cmp    %rcx,0x8(%rax)
   2d25c:	76 1c                	jbe    2d27a <rustc_demangle::v0::Printer::print_type::{{closure}}+0x4a>
   2d25e:	48 8b 10             	mov    (%rax),%rdx
   2d261:	80 3c 0a 55          	cmpb   $0x55,(%rdx,%rcx,1)
   2d265:	75 21                	jne    2d288 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x58>
   2d267:	48 83 c1 01          	add    $0x1,%rcx
   2d26b:	48 89 48 10          	mov    %rcx,0x10(%rax)
   2d26f:	40 b5 01             	mov    $0x1,%bpl
   2d272:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   2d276:	75 04                	jne    2d27c <rustc_demangle::v0::Printer::print_type::{{closure}}+0x4c>
   2d278:	eb 79                	jmp    2d2f3 <rustc_demangle::v0::Printer::print_type::{{closure}}+0xc3>
   2d27a:	31 ed                	xor    %ebp,%ebp
   2d27c:	48 8b 43 10          	mov    0x10(%rbx),%rax
   2d280:	48 39 43 08          	cmp    %rax,0x8(%rbx)
   2d284:	77 0e                	ja     2d294 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x64>
   2d286:	eb 62                	jmp    2d2ea <rustc_demangle::v0::Printer::print_type::{{closure}}+0xba>
   2d288:	31 ed                	xor    %ebp,%ebp
   2d28a:	48 8b 43 10          	mov    0x10(%rbx),%rax
   2d28e:	48 39 43 08          	cmp    %rax,0x8(%rbx)
   2d292:	76 56                	jbe    2d2ea <rustc_demangle::v0::Printer::print_type::{{closure}}+0xba>
   2d294:	48 8b 0b             	mov    (%rbx),%rcx
   2d297:	80 3c 01 4b          	cmpb   $0x4b,(%rcx,%rax,1)
   2d29b:	75 4d                	jne    2d2ea <rustc_demangle::v0::Printer::print_type::{{closure}}+0xba>
   2d29d:	48 83 c0 01          	add    $0x1,%rax
   2d2a1:	48 89 43 10          	mov    %rax,0x10(%rbx)
   2d2a5:	48 8b 03             	mov    (%rbx),%rax
   2d2a8:	48 85 c0             	test   %rax,%rax
   2d2ab:	48 0f 45 c3          	cmovne %rbx,%rax
   2d2af:	0f 84 4e 01 00 00    	je     2d403 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x1d3>
   2d2b5:	48 8b 48 10          	mov    0x10(%rax),%rcx
   2d2b9:	48 39 48 08          	cmp    %rcx,0x8(%rax)
   2d2bd:	0f 86 0c 01 00 00    	jbe    2d3cf <rustc_demangle::v0::Printer::print_type::{{closure}}+0x19f>
   2d2c3:	48 8b 10             	mov    (%rax),%rdx
   2d2c6:	80 3c 0a 43          	cmpb   $0x43,(%rdx,%rcx,1)
   2d2ca:	0f 85 ff 00 00 00    	jne    2d3cf <rustc_demangle::v0::Printer::print_type::{{closure}}+0x19f>
   2d2d0:	48 83 c1 01          	add    $0x1,%rcx
   2d2d4:	48 89 48 10          	mov    %rcx,0x10(%rax)
   2d2d8:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   2d2de:	4c 8d 35 ec c5 00 00 	lea    0xc5ec(%rip),%r14        # 398d1 <str.6+0x25b1>
   2d2e5:	e9 0b 01 00 00       	jmpq   2d3f5 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x1c5>
   2d2ea:	40 84 ed             	test   %bpl,%bpl
   2d2ed:	0f 84 a0 02 00 00    	je     2d593 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x363>
   2d2f3:	45 31 f6             	xor    %r14d,%r14d
   2d2f6:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d2fa:	48 8d 35 80 c6 00 00 	lea    0xc680(%rip),%rsi        # 39981 <str.6+0x2661>
   2d301:	ba 07 00 00 00       	mov    $0x7,%edx
   2d306:	ff 15 3c 87 01 00    	callq  *0x1873c(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2d30c:	41 b5 01             	mov    $0x1,%r13b
   2d30f:	84 c0                	test   %al,%al
   2d311:	0f 85 68 03 00 00    	jne    2d67f <rustc_demangle::v0::Printer::print_type::{{closure}}+0x44f>
   2d317:	4d 85 f6             	test   %r14,%r14
   2d31a:	0f 84 73 02 00 00    	je     2d593 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x363>
   2d320:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d324:	48 8d 35 5d c6 00 00 	lea    0xc65d(%rip),%rsi        # 39988 <str.6+0x2668>
   2d32b:	ba 08 00 00 00       	mov    $0x8,%edx
   2d330:	ff 15 12 87 01 00    	callq  *0x18712(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2d336:	41 b5 01             	mov    $0x1,%r13b
   2d339:	84 c0                	test   %al,%al
   2d33b:	0f 85 3e 03 00 00    	jne    2d67f <rustc_demangle::v0::Printer::print_type::{{closure}}+0x44f>
   2d341:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
   2d348:	00 00 
   2d34a:	4c 89 7c 24 50       	mov    %r15,0x50(%rsp)
   2d34f:	48 8d 74 24 58       	lea    0x58(%rsp),%rsi
   2d354:	4c 89 74 24 58       	mov    %r14,0x58(%rsp)
   2d359:	4c 89 7c 24 60       	mov    %r15,0x60(%rsp)
   2d35e:	48 c7 44 24 68 00 00 	movq   $0x0,0x68(%rsp)
   2d365:	00 00 
   2d367:	4c 89 7c 24 70       	mov    %r15,0x70(%rsp)
   2d36c:	48 c7 44 24 78 01 00 	movq   $0x1,0x78(%rsp)
   2d373:	00 00 
   2d375:	48 b8 5f 00 00 00 5f 	movabs $0x5f0000005f,%rax
   2d37c:	00 00 00 
   2d37f:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   2d386:	00 
   2d387:	66 c7 84 24 88 00 00 	movw   $0x1,0x88(%rsp)
   2d38e:	00 01 00 
   2d391:	48 8b 6b 18          	mov    0x18(%rbx),%rbp
   2d395:	48 89 e7             	mov    %rsp,%rdi
   2d398:	e8 63 c7 ff ff       	callq  29b00 <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match>
   2d39d:	83 3c 24 01          	cmpl   $0x1,(%rsp)
   2d3a1:	0f 85 92 00 00 00    	jne    2d439 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x209>
   2d3a7:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   2d3ac:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   2d3b1:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   2d3b6:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
   2d3bb:	4d 85 f6             	test   %r14,%r14
   2d3be:	0f 84 da 02 00 00    	je     2d69e <rustc_demangle::v0::Printer::print_type::{{closure}}+0x46e>
   2d3c4:	49 01 c6             	add    %rax,%r14
   2d3c7:	48 29 c2             	sub    %rax,%rdx
   2d3ca:	e9 a5 00 00 00       	jmpq   2d474 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x244>
   2d3cf:	48 89 e7             	mov    %rsp,%rdi
   2d3d2:	48 89 de             	mov    %rbx,%rsi
   2d3d5:	e8 d6 d9 ff ff       	callq  2adb0 <rustc_demangle::v0::Parser::ident>
   2d3da:	4c 8b 34 24          	mov    (%rsp),%r14
   2d3de:	4d 85 f6             	test   %r14,%r14
   2d3e1:	74 28                	je     2d40b <rustc_demangle::v0::Printer::print_type::{{closure}}+0x1db>
   2d3e3:	4c 8b 7c 24 08       	mov    0x8(%rsp),%r15
   2d3e8:	4d 85 ff             	test   %r15,%r15
   2d3eb:	74 1e                	je     2d40b <rustc_demangle::v0::Printer::print_type::{{closure}}+0x1db>
   2d3ed:	48 83 7c 24 18 00    	cmpq   $0x0,0x18(%rsp)
   2d3f3:	75 16                	jne    2d40b <rustc_demangle::v0::Printer::print_type::{{closure}}+0x1db>
   2d3f5:	40 84 ed             	test   %bpl,%bpl
   2d3f8:	0f 85 f8 fe ff ff    	jne    2d2f6 <rustc_demangle::v0::Printer::print_type::{{closure}}+0xc6>
   2d3fe:	e9 1d ff ff ff       	jmpq   2d320 <rustc_demangle::v0::Printer::print_type::{{closure}}+0xf0>
   2d403:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   2d40a:	00 
   2d40b:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   2d412:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d416:	48 8d 35 45 c5 00 00 	lea    0xc545(%rip),%rsi        # 39962 <str.6+0x2642>
   2d41d:	ba 01 00 00 00       	mov    $0x1,%edx
   2d422:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
   2d429:	5b                   	pop    %rbx
   2d42a:	41 5c                	pop    %r12
   2d42c:	41 5d                	pop    %r13
   2d42e:	41 5e                	pop    %r14
   2d430:	41 5f                	pop    %r15
   2d432:	5d                   	pop    %rbp
   2d433:	ff 25 0f 86 01 00    	jmpq   *0x1860f(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2d439:	80 bc 24 89 00 00 00 	cmpb   $0x0,0x89(%rsp)
   2d440:	00 
   2d441:	0f 85 57 02 00 00    	jne    2d69e <rustc_demangle::v0::Printer::print_type::{{closure}}+0x46e>
   2d447:	80 bc 24 88 00 00 00 	cmpb   $0x0,0x88(%rsp)
   2d44e:	00 
   2d44f:	4c 8b 74 24 48       	mov    0x48(%rsp),%r14
   2d454:	48 8b 54 24 50       	mov    0x50(%rsp),%rdx
   2d459:	75 09                	jne    2d464 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x234>
   2d45b:	4c 39 f2             	cmp    %r14,%rdx
   2d45e:	0f 84 3a 02 00 00    	je     2d69e <rustc_demangle::v0::Printer::print_type::{{closure}}+0x46e>
   2d464:	c6 84 24 89 00 00 00 	movb   $0x1,0x89(%rsp)
   2d46b:	01 
   2d46c:	4c 29 f2             	sub    %r14,%rdx
   2d46f:	4c 03 74 24 58       	add    0x58(%rsp),%r14
   2d474:	48 89 ef             	mov    %rbp,%rdi
   2d477:	4c 89 f6             	mov    %r14,%rsi
   2d47a:	ff 15 c8 85 01 00    	callq  *0x185c8(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2d480:	84 c0                	test   %al,%al
   2d482:	0f 85 f7 01 00 00    	jne    2d67f <rustc_demangle::v0::Printer::print_type::{{closure}}+0x44f>
   2d488:	48 8b 84 24 88 00 00 	mov    0x88(%rsp),%rax
   2d48f:	00 
   2d490:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   2d495:	0f 10 44 24 48       	movups 0x48(%rsp),%xmm0
   2d49a:	0f 10 4c 24 58       	movups 0x58(%rsp),%xmm1
   2d49f:	0f 10 54 24 68       	movups 0x68(%rsp),%xmm2
   2d4a4:	0f 10 5c 24 78       	movups 0x78(%rsp),%xmm3
   2d4a9:	0f 29 5c 24 30       	movaps %xmm3,0x30(%rsp)
   2d4ae:	0f 29 54 24 20       	movaps %xmm2,0x20(%rsp)
   2d4b3:	0f 29 4c 24 10       	movaps %xmm1,0x10(%rsp)
   2d4b8:	0f 29 04 24          	movaps %xmm0,(%rsp)
   2d4bc:	4c 8d bc 24 90 00 00 	lea    0x90(%rsp),%r15
   2d4c3:	00 
   2d4c4:	4c 8d 35 45 3d 00 00 	lea    0x3d45(%rip),%r14        # 31210 <core::fmt::Formatter::write_str>
   2d4cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   2d4d0:	80 7c 24 41 00       	cmpb   $0x0,0x41(%rsp)
   2d4d5:	0f 85 9a 00 00 00    	jne    2d575 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x345>
   2d4db:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
   2d4e0:	4c 89 ff             	mov    %r15,%rdi
   2d4e3:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   2d4e8:	e8 13 c6 ff ff       	callq  29b00 <<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match>
   2d4ed:	83 bc 24 90 00 00 00 	cmpl   $0x1,0x90(%rsp)
   2d4f4:	01 
   2d4f5:	75 20                	jne    2d517 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x2e7>
   2d4f7:	4c 8b a4 24 98 00 00 	mov    0x98(%rsp),%r12
   2d4fe:	00 
   2d4ff:	48 8b 84 24 a0 00 00 	mov    0xa0(%rsp),%rax
   2d506:	00 
   2d507:	48 8b 0c 24          	mov    (%rsp),%rcx
   2d50b:	48 01 cd             	add    %rcx,%rbp
   2d50e:	49 29 cc             	sub    %rcx,%r12
   2d511:	48 89 04 24          	mov    %rax,(%rsp)
   2d515:	eb 29                	jmp    2d540 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x310>
   2d517:	80 7c 24 41 00       	cmpb   $0x0,0x41(%rsp)
   2d51c:	75 57                	jne    2d575 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x345>
   2d51e:	80 7c 24 40 00       	cmpb   $0x0,0x40(%rsp)
   2d523:	48 8b 2c 24          	mov    (%rsp),%rbp
   2d527:	4c 8b 64 24 08       	mov    0x8(%rsp),%r12
   2d52c:	75 05                	jne    2d533 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x303>
   2d52e:	49 39 ec             	cmp    %rbp,%r12
   2d531:	74 42                	je     2d575 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x345>
   2d533:	c6 44 24 41 01       	movb   $0x1,0x41(%rsp)
   2d538:	49 29 ec             	sub    %rbp,%r12
   2d53b:	48 03 6c 24 10       	add    0x10(%rsp),%rbp
   2d540:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d544:	ba 01 00 00 00       	mov    $0x1,%edx
   2d549:	48 8d 35 e1 c3 00 00 	lea    0xc3e1(%rip),%rsi        # 39931 <str.6+0x2611>
   2d550:	41 ff d6             	callq  *%r14
   2d553:	84 c0                	test   %al,%al
   2d555:	0f 85 24 01 00 00    	jne    2d67f <rustc_demangle::v0::Printer::print_type::{{closure}}+0x44f>
   2d55b:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d55f:	48 89 ee             	mov    %rbp,%rsi
   2d562:	4c 89 e2             	mov    %r12,%rdx
   2d565:	41 ff d6             	callq  *%r14
   2d568:	84 c0                	test   %al,%al
   2d56a:	0f 84 60 ff ff ff    	je     2d4d0 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x2a0>
   2d570:	e9 0a 01 00 00       	jmpq   2d67f <rustc_demangle::v0::Printer::print_type::{{closure}}+0x44f>
   2d575:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d579:	48 8d 35 10 c4 00 00 	lea    0xc410(%rip),%rsi        # 39990 <str.6+0x2670>
   2d580:	ba 02 00 00 00       	mov    $0x2,%edx
   2d585:	ff 15 bd 84 01 00    	callq  *0x184bd(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2d58b:	84 c0                	test   %al,%al
   2d58d:	0f 85 ec 00 00 00    	jne    2d67f <rustc_demangle::v0::Printer::print_type::{{closure}}+0x44f>
   2d593:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d597:	48 8d 35 f4 c3 00 00 	lea    0xc3f4(%rip),%rsi        # 39992 <str.6+0x2672>
   2d59e:	ba 03 00 00 00       	mov    $0x3,%edx
   2d5a3:	ff 15 9f 84 01 00    	callq  *0x1849f(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2d5a9:	41 b5 01             	mov    $0x1,%r13b
   2d5ac:	84 c0                	test   %al,%al
   2d5ae:	0f 85 cb 00 00 00    	jne    2d67f <rustc_demangle::v0::Printer::print_type::{{closure}}+0x44f>
   2d5b4:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   2d5b8:	74 65                	je     2d61f <rustc_demangle::v0::Printer::print_type::{{closure}}+0x3ef>
   2d5ba:	31 ed                	xor    %ebp,%ebp
   2d5bc:	4c 8d 35 a0 c3 00 00 	lea    0xc3a0(%rip),%r14        # 39963 <str.6+0x2643>
   2d5c3:	4c 8d 3d 46 3c 00 00 	lea    0x3c46(%rip),%r15        # 31210 <core::fmt::Formatter::write_str>
   2d5ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   2d5d0:	48 8b 43 10          	mov    0x10(%rbx),%rax
   2d5d4:	48 39 43 08          	cmp    %rax,0x8(%rbx)
   2d5d8:	76 09                	jbe    2d5e3 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x3b3>
   2d5da:	48 8b 0b             	mov    (%rbx),%rcx
   2d5dd:	80 3c 01 45          	cmpb   $0x45,(%rcx,%rax,1)
   2d5e1:	74 34                	je     2d617 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x3e7>
   2d5e3:	48 85 ed             	test   %rbp,%rbp
   2d5e6:	74 17                	je     2d5ff <rustc_demangle::v0::Printer::print_type::{{closure}}+0x3cf>
   2d5e8:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d5ec:	ba 02 00 00 00       	mov    $0x2,%edx
   2d5f1:	4c 89 f6             	mov    %r14,%rsi
   2d5f4:	41 ff d7             	callq  *%r15
   2d5f7:	84 c0                	test   %al,%al
   2d5f9:	0f 85 80 00 00 00    	jne    2d67f <rustc_demangle::v0::Printer::print_type::{{closure}}+0x44f>
   2d5ff:	48 89 df             	mov    %rbx,%rdi
   2d602:	e8 29 f1 ff ff       	callq  2c730 <rustc_demangle::v0::Printer::print_type>
   2d607:	84 c0                	test   %al,%al
   2d609:	75 74                	jne    2d67f <rustc_demangle::v0::Printer::print_type::{{closure}}+0x44f>
   2d60b:	48 83 c5 ff          	add    $0xffffffffffffffff,%rbp
   2d60f:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   2d613:	75 bb                	jne    2d5d0 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x3a0>
   2d615:	eb 08                	jmp    2d61f <rustc_demangle::v0::Printer::print_type::{{closure}}+0x3ef>
   2d617:	48 83 c0 01          	add    $0x1,%rax
   2d61b:	48 89 43 10          	mov    %rax,0x10(%rbx)
   2d61f:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d623:	48 8d 35 a6 c2 00 00 	lea    0xc2a6(%rip),%rsi        # 398d0 <str.6+0x25b0>
   2d62a:	ba 01 00 00 00       	mov    $0x1,%edx
   2d62f:	ff 15 13 84 01 00    	callq  *0x18413(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2d635:	84 c0                	test   %al,%al
   2d637:	75 46                	jne    2d67f <rustc_demangle::v0::Printer::print_type::{{closure}}+0x44f>
   2d639:	48 8b 03             	mov    (%rbx),%rax
   2d63c:	48 85 c0             	test   %rax,%rax
   2d63f:	48 0f 45 c3          	cmovne %rbx,%rax
   2d643:	74 20                	je     2d665 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x435>
   2d645:	48 8b 48 10          	mov    0x10(%rax),%rcx
   2d649:	48 39 48 08          	cmp    %rcx,0x8(%rax)
   2d64d:	76 16                	jbe    2d665 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x435>
   2d64f:	48 8b 10             	mov    (%rax),%rdx
   2d652:	80 3c 0a 75          	cmpb   $0x75,(%rdx,%rcx,1)
   2d656:	75 0d                	jne    2d665 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x435>
   2d658:	48 83 c1 01          	add    $0x1,%rcx
   2d65c:	48 89 48 10          	mov    %rcx,0x10(%rax)
   2d660:	45 31 ed             	xor    %r13d,%r13d
   2d663:	eb 1a                	jmp    2d67f <rustc_demangle::v0::Printer::print_type::{{closure}}+0x44f>
   2d665:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d669:	48 8d 35 43 c2 00 00 	lea    0xc243(%rip),%rsi        # 398b3 <str.6+0x2593>
   2d670:	ba 04 00 00 00       	mov    $0x4,%edx
   2d675:	ff 15 cd 83 01 00    	callq  *0x183cd(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2d67b:	84 c0                	test   %al,%al
   2d67d:	74 15                	je     2d694 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x464>
   2d67f:	44 89 e8             	mov    %r13d,%eax
   2d682:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
   2d689:	5b                   	pop    %rbx
   2d68a:	41 5c                	pop    %r12
   2d68c:	41 5d                	pop    %r13
   2d68e:	41 5e                	pop    %r14
   2d690:	41 5f                	pop    %r15
   2d692:	5d                   	pop    %rbp
   2d693:	c3                   	retq   
   2d694:	48 89 df             	mov    %rbx,%rdi
   2d697:	e8 94 f0 ff ff       	callq  2c730 <rustc_demangle::v0::Printer::print_type>
   2d69c:	eb e4                	jmp    2d682 <rustc_demangle::v0::Printer::print_type::{{closure}}+0x452>
   2d69e:	48 8d 3d 38 c1 00 00 	lea    0xc138(%rip),%rdi        # 397dd <str.6+0x24bd>
   2d6a5:	48 8d 15 1c 7a 01 00 	lea    0x17a1c(%rip),%rdx        # 450c8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1b70>
   2d6ac:	be 2b 00 00 00       	mov    $0x2b,%esi
   2d6b1:	ff 15 29 88 01 00    	callq  *0x18829(%rip)        # 45ee0 <_GLOBAL_OFFSET_TABLE_+0x550>
   2d6b7:	0f 0b                	ud2    
   2d6b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000002d6c0 <rustc_demangle::v0::Printer::print_path_maybe_open_generics>:
   2d6c0:	55                   	push   %rbp
   2d6c1:	41 57                	push   %r15
   2d6c3:	41 56                	push   %r14
   2d6c5:	41 54                	push   %r12
   2d6c7:	53                   	push   %rbx
   2d6c8:	48 83 ec 30          	sub    $0x30,%rsp
   2d6cc:	48 89 fb             	mov    %rdi,%rbx
   2d6cf:	48 8b 07             	mov    (%rdi),%rax
   2d6d2:	48 89 f9             	mov    %rdi,%rcx
   2d6d5:	48 85 c0             	test   %rax,%rax
   2d6d8:	48 0f 44 c8          	cmove  %rax,%rcx
   2d6dc:	0f 84 a3 00 00 00    	je     2d785 <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0xc5>
   2d6e2:	48 8b 51 10          	mov    0x10(%rcx),%rdx
   2d6e6:	48 39 51 08          	cmp    %rdx,0x8(%rcx)
   2d6ea:	76 4d                	jbe    2d739 <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x79>
   2d6ec:	48 8b 31             	mov    (%rcx),%rsi
   2d6ef:	80 3c 16 42          	cmpb   $0x42,(%rsi,%rdx,1)
   2d6f3:	75 44                	jne    2d739 <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x79>
   2d6f5:	48 83 c2 01          	add    $0x1,%rdx
   2d6f9:	48 89 51 10          	mov    %rdx,0x10(%rcx)
   2d6fd:	48 8b 0b             	mov    (%rbx),%rcx
   2d700:	48 85 c9             	test   %rcx,%rcx
   2d703:	48 0f 45 cb          	cmovne %rbx,%rcx
   2d707:	0f 84 71 01 00 00    	je     2d87e <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x1be>
   2d70d:	4c 8b 51 10          	mov    0x10(%rcx),%r10
   2d711:	4c 8b 31             	mov    (%rcx),%r14
   2d714:	4c 8b 41 08          	mov    0x8(%rcx),%r8
   2d718:	4c 89 d5             	mov    %r10,%rbp
   2d71b:	4d 39 d0             	cmp    %r10,%r8
   2d71e:	76 76                	jbe    2d796 <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0xd6>
   2d720:	43 80 3c 16 5f       	cmpb   $0x5f,(%r14,%r10,1)
   2d725:	4c 89 c5             	mov    %r8,%rbp
   2d728:	75 6c                	jne    2d796 <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0xd6>
   2d72a:	49 8d 42 01          	lea    0x1(%r10),%rax
   2d72e:	48 89 41 10          	mov    %rax,0x10(%rcx)
   2d732:	31 c0                	xor    %eax,%eax
   2d734:	e9 4a 01 00 00       	jmpq   2d883 <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x1c3>
   2d739:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
   2d73d:	48 39 4b 08          	cmp    %rcx,0x8(%rbx)
   2d741:	76 42                	jbe    2d785 <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0xc5>
   2d743:	80 3c 08 49          	cmpb   $0x49,(%rax,%rcx,1)
   2d747:	75 3c                	jne    2d785 <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0xc5>
   2d749:	48 83 c1 01          	add    $0x1,%rcx
   2d74d:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
   2d751:	48 89 df             	mov    %rbx,%rdi
   2d754:	31 f6                	xor    %esi,%esi
   2d756:	e8 35 e6 ff ff       	callq  2bd90 <rustc_demangle::v0::Printer::print_path>
   2d75b:	84 c0                	test   %al,%al
   2d75d:	75 1e                	jne    2d77d <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0xbd>
   2d75f:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d763:	48 8d 35 5d c1 00 00 	lea    0xc15d(%rip),%rsi        # 398c7 <str.6+0x25a7>
   2d76a:	ba 01 00 00 00       	mov    $0x1,%edx
   2d76f:	ff 15 d3 82 01 00    	callq  *0x182d3(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2d775:	84 c0                	test   %al,%al
   2d777:	0f 84 8c 00 00 00    	je     2d809 <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x149>
   2d77d:	41 b7 02             	mov    $0x2,%r15b
   2d780:	e9 38 01 00 00       	jmpq   2d8bd <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x1fd>
   2d785:	48 89 df             	mov    %rbx,%rdi
   2d788:	31 f6                	xor    %esi,%esi
   2d78a:	e8 01 e6 ff ff       	callq  2bd90 <rustc_demangle::v0::Printer::print_path>
   2d78f:	00 c0                	add    %al,%al
   2d791:	e9 2a 01 00 00       	jmpq   2d8c0 <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x200>
   2d796:	49 8d 72 01          	lea    0x1(%r10),%rsi
   2d79a:	48 f7 dd             	neg    %rbp
   2d79d:	45 31 c9             	xor    %r9d,%r9d
   2d7a0:	41 bb 3e 00 00 00    	mov    $0x3e,%r11d
   2d7a6:	31 c0                	xor    %eax,%eax
   2d7a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2d7af:	00 
   2d7b0:	48 8d 14 2e          	lea    (%rsi,%rbp,1),%rdx
   2d7b4:	48 83 fa 01          	cmp    $0x1,%rdx
   2d7b8:	74 4a                	je     2d804 <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x144>
   2d7ba:	41 0f b6 54 36 ff    	movzbl -0x1(%r14,%rsi,1),%edx
   2d7c0:	80 fa 5f             	cmp    $0x5f,%dl
   2d7c3:	0f 84 ac 00 00 00    	je     2d875 <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x1b5>
   2d7c9:	8d 7a d0             	lea    -0x30(%rdx),%edi
   2d7cc:	40 80 ff 0a          	cmp    $0xa,%dil
   2d7d0:	72 1c                	jb     2d7ee <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x12e>
   2d7d2:	8d 7a 9f             	lea    -0x61(%rdx),%edi
   2d7d5:	40 80 ff 1a          	cmp    $0x1a,%dil
   2d7d9:	73 05                	jae    2d7e0 <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x120>
   2d7db:	80 c2 a9             	add    $0xa9,%dl
   2d7de:	eb 0c                	jmp    2d7ec <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x12c>
   2d7e0:	8d 7a bf             	lea    -0x41(%rdx),%edi
   2d7e3:	40 80 ff 1a          	cmp    $0x1a,%dil
   2d7e7:	73 1b                	jae    2d804 <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x144>
   2d7e9:	80 c2 e3             	add    $0xe3,%dl
   2d7ec:	89 d7                	mov    %edx,%edi
   2d7ee:	48 89 71 10          	mov    %rsi,0x10(%rcx)
   2d7f2:	49 f7 e3             	mul    %r11
   2d7f5:	70 0d                	jo     2d804 <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x144>
   2d7f7:	40 0f b6 d7          	movzbl %dil,%edx
   2d7fb:	48 83 c6 01          	add    $0x1,%rsi
   2d7ff:	48 01 d0             	add    %rdx,%rax
   2d802:	73 ac                	jae    2d7b0 <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0xf0>
   2d804:	e9 88 00 00 00       	jmpq   2d891 <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x1d1>
   2d809:	41 b7 01             	mov    $0x1,%r15b
   2d80c:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   2d810:	0f 84 a7 00 00 00    	je     2d8bd <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x1fd>
   2d816:	31 ed                	xor    %ebp,%ebp
   2d818:	4c 8d 35 44 c1 00 00 	lea    0xc144(%rip),%r14        # 39963 <str.6+0x2643>
   2d81f:	4c 8d 25 ea 39 00 00 	lea    0x39ea(%rip),%r12        # 31210 <core::fmt::Formatter::write_str>
   2d826:	48 8b 43 10          	mov    0x10(%rbx),%rax
   2d82a:	48 39 43 08          	cmp    %rax,0x8(%rbx)
   2d82e:	76 0d                	jbe    2d83d <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x17d>
   2d830:	48 8b 0b             	mov    (%rbx),%rcx
   2d833:	80 3c 01 45          	cmpb   $0x45,(%rcx,%rax,1)
   2d837:	0f 84 90 00 00 00    	je     2d8cd <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x20d>
   2d83d:	48 85 ed             	test   %rbp,%rbp
   2d840:	74 17                	je     2d859 <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x199>
   2d842:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d846:	ba 02 00 00 00       	mov    $0x2,%edx
   2d84b:	4c 89 f6             	mov    %r14,%rsi
   2d84e:	41 ff d4             	callq  *%r12
   2d851:	84 c0                	test   %al,%al
   2d853:	0f 85 24 ff ff ff    	jne    2d77d <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0xbd>
   2d859:	48 89 df             	mov    %rbx,%rdi
   2d85c:	e8 af ed ff ff       	callq  2c610 <rustc_demangle::v0::Printer::print_generic_arg>
   2d861:	84 c0                	test   %al,%al
   2d863:	0f 85 14 ff ff ff    	jne    2d77d <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0xbd>
   2d869:	48 83 c5 ff          	add    $0xffffffffffffffff,%rbp
   2d86d:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   2d871:	75 b3                	jne    2d826 <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x166>
   2d873:	eb 48                	jmp    2d8bd <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x1fd>
   2d875:	48 89 71 10          	mov    %rsi,0x10(%rcx)
   2d879:	48 ff c0             	inc    %rax
   2d87c:	75 05                	jne    2d883 <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x1c3>
   2d87e:	45 31 c9             	xor    %r9d,%r9d
   2d881:	eb 0e                	jmp    2d891 <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x1d1>
   2d883:	49 83 c2 ff          	add    $0xffffffffffffffff,%r10
   2d887:	45 31 c9             	xor    %r9d,%r9d
   2d88a:	4c 39 d0             	cmp    %r10,%rax
   2d88d:	4d 0f 42 ce          	cmovb  %r14,%r9
   2d891:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
   2d895:	8b 53 20             	mov    0x20(%rbx),%edx
   2d898:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   2d89d:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
   2d8a2:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2d8a7:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   2d8ac:	89 54 24 28          	mov    %edx,0x28(%rsp)
   2d8b0:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   2d8b5:	e8 06 fe ff ff       	callq  2d6c0 <rustc_demangle::v0::Printer::print_path_maybe_open_generics>
   2d8ba:	41 89 c7             	mov    %eax,%r15d
   2d8bd:	44 89 f8             	mov    %r15d,%eax
   2d8c0:	48 83 c4 30          	add    $0x30,%rsp
   2d8c4:	5b                   	pop    %rbx
   2d8c5:	41 5c                	pop    %r12
   2d8c7:	41 5e                	pop    %r14
   2d8c9:	41 5f                	pop    %r15
   2d8cb:	5d                   	pop    %rbp
   2d8cc:	c3                   	retq   
   2d8cd:	48 83 c0 01          	add    $0x1,%rax
   2d8d1:	48 89 43 10          	mov    %rax,0x10(%rbx)
   2d8d5:	eb e6                	jmp    2d8bd <rustc_demangle::v0::Printer::print_path_maybe_open_generics+0x1fd>
   2d8d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2d8de:	00 00 

000000000002d8e0 <rustc_demangle::v0::Printer::print_dyn_trait>:
   2d8e0:	55                   	push   %rbp
   2d8e1:	41 57                	push   %r15
   2d8e3:	41 56                	push   %r14
   2d8e5:	41 55                	push   %r13
   2d8e7:	41 54                	push   %r12
   2d8e9:	53                   	push   %rbx
   2d8ea:	48 83 ec 48          	sub    $0x48,%rsp
   2d8ee:	48 89 fb             	mov    %rdi,%rbx
   2d8f1:	e8 ca fd ff ff       	callq  2d6c0 <rustc_demangle::v0::Printer::print_path_maybe_open_generics>
   2d8f6:	40 b5 01             	mov    $0x1,%bpl
   2d8f9:	3c 02                	cmp    $0x2,%al
   2d8fb:	0f 84 35 01 00 00    	je     2da36 <rustc_demangle::v0::Printer::print_dyn_trait+0x156>
   2d901:	41 89 c6             	mov    %eax,%r14d
   2d904:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   2d908:	0f 84 db 00 00 00    	je     2d9e9 <rustc_demangle::v0::Printer::print_dyn_trait+0x109>
   2d90e:	4c 8d 2d fb 38 00 00 	lea    0x38fb(%rip),%r13        # 31210 <core::fmt::Formatter::write_str>
   2d915:	49 89 e4             	mov    %rsp,%r12
   2d918:	41 b7 01             	mov    $0x1,%r15b
   2d91b:	48 8b 43 10          	mov    0x10(%rbx),%rax
   2d91f:	48 39 43 08          	cmp    %rax,0x8(%rbx)
   2d923:	0f 86 c0 00 00 00    	jbe    2d9e9 <rustc_demangle::v0::Printer::print_dyn_trait+0x109>
   2d929:	48 8b 0b             	mov    (%rbx),%rcx
   2d92c:	80 3c 01 70          	cmpb   $0x70,(%rcx,%rax,1)
   2d930:	0f 85 b3 00 00 00    	jne    2d9e9 <rustc_demangle::v0::Printer::print_dyn_trait+0x109>
   2d936:	48 83 c0 01          	add    $0x1,%rax
   2d93a:	48 89 43 10          	mov    %rax,0x10(%rbx)
   2d93e:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d942:	41 f6 c6 01          	test   $0x1,%r14b
   2d946:	74 18                	je     2d960 <rustc_demangle::v0::Printer::print_dyn_trait+0x80>
   2d948:	ba 02 00 00 00       	mov    $0x2,%edx
   2d94d:	48 8d 35 0f c0 00 00 	lea    0xc00f(%rip),%rsi        # 39963 <str.6+0x2643>
   2d954:	41 ff d5             	callq  *%r13
   2d957:	84 c0                	test   %al,%al
   2d959:	74 1f                	je     2d97a <rustc_demangle::v0::Printer::print_dyn_trait+0x9a>
   2d95b:	e9 d6 00 00 00       	jmpq   2da36 <rustc_demangle::v0::Printer::print_dyn_trait+0x156>
   2d960:	ba 01 00 00 00       	mov    $0x1,%edx
   2d965:	48 8d 35 5b bf 00 00 	lea    0xbf5b(%rip),%rsi        # 398c7 <str.6+0x25a7>
   2d96c:	41 ff d5             	callq  *%r13
   2d96f:	41 b6 01             	mov    $0x1,%r14b
   2d972:	84 c0                	test   %al,%al
   2d974:	0f 85 cd 00 00 00    	jne    2da47 <rustc_demangle::v0::Printer::print_dyn_trait+0x167>
   2d97a:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   2d97e:	0f 84 87 00 00 00    	je     2da0b <rustc_demangle::v0::Printer::print_dyn_trait+0x12b>
   2d984:	4c 89 e7             	mov    %r12,%rdi
   2d987:	48 89 de             	mov    %rbx,%rsi
   2d98a:	e8 21 d4 ff ff       	callq  2adb0 <rustc_demangle::v0::Parser::ident>
   2d98f:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
   2d994:	74 7d                	je     2da13 <rustc_demangle::v0::Printer::print_dyn_trait+0x133>
   2d996:	0f 10 04 24          	movups (%rsp),%xmm0
   2d99a:	0f 10 4c 24 10       	movups 0x10(%rsp),%xmm1
   2d99f:	0f 29 4c 24 30       	movaps %xmm1,0x30(%rsp)
   2d9a4:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   2d9a9:	48 8b 73 18          	mov    0x18(%rbx),%rsi
   2d9ad:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   2d9b2:	ff 15 a0 81 01 00    	callq  *0x181a0(%rip)        # 45b58 <_GLOBAL_OFFSET_TABLE_+0x1c8>
   2d9b8:	84 c0                	test   %al,%al
   2d9ba:	75 77                	jne    2da33 <rustc_demangle::v0::Printer::print_dyn_trait+0x153>
   2d9bc:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d9c0:	ba 03 00 00 00       	mov    $0x3,%edx
   2d9c5:	48 8d 35 c9 bf 00 00 	lea    0xbfc9(%rip),%rsi        # 39995 <str.6+0x2675>
   2d9cc:	41 ff d5             	callq  *%r13
   2d9cf:	84 c0                	test   %al,%al
   2d9d1:	75 60                	jne    2da33 <rustc_demangle::v0::Printer::print_dyn_trait+0x153>
   2d9d3:	48 89 df             	mov    %rbx,%rdi
   2d9d6:	e8 55 ed ff ff       	callq  2c730 <rustc_demangle::v0::Printer::print_type>
   2d9db:	84 c0                	test   %al,%al
   2d9dd:	75 54                	jne    2da33 <rustc_demangle::v0::Printer::print_dyn_trait+0x153>
   2d9df:	48 83 3b 00          	cmpq   $0x0,(%rbx)
   2d9e3:	0f 85 32 ff ff ff    	jne    2d91b <rustc_demangle::v0::Printer::print_dyn_trait+0x3b>
   2d9e9:	41 f6 c6 01          	test   $0x1,%r14b
   2d9ed:	75 04                	jne    2d9f3 <rustc_demangle::v0::Printer::print_dyn_trait+0x113>
   2d9ef:	31 ed                	xor    %ebp,%ebp
   2d9f1:	eb 43                	jmp    2da36 <rustc_demangle::v0::Printer::print_dyn_trait+0x156>
   2d9f3:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2d9f7:	48 8d 35 cc be 00 00 	lea    0xbecc(%rip),%rsi        # 398ca <str.6+0x25aa>
   2d9fe:	ba 01 00 00 00       	mov    $0x1,%edx
   2da03:	ff 15 3f 80 01 00    	callq  *0x1803f(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2da09:	eb 2d                	jmp    2da38 <rustc_demangle::v0::Printer::print_dyn_trait+0x158>
   2da0b:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   2da12:	00 
   2da13:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   2da1a:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   2da1e:	48 8d 35 3d bf 00 00 	lea    0xbf3d(%rip),%rsi        # 39962 <str.6+0x2642>
   2da25:	ba 01 00 00 00       	mov    $0x1,%edx
   2da2a:	ff 15 18 80 01 00    	callq  *0x18018(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2da30:	41 89 c7             	mov    %eax,%r15d
   2da33:	44 89 fd             	mov    %r15d,%ebp
   2da36:	89 e8                	mov    %ebp,%eax
   2da38:	48 83 c4 48          	add    $0x48,%rsp
   2da3c:	5b                   	pop    %rbx
   2da3d:	41 5c                	pop    %r12
   2da3f:	41 5d                	pop    %r13
   2da41:	41 5e                	pop    %r14
   2da43:	41 5f                	pop    %r15
   2da45:	5d                   	pop    %rbp
   2da46:	c3                   	retq   
   2da47:	40 b5 01             	mov    $0x1,%bpl
   2da4a:	eb ea                	jmp    2da36 <rustc_demangle::v0::Printer::print_dyn_trait+0x156>
   2da4c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000002da50 <rustc_demangle::v0::Printer::print_const>:
   2da50:	55                   	push   %rbp
   2da51:	41 57                	push   %r15
   2da53:	41 56                	push   %r14
   2da55:	41 55                	push   %r13
   2da57:	41 54                	push   %r12
   2da59:	53                   	push   %rbx
   2da5a:	48 83 ec 28          	sub    $0x28,%rsp
   2da5e:	49 89 ff             	mov    %rdi,%r15
   2da61:	4c 8b 27             	mov    (%rdi),%r12
   2da64:	48 89 f8             	mov    %rdi,%rax
   2da67:	4d 85 e4             	test   %r12,%r12
   2da6a:	49 0f 44 c4          	cmove  %r12,%rax
   2da6e:	0f 84 bc 00 00 00    	je     2db30 <rustc_demangle::v0::Printer::print_const+0xe0>
   2da74:	48 8b 48 10          	mov    0x10(%rax),%rcx
   2da78:	48 39 48 08          	cmp    %rcx,0x8(%rax)
   2da7c:	76 55                	jbe    2dad3 <rustc_demangle::v0::Printer::print_const+0x83>
   2da7e:	48 8b 10             	mov    (%rax),%rdx
   2da81:	80 3c 0a 42          	cmpb   $0x42,(%rdx,%rcx,1)
   2da85:	75 4c                	jne    2dad3 <rustc_demangle::v0::Printer::print_const+0x83>
   2da87:	48 83 c1 01          	add    $0x1,%rcx
   2da8b:	48 89 48 10          	mov    %rcx,0x10(%rax)
   2da8f:	49 8b 0f             	mov    (%r15),%rcx
   2da92:	48 85 c9             	test   %rcx,%rcx
   2da95:	49 0f 45 cf          	cmovne %r15,%rcx
   2da99:	0f 84 1e 03 00 00    	je     2ddbd <rustc_demangle::v0::Printer::print_const+0x36d>
   2da9f:	4c 8b 51 10          	mov    0x10(%rcx),%r10
   2daa3:	4c 8b 31             	mov    (%rcx),%r14
   2daa6:	4c 8b 41 08          	mov    0x8(%rcx),%r8
   2daaa:	4c 89 d5             	mov    %r10,%rbp
   2daad:	4d 39 d0             	cmp    %r10,%r8
   2dab0:	0f 86 a5 00 00 00    	jbe    2db5b <rustc_demangle::v0::Printer::print_const+0x10b>
   2dab6:	43 80 3c 16 5f       	cmpb   $0x5f,(%r14,%r10,1)
   2dabb:	4c 89 c5             	mov    %r8,%rbp
   2dabe:	0f 85 97 00 00 00    	jne    2db5b <rustc_demangle::v0::Printer::print_const+0x10b>
   2dac4:	49 8d 42 01          	lea    0x1(%r10),%rax
   2dac8:	48 89 41 10          	mov    %rax,0x10(%rcx)
   2dacc:	31 c0                	xor    %eax,%eax
   2dace:	e9 ef 02 00 00       	jmpq   2ddc2 <rustc_demangle::v0::Printer::print_const+0x372>
   2dad3:	49 8b 77 08          	mov    0x8(%r15),%rsi
   2dad7:	49 8b 6f 10          	mov    0x10(%r15),%rbp
   2dadb:	48 39 ee             	cmp    %rbp,%rsi
   2dade:	76 50                	jbe    2db30 <rustc_demangle::v0::Printer::print_const+0xe0>
   2dae0:	41 8a 04 2c          	mov    (%r12,%rbp,1),%al
   2dae4:	48 8d 55 01          	lea    0x1(%rbp),%rdx
   2dae8:	49 89 57 10          	mov    %rdx,0x10(%r15)
   2daec:	04 98                	add    $0x98,%al
   2daee:	3c 11                	cmp    $0x11,%al
   2daf0:	77 3e                	ja     2db30 <rustc_demangle::v0::Printer::print_const+0xe0>
   2daf2:	4c 8d 2d 53 be 00 00 	lea    0xbe53(%rip),%r13        # 3994c <str.6+0x262c>
   2daf9:	41 be 02 00 00 00    	mov    $0x2,%r14d
   2daff:	0f b6 c0             	movzbl %al,%eax
   2db02:	48 8d 0d 3b bc 00 00 	lea    0xbc3b(%rip),%rcx        # 39744 <str.6+0x2424>
   2db09:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   2db0d:	48 01 c8             	add    %rcx,%rax
   2db10:	ff e0                	jmpq   *%rax
   2db12:	4c 8d 2d 25 be 00 00 	lea    0xbe25(%rip),%r13        # 3993e <str.6+0x261e>
   2db19:	41 be 05 00 00 00    	mov    $0x5,%r14d
   2db1f:	48 89 d0             	mov    %rdx,%rax
   2db22:	48 39 d6             	cmp    %rdx,%rsi
   2db25:	0f 87 e1 00 00 00    	ja     2dc0c <rustc_demangle::v0::Printer::print_const+0x1bc>
   2db2b:	e9 13 01 00 00       	jmpq   2dc43 <rustc_demangle::v0::Printer::print_const+0x1f3>
   2db30:	49 c7 07 00 00 00 00 	movq   $0x0,(%r15)
   2db37:	49 8b 7f 18          	mov    0x18(%r15),%rdi
   2db3b:	48 8d 35 20 be 00 00 	lea    0xbe20(%rip),%rsi        # 39962 <str.6+0x2642>
   2db42:	ba 01 00 00 00       	mov    $0x1,%edx
   2db47:	48 83 c4 28          	add    $0x28,%rsp
   2db4b:	5b                   	pop    %rbx
   2db4c:	41 5c                	pop    %r12
   2db4e:	41 5d                	pop    %r13
   2db50:	41 5e                	pop    %r14
   2db52:	41 5f                	pop    %r15
   2db54:	5d                   	pop    %rbp
   2db55:	ff 25 ed 7e 01 00    	jmpq   *0x17eed(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2db5b:	49 8d 72 01          	lea    0x1(%r10),%rsi
   2db5f:	48 f7 dd             	neg    %rbp
   2db62:	45 31 c9             	xor    %r9d,%r9d
   2db65:	41 bb 3e 00 00 00    	mov    $0x3e,%r11d
   2db6b:	31 c0                	xor    %eax,%eax
   2db6d:	0f 1f 00             	nopl   (%rax)
   2db70:	48 8d 14 2e          	lea    (%rsi,%rbp,1),%rdx
   2db74:	48 83 fa 01          	cmp    $0x1,%rdx
   2db78:	74 4a                	je     2dbc4 <rustc_demangle::v0::Printer::print_const+0x174>
   2db7a:	41 0f b6 54 36 ff    	movzbl -0x1(%r14,%rsi,1),%edx
   2db80:	80 fa 5f             	cmp    $0x5f,%dl
   2db83:	0f 84 2b 02 00 00    	je     2ddb4 <rustc_demangle::v0::Printer::print_const+0x364>
   2db89:	8d 7a d0             	lea    -0x30(%rdx),%edi
   2db8c:	40 80 ff 0a          	cmp    $0xa,%dil
   2db90:	72 1c                	jb     2dbae <rustc_demangle::v0::Printer::print_const+0x15e>
   2db92:	8d 7a 9f             	lea    -0x61(%rdx),%edi
   2db95:	40 80 ff 1a          	cmp    $0x1a,%dil
   2db99:	73 05                	jae    2dba0 <rustc_demangle::v0::Printer::print_const+0x150>
   2db9b:	80 c2 a9             	add    $0xa9,%dl
   2db9e:	eb 0c                	jmp    2dbac <rustc_demangle::v0::Printer::print_const+0x15c>
   2dba0:	8d 7a bf             	lea    -0x41(%rdx),%edi
   2dba3:	40 80 ff 1a          	cmp    $0x1a,%dil
   2dba7:	73 1b                	jae    2dbc4 <rustc_demangle::v0::Printer::print_const+0x174>
   2dba9:	80 c2 e3             	add    $0xe3,%dl
   2dbac:	89 d7                	mov    %edx,%edi
   2dbae:	48 89 71 10          	mov    %rsi,0x10(%rcx)
   2dbb2:	49 f7 e3             	mul    %r11
   2dbb5:	70 0d                	jo     2dbc4 <rustc_demangle::v0::Printer::print_const+0x174>
   2dbb7:	40 0f b6 d7          	movzbl %dil,%edx
   2dbbb:	48 83 c6 01          	add    $0x1,%rsi
   2dbbf:	48 01 d0             	add    %rdx,%rax
   2dbc2:	73 ac                	jae    2db70 <rustc_demangle::v0::Printer::print_const+0x120>
   2dbc4:	e9 07 02 00 00       	jmpq   2ddd0 <rustc_demangle::v0::Printer::print_const+0x380>
   2dbc9:	4c 8d 2d 76 bd 00 00 	lea    0xbd76(%rip),%r13        # 39946 <str.6+0x2626>
   2dbd0:	41 be 03 00 00 00    	mov    $0x3,%r14d
   2dbd6:	48 89 d0             	mov    %rdx,%rax
   2dbd9:	48 39 d6             	cmp    %rdx,%rsi
   2dbdc:	77 2e                	ja     2dc0c <rustc_demangle::v0::Printer::print_const+0x1bc>
   2dbde:	eb 63                	jmp    2dc43 <rustc_demangle::v0::Printer::print_const+0x1f3>
   2dbe0:	4c 8d 2d 5c bd 00 00 	lea    0xbd5c(%rip),%r13        # 39943 <str.6+0x2623>
   2dbe7:	41 be 03 00 00 00    	mov    $0x3,%r14d
   2dbed:	48 89 d0             	mov    %rdx,%rax
   2dbf0:	48 39 d6             	cmp    %rdx,%rsi
   2dbf3:	77 17                	ja     2dc0c <rustc_demangle::v0::Printer::print_const+0x1bc>
   2dbf5:	eb 4c                	jmp    2dc43 <rustc_demangle::v0::Printer::print_const+0x1f3>
   2dbf7:	4c 8d 2d 91 bc 00 00 	lea    0xbc91(%rip),%r13        # 3988f <str.6+0x256f>
   2dbfe:	41 be 04 00 00 00    	mov    $0x4,%r14d
   2dc04:	48 89 d0             	mov    %rdx,%rax
   2dc07:	48 39 d6             	cmp    %rdx,%rsi
   2dc0a:	76 37                	jbe    2dc43 <rustc_demangle::v0::Printer::print_const+0x1f3>
   2dc0c:	41 80 3c 14 70       	cmpb   $0x70,(%r12,%rdx,1)
   2dc11:	48 89 f0             	mov    %rsi,%rax
   2dc14:	75 2d                	jne    2dc43 <rustc_demangle::v0::Printer::print_const+0x1f3>
   2dc16:	48 83 c5 02          	add    $0x2,%rbp
   2dc1a:	49 89 6f 10          	mov    %rbp,0x10(%r15)
   2dc1e:	49 8b 7f 18          	mov    0x18(%r15),%rdi
   2dc22:	48 8d 35 0d bd 00 00 	lea    0xbd0d(%rip),%rsi        # 39936 <str.6+0x2616>
   2dc29:	e9 05 01 00 00       	jmpq   2dd33 <rustc_demangle::v0::Printer::print_const+0x2e3>
   2dc2e:	4c 8d 2d 14 bd 00 00 	lea    0xbd14(%rip),%r13        # 39949 <str.6+0x2629>
   2dc35:	41 be 03 00 00 00    	mov    $0x3,%r14d
   2dc3b:	48 89 d0             	mov    %rdx,%rax
   2dc3e:	48 39 d6             	cmp    %rdx,%rsi
   2dc41:	77 c9                	ja     2dc0c <rustc_demangle::v0::Printer::print_const+0x1bc>
   2dc43:	4d 8d 0c 2c          	lea    (%r12,%rbp,1),%r9
   2dc47:	48 89 e9             	mov    %rbp,%rcx
   2dc4a:	48 29 c1             	sub    %rax,%rcx
   2dc4d:	48 83 c1 01          	add    $0x1,%rcx
   2dc51:	31 ff                	xor    %edi,%edi
   2dc53:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2dc5a:	00 00 00 
   2dc5d:	0f 1f 00             	nopl   (%rax)
   2dc60:	48 89 c8             	mov    %rcx,%rax
   2dc63:	48 01 f8             	add    %rdi,%rax
   2dc66:	0f 84 b5 00 00 00    	je     2dd21 <rustc_demangle::v0::Printer::print_const+0x2d1>
   2dc6c:	41 0f b6 44 39 01    	movzbl 0x1(%r9,%rdi,1),%eax
   2dc72:	48 8d 1c 2f          	lea    (%rdi,%rbp,1),%rbx
   2dc76:	48 83 c3 02          	add    $0x2,%rbx
   2dc7a:	49 89 5f 10          	mov    %rbx,0x10(%r15)
   2dc7e:	8d 58 d0             	lea    -0x30(%rax),%ebx
   2dc81:	48 83 c7 01          	add    $0x1,%rdi
   2dc85:	80 fb 0a             	cmp    $0xa,%bl
   2dc88:	72 d6                	jb     2dc60 <rustc_demangle::v0::Printer::print_const+0x210>
   2dc8a:	8d 58 9f             	lea    -0x61(%rax),%ebx
   2dc8d:	80 fb 06             	cmp    $0x6,%bl
   2dc90:	72 ce                	jb     2dc60 <rustc_demangle::v0::Printer::print_const+0x210>
   2dc92:	3c 5f                	cmp    $0x5f,%al
   2dc94:	0f 85 87 00 00 00    	jne    2dd21 <rustc_demangle::v0::Printer::print_const+0x2d1>
   2dc9a:	48 8d 0c 2f          	lea    (%rdi,%rbp,1),%rcx
   2dc9e:	48 39 e9             	cmp    %rbp,%rcx
   2dca1:	0f 86 a2 02 00 00    	jbe    2df49 <rustc_demangle::v0::Printer::print_const+0x4f9>
   2dca7:	4c 89 eb             	mov    %r13,%rbx
   2dcaa:	48 39 d6             	cmp    %rdx,%rsi
   2dcad:	74 11                	je     2dcc0 <rustc_demangle::v0::Printer::print_const+0x270>
   2dcaf:	0f 86 94 02 00 00    	jbe    2df49 <rustc_demangle::v0::Printer::print_const+0x4f9>
   2dcb5:	41 80 3c 14 bf       	cmpb   $0xbf,(%r12,%rdx,1)
   2dcba:	0f 8e 89 02 00 00    	jle    2df49 <rustc_demangle::v0::Printer::print_const+0x4f9>
   2dcc0:	48 29 f5             	sub    %rsi,%rbp
   2dcc3:	48 01 fd             	add    %rdi,%rbp
   2dcc6:	74 0b                	je     2dcd3 <rustc_demangle::v0::Printer::print_const+0x283>
   2dcc8:	41 80 3c 39 bf       	cmpb   $0xbf,(%r9,%rdi,1)
   2dccd:	0f 8e 76 02 00 00    	jle    2df49 <rustc_demangle::v0::Printer::print_const+0x4f9>
   2dcd3:	4c 8d 6f ff          	lea    -0x1(%rdi),%r13
   2dcd7:	49 01 d4             	add    %rdx,%r12
   2dcda:	49 83 fd 10          	cmp    $0x10,%r13
   2dcde:	0f 86 a7 00 00 00    	jbe    2dd8b <rustc_demangle::v0::Printer::print_const+0x33b>
   2dce4:	49 8b 7f 18          	mov    0x18(%r15),%rdi
   2dce8:	48 8d 35 ab bc 00 00 	lea    0xbcab(%rip),%rsi        # 3999a <str.6+0x267a>
   2dcef:	ba 02 00 00 00       	mov    $0x2,%edx
   2dcf4:	ff 15 4e 7d 01 00    	callq  *0x17d4e(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2dcfa:	40 b5 01             	mov    $0x1,%bpl
   2dcfd:	84 c0                	test   %al,%al
   2dcff:	0f 85 ab 00 00 00    	jne    2ddb0 <rustc_demangle::v0::Printer::print_const+0x360>
   2dd05:	49 8b 7f 18          	mov    0x18(%r15),%rdi
   2dd09:	4c 89 e6             	mov    %r12,%rsi
   2dd0c:	4c 89 ea             	mov    %r13,%rdx
   2dd0f:	ff 15 33 7d 01 00    	callq  *0x17d33(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2dd15:	84 c0                	test   %al,%al
   2dd17:	49 89 dd             	mov    %rbx,%r13
   2dd1a:	74 29                	je     2dd45 <rustc_demangle::v0::Printer::print_const+0x2f5>
   2dd1c:	e9 8f 00 00 00       	jmpq   2ddb0 <rustc_demangle::v0::Printer::print_const+0x360>
   2dd21:	49 c7 07 00 00 00 00 	movq   $0x0,(%r15)
   2dd28:	49 8b 7f 18          	mov    0x18(%r15),%rdi
   2dd2c:	48 8d 35 2f bc 00 00 	lea    0xbc2f(%rip),%rsi        # 39962 <str.6+0x2642>
   2dd33:	ba 01 00 00 00       	mov    $0x1,%edx
   2dd38:	ff 15 0a 7d 01 00    	callq  *0x17d0a(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2dd3e:	40 b5 01             	mov    $0x1,%bpl
   2dd41:	84 c0                	test   %al,%al
   2dd43:	75 6b                	jne    2ddb0 <rustc_demangle::v0::Printer::print_const+0x360>
   2dd45:	49 8b 7f 18          	mov    0x18(%r15),%rdi
   2dd49:	ff 15 01 7d 01 00    	callq  *0x17d01(%rip)        # 45a50 <_GLOBAL_OFFSET_TABLE_+0xc0>
   2dd4f:	84 c0                	test   %al,%al
   2dd51:	74 09                	je     2dd5c <rustc_demangle::v0::Printer::print_const+0x30c>
   2dd53:	31 ed                	xor    %ebp,%ebp
   2dd55:	89 e8                	mov    %ebp,%eax
   2dd57:	e9 9d 00 00 00       	jmpq   2ddf9 <rustc_demangle::v0::Printer::print_const+0x3a9>
   2dd5c:	49 8b 7f 18          	mov    0x18(%r15),%rdi
   2dd60:	48 8d 35 31 bc 00 00 	lea    0xbc31(%rip),%rsi        # 39998 <str.6+0x2678>
   2dd67:	ba 02 00 00 00       	mov    $0x2,%edx
   2dd6c:	ff 15 d6 7c 01 00    	callq  *0x17cd6(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2dd72:	40 b5 01             	mov    $0x1,%bpl
   2dd75:	84 c0                	test   %al,%al
   2dd77:	75 37                	jne    2ddb0 <rustc_demangle::v0::Printer::print_const+0x360>
   2dd79:	49 8b 7f 18          	mov    0x18(%r15),%rdi
   2dd7d:	4c 89 ee             	mov    %r13,%rsi
   2dd80:	4c 89 f2             	mov    %r14,%rdx
   2dd83:	ff 15 bf 7c 01 00    	callq  *0x17cbf(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2dd89:	eb 6e                	jmp    2ddf9 <rustc_demangle::v0::Printer::print_const+0x3a9>
   2dd8b:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   2dd92:	00 
   2dd93:	48 83 ff 01          	cmp    $0x1,%rdi
   2dd97:	49 89 dd             	mov    %rbx,%r13
   2dd9a:	75 6c                	jne    2de08 <rustc_demangle::v0::Printer::print_const+0x3b8>
   2dd9c:	49 8b 77 18          	mov    0x18(%r15),%rsi
   2dda0:	48 89 e7             	mov    %rsp,%rdi
   2dda3:	ff 15 f7 7d 01 00    	callq  *0x17df7(%rip)        # 45ba0 <_GLOBAL_OFFSET_TABLE_+0x210>
   2dda9:	40 b5 01             	mov    $0x1,%bpl
   2ddac:	84 c0                	test   %al,%al
   2ddae:	74 95                	je     2dd45 <rustc_demangle::v0::Printer::print_const+0x2f5>
   2ddb0:	89 e8                	mov    %ebp,%eax
   2ddb2:	eb 45                	jmp    2ddf9 <rustc_demangle::v0::Printer::print_const+0x3a9>
   2ddb4:	48 89 71 10          	mov    %rsi,0x10(%rcx)
   2ddb8:	48 ff c0             	inc    %rax
   2ddbb:	75 05                	jne    2ddc2 <rustc_demangle::v0::Printer::print_const+0x372>
   2ddbd:	45 31 c9             	xor    %r9d,%r9d
   2ddc0:	eb 0e                	jmp    2ddd0 <rustc_demangle::v0::Printer::print_const+0x380>
   2ddc2:	49 83 c2 ff          	add    $0xffffffffffffffff,%r10
   2ddc6:	45 31 c9             	xor    %r9d,%r9d
   2ddc9:	4c 39 d0             	cmp    %r10,%rax
   2ddcc:	4d 0f 42 ce          	cmovb  %r14,%r9
   2ddd0:	49 8b 4f 18          	mov    0x18(%r15),%rcx
   2ddd4:	41 8b 57 20          	mov    0x20(%r15),%edx
   2ddd8:	4c 89 0c 24          	mov    %r9,(%rsp)
   2dddc:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   2dde1:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   2dde6:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   2ddeb:	89 54 24 20          	mov    %edx,0x20(%rsp)
   2ddef:	48 89 e7             	mov    %rsp,%rdi
   2ddf2:	e8 59 fc ff ff       	callq  2da50 <rustc_demangle::v0::Printer::print_const>
   2ddf7:	89 c5                	mov    %eax,%ebp
   2ddf9:	48 83 c4 28          	add    $0x28,%rsp
   2ddfd:	5b                   	pop    %rbx
   2ddfe:	41 5c                	pop    %r12
   2de00:	41 5d                	pop    %r13
   2de02:	41 5e                	pop    %r14
   2de04:	41 5f                	pop    %r15
   2de06:	5d                   	pop    %rbp
   2de07:	c3                   	retq   
   2de08:	4d 8d 04 39          	lea    (%r9,%rdi,1),%r8
   2de0c:	49 f7 d9             	neg    %r9
   2de0f:	31 d2                	xor    %edx,%edx
   2de11:	eb 27                	jmp    2de3a <rustc_demangle::v0::Printer::print_const+0x3ea>
   2de13:	01 c6                	add    %eax,%esi
   2de15:	89 f0                	mov    %esi,%eax
   2de17:	83 fe 10             	cmp    $0x10,%esi
   2de1a:	0f 83 0e 01 00 00    	jae    2df2e <rustc_demangle::v0::Printer::print_const+0x4de>
   2de20:	4b 8d 0c 0c          	lea    (%r12,%r9,1),%rcx
   2de24:	48 c1 e2 04          	shl    $0x4,%rdx
   2de28:	89 c0                	mov    %eax,%eax
   2de2a:	48 09 c2             	or     %rax,%rdx
   2de2d:	48 89 14 24          	mov    %rdx,(%rsp)
   2de31:	48 39 f9             	cmp    %rdi,%rcx
   2de34:	0f 84 62 ff ff ff    	je     2dd9c <rustc_demangle::v0::Printer::print_const+0x34c>
   2de3a:	41 0f b6 2c 24       	movzbl (%r12),%ebp
   2de3f:	40 84 ed             	test   %bpl,%bpl
   2de42:	78 0b                	js     2de4f <rustc_demangle::v0::Printer::print_const+0x3ff>
   2de44:	49 83 c4 01          	add    $0x1,%r12
   2de48:	89 ee                	mov    %ebp,%esi
   2de4a:	e9 b1 00 00 00       	jmpq   2df00 <rustc_demangle::v0::Printer::print_const+0x4b0>
   2de4f:	4b 8d 04 0c          	lea    (%r12,%r9,1),%rax
   2de53:	48 83 c0 01          	add    $0x1,%rax
   2de57:	48 39 f8             	cmp    %rdi,%rax
   2de5a:	74 4f                	je     2deab <rustc_demangle::v0::Printer::print_const+0x45b>
   2de5c:	41 0f b6 74 24 01    	movzbl 0x1(%r12),%esi
   2de62:	49 83 c4 02          	add    $0x2,%r12
   2de66:	83 e6 3f             	and    $0x3f,%esi
   2de69:	89 e9                	mov    %ebp,%ecx
   2de6b:	83 e1 1f             	and    $0x1f,%ecx
   2de6e:	40 80 fd df          	cmp    $0xdf,%bpl
   2de72:	76 47                	jbe    2debb <rustc_demangle::v0::Printer::print_const+0x46b>
   2de74:	4b 8d 04 0c          	lea    (%r12,%r9,1),%rax
   2de78:	48 39 f8             	cmp    %rdi,%rax
   2de7b:	74 45                	je     2dec2 <rustc_demangle::v0::Printer::print_const+0x472>
   2de7d:	41 0f b6 04 24       	movzbl (%r12),%eax
   2de82:	49 83 c4 01          	add    $0x1,%r12
   2de86:	83 e0 3f             	and    $0x3f,%eax
   2de89:	c1 e6 06             	shl    $0x6,%esi
   2de8c:	09 c6                	or     %eax,%esi
   2de8e:	40 80 fd f0          	cmp    $0xf0,%bpl
   2de92:	72 3e                	jb     2ded2 <rustc_demangle::v0::Printer::print_const+0x482>
   2de94:	4b 8d 04 0c          	lea    (%r12,%r9,1),%rax
   2de98:	48 39 f8             	cmp    %rdi,%rax
   2de9b:	74 3c                	je     2ded9 <rustc_demangle::v0::Printer::print_const+0x489>
   2de9d:	41 0f b6 04 24       	movzbl (%r12),%eax
   2dea2:	49 83 c4 01          	add    $0x1,%r12
   2dea6:	83 e0 3f             	and    $0x3f,%eax
   2dea9:	eb 30                	jmp    2dedb <rustc_demangle::v0::Printer::print_const+0x48b>
   2deab:	31 f6                	xor    %esi,%esi
   2dead:	4d 89 c4             	mov    %r8,%r12
   2deb0:	89 e9                	mov    %ebp,%ecx
   2deb2:	83 e1 1f             	and    $0x1f,%ecx
   2deb5:	40 80 fd df          	cmp    $0xdf,%bpl
   2deb9:	77 b9                	ja     2de74 <rustc_demangle::v0::Printer::print_const+0x424>
   2debb:	c1 e1 06             	shl    $0x6,%ecx
   2debe:	09 ce                	or     %ecx,%esi
   2dec0:	eb 3e                	jmp    2df00 <rustc_demangle::v0::Printer::print_const+0x4b0>
   2dec2:	31 c0                	xor    %eax,%eax
   2dec4:	4d 89 c4             	mov    %r8,%r12
   2dec7:	c1 e6 06             	shl    $0x6,%esi
   2deca:	09 c6                	or     %eax,%esi
   2decc:	40 80 fd f0          	cmp    $0xf0,%bpl
   2ded0:	73 c2                	jae    2de94 <rustc_demangle::v0::Printer::print_const+0x444>
   2ded2:	c1 e1 0c             	shl    $0xc,%ecx
   2ded5:	09 ce                	or     %ecx,%esi
   2ded7:	eb 27                	jmp    2df00 <rustc_demangle::v0::Printer::print_const+0x4b0>
   2ded9:	31 c0                	xor    %eax,%eax
   2dedb:	83 e1 07             	and    $0x7,%ecx
   2dede:	c1 e1 12             	shl    $0x12,%ecx
   2dee1:	c1 e6 06             	shl    $0x6,%esi
   2dee4:	09 ce                	or     %ecx,%esi
   2dee6:	09 c6                	or     %eax,%esi
   2dee8:	81 fe 00 00 11 00    	cmp    $0x110000,%esi
   2deee:	0f 84 a8 fe ff ff    	je     2dd9c <rustc_demangle::v0::Printer::print_const+0x34c>
   2def4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2defb:	00 00 00 
   2defe:	66 90                	xchg   %ax,%ax
   2df00:	8d 46 d0             	lea    -0x30(%rsi),%eax
   2df03:	83 f8 0a             	cmp    $0xa,%eax
   2df06:	0f 82 14 ff ff ff    	jb     2de20 <rustc_demangle::v0::Printer::print_const+0x3d0>
   2df0c:	8d 4e 9f             	lea    -0x61(%rsi),%ecx
   2df0f:	b8 a9 ff ff ff       	mov    $0xffffffa9,%eax
   2df14:	83 f9 1a             	cmp    $0x1a,%ecx
   2df17:	0f 82 f6 fe ff ff    	jb     2de13 <rustc_demangle::v0::Printer::print_const+0x3c3>
   2df1d:	8d 4e bf             	lea    -0x41(%rsi),%ecx
   2df20:	b8 c9 ff ff ff       	mov    $0xffffffc9,%eax
   2df25:	83 f9 19             	cmp    $0x19,%ecx
   2df28:	0f 86 e5 fe ff ff    	jbe    2de13 <rustc_demangle::v0::Printer::print_const+0x3c3>
   2df2e:	48 8d 3d a8 b8 00 00 	lea    0xb8a8(%rip),%rdi        # 397dd <str.6+0x24bd>
   2df35:	48 8d 15 a4 71 01 00 	lea    0x171a4(%rip),%rdx        # 450e0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1b88>
   2df3c:	be 2b 00 00 00       	mov    $0x2b,%esi
   2df41:	ff 15 99 7f 01 00    	callq  *0x17f99(%rip)        # 45ee0 <_GLOBAL_OFFSET_TABLE_+0x550>
   2df47:	0f 0b                	ud2    
   2df49:	4c 8d 05 18 71 01 00 	lea    0x17118(%rip),%r8        # 45068 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1b10>
   2df50:	4c 89 e7             	mov    %r12,%rdi
   2df53:	ff 15 df 7e 01 00    	callq  *0x17edf(%rip)        # 45e38 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   2df59:	0f 0b                	ud2    
   2df5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000002df60 <rustc_demangle::demangle>:
   2df60:	55                   	push   %rbp
   2df61:	41 57                	push   %r15
   2df63:	41 56                	push   %r14
   2df65:	41 55                	push   %r13
   2df67:	41 54                	push   %r12
   2df69:	53                   	push   %rbx
   2df6a:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
   2df71:	49 89 d4             	mov    %rdx,%r12
   2df74:	48 89 bc 24 90 00 00 	mov    %rdi,0x90(%rsp)
   2df7b:	00 
   2df7c:	48 8d 0d 19 ba 00 00 	lea    0xba19(%rip),%rcx        # 3999c <str.6+0x267c>
   2df83:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   2df88:	41 b8 06 00 00 00    	mov    $0x6,%r8d
   2df8e:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   2df93:	ff 15 bf 7d 01 00    	callq  *0x17dbf(%rip)        # 45d58 <_GLOBAL_OFFSET_TABLE_+0x3c8>
   2df99:	83 7c 24 38 01       	cmpl   $0x1,0x38(%rsp)
   2df9e:	0f 85 56 01 00 00    	jne    2e0fa <rustc_demangle::demangle+0x19a>
   2dfa4:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
   2dfa9:	4c 8b 7c 24 70       	mov    0x70(%rsp),%r15
   2dfae:	4c 8b 64 24 30       	mov    0x30(%rsp),%r12
   2dfb3:	4d 8d 44 24 ff       	lea    -0x1(%r12),%r8
   2dfb8:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
   2dfbd:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   2dfc2:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
   2dfc7:	48 8b 4c 24 60       	mov    0x60(%rsp),%rcx
   2dfcc:	49 8d 3c 0c          	lea    (%r12,%rcx,1),%rdi
   2dfd0:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   2dfd4:	49 83 ff ff          	cmp    $0xffffffffffffffff,%r15
   2dfd8:	0f 84 5d 02 00 00    	je     2e23b <rustc_demangle::demangle+0x2db>
   2dfde:	48 39 f7             	cmp    %rsi,%rdi
   2dfe1:	0f 83 77 02 00 00    	jae    2e25e <rustc_demangle::demangle+0x2fe>
   2dfe7:	4c 8b 54 24 58       	mov    0x58(%rsp),%r10
   2dfec:	4c 8b 5c 24 40       	mov    0x40(%rsp),%r11
   2dff1:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   2dff6:	4c 89 e2             	mov    %r12,%rdx
   2dff9:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
   2e000:	00 
   2e001:	48 29 c2             	sub    %rax,%rdx
   2e004:	48 89 94 24 80 00 00 	mov    %rdx,0x80(%rsp)
   2e00b:	00 
   2e00c:	4c 89 d8             	mov    %r11,%rax
   2e00f:	48 f7 d8             	neg    %rax
   2e012:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2e019:	00 00 00 
   2e01c:	0f 1f 40 00          	nopl   0x0(%rax)
   2e020:	41 0f b6 14 39       	movzbl (%r9,%rdi,1),%edx
   2e025:	49 0f a3 d2          	bt     %rdx,%r10
   2e029:	73 45                	jae    2e070 <rustc_demangle::demangle+0x110>
   2e02b:	4d 39 fb             	cmp    %r15,%r11
   2e02e:	4c 89 ff             	mov    %r15,%rdi
   2e031:	49 0f 47 fb          	cmova  %r11,%rdi
   2e035:	49 8d 1c 09          	lea    (%r9,%rcx,1),%rbx
   2e039:	48 89 fd             	mov    %rdi,%rbp
   2e03c:	0f 1f 40 00          	nopl   0x0(%rax)
   2e040:	4c 39 e5             	cmp    %r12,%rbp
   2e043:	73 4b                	jae    2e090 <rustc_demangle::demangle+0x130>
   2e045:	48 8d 14 29          	lea    (%rcx,%rbp,1),%rdx
   2e049:	48 39 f2             	cmp    %rsi,%rdx
   2e04c:	0f 83 72 0b 00 00    	jae    2ebc4 <rustc_demangle::demangle+0xc64>
   2e052:	4c 8d 6d 01          	lea    0x1(%rbp),%r13
   2e056:	41 0f b6 14 2e       	movzbl (%r14,%rbp,1),%edx
   2e05b:	3a 14 2b             	cmp    (%rbx,%rbp,1),%dl
   2e05e:	4c 89 ed             	mov    %r13,%rbp
   2e061:	74 dd                	je     2e040 <rustc_demangle::demangle+0xe0>
   2e063:	48 01 c1             	add    %rax,%rcx
   2e066:	4c 01 e9             	add    %r13,%rcx
   2e069:	e9 05 00 00 00       	jmpq   2e073 <rustc_demangle::demangle+0x113>
   2e06e:	66 90                	xchg   %ax,%ax
   2e070:	4c 01 e1             	add    %r12,%rcx
   2e073:	45 31 ff             	xor    %r15d,%r15d
   2e076:	4a 8d 3c 01          	lea    (%rcx,%r8,1),%rdi
   2e07a:	48 39 f7             	cmp    %rsi,%rdi
   2e07d:	72 a1                	jb     2e020 <rustc_demangle::demangle+0xc0>
   2e07f:	eb 6a                	jmp    2e0eb <rustc_demangle::demangle+0x18b>
   2e081:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2e088:	00 00 00 
   2e08b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   2e090:	4c 89 df             	mov    %r11,%rdi
   2e093:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2e09a:	00 00 00 
   2e09d:	0f 1f 00             	nopl   (%rax)
   2e0a0:	49 39 ff             	cmp    %rdi,%r15
   2e0a3:	0f 83 24 03 00 00    	jae    2e3cd <rustc_demangle::demangle+0x46d>
   2e0a9:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   2e0ad:	4c 39 e7             	cmp    %r12,%rdi
   2e0b0:	0f 83 27 0b 00 00    	jae    2ebdd <rustc_demangle::demangle+0xc7d>
   2e0b6:	48 8d 1c 0f          	lea    (%rdi,%rcx,1),%rbx
   2e0ba:	48 39 f3             	cmp    %rsi,%rbx
   2e0bd:	0f 83 2c 0b 00 00    	jae    2ebef <rustc_demangle::demangle+0xc8f>
   2e0c3:	41 0f b6 14 3e       	movzbl (%r14,%rdi,1),%edx
   2e0c8:	41 3a 14 19          	cmp    (%r9,%rbx,1),%dl
   2e0cc:	74 d2                	je     2e0a0 <rustc_demangle::demangle+0x140>
   2e0ce:	48 03 8c 24 88 00 00 	add    0x88(%rsp),%rcx
   2e0d5:	00 
   2e0d6:	4c 8b bc 24 80 00 00 	mov    0x80(%rsp),%r15
   2e0dd:	00 
   2e0de:	4a 8d 3c 01          	lea    (%rcx,%r8,1),%rdi
   2e0e2:	48 39 f7             	cmp    %rsi,%rdi
   2e0e5:	0f 82 35 ff ff ff    	jb     2e020 <rustc_demangle::demangle+0xc0>
   2e0eb:	4c 89 7c 24 70       	mov    %r15,0x70(%rsp)
   2e0f0:	48 89 4c 24 60       	mov    %rcx,0x60(%rsp)
   2e0f5:	e9 64 01 00 00       	jmpq   2e25e <rustc_demangle::demangle+0x2fe>
   2e0fa:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   2e0ff:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   2e104:	4c 8d 04 0f          	lea    (%rdi,%rcx,1),%r8
   2e108:	44 8a 4c 24 50       	mov    0x50(%rsp),%r9b
   2e10d:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   2e112:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   2e117:	e9 0a 00 00 00       	jmpq   2e126 <rustc_demangle::demangle+0x1c6>
   2e11c:	0f 1f 40 00          	nopl   0x0(%rax)
   2e120:	48 01 c2             	add    %rax,%rdx
   2e123:	41 b1 01             	mov    $0x1,%r9b
   2e126:	48 85 d2             	test   %rdx,%rdx
   2e129:	74 15                	je     2e140 <rustc_demangle::demangle+0x1e0>
   2e12b:	48 39 d1             	cmp    %rdx,%rcx
   2e12e:	74 10                	je     2e140 <rustc_demangle::demangle+0x1e0>
   2e130:	0f 86 cb 0a 00 00    	jbe    2ec01 <rustc_demangle::demangle+0xca1>
   2e136:	80 3c 17 bf          	cmpb   $0xbf,(%rdi,%rdx,1)
   2e13a:	0f 8e c1 0a 00 00    	jle    2ec01 <rustc_demangle::demangle+0xca1>
   2e140:	48 39 d1             	cmp    %rdx,%rcx
   2e143:	0f 84 2d 02 00 00    	je     2e376 <rustc_demangle::demangle+0x416>
   2e149:	48 8d 04 17          	lea    (%rdi,%rdx,1),%rax
   2e14d:	0f b6 28             	movzbl (%rax),%ebp
   2e150:	40 84 ed             	test   %bpl,%bpl
   2e153:	78 0b                	js     2e160 <rustc_demangle::demangle+0x200>
   2e155:	89 ee                	mov    %ebp,%esi
   2e157:	e9 94 00 00 00       	jmpq   2e1f0 <rustc_demangle::demangle+0x290>
   2e15c:	0f 1f 40 00          	nopl   0x0(%rax)
   2e160:	48 8d 70 01          	lea    0x1(%rax),%rsi
   2e164:	4c 39 c6             	cmp    %r8,%rsi
   2e167:	74 40                	je     2e1a9 <rustc_demangle::demangle+0x249>
   2e169:	0f b6 70 01          	movzbl 0x1(%rax),%esi
   2e16d:	48 83 c0 02          	add    $0x2,%rax
   2e171:	83 e6 3f             	and    $0x3f,%esi
   2e174:	89 eb                	mov    %ebp,%ebx
   2e176:	83 e3 1f             	and    $0x1f,%ebx
   2e179:	40 80 fd df          	cmp    $0xdf,%bpl
   2e17d:	76 3a                	jbe    2e1b9 <rustc_demangle::demangle+0x259>
   2e17f:	4c 39 c0             	cmp    %r8,%rax
   2e182:	74 3c                	je     2e1c0 <rustc_demangle::demangle+0x260>
   2e184:	44 0f b6 10          	movzbl (%rax),%r10d
   2e188:	48 83 c0 01          	add    $0x1,%rax
   2e18c:	41 83 e2 3f          	and    $0x3f,%r10d
   2e190:	c1 e6 06             	shl    $0x6,%esi
   2e193:	44 09 d6             	or     %r10d,%esi
   2e196:	40 80 fd f0          	cmp    $0xf0,%bpl
   2e19a:	72 36                	jb     2e1d2 <rustc_demangle::demangle+0x272>
   2e19c:	4c 39 c0             	cmp    %r8,%rax
   2e19f:	74 38                	je     2e1d9 <rustc_demangle::demangle+0x279>
   2e1a1:	0f b6 00             	movzbl (%rax),%eax
   2e1a4:	83 e0 3f             	and    $0x3f,%eax
   2e1a7:	eb 32                	jmp    2e1db <rustc_demangle::demangle+0x27b>
   2e1a9:	31 f6                	xor    %esi,%esi
   2e1ab:	4c 89 c0             	mov    %r8,%rax
   2e1ae:	89 eb                	mov    %ebp,%ebx
   2e1b0:	83 e3 1f             	and    $0x1f,%ebx
   2e1b3:	40 80 fd df          	cmp    $0xdf,%bpl
   2e1b7:	77 c6                	ja     2e17f <rustc_demangle::demangle+0x21f>
   2e1b9:	c1 e3 06             	shl    $0x6,%ebx
   2e1bc:	09 de                	or     %ebx,%esi
   2e1be:	eb 30                	jmp    2e1f0 <rustc_demangle::demangle+0x290>
   2e1c0:	45 31 d2             	xor    %r10d,%r10d
   2e1c3:	4c 89 c0             	mov    %r8,%rax
   2e1c6:	c1 e6 06             	shl    $0x6,%esi
   2e1c9:	44 09 d6             	or     %r10d,%esi
   2e1cc:	40 80 fd f0          	cmp    $0xf0,%bpl
   2e1d0:	73 ca                	jae    2e19c <rustc_demangle::demangle+0x23c>
   2e1d2:	c1 e3 0c             	shl    $0xc,%ebx
   2e1d5:	09 de                	or     %ebx,%esi
   2e1d7:	eb 17                	jmp    2e1f0 <rustc_demangle::demangle+0x290>
   2e1d9:	31 c0                	xor    %eax,%eax
   2e1db:	83 e3 07             	and    $0x7,%ebx
   2e1de:	c1 e3 12             	shl    $0x12,%ebx
   2e1e1:	c1 e6 06             	shl    $0x6,%esi
   2e1e4:	09 de                	or     %ebx,%esi
   2e1e6:	09 c6                	or     %eax,%esi
   2e1e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2e1ef:	00 
   2e1f0:	45 84 c9             	test   %r9b,%r9b
   2e1f3:	0f 85 9f 01 00 00    	jne    2e398 <rustc_demangle::demangle+0x438>
   2e1f9:	81 fe 00 00 11 00    	cmp    $0x110000,%esi
   2e1ff:	0f 84 af 01 00 00    	je     2e3b4 <rustc_demangle::demangle+0x454>
   2e205:	b8 01 00 00 00       	mov    $0x1,%eax
   2e20a:	81 fe 80 00 00 00    	cmp    $0x80,%esi
   2e210:	0f 82 0a ff ff ff    	jb     2e120 <rustc_demangle::demangle+0x1c0>
   2e216:	b8 02 00 00 00       	mov    $0x2,%eax
   2e21b:	81 fe 00 08 00 00    	cmp    $0x800,%esi
   2e221:	0f 82 f9 fe ff ff    	jb     2e120 <rustc_demangle::demangle+0x1c0>
   2e227:	81 fe 00 00 01 00    	cmp    $0x10000,%esi
   2e22d:	b8 04 00 00 00       	mov    $0x4,%eax
   2e232:	48 83 d8 00          	sbb    $0x0,%rax
   2e236:	e9 e5 fe ff ff       	jmpq   2e120 <rustc_demangle::demangle+0x1c0>
   2e23b:	48 39 f7             	cmp    %rsi,%rdi
   2e23e:	73 1e                	jae    2e25e <rustc_demangle::demangle+0x2fe>
   2e240:	4c 8b 54 24 58       	mov    0x58(%rsp),%r10
   2e245:	4c 8b 7c 24 40       	mov    0x40(%rsp),%r15
   2e24a:	4c 8b 5c 24 50       	mov    0x50(%rsp),%r11
   2e24f:	4d 39 e7             	cmp    %r12,%r15
   2e252:	4d 89 e5             	mov    %r12,%r13
   2e255:	4d 0f 47 ef          	cmova  %r15,%r13
   2e259:	e9 82 00 00 00       	jmpq   2e2e0 <rustc_demangle::demangle+0x380>
   2e25e:	48 89 74 24 60       	mov    %rsi,0x60(%rsp)
   2e263:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
   2e268:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   2e26d:	49 83 fc 03          	cmp    $0x3,%r12
   2e271:	0f 82 8b 02 00 00    	jb     2e502 <rustc_demangle::demangle+0x5a2>
   2e277:	48 8d 05 b5 b5 00 00 	lea    0xb5b5(%rip),%rax        # 39833 <str.6+0x2513>
   2e27e:	49 39 c3             	cmp    %rax,%r11
   2e281:	74 1a                	je     2e29d <rustc_demangle::demangle+0x33d>
   2e283:	41 0f b7 03          	movzwl (%r11),%eax
   2e287:	35 5f 5a 00 00       	xor    $0x5a5f,%eax
   2e28c:	41 0f b6 4b 02       	movzbl 0x2(%r11),%ecx
   2e291:	83 f1 4e             	xor    $0x4e,%ecx
   2e294:	66 09 c1             	or     %ax,%cx
   2e297:	0f 85 6f 02 00 00    	jne    2e50c <rustc_demangle::demangle+0x5ac>
   2e29d:	49 c7 c7 fd ff ff ff 	mov    $0xfffffffffffffffd,%r15
   2e2a4:	41 bd 03 00 00 00    	mov    $0x3,%r13d
   2e2aa:	49 83 fc 03          	cmp    $0x3,%r12
   2e2ae:	0f 84 db 02 00 00    	je     2e58f <rustc_demangle::demangle+0x62f>
   2e2b4:	41 80 7b 03 bf       	cmpb   $0xbf,0x3(%r11)
   2e2b9:	0f 8f d0 02 00 00    	jg     2e58f <rustc_demangle::demangle+0x62f>
   2e2bf:	4c 8d 05 4a 6b 01 00 	lea    0x16b4a(%rip),%r8        # 44e10 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x18b8>
   2e2c6:	ba 03 00 00 00       	mov    $0x3,%edx
   2e2cb:	e9 a2 09 00 00       	jmpq   2ec72 <rustc_demangle::demangle+0xd12>
   2e2d0:	4c 01 e1             	add    %r12,%rcx
   2e2d3:	4a 8d 3c 01          	lea    (%rcx,%r8,1),%rdi
   2e2d7:	48 39 f7             	cmp    %rsi,%rdi
   2e2da:	0f 83 10 fe ff ff    	jae    2e0f0 <rustc_demangle::demangle+0x190>
   2e2e0:	41 0f b6 3c 39       	movzbl (%r9,%rdi,1),%edi
   2e2e5:	49 0f a3 fa          	bt     %rdi,%r10
   2e2e9:	73 e5                	jae    2e2d0 <rustc_demangle::demangle+0x370>
   2e2eb:	48 89 cf             	mov    %rcx,%rdi
   2e2ee:	48 f7 df             	neg    %rdi
   2e2f1:	49 8d 1c 09          	lea    (%r9,%rcx,1),%rbx
   2e2f5:	4c 89 fd             	mov    %r15,%rbp
   2e2f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2e2ff:	00 
   2e300:	49 39 ed             	cmp    %rbp,%r13
   2e303:	74 2a                	je     2e32f <rustc_demangle::demangle+0x3cf>
   2e305:	48 8d 04 29          	lea    (%rcx,%rbp,1),%rax
   2e309:	48 39 f0             	cmp    %rsi,%rax
   2e30c:	0f 83 01 09 00 00    	jae    2ec13 <rustc_demangle::demangle+0xcb3>
   2e312:	41 0f b6 04 2e       	movzbl (%r14,%rbp,1),%eax
   2e317:	48 8d 55 01          	lea    0x1(%rbp),%rdx
   2e31b:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   2e31f:	3a 04 2b             	cmp    (%rbx,%rbp,1),%al
   2e322:	48 89 d5             	mov    %rdx,%rbp
   2e325:	74 d9                	je     2e300 <rustc_demangle::demangle+0x3a0>
   2e327:	48 f7 df             	neg    %rdi
   2e32a:	48 89 f9             	mov    %rdi,%rcx
   2e32d:	eb a4                	jmp    2e2d3 <rustc_demangle::demangle+0x373>
   2e32f:	4c 89 ff             	mov    %r15,%rdi
   2e332:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2e339:	00 00 00 
   2e33c:	0f 1f 40 00          	nopl   0x0(%rax)
   2e340:	48 85 ff             	test   %rdi,%rdi
   2e343:	0f 84 97 00 00 00    	je     2e3e0 <rustc_demangle::demangle+0x480>
   2e349:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   2e34d:	4c 39 e7             	cmp    %r12,%rdi
   2e350:	0f 83 87 08 00 00    	jae    2ebdd <rustc_demangle::demangle+0xc7d>
   2e356:	48 8d 1c 0f          	lea    (%rdi,%rcx,1),%rbx
   2e35a:	48 39 f3             	cmp    %rsi,%rbx
   2e35d:	0f 83 8c 08 00 00    	jae    2ebef <rustc_demangle::demangle+0xc8f>
   2e363:	41 0f b6 04 3e       	movzbl (%r14,%rdi,1),%eax
   2e368:	41 3a 04 19          	cmp    (%r9,%rbx,1),%al
   2e36c:	74 d2                	je     2e340 <rustc_demangle::demangle+0x3e0>
   2e36e:	4c 01 d9             	add    %r11,%rcx
   2e371:	e9 5d ff ff ff       	jmpq   2e2d3 <rustc_demangle::demangle+0x373>
   2e376:	44 89 c8             	mov    %r9d,%eax
   2e379:	34 01                	xor    $0x1,%al
   2e37b:	88 44 24 50          	mov    %al,0x50(%rsp)
   2e37f:	48 89 4c 24 40       	mov    %rcx,0x40(%rsp)
   2e384:	45 84 c9             	test   %r9b,%r9b
   2e387:	0f 84 6b 01 00 00    	je     2e4f8 <rustc_demangle::demangle+0x598>
   2e38d:	48 89 ca             	mov    %rcx,%rdx
   2e390:	48 83 c2 06          	add    $0x6,%rdx
   2e394:	75 65                	jne    2e3fb <rustc_demangle::demangle+0x49b>
   2e396:	eb 79                	jmp    2e411 <rustc_demangle::demangle+0x4b1>
   2e398:	41 80 f1 01          	xor    $0x1,%r9b
   2e39c:	44 88 4c 24 50       	mov    %r9b,0x50(%rsp)
   2e3a1:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
   2e3a6:	48 89 d1             	mov    %rdx,%rcx
   2e3a9:	48 89 ca             	mov    %rcx,%rdx
   2e3ac:	48 83 c2 06          	add    $0x6,%rdx
   2e3b0:	75 49                	jne    2e3fb <rustc_demangle::demangle+0x49b>
   2e3b2:	eb 5d                	jmp    2e411 <rustc_demangle::demangle+0x4b1>
   2e3b4:	c6 44 24 50 01       	movb   $0x1,0x50(%rsp)
   2e3b9:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
   2e3be:	49 83 fc 03          	cmp    $0x3,%r12
   2e3c2:	0f 82 3a 01 00 00    	jb     2e502 <rustc_demangle::demangle+0x5a2>
   2e3c8:	e9 aa fe ff ff       	jmpq   2e277 <rustc_demangle::demangle+0x317>
   2e3cd:	49 01 cc             	add    %rcx,%r12
   2e3d0:	4c 89 64 24 60       	mov    %r12,0x60(%rsp)
   2e3d5:	48 c7 44 24 70 00 00 	movq   $0x0,0x70(%rsp)
   2e3dc:	00 00 
   2e3de:	eb 08                	jmp    2e3e8 <rustc_demangle::demangle+0x488>
   2e3e0:	49 01 cc             	add    %rcx,%r12
   2e3e3:	4c 89 64 24 60       	mov    %r12,0x60(%rsp)
   2e3e8:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
   2e3ed:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   2e3f2:	48 89 ca             	mov    %rcx,%rdx
   2e3f5:	48 83 c2 06          	add    $0x6,%rdx
   2e3f9:	74 16                	je     2e411 <rustc_demangle::demangle+0x4b1>
   2e3fb:	4c 39 e2             	cmp    %r12,%rdx
   2e3fe:	74 11                	je     2e411 <rustc_demangle::demangle+0x4b1>
   2e400:	0f 83 29 08 00 00    	jae    2ec2f <rustc_demangle::demangle+0xccf>
   2e406:	41 80 3c 13 bf       	cmpb   $0xbf,(%r11,%rdx,1)
   2e40b:	0f 8e 1e 08 00 00    	jle    2ec2f <rustc_demangle::demangle+0xccf>
   2e411:	4c 01 da             	add    %r11,%rdx
   2e414:	4b 8d 04 23          	lea    (%r11,%r12,1),%rax
   2e418:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2e41f:	00 
   2e420:	48 39 c2             	cmp    %rax,%rdx
   2e423:	0f 84 aa 01 00 00    	je     2e5d3 <rustc_demangle::demangle+0x673>
   2e429:	48 8d 72 01          	lea    0x1(%rdx),%rsi
   2e42d:	0f b6 3a             	movzbl (%rdx),%edi
   2e430:	40 84 ff             	test   %dil,%dil
   2e433:	78 0b                	js     2e440 <rustc_demangle::demangle+0x4e0>
   2e435:	48 89 f2             	mov    %rsi,%rdx
   2e438:	89 fe                	mov    %edi,%esi
   2e43a:	e9 a1 00 00 00       	jmpq   2e4e0 <rustc_demangle::demangle+0x580>
   2e43f:	90                   	nop
   2e440:	48 39 c6             	cmp    %rax,%rsi
   2e443:	74 41                	je     2e486 <rustc_demangle::demangle+0x526>
   2e445:	0f b6 72 01          	movzbl 0x1(%rdx),%esi
   2e449:	48 83 c2 02          	add    $0x2,%rdx
   2e44d:	83 e6 3f             	and    $0x3f,%esi
   2e450:	89 fd                	mov    %edi,%ebp
   2e452:	83 e5 1f             	and    $0x1f,%ebp
   2e455:	40 80 ff df          	cmp    $0xdf,%dil
   2e459:	76 3b                	jbe    2e496 <rustc_demangle::demangle+0x536>
   2e45b:	48 39 c2             	cmp    %rax,%rdx
   2e45e:	74 3d                	je     2e49d <rustc_demangle::demangle+0x53d>
   2e460:	0f b6 1a             	movzbl (%rdx),%ebx
   2e463:	48 83 c2 01          	add    $0x1,%rdx
   2e467:	83 e3 3f             	and    $0x3f,%ebx
   2e46a:	c1 e6 06             	shl    $0x6,%esi
   2e46d:	09 de                	or     %ebx,%esi
   2e46f:	40 80 ff f0          	cmp    $0xf0,%dil
   2e473:	72 38                	jb     2e4ad <rustc_demangle::demangle+0x54d>
   2e475:	48 39 c2             	cmp    %rax,%rdx
   2e478:	74 3a                	je     2e4b4 <rustc_demangle::demangle+0x554>
   2e47a:	0f b6 3a             	movzbl (%rdx),%edi
   2e47d:	48 83 c2 01          	add    $0x1,%rdx
   2e481:	83 e7 3f             	and    $0x3f,%edi
   2e484:	eb 33                	jmp    2e4b9 <rustc_demangle::demangle+0x559>
   2e486:	31 f6                	xor    %esi,%esi
   2e488:	48 89 c2             	mov    %rax,%rdx
   2e48b:	89 fd                	mov    %edi,%ebp
   2e48d:	83 e5 1f             	and    $0x1f,%ebp
   2e490:	40 80 ff df          	cmp    $0xdf,%dil
   2e494:	77 c5                	ja     2e45b <rustc_demangle::demangle+0x4fb>
   2e496:	c1 e5 06             	shl    $0x6,%ebp
   2e499:	09 ee                	or     %ebp,%esi
   2e49b:	eb 43                	jmp    2e4e0 <rustc_demangle::demangle+0x580>
   2e49d:	31 db                	xor    %ebx,%ebx
   2e49f:	48 89 c2             	mov    %rax,%rdx
   2e4a2:	c1 e6 06             	shl    $0x6,%esi
   2e4a5:	09 de                	or     %ebx,%esi
   2e4a7:	40 80 ff f0          	cmp    $0xf0,%dil
   2e4ab:	73 c8                	jae    2e475 <rustc_demangle::demangle+0x515>
   2e4ad:	c1 e5 0c             	shl    $0xc,%ebp
   2e4b0:	09 ee                	or     %ebp,%esi
   2e4b2:	eb 2c                	jmp    2e4e0 <rustc_demangle::demangle+0x580>
   2e4b4:	31 ff                	xor    %edi,%edi
   2e4b6:	48 89 c2             	mov    %rax,%rdx
   2e4b9:	83 e5 07             	and    $0x7,%ebp
   2e4bc:	c1 e5 12             	shl    $0x12,%ebp
   2e4bf:	c1 e6 06             	shl    $0x6,%esi
   2e4c2:	09 ee                	or     %ebp,%esi
   2e4c4:	09 fe                	or     %edi,%esi
   2e4c6:	81 fe 00 00 11 00    	cmp    $0x110000,%esi
   2e4cc:	0f 84 01 01 00 00    	je     2e5d3 <rustc_demangle::demangle+0x673>
   2e4d2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2e4d9:	00 00 00 
   2e4dc:	0f 1f 40 00          	nopl   0x0(%rax)
   2e4e0:	8d 7e d0             	lea    -0x30(%rsi),%edi
   2e4e3:	83 ff 0a             	cmp    $0xa,%edi
   2e4e6:	0f 82 34 ff ff ff    	jb     2e420 <rustc_demangle::demangle+0x4c0>
   2e4ec:	83 c6 c0             	add    $0xffffffc0,%esi
   2e4ef:	83 fe 07             	cmp    $0x7,%esi
   2e4f2:	0f 82 28 ff ff ff    	jb     2e420 <rustc_demangle::demangle+0x4c0>
   2e4f8:	49 83 fc 03          	cmp    $0x3,%r12
   2e4fc:	0f 83 75 fd ff ff    	jae    2e277 <rustc_demangle::demangle+0x317>
   2e502:	49 83 fc 02          	cmp    $0x2,%r12
   2e506:	0f 85 27 02 00 00    	jne    2e733 <rustc_demangle::demangle+0x7d3>
   2e50c:	48 8d 05 76 b3 00 00 	lea    0xb376(%rip),%rax        # 39889 <str.6+0x2569>
   2e513:	49 39 c3             	cmp    %rax,%r11
   2e516:	74 59                	je     2e571 <rustc_demangle::demangle+0x611>
   2e518:	41 0f b7 03          	movzwl (%r11),%eax
   2e51c:	3d 5a 4e 00 00       	cmp    $0x4e5a,%eax
   2e521:	74 4e                	je     2e571 <rustc_demangle::demangle+0x611>
   2e523:	49 83 fc 04          	cmp    $0x4,%r12
   2e527:	0f 82 70 01 00 00    	jb     2e69d <rustc_demangle::demangle+0x73d>
   2e52d:	48 8d 05 57 b3 00 00 	lea    0xb357(%rip),%rax        # 3988b <str.6+0x256b>
   2e534:	49 39 c3             	cmp    %rax,%r11
   2e537:	74 0d                	je     2e546 <rustc_demangle::demangle+0x5e6>
   2e539:	41 81 3b 5f 5f 5a 4e 	cmpl   $0x4e5a5f5f,(%r11)
   2e540:	0f 85 5d 01 00 00    	jne    2e6a3 <rustc_demangle::demangle+0x743>
   2e546:	49 c7 c7 fc ff ff ff 	mov    $0xfffffffffffffffc,%r15
   2e54d:	41 bd 04 00 00 00    	mov    $0x4,%r13d
   2e553:	49 83 fc 04          	cmp    $0x4,%r12
   2e557:	74 36                	je     2e58f <rustc_demangle::demangle+0x62f>
   2e559:	41 80 7b 04 bf       	cmpb   $0xbf,0x4(%r11)
   2e55e:	7f 2f                	jg     2e58f <rustc_demangle::demangle+0x62f>
   2e560:	4c 8d 05 d9 68 01 00 	lea    0x168d9(%rip),%r8        # 44e40 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x18e8>
   2e567:	ba 04 00 00 00       	mov    $0x4,%edx
   2e56c:	e9 01 07 00 00       	jmpq   2ec72 <rustc_demangle::demangle+0xd12>
   2e571:	49 c7 c7 fe ff ff ff 	mov    $0xfffffffffffffffe,%r15
   2e578:	41 bd 02 00 00 00    	mov    $0x2,%r13d
   2e57e:	49 83 fc 02          	cmp    $0x2,%r12
   2e582:	74 0b                	je     2e58f <rustc_demangle::demangle+0x62f>
   2e584:	41 80 7b 02 bf       	cmpb   $0xbf,0x2(%r11)
   2e589:	0f 8e d7 06 00 00    	jle    2ec66 <rustc_demangle::demangle+0xd06>
   2e58f:	4d 01 dd             	add    %r11,%r13
   2e592:	4d 01 e7             	add    %r12,%r15
   2e595:	4b 8d 0c 2f          	lea    (%r15,%r13,1),%rcx
   2e599:	31 c0                	xor    %eax,%eax
   2e59b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   2e5a0:	49 39 c7             	cmp    %rax,%r15
   2e5a3:	74 11                	je     2e5b6 <rustc_demangle::demangle+0x656>
   2e5a5:	41 80 7c 05 00 00    	cmpb   $0x0,0x0(%r13,%rax,1)
   2e5ab:	48 8d 40 01          	lea    0x1(%rax),%rax
   2e5af:	79 ef                	jns    2e5a0 <rustc_demangle::demangle+0x640>
   2e5b1:	e9 e7 00 00 00       	jmpq   2e69d <rustc_demangle::demangle+0x73d>
   2e5b6:	4d 85 ff             	test   %r15,%r15
   2e5b9:	0f 84 de 00 00 00    	je     2e69d <rustc_demangle::demangle+0x73d>
   2e5bf:	49 8d 7d 01          	lea    0x1(%r13),%rdi
   2e5c3:	41 0f b6 55 00       	movzbl 0x0(%r13),%edx
   2e5c8:	84 d2                	test   %dl,%dl
   2e5ca:	78 34                	js     2e600 <rustc_demangle::demangle+0x6a0>
   2e5cc:	89 d5                	mov    %edx,%ebp
   2e5ce:	e9 b5 00 00 00       	jmpq   2e688 <rustc_demangle::demangle+0x728>
   2e5d3:	48 85 c9             	test   %rcx,%rcx
   2e5d6:	74 16                	je     2e5ee <rustc_demangle::demangle+0x68e>
   2e5d8:	4c 39 e1             	cmp    %r12,%rcx
   2e5db:	74 11                	je     2e5ee <rustc_demangle::demangle+0x68e>
   2e5dd:	0f 83 55 06 00 00    	jae    2ec38 <rustc_demangle::demangle+0xcd8>
   2e5e3:	41 80 3c 0b bf       	cmpb   $0xbf,(%r11,%rcx,1)
   2e5e8:	0f 8e 4a 06 00 00    	jle    2ec38 <rustc_demangle::demangle+0xcd8>
   2e5ee:	49 89 cc             	mov    %rcx,%r12
   2e5f1:	49 83 fc 03          	cmp    $0x3,%r12
   2e5f5:	0f 83 7c fc ff ff    	jae    2e277 <rustc_demangle::demangle+0x317>
   2e5fb:	e9 02 ff ff ff       	jmpq   2e502 <rustc_demangle::demangle+0x5a2>
   2e600:	31 ed                	xor    %ebp,%ebp
   2e602:	48 89 ce             	mov    %rcx,%rsi
   2e605:	49 83 ff 01          	cmp    $0x1,%r15
   2e609:	74 12                	je     2e61d <rustc_demangle::demangle+0x6bd>
   2e60b:	4c 89 ef             	mov    %r13,%rdi
   2e60e:	48 83 c7 02          	add    $0x2,%rdi
   2e612:	41 0f b6 6d 01       	movzbl 0x1(%r13),%ebp
   2e617:	83 e5 3f             	and    $0x3f,%ebp
   2e61a:	48 89 fe             	mov    %rdi,%rsi
   2e61d:	89 d0                	mov    %edx,%eax
   2e61f:	83 e0 1f             	and    $0x1f,%eax
   2e622:	80 fa df             	cmp    $0xdf,%dl
   2e625:	76 33                	jbe    2e65a <rustc_demangle::demangle+0x6fa>
   2e627:	48 39 ce             	cmp    %rcx,%rsi
   2e62a:	74 35                	je     2e661 <rustc_demangle::demangle+0x701>
   2e62c:	44 0f b6 06          	movzbl (%rsi),%r8d
   2e630:	48 83 c6 01          	add    $0x1,%rsi
   2e634:	41 83 e0 3f          	and    $0x3f,%r8d
   2e638:	48 89 f7             	mov    %rsi,%rdi
   2e63b:	c1 e5 06             	shl    $0x6,%ebp
   2e63e:	44 09 c5             	or     %r8d,%ebp
   2e641:	80 fa f0             	cmp    $0xf0,%dl
   2e644:	72 2c                	jb     2e672 <rustc_demangle::demangle+0x712>
   2e646:	48 39 ce             	cmp    %rcx,%rsi
   2e649:	74 2e                	je     2e679 <rustc_demangle::demangle+0x719>
   2e64b:	0f b6 16             	movzbl (%rsi),%edx
   2e64e:	48 83 c6 01          	add    $0x1,%rsi
   2e652:	83 e2 3f             	and    $0x3f,%edx
   2e655:	48 89 f7             	mov    %rsi,%rdi
   2e658:	eb 21                	jmp    2e67b <rustc_demangle::demangle+0x71b>
   2e65a:	c1 e0 06             	shl    $0x6,%eax
   2e65d:	09 c5                	or     %eax,%ebp
   2e65f:	eb 27                	jmp    2e688 <rustc_demangle::demangle+0x728>
   2e661:	45 31 c0             	xor    %r8d,%r8d
   2e664:	48 89 ce             	mov    %rcx,%rsi
   2e667:	c1 e5 06             	shl    $0x6,%ebp
   2e66a:	44 09 c5             	or     %r8d,%ebp
   2e66d:	80 fa f0             	cmp    $0xf0,%dl
   2e670:	73 d4                	jae    2e646 <rustc_demangle::demangle+0x6e6>
   2e672:	c1 e0 0c             	shl    $0xc,%eax
   2e675:	09 c5                	or     %eax,%ebp
   2e677:	eb 0f                	jmp    2e688 <rustc_demangle::demangle+0x728>
   2e679:	31 d2                	xor    %edx,%edx
   2e67b:	83 e0 07             	and    $0x7,%eax
   2e67e:	c1 e0 12             	shl    $0x12,%eax
   2e681:	c1 e5 06             	shl    $0x6,%ebp
   2e684:	09 c5                	or     %eax,%ebp
   2e686:	09 d5                	or     %edx,%ebp
   2e688:	83 fd 45             	cmp    $0x45,%ebp
   2e68b:	0f 84 6b 01 00 00    	je     2e7fc <rustc_demangle::demangle+0x89c>
   2e691:	81 fd 00 00 11 00    	cmp    $0x110000,%ebp
   2e697:	0f 85 a7 01 00 00    	jne    2e844 <rustc_demangle::demangle+0x8e4>
   2e69d:	49 83 fc 03          	cmp    $0x3,%r12
   2e6a1:	72 30                	jb     2e6d3 <rustc_demangle::demangle+0x773>
   2e6a3:	48 8d 05 29 b2 00 00 	lea    0xb229(%rip),%rax        # 398d3 <str.6+0x25b3>
   2e6aa:	49 39 c3             	cmp    %rax,%r11
   2e6ad:	74 0b                	je     2e6ba <rustc_demangle::demangle+0x75a>
   2e6af:	41 0f b7 03          	movzwl (%r11),%eax
   2e6b3:	3d 5f 52 00 00       	cmp    $0x525f,%eax
   2e6b8:	75 1f                	jne    2e6d9 <rustc_demangle::demangle+0x779>
   2e6ba:	41 8a 43 02          	mov    0x2(%r11),%al
   2e6be:	3c bf                	cmp    $0xbf,%al
   2e6c0:	0f 8e 89 05 00 00    	jle    2ec4f <rustc_demangle::demangle+0xcef>
   2e6c6:	4d 8d 6b 02          	lea    0x2(%r11),%r13
   2e6ca:	49 c7 c7 fe ff ff ff 	mov    $0xfffffffffffffffe,%r15
   2e6d1:	eb 33                	jmp    2e706 <rustc_demangle::demangle+0x7a6>
   2e6d3:	49 83 fc 02          	cmp    $0x2,%r12
   2e6d7:	75 5a                	jne    2e733 <rustc_demangle::demangle+0x7d3>
   2e6d9:	48 8d 05 44 b2 00 00 	lea    0xb244(%rip),%rax        # 39924 <str.6+0x2604>
   2e6e0:	49 39 c3             	cmp    %rax,%r11
   2e6e3:	74 0a                	je     2e6ef <rustc_demangle::demangle+0x78f>
   2e6e5:	41 80 3b 52          	cmpb   $0x52,(%r11)
   2e6e9:	0f 85 b9 00 00 00    	jne    2e7a8 <rustc_demangle::demangle+0x848>
   2e6ef:	41 8a 43 01          	mov    0x1(%r11),%al
   2e6f3:	3c bf                	cmp    $0xbf,%al
   2e6f5:	0f 8e 5d 05 00 00    	jle    2ec58 <rustc_demangle::demangle+0xcf8>
   2e6fb:	4d 8d 6b 01          	lea    0x1(%r11),%r13
   2e6ff:	49 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%r15
   2e706:	04 bf                	add    $0xbf,%al
   2e708:	4c 8d 35 52 b2 00 00 	lea    0xb252(%rip),%r14        # 39961 <str.6+0x2641>
   2e70f:	bb 02 00 00 00       	mov    $0x2,%ebx
   2e714:	3c 19                	cmp    $0x19,%al
   2e716:	77 27                	ja     2e73f <rustc_demangle::demangle+0x7df>
   2e718:	4d 01 e7             	add    %r12,%r15
   2e71b:	31 c9                	xor    %ecx,%ecx
   2e71d:	31 c0                	xor    %eax,%eax
   2e71f:	90                   	nop
   2e720:	49 39 c7             	cmp    %rax,%r15
   2e723:	74 55                	je     2e77a <rustc_demangle::demangle+0x81a>
   2e725:	41 80 7c 05 00 00    	cmpb   $0x0,0x0(%r13,%rax,1)
   2e72b:	48 8d 40 01          	lea    0x1(%rax),%rax
   2e72f:	79 ef                	jns    2e720 <rustc_demangle::demangle+0x7c0>
   2e731:	eb 0e                	jmp    2e741 <rustc_demangle::demangle+0x7e1>
   2e733:	4c 8d 35 27 b2 00 00 	lea    0xb227(%rip),%r14        # 39961 <str.6+0x2641>
   2e73a:	bb 02 00 00 00       	mov    $0x2,%ebx
   2e73f:	31 c9                	xor    %ecx,%ecx
   2e741:	48 8b 84 24 90 00 00 	mov    0x90(%rsp),%rax
   2e748:	00 
   2e749:	48 89 18             	mov    %rbx,(%rax)
   2e74c:	4c 89 68 08          	mov    %r13,0x8(%rax)
   2e750:	4c 89 78 10          	mov    %r15,0x10(%rax)
   2e754:	4c 89 48 18          	mov    %r9,0x18(%rax)
   2e758:	4c 89 58 20          	mov    %r11,0x20(%rax)
   2e75c:	4c 89 60 28          	mov    %r12,0x28(%rax)
   2e760:	4c 89 70 30          	mov    %r14,0x30(%rax)
   2e764:	48 89 48 38          	mov    %rcx,0x38(%rax)
   2e768:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
   2e76f:	5b                   	pop    %rbx
   2e770:	41 5c                	pop    %r12
   2e772:	41 5d                	pop    %r13
   2e774:	41 5e                	pop    %r14
   2e776:	41 5f                	pop    %r15
   2e778:	5d                   	pop    %rbp
   2e779:	c3                   	retq   
   2e77a:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   2e77f:	4c 89 7c 24 20       	mov    %r15,0x20(%rsp)
   2e784:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   2e78b:	00 00 
   2e78d:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   2e792:	e8 69 c8 ff ff       	callq  2b000 <rustc_demangle::v0::Parser::skip_path>
   2e797:	84 c0                	test   %al,%al
   2e799:	0f 84 82 02 00 00    	je     2ea21 <rustc_demangle::demangle+0xac1>
   2e79f:	31 c9                	xor    %ecx,%ecx
   2e7a1:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   2e7a6:	eb 99                	jmp    2e741 <rustc_demangle::demangle+0x7e1>
   2e7a8:	4c 8d 35 b2 b1 00 00 	lea    0xb1b2(%rip),%r14        # 39961 <str.6+0x2641>
   2e7af:	bb 02 00 00 00       	mov    $0x2,%ebx
   2e7b4:	49 83 fc 03          	cmp    $0x3,%r12
   2e7b8:	76 85                	jbe    2e73f <rustc_demangle::demangle+0x7df>
   2e7ba:	48 8d 05 64 b1 00 00 	lea    0xb164(%rip),%rax        # 39925 <str.6+0x2605>
   2e7c1:	49 39 c3             	cmp    %rax,%r11
   2e7c4:	74 1a                	je     2e7e0 <rustc_demangle::demangle+0x880>
   2e7c6:	41 0f b7 03          	movzwl (%r11),%eax
   2e7ca:	35 5f 5f 00 00       	xor    $0x5f5f,%eax
   2e7cf:	41 0f b6 4b 02       	movzbl 0x2(%r11),%ecx
   2e7d4:	83 f1 52             	xor    $0x52,%ecx
   2e7d7:	66 09 c1             	or     %ax,%cx
   2e7da:	0f 85 5f ff ff ff    	jne    2e73f <rustc_demangle::demangle+0x7df>
   2e7e0:	41 8a 43 03          	mov    0x3(%r11),%al
   2e7e4:	3c bf                	cmp    $0xbf,%al
   2e7e6:	0f 8e a9 04 00 00    	jle    2ec95 <rustc_demangle::demangle+0xd35>
   2e7ec:	4d 8d 6b 03          	lea    0x3(%r11),%r13
   2e7f0:	49 c7 c7 fd ff ff ff 	mov    $0xfffffffffffffffd,%r15
   2e7f7:	e9 0a ff ff ff       	jmpq   2e706 <rustc_demangle::demangle+0x7a6>
   2e7fc:	45 31 c9             	xor    %r9d,%r9d
   2e7ff:	48 29 f9             	sub    %rdi,%rcx
   2e802:	31 db                	xor    %ebx,%ebx
   2e804:	48 85 c9             	test   %rcx,%rcx
   2e807:	0f 84 85 02 00 00    	je     2ea92 <rustc_demangle::demangle+0xb32>
   2e80d:	48 8d 05 a7 b0 00 00 	lea    0xb0a7(%rip),%rax        # 398bb <str.6+0x259b>
   2e814:	48 39 c7             	cmp    %rax,%rdi
   2e817:	74 09                	je     2e822 <rustc_demangle::demangle+0x8c2>
   2e819:	80 3f 2e             	cmpb   $0x2e,(%rdi)
   2e81c:	0f 85 8f 03 00 00    	jne    2ebb1 <rustc_demangle::demangle+0xc51>
   2e822:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   2e827:	4c 8d 14 0f          	lea    (%rdi,%rcx,1),%r10
   2e82b:	4c 8d 35 2f b1 00 00 	lea    0xb12f(%rip),%r14        # 39961 <str.6+0x2641>
   2e832:	49 b8 7f 00 00 00 7e 	movabs $0x7e0000007f,%r8
   2e839:	00 00 00 
   2e83c:	48 89 f8             	mov    %rdi,%rax
   2e83f:	e9 75 02 00 00       	jmpq   2eab9 <rustc_demangle::demangle+0xb59>
   2e844:	45 31 c9             	xor    %r9d,%r9d
   2e847:	41 b8 0a 00 00 00    	mov    $0xa,%r8d
   2e84d:	83 c5 d0             	add    $0xffffffd0,%ebp
   2e850:	83 fd 09             	cmp    $0x9,%ebp
   2e853:	0f 87 44 fe ff ff    	ja     2e69d <rustc_demangle::demangle+0x73d>
   2e859:	31 c0                	xor    %eax,%eax
   2e85b:	e9 11 00 00 00       	jmpq   2e871 <rustc_demangle::demangle+0x911>
   2e860:	89 f2                	mov    %esi,%edx
   2e862:	48 89 ef             	mov    %rbp,%rdi
   2e865:	8d 6a d0             	lea    -0x30(%rdx),%ebp
   2e868:	83 fd 0a             	cmp    $0xa,%ebp
   2e86b:	0f 83 d5 00 00 00    	jae    2e946 <rustc_demangle::demangle+0x9e6>
   2e871:	49 f7 e0             	mul    %r8
   2e874:	48 89 c2             	mov    %rax,%rdx
   2e877:	89 e8                	mov    %ebp,%eax
   2e879:	0f 90 c3             	seto   %bl
   2e87c:	48 01 d0             	add    %rdx,%rax
   2e87f:	0f 92 c2             	setb   %dl
   2e882:	84 db                	test   %bl,%bl
   2e884:	0f 85 13 fe ff ff    	jne    2e69d <rustc_demangle::demangle+0x73d>
   2e88a:	84 d2                	test   %dl,%dl
   2e88c:	0f 85 0b fe ff ff    	jne    2e69d <rustc_demangle::demangle+0x73d>
   2e892:	48 39 cf             	cmp    %rcx,%rdi
   2e895:	0f 84 02 fe ff ff    	je     2e69d <rustc_demangle::demangle+0x73d>
   2e89b:	48 8d 6f 01          	lea    0x1(%rdi),%rbp
   2e89f:	0f b6 37             	movzbl (%rdi),%esi
   2e8a2:	40 84 f6             	test   %sil,%sil
   2e8a5:	79 b9                	jns    2e860 <rustc_demangle::demangle+0x900>
   2e8a7:	48 39 cd             	cmp    %rcx,%rbp
   2e8aa:	74 44                	je     2e8f0 <rustc_demangle::demangle+0x990>
   2e8ac:	0f b6 57 01          	movzbl 0x1(%rdi),%edx
   2e8b0:	48 83 c7 02          	add    $0x2,%rdi
   2e8b4:	83 e2 3f             	and    $0x3f,%edx
   2e8b7:	89 f5                	mov    %esi,%ebp
   2e8b9:	83 e5 1f             	and    $0x1f,%ebp
   2e8bc:	40 80 fe df          	cmp    $0xdf,%sil
   2e8c0:	76 3e                	jbe    2e900 <rustc_demangle::demangle+0x9a0>
   2e8c2:	48 39 cf             	cmp    %rcx,%rdi
   2e8c5:	74 43                	je     2e90a <rustc_demangle::demangle+0x9aa>
   2e8c7:	44 0f b6 17          	movzbl (%rdi),%r10d
   2e8cb:	48 83 c7 01          	add    $0x1,%rdi
   2e8cf:	41 83 e2 3f          	and    $0x3f,%r10d
   2e8d3:	c1 e2 06             	shl    $0x6,%edx
   2e8d6:	44 09 d2             	or     %r10d,%edx
   2e8d9:	40 80 fe f0          	cmp    $0xf0,%sil
   2e8dd:	72 3d                	jb     2e91c <rustc_demangle::demangle+0x9bc>
   2e8df:	48 39 cf             	cmp    %rcx,%rdi
   2e8e2:	74 42                	je     2e926 <rustc_demangle::demangle+0x9c6>
   2e8e4:	0f b6 37             	movzbl (%rdi),%esi
   2e8e7:	48 83 c7 01          	add    $0x1,%rdi
   2e8eb:	83 e6 3f             	and    $0x3f,%esi
   2e8ee:	eb 38                	jmp    2e928 <rustc_demangle::demangle+0x9c8>
   2e8f0:	31 d2                	xor    %edx,%edx
   2e8f2:	48 89 cf             	mov    %rcx,%rdi
   2e8f5:	89 f5                	mov    %esi,%ebp
   2e8f7:	83 e5 1f             	and    $0x1f,%ebp
   2e8fa:	40 80 fe df          	cmp    $0xdf,%sil
   2e8fe:	77 c2                	ja     2e8c2 <rustc_demangle::demangle+0x962>
   2e900:	c1 e5 06             	shl    $0x6,%ebp
   2e903:	09 ea                	or     %ebp,%edx
   2e905:	e9 5b ff ff ff       	jmpq   2e865 <rustc_demangle::demangle+0x905>
   2e90a:	45 31 d2             	xor    %r10d,%r10d
   2e90d:	48 89 cf             	mov    %rcx,%rdi
   2e910:	c1 e2 06             	shl    $0x6,%edx
   2e913:	44 09 d2             	or     %r10d,%edx
   2e916:	40 80 fe f0          	cmp    $0xf0,%sil
   2e91a:	73 c3                	jae    2e8df <rustc_demangle::demangle+0x97f>
   2e91c:	c1 e5 0c             	shl    $0xc,%ebp
   2e91f:	09 ea                	or     %ebp,%edx
   2e921:	e9 3f ff ff ff       	jmpq   2e865 <rustc_demangle::demangle+0x905>
   2e926:	31 f6                	xor    %esi,%esi
   2e928:	83 e5 07             	and    $0x7,%ebp
   2e92b:	c1 e5 12             	shl    $0x12,%ebp
   2e92e:	c1 e2 06             	shl    $0x6,%edx
   2e931:	09 ea                	or     %ebp,%edx
   2e933:	09 f2                	or     %esi,%edx
   2e935:	81 fa 00 00 11 00    	cmp    $0x110000,%edx
   2e93b:	0f 85 24 ff ff ff    	jne    2e865 <rustc_demangle::demangle+0x905>
   2e941:	e9 57 fd ff ff       	jmpq   2e69d <rustc_demangle::demangle+0x73d>
   2e946:	48 85 c0             	test   %rax,%rax
   2e949:	75 1f                	jne    2e96a <rustc_demangle::demangle+0xa0a>
   2e94b:	49 83 c1 01          	add    $0x1,%r9
   2e94f:	89 d5                	mov    %edx,%ebp
   2e951:	83 fa 45             	cmp    $0x45,%edx
   2e954:	0f 85 f3 fe ff ff    	jne    2e84d <rustc_demangle::demangle+0x8ed>
   2e95a:	e9 a0 fe ff ff       	jmpq   2e7ff <rustc_demangle::demangle+0x89f>
   2e95f:	89 ea                	mov    %ebp,%edx
   2e961:	48 89 f7             	mov    %rsi,%rdi
   2e964:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
   2e968:	74 e1                	je     2e94b <rustc_demangle::demangle+0x9eb>
   2e96a:	48 39 cf             	cmp    %rcx,%rdi
   2e96d:	0f 84 2a fd ff ff    	je     2e69d <rustc_demangle::demangle+0x73d>
   2e973:	48 8d 77 01          	lea    0x1(%rdi),%rsi
   2e977:	0f b6 2f             	movzbl (%rdi),%ebp
   2e97a:	40 84 ed             	test   %bpl,%bpl
   2e97d:	79 e0                	jns    2e95f <rustc_demangle::demangle+0x9ff>
   2e97f:	48 39 ce             	cmp    %rcx,%rsi
   2e982:	74 47                	je     2e9cb <rustc_demangle::demangle+0xa6b>
   2e984:	0f b6 57 01          	movzbl 0x1(%rdi),%edx
   2e988:	48 83 c7 02          	add    $0x2,%rdi
   2e98c:	83 e2 3f             	and    $0x3f,%edx
   2e98f:	48 89 fe             	mov    %rdi,%rsi
   2e992:	89 ef                	mov    %ebp,%edi
   2e994:	83 e7 1f             	and    $0x1f,%edi
   2e997:	40 80 fd df          	cmp    $0xdf,%bpl
   2e99b:	76 3e                	jbe    2e9db <rustc_demangle::demangle+0xa7b>
   2e99d:	48 39 ce             	cmp    %rcx,%rsi
   2e9a0:	74 43                	je     2e9e5 <rustc_demangle::demangle+0xa85>
   2e9a2:	44 0f b6 16          	movzbl (%rsi),%r10d
   2e9a6:	48 83 c6 01          	add    $0x1,%rsi
   2e9aa:	41 83 e2 3f          	and    $0x3f,%r10d
   2e9ae:	c1 e2 06             	shl    $0x6,%edx
   2e9b1:	44 09 d2             	or     %r10d,%edx
   2e9b4:	40 80 fd f0          	cmp    $0xf0,%bpl
   2e9b8:	72 3d                	jb     2e9f7 <rustc_demangle::demangle+0xa97>
   2e9ba:	48 39 ce             	cmp    %rcx,%rsi
   2e9bd:	74 42                	je     2ea01 <rustc_demangle::demangle+0xaa1>
   2e9bf:	0f b6 2e             	movzbl (%rsi),%ebp
   2e9c2:	48 83 c6 01          	add    $0x1,%rsi
   2e9c6:	83 e5 3f             	and    $0x3f,%ebp
   2e9c9:	eb 38                	jmp    2ea03 <rustc_demangle::demangle+0xaa3>
   2e9cb:	31 d2                	xor    %edx,%edx
   2e9cd:	48 89 ce             	mov    %rcx,%rsi
   2e9d0:	89 ef                	mov    %ebp,%edi
   2e9d2:	83 e7 1f             	and    $0x1f,%edi
   2e9d5:	40 80 fd df          	cmp    $0xdf,%bpl
   2e9d9:	77 c2                	ja     2e99d <rustc_demangle::demangle+0xa3d>
   2e9db:	c1 e7 06             	shl    $0x6,%edi
   2e9de:	09 fa                	or     %edi,%edx
   2e9e0:	e9 7c ff ff ff       	jmpq   2e961 <rustc_demangle::demangle+0xa01>
   2e9e5:	45 31 d2             	xor    %r10d,%r10d
   2e9e8:	48 89 ce             	mov    %rcx,%rsi
   2e9eb:	c1 e2 06             	shl    $0x6,%edx
   2e9ee:	44 09 d2             	or     %r10d,%edx
   2e9f1:	40 80 fd f0          	cmp    $0xf0,%bpl
   2e9f5:	73 c3                	jae    2e9ba <rustc_demangle::demangle+0xa5a>
   2e9f7:	c1 e7 0c             	shl    $0xc,%edi
   2e9fa:	09 fa                	or     %edi,%edx
   2e9fc:	e9 60 ff ff ff       	jmpq   2e961 <rustc_demangle::demangle+0xa01>
   2ea01:	31 ed                	xor    %ebp,%ebp
   2ea03:	83 e7 07             	and    $0x7,%edi
   2ea06:	c1 e7 12             	shl    $0x12,%edi
   2ea09:	c1 e2 06             	shl    $0x6,%edx
   2ea0c:	09 fa                	or     %edi,%edx
   2ea0e:	09 ea                	or     %ebp,%edx
   2ea10:	81 fa 00 00 11 00    	cmp    $0x110000,%edx
   2ea16:	0f 85 45 ff ff ff    	jne    2e961 <rustc_demangle::demangle+0xa01>
   2ea1c:	e9 7c fc ff ff       	jmpq   2e69d <rustc_demangle::demangle+0x73d>
   2ea21:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   2ea26:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   2ea2b:	48 39 d1             	cmp    %rdx,%rcx
   2ea2e:	76 2a                	jbe    2ea5a <rustc_demangle::demangle+0xafa>
   2ea30:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   2ea35:	8a 04 10             	mov    (%rax,%rdx,1),%al
   2ea38:	04 bf                	add    $0xbf,%al
   2ea3a:	3c 19                	cmp    $0x19,%al
   2ea3c:	77 1c                	ja     2ea5a <rustc_demangle::demangle+0xafa>
   2ea3e:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   2ea43:	e8 b8 c5 ff ff       	callq  2b000 <rustc_demangle::v0::Parser::skip_path>
   2ea48:	84 c0                	test   %al,%al
   2ea4a:	0f 85 4f fd ff ff    	jne    2e79f <rustc_demangle::demangle+0x83f>
   2ea50:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   2ea55:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   2ea5a:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   2ea5f:	48 85 d2             	test   %rdx,%rdx
   2ea62:	74 15                	je     2ea79 <rustc_demangle::demangle+0xb19>
   2ea64:	48 39 d1             	cmp    %rdx,%rcx
   2ea67:	74 10                	je     2ea79 <rustc_demangle::demangle+0xb19>
   2ea69:	0f 86 14 02 00 00    	jbe    2ec83 <rustc_demangle::demangle+0xd23>
   2ea6f:	80 3c 17 bf          	cmpb   $0xbf,(%rdi,%rdx,1)
   2ea73:	0f 8e 0a 02 00 00    	jle    2ec83 <rustc_demangle::demangle+0xd23>
   2ea79:	48 01 d7             	add    %rdx,%rdi
   2ea7c:	48 29 d1             	sub    %rdx,%rcx
   2ea7f:	bb 01 00 00 00       	mov    $0x1,%ebx
   2ea84:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   2ea89:	48 85 c9             	test   %rcx,%rcx
   2ea8c:	0f 85 7b fd ff ff    	jne    2e80d <rustc_demangle::demangle+0x8ad>
   2ea92:	31 c9                	xor    %ecx,%ecx
   2ea94:	49 89 fe             	mov    %rdi,%r14
   2ea97:	e9 a5 fc ff ff       	jmpq   2e741 <rustc_demangle::demangle+0x7e1>
   2ea9c:	83 c2 85             	add    $0xffffff85,%edx
   2ea9f:	83 fa 03             	cmp    $0x3,%edx
   2eaa2:	0f 87 10 01 00 00    	ja     2ebb8 <rustc_demangle::demangle+0xc58>
   2eaa8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2eaaf:	00 
   2eab0:	4c 39 d0             	cmp    %r10,%rax
   2eab3:	0f 84 eb 00 00 00    	je     2eba4 <rustc_demangle::demangle+0xc44>
   2eab9:	48 8d 50 01          	lea    0x1(%rax),%rdx
   2eabd:	0f b6 28             	movzbl (%rax),%ebp
   2eac0:	40 84 ed             	test   %bpl,%bpl
   2eac3:	78 0b                	js     2ead0 <rustc_demangle::demangle+0xb70>
   2eac5:	48 89 d0             	mov    %rdx,%rax
   2eac8:	89 ea                	mov    %ebp,%edx
   2eaca:	e9 91 00 00 00       	jmpq   2eb60 <rustc_demangle::demangle+0xc00>
   2eacf:	90                   	nop
   2ead0:	4c 39 d2             	cmp    %r10,%rdx
   2ead3:	74 41                	je     2eb16 <rustc_demangle::demangle+0xbb6>
   2ead5:	0f b6 50 01          	movzbl 0x1(%rax),%edx
   2ead9:	48 83 c0 02          	add    $0x2,%rax
   2eadd:	83 e2 3f             	and    $0x3f,%edx
   2eae0:	89 ee                	mov    %ebp,%esi
   2eae2:	83 e6 1f             	and    $0x1f,%esi
   2eae5:	40 80 fd df          	cmp    $0xdf,%bpl
   2eae9:	76 3b                	jbe    2eb26 <rustc_demangle::demangle+0xbc6>
   2eaeb:	4c 39 d0             	cmp    %r10,%rax
   2eaee:	74 3d                	je     2eb2d <rustc_demangle::demangle+0xbcd>
   2eaf0:	0f b6 18             	movzbl (%rax),%ebx
   2eaf3:	48 83 c0 01          	add    $0x1,%rax
   2eaf7:	83 e3 3f             	and    $0x3f,%ebx
   2eafa:	c1 e2 06             	shl    $0x6,%edx
   2eafd:	09 da                	or     %ebx,%edx
   2eaff:	40 80 fd f0          	cmp    $0xf0,%bpl
   2eb03:	72 38                	jb     2eb3d <rustc_demangle::demangle+0xbdd>
   2eb05:	4c 39 d0             	cmp    %r10,%rax
   2eb08:	74 3a                	je     2eb44 <rustc_demangle::demangle+0xbe4>
   2eb0a:	0f b6 28             	movzbl (%rax),%ebp
   2eb0d:	48 83 c0 01          	add    $0x1,%rax
   2eb11:	83 e5 3f             	and    $0x3f,%ebp
   2eb14:	eb 33                	jmp    2eb49 <rustc_demangle::demangle+0xbe9>
   2eb16:	31 d2                	xor    %edx,%edx
   2eb18:	4c 89 d0             	mov    %r10,%rax
   2eb1b:	89 ee                	mov    %ebp,%esi
   2eb1d:	83 e6 1f             	and    $0x1f,%esi
   2eb20:	40 80 fd df          	cmp    $0xdf,%bpl
   2eb24:	77 c5                	ja     2eaeb <rustc_demangle::demangle+0xb8b>
   2eb26:	c1 e6 06             	shl    $0x6,%esi
   2eb29:	09 f2                	or     %esi,%edx
   2eb2b:	eb 33                	jmp    2eb60 <rustc_demangle::demangle+0xc00>
   2eb2d:	31 db                	xor    %ebx,%ebx
   2eb2f:	4c 89 d0             	mov    %r10,%rax
   2eb32:	c1 e2 06             	shl    $0x6,%edx
   2eb35:	09 da                	or     %ebx,%edx
   2eb37:	40 80 fd f0          	cmp    $0xf0,%bpl
   2eb3b:	73 c8                	jae    2eb05 <rustc_demangle::demangle+0xba5>
   2eb3d:	c1 e6 0c             	shl    $0xc,%esi
   2eb40:	09 f2                	or     %esi,%edx
   2eb42:	eb 1c                	jmp    2eb60 <rustc_demangle::demangle+0xc00>
   2eb44:	31 ed                	xor    %ebp,%ebp
   2eb46:	4c 89 d0             	mov    %r10,%rax
   2eb49:	83 e6 07             	and    $0x7,%esi
   2eb4c:	c1 e6 12             	shl    $0x12,%esi
   2eb4f:	c1 e2 06             	shl    $0x6,%edx
   2eb52:	09 f2                	or     %esi,%edx
   2eb54:	09 ea                	or     %ebp,%edx
   2eb56:	81 fa 00 00 11 00    	cmp    $0x110000,%edx
   2eb5c:	74 46                	je     2eba4 <rustc_demangle::demangle+0xc44>
   2eb5e:	66 90                	xchg   %ax,%ax
   2eb60:	8d 72 df             	lea    -0x21(%rdx),%esi
   2eb63:	83 fe 0f             	cmp    $0xf,%esi
   2eb66:	0f 82 44 ff ff ff    	jb     2eab0 <rustc_demangle::demangle+0xb50>
   2eb6c:	8d 72 d0             	lea    -0x30(%rdx),%esi
   2eb6f:	83 fe 0a             	cmp    $0xa,%esi
   2eb72:	0f 82 38 ff ff ff    	jb     2eab0 <rustc_demangle::demangle+0xb50>
   2eb78:	89 d6                	mov    %edx,%esi
   2eb7a:	83 e6 df             	and    $0xffffffdf,%esi
   2eb7d:	83 c6 bf             	add    $0xffffffbf,%esi
   2eb80:	83 fe 1a             	cmp    $0x1a,%esi
   2eb83:	0f 82 27 ff ff ff    	jb     2eab0 <rustc_demangle::demangle+0xb50>
   2eb89:	8d 72 c6             	lea    -0x3a(%rdx),%esi
   2eb8c:	83 fe 26             	cmp    $0x26,%esi
   2eb8f:	0f 87 07 ff ff ff    	ja     2ea9c <rustc_demangle::demangle+0xb3c>
   2eb95:	49 0f a3 f0          	bt     %rsi,%r8
   2eb99:	0f 82 11 ff ff ff    	jb     2eab0 <rustc_demangle::demangle+0xb50>
   2eb9f:	e9 f8 fe ff ff       	jmpq   2ea9c <rustc_demangle::demangle+0xb3c>
   2eba4:	49 89 fe             	mov    %rdi,%r14
   2eba7:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   2ebac:	e9 90 fb ff ff       	jmpq   2e741 <rustc_demangle::demangle+0x7e1>
   2ebb1:	4c 8d 35 a9 ad 00 00 	lea    0xada9(%rip),%r14        # 39961 <str.6+0x2641>
   2ebb8:	bb 02 00 00 00       	mov    $0x2,%ebx
   2ebbd:	31 c9                	xor    %ecx,%ecx
   2ebbf:	e9 7d fb ff ff       	jmpq   2e741 <rustc_demangle::demangle+0x7e1>
   2ebc4:	48 01 cf             	add    %rcx,%rdi
   2ebc7:	48 39 f7             	cmp    %rsi,%rdi
   2ebca:	48 0f 42 fe          	cmovb  %rsi,%rdi
   2ebce:	48 8d 15 a3 61 01 00 	lea    0x161a3(%rip),%rdx        # 44d78 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1820>
   2ebd5:	ff 15 bd 70 01 00    	callq  *0x170bd(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   2ebdb:	0f 0b                	ud2    
   2ebdd:	48 8d 15 ac 61 01 00 	lea    0x161ac(%rip),%rdx        # 44d90 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1838>
   2ebe4:	4c 89 e6             	mov    %r12,%rsi
   2ebe7:	ff 15 ab 70 01 00    	callq  *0x170ab(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   2ebed:	0f 0b                	ud2    
   2ebef:	48 8d 15 b2 61 01 00 	lea    0x161b2(%rip),%rdx        # 44da8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1850>
   2ebf6:	48 89 df             	mov    %rbx,%rdi
   2ebf9:	ff 15 99 70 01 00    	callq  *0x17099(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   2ebff:	0f 0b                	ud2    
   2ec01:	4c 8d 05 d8 61 01 00 	lea    0x161d8(%rip),%r8        # 44de0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1888>
   2ec08:	48 89 ce             	mov    %rcx,%rsi
   2ec0b:	ff 15 27 72 01 00    	callq  *0x17227(%rip)        # 45e38 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   2ec11:	0f 0b                	ud2    
   2ec13:	4c 01 f9             	add    %r15,%rcx
   2ec16:	48 39 f1             	cmp    %rsi,%rcx
   2ec19:	48 0f 42 ce          	cmovb  %rsi,%rcx
   2ec1d:	48 8d 15 54 61 01 00 	lea    0x16154(%rip),%rdx        # 44d78 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1820>
   2ec24:	48 89 cf             	mov    %rcx,%rdi
   2ec27:	ff 15 6b 70 01 00    	callq  *0x1706b(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   2ec2d:	0f 0b                	ud2    
   2ec2f:	4c 8d 05 c2 64 01 00 	lea    0x164c2(%rip),%r8        # 450f8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1ba0>
   2ec36:	eb 3a                	jmp    2ec72 <rustc_demangle::demangle+0xd12>
   2ec38:	4c 8d 05 d1 64 01 00 	lea    0x164d1(%rip),%r8        # 45110 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1bb8>
   2ec3f:	4c 89 df             	mov    %r11,%rdi
   2ec42:	4c 89 e6             	mov    %r12,%rsi
   2ec45:	31 d2                	xor    %edx,%edx
   2ec47:	ff 15 eb 71 01 00    	callq  *0x171eb(%rip)        # 45e38 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   2ec4d:	0f 0b                	ud2    
   2ec4f:	4c 8d 05 82 63 01 00 	lea    0x16382(%rip),%r8        # 44fd8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1a80>
   2ec56:	eb 15                	jmp    2ec6d <rustc_demangle::demangle+0xd0d>
   2ec58:	4c 8d 05 91 63 01 00 	lea    0x16391(%rip),%r8        # 44ff0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1a98>
   2ec5f:	ba 01 00 00 00       	mov    $0x1,%edx
   2ec64:	eb 0c                	jmp    2ec72 <rustc_demangle::demangle+0xd12>
   2ec66:	4c 8d 05 bb 61 01 00 	lea    0x161bb(%rip),%r8        # 44e28 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x18d0>
   2ec6d:	ba 02 00 00 00       	mov    $0x2,%edx
   2ec72:	4c 89 df             	mov    %r11,%rdi
   2ec75:	4c 89 e6             	mov    %r12,%rsi
   2ec78:	4c 89 e1             	mov    %r12,%rcx
   2ec7b:	ff 15 b7 71 01 00    	callq  *0x171b7(%rip)        # 45e38 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   2ec81:	0f 0b                	ud2    
   2ec83:	4c 8d 05 96 63 01 00 	lea    0x16396(%rip),%r8        # 45020 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1ac8>
   2ec8a:	48 89 ce             	mov    %rcx,%rsi
   2ec8d:	ff 15 a5 71 01 00    	callq  *0x171a5(%rip)        # 45e38 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   2ec93:	0f 0b                	ud2    
   2ec95:	4c 8d 05 6c 63 01 00 	lea    0x1636c(%rip),%r8        # 45008 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1ab0>
   2ec9c:	ba 03 00 00 00       	mov    $0x3,%edx
   2eca1:	eb cf                	jmp    2ec72 <rustc_demangle::demangle+0xd12>
   2eca3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2ecaa:	00 00 00 
   2ecad:	0f 1f 00             	nopl   (%rax)

000000000002ecb0 <rustc_demangle::try_demangle>:
   2ecb0:	53                   	push   %rbx
   2ecb1:	48 83 ec 40          	sub    $0x40,%rsp
   2ecb5:	48 89 fb             	mov    %rdi,%rbx
   2ecb8:	48 89 e7             	mov    %rsp,%rdi
   2ecbb:	ff 15 17 71 01 00    	callq  *0x17117(%rip)        # 45dd8 <_GLOBAL_OFFSET_TABLE_+0x448>
   2ecc1:	48 83 3c 24 02       	cmpq   $0x2,(%rsp)
   2ecc6:	75 10                	jne    2ecd8 <rustc_demangle::try_demangle+0x28>
   2ecc8:	48 c7 03 03 00 00 00 	movq   $0x3,(%rbx)
   2eccf:	48 89 d8             	mov    %rbx,%rax
   2ecd2:	48 83 c4 40          	add    $0x40,%rsp
   2ecd6:	5b                   	pop    %rbx
   2ecd7:	c3                   	retq   
   2ecd8:	0f 10 04 24          	movups (%rsp),%xmm0
   2ecdc:	0f 10 4c 24 10       	movups 0x10(%rsp),%xmm1
   2ece1:	0f 10 54 24 20       	movups 0x20(%rsp),%xmm2
   2ece6:	0f 10 5c 24 30       	movups 0x30(%rsp),%xmm3
   2eceb:	0f 11 5b 30          	movups %xmm3,0x30(%rbx)
   2ecef:	0f 11 53 20          	movups %xmm2,0x20(%rbx)
   2ecf3:	0f 11 4b 10          	movups %xmm1,0x10(%rbx)
   2ecf7:	0f 11 03             	movups %xmm0,(%rbx)
   2ecfa:	48 89 d8             	mov    %rbx,%rax
   2ecfd:	48 83 c4 40          	add    $0x40,%rsp
   2ed01:	5b                   	pop    %rbx
   2ed02:	c3                   	retq   
   2ed03:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2ed0a:	00 00 00 
   2ed0d:	0f 1f 00             	nopl   (%rax)

000000000002ed10 <rustc_demangle::Demangle::as_str>:
   2ed10:	48 8b 47 20          	mov    0x20(%rdi),%rax
   2ed14:	48 8b 57 28          	mov    0x28(%rdi),%rdx
   2ed18:	c3                   	retq   
   2ed19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000002ed20 <<rustc_demangle::Demangle as core::fmt::Debug>::fmt>:
   2ed20:	41 56                	push   %r14
   2ed22:	53                   	push   %rbx
   2ed23:	48 83 ec 28          	sub    $0x28,%rsp
   2ed27:	49 89 f6             	mov    %rsi,%r14
   2ed2a:	48 89 fb             	mov    %rdi,%rbx
   2ed2d:	48 8b 07             	mov    (%rdi),%rax
   2ed30:	48 83 f8 02          	cmp    $0x2,%rax
   2ed34:	75 1b                	jne    2ed51 <<rustc_demangle::Demangle as core::fmt::Debug>::fmt+0x31>
   2ed36:	48 8b 73 20          	mov    0x20(%rbx),%rsi
   2ed3a:	48 8b 53 28          	mov    0x28(%rbx),%rdx
   2ed3e:	4c 89 f7             	mov    %r14,%rdi
   2ed41:	ff 15 01 6d 01 00    	callq  *0x16d01(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2ed47:	89 c1                	mov    %eax,%ecx
   2ed49:	b0 01                	mov    $0x1,%al
   2ed4b:	84 c9                	test   %cl,%cl
   2ed4d:	74 50                	je     2ed9f <<rustc_demangle::Demangle as core::fmt::Debug>::fmt+0x7f>
   2ed4f:	eb 5f                	jmp    2edb0 <<rustc_demangle::Demangle as core::fmt::Debug>::fmt+0x90>
   2ed51:	48 8d 7b 08          	lea    0x8(%rbx),%rdi
   2ed55:	83 f8 01             	cmp    $0x1,%eax
   2ed58:	75 34                	jne    2ed8e <<rustc_demangle::Demangle as core::fmt::Debug>::fmt+0x6e>
   2ed5a:	0f 10 07             	movups (%rdi),%xmm0
   2ed5d:	0f 29 04 24          	movaps %xmm0,(%rsp)
   2ed61:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   2ed68:	00 00 
   2ed6a:	4c 89 74 24 18       	mov    %r14,0x18(%rsp)
   2ed6f:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%rsp)
   2ed76:	00 
   2ed77:	48 89 e7             	mov    %rsp,%rdi
   2ed7a:	be 01 00 00 00       	mov    $0x1,%esi
   2ed7f:	e8 0c d0 ff ff       	callq  2bd90 <rustc_demangle::v0::Printer::print_path>
   2ed84:	89 c1                	mov    %eax,%ecx
   2ed86:	b0 01                	mov    $0x1,%al
   2ed88:	84 c9                	test   %cl,%cl
   2ed8a:	74 13                	je     2ed9f <<rustc_demangle::Demangle as core::fmt::Debug>::fmt+0x7f>
   2ed8c:	eb 22                	jmp    2edb0 <<rustc_demangle::Demangle as core::fmt::Debug>::fmt+0x90>
   2ed8e:	4c 89 f6             	mov    %r14,%rsi
   2ed91:	ff 15 49 70 01 00    	callq  *0x17049(%rip)        # 45de0 <_GLOBAL_OFFSET_TABLE_+0x450>
   2ed97:	89 c1                	mov    %eax,%ecx
   2ed99:	b0 01                	mov    $0x1,%al
   2ed9b:	84 c9                	test   %cl,%cl
   2ed9d:	75 11                	jne    2edb0 <<rustc_demangle::Demangle as core::fmt::Debug>::fmt+0x90>
   2ed9f:	48 8b 73 30          	mov    0x30(%rbx),%rsi
   2eda3:	48 8b 53 38          	mov    0x38(%rbx),%rdx
   2eda7:	4c 89 f7             	mov    %r14,%rdi
   2edaa:	ff 15 98 6c 01 00    	callq  *0x16c98(%rip)        # 45a48 <_GLOBAL_OFFSET_TABLE_+0xb8>
   2edb0:	48 83 c4 28          	add    $0x28,%rsp
   2edb4:	5b                   	pop    %rbx
   2edb5:	41 5e                	pop    %r14
   2edb7:	c3                   	retq   
   2edb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2edbf:	00 

000000000002edc0 <core::ptr::drop_in_place>:
   2edc0:	48 89 f8             	mov    %rdi,%rax
   2edc3:	48 8b 3f             	mov    (%rdi),%rdi
   2edc6:	48 85 ff             	test   %rdi,%rdi
   2edc9:	74 14                	je     2eddf <core::ptr::drop_in_place+0x1f>
   2edcb:	48 8b 70 08          	mov    0x8(%rax),%rsi
   2edcf:	48 85 f6             	test   %rsi,%rsi
   2edd2:	74 0b                	je     2eddf <core::ptr::drop_in_place+0x1f>
   2edd4:	ba 01 00 00 00       	mov    $0x1,%edx
   2edd9:	ff 25 21 6e 01 00    	jmpq   *0x16e21(%rip)        # 45c00 <_GLOBAL_OFFSET_TABLE_+0x270>
   2eddf:	c3                   	retq   

000000000002ede0 <alloc::alloc::handle_alloc_error>:
   2ede0:	50                   	push   %rax
   2ede1:	ff 15 61 6f 01 00    	callq  *0x16f61(%rip)        # 45d48 <_GLOBAL_OFFSET_TABLE_+0x3b8>
   2ede7:	0f 0b                	ud2    
   2ede9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000002edf0 <__rg_oom>:
   2edf0:	50                   	push   %rax
   2edf1:	ff 15 f1 6e 01 00    	callq  *0x16ef1(%rip)        # 45ce8 <_GLOBAL_OFFSET_TABLE_+0x358>
   2edf7:	0f 0b                	ud2    
   2edf9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000002ee00 <alloc::collections::btree::node::splitpoint>:
   2ee00:	48 89 f8             	mov    %rdi,%rax
   2ee03:	48 83 fe 05          	cmp    $0x5,%rsi
   2ee07:	73 13                	jae    2ee1c <alloc::collections::btree::node::splitpoint+0x1c>
   2ee09:	ba 04 00 00 00       	mov    $0x4,%edx
   2ee0e:	31 c9                	xor    %ecx,%ecx
   2ee10:	48 89 10             	mov    %rdx,(%rax)
   2ee13:	48 89 48 08          	mov    %rcx,0x8(%rax)
   2ee17:	48 89 70 10          	mov    %rsi,0x10(%rax)
   2ee1b:	c3                   	retq   
   2ee1c:	48 83 fe 05          	cmp    $0x5,%rsi
   2ee20:	74 1e                	je     2ee40 <alloc::collections::btree::node::splitpoint+0x40>
   2ee22:	48 83 fe 06          	cmp    $0x6,%rsi
   2ee26:	75 29                	jne    2ee51 <alloc::collections::btree::node::splitpoint+0x51>
   2ee28:	b9 01 00 00 00       	mov    $0x1,%ecx
   2ee2d:	ba 05 00 00 00       	mov    $0x5,%edx
   2ee32:	31 f6                	xor    %esi,%esi
   2ee34:	48 89 10             	mov    %rdx,(%rax)
   2ee37:	48 89 48 08          	mov    %rcx,0x8(%rax)
   2ee3b:	48 89 70 10          	mov    %rsi,0x10(%rax)
   2ee3f:	c3                   	retq   
   2ee40:	31 c9                	xor    %ecx,%ecx
   2ee42:	48 89 f2             	mov    %rsi,%rdx
   2ee45:	48 89 10             	mov    %rdx,(%rax)
   2ee48:	48 89 48 08          	mov    %rcx,0x8(%rax)
   2ee4c:	48 89 70 10          	mov    %rsi,0x10(%rax)
   2ee50:	c3                   	retq   
   2ee51:	48 83 c6 f9          	add    $0xfffffffffffffff9,%rsi
   2ee55:	b9 01 00 00 00       	mov    $0x1,%ecx
   2ee5a:	ba 06 00 00 00       	mov    $0x6,%edx
   2ee5f:	48 89 10             	mov    %rdx,(%rax)
   2ee62:	48 89 48 08          	mov    %rcx,0x8(%rax)
   2ee66:	48 89 70 10          	mov    %rsi,0x10(%rax)
   2ee6a:	c3                   	retq   
   2ee6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000002ee70 <alloc::raw_vec::capacity_overflow>:
   2ee70:	50                   	push   %rax
   2ee71:	48 8d 3d 96 ab 00 00 	lea    0xab96(%rip),%rdi        # 39a0e <str.6+0x26ee>
   2ee78:	48 8d 15 a9 62 01 00 	lea    0x162a9(%rip),%rdx        # 45128 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1bd0>
   2ee7f:	be 11 00 00 00       	mov    $0x11,%esi
   2ee84:	ff 15 56 70 01 00    	callq  *0x17056(%rip)        # 45ee0 <_GLOBAL_OFFSET_TABLE_+0x550>
   2ee8a:	0f 0b                	ud2    
   2ee8c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000002ee90 <alloc::string::String::from_utf8_lossy>:
   2ee90:	55                   	push   %rbp
   2ee91:	41 57                	push   %r15
   2ee93:	41 56                	push   %r14
   2ee95:	41 55                	push   %r13
   2ee97:	41 54                	push   %r12
   2ee99:	53                   	push   %rbx
   2ee9a:	48 83 ec 78          	sub    $0x78,%rsp
   2ee9e:	49 89 d7             	mov    %rdx,%r15
   2eea1:	48 89 fd             	mov    %rdi,%rbp
   2eea4:	48 89 f7             	mov    %rsi,%rdi
   2eea7:	48 89 d6             	mov    %rdx,%rsi
   2eeaa:	ff 15 f0 6e 01 00    	callq  *0x16ef0(%rip)        # 45da0 <_GLOBAL_OFFSET_TABLE_+0x410>
   2eeb0:	48 89 c7             	mov    %rax,%rdi
   2eeb3:	48 89 d6             	mov    %rdx,%rsi
   2eeb6:	ff 15 7c 6d 01 00    	callq  *0x16d7c(%rip)        # 45c38 <_GLOBAL_OFFSET_TABLE_+0x2a8>
   2eebc:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   2eec1:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
   2eec6:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   2eecb:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
   2eed0:	ff 15 e2 70 01 00    	callq  *0x170e2(%rip)        # 45fb8 <_GLOBAL_OFFSET_TABLE_+0x628>
   2eed6:	4c 8b 6c 24 40       	mov    0x40(%rsp),%r13
   2eedb:	4d 85 ed             	test   %r13,%r13
   2eede:	74 10                	je     2eef0 <alloc::string::String::from_utf8_lossy+0x60>
   2eee0:	48 8b 5c 24 48       	mov    0x48(%rsp),%rbx
   2eee5:	4c 39 fb             	cmp    %r15,%rbx
   2eee8:	75 25                	jne    2ef0f <alloc::string::String::from_utf8_lossy+0x7f>
   2eeea:	4c 89 6d 08          	mov    %r13,0x8(%rbp)
   2eeee:	eb 0e                	jmp    2eefe <alloc::string::String::from_utf8_lossy+0x6e>
   2eef0:	48 8d 05 fb aa 00 00 	lea    0xaafb(%rip),%rax        # 399f2 <str.6+0x26d2>
   2eef7:	48 89 45 08          	mov    %rax,0x8(%rbp)
   2eefb:	45 31 ff             	xor    %r15d,%r15d
   2eefe:	4c 89 7d 10          	mov    %r15,0x10(%rbp)
   2ef02:	48 c7 45 00 00 00 00 	movq   $0x0,0x0(%rbp)
   2ef09:	00 
   2ef0a:	e9 39 03 00 00       	jmpq   2f248 <alloc::string::String::from_utf8_lossy+0x3b8>
   2ef0f:	48 89 6c 24 30       	mov    %rbp,0x30(%rsp)
   2ef14:	4c 8b 64 24 58       	mov    0x58(%rsp),%r12
   2ef19:	4d 85 ff             	test   %r15,%r15
   2ef1c:	74 1c                	je     2ef3a <alloc::string::String::from_utf8_lossy+0xaa>
   2ef1e:	be 01 00 00 00       	mov    $0x1,%esi
   2ef23:	4c 89 ff             	mov    %r15,%rdi
   2ef26:	ff 15 5c 6c 01 00    	callq  *0x16c5c(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   2ef2c:	48 85 c0             	test   %rax,%rax
   2ef2f:	0f 84 45 03 00 00    	je     2f27a <alloc::string::String::from_utf8_lossy+0x3ea>
   2ef35:	48 89 c7             	mov    %rax,%rdi
   2ef38:	eb 08                	jmp    2ef42 <alloc::string::String::from_utf8_lossy+0xb2>
   2ef3a:	bf 01 00 00 00       	mov    $0x1,%edi
   2ef3f:	45 31 ff             	xor    %r15d,%r15d
   2ef42:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   2ef47:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
   2ef4c:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   2ef53:	00 00 
   2ef55:	49 39 df             	cmp    %rbx,%r15
   2ef58:	73 5a                	jae    2efb4 <alloc::string::String::from_utf8_lossy+0x124>
   2ef5a:	4b 8d 04 3f          	lea    (%r15,%r15,1),%rax
   2ef5e:	48 39 d8             	cmp    %rbx,%rax
   2ef61:	48 0f 46 c3          	cmovbe %rbx,%rax
   2ef65:	48 83 f8 08          	cmp    $0x8,%rax
   2ef69:	41 be 08 00 00 00    	mov    $0x8,%r14d
   2ef6f:	4c 0f 47 f0          	cmova  %rax,%r14
   2ef73:	4d 85 ff             	test   %r15,%r15
   2ef76:	74 18                	je     2ef90 <alloc::string::String::from_utf8_lossy+0x100>
   2ef78:	48 85 ff             	test   %rdi,%rdi
   2ef7b:	74 13                	je     2ef90 <alloc::string::String::from_utf8_lossy+0x100>
   2ef7d:	ba 01 00 00 00       	mov    $0x1,%edx
   2ef82:	4c 89 fe             	mov    %r15,%rsi
   2ef85:	4c 89 f1             	mov    %r14,%rcx
   2ef88:	ff 15 ea 6f 01 00    	callq  *0x16fea(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
   2ef8e:	eb 0e                	jmp    2ef9e <alloc::string::String::from_utf8_lossy+0x10e>
   2ef90:	be 01 00 00 00       	mov    $0x1,%esi
   2ef95:	4c 89 f7             	mov    %r14,%rdi
   2ef98:	ff 15 ea 6b 01 00    	callq  *0x16bea(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   2ef9e:	48 89 c7             	mov    %rax,%rdi
   2efa1:	48 85 c0             	test   %rax,%rax
   2efa4:	0f 84 e0 02 00 00    	je     2f28a <alloc::string::String::from_utf8_lossy+0x3fa>
   2efaa:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   2efaf:	4c 89 74 24 10       	mov    %r14,0x10(%rsp)
   2efb4:	4c 89 ee             	mov    %r13,%rsi
   2efb7:	48 89 da             	mov    %rbx,%rdx
   2efba:	ff 15 40 6d 01 00    	callq  *0x16d40(%rip)        # 45d00 <memcpy@GLIBC_2.14>
   2efc0:	48 03 5c 24 18       	add    0x18(%rsp),%rbx
   2efc5:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   2efca:	4d 85 e4             	test   %r12,%r12
   2efcd:	0f 84 a0 00 00 00    	je     2f073 <alloc::string::String::from_utf8_lossy+0x1e3>
   2efd3:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   2efd8:	48 89 f0             	mov    %rsi,%rax
   2efdb:	48 29 d8             	sub    %rbx,%rax
   2efde:	48 83 f8 03          	cmp    $0x3,%rax
   2efe2:	73 44                	jae    2f028 <alloc::string::String::from_utf8_lossy+0x198>
   2efe4:	48 89 d8             	mov    %rbx,%rax
   2efe7:	48 83 c0 03          	add    $0x3,%rax
   2efeb:	0f 82 a9 02 00 00    	jb     2f29a <alloc::string::String::from_utf8_lossy+0x40a>
   2eff1:	48 8d 0c 36          	lea    (%rsi,%rsi,1),%rcx
   2eff5:	48 39 c1             	cmp    %rax,%rcx
   2eff8:	48 0f 47 c1          	cmova  %rcx,%rax
   2effc:	48 83 f8 08          	cmp    $0x8,%rax
   2f000:	bd 08 00 00 00       	mov    $0x8,%ebp
   2f005:	48 0f 47 e8          	cmova  %rax,%rbp
   2f009:	48 85 f6             	test   %rsi,%rsi
   2f00c:	74 21                	je     2f02f <alloc::string::String::from_utf8_lossy+0x19f>
   2f00e:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   2f013:	48 85 ff             	test   %rdi,%rdi
   2f016:	74 17                	je     2f02f <alloc::string::String::from_utf8_lossy+0x19f>
   2f018:	ba 01 00 00 00       	mov    $0x1,%edx
   2f01d:	48 89 e9             	mov    %rbp,%rcx
   2f020:	ff 15 52 6f 01 00    	callq  *0x16f52(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
   2f026:	eb 15                	jmp    2f03d <alloc::string::String::from_utf8_lossy+0x1ad>
   2f028:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   2f02d:	eb 21                	jmp    2f050 <alloc::string::String::from_utf8_lossy+0x1c0>
   2f02f:	be 01 00 00 00       	mov    $0x1,%esi
   2f034:	48 89 ef             	mov    %rbp,%rdi
   2f037:	ff 15 4b 6b 01 00    	callq  *0x16b4b(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   2f03d:	48 85 c0             	test   %rax,%rax
   2f040:	0f 84 5c 02 00 00    	je     2f2a2 <alloc::string::String::from_utf8_lossy+0x412>
   2f046:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   2f04b:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
   2f050:	8a 0d cb a9 00 00    	mov    0xa9cb(%rip),%cl        # 39a21 <str.6+0x2701>
   2f056:	88 4c 18 02          	mov    %cl,0x2(%rax,%rbx,1)
   2f05a:	0f b7 0d be a9 00 00 	movzwl 0xa9be(%rip),%ecx        # 39a1f <str.6+0x26ff>
   2f061:	66 89 0c 18          	mov    %cx,(%rax,%rbx,1)
   2f065:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   2f06a:	48 83 c3 03          	add    $0x3,%rbx
   2f06e:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   2f073:	0f 28 44 24 20       	movaps 0x20(%rsp),%xmm0
   2f078:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
   2f07d:	4c 8d 6c 24 40       	lea    0x40(%rsp),%r13
   2f082:	4c 8d 64 24 60       	lea    0x60(%rsp),%r12
   2f087:	4c 8d 3d d2 39 00 00 	lea    0x39d2(%rip),%r15        # 32a60 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next>
   2f08e:	eb 2b                	jmp    2f0bb <alloc::string::String::from_utf8_lossy+0x22b>
   2f090:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   2f095:	0f b6 0d 85 a9 00 00 	movzbl 0xa985(%rip),%ecx        # 39a21 <str.6+0x2701>
   2f09c:	42 88 4c 30 02       	mov    %cl,0x2(%rax,%r14,1)
   2f0a1:	0f b7 0d 77 a9 00 00 	movzwl 0xa977(%rip),%ecx        # 39a1f <str.6+0x26ff>
   2f0a8:	66 42 89 0c 30       	mov    %cx,(%rax,%r14,1)
   2f0ad:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   2f0b2:	48 83 c3 03          	add    $0x3,%rbx
   2f0b6:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   2f0bb:	4c 89 ef             	mov    %r13,%rdi
   2f0be:	4c 89 e6             	mov    %r12,%rsi
   2f0c1:	41 ff d7             	callq  *%r15
   2f0c4:	48 8b 6c 24 40       	mov    0x40(%rsp),%rbp
   2f0c9:	48 85 ed             	test   %rbp,%rbp
   2f0cc:	0f 84 57 01 00 00    	je     2f229 <alloc::string::String::from_utf8_lossy+0x399>
   2f0d2:	4c 8b 74 24 48       	mov    0x48(%rsp),%r14
   2f0d7:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
   2f0dc:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   2f0e1:	48 89 f0             	mov    %rsi,%rax
   2f0e4:	48 29 d8             	sub    %rbx,%rax
   2f0e7:	4c 39 f0             	cmp    %r14,%rax
   2f0ea:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   2f0ef:	73 4f                	jae    2f140 <alloc::string::String::from_utf8_lossy+0x2b0>
   2f0f1:	49 89 df             	mov    %rbx,%r15
   2f0f4:	4c 01 f3             	add    %r14,%rbx
   2f0f7:	0f 82 6d 01 00 00    	jb     2f26a <alloc::string::String::from_utf8_lossy+0x3da>
   2f0fd:	4d 89 ec             	mov    %r13,%r12
   2f100:	48 8d 04 36          	lea    (%rsi,%rsi,1),%rax
   2f104:	48 39 d8             	cmp    %rbx,%rax
   2f107:	48 0f 47 d8          	cmova  %rax,%rbx
   2f10b:	48 83 fb 08          	cmp    $0x8,%rbx
   2f10f:	b8 08 00 00 00       	mov    $0x8,%eax
   2f114:	48 0f 46 d8          	cmovbe %rax,%rbx
   2f118:	48 85 f6             	test   %rsi,%rsi
   2f11b:	74 33                	je     2f150 <alloc::string::String::from_utf8_lossy+0x2c0>
   2f11d:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   2f122:	48 85 ff             	test   %rdi,%rdi
   2f125:	74 29                	je     2f150 <alloc::string::String::from_utf8_lossy+0x2c0>
   2f127:	ba 01 00 00 00       	mov    $0x1,%edx
   2f12c:	48 89 d9             	mov    %rbx,%rcx
   2f12f:	ff 15 43 6e 01 00    	callq  *0x16e43(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
   2f135:	eb 27                	jmp    2f15e <alloc::string::String::from_utf8_lossy+0x2ce>
   2f137:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2f13e:	00 00 
   2f140:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   2f145:	eb 3f                	jmp    2f186 <alloc::string::String::from_utf8_lossy+0x2f6>
   2f147:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2f14e:	00 00 
   2f150:	be 01 00 00 00       	mov    $0x1,%esi
   2f155:	48 89 df             	mov    %rbx,%rdi
   2f158:	ff 15 2a 6a 01 00    	callq  *0x16a2a(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   2f15e:	48 89 c7             	mov    %rax,%rdi
   2f161:	48 85 c0             	test   %rax,%rax
   2f164:	0f 84 f0 00 00 00    	je     2f25a <alloc::string::String::from_utf8_lossy+0x3ca>
   2f16a:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   2f16f:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
   2f174:	4d 89 e5             	mov    %r12,%r13
   2f177:	4c 8d 64 24 60       	lea    0x60(%rsp),%r12
   2f17c:	4c 89 fb             	mov    %r15,%rbx
   2f17f:	4c 8d 3d da 38 00 00 	lea    0x38da(%rip),%r15        # 32a60 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next>
   2f186:	48 01 df             	add    %rbx,%rdi
   2f189:	48 89 ee             	mov    %rbp,%rsi
   2f18c:	4c 89 f2             	mov    %r14,%rdx
   2f18f:	ff 15 6b 6b 01 00    	callq  *0x16b6b(%rip)        # 45d00 <memcpy@GLIBC_2.14>
   2f195:	4c 03 74 24 18       	add    0x18(%rsp),%r14
   2f19a:	4c 89 74 24 18       	mov    %r14,0x18(%rsp)
   2f19f:	4c 89 f3             	mov    %r14,%rbx
   2f1a2:	48 83 7c 24 38 00    	cmpq   $0x0,0x38(%rsp)
   2f1a8:	0f 84 0d ff ff ff    	je     2f0bb <alloc::string::String::from_utf8_lossy+0x22b>
   2f1ae:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   2f1b3:	48 89 f0             	mov    %rsi,%rax
   2f1b6:	4c 29 f0             	sub    %r14,%rax
   2f1b9:	48 83 f8 03          	cmp    $0x3,%rax
   2f1bd:	0f 83 cd fe ff ff    	jae    2f090 <alloc::string::String::from_utf8_lossy+0x200>
   2f1c3:	4c 89 f3             	mov    %r14,%rbx
   2f1c6:	48 83 c3 03          	add    $0x3,%rbx
   2f1ca:	0f 82 a2 00 00 00    	jb     2f272 <alloc::string::String::from_utf8_lossy+0x3e2>
   2f1d0:	48 8d 04 36          	lea    (%rsi,%rsi,1),%rax
   2f1d4:	48 39 d8             	cmp    %rbx,%rax
   2f1d7:	48 0f 47 d8          	cmova  %rax,%rbx
   2f1db:	48 83 fb 08          	cmp    $0x8,%rbx
   2f1df:	b8 08 00 00 00       	mov    $0x8,%eax
   2f1e4:	48 0f 46 d8          	cmovbe %rax,%rbx
   2f1e8:	48 85 f6             	test   %rsi,%rsi
   2f1eb:	74 1a                	je     2f207 <alloc::string::String::from_utf8_lossy+0x377>
   2f1ed:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   2f1f2:	48 85 ff             	test   %rdi,%rdi
   2f1f5:	74 10                	je     2f207 <alloc::string::String::from_utf8_lossy+0x377>
   2f1f7:	ba 01 00 00 00       	mov    $0x1,%edx
   2f1fc:	48 89 d9             	mov    %rbx,%rcx
   2f1ff:	ff 15 73 6d 01 00    	callq  *0x16d73(%rip)        # 45f78 <_GLOBAL_OFFSET_TABLE_+0x5e8>
   2f205:	eb 0e                	jmp    2f215 <alloc::string::String::from_utf8_lossy+0x385>
   2f207:	be 01 00 00 00       	mov    $0x1,%esi
   2f20c:	48 89 df             	mov    %rbx,%rdi
   2f20f:	ff 15 73 69 01 00    	callq  *0x16973(%rip)        # 45b88 <_GLOBAL_OFFSET_TABLE_+0x1f8>
   2f215:	48 85 c0             	test   %rax,%rax
   2f218:	74 40                	je     2f25a <alloc::string::String::from_utf8_lossy+0x3ca>
   2f21a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   2f21f:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
   2f224:	e9 6c fe ff ff       	jmpq   2f095 <alloc::string::String::from_utf8_lossy+0x205>
   2f229:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   2f22e:	48 8b 6c 24 30       	mov    0x30(%rsp),%rbp
   2f233:	48 89 45 18          	mov    %rax,0x18(%rbp)
   2f237:	0f 10 44 24 08       	movups 0x8(%rsp),%xmm0
   2f23c:	0f 11 45 08          	movups %xmm0,0x8(%rbp)
   2f240:	48 c7 45 00 01 00 00 	movq   $0x1,0x0(%rbp)
   2f247:	00 
   2f248:	48 89 e8             	mov    %rbp,%rax
   2f24b:	48 83 c4 78          	add    $0x78,%rsp
   2f24f:	5b                   	pop    %rbx
   2f250:	41 5c                	pop    %r12
   2f252:	41 5d                	pop    %r13
   2f254:	41 5e                	pop    %r14
   2f256:	41 5f                	pop    %r15
   2f258:	5d                   	pop    %rbp
   2f259:	c3                   	retq   
   2f25a:	be 01 00 00 00       	mov    $0x1,%esi
   2f25f:	48 89 df             	mov    %rbx,%rdi
   2f262:	ff 15 c0 68 01 00    	callq  *0x168c0(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   2f268:	0f 0b                	ud2    
   2f26a:	ff 15 78 68 01 00    	callq  *0x16878(%rip)        # 45ae8 <_GLOBAL_OFFSET_TABLE_+0x158>
   2f270:	eb 06                	jmp    2f278 <alloc::string::String::from_utf8_lossy+0x3e8>
   2f272:	ff 15 70 68 01 00    	callq  *0x16870(%rip)        # 45ae8 <_GLOBAL_OFFSET_TABLE_+0x158>
   2f278:	0f 0b                	ud2    
   2f27a:	be 01 00 00 00       	mov    $0x1,%esi
   2f27f:	4c 89 ff             	mov    %r15,%rdi
   2f282:	ff 15 a0 68 01 00    	callq  *0x168a0(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   2f288:	0f 0b                	ud2    
   2f28a:	be 01 00 00 00       	mov    $0x1,%esi
   2f28f:	4c 89 f7             	mov    %r14,%rdi
   2f292:	ff 15 90 68 01 00    	callq  *0x16890(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   2f298:	0f 0b                	ud2    
   2f29a:	ff 15 48 68 01 00    	callq  *0x16848(%rip)        # 45ae8 <_GLOBAL_OFFSET_TABLE_+0x158>
   2f2a0:	eb d6                	jmp    2f278 <alloc::string::String::from_utf8_lossy+0x3e8>
   2f2a2:	be 01 00 00 00       	mov    $0x1,%esi
   2f2a7:	48 89 ef             	mov    %rbp,%rdi
   2f2aa:	ff 15 78 68 01 00    	callq  *0x16878(%rip)        # 45b28 <_GLOBAL_OFFSET_TABLE_+0x198>
   2f2b0:	0f 0b                	ud2    
   2f2b2:	eb 00                	jmp    2f2b4 <alloc::string::String::from_utf8_lossy+0x424>
   2f2b4:	48 89 c3             	mov    %rax,%rbx
   2f2b7:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   2f2bc:	e8 ff fa ff ff       	callq  2edc0 <core::ptr::drop_in_place>
   2f2c1:	48 89 df             	mov    %rbx,%rdi
   2f2c4:	e8 87 5d fd ff       	callq  5050 <_Unwind_Resume@plt>
   2f2c9:	0f 0b                	ud2    
   2f2cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000002f2d0 <alloc::string::<impl core::convert::From<alloc::string::String> for alloc::vec::Vec<u8>>::from>:
   2f2d0:	48 89 f8             	mov    %rdi,%rax
   2f2d3:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
   2f2d7:	48 89 4f 10          	mov    %rcx,0x10(%rdi)
   2f2db:	0f 10 06             	movups (%rsi),%xmm0
   2f2de:	0f 11 07             	movups %xmm0,(%rdi)
   2f2e1:	c3                   	retq   
   2f2e2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2f2e9:	00 00 00 
   2f2ec:	0f 1f 40 00          	nopl   0x0(%rax)

000000000002f2f0 <core::ops::function::FnOnce::call_once>:
   2f2f0:	48 8b 07             	mov    (%rdi),%rax
   2f2f3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2f2fa:	00 00 00 
   2f2fd:	0f 1f 00             	nopl   (%rax)
   2f300:	eb fe                	jmp    2f300 <core::ops::function::FnOnce::call_once+0x10>
   2f302:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2f309:	00 00 00 
   2f30c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000002f310 <core::ptr::drop_in_place>:
   2f310:	c3                   	retq   
   2f311:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2f318:	00 00 00 
   2f31b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000002f320 <core::num::from_str_radix>:
   2f320:	53                   	push   %rbx
   2f321:	48 83 ec 50          	sub    $0x50,%rsp
   2f325:	41 89 d2             	mov    %edx,%r10d
   2f328:	89 54 24 0c          	mov    %edx,0xc(%rsp)
   2f32c:	41 8d 42 fe          	lea    -0x2(%r10),%eax
   2f330:	83 f8 22             	cmp    $0x22,%eax
   2f333:	0f 87 f1 00 00 00    	ja     2f42a <core::num::from_str_radix+0x10a>
   2f339:	41 b9 01 00 00 00    	mov    $0x1,%r9d
   2f33f:	48 85 f6             	test   %rsi,%rsi
   2f342:	74 68                	je     2f3ac <core::num::from_str_radix+0x8c>
   2f344:	80 3f 2b             	cmpb   $0x2b,(%rdi)
   2f347:	75 0a                	jne    2f353 <core::num::from_str_radix+0x33>
   2f349:	48 83 c6 ff          	add    $0xffffffffffffffff,%rsi
   2f34d:	74 5d                	je     2f3ac <core::num::from_str_radix+0x8c>
   2f34f:	48 83 c7 01          	add    $0x1,%rdi
   2f353:	45 31 c0             	xor    %r8d,%r8d
   2f356:	41 83 fa 0b          	cmp    $0xb,%r10d
   2f35a:	73 57                	jae    2f3b3 <core::num::from_str_radix+0x93>
   2f35c:	45 31 db             	xor    %r11d,%r11d
   2f35f:	31 c0                	xor    %eax,%eax
   2f361:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2f368:	00 00 00 
   2f36b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   2f370:	4c 39 de             	cmp    %r11,%rsi
   2f373:	0f 84 8f 00 00 00    	je     2f408 <core::num::from_str_radix+0xe8>
   2f379:	42 0f b6 0c 1f       	movzbl (%rdi,%r11,1),%ecx
   2f37e:	83 c1 d0             	add    $0xffffffd0,%ecx
   2f381:	ba 00 01 00 00       	mov    $0x100,%edx
   2f386:	83 f9 09             	cmp    $0x9,%ecx
   2f389:	0f 87 8c 00 00 00    	ja     2f41b <core::num::from_str_radix+0xfb>
   2f38f:	44 39 d1             	cmp    %r10d,%ecx
   2f392:	0f 83 83 00 00 00    	jae    2f41b <core::num::from_str_radix+0xfb>
   2f398:	41 f7 e2             	mul    %r10d
   2f39b:	ba 00 02 00 00       	mov    $0x200,%edx
   2f3a0:	70 79                	jo     2f41b <core::num::from_str_radix+0xfb>
   2f3a2:	49 83 c3 01          	add    $0x1,%r11
   2f3a6:	01 c8                	add    %ecx,%eax
   2f3a8:	73 c6                	jae    2f370 <core::num::from_str_radix+0x50>
   2f3aa:	eb 6f                	jmp    2f41b <core::num::from_str_radix+0xfb>
   2f3ac:	45 31 c0             	xor    %r8d,%r8d
   2f3af:	31 d2                	xor    %edx,%edx
   2f3b1:	eb 68                	jmp    2f41b <core::num::from_str_radix+0xfb>
   2f3b3:	31 c9                	xor    %ecx,%ecx
   2f3b5:	31 c0                	xor    %eax,%eax
   2f3b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2f3be:	00 00 
   2f3c0:	48 39 ce             	cmp    %rcx,%rsi
   2f3c3:	74 43                	je     2f408 <core::num::from_str_radix+0xe8>
   2f3c5:	0f b6 1c 0f          	movzbl (%rdi,%rcx,1),%ebx
   2f3c9:	44 8d 5b d0          	lea    -0x30(%rbx),%r11d
   2f3cd:	41 83 fb 0a          	cmp    $0xa,%r11d
   2f3d1:	72 1b                	jb     2f3ee <core::num::from_str_radix+0xce>
   2f3d3:	8d 53 9f             	lea    -0x61(%rbx),%edx
   2f3d6:	83 fa 1a             	cmp    $0x1a,%edx
   2f3d9:	73 05                	jae    2f3e0 <core::num::from_str_radix+0xc0>
   2f3db:	83 c3 a9             	add    $0xffffffa9,%ebx
   2f3de:	eb 0b                	jmp    2f3eb <core::num::from_str_radix+0xcb>
   2f3e0:	8d 53 bf             	lea    -0x41(%rbx),%edx
   2f3e3:	83 fa 1a             	cmp    $0x1a,%edx
   2f3e6:	73 2e                	jae    2f416 <core::num::from_str_radix+0xf6>
   2f3e8:	83 c3 c9             	add    $0xffffffc9,%ebx
   2f3eb:	41 89 db             	mov    %ebx,%r11d
   2f3ee:	45 39 d3             	cmp    %r10d,%r11d
   2f3f1:	73 23                	jae    2f416 <core::num::from_str_radix+0xf6>
   2f3f3:	41 f7 e2             	mul    %r10d
   2f3f6:	ba 00 02 00 00       	mov    $0x200,%edx
   2f3fb:	70 1e                	jo     2f41b <core::num::from_str_radix+0xfb>
   2f3fd:	48 83 c1 01          	add    $0x1,%rcx
   2f401:	44 01 d8             	add    %r11d,%eax
   2f404:	73 ba                	jae    2f3c0 <core::num::from_str_radix+0xa0>
   2f406:	eb 13                	jmp    2f41b <core::num::from_str_radix+0xfb>
   2f408:	48 c1 e0 20          	shl    $0x20,%rax
   2f40c:	31 d2                	xor    %edx,%edx
   2f40e:	49 89 c0             	mov    %rax,%r8
   2f411:	45 31 c9             	xor    %r9d,%r9d
   2f414:	eb 05                	jmp    2f41b <core::num::from_str_radix+0xfb>
   2f416:	ba 00 01 00 00       	mov    $0x100,%edx
   2f41b:	4d 09 c8             	or     %r9,%r8
   2f41e:	49 09 d0             	or     %rdx,%r8
   2f421:	4c 89 c0             	mov    %r8,%rax
   2f424:	48 83 c4 50          	add    $0x50,%rsp
   2f428:	5b                   	pop    %rbx
   2f429:	c3                   	retq   
   2f42a:	48 8d 44 24 0c       	lea    0xc(%rsp),%rax
   2f42f:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   2f434:	48 8d 05 55 4f 00 00 	lea    0x4f55(%rip),%rax        # 34390 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt>
   2f43b:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2f440:	48 8d 05 f9 5c 01 00 	lea    0x15cf9(%rip),%rax        # 45140 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1be8>
   2f447:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   2f44c:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
   2f453:	00 00 
   2f455:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   2f45c:	00 00 
   2f45e:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   2f463:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   2f468:	48 c7 44 24 48 01 00 	movq   $0x1,0x48(%rsp)
   2f46f:	00 00 
   2f471:	48 8d 35 d8 5c 01 00 	lea    0x15cd8(%rip),%rsi        # 45150 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1bf8>
   2f478:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
   2f47d:	ff 15 cd 67 01 00    	callq  *0x167cd(%rip)        # 45c50 <_GLOBAL_OFFSET_TABLE_+0x2c0>
   2f483:	0f 0b                	ud2    
   2f485:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2f48c:	00 00 00 
   2f48f:	90                   	nop

000000000002f490 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt>:
   2f490:	41 56                	push   %r14
   2f492:	53                   	push   %rbx
   2f493:	48 83 ec 38          	sub    $0x38,%rsp
   2f497:	48 89 f3             	mov    %rsi,%rbx
   2f49a:	49 89 fe             	mov    %rdi,%r14
   2f49d:	e8 0e 4b 00 00       	callq  33fb0 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt>
   2f4a2:	84 c0                	test   %al,%al
   2f4a4:	75 4a                	jne    2f4f0 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt+0x60>
   2f4a6:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   2f4aa:	48 8b 73 28          	mov    0x28(%rbx),%rsi
   2f4ae:	48 8d 05 b3 5c 01 00 	lea    0x15cb3(%rip),%rax        # 45168 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1c10>
   2f4b5:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   2f4ba:	48 c7 44 24 10 01 00 	movq   $0x1,0x10(%rsp)
   2f4c1:	00 00 
   2f4c3:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   2f4ca:	00 00 
   2f4cc:	48 8d 05 5d a9 00 00 	lea    0xa95d(%rip),%rax        # 39e30 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x2e0>
   2f4d3:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   2f4d8:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   2f4df:	00 00 
   2f4e1:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   2f4e6:	ff 15 14 69 01 00    	callq  *0x16914(%rip)        # 45e00 <_GLOBAL_OFFSET_TABLE_+0x470>
   2f4ec:	84 c0                	test   %al,%al
   2f4ee:	74 0a                	je     2f4fa <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt+0x6a>
   2f4f0:	b0 01                	mov    $0x1,%al
   2f4f2:	48 83 c4 38          	add    $0x38,%rsp
   2f4f6:	5b                   	pop    %rbx
   2f4f7:	41 5e                	pop    %r14
   2f4f9:	c3                   	retq   
   2f4fa:	49 83 c6 08          	add    $0x8,%r14
   2f4fe:	4c 89 f7             	mov    %r14,%rdi
   2f501:	48 89 de             	mov    %rbx,%rsi
   2f504:	48 83 c4 38          	add    $0x38,%rsp
   2f508:	5b                   	pop    %rbx
   2f509:	41 5e                	pop    %r14
   2f50b:	e9 a0 4a 00 00       	jmpq   33fb0 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt>

000000000002f510 <<T as core::any::Any>::type_id>:
   2f510:	48 b8 06 bb 17 03 a1 	movabs $0x39682a10317bb06,%rax
   2f517:	82 96 03 
   2f51a:	c3                   	retq   
   2f51b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000002f520 <<core::cell::BorrowError as core::fmt::Debug>::fmt>:
   2f520:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
   2f524:	48 8b 46 28          	mov    0x28(%rsi),%rax
   2f528:	48 8b 40 18          	mov    0x18(%rax),%rax
   2f52c:	48 8d 35 81 a9 00 00 	lea    0xa981(%rip),%rsi        # 39eb4 <str.1+0x74>
   2f533:	ba 0b 00 00 00       	mov    $0xb,%edx
   2f538:	ff e0                	jmpq   *%rax
   2f53a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000002f540 <<core::cell::BorrowMutError as core::fmt::Debug>::fmt>:
   2f540:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
   2f544:	48 8b 46 28          	mov    0x28(%rsi),%rax
   2f548:	48 8b 40 18          	mov    0x18(%rax),%rax
   2f54c:	48 8d 35 6c a9 00 00 	lea    0xa96c(%rip),%rsi        # 39ebf <str.1+0x7f>
   2f553:	ba 0e 00 00 00       	mov    $0xe,%edx
   2f558:	ff e0                	jmpq   *%rax
   2f55a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000002f560 <<core::char::EscapeDebug as core::iter::traits::iterator::Iterator>::next>:
   2f560:	8b 0f                	mov    (%rdi),%ecx
   2f562:	b8 00 00 11 00       	mov    $0x110000,%eax
   2f567:	48 8d 15 0a a7 00 00 	lea    0xa70a(%rip),%rdx        # 39c78 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x128>
   2f56e:	48 63 0c 8a          	movslq (%rdx,%rcx,4),%rcx
   2f572:	48 01 d1             	add    %rdx,%rcx
   2f575:	ff e1                	jmpq   *%rcx
   2f577:	8b 47 04             	mov    0x4(%rdi),%eax
   2f57a:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
   2f580:	c3                   	retq   
   2f581:	c7 07 01 00 00 00    	movl   $0x1,(%rdi)
   2f587:	b8 5c 00 00 00       	mov    $0x5c,%eax
   2f58c:	c3                   	retq   
   2f58d:	0f b6 4f 14          	movzbl 0x14(%rdi),%ecx
   2f591:	48 8d 15 f0 a6 00 00 	lea    0xa6f0(%rip),%rdx        # 39c88 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x138>
   2f598:	48 63 0c 8a          	movslq (%rdx,%rcx,4),%rcx
   2f59c:	48 01 d1             	add    %rdx,%rcx
   2f59f:	ff e1                	jmpq   *%rcx
   2f5a1:	c6 47 14 00          	movb   $0x0,0x14(%rdi)
   2f5a5:	b8 7d 00 00 00       	mov    $0x7d,%eax
   2f5aa:	c3                   	retq   
   2f5ab:	8b 77 10             	mov    0x10(%rdi),%esi
   2f5ae:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   2f5b2:	8d 0c 95 00 00 00 00 	lea    0x0(,%rdx,4),%ecx
   2f5b9:	d3 ee                	shr    %cl,%esi
   2f5bb:	83 e6 0f             	and    $0xf,%esi
   2f5be:	40 80 fe 0a          	cmp    $0xa,%sil
   2f5c2:	b9 30 00 00 00       	mov    $0x30,%ecx
   2f5c7:	b8 57 00 00 00       	mov    $0x57,%eax
   2f5cc:	0f 42 c1             	cmovb  %ecx,%eax
   2f5cf:	01 f0                	add    %esi,%eax
   2f5d1:	48 85 d2             	test   %rdx,%rdx
   2f5d4:	74 27                	je     2f5fd <<core::char::EscapeDebug as core::iter::traits::iterator::Iterator>::next+0x9d>
   2f5d6:	48 83 c2 ff          	add    $0xffffffffffffffff,%rdx
   2f5da:	48 89 57 08          	mov    %rdx,0x8(%rdi)
   2f5de:	c3                   	retq   
   2f5df:	c6 47 14 02          	movb   $0x2,0x14(%rdi)
   2f5e3:	b8 7b 00 00 00       	mov    $0x7b,%eax
   2f5e8:	c3                   	retq   
   2f5e9:	c6 47 14 03          	movb   $0x3,0x14(%rdi)
   2f5ed:	b8 75 00 00 00       	mov    $0x75,%eax
   2f5f2:	c3                   	retq   
   2f5f3:	c6 47 14 04          	movb   $0x4,0x14(%rdi)
   2f5f7:	b8 5c 00 00 00       	mov    $0x5c,%eax
   2f5fc:	c3                   	retq   
   2f5fd:	c6 47 14 01          	movb   $0x1,0x14(%rdi)
   2f601:	c3                   	retq   
   2f602:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2f609:	00 00 00 
   2f60c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000002f610 <core::option::expect_failed>:
   2f610:	48 83 ec 58          	sub    $0x58,%rsp
   2f614:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   2f619:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   2f61e:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   2f623:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2f628:	48 8d 05 f1 52 00 00 	lea    0x52f1(%rip),%rax        # 34920 <<&T as core::fmt::Display>::fmt>
   2f62f:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   2f634:	48 8d 05 3d 5b 01 00 	lea    0x15b3d(%rip),%rax        # 45178 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1c20>
   2f63b:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   2f640:	48 c7 44 24 30 01 00 	movq   $0x1,0x30(%rsp)
   2f647:	00 00 
   2f649:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   2f650:	00 00 
   2f652:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
   2f657:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   2f65c:	48 c7 44 24 50 01 00 	movq   $0x1,0x50(%rsp)
   2f663:	00 00 
   2f665:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
   2f66a:	48 89 d6             	mov    %rdx,%rsi
   2f66d:	ff 15 dd 65 01 00    	callq  *0x165dd(%rip)        # 45c50 <_GLOBAL_OFFSET_TABLE_+0x2c0>
   2f673:	0f 0b                	ud2    
   2f675:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2f67c:	00 00 00 
   2f67f:	90                   	nop

000000000002f680 <core::option::expect_none_failed>:
   2f680:	48 83 ec 78          	sub    $0x78,%rsp
   2f684:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   2f689:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   2f68e:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   2f693:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   2f698:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   2f69d:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   2f6a2:	48 8d 05 77 52 00 00 	lea    0x5277(%rip),%rax        # 34920 <<&T as core::fmt::Display>::fmt>
   2f6a9:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   2f6ae:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
   2f6b3:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   2f6b8:	48 8d 05 51 51 00 00 	lea    0x5151(%rip),%rax        # 34810 <<&T as core::fmt::Debug>::fmt>
   2f6bf:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   2f6c4:	48 8d 05 bd 5a 01 00 	lea    0x15abd(%rip),%rax        # 45188 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1c30>
   2f6cb:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   2f6d0:	48 c7 44 24 50 02 00 	movq   $0x2,0x50(%rsp)
   2f6d7:	00 00 
   2f6d9:	48 c7 44 24 58 00 00 	movq   $0x0,0x58(%rsp)
   2f6e0:	00 00 
   2f6e2:	48 8d 44 24 28       	lea    0x28(%rsp),%rax
   2f6e7:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   2f6ec:	48 c7 44 24 70 02 00 	movq   $0x2,0x70(%rsp)
   2f6f3:	00 00 
   2f6f5:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
   2f6fa:	4c 89 c6             	mov    %r8,%rsi
   2f6fd:	ff 15 4d 65 01 00    	callq  *0x1654d(%rip)        # 45c50 <_GLOBAL_OFFSET_TABLE_+0x2c0>
   2f703:	0f 0b                	ud2    
   2f705:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2f70c:	00 00 00 
   2f70f:	90                   	nop

000000000002f710 <core::panic::PanicInfo::payload>:
   2f710:	48 8b 07             	mov    (%rdi),%rax
   2f713:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   2f717:	c3                   	retq   
   2f718:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2f71f:	00 

000000000002f720 <core::panic::PanicInfo::message>:
   2f720:	48 8b 47 10          	mov    0x10(%rdi),%rax
   2f724:	c3                   	retq   
   2f725:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2f72c:	00 00 00 
   2f72f:	90                   	nop

000000000002f730 <core::panic::PanicInfo::location>:
   2f730:	48 8b 47 18          	mov    0x18(%rdi),%rax
   2f734:	c3                   	retq   
   2f735:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2f73c:	00 00 00 
   2f73f:	90                   	nop

000000000002f740 <core::panic::Location::caller>:
   2f740:	48 89 f8             	mov    %rdi,%rax
   2f743:	c3                   	retq   
   2f744:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2f74b:	00 00 00 
   2f74e:	66 90                	xchg   %ax,%ax

000000000002f750 <<core::panic::Location as core::fmt::Display>::fmt>:
   2f750:	48 83 ec 68          	sub    $0x68,%rsp
   2f754:	48 8d 47 10          	lea    0x10(%rdi),%rax
   2f758:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   2f75d:	48 83 c7 14          	add    $0x14,%rdi
   2f761:	48 8d 0d b8 51 00 00 	lea    0x51b8(%rip),%rcx        # 34920 <<&T as core::fmt::Display>::fmt>
   2f768:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   2f76d:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2f772:	48 8d 05 17 4c 00 00 	lea    0x4c17(%rip),%rax        # 34390 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt>
   2f779:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   2f77e:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
   2f783:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   2f788:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
   2f78c:	48 8b 76 28          	mov    0x28(%rsi),%rsi
   2f790:	48 8d 05 31 5a 01 00 	lea    0x15a31(%rip),%rax        # 451c8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1c70>
   2f797:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   2f79c:	48 c7 44 24 40 03 00 	movq   $0x3,0x40(%rsp)
   2f7a3:	00 00 
   2f7a5:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
   2f7ac:	00 00 
   2f7ae:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   2f7b3:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   2f7b8:	48 c7 44 24 60 03 00 	movq   $0x3,0x60(%rsp)
   2f7bf:	00 00 
   2f7c1:	48 8d 54 24 38       	lea    0x38(%rsp),%rdx
   2f7c6:	ff 15 34 66 01 00    	callq  *0x16634(%rip)        # 45e00 <_GLOBAL_OFFSET_TABLE_+0x470>
   2f7cc:	48 83 c4 68          	add    $0x68,%rsp
   2f7d0:	c3                   	retq   
   2f7d1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2f7d8:	00 00 00 
   2f7db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000002f7e0 <core::panicking::panic>:
   2f7e0:	48 83 ec 48          	sub    $0x48,%rsp
   2f7e4:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   2f7e9:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   2f7ee:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   2f7f3:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2f7f8:	48 c7 44 24 20 01 00 	movq   $0x1,0x20(%rsp)
   2f7ff:	00 00 
   2f801:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   2f808:	00 00 
   2f80a:	48 8d 05 1f a6 00 00 	lea    0xa61f(%rip),%rax        # 39e30 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x2e0>
   2f811:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   2f816:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   2f81d:	00 00 
   2f81f:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   2f824:	48 89 d6             	mov    %rdx,%rsi
   2f827:	ff 15 23 64 01 00    	callq  *0x16423(%rip)        # 45c50 <_GLOBAL_OFFSET_TABLE_+0x2c0>
   2f82d:	0f 0b                	ud2    
   2f82f:	90                   	nop

000000000002f830 <core::panicking::panic_bounds_check>:
   2f830:	48 83 ec 68          	sub    $0x68,%rsp
   2f834:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   2f839:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   2f83e:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   2f843:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   2f848:	48 8d 05 71 4c 00 00 	lea    0x4c71(%rip),%rax        # 344c0 <core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt>
   2f84f:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   2f854:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
   2f859:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   2f85e:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   2f863:	48 8d 05 8e 59 01 00 	lea    0x1598e(%rip),%rax        # 451f8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1ca0>
   2f86a:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   2f86f:	48 c7 44 24 40 02 00 	movq   $0x2,0x40(%rsp)
   2f876:	00 00 
   2f878:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
   2f87f:	00 00 
   2f881:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
   2f886:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   2f88b:	48 c7 44 24 60 02 00 	movq   $0x2,0x60(%rsp)
   2f892:	00 00 
   2f894:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
   2f899:	48 89 d6             	mov    %rdx,%rsi
   2f89c:	ff 15 ae 63 01 00    	callq  *0x163ae(%rip)        # 45c50 <_GLOBAL_OFFSET_TABLE_+0x2c0>
   2f8a2:	0f 0b                	ud2    
   2f8a4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2f8ab:	00 00 00 
   2f8ae:	66 90                	xchg   %ax,%ax

000000000002f8b0 <core::panicking::panic_fmt>:
   2f8b0:	48 83 ec 28          	sub    $0x28,%rsp
   2f8b4:	48 8d 05 75 a5 00 00 	lea    0xa575(%rip),%rax        # 39e30 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x2e0>
   2f8bb:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   2f8c0:	48 8d 05 e1 58 01 00 	lea    0x158e1(%rip),%rax        # 451a8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1c50>
   2f8c7:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   2f8cc:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
   2f8d1:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
   2f8d6:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   2f8db:	ff 15 d7 62 01 00    	callq  *0x162d7(%rip)        # 45bb8 <_GLOBAL_OFFSET_TABLE_+0x228>
   2f8e1:	0f 0b                	ud2    
   2f8e3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2f8ea:	00 00 00 
   2f8ed:	0f 1f 00             	nopl   (%rax)

000000000002f8f0 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str>:
   2f8f0:	41 57                	push   %r15
   2f8f2:	41 56                	push   %r14
   2f8f4:	41 55                	push   %r13
   2f8f6:	41 54                	push   %r12
   2f8f8:	53                   	push   %rbx
   2f8f9:	48 85 d2             	test   %rdx,%rdx
   2f8fc:	0f 84 a0 02 00 00    	je     2fba2 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x2b2>
   2f902:	49 89 d5             	mov    %rdx,%r13
   2f905:	49 89 f6             	mov    %rsi,%r14
   2f908:	49 89 ff             	mov    %rdi,%r15
   2f90b:	66 0f 6f 15 1d a1 00 	movdqa 0xa11d(%rip),%xmm2        # 39a30 <str.6+0x2710>
   2f912:	00 
   2f913:	66 0f 6f 1d 25 a1 00 	movdqa 0xa125(%rip),%xmm3        # 39a40 <str.6+0x2720>
   2f91a:	00 
   2f91b:	66 0f 6f 25 2d a1 00 	movdqa 0xa12d(%rip),%xmm4        # 39a50 <str.6+0x2730>
   2f922:	00 
   2f923:	66 0f ef ed          	pxor   %xmm5,%xmm5
   2f927:	4c 8d 25 36 a2 00 00 	lea    0xa236(%rip),%r12        # 39b64 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x14>
   2f92e:	eb 39                	jmp    2f969 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x79>
   2f930:	4c 89 f6             	mov    %r14,%rsi
   2f933:	48 89 da             	mov    %rbx,%rdx
   2f936:	ff 51 18             	callq  *0x18(%rcx)
   2f939:	84 c0                	test   %al,%al
   2f93b:	0f 85 65 02 00 00    	jne    2fba6 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x2b6>
   2f941:	49 01 de             	add    %rbx,%r14
   2f944:	49 29 dd             	sub    %rbx,%r13
   2f947:	66 0f 6f 15 e1 a0 00 	movdqa 0xa0e1(%rip),%xmm2        # 39a30 <str.6+0x2710>
   2f94e:	00 
   2f94f:	66 0f 6f 1d e9 a0 00 	movdqa 0xa0e9(%rip),%xmm3        # 39a40 <str.6+0x2720>
   2f956:	00 
   2f957:	66 0f 6f 25 f1 a0 00 	movdqa 0xa0f1(%rip),%xmm4        # 39a50 <str.6+0x2730>
   2f95e:	00 
   2f95f:	66 0f ef ed          	pxor   %xmm5,%xmm5
   2f963:	0f 84 39 02 00 00    	je     2fba2 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x2b2>
   2f969:	49 8b 47 10          	mov    0x10(%r15),%rax
   2f96d:	80 38 00             	cmpb   $0x0,(%rax)
   2f970:	74 36                	je     2f9a8 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0xb8>
   2f972:	49 8b 3f             	mov    (%r15),%rdi
   2f975:	49 8b 47 08          	mov    0x8(%r15),%rax
   2f979:	ba 04 00 00 00       	mov    $0x4,%edx
   2f97e:	4c 89 e6             	mov    %r12,%rsi
   2f981:	ff 50 18             	callq  *0x18(%rax)
   2f984:	66 0f ef ed          	pxor   %xmm5,%xmm5
   2f988:	66 0f 6f 25 c0 a0 00 	movdqa 0xa0c0(%rip),%xmm4        # 39a50 <str.6+0x2730>
   2f98f:	00 
   2f990:	66 0f 6f 1d a8 a0 00 	movdqa 0xa0a8(%rip),%xmm3        # 39a40 <str.6+0x2720>
   2f997:	00 
   2f998:	66 0f 6f 15 90 a0 00 	movdqa 0xa090(%rip),%xmm2        # 39a30 <str.6+0x2710>
   2f99f:	00 
   2f9a0:	84 c0                	test   %al,%al
   2f9a2:	0f 85 fe 01 00 00    	jne    2fba6 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x2b6>
   2f9a8:	4c 89 ee             	mov    %r13,%rsi
   2f9ab:	31 db                	xor    %ebx,%ebx
   2f9ad:	eb 0d                	jmp    2f9bc <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0xcc>
   2f9af:	90                   	nop
   2f9b0:	4c 89 ee             	mov    %r13,%rsi
   2f9b3:	48 29 de             	sub    %rbx,%rsi
   2f9b6:	0f 82 a4 01 00 00    	jb     2fb60 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x270>
   2f9bc:	49 8d 04 1e          	lea    (%r14,%rbx,1),%rax
   2f9c0:	48 83 fe 10          	cmp    $0x10,%rsi
   2f9c4:	73 3a                	jae    2fa00 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x110>
   2f9c6:	48 85 f6             	test   %rsi,%rsi
   2f9c9:	0f 84 91 01 00 00    	je     2fb60 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x270>
   2f9cf:	4c 89 ea             	mov    %r13,%rdx
   2f9d2:	48 29 da             	sub    %rbx,%rdx
   2f9d5:	31 c9                	xor    %ecx,%ecx
   2f9d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2f9de:	00 00 
   2f9e0:	80 3c 08 0a          	cmpb   $0xa,(%rax,%rcx,1)
   2f9e4:	0f 84 d0 00 00 00    	je     2faba <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x1ca>
   2f9ea:	48 83 c1 01          	add    $0x1,%rcx
   2f9ee:	48 39 ca             	cmp    %rcx,%rdx
   2f9f1:	75 ed                	jne    2f9e0 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0xf0>
   2f9f3:	e9 68 01 00 00       	jmpq   2fb60 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x270>
   2f9f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2f9ff:	00 
   2fa00:	89 c7                	mov    %eax,%edi
   2fa02:	f7 df                	neg    %edi
   2fa04:	48 83 e7 07          	and    $0x7,%rdi
   2fa08:	74 26                	je     2fa30 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x140>
   2fa0a:	48 39 f7             	cmp    %rsi,%rdi
   2fa0d:	48 0f 47 fe          	cmova  %rsi,%rdi
   2fa11:	48 85 ff             	test   %rdi,%rdi
   2fa14:	74 1a                	je     2fa30 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x140>
   2fa16:	80 38 0a             	cmpb   $0xa,(%rax)
   2fa19:	0f 85 bf 00 00 00    	jne    2fade <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x1ee>
   2fa1f:	31 c9                	xor    %ecx,%ecx
   2fa21:	e9 94 00 00 00       	jmpq   2faba <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x1ca>
   2fa26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2fa2d:	00 00 00 
   2fa30:	48 8d 4e f0          	lea    -0x10(%rsi),%rcx
   2fa34:	31 ff                	xor    %edi,%edi
   2fa36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2fa3d:	00 00 00 
   2fa40:	f3 0f 6f 04 38       	movdqu (%rax,%rdi,1),%xmm0
   2fa45:	66 0f 6f c8          	movdqa %xmm0,%xmm1
   2fa49:	66 0f ef ca          	pxor   %xmm2,%xmm1
   2fa4d:	66 0f d4 cb          	paddq  %xmm3,%xmm1
   2fa51:	66 0f df c1          	pandn  %xmm1,%xmm0
   2fa55:	66 0f db c4          	pand   %xmm4,%xmm0
   2fa59:	66 0f 74 c5          	pcmpeqb %xmm5,%xmm0
   2fa5d:	66 0f d7 d0          	pmovmskb %xmm0,%edx
   2fa61:	81 fa ff ff 00 00    	cmp    $0xffff,%edx
   2fa67:	75 09                	jne    2fa72 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x182>
   2fa69:	48 83 c7 10          	add    $0x10,%rdi
   2fa6d:	48 39 cf             	cmp    %rcx,%rdi
   2fa70:	76 ce                	jbe    2fa40 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x150>
   2fa72:	48 39 f7             	cmp    %rsi,%rdi
   2fa75:	0f 87 37 01 00 00    	ja     2fbb2 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x2c2>
   2fa7b:	48 39 f7             	cmp    %rsi,%rdi
   2fa7e:	0f 84 dc 00 00 00    	je     2fb60 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x270>
   2fa84:	48 8d 14 1f          	lea    (%rdi,%rbx,1),%rdx
   2fa88:	49 8d 04 16          	lea    (%r14,%rdx,1),%rax
   2fa8c:	4c 89 e9             	mov    %r13,%rcx
   2fa8f:	48 29 d1             	sub    %rdx,%rcx
   2fa92:	31 d2                	xor    %edx,%edx
   2fa94:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2fa9b:	00 00 00 
   2fa9e:	66 90                	xchg   %ax,%ax
   2faa0:	80 3c 10 0a          	cmpb   $0xa,(%rax,%rdx,1)
   2faa4:	74 0e                	je     2fab4 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x1c4>
   2faa6:	48 83 c2 01          	add    $0x1,%rdx
   2faaa:	48 39 d1             	cmp    %rdx,%rcx
   2faad:	75 f1                	jne    2faa0 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x1b0>
   2faaf:	e9 ac 00 00 00       	jmpq   2fb60 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x270>
   2fab4:	48 01 d7             	add    %rdx,%rdi
   2fab7:	48 89 f9             	mov    %rdi,%rcx
   2faba:	48 8d 04 19          	lea    (%rcx,%rbx,1),%rax
   2fabe:	48 01 cb             	add    %rcx,%rbx
   2fac1:	48 83 c3 01          	add    $0x1,%rbx
   2fac5:	4c 39 e8             	cmp    %r13,%rax
   2fac8:	0f 83 e2 fe ff ff    	jae    2f9b0 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0xc0>
   2face:	41 80 3c 06 0a       	cmpb   $0xa,(%r14,%rax,1)
   2fad3:	0f 85 d7 fe ff ff    	jne    2f9b0 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0xc0>
   2fad9:	e9 c0 00 00 00       	jmpq   2fb9e <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x2ae>
   2fade:	48 83 ff 01          	cmp    $0x1,%rdi
   2fae2:	75 0f                	jne    2faf3 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x203>
   2fae4:	48 8d 4e f0          	lea    -0x10(%rsi),%rcx
   2fae8:	48 39 cf             	cmp    %rcx,%rdi
   2faeb:	0f 86 4f ff ff ff    	jbe    2fa40 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x150>
   2faf1:	eb 88                	jmp    2fa7b <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x18b>
   2faf3:	b9 01 00 00 00       	mov    $0x1,%ecx
   2faf8:	80 78 01 0a          	cmpb   $0xa,0x1(%rax)
   2fafc:	74 bc                	je     2faba <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x1ca>
   2fafe:	48 83 ff 02          	cmp    $0x2,%rdi
   2fb02:	74 e0                	je     2fae4 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x1f4>
   2fb04:	b9 02 00 00 00       	mov    $0x2,%ecx
   2fb09:	80 78 02 0a          	cmpb   $0xa,0x2(%rax)
   2fb0d:	74 ab                	je     2faba <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x1ca>
   2fb0f:	48 83 ff 03          	cmp    $0x3,%rdi
   2fb13:	74 cf                	je     2fae4 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x1f4>
   2fb15:	b9 03 00 00 00       	mov    $0x3,%ecx
   2fb1a:	80 78 03 0a          	cmpb   $0xa,0x3(%rax)
   2fb1e:	74 9a                	je     2faba <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x1ca>
   2fb20:	48 83 ff 04          	cmp    $0x4,%rdi
   2fb24:	74 be                	je     2fae4 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x1f4>
   2fb26:	b9 04 00 00 00       	mov    $0x4,%ecx
   2fb2b:	80 78 04 0a          	cmpb   $0xa,0x4(%rax)
   2fb2f:	74 89                	je     2faba <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x1ca>
   2fb31:	48 83 ff 05          	cmp    $0x5,%rdi
   2fb35:	74 ad                	je     2fae4 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x1f4>
   2fb37:	b9 05 00 00 00       	mov    $0x5,%ecx
   2fb3c:	80 78 05 0a          	cmpb   $0xa,0x5(%rax)
   2fb40:	0f 84 74 ff ff ff    	je     2faba <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x1ca>
   2fb46:	48 83 ff 06          	cmp    $0x6,%rdi
   2fb4a:	74 98                	je     2fae4 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x1f4>
   2fb4c:	b9 06 00 00 00       	mov    $0x6,%ecx
   2fb51:	80 78 06 0a          	cmpb   $0xa,0x6(%rax)
   2fb55:	0f 84 5f ff ff ff    	je     2faba <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x1ca>
   2fb5b:	eb 87                	jmp    2fae4 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x1f4>
   2fb5d:	0f 1f 00             	nopl   (%rax)
   2fb60:	31 c0                	xor    %eax,%eax
   2fb62:	4c 89 eb             	mov    %r13,%rbx
   2fb65:	49 8b 4f 10          	mov    0x10(%r15),%rcx
   2fb69:	88 01                	mov    %al,(%rcx)
   2fb6b:	49 8b 3f             	mov    (%r15),%rdi
   2fb6e:	49 8b 4f 08          	mov    0x8(%r15),%rcx
   2fb72:	49 39 dd             	cmp    %rbx,%r13
   2fb75:	0f 84 b5 fd ff ff    	je     2f930 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x40>
   2fb7b:	76 44                	jbe    2fbc1 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x2d1>
   2fb7d:	41 80 3c 1e bf       	cmpb   $0xbf,(%r14,%rbx,1)
   2fb82:	7e 3d                	jle    2fbc1 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x2d1>
   2fb84:	4c 89 f6             	mov    %r14,%rsi
   2fb87:	48 89 da             	mov    %rbx,%rdx
   2fb8a:	ff 51 18             	callq  *0x18(%rcx)
   2fb8d:	84 c0                	test   %al,%al
   2fb8f:	75 15                	jne    2fba6 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x2b6>
   2fb91:	41 80 3c 1e bf       	cmpb   $0xbf,(%r14,%rbx,1)
   2fb96:	0f 8f a5 fd ff ff    	jg     2f941 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x51>
   2fb9c:	eb 3d                	jmp    2fbdb <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x2eb>
   2fb9e:	b0 01                	mov    $0x1,%al
   2fba0:	eb c3                	jmp    2fb65 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x275>
   2fba2:	31 c0                	xor    %eax,%eax
   2fba4:	eb 02                	jmp    2fba8 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str+0x2b8>
   2fba6:	b0 01                	mov    $0x1,%al
   2fba8:	5b                   	pop    %rbx
   2fba9:	41 5c                	pop    %r12
   2fbab:	41 5d                	pop    %r13
   2fbad:	41 5e                	pop    %r14
   2fbaf:	41 5f                	pop    %r15
   2fbb1:	c3                   	retq   
   2fbb2:	48 8d 15 87 57 01 00 	lea    0x15787(%rip),%rdx        # 45340 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1de8>
   2fbb9:	ff 15 39 62 01 00    	callq  *0x16239(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x468>
   2fbbf:	0f 0b                	ud2    
   2fbc1:	4c 8d 05 80 56 01 00 	lea    0x15680(%rip),%r8        # 45248 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1cf0>
   2fbc8:	4c 89 f7             	mov    %r14,%rdi
   2fbcb:	4c 89 ee             	mov    %r13,%rsi
   2fbce:	31 d2                	xor    %edx,%edx
   2fbd0:	48 89 d9             	mov    %rbx,%rcx
   2fbd3:	ff 15 5f 62 01 00    	callq  *0x1625f(%rip)        # 45e38 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   2fbd9:	0f 0b                	ud2    
   2fbdb:	4c 8d 05 7e 56 01 00 	lea    0x1567e(%rip),%r8        # 45260 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1d08>
   2fbe2:	4c 89 f7             	mov    %r14,%rdi
   2fbe5:	4c 89 ee             	mov    %r13,%rsi
   2fbe8:	48 89 da             	mov    %rbx,%rdx
   2fbeb:	4c 89 e9             	mov    %r13,%rcx
   2fbee:	ff 15 44 62 01 00    	callq  *0x16244(%rip)        # 45e38 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   2fbf4:	0f 0b                	ud2    
   2fbf6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2fbfd:	00 00 00 

000000000002fc00 <core::fmt::builders::DebugStruct::field>:
   2fc00:	55                   	push   %rbp
   2fc01:	41 57                	push   %r15
   2fc03:	41 56                	push   %r14
   2fc05:	41 55                	push   %r13
   2fc07:	41 54                	push   %r12
   2fc09:	53                   	push   %rbx
   2fc0a:	48 83 ec 68          	sub    $0x68,%rsp
   2fc0e:	48 89 fb             	mov    %rdi,%rbx
   2fc11:	41 b5 01             	mov    $0x1,%r13b
   2fc14:	80 7f 08 00          	cmpb   $0x0,0x8(%rdi)
   2fc18:	74 1a                	je     2fc34 <core::fmt::builders::DebugStruct::field+0x34>
   2fc1a:	44 88 6b 08          	mov    %r13b,0x8(%rbx)
   2fc1e:	c6 43 09 01          	movb   $0x1,0x9(%rbx)
   2fc22:	48 89 d8             	mov    %rbx,%rax
   2fc25:	48 83 c4 68          	add    $0x68,%rsp
   2fc29:	5b                   	pop    %rbx
   2fc2a:	41 5c                	pop    %r12
   2fc2c:	41 5d                	pop    %r13
   2fc2e:	41 5e                	pop    %r14
   2fc30:	41 5f                	pop    %r15
   2fc32:	5d                   	pop    %rbp
   2fc33:	c3                   	retq   
   2fc34:	4d 89 c6             	mov    %r8,%r14
   2fc37:	49 89 cf             	mov    %rcx,%r15
   2fc3a:	49 89 d4             	mov    %rdx,%r12
   2fc3d:	48 89 f5             	mov    %rsi,%rbp
   2fc40:	48 8b 03             	mov    (%rbx),%rax
   2fc43:	8b 50 30             	mov    0x30(%rax),%edx
   2fc46:	8a 4b 09             	mov    0x9(%rbx),%cl
   2fc49:	f6 c2 04             	test   $0x4,%dl
   2fc4c:	75 75                	jne    2fcc3 <core::fmt::builders::DebugStruct::field+0xc3>
   2fc4e:	31 d2                	xor    %edx,%edx
   2fc50:	84 c9                	test   %cl,%cl
   2fc52:	48 8d 0d fb a2 00 00 	lea    0xa2fb(%rip),%rcx        # 39f54 <str.1+0x114>
   2fc59:	48 8d 35 f2 a2 00 00 	lea    0xa2f2(%rip),%rsi        # 39f52 <str.1+0x112>
   2fc60:	48 0f 44 f1          	cmove  %rcx,%rsi
   2fc64:	0f 94 c2             	sete   %dl
   2fc67:	48 83 ca 02          	or     $0x2,%rdx
   2fc6b:	48 8b 78 20          	mov    0x20(%rax),%rdi
   2fc6f:	48 8b 40 28          	mov    0x28(%rax),%rax
   2fc73:	ff 50 18             	callq  *0x18(%rax)
   2fc76:	84 c0                	test   %al,%al
   2fc78:	75 a0                	jne    2fc1a <core::fmt::builders::DebugStruct::field+0x1a>
   2fc7a:	48 8b 03             	mov    (%rbx),%rax
   2fc7d:	48 8b 78 20          	mov    0x20(%rax),%rdi
   2fc81:	48 8b 40 28          	mov    0x28(%rax),%rax
   2fc85:	48 89 ee             	mov    %rbp,%rsi
   2fc88:	4c 89 e2             	mov    %r12,%rdx
   2fc8b:	ff 50 18             	callq  *0x18(%rax)
   2fc8e:	84 c0                	test   %al,%al
   2fc90:	75 88                	jne    2fc1a <core::fmt::builders::DebugStruct::field+0x1a>
   2fc92:	48 8b 03             	mov    (%rbx),%rax
   2fc95:	48 8b 78 20          	mov    0x20(%rax),%rdi
   2fc99:	48 8b 40 28          	mov    0x28(%rax),%rax
   2fc9d:	48 8d 35 54 a2 00 00 	lea    0xa254(%rip),%rsi        # 39ef8 <str.1+0xb8>
   2fca4:	ba 02 00 00 00       	mov    $0x2,%edx
   2fca9:	ff 50 18             	callq  *0x18(%rax)
   2fcac:	84 c0                	test   %al,%al
   2fcae:	0f 85 66 ff ff ff    	jne    2fc1a <core::fmt::builders::DebugStruct::field+0x1a>
   2fcb4:	48 8b 33             	mov    (%rbx),%rsi
   2fcb7:	4c 89 ff             	mov    %r15,%rdi
   2fcba:	41 ff 56 18          	callq  *0x18(%r14)
   2fcbe:	e9 dc 00 00 00       	jmpq   2fd9f <core::fmt::builders::DebugStruct::field+0x19f>
   2fcc3:	84 c9                	test   %cl,%cl
   2fcc5:	75 25                	jne    2fcec <core::fmt::builders::DebugStruct::field+0xec>
   2fcc7:	48 8b 78 20          	mov    0x20(%rax),%rdi
   2fccb:	48 8b 40 28          	mov    0x28(%rax),%rax
   2fccf:	48 8d 35 77 a2 00 00 	lea    0xa277(%rip),%rsi        # 39f4d <str.1+0x10d>
   2fcd6:	ba 03 00 00 00       	mov    $0x3,%edx
   2fcdb:	ff 50 18             	callq  *0x18(%rax)
   2fcde:	84 c0                	test   %al,%al
   2fce0:	0f 85 34 ff ff ff    	jne    2fc1a <core::fmt::builders::DebugStruct::field+0x1a>
   2fce6:	48 8b 03             	mov    (%rbx),%rax
   2fce9:	8b 50 30             	mov    0x30(%rax),%edx
   2fcec:	c6 44 24 0f 01       	movb   $0x1,0xf(%rsp)
   2fcf1:	0f 10 40 20          	movups 0x20(%rax),%xmm0
   2fcf5:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   2fcfa:	48 8d 4c 24 0f       	lea    0xf(%rsp),%rcx
   2fcff:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   2fd04:	8b 48 34             	mov    0x34(%rax),%ecx
   2fd07:	40 8a 70 38          	mov    0x38(%rax),%sil
   2fd0b:	0f 10 00             	movups (%rax),%xmm0
   2fd0e:	0f 10 48 10          	movups 0x10(%rax),%xmm1
   2fd12:	89 54 24 58          	mov    %edx,0x58(%rsp)
   2fd16:	89 4c 24 5c          	mov    %ecx,0x5c(%rsp)
   2fd1a:	40 88 74 24 60       	mov    %sil,0x60(%rsp)
   2fd1f:	0f 11 44 24 28       	movups %xmm0,0x28(%rsp)
   2fd24:	0f 11 4c 24 38       	movups %xmm1,0x38(%rsp)
   2fd29:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   2fd2e:	48 89 7c 24 48       	mov    %rdi,0x48(%rsp)
   2fd33:	48 8d 05 de 54 01 00 	lea    0x154de(%rip),%rax        # 45218 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1cc0>
   2fd3a:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   2fd3f:	48 89 ee             	mov    %rbp,%rsi
   2fd42:	4c 89 e2             	mov    %r12,%rdx
   2fd45:	ff 15 e5 5f 01 00    	callq  *0x15fe5(%rip)        # 45d30 <_GLOBAL_OFFSET_TABLE_+0x3a0>
   2fd4b:	84 c0                	test   %al,%al
   2fd4d:	0f 85 c7 fe ff ff    	jne    2fc1a <core::fmt::builders::DebugStruct::field+0x1a>
   2fd53:	48 8d 35 9e a1 00 00 	lea    0xa19e(%rip),%rsi        # 39ef8 <str.1+0xb8>
   2fd5a:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   2fd5f:	ba 02 00 00 00       	mov    $0x2,%edx
   2fd64:	ff 15 c6 5f 01 00    	callq  *0x15fc6(%rip)        # 45d30 <_GLOBAL_OFFSET_TABLE_+0x3a0>
   2fd6a:	84 c0                	test   %al,%al
   2fd6c:	0f 85 a8 fe ff ff    	jne    2fc1a <core::fmt::builders::DebugStruct::field+0x1a>
   2fd72:	48 8d 74 24 28       	lea    0x28(%rsp),%rsi
   2fd77:	4c 89 ff             	mov    %r15,%rdi
   2fd7a:	41 ff 56 18          	callq  *0x18(%r14)
   2fd7e:	84 c0                	test   %al,%al
   2fd80:	0f 85 94 fe ff ff    	jne    2fc1a <core::fmt::builders::DebugStruct::field+0x1a>
   2fd86:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
   2fd8b:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   2fd90:	48 8d 35 b9 a1 00 00 	lea    0xa1b9(%rip),%rsi        # 39f50 <str.1+0x110>
   2fd97:	ba 02 00 00 00       	mov    $0x2,%edx
   2fd9c:	ff 50 18             	callq  *0x18(%rax)
   2fd9f:	41 89 c5             	mov    %eax,%r13d
   2fda2:	e9 73 fe ff ff       	jmpq   2fc1a <core::fmt::builders::DebugStruct::field+0x1a>
   2fda7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2fdae:	00 00 

000000000002fdb0 <core::fmt::builders::DebugStruct::finish>:
   2fdb0:	53                   	push   %rbx
   2fdb1:	80 7f 09 00          	cmpb   $0x0,0x9(%rdi)
   2fdb5:	8a 47 08             	mov    0x8(%rdi),%al
   2fdb8:	74 3d                	je     2fdf7 <core::fmt::builders::DebugStruct::finish+0x47>
   2fdba:	48 89 fb             	mov    %rdi,%rbx
   2fdbd:	84 c0                	test   %al,%al
   2fdbf:	b0 01                	mov    $0x1,%al
   2fdc1:	75 31                	jne    2fdf4 <core::fmt::builders::DebugStruct::finish+0x44>
   2fdc3:	48 8b 03             	mov    (%rbx),%rax
   2fdc6:	f6 40 30 04          	testb  $0x4,0x30(%rax)
   2fdca:	48 8b 78 20          	mov    0x20(%rax),%rdi
   2fdce:	48 8b 40 28          	mov    0x28(%rax),%rax
   2fdd2:	48 8b 40 18          	mov    0x18(%rax),%rax
   2fdd6:	75 0e                	jne    2fde6 <core::fmt::builders::DebugStruct::finish+0x36>
   2fdd8:	48 8d 35 79 a1 00 00 	lea    0xa179(%rip),%rsi        # 39f58 <str.1+0x118>
   2fddf:	ba 02 00 00 00       	mov    $0x2,%edx
   2fde4:	eb 0c                	jmp    2fdf2 <core::fmt::builders::DebugStruct::finish+0x42>
   2fde6:	48 8d 35 6a a1 00 00 	lea    0xa16a(%rip),%rsi        # 39f57 <str.1+0x117>
   2fded:	ba 01 00 00 00       	mov    $0x1,%edx
   2fdf2:	ff d0                	callq  *%rax
   2fdf4:	88 43 08             	mov    %al,0x8(%rbx)
   2fdf7:	5b                   	pop    %rbx
   2fdf8:	c3                   	retq   
   2fdf9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000002fe00 <core::fmt::builders::DebugTuple::field>:
   2fe00:	55                   	push   %rbp
   2fe01:	41 57                	push   %r15
   2fe03:	41 56                	push   %r14
   2fe05:	53                   	push   %rbx
   2fe06:	48 83 ec 68          	sub    $0x68,%rsp
   2fe0a:	48 89 fb             	mov    %rdi,%rbx
   2fe0d:	40 b5 01             	mov    $0x1,%bpl
   2fe10:	80 7f 10 00          	cmpb   $0x0,0x10(%rdi)
   2fe14:	0f 85 01 01 00 00    	jne    2ff1b <core::fmt::builders::DebugTuple::field+0x11b>
   2fe1a:	49 89 d6             	mov    %rdx,%r14
   2fe1d:	49 89 f7             	mov    %rsi,%r15
   2fe20:	48 8b 03             	mov    (%rbx),%rax
   2fe23:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   2fe27:	8b 48 30             	mov    0x30(%rax),%ecx
   2fe2a:	f6 c1 04             	test   $0x4,%cl
   2fe2d:	75 44                	jne    2fe73 <core::fmt::builders::DebugTuple::field+0x73>
   2fe2f:	31 c9                	xor    %ecx,%ecx
   2fe31:	48 85 d2             	test   %rdx,%rdx
   2fe34:	0f 94 c1             	sete   %cl
   2fe37:	48 8d 15 1e a1 00 00 	lea    0xa11e(%rip),%rdx        # 39f5c <str.1+0x11c>
   2fe3e:	48 8d 35 0d a1 00 00 	lea    0xa10d(%rip),%rsi        # 39f52 <str.1+0x112>
   2fe45:	48 0f 44 f2          	cmove  %rdx,%rsi
   2fe49:	ba 02 00 00 00       	mov    $0x2,%edx
   2fe4e:	48 29 ca             	sub    %rcx,%rdx
   2fe51:	48 8b 78 20          	mov    0x20(%rax),%rdi
   2fe55:	48 8b 40 28          	mov    0x28(%rax),%rax
   2fe59:	ff 50 18             	callq  *0x18(%rax)
   2fe5c:	84 c0                	test   %al,%al
   2fe5e:	0f 85 b7 00 00 00    	jne    2ff1b <core::fmt::builders::DebugTuple::field+0x11b>
   2fe64:	48 8b 33             	mov    (%rbx),%rsi
   2fe67:	4c 89 ff             	mov    %r15,%rdi
   2fe6a:	41 ff 56 18          	callq  *0x18(%r14)
   2fe6e:	e9 a6 00 00 00       	jmpq   2ff19 <core::fmt::builders::DebugTuple::field+0x119>
   2fe73:	48 85 d2             	test   %rdx,%rdx
   2fe76:	75 25                	jne    2fe9d <core::fmt::builders::DebugTuple::field+0x9d>
   2fe78:	48 8b 78 20          	mov    0x20(%rax),%rdi
   2fe7c:	48 8b 40 28          	mov    0x28(%rax),%rax
   2fe80:	48 8d 35 d3 a0 00 00 	lea    0xa0d3(%rip),%rsi        # 39f5a <str.1+0x11a>
   2fe87:	ba 02 00 00 00       	mov    $0x2,%edx
   2fe8c:	ff 50 18             	callq  *0x18(%rax)
   2fe8f:	84 c0                	test   %al,%al
   2fe91:	0f 85 84 00 00 00    	jne    2ff1b <core::fmt::builders::DebugTuple::field+0x11b>
   2fe97:	48 8b 03             	mov    (%rbx),%rax
   2fe9a:	8b 48 30             	mov    0x30(%rax),%ecx
   2fe9d:	c6 44 24 0f 01       	movb   $0x1,0xf(%rsp)
   2fea2:	0f 10 40 20          	movups 0x20(%rax),%xmm0
   2fea6:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   2feab:	48 8d 54 24 0f       	lea    0xf(%rsp),%rdx
   2feb0:	48 89 54 24 60       	mov    %rdx,0x60(%rsp)
   2feb5:	8b 50 34             	mov    0x34(%rax),%edx
   2feb8:	40 8a 70 38          	mov    0x38(%rax),%sil
   2febc:	0f 10 00             	movups (%rax),%xmm0
   2febf:	0f 10 48 10          	movups 0x10(%rax),%xmm1
   2fec3:	89 4c 24 40          	mov    %ecx,0x40(%rsp)
   2fec7:	89 54 24 44          	mov    %edx,0x44(%rsp)
   2fecb:	40 88 74 24 48       	mov    %sil,0x48(%rsp)
   2fed0:	0f 11 44 24 10       	movups %xmm0,0x10(%rsp)
   2fed5:	0f 11 4c 24 20       	movups %xmm1,0x20(%rsp)
   2feda:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
   2fedf:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   2fee4:	48 8d 05 2d 53 01 00 	lea    0x1532d(%rip),%rax        # 45218 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1cc0>
   2feeb:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   2fef0:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   2fef5:	4c 89 ff             	mov    %r15,%rdi
   2fef8:	41 ff 56 18          	callq  *0x18(%r14)
   2fefc:	84 c0                	test   %al,%al
   2fefe:	75 1b                	jne    2ff1b <core::fmt::builders::DebugTuple::field+0x11b>
   2ff00:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   2ff05:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   2ff0a:	48 8d 35 3f a0 00 00 	lea    0xa03f(%rip),%rsi        # 39f50 <str.1+0x110>
   2ff11:	ba 02 00 00 00       	mov    $0x2,%edx
   2ff16:	ff 50 18             	callq  *0x18(%rax)
   2ff19:	89 c5                	mov    %eax,%ebp
   2ff1b:	40 88 6b 10          	mov    %bpl,0x10(%rbx)
   2ff1f:	48 83 43 08 01       	addq   $0x1,0x8(%rbx)
   2ff24:	48 89 d8             	mov    %rbx,%rax
   2ff27:	48 83 c4 68          	add    $0x68,%rsp
   2ff2b:	5b                   	pop    %rbx
   2ff2c:	41 5e                	pop    %r14
   2ff2e:	41 5f                	pop    %r15
   2ff30:	5d                   	pop    %rbp
   2ff31:	c3                   	retq   
   2ff32:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2ff39:	00 00 00 
   2ff3c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000002ff40 <core::fmt::builders::DebugTuple::finish>:
   2ff40:	55                   	push   %rbp
   2ff41:	53                   	push   %rbx
   2ff42:	50                   	push   %rax
   2ff43:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
   2ff47:	8a 47 10             	mov    0x10(%rdi),%al
   2ff4a:	48 85 c9             	test   %rcx,%rcx
   2ff4d:	74 5c                	je     2ffab <core::fmt::builders::DebugTuple::finish+0x6b>
   2ff4f:	48 89 fb             	mov    %rdi,%rbx
   2ff52:	40 b5 01             	mov    $0x1,%bpl
   2ff55:	84 c0                	test   %al,%al
   2ff57:	75 4c                	jne    2ffa5 <core::fmt::builders::DebugTuple::finish+0x65>
   2ff59:	48 83 f9 01          	cmp    $0x1,%rcx
   2ff5d:	75 2a                	jne    2ff89 <core::fmt::builders::DebugTuple::finish+0x49>
   2ff5f:	80 7b 11 00          	cmpb   $0x0,0x11(%rbx)
   2ff63:	74 24                	je     2ff89 <core::fmt::builders::DebugTuple::finish+0x49>
   2ff65:	48 8b 03             	mov    (%rbx),%rax
   2ff68:	f6 40 30 04          	testb  $0x4,0x30(%rax)
   2ff6c:	75 1b                	jne    2ff89 <core::fmt::builders::DebugTuple::finish+0x49>
   2ff6e:	48 8b 78 20          	mov    0x20(%rax),%rdi
   2ff72:	48 8b 40 28          	mov    0x28(%rax),%rax
   2ff76:	48 8d 35 e0 9f 00 00 	lea    0x9fe0(%rip),%rsi        # 39f5d <str.1+0x11d>
   2ff7d:	ba 01 00 00 00       	mov    $0x1,%edx
   2ff82:	ff 50 18             	callq  *0x18(%rax)
   2ff85:	84 c0                	test   %al,%al
   2ff87:	75 1c                	jne    2ffa5 <core::fmt::builders::DebugTuple::finish+0x65>
   2ff89:	48 8b 03             	mov    (%rbx),%rax
   2ff8c:	48 8b 78 20          	mov    0x20(%rax),%rdi
   2ff90:	48 8b 40 28          	mov    0x28(%rax),%rax
   2ff94:	48 8d 35 c3 9f 00 00 	lea    0x9fc3(%rip),%rsi        # 39f5e <str.1+0x11e>
   2ff9b:	ba 01 00 00 00       	mov    $0x1,%edx
   2ffa0:	ff 50 18             	callq  *0x18(%rax)
   2ffa3:	89 c5                	mov    %eax,%ebp
   2ffa5:	40 88 6b 10          	mov    %bpl,0x10(%rbx)
   2ffa9:	89 e8                	mov    %ebp,%eax
   2ffab:	48 83 c4 08          	add    $0x8,%rsp
   2ffaf:	5b                   	pop    %rbx
   2ffb0:	5d                   	pop    %rbp
   2ffb1:	c3                   	retq   
   2ffb2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2ffb9:	00 00 00 
   2ffbc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000002ffc0 <core::fmt::builders::DebugInner::entry>:
   2ffc0:	55                   	push   %rbp
   2ffc1:	41 57                	push   %r15
   2ffc3:	41 56                	push   %r14
   2ffc5:	53                   	push   %rbx
   2ffc6:	48 83 ec 68          	sub    $0x68,%rsp
   2ffca:	48 89 fb             	mov    %rdi,%rbx
   2ffcd:	40 b5 01             	mov    $0x1,%bpl
   2ffd0:	80 7f 08 00          	cmpb   $0x0,0x8(%rdi)
   2ffd4:	0f 85 ea 00 00 00    	jne    300c4 <core::fmt::builders::DebugInner::entry+0x104>
   2ffda:	49 89 d6             	mov    %rdx,%r14
   2ffdd:	49 89 f7             	mov    %rsi,%r15
   2ffe0:	48 8b 33             	mov    (%rbx),%rsi
   2ffe3:	8b 46 30             	mov    0x30(%rsi),%eax
   2ffe6:	8a 4b 09             	mov    0x9(%rbx),%cl
   2ffe9:	a8 04                	test   $0x4,%al
   2ffeb:	75 32                	jne    3001f <core::fmt::builders::DebugInner::entry+0x5f>
   2ffed:	84 c9                	test   %cl,%cl
   2ffef:	74 22                	je     30013 <core::fmt::builders::DebugInner::entry+0x53>
   2fff1:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
   2fff5:	48 8b 46 28          	mov    0x28(%rsi),%rax
   2fff9:	48 8d 35 52 9f 00 00 	lea    0x9f52(%rip),%rsi        # 39f52 <str.1+0x112>
   30000:	ba 02 00 00 00       	mov    $0x2,%edx
   30005:	ff 50 18             	callq  *0x18(%rax)
   30008:	84 c0                	test   %al,%al
   3000a:	0f 85 b4 00 00 00    	jne    300c4 <core::fmt::builders::DebugInner::entry+0x104>
   30010:	48 8b 33             	mov    (%rbx),%rsi
   30013:	4c 89 ff             	mov    %r15,%rdi
   30016:	41 ff 56 18          	callq  *0x18(%r14)
   3001a:	e9 a3 00 00 00       	jmpq   300c2 <core::fmt::builders::DebugInner::entry+0x102>
   3001f:	84 c9                	test   %cl,%cl
   30021:	75 25                	jne    30048 <core::fmt::builders::DebugInner::entry+0x88>
   30023:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
   30027:	48 8b 46 28          	mov    0x28(%rsi),%rax
   3002b:	48 8d 35 2d 9f 00 00 	lea    0x9f2d(%rip),%rsi        # 39f5f <str.1+0x11f>
   30032:	ba 01 00 00 00       	mov    $0x1,%edx
   30037:	ff 50 18             	callq  *0x18(%rax)
   3003a:	84 c0                	test   %al,%al
   3003c:	0f 85 82 00 00 00    	jne    300c4 <core::fmt::builders::DebugInner::entry+0x104>
   30042:	48 8b 33             	mov    (%rbx),%rsi
   30045:	8b 46 30             	mov    0x30(%rsi),%eax
   30048:	c6 44 24 0f 01       	movb   $0x1,0xf(%rsp)
   3004d:	0f 10 46 20          	movups 0x20(%rsi),%xmm0
   30051:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   30056:	48 8d 4c 24 0f       	lea    0xf(%rsp),%rcx
   3005b:	48 89 4c 24 60       	mov    %rcx,0x60(%rsp)
   30060:	8b 4e 34             	mov    0x34(%rsi),%ecx
   30063:	8a 56 38             	mov    0x38(%rsi),%dl
   30066:	0f 10 06             	movups (%rsi),%xmm0
   30069:	0f 10 4e 10          	movups 0x10(%rsi),%xmm1
   3006d:	89 44 24 40          	mov    %eax,0x40(%rsp)
   30071:	89 4c 24 44          	mov    %ecx,0x44(%rsp)
   30075:	88 54 24 48          	mov    %dl,0x48(%rsp)
   30079:	0f 11 44 24 10       	movups %xmm0,0x10(%rsp)
   3007e:	0f 11 4c 24 20       	movups %xmm1,0x20(%rsp)
   30083:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
   30088:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   3008d:	48 8d 05 84 51 01 00 	lea    0x15184(%rip),%rax        # 45218 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1cc0>
   30094:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   30099:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   3009e:	4c 89 ff             	mov    %r15,%rdi
   300a1:	41 ff 56 18          	callq  *0x18(%r14)
   300a5:	84 c0                	test   %al,%al
   300a7:	75 1b                	jne    300c4 <core::fmt::builders::DebugInner::entry+0x104>
   300a9:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   300ae:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   300b3:	48 8d 35 96 9e 00 00 	lea    0x9e96(%rip),%rsi        # 39f50 <str.1+0x110>
   300ba:	ba 02 00 00 00       	mov    $0x2,%edx
   300bf:	ff 50 18             	callq  *0x18(%rax)
   300c2:	89 c5                	mov    %eax,%ebp
   300c4:	40 88 6b 08          	mov    %bpl,0x8(%rbx)
   300c8:	c6 43 09 01          	movb   $0x1,0x9(%rbx)
   300cc:	48 83 c4 68          	add    $0x68,%rsp
   300d0:	5b                   	pop    %rbx
   300d1:	41 5e                	pop    %r14
   300d3:	41 5f                	pop    %r15
   300d5:	5d                   	pop    %rbp
   300d6:	c3                   	retq   
   300d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   300de:	00 00 

00000000000300e0 <core::fmt::builders::DebugSet::entry>:
   300e0:	53                   	push   %rbx
   300e1:	48 89 fb             	mov    %rdi,%rbx
   300e4:	e8 d7 fe ff ff       	callq  2ffc0 <core::fmt::builders::DebugInner::entry>
   300e9:	48 89 d8             	mov    %rbx,%rax
   300ec:	5b                   	pop    %rbx
   300ed:	c3                   	retq   
   300ee:	66 90                	xchg   %ax,%ax

00000000000300f0 <core::fmt::builders::DebugList::finish>:
   300f0:	80 7f 08 00          	cmpb   $0x0,0x8(%rdi)
   300f4:	74 03                	je     300f9 <core::fmt::builders::DebugList::finish+0x9>
   300f6:	b0 01                	mov    $0x1,%al
   300f8:	c3                   	retq   
   300f9:	48 8b 07             	mov    (%rdi),%rax
   300fc:	48 8b 78 20          	mov    0x20(%rax),%rdi
   30100:	48 8b 40 28          	mov    0x28(%rax),%rax
   30104:	48 8b 40 18          	mov    0x18(%rax),%rax
   30108:	48 8d 35 52 9e 00 00 	lea    0x9e52(%rip),%rsi        # 39f61 <str.1+0x121>
   3010f:	ba 01 00 00 00       	mov    $0x1,%edx
   30114:	ff e0                	jmpq   *%rax
   30116:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3011d:	00 00 00 

0000000000030120 <core::fmt::Write::write_char>:
   30120:	50                   	push   %rax
   30121:	89 f0                	mov    %esi,%eax
   30123:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
   3012a:	00 
   3012b:	81 fe 80 00 00 00    	cmp    $0x80,%esi
   30131:	73 16                	jae    30149 <core::fmt::Write::write_char+0x29>
   30133:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
   30138:	88 44 24 04          	mov    %al,0x4(%rsp)
   3013c:	ba 01 00 00 00       	mov    $0x1,%edx
   30141:	ff 15 e9 5b 01 00    	callq  *0x15be9(%rip)        # 45d30 <_GLOBAL_OFFSET_TABLE_+0x3a0>
   30147:	59                   	pop    %rcx
   30148:	c3                   	retq   
   30149:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
   3014e:	89 c1                	mov    %eax,%ecx
   30150:	3d 00 08 00 00       	cmp    $0x800,%eax
   30155:	73 1f                	jae    30176 <core::fmt::Write::write_char+0x56>
   30157:	c1 e9 06             	shr    $0x6,%ecx
   3015a:	80 c9 c0             	or     $0xc0,%cl
   3015d:	88 4c 24 04          	mov    %cl,0x4(%rsp)
   30161:	24 3f                	and    $0x3f,%al
   30163:	0c 80                	or     $0x80,%al
   30165:	88 44 24 05          	mov    %al,0x5(%rsp)
   30169:	ba 02 00 00 00       	mov    $0x2,%edx
   3016e:	ff 15 bc 5b 01 00    	callq  *0x15bbc(%rip)        # 45d30 <_GLOBAL_OFFSET_TABLE_+0x3a0>
   30174:	59                   	pop    %rcx
   30175:	c3                   	retq   
   30176:	3d 00 00 01 00       	cmp    $0x10000,%eax
   3017b:	73 2e                	jae    301ab <core::fmt::Write::write_char+0x8b>
   3017d:	c1 e9 0c             	shr    $0xc,%ecx
   30180:	80 c9 e0             	or     $0xe0,%cl
   30183:	88 4c 24 04          	mov    %cl,0x4(%rsp)
   30187:	89 c1                	mov    %eax,%ecx
   30189:	c1 e9 06             	shr    $0x6,%ecx
   3018c:	80 e1 3f             	and    $0x3f,%cl
   3018f:	80 c9 80             	or     $0x80,%cl
   30192:	88 4c 24 05          	mov    %cl,0x5(%rsp)
   30196:	24 3f                	and    $0x3f,%al
   30198:	0c 80                	or     $0x80,%al
   3019a:	88 44 24 06          	mov    %al,0x6(%rsp)
   3019e:	ba 03 00 00 00       	mov    $0x3,%edx
   301a3:	ff 15 87 5b 01 00    	callq  *0x15b87(%rip)        # 45d30 <_GLOBAL_OFFSET_TABLE_+0x3a0>
   301a9:	59                   	pop    %rcx
   301aa:	c3                   	retq   
   301ab:	c1 e9 12             	shr    $0x12,%ecx
   301ae:	80 c9 f0             	or     $0xf0,%cl
   301b1:	88 4c 24 04          	mov    %cl,0x4(%rsp)
   301b5:	89 c1                	mov    %eax,%ecx
   301b7:	c1 e9 0c             	shr    $0xc,%ecx
   301ba:	80 e1 3f             	and    $0x3f,%cl
   301bd:	80 c9 80             	or     $0x80,%cl
   301c0:	88 4c 24 05          	mov    %cl,0x5(%rsp)
   301c4:	89 c1                	mov    %eax,%ecx
   301c6:	c1 e9 06             	shr    $0x6,%ecx
   301c9:	80 e1 3f             	and    $0x3f,%cl
   301cc:	80 c9 80             	or     $0x80,%cl
   301cf:	88 4c 24 06          	mov    %cl,0x6(%rsp)
   301d3:	24 3f                	and    $0x3f,%al
   301d5:	0c 80                	or     $0x80,%al
   301d7:	88 44 24 07          	mov    %al,0x7(%rsp)
   301db:	ba 04 00 00 00       	mov    $0x4,%edx
   301e0:	ff 15 4a 5b 01 00    	callq  *0x15b4a(%rip)        # 45d30 <_GLOBAL_OFFSET_TABLE_+0x3a0>
   301e6:	59                   	pop    %rcx
   301e7:	c3                   	retq   
   301e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   301ef:	00 

00000000000301f0 <core::fmt::Write::write_fmt>:
   301f0:	48 83 ec 48          	sub    $0x48,%rsp
   301f4:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   301f9:	0f 10 06             	movups (%rsi),%xmm0
   301fc:	0f 10 4e 10          	movups 0x10(%rsi),%xmm1
   30200:	0f 10 56 20          	movups 0x20(%rsi),%xmm2
   30204:	0f 29 54 24 30       	movaps %xmm2,0x30(%rsp)
   30209:	0f 29 4c 24 20       	movaps %xmm1,0x20(%rsp)
   3020e:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   30213:	48 8d 35 96 50 01 00 	lea    0x15096(%rip),%rsi        # 452b0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1d58>
   3021a:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   3021f:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   30224:	ff 15 d6 5b 01 00    	callq  *0x15bd6(%rip)        # 45e00 <_GLOBAL_OFFSET_TABLE_+0x470>
   3022a:	48 83 c4 48          	add    $0x48,%rsp
   3022e:	c3                   	retq   
   3022f:	90                   	nop

0000000000030230 <<&mut W as core::fmt::Write>::write_str>:
   30230:	48 8b 3f             	mov    (%rdi),%rdi
   30233:	ff 25 f7 5a 01 00    	jmpq   *0x15af7(%rip)        # 45d30 <_GLOBAL_OFFSET_TABLE_+0x3a0>
   30239:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000030240 <<&mut W as core::fmt::Write>::write_char>:
   30240:	50                   	push   %rax
   30241:	89 f0                	mov    %esi,%eax
   30243:	48 8b 3f             	mov    (%rdi),%rdi
   30246:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
   3024d:	00 
   3024e:	81 fe 80 00 00 00    	cmp    $0x80,%esi
   30254:	73 16                	jae    3026c <<&mut W as core::fmt::Write>::write_char+0x2c>
   30256:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
   3025b:	88 44 24 04          	mov    %al,0x4(%rsp)
   3025f:	ba 01 00 00 00       	mov    $0x1,%edx
   30264:	ff 15 c6 5a 01 00    	callq  *0x15ac6(%rip)        # 45d30 <_GLOBAL_OFFSET_TABLE_+0x3a0>
   3026a:	59                   	pop    %rcx
   3026b:	c3                   	retq   
   3026c:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
   30271:	89 c1                	mov    %eax,%ecx
   30273:	3d 00 08 00 00       	cmp    $0x800,%eax
   30278:	73 1f                	jae    30299 <<&mut W as core::fmt::Write>::write_char+0x59>
   3027a:	c1 e9 06             	shr    $0x6,%ecx
   3027d:	80 c9 c0             	or     $0xc0,%cl
   30280:	88 4c 24 04          	mov    %cl,0x4(%rsp)
   30284:	24 3f                	and    $0x3f,%al
   30286:	0c 80                	or     $0x80,%al
   30288:	88 44 24 05          	mov    %al,0x5(%rsp)
   3028c:	ba 02 00 00 00       	mov    $0x2,%edx
   30291:	ff 15 99 5a 01 00    	callq  *0x15a99(%rip)        # 45d30 <_GLOBAL_OFFSET_TABLE_+0x3a0>
   30297:	59                   	pop    %rcx
   30298:	c3                   	retq   
   30299:	3d 00 00 01 00       	cmp    $0x10000,%eax
   3029e:	73 2e                	jae    302ce <<&mut W as core::fmt::Write>::write_char+0x8e>
   302a0:	c1 e9 0c             	shr    $0xc,%ecx
   302a3:	80 c9 e0             	or     $0xe0,%cl
   302a6:	88 4c 24 04          	mov    %cl,0x4(%rsp)
   302aa:	89 c1                	mov    %eax,%ecx
   302ac:	c1 e9 06             	shr    $0x6,%ecx
   302af:	80 e1 3f             	and    $0x3f,%cl
   302b2:	80 c9 80             	or     $0x80,%cl
   302b5:	88 4c 24 05          	mov    %cl,0x5(%rsp)
   302b9:	24 3f                	and    $0x3f,%al
   302bb:	0c 80                	or     $0x80,%al
   302bd:	88 44 24 06          	mov    %al,0x6(%rsp)
   302c1:	ba 03 00 00 00       	mov    $0x3,%edx
   302c6:	ff 15 64 5a 01 00    	callq  *0x15a64(%rip)        # 45d30 <_GLOBAL_OFFSET_TABLE_+0x3a0>
   302cc:	59                   	pop    %rcx
   302cd:	c3                   	retq   
   302ce:	c1 e9 12             	shr    $0x12,%ecx
   302d1:	80 c9 f0             	or     $0xf0,%cl
   302d4:	88 4c 24 04          	mov    %cl,0x4(%rsp)
   302d8:	89 c1                	mov    %eax,%ecx
   302da:	c1 e9 0c             	shr    $0xc,%ecx
   302dd:	80 e1 3f             	and    $0x3f,%cl
   302e0:	80 c9 80             	or     $0x80,%cl
   302e3:	88 4c 24 05          	mov    %cl,0x5(%rsp)
   302e7:	89 c1                	mov    %eax,%ecx
   302e9:	c1 e9 06             	shr    $0x6,%ecx
   302ec:	80 e1 3f             	and    $0x3f,%cl
   302ef:	80 c9 80             	or     $0x80,%cl
   302f2:	88 4c 24 06          	mov    %cl,0x6(%rsp)
   302f6:	24 3f                	and    $0x3f,%al
   302f8:	0c 80                	or     $0x80,%al
   302fa:	88 44 24 07          	mov    %al,0x7(%rsp)
   302fe:	ba 04 00 00 00       	mov    $0x4,%edx
   30303:	ff 15 27 5a 01 00    	callq  *0x15a27(%rip)        # 45d30 <_GLOBAL_OFFSET_TABLE_+0x3a0>
   30309:	59                   	pop    %rcx
   3030a:	c3                   	retq   
   3030b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000030310 <<&mut W as core::fmt::Write>::write_fmt>:
   30310:	48 83 ec 48          	sub    $0x48,%rsp
   30314:	48 8b 07             	mov    (%rdi),%rax
   30317:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   3031c:	0f 10 06             	movups (%rsi),%xmm0
   3031f:	0f 10 4e 10          	movups 0x10(%rsi),%xmm1
   30323:	0f 10 56 20          	movups 0x20(%rsi),%xmm2
   30327:	0f 29 54 24 30       	movaps %xmm2,0x30(%rsp)
   3032c:	0f 29 4c 24 20       	movaps %xmm1,0x20(%rsp)
   30331:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   30336:	48 8d 35 73 4f 01 00 	lea    0x14f73(%rip),%rsi        # 452b0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1d58>
   3033d:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   30342:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   30347:	ff 15 b3 5a 01 00    	callq  *0x15ab3(%rip)        # 45e00 <_GLOBAL_OFFSET_TABLE_+0x470>
   3034d:	48 83 c4 48          	add    $0x48,%rsp
   30351:	c3                   	retq   
   30352:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   30359:	00 00 00 
   3035c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000030360 <core::fmt::ArgumentV1::from_usize>:
   30360:	48 89 f8             	mov    %rdi,%rax
   30363:	48 8d 15 86 ef ff ff 	lea    -0x107a(%rip),%rdx        # 2f2f0 <core::ops::function::FnOnce::call_once>
   3036a:	c3                   	retq   
   3036b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000030370 <<core::fmt::Arguments as core::fmt::Debug>::fmt>:
   30370:	48 83 ec 38          	sub    $0x38,%rsp
   30374:	48 8b 46 20          	mov    0x20(%rsi),%rax
   30378:	48 8b 76 28          	mov    0x28(%rsi),%rsi
   3037c:	0f 10 07             	movups (%rdi),%xmm0
   3037f:	0f 10 4f 10          	movups 0x10(%rdi),%xmm1
   30383:	0f 10 57 20          	movups 0x20(%rdi),%xmm2
   30387:	0f 29 54 24 20       	movaps %xmm2,0x20(%rsp)
   3038c:	0f 29 4c 24 10       	movaps %xmm1,0x10(%rsp)
   30391:	0f 29 04 24          	movaps %xmm0,(%rsp)
   30395:	48 89 e2             	mov    %rsp,%rdx
   30398:	48 89 c7             	mov    %rax,%rdi
   3039b:	ff 15 5f 5a 01 00    	callq  *0x15a5f(%rip)        # 45e00 <_GLOBAL_OFFSET_TABLE_+0x470>
   303a1:	48 83 c4 38          	add    $0x38,%rsp
   303a5:	c3                   	retq   
   303a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   303ad:	00 00 00 

00000000000303b0 <core::fmt::write>:
   303b0:	55                   	push   %rbp
   303b1:	41 57                	push   %r15
   303b3:	41 56                	push   %r14
   303b5:	41 55                	push   %r13
   303b7:	41 54                	push   %r12
   303b9:	53                   	push   %rbx
   303ba:	48 83 ec 58          	sub    $0x58,%rsp
   303be:	48 89 d3             	mov    %rdx,%rbx
   303c1:	48 89 f1             	mov    %rsi,%rcx
   303c4:	48 b8 00 00 00 00 20 	movabs $0x2000000000,%rax
   303cb:	00 00 00 
   303ce:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   303d3:	c6 44 24 50 03       	movb   $0x3,0x50(%rsp)
   303d8:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   303df:	00 00 
   303e1:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   303e8:	00 00 
   303ea:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
   303ef:	48 89 74 24 40       	mov    %rsi,0x40(%rsp)
   303f4:	48 8b 6a 10          	mov    0x10(%rdx),%rbp
   303f8:	48 85 ed             	test   %rbp,%rbp
   303fb:	0f 84 79 01 00 00    	je     3057a <core::fmt::write+0x1ca>
   30401:	4c 8b 6b 18          	mov    0x18(%rbx),%r13
   30405:	48 8b 03             	mov    (%rbx),%rax
   30408:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   3040c:	49 39 d5             	cmp    %rdx,%r13
   3040f:	4c 0f 47 ea          	cmova  %rdx,%r13
   30413:	4d 85 ed             	test   %r13,%r13
   30416:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   3041b:	0f 84 de 01 00 00    	je     305ff <core::fmt::write+0x24f>
   30421:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   30426:	48 8b 30             	mov    (%rax),%rsi
   30429:	48 8b 50 08          	mov    0x8(%rax),%rdx
   3042d:	ff 51 18             	callq  *0x18(%rcx)
   30430:	84 c0                	test   %al,%al
   30432:	0f 85 fe 01 00 00    	jne    30636 <core::fmt::write+0x286>
   30438:	4c 8b 73 20          	mov    0x20(%rbx),%r14
   3043c:	48 8b 43 28          	mov    0x28(%rbx),%rax
   30440:	48 89 04 24          	mov    %rax,(%rsp)
   30444:	48 83 c5 30          	add    $0x30,%rbp
   30448:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   3044d:	48 83 c3 18          	add    $0x18,%rbx
   30451:	4d 89 ec             	mov    %r13,%r12
   30454:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3045b:	00 00 00 
   3045e:	66 90                	xchg   %ax,%ax
   30460:	8b 45 f8             	mov    -0x8(%rbp),%eax
   30463:	89 44 24 4c          	mov    %eax,0x4c(%rsp)
   30467:	0f b6 45 00          	movzbl 0x0(%rbp),%eax
   3046b:	88 44 24 50          	mov    %al,0x50(%rsp)
   3046f:	8b 45 fc             	mov    -0x4(%rbp),%eax
   30472:	89 44 24 48          	mov    %eax,0x48(%rsp)
   30476:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   3047a:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
   3047e:	48 85 c0             	test   %rax,%rax
   30481:	74 29                	je     304ac <core::fmt::write+0xfc>
   30483:	48 83 f8 02          	cmp    $0x2,%rax
   30487:	74 37                	je     304c0 <core::fmt::write+0x110>
   30489:	48 3b 3c 24          	cmp    (%rsp),%rdi
   3048d:	0f 83 c4 01 00 00    	jae    30657 <core::fmt::write+0x2a7>
   30493:	48 c1 e7 04          	shl    $0x4,%rdi
   30497:	48 8d 05 52 ee ff ff 	lea    -0x11ae(%rip),%rax        # 2f2f0 <core::ops::function::FnOnce::call_once>
   3049e:	49 39 44 3e 08       	cmp    %rax,0x8(%r14,%rdi,1)
   304a3:	75 1b                	jne    304c0 <core::fmt::write+0x110>
   304a5:	49 8b 04 3e          	mov    (%r14,%rdi,1),%rax
   304a9:	48 8b 38             	mov    (%rax),%rdi
   304ac:	b8 01 00 00 00       	mov    $0x1,%eax
   304b1:	e9 0c 00 00 00       	jmpq   304c2 <core::fmt::write+0x112>
   304b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   304bd:	00 00 00 
   304c0:	31 c0                	xor    %eax,%eax
   304c2:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   304c7:	48 89 7c 24 20       	mov    %rdi,0x20(%rsp)
   304cc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   304d0:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
   304d4:	48 85 c0             	test   %rax,%rax
   304d7:	74 29                	je     30502 <core::fmt::write+0x152>
   304d9:	48 83 f8 02          	cmp    $0x2,%rax
   304dd:	74 31                	je     30510 <core::fmt::write+0x160>
   304df:	48 3b 3c 24          	cmp    (%rsp),%rdi
   304e3:	0f 83 6e 01 00 00    	jae    30657 <core::fmt::write+0x2a7>
   304e9:	48 c1 e7 04          	shl    $0x4,%rdi
   304ed:	48 8d 05 fc ed ff ff 	lea    -0x1204(%rip),%rax        # 2f2f0 <core::ops::function::FnOnce::call_once>
   304f4:	49 39 44 3e 08       	cmp    %rax,0x8(%r14,%rdi,1)
   304f9:	75 15                	jne    30510 <core::fmt::write+0x160>
   304fb:	49 8b 04 3e          	mov    (%r14,%rdi,1),%rax
   304ff:	48 8b 38             	mov    (%rax),%rdi
   30502:	b8 01 00 00 00       	mov    $0x1,%eax
   30507:	e9 06 00 00 00       	jmpq   30512 <core::fmt::write+0x162>
   3050c:	0f 1f 40 00          	nopl   0x0(%rax)
   30510:	31 c0                	xor    %eax,%eax
   30512:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   30517:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
   3051c:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   30520:	48 3b 0c 24          	cmp    (%rsp),%rcx
   30524:	0f 83 21 01 00 00    	jae    3064b <core::fmt::write+0x29b>
   3052a:	48 c1 e1 04          	shl    $0x4,%rcx
   3052e:	49 8b 3c 0e          	mov    (%r14,%rcx,1),%rdi
   30532:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   30537:	41 ff 54 0e 08       	callq  *0x8(%r14,%rcx,1)
   3053c:	84 c0                	test   %al,%al
   3053e:	0f 85 f2 00 00 00    	jne    30636 <core::fmt::write+0x286>
   30544:	49 83 c4 ff          	add    $0xffffffffffffffff,%r12
   30548:	0f 84 bb 00 00 00    	je     30609 <core::fmt::write+0x259>
   3054e:	48 83 c5 38          	add    $0x38,%rbp
   30552:	4c 8d 7b 10          	lea    0x10(%rbx),%r15
   30556:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
   3055b:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   30560:	48 8b 73 f8          	mov    -0x8(%rbx),%rsi
   30564:	48 8b 13             	mov    (%rbx),%rdx
   30567:	ff 50 18             	callq  *0x18(%rax)
   3056a:	4c 89 fb             	mov    %r15,%rbx
   3056d:	84 c0                	test   %al,%al
   3056f:	0f 84 eb fe ff ff    	je     30460 <core::fmt::write+0xb0>
   30575:	e9 bc 00 00 00       	jmpq   30636 <core::fmt::write+0x286>
   3057a:	4c 8b 6b 28          	mov    0x28(%rbx),%r13
   3057e:	48 8b 03             	mov    (%rbx),%rax
   30581:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   30585:	49 39 d5             	cmp    %rdx,%r13
   30588:	4c 0f 47 ea          	cmova  %rdx,%r13
   3058c:	4d 85 ed             	test   %r13,%r13
   3058f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   30594:	74 69                	je     305ff <core::fmt::write+0x24f>
   30596:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   3059b:	4c 8b 7b 20          	mov    0x20(%rbx),%r15
   3059f:	48 8b 30             	mov    (%rax),%rsi
   305a2:	48 8b 50 08          	mov    0x8(%rax),%rdx
   305a6:	ff 51 18             	callq  *0x18(%rcx)
   305a9:	84 c0                	test   %al,%al
   305ab:	0f 85 85 00 00 00    	jne    30636 <core::fmt::write+0x286>
   305b1:	31 ed                	xor    %ebp,%ebp
   305b3:	4c 8d 74 24 18       	lea    0x18(%rsp),%r14
   305b8:	4c 89 eb             	mov    %r13,%rbx
   305bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   305c0:	49 8b 3c 2f          	mov    (%r15,%rbp,1),%rdi
   305c4:	4c 89 f6             	mov    %r14,%rsi
   305c7:	41 ff 54 2f 08       	callq  *0x8(%r15,%rbp,1)
   305cc:	84 c0                	test   %al,%al
   305ce:	75 66                	jne    30636 <core::fmt::write+0x286>
   305d0:	48 83 c3 ff          	add    $0xffffffffffffffff,%rbx
   305d4:	74 33                	je     30609 <core::fmt::write+0x259>
   305d6:	4c 8d 65 10          	lea    0x10(%rbp),%r12
   305da:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
   305df:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   305e4:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   305e9:	48 8b 74 29 10       	mov    0x10(%rcx,%rbp,1),%rsi
   305ee:	48 8b 54 29 18       	mov    0x18(%rcx,%rbp,1),%rdx
   305f3:	ff 50 18             	callq  *0x18(%rax)
   305f6:	4c 89 e5             	mov    %r12,%rbp
   305f9:	84 c0                	test   %al,%al
   305fb:	74 c3                	je     305c0 <core::fmt::write+0x210>
   305fd:	eb 37                	jmp    30636 <core::fmt::write+0x286>
   305ff:	45 31 ed             	xor    %r13d,%r13d
   30602:	4c 39 ea             	cmp    %r13,%rdx
   30605:	77 0c                	ja     30613 <core::fmt::write+0x263>
   30607:	eb 31                	jmp    3063a <core::fmt::write+0x28a>
   30609:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   3060e:	4c 39 ea             	cmp    %r13,%rdx
   30611:	76 27                	jbe    3063a <core::fmt::write+0x28a>
   30613:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
   30618:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   3061d:	49 c1 e5 04          	shl    $0x4,%r13
   30621:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   30626:	4a 8b 34 29          	mov    (%rcx,%r13,1),%rsi
   3062a:	4a 8b 54 29 08       	mov    0x8(%rcx,%r13,1),%rdx
   3062f:	ff 50 18             	callq  *0x18(%rax)
   30632:	84 c0                	test   %al,%al
   30634:	74 04                	je     3063a <core::fmt::write+0x28a>
   30636:	b0 01                	mov    $0x1,%al
   30638:	eb 02                	jmp    3063c <core::fmt::write+0x28c>
   3063a:	31 c0                	xor    %eax,%eax
   3063c:	48 83 c4 58          	add    $0x58,%rsp
   30640:	5b                   	pop    %rbx
   30641:	41 5c                	pop    %r12
   30643:	41 5d                	pop    %r13
   30645:	41 5e                	pop    %r14
   30647:	41 5f                	pop    %r15
   30649:	5d                   	pop    %rbp
   3064a:	c3                   	retq   
   3064b:	48 8d 15 8e 4c 01 00 	lea    0x14c8e(%rip),%rdx        # 452e0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1d88>
   30652:	48 89 cf             	mov    %rcx,%rdi
   30655:	eb 07                	jmp    3065e <core::fmt::write+0x2ae>
   30657:	48 8d 15 9a 4c 01 00 	lea    0x14c9a(%rip),%rdx        # 452f8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1da0>
   3065e:	48 8b 34 24          	mov    (%rsp),%rsi
   30662:	ff 15 30 56 01 00    	callq  *0x15630(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   30668:	0f 0b                	ud2    
   3066a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000030670 <core::fmt::Formatter::pad_integral>:
   30670:	55                   	push   %rbp
   30671:	41 57                	push   %r15
   30673:	41 56                	push   %r14
   30675:	41 55                	push   %r13
   30677:	41 54                	push   %r12
   30679:	53                   	push   %rbx
   3067a:	48 83 ec 18          	sub    $0x18,%rsp
   3067e:	4d 89 cf             	mov    %r9,%r15
   30681:	4c 89 c5             	mov    %r8,%rbp
   30684:	49 89 cc             	mov    %rcx,%r12
   30687:	48 89 d3             	mov    %rdx,%rbx
   3068a:	49 89 fd             	mov    %rdi,%r13
   3068d:	40 84 f6             	test   %sil,%sil
   30690:	74 3c                	je     306ce <core::fmt::Formatter::pad_integral+0x5e>
   30692:	45 8b 4d 30          	mov    0x30(%r13),%r9d
   30696:	44 89 c8             	mov    %r9d,%eax
   30699:	83 e0 01             	and    $0x1,%eax
   3069c:	85 c0                	test   %eax,%eax
   3069e:	ba 00 00 11 00       	mov    $0x110000,%edx
   306a3:	41 be 2b 00 00 00    	mov    $0x2b,%r14d
   306a9:	44 0f 44 f2          	cmove  %edx,%r14d
   306ad:	4c 01 f8             	add    %r15,%rax
   306b0:	41 f6 c1 04          	test   $0x4,%r9b
   306b4:	74 2c                	je     306e2 <core::fmt::Formatter::pad_integral+0x72>
   306b6:	49 89 ea             	mov    %rbp,%r10
   306b9:	4d 85 e4             	test   %r12,%r12
   306bc:	74 64                	je     30722 <core::fmt::Formatter::pad_integral+0xb2>
   306be:	49 83 fc 04          	cmp    $0x4,%r12
   306c2:	73 65                	jae    30729 <core::fmt::Formatter::pad_integral+0xb9>
   306c4:	31 f6                	xor    %esi,%esi
   306c6:	48 89 da             	mov    %rbx,%rdx
   306c9:	e9 da 01 00 00       	jmpq   308a8 <core::fmt::Formatter::pad_integral+0x238>
   306ce:	49 8d 47 01          	lea    0x1(%r15),%rax
   306d2:	45 8b 4d 30          	mov    0x30(%r13),%r9d
   306d6:	41 be 2d 00 00 00    	mov    $0x2d,%r14d
   306dc:	41 f6 c1 04          	test   $0x4,%r9b
   306e0:	75 d4                	jne    306b6 <core::fmt::Formatter::pad_integral+0x46>
   306e2:	31 db                	xor    %ebx,%ebx
   306e4:	41 83 7d 00 01       	cmpl   $0x1,0x0(%r13)
   306e9:	0f 84 f0 01 00 00    	je     308df <core::fmt::Formatter::pad_integral+0x26f>
   306ef:	4c 89 ef             	mov    %r13,%rdi
   306f2:	44 89 f6             	mov    %r14d,%esi
   306f5:	48 89 da             	mov    %rbx,%rdx
   306f8:	4c 89 e1             	mov    %r12,%rcx
   306fb:	e8 40 04 00 00       	callq  30b40 <core::fmt::Formatter::pad_integral::write_prefix>
   30700:	41 b4 01             	mov    $0x1,%r12b
   30703:	84 c0                	test   %al,%al
   30705:	0f 85 1d 04 00 00    	jne    30b28 <core::fmt::Formatter::pad_integral+0x4b8>
   3070b:	49 8b 7d 20          	mov    0x20(%r13),%rdi
   3070f:	49 8b 45 28          	mov    0x28(%r13),%rax
   30713:	48 8b 40 18          	mov    0x18(%rax),%rax
   30717:	48 89 ee             	mov    %rbp,%rsi
   3071a:	4c 89 fa             	mov    %r15,%rdx
   3071d:	e9 3d 02 00 00       	jmpq   3095f <core::fmt::Formatter::pad_integral+0x2ef>
   30722:	31 f6                	xor    %esi,%esi
   30724:	e9 a2 01 00 00       	jmpq   308cb <core::fmt::Formatter::pad_integral+0x25b>
   30729:	4c 89 e2             	mov    %r12,%rdx
   3072c:	48 83 e2 fc          	and    $0xfffffffffffffffc,%rdx
   30730:	48 8d 72 fc          	lea    -0x4(%rdx),%rsi
   30734:	49 89 f0             	mov    %rsi,%r8
   30737:	49 c1 e8 02          	shr    $0x2,%r8
   3073b:	49 83 c0 01          	add    $0x1,%r8
   3073f:	48 85 f6             	test   %rsi,%rsi
   30742:	0f 84 93 02 00 00    	je     309db <core::fmt::Formatter::pad_integral+0x36b>
   30748:	4c 89 c7             	mov    %r8,%rdi
   3074b:	48 83 e7 fe          	and    $0xfffffffffffffffe,%rdi
   3074f:	48 f7 df             	neg    %rdi
   30752:	66 0f ef c0          	pxor   %xmm0,%xmm0
   30756:	31 f6                	xor    %esi,%esi
   30758:	66 0f 6f 15 00 93 00 	movdqa 0x9300(%rip),%xmm2        # 39a60 <str.6+0x2740>
   3075f:	00 
   30760:	66 0f 6f 1d 08 93 00 	movdqa 0x9308(%rip),%xmm3        # 39a70 <str.6+0x2750>
   30767:	00 
   30768:	66 0f 6f 25 d0 58 00 	movdqa 0x58d0(%rip),%xmm4        # 36040 <_fini+0xfbc>
   3076f:	00 
   30770:	66 0f ef c9          	pxor   %xmm1,%xmm1
   30774:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3077b:	00 00 00 
   3077e:	66 90                	xchg   %ax,%ax
   30780:	0f b7 2c 33          	movzwl (%rbx,%rsi,1),%ebp
   30784:	66 0f 6e ed          	movd   %ebp,%xmm5
   30788:	0f b7 6c 33 02       	movzwl 0x2(%rbx,%rsi,1),%ebp
   3078d:	66 0f 6e f5          	movd   %ebp,%xmm6
   30791:	66 0f db ea          	pand   %xmm2,%xmm5
   30795:	66 0f db f2          	pand   %xmm2,%xmm6
   30799:	66 0f 74 eb          	pcmpeqb %xmm3,%xmm5
   3079d:	66 0f 60 ed          	punpcklbw %xmm5,%xmm5
   307a1:	66 0f 61 ed          	punpcklwd %xmm5,%xmm5
   307a5:	66 0f 70 ed d4       	pshufd $0xd4,%xmm5,%xmm5
   307aa:	66 0f db ec          	pand   %xmm4,%xmm5
   307ae:	66 0f d4 e8          	paddq  %xmm0,%xmm5
   307b2:	66 0f 74 f3          	pcmpeqb %xmm3,%xmm6
   307b6:	66 0f 60 f6          	punpcklbw %xmm6,%xmm6
   307ba:	66 0f 61 f6          	punpcklwd %xmm6,%xmm6
   307be:	66 0f 70 f6 d4       	pshufd $0xd4,%xmm6,%xmm6
   307c3:	66 0f db f4          	pand   %xmm4,%xmm6
   307c7:	66 0f d4 f1          	paddq  %xmm1,%xmm6
   307cb:	0f b7 6c 33 04       	movzwl 0x4(%rbx,%rsi,1),%ebp
   307d0:	66 0f 6e c5          	movd   %ebp,%xmm0
   307d4:	0f b7 6c 33 06       	movzwl 0x6(%rbx,%rsi,1),%ebp
   307d9:	66 0f 6e cd          	movd   %ebp,%xmm1
   307dd:	66 0f db c2          	pand   %xmm2,%xmm0
   307e1:	66 0f db ca          	pand   %xmm2,%xmm1
   307e5:	66 0f 74 c3          	pcmpeqb %xmm3,%xmm0
   307e9:	66 0f 60 c0          	punpcklbw %xmm0,%xmm0
   307ed:	66 0f 61 c0          	punpcklwd %xmm0,%xmm0
   307f1:	66 0f 70 c0 d4       	pshufd $0xd4,%xmm0,%xmm0
   307f6:	66 0f db c4          	pand   %xmm4,%xmm0
   307fa:	66 0f d4 c5          	paddq  %xmm5,%xmm0
   307fe:	66 0f 74 cb          	pcmpeqb %xmm3,%xmm1
   30802:	66 0f 60 c9          	punpcklbw %xmm1,%xmm1
   30806:	66 0f 61 c9          	punpcklwd %xmm1,%xmm1
   3080a:	66 0f 70 c9 d4       	pshufd $0xd4,%xmm1,%xmm1
   3080f:	66 0f db cc          	pand   %xmm4,%xmm1
   30813:	66 0f d4 ce          	paddq  %xmm6,%xmm1
   30817:	48 83 c6 08          	add    $0x8,%rsi
   3081b:	48 83 c7 02          	add    $0x2,%rdi
   3081f:	0f 85 5b ff ff ff    	jne    30780 <core::fmt::Formatter::pad_integral+0x110>
   30825:	41 f6 c0 01          	test   $0x1,%r8b
   30829:	74 63                	je     3088e <core::fmt::Formatter::pad_integral+0x21e>
   3082b:	0f b7 7c 33 02       	movzwl 0x2(%rbx,%rsi,1),%edi
   30830:	66 0f 6e d7          	movd   %edi,%xmm2
   30834:	66 0f 6f 1d 24 92 00 	movdqa 0x9224(%rip),%xmm3        # 39a60 <str.6+0x2740>
   3083b:	00 
   3083c:	66 0f db d3          	pand   %xmm3,%xmm2
   30840:	66 0f 6f 25 28 92 00 	movdqa 0x9228(%rip),%xmm4        # 39a70 <str.6+0x2750>
   30847:	00 
   30848:	66 0f 74 d4          	pcmpeqb %xmm4,%xmm2
   3084c:	66 0f 60 d2          	punpcklbw %xmm2,%xmm2
   30850:	66 0f 61 d2          	punpcklwd %xmm2,%xmm2
   30854:	66 0f 70 d2 d4       	pshufd $0xd4,%xmm2,%xmm2
   30859:	66 0f 6f 2d df 57 00 	movdqa 0x57df(%rip),%xmm5        # 36040 <_fini+0xfbc>
   30860:	00 
   30861:	66 0f db d5          	pand   %xmm5,%xmm2
   30865:	66 0f d4 ca          	paddq  %xmm2,%xmm1
   30869:	0f b7 34 33          	movzwl (%rbx,%rsi,1),%esi
   3086d:	66 0f 6e d6          	movd   %esi,%xmm2
   30871:	66 0f db d3          	pand   %xmm3,%xmm2
   30875:	66 0f 74 d4          	pcmpeqb %xmm4,%xmm2
   30879:	66 0f 60 d2          	punpcklbw %xmm2,%xmm2
   3087d:	66 0f 61 d2          	punpcklwd %xmm2,%xmm2
   30881:	66 0f 70 d2 d4       	pshufd $0xd4,%xmm2,%xmm2
   30886:	66 0f db d5          	pand   %xmm5,%xmm2
   3088a:	66 0f d4 c2          	paddq  %xmm2,%xmm0
   3088e:	66 0f d4 c1          	paddq  %xmm1,%xmm0
   30892:	66 0f 70 c8 4e       	pshufd $0x4e,%xmm0,%xmm1
   30897:	66 0f d4 c8          	paddq  %xmm0,%xmm1
   3089b:	66 48 0f 7e ce       	movq   %xmm1,%rsi
   308a0:	4c 39 e2             	cmp    %r12,%rdx
   308a3:	74 26                	je     308cb <core::fmt::Formatter::pad_integral+0x25b>
   308a5:	48 01 da             	add    %rbx,%rdx
   308a8:	4a 8d 3c 23          	lea    (%rbx,%r12,1),%rdi
   308ac:	0f 1f 40 00          	nopl   0x0(%rax)
   308b0:	0f b6 0a             	movzbl (%rdx),%ecx
   308b3:	48 83 c2 01          	add    $0x1,%rdx
   308b7:	80 e1 c0             	and    $0xc0,%cl
   308ba:	31 ed                	xor    %ebp,%ebp
   308bc:	80 f9 80             	cmp    $0x80,%cl
   308bf:	40 0f 94 c5          	sete   %bpl
   308c3:	48 01 ee             	add    %rbp,%rsi
   308c6:	48 39 d7             	cmp    %rdx,%rdi
   308c9:	75 e5                	jne    308b0 <core::fmt::Formatter::pad_integral+0x240>
   308cb:	4c 01 e0             	add    %r12,%rax
   308ce:	48 29 f0             	sub    %rsi,%rax
   308d1:	4c 89 d5             	mov    %r10,%rbp
   308d4:	41 83 7d 00 01       	cmpl   $0x1,0x0(%r13)
   308d9:	0f 85 10 fe ff ff    	jne    306ef <core::fmt::Formatter::pad_integral+0x7f>
   308df:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
   308e4:	49 8b 55 08          	mov    0x8(%r13),%rdx
   308e8:	49 89 d7             	mov    %rdx,%r15
   308eb:	49 29 c7             	sub    %rax,%r15
   308ee:	76 3f                	jbe    3092f <core::fmt::Formatter::pad_integral+0x2bf>
   308f0:	41 f6 c1 08          	test   $0x8,%r9b
   308f4:	75 79                	jne    3096f <core::fmt::Formatter::pad_integral+0x2ff>
   308f6:	48 89 6c 24 08       	mov    %rbp,0x8(%rsp)
   308fb:	48 29 c2             	sub    %rax,%rdx
   308fe:	41 8b 45 38          	mov    0x38(%r13),%eax
   30902:	3c 03                	cmp    $0x3,%al
   30904:	b9 01 00 00 00       	mov    $0x1,%ecx
   30909:	0f 45 c8             	cmovne %eax,%ecx
   3090c:	31 ed                	xor    %ebp,%ebp
   3090e:	0f b6 c1             	movzbl %cl,%eax
   30911:	48 8d 0d 98 93 00 00 	lea    0x9398(%rip),%rcx        # 39cb0 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x160>
   30918:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   3091c:	48 01 c8             	add    %rcx,%rax
   3091f:	49 89 d7             	mov    %rdx,%r15
   30922:	ff e0                	jmpq   *%rax
   30924:	45 31 ff             	xor    %r15d,%r15d
   30927:	48 89 d5             	mov    %rdx,%rbp
   3092a:	e9 d5 00 00 00       	jmpq   30a04 <core::fmt::Formatter::pad_integral+0x394>
   3092f:	4c 89 ef             	mov    %r13,%rdi
   30932:	44 89 f6             	mov    %r14d,%esi
   30935:	48 89 da             	mov    %rbx,%rdx
   30938:	4c 89 e1             	mov    %r12,%rcx
   3093b:	e8 00 02 00 00       	callq  30b40 <core::fmt::Formatter::pad_integral::write_prefix>
   30940:	41 b4 01             	mov    $0x1,%r12b
   30943:	84 c0                	test   %al,%al
   30945:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   3094a:	0f 85 d8 01 00 00    	jne    30b28 <core::fmt::Formatter::pad_integral+0x4b8>
   30950:	49 8b 7d 20          	mov    0x20(%r13),%rdi
   30954:	49 8b 45 28          	mov    0x28(%r13),%rax
   30958:	48 8b 40 18          	mov    0x18(%rax),%rax
   3095c:	48 89 ee             	mov    %rbp,%rsi
   3095f:	48 83 c4 18          	add    $0x18,%rsp
   30963:	5b                   	pop    %rbx
   30964:	41 5c                	pop    %r12
   30966:	41 5d                	pop    %r13
   30968:	41 5e                	pop    %r14
   3096a:	41 5f                	pop    %r15
   3096c:	5d                   	pop    %rbp
   3096d:	ff e0                	jmpq   *%rax
   3096f:	41 8b 45 34          	mov    0x34(%r13),%eax
   30973:	89 44 24 08          	mov    %eax,0x8(%rsp)
   30977:	41 c7 45 34 30 00 00 	movl   $0x30,0x34(%r13)
   3097e:	00 
   3097f:	41 8a 45 38          	mov    0x38(%r13),%al
   30983:	88 44 24 07          	mov    %al,0x7(%rsp)
   30987:	41 c6 45 38 01       	movb   $0x1,0x38(%r13)
   3098c:	4c 89 ef             	mov    %r13,%rdi
   3098f:	44 89 f6             	mov    %r14d,%esi
   30992:	48 89 da             	mov    %rbx,%rdx
   30995:	4c 89 e1             	mov    %r12,%rcx
   30998:	e8 a3 01 00 00       	callq  30b40 <core::fmt::Formatter::pad_integral::write_prefix>
   3099d:	41 b4 01             	mov    $0x1,%r12b
   309a0:	84 c0                	test   %al,%al
   309a2:	0f 85 80 01 00 00    	jne    30b28 <core::fmt::Formatter::pad_integral+0x4b8>
   309a8:	49 89 ee             	mov    %rbp,%r14
   309ab:	41 8b 45 38          	mov    0x38(%r13),%eax
   309af:	3c 03                	cmp    $0x3,%al
   309b1:	b9 01 00 00 00       	mov    $0x1,%ecx
   309b6:	0f 45 c8             	cmovne %eax,%ecx
   309b9:	31 ed                	xor    %ebp,%ebp
   309bb:	0f b6 c1             	movzbl %cl,%eax
   309be:	48 8d 0d db 92 00 00 	lea    0x92db(%rip),%rcx        # 39ca0 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x150>
   309c5:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   309c9:	48 01 c8             	add    %rcx,%rax
   309cc:	4c 89 fb             	mov    %r15,%rbx
   309cf:	ff e0                	jmpq   *%rax
   309d1:	31 db                	xor    %ebx,%ebx
   309d3:	4c 89 fd             	mov    %r15,%rbp
   309d6:	e9 d0 00 00 00       	jmpq   30aab <core::fmt::Formatter::pad_integral+0x43b>
   309db:	66 0f ef c0          	pxor   %xmm0,%xmm0
   309df:	31 f6                	xor    %esi,%esi
   309e1:	66 0f ef c9          	pxor   %xmm1,%xmm1
   309e5:	41 f6 c0 01          	test   $0x1,%r8b
   309e9:	0f 85 3c fe ff ff    	jne    3082b <core::fmt::Formatter::pad_integral+0x1bb>
   309ef:	e9 9a fe ff ff       	jmpq   3088e <core::fmt::Formatter::pad_integral+0x21e>
   309f4:	48 89 d5             	mov    %rdx,%rbp
   309f7:	48 d1 ed             	shr    %rbp
   309fa:	48 83 c2 01          	add    $0x1,%rdx
   309fe:	48 d1 ea             	shr    %rdx
   30a01:	49 89 d7             	mov    %rdx,%r15
   30a04:	48 83 c5 01          	add    $0x1,%rbp
   30a08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   30a0f:	00 
   30a10:	48 83 c5 ff          	add    $0xffffffffffffffff,%rbp
   30a14:	74 1b                	je     30a31 <core::fmt::Formatter::pad_integral+0x3c1>
   30a16:	49 8b 7d 20          	mov    0x20(%r13),%rdi
   30a1a:	49 8b 45 28          	mov    0x28(%r13),%rax
   30a1e:	41 8b 75 34          	mov    0x34(%r13),%esi
   30a22:	ff 50 20             	callq  *0x20(%rax)
   30a25:	84 c0                	test   %al,%al
   30a27:	74 e7                	je     30a10 <core::fmt::Formatter::pad_integral+0x3a0>
   30a29:	41 b4 01             	mov    $0x1,%r12b
   30a2c:	e9 f7 00 00 00       	jmpq   30b28 <core::fmt::Formatter::pad_integral+0x4b8>
   30a31:	41 8b 6d 34          	mov    0x34(%r13),%ebp
   30a35:	4c 89 ef             	mov    %r13,%rdi
   30a38:	44 89 f6             	mov    %r14d,%esi
   30a3b:	48 89 da             	mov    %rbx,%rdx
   30a3e:	4c 89 e1             	mov    %r12,%rcx
   30a41:	e8 fa 00 00 00       	callq  30b40 <core::fmt::Formatter::pad_integral::write_prefix>
   30a46:	41 b4 01             	mov    $0x1,%r12b
   30a49:	84 c0                	test   %al,%al
   30a4b:	0f 85 d7 00 00 00    	jne    30b28 <core::fmt::Formatter::pad_integral+0x4b8>
   30a51:	49 8b 7d 20          	mov    0x20(%r13),%rdi
   30a55:	49 8b 45 28          	mov    0x28(%r13),%rax
   30a59:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   30a5e:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   30a63:	ff 50 18             	callq  *0x18(%rax)
   30a66:	84 c0                	test   %al,%al
   30a68:	0f 85 ba 00 00 00    	jne    30b28 <core::fmt::Formatter::pad_integral+0x4b8>
   30a6e:	4d 8b 75 20          	mov    0x20(%r13),%r14
   30a72:	49 8b 5d 28          	mov    0x28(%r13),%rbx
   30a76:	49 83 c7 01          	add    $0x1,%r15
   30a7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   30a80:	49 83 c7 ff          	add    $0xffffffffffffffff,%r15
   30a84:	0f 84 9b 00 00 00    	je     30b25 <core::fmt::Formatter::pad_integral+0x4b5>
   30a8a:	4c 89 f7             	mov    %r14,%rdi
   30a8d:	89 ee                	mov    %ebp,%esi
   30a8f:	ff 53 20             	callq  *0x20(%rbx)
   30a92:	84 c0                	test   %al,%al
   30a94:	74 ea                	je     30a80 <core::fmt::Formatter::pad_integral+0x410>
   30a96:	e9 8d 00 00 00       	jmpq   30b28 <core::fmt::Formatter::pad_integral+0x4b8>
   30a9b:	4c 89 fd             	mov    %r15,%rbp
   30a9e:	48 d1 ed             	shr    %rbp
   30aa1:	49 83 c7 01          	add    $0x1,%r15
   30aa5:	49 d1 ef             	shr    %r15
   30aa8:	4c 89 fb             	mov    %r15,%rbx
   30aab:	48 83 c5 01          	add    $0x1,%rbp
   30aaf:	90                   	nop
   30ab0:	48 83 c5 ff          	add    $0xffffffffffffffff,%rbp
   30ab4:	74 15                	je     30acb <core::fmt::Formatter::pad_integral+0x45b>
   30ab6:	49 8b 7d 20          	mov    0x20(%r13),%rdi
   30aba:	49 8b 45 28          	mov    0x28(%r13),%rax
   30abe:	41 8b 75 34          	mov    0x34(%r13),%esi
   30ac2:	ff 50 20             	callq  *0x20(%rax)
   30ac5:	84 c0                	test   %al,%al
   30ac7:	74 e7                	je     30ab0 <core::fmt::Formatter::pad_integral+0x440>
   30ac9:	eb 5d                	jmp    30b28 <core::fmt::Formatter::pad_integral+0x4b8>
   30acb:	45 8b 7d 34          	mov    0x34(%r13),%r15d
   30acf:	49 8b 7d 20          	mov    0x20(%r13),%rdi
   30ad3:	49 8b 45 28          	mov    0x28(%r13),%rax
   30ad7:	4c 89 f6             	mov    %r14,%rsi
   30ada:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   30adf:	ff 50 18             	callq  *0x18(%rax)
   30ae2:	84 c0                	test   %al,%al
   30ae4:	75 42                	jne    30b28 <core::fmt::Formatter::pad_integral+0x4b8>
   30ae6:	4d 8b 75 20          	mov    0x20(%r13),%r14
   30aea:	49 8b 6d 28          	mov    0x28(%r13),%rbp
   30aee:	48 83 c3 01          	add    $0x1,%rbx
   30af2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   30af9:	00 00 00 
   30afc:	0f 1f 40 00          	nopl   0x0(%rax)
   30b00:	48 83 c3 ff          	add    $0xffffffffffffffff,%rbx
   30b04:	74 0f                	je     30b15 <core::fmt::Formatter::pad_integral+0x4a5>
   30b06:	4c 89 f7             	mov    %r14,%rdi
   30b09:	44 89 fe             	mov    %r15d,%esi
   30b0c:	ff 55 20             	callq  *0x20(%rbp)
   30b0f:	84 c0                	test   %al,%al
   30b11:	74 ed                	je     30b00 <core::fmt::Formatter::pad_integral+0x490>
   30b13:	eb 13                	jmp    30b28 <core::fmt::Formatter::pad_integral+0x4b8>
   30b15:	8b 44 24 08          	mov    0x8(%rsp),%eax
   30b19:	41 89 45 34          	mov    %eax,0x34(%r13)
   30b1d:	8a 44 24 07          	mov    0x7(%rsp),%al
   30b21:	41 88 45 38          	mov    %al,0x38(%r13)
   30b25:	45 31 e4             	xor    %r12d,%r12d
   30b28:	44 89 e0             	mov    %r12d,%eax
   30b2b:	48 83 c4 18          	add    $0x18,%rsp
   30b2f:	5b                   	pop    %rbx
   30b30:	41 5c                	pop    %r12
   30b32:	41 5d                	pop    %r13
   30b34:	41 5e                	pop    %r14
   30b36:	41 5f                	pop    %r15
   30b38:	5d                   	pop    %rbp
   30b39:	c3                   	retq   
   30b3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000030b40 <core::fmt::Formatter::pad_integral::write_prefix>:
   30b40:	41 57                	push   %r15
   30b42:	41 56                	push   %r14
   30b44:	53                   	push   %rbx
   30b45:	49 89 ce             	mov    %rcx,%r14
   30b48:	49 89 d7             	mov    %rdx,%r15
   30b4b:	48 89 fb             	mov    %rdi,%rbx
   30b4e:	81 fe 00 00 11 00    	cmp    $0x110000,%esi
   30b54:	74 13                	je     30b69 <core::fmt::Formatter::pad_integral::write_prefix+0x29>
   30b56:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   30b5a:	48 8b 43 28          	mov    0x28(%rbx),%rax
   30b5e:	ff 50 20             	callq  *0x20(%rax)
   30b61:	89 c1                	mov    %eax,%ecx
   30b63:	b0 01                	mov    $0x1,%al
   30b65:	84 c9                	test   %cl,%cl
   30b67:	75 20                	jne    30b89 <core::fmt::Formatter::pad_integral::write_prefix+0x49>
   30b69:	4d 85 ff             	test   %r15,%r15
   30b6c:	74 19                	je     30b87 <core::fmt::Formatter::pad_integral::write_prefix+0x47>
   30b6e:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   30b72:	48 8b 43 28          	mov    0x28(%rbx),%rax
   30b76:	48 8b 40 18          	mov    0x18(%rax),%rax
   30b7a:	4c 89 fe             	mov    %r15,%rsi
   30b7d:	4c 89 f2             	mov    %r14,%rdx
   30b80:	5b                   	pop    %rbx
   30b81:	41 5e                	pop    %r14
   30b83:	41 5f                	pop    %r15
   30b85:	ff e0                	jmpq   *%rax
   30b87:	31 c0                	xor    %eax,%eax
   30b89:	5b                   	pop    %rbx
   30b8a:	41 5e                	pop    %r14
   30b8c:	41 5f                	pop    %r15
   30b8e:	c3                   	retq   
   30b8f:	90                   	nop

0000000000030b90 <core::fmt::Formatter::pad>:
   30b90:	55                   	push   %rbp
   30b91:	41 57                	push   %r15
   30b93:	41 56                	push   %r14
   30b95:	41 55                	push   %r13
   30b97:	41 54                	push   %r12
   30b99:	53                   	push   %rbx
   30b9a:	50                   	push   %rax
   30b9b:	49 89 d6             	mov    %rdx,%r14
   30b9e:	49 89 f5             	mov    %rsi,%r13
   30ba1:	49 89 ff             	mov    %rdi,%r15
   30ba4:	4c 8b 07             	mov    (%rdi),%r8
   30ba7:	48 8b 47 10          	mov    0x10(%rdi),%rax
   30bab:	49 83 f8 01          	cmp    $0x1,%r8
   30baf:	75 0b                	jne    30bbc <core::fmt::Formatter::pad+0x2c>
   30bb1:	48 83 f8 01          	cmp    $0x1,%rax
   30bb5:	74 0f                	je     30bc6 <core::fmt::Formatter::pad+0x36>
   30bb7:	e9 39 01 00 00       	jmpq   30cf5 <core::fmt::Formatter::pad+0x165>
   30bbc:	48 83 f8 01          	cmp    $0x1,%rax
   30bc0:	0f 85 24 03 00 00    	jne    30eea <core::fmt::Formatter::pad+0x35a>
   30bc6:	49 8b 7f 18          	mov    0x18(%r15),%rdi
   30bca:	4f 8d 0c 2e          	lea    (%r14,%r13,1),%r9
   30bce:	31 c9                	xor    %ecx,%ecx
   30bd0:	48 85 ff             	test   %rdi,%rdi
   30bd3:	0f 84 b5 00 00 00    	je     30c8e <core::fmt::Formatter::pad+0xfe>
   30bd9:	4c 89 ee             	mov    %r13,%rsi
   30bdc:	eb 44                	jmp    30c22 <core::fmt::Formatter::pad+0x92>
   30bde:	44 0f b6 5d 00       	movzbl 0x0(%rbp),%r11d
   30be3:	48 83 c5 01          	add    $0x1,%rbp
   30be7:	41 83 e3 3f          	and    $0x3f,%r11d
   30beb:	48 89 eb             	mov    %rbp,%rbx
   30bee:	83 e0 07             	and    $0x7,%eax
   30bf1:	c1 e0 12             	shl    $0x12,%eax
   30bf4:	41 c1 e2 0c          	shl    $0xc,%r10d
   30bf8:	41 09 c2             	or     %eax,%r10d
   30bfb:	c1 e2 06             	shl    $0x6,%edx
   30bfe:	44 09 d2             	or     %r10d,%edx
   30c01:	44 09 da             	or     %r11d,%edx
   30c04:	81 fa 00 00 11 00    	cmp    $0x110000,%edx
   30c0a:	0f 84 db 00 00 00    	je     30ceb <core::fmt::Formatter::pad+0x15b>
   30c10:	48 89 d8             	mov    %rbx,%rax
   30c13:	48 29 f0             	sub    %rsi,%rax
   30c16:	48 01 c1             	add    %rax,%rcx
   30c19:	48 89 de             	mov    %rbx,%rsi
   30c1c:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
   30c20:	74 6f                	je     30c91 <core::fmt::Formatter::pad+0x101>
   30c22:	49 39 f1             	cmp    %rsi,%r9
   30c25:	0f 84 c0 00 00 00    	je     30ceb <core::fmt::Formatter::pad+0x15b>
   30c2b:	48 8d 5e 01          	lea    0x1(%rsi),%rbx
   30c2f:	0f b6 06             	movzbl (%rsi),%eax
   30c32:	84 c0                	test   %al,%al
   30c34:	79 da                	jns    30c10 <core::fmt::Formatter::pad+0x80>
   30c36:	4c 39 cb             	cmp    %r9,%rbx
   30c39:	74 16                	je     30c51 <core::fmt::Formatter::pad+0xc1>
   30c3b:	48 8d 5e 02          	lea    0x2(%rsi),%rbx
   30c3f:	44 0f b6 56 01       	movzbl 0x1(%rsi),%r10d
   30c44:	41 83 e2 3f          	and    $0x3f,%r10d
   30c48:	48 89 dd             	mov    %rbx,%rbp
   30c4b:	3c e0                	cmp    $0xe0,%al
   30c4d:	72 c1                	jb     30c10 <core::fmt::Formatter::pad+0x80>
   30c4f:	eb 0a                	jmp    30c5b <core::fmt::Formatter::pad+0xcb>
   30c51:	45 31 d2             	xor    %r10d,%r10d
   30c54:	4c 89 cd             	mov    %r9,%rbp
   30c57:	3c e0                	cmp    $0xe0,%al
   30c59:	72 b5                	jb     30c10 <core::fmt::Formatter::pad+0x80>
   30c5b:	4c 39 cd             	cmp    %r9,%rbp
   30c5e:	74 14                	je     30c74 <core::fmt::Formatter::pad+0xe4>
   30c60:	0f b6 55 00          	movzbl 0x0(%rbp),%edx
   30c64:	48 83 c5 01          	add    $0x1,%rbp
   30c68:	83 e2 3f             	and    $0x3f,%edx
   30c6b:	48 89 eb             	mov    %rbp,%rbx
   30c6e:	3c f0                	cmp    $0xf0,%al
   30c70:	72 9e                	jb     30c10 <core::fmt::Formatter::pad+0x80>
   30c72:	eb 09                	jmp    30c7d <core::fmt::Formatter::pad+0xed>
   30c74:	31 d2                	xor    %edx,%edx
   30c76:	4c 89 cd             	mov    %r9,%rbp
   30c79:	3c f0                	cmp    $0xf0,%al
   30c7b:	72 93                	jb     30c10 <core::fmt::Formatter::pad+0x80>
   30c7d:	4c 39 cd             	cmp    %r9,%rbp
   30c80:	0f 85 58 ff ff ff    	jne    30bde <core::fmt::Formatter::pad+0x4e>
   30c86:	45 31 db             	xor    %r11d,%r11d
   30c89:	e9 60 ff ff ff       	jmpq   30bee <core::fmt::Formatter::pad+0x5e>
   30c8e:	4c 89 eb             	mov    %r13,%rbx
   30c91:	49 39 d9             	cmp    %rbx,%r9
   30c94:	74 55                	je     30ceb <core::fmt::Formatter::pad+0x15b>
   30c96:	0f b6 03             	movzbl (%rbx),%eax
   30c99:	84 c0                	test   %al,%al
   30c9b:	78 1c                	js     30cb9 <core::fmt::Formatter::pad+0x129>
   30c9d:	48 85 c9             	test   %rcx,%rcx
   30ca0:	74 12                	je     30cb4 <core::fmt::Formatter::pad+0x124>
   30ca2:	4c 39 f1             	cmp    %r14,%rcx
   30ca5:	74 0d                	je     30cb4 <core::fmt::Formatter::pad+0x124>
   30ca7:	4c 39 f1             	cmp    %r14,%rcx
   30caa:	73 32                	jae    30cde <core::fmt::Formatter::pad+0x14e>
   30cac:	41 80 7c 0d 00 c0    	cmpb   $0xc0,0x0(%r13,%rcx,1)
   30cb2:	7c 2a                	jl     30cde <core::fmt::Formatter::pad+0x14e>
   30cb4:	4c 89 e8             	mov    %r13,%rax
   30cb7:	eb 27                	jmp    30ce0 <core::fmt::Formatter::pad+0x150>
   30cb9:	48 8d 53 01          	lea    0x1(%rbx),%rdx
   30cbd:	4c 39 ca             	cmp    %r9,%rdx
   30cc0:	0f 84 cc 04 00 00    	je     31192 <core::fmt::Formatter::pad+0x602>
   30cc6:	0f b6 53 01          	movzbl 0x1(%rbx),%edx
   30cca:	48 83 c3 02          	add    $0x2,%rbx
   30cce:	83 e2 3f             	and    $0x3f,%edx
   30cd1:	c1 e2 06             	shl    $0x6,%edx
   30cd4:	3c e0                	cmp    $0xe0,%al
   30cd6:	0f 83 c3 04 00 00    	jae    3119f <core::fmt::Formatter::pad+0x60f>
   30cdc:	eb bf                	jmp    30c9d <core::fmt::Formatter::pad+0x10d>
   30cde:	31 c0                	xor    %eax,%eax
   30ce0:	48 85 c0             	test   %rax,%rax
   30ce3:	4c 0f 45 e8          	cmovne %rax,%r13
   30ce7:	4c 0f 45 f1          	cmovne %rcx,%r14
   30ceb:	49 83 f8 01          	cmp    $0x1,%r8
   30cef:	0f 85 f5 01 00 00    	jne    30eea <core::fmt::Formatter::pad+0x35a>
   30cf5:	4d 85 f6             	test   %r14,%r14
   30cf8:	74 10                	je     30d0a <core::fmt::Formatter::pad+0x17a>
   30cfa:	49 83 fe 04          	cmp    $0x4,%r14
   30cfe:	73 1e                	jae    30d1e <core::fmt::Formatter::pad+0x18e>
   30d00:	31 c9                	xor    %ecx,%ecx
   30d02:	4c 89 e8             	mov    %r13,%rax
   30d05:	e9 95 01 00 00       	jmpq   30e9f <core::fmt::Formatter::pad+0x30f>
   30d0a:	49 8b 47 08          	mov    0x8(%r15),%rax
   30d0e:	48 85 c0             	test   %rax,%rax
   30d11:	0f 84 d3 01 00 00    	je     30eea <core::fmt::Formatter::pad+0x35a>
   30d17:	31 d2                	xor    %edx,%edx
   30d19:	e9 9d 03 00 00       	jmpq   310bb <core::fmt::Formatter::pad+0x52b>
   30d1e:	4c 89 f0             	mov    %r14,%rax
   30d21:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
   30d25:	48 8d 48 fc          	lea    -0x4(%rax),%rcx
   30d29:	48 89 ca             	mov    %rcx,%rdx
   30d2c:	48 c1 ea 02          	shr    $0x2,%rdx
   30d30:	48 83 c2 01          	add    $0x1,%rdx
   30d34:	48 85 c9             	test   %rcx,%rcx
   30d37:	0f 84 28 04 00 00    	je     31165 <core::fmt::Formatter::pad+0x5d5>
   30d3d:	48 89 d6             	mov    %rdx,%rsi
   30d40:	48 83 e6 fe          	and    $0xfffffffffffffffe,%rsi
   30d44:	48 f7 de             	neg    %rsi
   30d47:	66 0f ef c0          	pxor   %xmm0,%xmm0
   30d4b:	31 c9                	xor    %ecx,%ecx
   30d4d:	66 0f 6f 15 0b 8d 00 	movdqa 0x8d0b(%rip),%xmm2        # 39a60 <str.6+0x2740>
   30d54:	00 
   30d55:	66 0f 6f 1d 13 8d 00 	movdqa 0x8d13(%rip),%xmm3        # 39a70 <str.6+0x2750>
   30d5c:	00 
   30d5d:	66 0f 6f 25 db 52 00 	movdqa 0x52db(%rip),%xmm4        # 36040 <_fini+0xfbc>
   30d64:	00 
   30d65:	66 0f ef c9          	pxor   %xmm1,%xmm1
   30d69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   30d70:	41 0f b7 7c 0d 00    	movzwl 0x0(%r13,%rcx,1),%edi
   30d76:	66 0f 6e ef          	movd   %edi,%xmm5
   30d7a:	41 0f b7 7c 0d 02    	movzwl 0x2(%r13,%rcx,1),%edi
   30d80:	66 0f 6e f7          	movd   %edi,%xmm6
   30d84:	66 0f db ea          	pand   %xmm2,%xmm5
   30d88:	66 0f db f2          	pand   %xmm2,%xmm6
   30d8c:	66 0f 74 eb          	pcmpeqb %xmm3,%xmm5
   30d90:	66 0f 60 ed          	punpcklbw %xmm5,%xmm5
   30d94:	66 0f 61 ed          	punpcklwd %xmm5,%xmm5
   30d98:	66 0f 70 ed d4       	pshufd $0xd4,%xmm5,%xmm5
   30d9d:	66 0f db ec          	pand   %xmm4,%xmm5
   30da1:	66 0f d4 e8          	paddq  %xmm0,%xmm5
   30da5:	66 0f 74 f3          	pcmpeqb %xmm3,%xmm6
   30da9:	66 0f 60 f6          	punpcklbw %xmm6,%xmm6
   30dad:	66 0f 61 f6          	punpcklwd %xmm6,%xmm6
   30db1:	66 0f 70 f6 d4       	pshufd $0xd4,%xmm6,%xmm6
   30db6:	66 0f db f4          	pand   %xmm4,%xmm6
   30dba:	66 0f d4 f1          	paddq  %xmm1,%xmm6
   30dbe:	41 0f b7 7c 0d 04    	movzwl 0x4(%r13,%rcx,1),%edi
   30dc4:	66 0f 6e c7          	movd   %edi,%xmm0
   30dc8:	41 0f b7 7c 0d 06    	movzwl 0x6(%r13,%rcx,1),%edi
   30dce:	66 0f 6e cf          	movd   %edi,%xmm1
   30dd2:	66 0f db c2          	pand   %xmm2,%xmm0
   30dd6:	66 0f db ca          	pand   %xmm2,%xmm1
   30dda:	66 0f 74 c3          	pcmpeqb %xmm3,%xmm0
   30dde:	66 0f 60 c0          	punpcklbw %xmm0,%xmm0
   30de2:	66 0f 61 c0          	punpcklwd %xmm0,%xmm0
   30de6:	66 0f 70 c0 d4       	pshufd $0xd4,%xmm0,%xmm0
   30deb:	66 0f db c4          	pand   %xmm4,%xmm0
   30def:	66 0f d4 c5          	paddq  %xmm5,%xmm0
   30df3:	66 0f 74 cb          	pcmpeqb %xmm3,%xmm1
   30df7:	66 0f 60 c9          	punpcklbw %xmm1,%xmm1
   30dfb:	66 0f 61 c9          	punpcklwd %xmm1,%xmm1
   30dff:	66 0f 70 c9 d4       	pshufd $0xd4,%xmm1,%xmm1
   30e04:	66 0f db cc          	pand   %xmm4,%xmm1
   30e08:	66 0f d4 ce          	paddq  %xmm6,%xmm1
   30e0c:	48 83 c1 08          	add    $0x8,%rcx
   30e10:	48 83 c6 02          	add    $0x2,%rsi
   30e14:	0f 85 56 ff ff ff    	jne    30d70 <core::fmt::Formatter::pad+0x1e0>
   30e1a:	f6 c2 01             	test   $0x1,%dl
   30e1d:	74 66                	je     30e85 <core::fmt::Formatter::pad+0x2f5>
   30e1f:	41 0f b7 54 0d 02    	movzwl 0x2(%r13,%rcx,1),%edx
   30e25:	66 0f 6e d2          	movd   %edx,%xmm2
   30e29:	66 0f 6f 1d 2f 8c 00 	movdqa 0x8c2f(%rip),%xmm3        # 39a60 <str.6+0x2740>
   30e30:	00 
   30e31:	66 0f db d3          	pand   %xmm3,%xmm2
   30e35:	66 0f 6f 25 33 8c 00 	movdqa 0x8c33(%rip),%xmm4        # 39a70 <str.6+0x2750>
   30e3c:	00 
   30e3d:	66 0f 74 d4          	pcmpeqb %xmm4,%xmm2
   30e41:	66 0f 60 d2          	punpcklbw %xmm2,%xmm2
   30e45:	66 0f 61 d2          	punpcklwd %xmm2,%xmm2
   30e49:	66 0f 70 d2 d4       	pshufd $0xd4,%xmm2,%xmm2
   30e4e:	66 0f 6f 2d ea 51 00 	movdqa 0x51ea(%rip),%xmm5        # 36040 <_fini+0xfbc>
   30e55:	00 
   30e56:	66 0f db d5          	pand   %xmm5,%xmm2
   30e5a:	66 0f d4 ca          	paddq  %xmm2,%xmm1
   30e5e:	41 0f b7 4c 0d 00    	movzwl 0x0(%r13,%rcx,1),%ecx
   30e64:	66 0f 6e d1          	movd   %ecx,%xmm2
   30e68:	66 0f db d3          	pand   %xmm3,%xmm2
   30e6c:	66 0f 74 d4          	pcmpeqb %xmm4,%xmm2
   30e70:	66 0f 60 d2          	punpcklbw %xmm2,%xmm2
   30e74:	66 0f 61 d2          	punpcklwd %xmm2,%xmm2
   30e78:	66 0f 70 d2 d4       	pshufd $0xd4,%xmm2,%xmm2
   30e7d:	66 0f db d5          	pand   %xmm5,%xmm2
   30e81:	66 0f d4 c2          	paddq  %xmm2,%xmm0
   30e85:	66 0f d4 c1          	paddq  %xmm1,%xmm0
   30e89:	66 0f 70 c8 4e       	pshufd $0x4e,%xmm0,%xmm1
   30e8e:	66 0f d4 c8          	paddq  %xmm0,%xmm1
   30e92:	66 48 0f 7e c9       	movq   %xmm1,%rcx
   30e97:	49 39 c6             	cmp    %rax,%r14
   30e9a:	74 2f                	je     30ecb <core::fmt::Formatter::pad+0x33b>
   30e9c:	4c 01 e8             	add    %r13,%rax
   30e9f:	4b 8d 14 2e          	lea    (%r14,%r13,1),%rdx
   30ea3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   30eaa:	00 00 00 
   30ead:	0f 1f 00             	nopl   (%rax)
   30eb0:	0f b6 18             	movzbl (%rax),%ebx
   30eb3:	48 83 c0 01          	add    $0x1,%rax
   30eb7:	80 e3 c0             	and    $0xc0,%bl
   30eba:	31 f6                	xor    %esi,%esi
   30ebc:	80 fb 80             	cmp    $0x80,%bl
   30ebf:	40 0f 94 c6          	sete   %sil
   30ec3:	48 01 f1             	add    %rsi,%rcx
   30ec6:	48 39 c2             	cmp    %rax,%rdx
   30ec9:	75 e5                	jne    30eb0 <core::fmt::Formatter::pad+0x320>
   30ecb:	4c 89 f2             	mov    %r14,%rdx
   30ece:	48 29 ca             	sub    %rcx,%rdx
   30ed1:	49 8b 47 08          	mov    0x8(%r15),%rax
   30ed5:	48 39 c2             	cmp    %rax,%rdx
   30ed8:	73 10                	jae    30eea <core::fmt::Formatter::pad+0x35a>
   30eda:	49 83 fe 03          	cmp    $0x3,%r14
   30ede:	77 2c                	ja     30f0c <core::fmt::Formatter::pad+0x37c>
   30ee0:	31 d2                	xor    %edx,%edx
   30ee2:	4c 89 e9             	mov    %r13,%rcx
   30ee5:	e9 a6 01 00 00       	jmpq   31090 <core::fmt::Formatter::pad+0x500>
   30eea:	49 8b 7f 20          	mov    0x20(%r15),%rdi
   30eee:	49 8b 47 28          	mov    0x28(%r15),%rax
   30ef2:	48 8b 40 18          	mov    0x18(%rax),%rax
   30ef6:	4c 89 ee             	mov    %r13,%rsi
   30ef9:	4c 89 f2             	mov    %r14,%rdx
   30efc:	48 83 c4 08          	add    $0x8,%rsp
   30f00:	5b                   	pop    %rbx
   30f01:	41 5c                	pop    %r12
   30f03:	41 5d                	pop    %r13
   30f05:	41 5e                	pop    %r14
   30f07:	41 5f                	pop    %r15
   30f09:	5d                   	pop    %rbp
   30f0a:	ff e0                	jmpq   *%rax
   30f0c:	4c 89 f1             	mov    %r14,%rcx
   30f0f:	48 83 e1 fc          	and    $0xfffffffffffffffc,%rcx
   30f13:	48 8d 51 fc          	lea    -0x4(%rcx),%rdx
   30f17:	48 89 d6             	mov    %rdx,%rsi
   30f1a:	48 c1 ee 02          	shr    $0x2,%rsi
   30f1e:	48 83 c6 01          	add    $0x1,%rsi
   30f22:	48 85 d2             	test   %rdx,%rdx
   30f25:	0f 84 8c 02 00 00    	je     311b7 <core::fmt::Formatter::pad+0x627>
   30f2b:	48 89 f7             	mov    %rsi,%rdi
   30f2e:	48 83 e7 fe          	and    $0xfffffffffffffffe,%rdi
   30f32:	48 f7 df             	neg    %rdi
   30f35:	66 0f ef c0          	pxor   %xmm0,%xmm0
   30f39:	31 d2                	xor    %edx,%edx
   30f3b:	66 0f 6f 15 1d 8b 00 	movdqa 0x8b1d(%rip),%xmm2        # 39a60 <str.6+0x2740>
   30f42:	00 
   30f43:	66 0f 6f 1d 25 8b 00 	movdqa 0x8b25(%rip),%xmm3        # 39a70 <str.6+0x2750>
   30f4a:	00 
   30f4b:	66 0f 6f 25 ed 50 00 	movdqa 0x50ed(%rip),%xmm4        # 36040 <_fini+0xfbc>
   30f52:	00 
   30f53:	66 0f ef c9          	pxor   %xmm1,%xmm1
   30f57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   30f5e:	00 00 
   30f60:	41 0f b7 6c 15 00    	movzwl 0x0(%r13,%rdx,1),%ebp
   30f66:	66 0f 6e ed          	movd   %ebp,%xmm5
   30f6a:	41 0f b7 6c 15 02    	movzwl 0x2(%r13,%rdx,1),%ebp
   30f70:	66 0f 6e f5          	movd   %ebp,%xmm6
   30f74:	66 0f db ea          	pand   %xmm2,%xmm5
   30f78:	66 0f db f2          	pand   %xmm2,%xmm6
   30f7c:	66 0f 74 eb          	pcmpeqb %xmm3,%xmm5
   30f80:	66 0f 60 ed          	punpcklbw %xmm5,%xmm5
   30f84:	66 0f 61 ed          	punpcklwd %xmm5,%xmm5
   30f88:	66 0f 70 ed d4       	pshufd $0xd4,%xmm5,%xmm5
   30f8d:	66 0f db ec          	pand   %xmm4,%xmm5
   30f91:	66 0f d4 e8          	paddq  %xmm0,%xmm5
   30f95:	66 0f 74 f3          	pcmpeqb %xmm3,%xmm6
   30f99:	66 0f 60 f6          	punpcklbw %xmm6,%xmm6
   30f9d:	66 0f 61 f6          	punpcklwd %xmm6,%xmm6
   30fa1:	66 0f 70 f6 d4       	pshufd $0xd4,%xmm6,%xmm6
   30fa6:	66 0f db f4          	pand   %xmm4,%xmm6
   30faa:	66 0f d4 f1          	paddq  %xmm1,%xmm6
   30fae:	41 0f b7 6c 15 04    	movzwl 0x4(%r13,%rdx,1),%ebp
   30fb4:	66 0f 6e c5          	movd   %ebp,%xmm0
   30fb8:	41 0f b7 6c 15 06    	movzwl 0x6(%r13,%rdx,1),%ebp
   30fbe:	66 0f 6e cd          	movd   %ebp,%xmm1
   30fc2:	66 0f db c2          	pand   %xmm2,%xmm0
   30fc6:	66 0f db ca          	pand   %xmm2,%xmm1
   30fca:	66 0f 74 c3          	pcmpeqb %xmm3,%xmm0
   30fce:	66 0f 60 c0          	punpcklbw %xmm0,%xmm0
   30fd2:	66 0f 61 c0          	punpcklwd %xmm0,%xmm0
   30fd6:	66 0f 70 c0 d4       	pshufd $0xd4,%xmm0,%xmm0
   30fdb:	66 0f db c4          	pand   %xmm4,%xmm0
   30fdf:	66 0f d4 c5          	paddq  %xmm5,%xmm0
   30fe3:	66 0f 74 cb          	pcmpeqb %xmm3,%xmm1
   30fe7:	66 0f 60 c9          	punpcklbw %xmm1,%xmm1
   30feb:	66 0f 61 c9          	punpcklwd %xmm1,%xmm1
   30fef:	66 0f 70 c9 d4       	pshufd $0xd4,%xmm1,%xmm1
   30ff4:	66 0f db cc          	pand   %xmm4,%xmm1
   30ff8:	66 0f d4 ce          	paddq  %xmm6,%xmm1
   30ffc:	48 83 c2 08          	add    $0x8,%rdx
   31000:	48 83 c7 02          	add    $0x2,%rdi
   31004:	0f 85 56 ff ff ff    	jne    30f60 <core::fmt::Formatter::pad+0x3d0>
   3100a:	40 f6 c6 01          	test   $0x1,%sil
   3100e:	74 66                	je     31076 <core::fmt::Formatter::pad+0x4e6>
   31010:	41 0f b7 74 15 02    	movzwl 0x2(%r13,%rdx,1),%esi
   31016:	66 0f 6e d6          	movd   %esi,%xmm2
   3101a:	66 0f 6f 1d 3e 8a 00 	movdqa 0x8a3e(%rip),%xmm3        # 39a60 <str.6+0x2740>
   31021:	00 
   31022:	66 0f db d3          	pand   %xmm3,%xmm2
   31026:	66 0f 6f 25 42 8a 00 	movdqa 0x8a42(%rip),%xmm4        # 39a70 <str.6+0x2750>
   3102d:	00 
   3102e:	66 0f 74 d4          	pcmpeqb %xmm4,%xmm2
   31032:	66 0f 60 d2          	punpcklbw %xmm2,%xmm2
   31036:	66 0f 61 d2          	punpcklwd %xmm2,%xmm2
   3103a:	66 0f 70 d2 d4       	pshufd $0xd4,%xmm2,%xmm2
   3103f:	66 0f 6f 2d f9 4f 00 	movdqa 0x4ff9(%rip),%xmm5        # 36040 <_fini+0xfbc>
   31046:	00 
   31047:	66 0f db d5          	pand   %xmm5,%xmm2
   3104b:	66 0f d4 ca          	paddq  %xmm2,%xmm1
   3104f:	41 0f b7 54 15 00    	movzwl 0x0(%r13,%rdx,1),%edx
   31055:	66 0f 6e d2          	movd   %edx,%xmm2
   31059:	66 0f db d3          	pand   %xmm3,%xmm2
   3105d:	66 0f 74 d4          	pcmpeqb %xmm4,%xmm2
   31061:	66 0f 60 d2          	punpcklbw %xmm2,%xmm2
   31065:	66 0f 61 d2          	punpcklwd %xmm2,%xmm2
   31069:	66 0f 70 d2 d4       	pshufd $0xd4,%xmm2,%xmm2
   3106e:	66 0f db d5          	pand   %xmm5,%xmm2
   31072:	66 0f d4 c2          	paddq  %xmm2,%xmm0
   31076:	66 0f d4 c1          	paddq  %xmm1,%xmm0
   3107a:	66 0f 70 c8 4e       	pshufd $0x4e,%xmm0,%xmm1
   3107f:	66 0f d4 c8          	paddq  %xmm0,%xmm1
   31083:	66 48 0f 7e ca       	movq   %xmm1,%rdx
   31088:	49 39 ce             	cmp    %rcx,%r14
   3108b:	74 2e                	je     310bb <core::fmt::Formatter::pad+0x52b>
   3108d:	4c 01 e9             	add    %r13,%rcx
   31090:	4b 8d 34 2e          	lea    (%r14,%r13,1),%rsi
   31094:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3109b:	00 00 00 
   3109e:	66 90                	xchg   %ax,%ax
   310a0:	0f b6 19             	movzbl (%rcx),%ebx
   310a3:	48 83 c1 01          	add    $0x1,%rcx
   310a7:	80 e3 c0             	and    $0xc0,%bl
   310aa:	31 ff                	xor    %edi,%edi
   310ac:	80 fb 80             	cmp    $0x80,%bl
   310af:	40 0f 94 c7          	sete   %dil
   310b3:	48 01 fa             	add    %rdi,%rdx
   310b6:	48 39 ce             	cmp    %rcx,%rsi
   310b9:	75 e5                	jne    310a0 <core::fmt::Formatter::pad+0x510>
   310bb:	4c 29 f2             	sub    %r14,%rdx
   310be:	48 01 c2             	add    %rax,%rdx
   310c1:	41 8b 47 38          	mov    0x38(%r15),%eax
   310c5:	31 db                	xor    %ebx,%ebx
   310c7:	3c 03                	cmp    $0x3,%al
   310c9:	0f 44 c3             	cmove  %ebx,%eax
   310cc:	0f b6 c0             	movzbl %al,%eax
   310cf:	48 8d 0d ea 8b 00 00 	lea    0x8bea(%rip),%rcx        # 39cc0 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x170>
   310d6:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   310da:	48 01 c8             	add    %rcx,%rax
   310dd:	48 89 d5             	mov    %rdx,%rbp
   310e0:	ff e0                	jmpq   *%rax
   310e2:	31 ed                	xor    %ebp,%ebp
   310e4:	48 89 d3             	mov    %rdx,%rbx
   310e7:	eb 10                	jmp    310f9 <core::fmt::Formatter::pad+0x569>
   310e9:	48 89 d3             	mov    %rdx,%rbx
   310ec:	48 d1 eb             	shr    %rbx
   310ef:	48 83 c2 01          	add    $0x1,%rdx
   310f3:	48 d1 ea             	shr    %rdx
   310f6:	48 89 d5             	mov    %rdx,%rbp
   310f9:	48 83 c3 01          	add    $0x1,%rbx
   310fd:	0f 1f 00             	nopl   (%rax)
   31100:	48 83 c3 ff          	add    $0xffffffffffffffff,%rbx
   31104:	74 18                	je     3111e <core::fmt::Formatter::pad+0x58e>
   31106:	49 8b 7f 20          	mov    0x20(%r15),%rdi
   3110a:	49 8b 47 28          	mov    0x28(%r15),%rax
   3110e:	41 8b 77 34          	mov    0x34(%r15),%esi
   31112:	ff 50 20             	callq  *0x20(%rax)
   31115:	84 c0                	test   %al,%al
   31117:	74 e7                	je     31100 <core::fmt::Formatter::pad+0x570>
   31119:	41 b6 01             	mov    $0x1,%r14b
   3111c:	eb 62                	jmp    31180 <core::fmt::Formatter::pad+0x5f0>
   3111e:	45 8b 67 34          	mov    0x34(%r15),%r12d
   31122:	49 8b 7f 20          	mov    0x20(%r15),%rdi
   31126:	49 8b 47 28          	mov    0x28(%r15),%rax
   3112a:	4c 89 ee             	mov    %r13,%rsi
   3112d:	4c 89 f2             	mov    %r14,%rdx
   31130:	ff 50 18             	callq  *0x18(%rax)
   31133:	41 b6 01             	mov    $0x1,%r14b
   31136:	84 c0                	test   %al,%al
   31138:	75 46                	jne    31180 <core::fmt::Formatter::pad+0x5f0>
   3113a:	4d 8b 6f 20          	mov    0x20(%r15),%r13
   3113e:	49 8b 5f 28          	mov    0x28(%r15),%rbx
   31142:	48 83 c5 01          	add    $0x1,%rbp
   31146:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3114d:	00 00 00 
   31150:	48 83 c5 ff          	add    $0xffffffffffffffff,%rbp
   31154:	74 27                	je     3117d <core::fmt::Formatter::pad+0x5ed>
   31156:	4c 89 ef             	mov    %r13,%rdi
   31159:	44 89 e6             	mov    %r12d,%esi
   3115c:	ff 53 20             	callq  *0x20(%rbx)
   3115f:	84 c0                	test   %al,%al
   31161:	74 ed                	je     31150 <core::fmt::Formatter::pad+0x5c0>
   31163:	eb 1b                	jmp    31180 <core::fmt::Formatter::pad+0x5f0>
   31165:	66 0f ef c0          	pxor   %xmm0,%xmm0
   31169:	31 c9                	xor    %ecx,%ecx
   3116b:	66 0f ef c9          	pxor   %xmm1,%xmm1
   3116f:	f6 c2 01             	test   $0x1,%dl
   31172:	0f 85 a7 fc ff ff    	jne    30e1f <core::fmt::Formatter::pad+0x28f>
   31178:	e9 08 fd ff ff       	jmpq   30e85 <core::fmt::Formatter::pad+0x2f5>
   3117d:	45 31 f6             	xor    %r14d,%r14d
   31180:	44 89 f0             	mov    %r14d,%eax
   31183:	48 83 c4 08          	add    $0x8,%rsp
   31187:	5b                   	pop    %rbx
   31188:	41 5c                	pop    %r12
   3118a:	41 5d                	pop    %r13
   3118c:	41 5e                	pop    %r14
   3118e:	41 5f                	pop    %r15
   31190:	5d                   	pop    %rbp
   31191:	c3                   	retq   
   31192:	31 d2                	xor    %edx,%edx
   31194:	4c 89 cb             	mov    %r9,%rbx
   31197:	3c e0                	cmp    $0xe0,%al
   31199:	0f 82 fe fa ff ff    	jb     30c9d <core::fmt::Formatter::pad+0x10d>
   3119f:	4c 39 cb             	cmp    %r9,%rbx
   311a2:	74 2c                	je     311d0 <core::fmt::Formatter::pad+0x640>
   311a4:	0f b6 33             	movzbl (%rbx),%esi
   311a7:	48 83 c3 01          	add    $0x1,%rbx
   311ab:	83 e6 3f             	and    $0x3f,%esi
   311ae:	3c f0                	cmp    $0xf0,%al
   311b0:	73 2b                	jae    311dd <core::fmt::Formatter::pad+0x64d>
   311b2:	e9 e6 fa ff ff       	jmpq   30c9d <core::fmt::Formatter::pad+0x10d>
   311b7:	66 0f ef c0          	pxor   %xmm0,%xmm0
   311bb:	31 d2                	xor    %edx,%edx
   311bd:	66 0f ef c9          	pxor   %xmm1,%xmm1
   311c1:	40 f6 c6 01          	test   $0x1,%sil
   311c5:	0f 85 45 fe ff ff    	jne    31010 <core::fmt::Formatter::pad+0x480>
   311cb:	e9 a6 fe ff ff       	jmpq   31076 <core::fmt::Formatter::pad+0x4e6>
   311d0:	31 f6                	xor    %esi,%esi
   311d2:	4c 89 cb             	mov    %r9,%rbx
   311d5:	3c f0                	cmp    $0xf0,%al
   311d7:	0f 82 c0 fa ff ff    	jb     30c9d <core::fmt::Formatter::pad+0x10d>
   311dd:	09 d6                	or     %edx,%esi
   311df:	4c 39 cb             	cmp    %r9,%rbx
   311e2:	74 08                	je     311ec <core::fmt::Formatter::pad+0x65c>
   311e4:	0f b6 13             	movzbl (%rbx),%edx
   311e7:	83 e2 3f             	and    $0x3f,%edx
   311ea:	eb 02                	jmp    311ee <core::fmt::Formatter::pad+0x65e>
   311ec:	31 d2                	xor    %edx,%edx
   311ee:	83 e0 07             	and    $0x7,%eax
   311f1:	c1 e0 12             	shl    $0x12,%eax
   311f4:	c1 e6 06             	shl    $0x6,%esi
   311f7:	09 c6                	or     %eax,%esi
   311f9:	09 d6                	or     %edx,%esi
   311fb:	81 fe 00 00 11 00    	cmp    $0x110000,%esi
   31201:	0f 84 e4 fa ff ff    	je     30ceb <core::fmt::Formatter::pad+0x15b>
   31207:	e9 91 fa ff ff       	jmpq   30c9d <core::fmt::Formatter::pad+0x10d>
   3120c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000031210 <core::fmt::Formatter::write_str>:
   31210:	48 8b 47 20          	mov    0x20(%rdi),%rax
   31214:	48 8b 4f 28          	mov    0x28(%rdi),%rcx
   31218:	48 8b 49 18          	mov    0x18(%rcx),%rcx
   3121c:	48 89 c7             	mov    %rax,%rdi
   3121f:	ff e1                	jmpq   *%rcx
   31221:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   31228:	00 00 00 
   3122b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000031230 <core::fmt::Formatter::write_fmt>:
   31230:	48 83 ec 38          	sub    $0x38,%rsp
   31234:	48 8b 47 20          	mov    0x20(%rdi),%rax
   31238:	48 8b 4f 28          	mov    0x28(%rdi),%rcx
   3123c:	0f 10 06             	movups (%rsi),%xmm0
   3123f:	0f 10 4e 10          	movups 0x10(%rsi),%xmm1
   31243:	0f 10 56 20          	movups 0x20(%rsi),%xmm2
   31247:	0f 29 54 24 20       	movaps %xmm2,0x20(%rsp)
   3124c:	0f 29 4c 24 10       	movaps %xmm1,0x10(%rsp)
   31251:	0f 29 04 24          	movaps %xmm0,(%rsp)
   31255:	48 89 e2             	mov    %rsp,%rdx
   31258:	48 89 c7             	mov    %rax,%rdi
   3125b:	48 89 ce             	mov    %rcx,%rsi
   3125e:	ff 15 9c 4b 01 00    	callq  *0x14b9c(%rip)        # 45e00 <_GLOBAL_OFFSET_TABLE_+0x470>
   31264:	48 83 c4 38          	add    $0x38,%rsp
   31268:	c3                   	retq   
   31269:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000031270 <core::fmt::Formatter::alternate>:
   31270:	8a 47 30             	mov    0x30(%rdi),%al
   31273:	24 04                	and    $0x4,%al
   31275:	c0 e8 02             	shr    $0x2,%al
   31278:	c3                   	retq   
   31279:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000031280 <core::fmt::Formatter::debug_lower_hex>:
   31280:	8a 47 30             	mov    0x30(%rdi),%al
   31283:	24 10                	and    $0x10,%al
   31285:	c0 e8 04             	shr    $0x4,%al
   31288:	c3                   	retq   
   31289:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000031290 <core::fmt::Formatter::debug_upper_hex>:
   31290:	8a 47 30             	mov    0x30(%rdi),%al
   31293:	24 20                	and    $0x20,%al
   31295:	c0 e8 05             	shr    $0x5,%al
   31298:	c3                   	retq   
   31299:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000312a0 <core::fmt::Formatter::debug_struct>:
   312a0:	53                   	push   %rbx
   312a1:	48 89 fb             	mov    %rdi,%rbx
   312a4:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
   312a8:	48 8b 43 28          	mov    0x28(%rbx),%rax
   312ac:	ff 50 18             	callq  *0x18(%rax)
   312af:	0f b6 d0             	movzbl %al,%edx
   312b2:	48 89 d8             	mov    %rbx,%rax
   312b5:	5b                   	pop    %rbx
   312b6:	c3                   	retq   
   312b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   312be:	00 00 

00000000000312c0 <core::fmt::Formatter::debug_tuple>:
   312c0:	41 57                	push   %r15
   312c2:	41 56                	push   %r14
   312c4:	53                   	push   %rbx
   312c5:	49 89 ce             	mov    %rcx,%r14
   312c8:	49 89 f7             	mov    %rsi,%r15
   312cb:	48 89 fb             	mov    %rdi,%rbx
   312ce:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
   312d2:	48 8b 46 28          	mov    0x28(%rsi),%rax
   312d6:	48 89 d6             	mov    %rdx,%rsi
   312d9:	48 89 ca             	mov    %rcx,%rdx
   312dc:	ff 50 18             	callq  *0x18(%rax)
   312df:	4d 85 f6             	test   %r14,%r14
   312e2:	4c 89 3b             	mov    %r15,(%rbx)
   312e5:	88 43 10             	mov    %al,0x10(%rbx)
   312e8:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
   312ef:	00 
   312f0:	0f 94 43 11          	sete   0x11(%rbx)
   312f4:	48 89 d8             	mov    %rbx,%rax
   312f7:	5b                   	pop    %rbx
   312f8:	41 5e                	pop    %r14
   312fa:	41 5f                	pop    %r15
   312fc:	c3                   	retq   
   312fd:	0f 1f 00             	nopl   (%rax)

0000000000031300 <core::fmt::Formatter::debug_list>:
   31300:	53                   	push   %rbx
   31301:	48 89 fb             	mov    %rdi,%rbx
   31304:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
   31308:	48 8b 43 28          	mov    0x28(%rbx),%rax
   3130c:	48 8d 35 4d 8c 00 00 	lea    0x8c4d(%rip),%rsi        # 39f60 <str.1+0x120>
   31313:	ba 01 00 00 00       	mov    $0x1,%edx
   31318:	ff 50 18             	callq  *0x18(%rax)
   3131b:	0f b6 d0             	movzbl %al,%edx
   3131e:	48 89 d8             	mov    %rbx,%rax
   31321:	5b                   	pop    %rbx
   31322:	c3                   	retq   
   31323:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3132a:	00 00 00 
   3132d:	0f 1f 00             	nopl   (%rax)

0000000000031330 <<core::fmt::Formatter as core::fmt::Write>::write_char>:
   31330:	48 8b 47 20          	mov    0x20(%rdi),%rax
   31334:	48 8b 4f 28          	mov    0x28(%rdi),%rcx
   31338:	48 8b 49 20          	mov    0x20(%rcx),%rcx
   3133c:	48 89 c7             	mov    %rax,%rdi
   3133f:	ff e1                	jmpq   *%rcx
   31341:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   31348:	00 00 00 
   3134b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000031350 <<str as core::fmt::Debug>::fmt>:
   31350:	55                   	push   %rbp
   31351:	41 57                	push   %r15
   31353:	41 56                	push   %r14
   31355:	41 55                	push   %r13
   31357:	41 54                	push   %r12
   31359:	53                   	push   %rbx
   3135a:	48 83 ec 38          	sub    $0x38,%rsp
   3135e:	49 89 d4             	mov    %rdx,%r12
   31361:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
   31366:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
   3136b:	48 8b 7a 20          	mov    0x20(%rdx),%rdi
   3136f:	48 8b 42 28          	mov    0x28(%rdx),%rax
   31373:	be 22 00 00 00       	mov    $0x22,%esi
   31378:	ff 50 20             	callq  *0x20(%rax)
   3137b:	84 c0                	test   %al,%al
   3137d:	0f 85 62 04 00 00    	jne    317e5 <<str as core::fmt::Debug>::fmt+0x495>
   31383:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   31388:	4d 85 c9             	test   %r9,%r9
   3138b:	0f 84 33 04 00 00    	je     317c4 <<str as core::fmt::Debug>::fmt+0x474>
   31391:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   31396:	4a 8d 3c 08          	lea    (%rax,%r9,1),%rdi
   3139a:	31 ed                	xor    %ebp,%ebp
   3139c:	49 89 c7             	mov    %rax,%r15
   3139f:	48 89 c6             	mov    %rax,%rsi
   313a2:	31 db                	xor    %ebx,%ebx
   313a4:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
   313a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   313b0:	49 8d 47 01          	lea    0x1(%r15),%rax
   313b4:	41 0f b6 0f          	movzbl (%r15),%ecx
   313b8:	84 c9                	test   %cl,%cl
   313ba:	78 14                	js     313d0 <<str as core::fmt::Debug>::fmt+0x80>
   313bc:	49 89 c7             	mov    %rax,%r15
   313bf:	41 89 cd             	mov    %ecx,%r13d
   313c2:	e9 b9 00 00 00       	jmpq   31480 <<str as core::fmt::Debug>::fmt+0x130>
   313c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   313ce:	00 00 
   313d0:	48 39 f8             	cmp    %rdi,%rax
   313d3:	74 4e                	je     31423 <<str as core::fmt::Debug>::fmt+0xd3>
   313d5:	45 0f b6 6f 01       	movzbl 0x1(%r15),%r13d
   313da:	49 83 c7 02          	add    $0x2,%r15
   313de:	41 83 e5 3f          	and    $0x3f,%r13d
   313e2:	4c 89 fa             	mov    %r15,%rdx
   313e5:	89 c8                	mov    %ecx,%eax
   313e7:	83 e0 1f             	and    $0x1f,%eax
   313ea:	80 f9 df             	cmp    $0xdf,%cl
   313ed:	76 47                	jbe    31436 <<str as core::fmt::Debug>::fmt+0xe6>
   313ef:	48 39 fa             	cmp    %rdi,%rdx
   313f2:	74 4a                	je     3143e <<str as core::fmt::Debug>::fmt+0xee>
   313f4:	44 0f b6 02          	movzbl (%rdx),%r8d
   313f8:	48 83 c2 01          	add    $0x1,%rdx
   313fc:	41 83 e0 3f          	and    $0x3f,%r8d
   31400:	49 89 d7             	mov    %rdx,%r15
   31403:	41 c1 e5 06          	shl    $0x6,%r13d
   31407:	45 09 c5             	or     %r8d,%r13d
   3140a:	80 f9 f0             	cmp    $0xf0,%cl
   3140d:	72 41                	jb     31450 <<str as core::fmt::Debug>::fmt+0x100>
   3140f:	48 39 fa             	cmp    %rdi,%rdx
   31412:	74 44                	je     31458 <<str as core::fmt::Debug>::fmt+0x108>
   31414:	0f b6 0a             	movzbl (%rdx),%ecx
   31417:	48 83 c2 01          	add    $0x1,%rdx
   3141b:	83 e1 3f             	and    $0x3f,%ecx
   3141e:	49 89 d7             	mov    %rdx,%r15
   31421:	eb 37                	jmp    3145a <<str as core::fmt::Debug>::fmt+0x10a>
   31423:	45 31 ed             	xor    %r13d,%r13d
   31426:	49 89 c7             	mov    %rax,%r15
   31429:	48 89 fa             	mov    %rdi,%rdx
   3142c:	89 c8                	mov    %ecx,%eax
   3142e:	83 e0 1f             	and    $0x1f,%eax
   31431:	80 f9 df             	cmp    $0xdf,%cl
   31434:	77 b9                	ja     313ef <<str as core::fmt::Debug>::fmt+0x9f>
   31436:	c1 e0 06             	shl    $0x6,%eax
   31439:	41 09 c5             	or     %eax,%r13d
   3143c:	eb 42                	jmp    31480 <<str as core::fmt::Debug>::fmt+0x130>
   3143e:	45 31 c0             	xor    %r8d,%r8d
   31441:	48 89 fa             	mov    %rdi,%rdx
   31444:	41 c1 e5 06          	shl    $0x6,%r13d
   31448:	45 09 c5             	or     %r8d,%r13d
   3144b:	80 f9 f0             	cmp    $0xf0,%cl
   3144e:	73 bf                	jae    3140f <<str as core::fmt::Debug>::fmt+0xbf>
   31450:	c1 e0 0c             	shl    $0xc,%eax
   31453:	41 09 c5             	or     %eax,%r13d
   31456:	eb 28                	jmp    31480 <<str as core::fmt::Debug>::fmt+0x130>
   31458:	31 c9                	xor    %ecx,%ecx
   3145a:	83 e0 07             	and    $0x7,%eax
   3145d:	c1 e0 12             	shl    $0x12,%eax
   31460:	41 c1 e5 06          	shl    $0x6,%r13d
   31464:	41 09 c5             	or     %eax,%r13d
   31467:	41 09 cd             	or     %ecx,%r13d
   3146a:	41 81 fd 00 00 11 00 	cmp    $0x110000,%r13d
   31471:	0f 84 19 03 00 00    	je     31790 <<str as core::fmt::Debug>::fmt+0x440>
   31477:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3147e:	00 00 
   31480:	48 89 74 24 30       	mov    %rsi,0x30(%rsp)
   31485:	41 be 02 00 00 00    	mov    $0x2,%r14d
   3148b:	41 8d 45 f7          	lea    -0x9(%r13),%eax
   3148f:	83 f8 1e             	cmp    $0x1e,%eax
   31492:	77 2c                	ja     314c0 <<str as core::fmt::Debug>::fmt+0x170>
   31494:	c7 44 24 0c 74 00 00 	movl   $0x74,0xc(%rsp)
   3149b:	00 
   3149c:	48 8d 0d 2d 88 00 00 	lea    0x882d(%rip),%rcx        # 39cd0 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x180>
   314a3:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   314a7:	48 01 c8             	add    %rcx,%rax
   314aa:	ff e0                	jmpq   *%rax
   314ac:	c7 44 24 0c 6e 00 00 	movl   $0x6e,0xc(%rsp)
   314b3:	00 
   314b4:	e9 75 00 00 00       	jmpq   3152e <<str as core::fmt::Debug>::fmt+0x1de>
   314b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   314c0:	41 83 fd 5c          	cmp    $0x5c,%r13d
   314c4:	75 0a                	jne    314d0 <<str as core::fmt::Debug>::fmt+0x180>
   314c6:	44 89 e8             	mov    %r13d,%eax
   314c9:	44 89 6c 24 0c       	mov    %r13d,0xc(%rsp)
   314ce:	eb 5e                	jmp    3152e <<str as core::fmt::Debug>::fmt+0x1de>
   314d0:	44 89 ef             	mov    %r13d,%edi
   314d3:	ff 15 2f 48 01 00    	callq  *0x1482f(%rip)        # 45d08 <_GLOBAL_OFFSET_TABLE_+0x378>
   314d9:	84 c0                	test   %al,%al
   314db:	75 11                	jne    314ee <<str as core::fmt::Debug>::fmt+0x19e>
   314dd:	44 89 ef             	mov    %r13d,%edi
   314e0:	ff 15 02 45 01 00    	callq  *0x14502(%rip)        # 459e8 <_GLOBAL_OFFSET_TABLE_+0x58>
   314e6:	84 c0                	test   %al,%al
   314e8:	0f 85 81 02 00 00    	jne    3176f <<str as core::fmt::Debug>::fmt+0x41f>
   314ee:	44 89 e8             	mov    %r13d,%eax
   314f1:	83 c8 01             	or     $0x1,%eax
   314f4:	0f bd c0             	bsr    %eax,%eax
   314f7:	83 f0 1c             	xor    $0x1c,%eax
   314fa:	c1 e8 02             	shr    $0x2,%eax
   314fd:	83 f0 07             	xor    $0x7,%eax
   31500:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   31505:	44 89 e9             	mov    %r13d,%ecx
   31508:	48 b8 00 00 00 00 05 	movabs $0x500000000,%rax
   3150f:	00 00 00 
   31512:	48 09 c1             	or     %rax,%rcx
   31515:	48 89 0c 24          	mov    %rcx,(%rsp)
   31519:	41 be 03 00 00 00    	mov    $0x3,%r14d
   3151f:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   31524:	eb 08                	jmp    3152e <<str as core::fmt::Debug>::fmt+0x1de>
   31526:	c7 44 24 0c 72 00 00 	movl   $0x72,0xc(%rsp)
   3152d:	00 
   3152e:	48 89 da             	mov    %rbx,%rdx
   31531:	48 29 ea             	sub    %rbp,%rdx
   31534:	0f 82 df 02 00 00    	jb     31819 <<str as core::fmt::Debug>::fmt+0x4c9>
   3153a:	48 85 ed             	test   %rbp,%rbp
   3153d:	74 1a                	je     31559 <<str as core::fmt::Debug>::fmt+0x209>
   3153f:	4c 39 cd             	cmp    %r9,%rbp
   31542:	74 15                	je     31559 <<str as core::fmt::Debug>::fmt+0x209>
   31544:	0f 83 cf 02 00 00    	jae    31819 <<str as core::fmt::Debug>::fmt+0x4c9>
   3154a:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   3154f:	80 3c 28 bf          	cmpb   $0xbf,(%rax,%rbp,1)
   31553:	0f 8e c0 02 00 00    	jle    31819 <<str as core::fmt::Debug>::fmt+0x4c9>
   31559:	48 85 db             	test   %rbx,%rbx
   3155c:	74 1a                	je     31578 <<str as core::fmt::Debug>::fmt+0x228>
   3155e:	4c 39 cb             	cmp    %r9,%rbx
   31561:	74 15                	je     31578 <<str as core::fmt::Debug>::fmt+0x228>
   31563:	0f 83 b0 02 00 00    	jae    31819 <<str as core::fmt::Debug>::fmt+0x4c9>
   31569:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   3156e:	80 3c 18 bf          	cmpb   $0xbf,(%rax,%rbx,1)
   31572:	0f 8e a1 02 00 00    	jle    31819 <<str as core::fmt::Debug>::fmt+0x4c9>
   31578:	48 03 6c 24 10       	add    0x10(%rsp),%rbp
   3157d:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi
   31582:	49 8b 44 24 28       	mov    0x28(%r12),%rax
   31587:	48 89 ee             	mov    %rbp,%rsi
   3158a:	ff 50 18             	callq  *0x18(%rax)
   3158d:	84 c0                	test   %al,%al
   3158f:	48 8d 2d b6 87 00 00 	lea    0x87b6(%rip),%rbp        # 39d4c <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x1fc>
   31596:	74 24                	je     315bc <<str as core::fmt::Debug>::fmt+0x26c>
   31598:	e9 48 02 00 00       	jmpq   317e5 <<str as core::fmt::Debug>::fmt+0x495>
   3159d:	0f 1f 00             	nopl   (%rax)
   315a0:	45 31 f6             	xor    %r14d,%r14d
   315a3:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   315a7:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi
   315ac:	49 8b 44 24 28       	mov    0x28(%r12),%rax
   315b1:	ff 50 20             	callq  *0x20(%rax)
   315b4:	84 c0                	test   %al,%al
   315b6:	0f 85 29 02 00 00    	jne    317e5 <<str as core::fmt::Debug>::fmt+0x495>
   315bc:	be 5c 00 00 00       	mov    $0x5c,%esi
   315c1:	44 89 f0             	mov    %r14d,%eax
   315c4:	48 63 44 85 00       	movslq 0x0(%rbp,%rax,4),%rax
   315c9:	48 01 e8             	add    %rbp,%rax
   315cc:	41 be 01 00 00 00    	mov    $0x1,%r14d
   315d2:	ff e0                	jmpq   *%rax
   315d4:	48 8b 04 24          	mov    (%rsp),%rax
   315d8:	48 c1 e8 20          	shr    $0x20,%rax
   315dc:	0f b6 c0             	movzbl %al,%eax
   315df:	48 8d 0d 76 87 00 00 	lea    0x8776(%rip),%rcx        # 39d5c <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x20c>
   315e6:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   315ea:	48 01 c8             	add    %rcx,%rax
   315ed:	ff e0                	jmpq   *%rax
   315ef:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   315f6:	48 21 44 24 18       	and    %rax,0x18(%rsp)
   315fb:	48 b8 ff ff ff ff 00 	movabs $0xffffff00ffffffff,%rax
   31602:	ff ff ff 
   31605:	48 21 04 24          	and    %rax,(%rsp)
   31609:	41 be 03 00 00 00    	mov    $0x3,%r14d
   3160f:	be 7d 00 00 00       	mov    $0x7d,%esi
   31614:	eb 91                	jmp    315a7 <<str as core::fmt::Debug>::fmt+0x257>
   31616:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   3161d:	48 21 44 24 18       	and    %rax,0x18(%rsp)
   31622:	48 b8 ff ff ff ff 00 	movabs $0xffffff00ffffffff,%rax
   31629:	ff ff ff 
   3162c:	48 8b 0c 24          	mov    (%rsp),%rcx
   31630:	48 21 c1             	and    %rax,%rcx
   31633:	48 b8 00 00 00 00 03 	movabs $0x300000000,%rax
   3163a:	00 00 00 
   3163d:	48 09 c1             	or     %rax,%rcx
   31640:	48 89 0c 24          	mov    %rcx,(%rsp)
   31644:	41 be 03 00 00 00    	mov    $0x3,%r14d
   3164a:	be 75 00 00 00       	mov    $0x75,%esi
   3164f:	e9 53 ff ff ff       	jmpq   315a7 <<str as core::fmt::Debug>::fmt+0x257>
   31654:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   31659:	8d 0c 95 00 00 00 00 	lea    0x0(,%rdx,4),%ecx
   31660:	48 8b 3c 24          	mov    (%rsp),%rdi
   31664:	89 f8                	mov    %edi,%eax
   31666:	d3 e8                	shr    %cl,%eax
   31668:	83 e0 0f             	and    $0xf,%eax
   3166b:	3c 0a                	cmp    $0xa,%al
   3166d:	be 57 00 00 00       	mov    $0x57,%esi
   31672:	b9 30 00 00 00       	mov    $0x30,%ecx
   31677:	0f 42 f1             	cmovb  %ecx,%esi
   3167a:	01 c6                	add    %eax,%esi
   3167c:	48 85 d2             	test   %rdx,%rdx
   3167f:	74 7c                	je     316fd <<str as core::fmt::Debug>::fmt+0x3ad>
   31681:	48 83 c2 ff          	add    $0xffffffffffffffff,%rdx
   31685:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   3168a:	e9 9b 00 00 00       	jmpq   3172a <<str as core::fmt::Debug>::fmt+0x3da>
   3168f:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   31696:	48 21 44 24 18       	and    %rax,0x18(%rsp)
   3169b:	48 b8 ff ff ff ff 00 	movabs $0xffffff00ffffffff,%rax
   316a2:	ff ff ff 
   316a5:	48 8b 0c 24          	mov    (%rsp),%rcx
   316a9:	48 21 c1             	and    %rax,%rcx
   316ac:	48 b8 00 00 00 00 02 	movabs $0x200000000,%rax
   316b3:	00 00 00 
   316b6:	48 09 c1             	or     %rax,%rcx
   316b9:	48 89 0c 24          	mov    %rcx,(%rsp)
   316bd:	41 be 03 00 00 00    	mov    $0x3,%r14d
   316c3:	be 7b 00 00 00       	mov    $0x7b,%esi
   316c8:	e9 da fe ff ff       	jmpq   315a7 <<str as core::fmt::Debug>::fmt+0x257>
   316cd:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   316d4:	48 21 44 24 18       	and    %rax,0x18(%rsp)
   316d9:	48 b8 ff ff ff ff 00 	movabs $0xffffff00ffffffff,%rax
   316e0:	ff ff ff 
   316e3:	48 8b 0c 24          	mov    (%rsp),%rcx
   316e7:	48 21 c1             	and    %rax,%rcx
   316ea:	48 b8 00 00 00 00 04 	movabs $0x400000000,%rax
   316f1:	00 00 00 
   316f4:	48 09 c1             	or     %rax,%rcx
   316f7:	48 89 0c 24          	mov    %rcx,(%rsp)
   316fb:	eb 2d                	jmp    3172a <<str as core::fmt::Debug>::fmt+0x3da>
   316fd:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   31704:	48 21 c2             	and    %rax,%rdx
   31707:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   3170c:	48 b8 ff ff ff ff 00 	movabs $0xffffff00ffffffff,%rax
   31713:	ff ff ff 
   31716:	48 21 c7             	and    %rax,%rdi
   31719:	48 b8 00 00 00 00 01 	movabs $0x100000000,%rax
   31720:	00 00 00 
   31723:	48 09 c7             	or     %rax,%rdi
   31726:	48 89 3c 24          	mov    %rdi,(%rsp)
   3172a:	41 be 03 00 00 00    	mov    $0x3,%r14d
   31730:	e9 72 fe ff ff       	jmpq   315a7 <<str as core::fmt::Debug>::fmt+0x257>
   31735:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3173c:	00 00 00 
   3173f:	90                   	nop
   31740:	bd 01 00 00 00       	mov    $0x1,%ebp
   31745:	41 81 fd 80 00 00 00 	cmp    $0x80,%r13d
   3174c:	72 1e                	jb     3176c <<str as core::fmt::Debug>::fmt+0x41c>
   3174e:	bd 02 00 00 00       	mov    $0x2,%ebp
   31753:	41 81 fd 00 08 00 00 	cmp    $0x800,%r13d
   3175a:	72 10                	jb     3176c <<str as core::fmt::Debug>::fmt+0x41c>
   3175c:	41 81 fd 00 00 01 00 	cmp    $0x10000,%r13d
   31763:	bd 04 00 00 00       	mov    $0x4,%ebp
   31768:	48 83 dd 00          	sbb    $0x0,%rbp
   3176c:	48 01 dd             	add    %rbx,%rbp
   3176f:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   31774:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
   31779:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   3177e:	48 29 c3             	sub    %rax,%rbx
   31781:	4c 01 fb             	add    %r15,%rbx
   31784:	4c 89 fe             	mov    %r15,%rsi
   31787:	4c 39 ff             	cmp    %r15,%rdi
   3178a:	0f 85 20 fc ff ff    	jne    313b0 <<str as core::fmt::Debug>::fmt+0x60>
   31790:	48 85 ed             	test   %rbp,%rbp
   31793:	74 31                	je     317c6 <<str as core::fmt::Debug>::fmt+0x476>
   31795:	4c 39 cd             	cmp    %r9,%rbp
   31798:	74 2c                	je     317c6 <<str as core::fmt::Debug>::fmt+0x476>
   3179a:	73 0b                	jae    317a7 <<str as core::fmt::Debug>::fmt+0x457>
   3179c:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   317a1:	80 3c 28 bf          	cmpb   $0xbf,(%rax,%rbp,1)
   317a5:	7f 1f                	jg     317c6 <<str as core::fmt::Debug>::fmt+0x476>
   317a7:	4c 8d 05 7a 3b 01 00 	lea    0x13b7a(%rip),%r8        # 45328 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1dd0>
   317ae:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   317b3:	4c 89 ce             	mov    %r9,%rsi
   317b6:	48 89 ea             	mov    %rbp,%rdx
   317b9:	4c 89 c9             	mov    %r9,%rcx
   317bc:	ff 15 76 46 01 00    	callq  *0x14676(%rip)        # 45e38 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   317c2:	0f 0b                	ud2    
   317c4:	31 ed                	xor    %ebp,%ebp
   317c6:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   317cb:	48 01 ee             	add    %rbp,%rsi
   317ce:	49 29 e9             	sub    %rbp,%r9
   317d1:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi
   317d6:	49 8b 44 24 28       	mov    0x28(%r12),%rax
   317db:	4c 89 ca             	mov    %r9,%rdx
   317de:	ff 50 18             	callq  *0x18(%rax)
   317e1:	84 c0                	test   %al,%al
   317e3:	74 11                	je     317f6 <<str as core::fmt::Debug>::fmt+0x4a6>
   317e5:	b0 01                	mov    $0x1,%al
   317e7:	48 83 c4 38          	add    $0x38,%rsp
   317eb:	5b                   	pop    %rbx
   317ec:	41 5c                	pop    %r12
   317ee:	41 5d                	pop    %r13
   317f0:	41 5e                	pop    %r14
   317f2:	41 5f                	pop    %r15
   317f4:	5d                   	pop    %rbp
   317f5:	c3                   	retq   
   317f6:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi
   317fb:	49 8b 44 24 28       	mov    0x28(%r12),%rax
   31800:	48 8b 40 20          	mov    0x20(%rax),%rax
   31804:	be 22 00 00 00       	mov    $0x22,%esi
   31809:	48 83 c4 38          	add    $0x38,%rsp
   3180d:	5b                   	pop    %rbx
   3180e:	41 5c                	pop    %r12
   31810:	41 5d                	pop    %r13
   31812:	41 5e                	pop    %r14
   31814:	41 5f                	pop    %r15
   31816:	5d                   	pop    %rbp
   31817:	ff e0                	jmpq   *%rax
   31819:	4c 8d 05 f0 3a 01 00 	lea    0x13af0(%rip),%r8        # 45310 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1db8>
   31820:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   31825:	4c 89 ce             	mov    %r9,%rsi
   31828:	48 89 ea             	mov    %rbp,%rdx
   3182b:	48 89 d9             	mov    %rbx,%rcx
   3182e:	ff 15 04 46 01 00    	callq  *0x14604(%rip)        # 45e38 <_GLOBAL_OFFSET_TABLE_+0x4a8>
   31834:	0f 0b                	ud2    
   31836:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3183d:	00 00 00 

0000000000031840 <<str as core::fmt::Display>::fmt>:
   31840:	48 89 d0             	mov    %rdx,%rax
   31843:	48 89 f2             	mov    %rsi,%rdx
   31846:	48 89 fe             	mov    %rdi,%rsi
   31849:	48 89 c7             	mov    %rax,%rdi
   3184c:	ff 25 be 44 01 00    	jmpq   *0x144be(%rip)        # 45d10 <_GLOBAL_OFFSET_TABLE_+0x380>
   31852:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   31859:	00 00 00 
   3185c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000031860 <<char as core::fmt::Debug>::fmt>:
   31860:	55                   	push   %rbp
   31861:	41 57                	push   %r15
   31863:	41 56                	push   %r14
   31865:	41 55                	push   %r13
   31867:	41 54                	push   %r12
   31869:	53                   	push   %rbx
   3186a:	50                   	push   %rax
   3186b:	49 89 f6             	mov    %rsi,%r14
   3186e:	48 89 fb             	mov    %rdi,%rbx
   31871:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
   31875:	48 8b 46 28          	mov    0x28(%rsi),%rax
   31879:	be 27 00 00 00       	mov    $0x27,%esi
   3187e:	ff 50 20             	callq  *0x20(%rax)
   31881:	84 c0                	test   %al,%al
   31883:	74 11                	je     31896 <<char as core::fmt::Debug>::fmt+0x36>
   31885:	b0 01                	mov    $0x1,%al
   31887:	48 83 c4 08          	add    $0x8,%rsp
   3188b:	5b                   	pop    %rbx
   3188c:	41 5c                	pop    %r12
   3188e:	41 5d                	pop    %r13
   31890:	41 5e                	pop    %r14
   31892:	41 5f                	pop    %r15
   31894:	5d                   	pop    %rbp
   31895:	c3                   	retq   
   31896:	8b 1b                	mov    (%rbx),%ebx
   31898:	41 bf 02 00 00 00    	mov    $0x2,%r15d
   3189e:	8d 43 f7             	lea    -0x9(%rbx),%eax
   318a1:	83 f8 1e             	cmp    $0x1e,%eax
   318a4:	77 1c                	ja     318c2 <<char as core::fmt::Debug>::fmt+0x62>
   318a6:	bd 74 00 00 00       	mov    $0x74,%ebp
   318ab:	48 8d 0d c2 84 00 00 	lea    0x84c2(%rip),%rcx        # 39d74 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x224>
   318b2:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   318b6:	48 01 c8             	add    %rcx,%rax
   318b9:	ff e0                	jmpq   *%rax
   318bb:	bd 6e 00 00 00       	mov    $0x6e,%ebp
   318c0:	eb 56                	jmp    31918 <<char as core::fmt::Debug>::fmt+0xb8>
   318c2:	83 fb 5c             	cmp    $0x5c,%ebx
   318c5:	74 1e                	je     318e5 <<char as core::fmt::Debug>::fmt+0x85>
   318c7:	89 df                	mov    %ebx,%edi
   318c9:	ff 15 39 44 01 00    	callq  *0x14439(%rip)        # 45d08 <_GLOBAL_OFFSET_TABLE_+0x378>
   318cf:	84 c0                	test   %al,%al
   318d1:	75 1d                	jne    318f0 <<char as core::fmt::Debug>::fmt+0x90>
   318d3:	89 df                	mov    %ebx,%edi
   318d5:	ff 15 0d 41 01 00    	callq  *0x1410d(%rip)        # 459e8 <_GLOBAL_OFFSET_TABLE_+0x58>
   318db:	84 c0                	test   %al,%al
   318dd:	74 11                	je     318f0 <<char as core::fmt::Debug>::fmt+0x90>
   318df:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   318e5:	89 dd                	mov    %ebx,%ebp
   318e7:	eb 2f                	jmp    31918 <<char as core::fmt::Debug>::fmt+0xb8>
   318e9:	bd 72 00 00 00       	mov    $0x72,%ebp
   318ee:	eb 28                	jmp    31918 <<char as core::fmt::Debug>::fmt+0xb8>
   318f0:	89 d8                	mov    %ebx,%eax
   318f2:	83 cb 01             	or     $0x1,%ebx
   318f5:	0f bd cb             	bsr    %ebx,%ecx
   318f8:	83 f1 1c             	xor    $0x1c,%ecx
   318fb:	c1 e9 02             	shr    $0x2,%ecx
   318fe:	83 f1 07             	xor    $0x7,%ecx
   31901:	48 89 0c 24          	mov    %rcx,(%rsp)
   31905:	49 bc 00 00 00 00 05 	movabs $0x500000000,%r12
   3190c:	00 00 00 
   3190f:	49 09 c4             	or     %rax,%r12
   31912:	41 bf 03 00 00 00    	mov    $0x3,%r15d
   31918:	48 8d 1d d1 84 00 00 	lea    0x84d1(%rip),%rbx        # 39df0 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x2a0>
   3191f:	4c 8d 2d da 84 00 00 	lea    0x84da(%rip),%r13        # 39e00 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x2b0>
   31926:	e9 1d 00 00 00       	jmpq   31948 <<char as core::fmt::Debug>::fmt+0xe8>
   3192b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   31930:	45 31 ff             	xor    %r15d,%r15d
   31933:	89 ee                	mov    %ebp,%esi
   31935:	49 8b 7e 20          	mov    0x20(%r14),%rdi
   31939:	49 8b 46 28          	mov    0x28(%r14),%rax
   3193d:	ff 50 20             	callq  *0x20(%rax)
   31940:	84 c0                	test   %al,%al
   31942:	0f 85 3d ff ff ff    	jne    31885 <<char as core::fmt::Debug>::fmt+0x25>
   31948:	be 5c 00 00 00       	mov    $0x5c,%esi
   3194d:	44 89 f8             	mov    %r15d,%eax
   31950:	48 63 04 83          	movslq (%rbx,%rax,4),%rax
   31954:	48 01 d8             	add    %rbx,%rax
   31957:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   3195d:	ff e0                	jmpq   *%rax
   3195f:	4c 89 e0             	mov    %r12,%rax
   31962:	48 c1 e8 20          	shr    $0x20,%rax
   31966:	0f b6 c0             	movzbl %al,%eax
   31969:	49 63 44 85 00       	movslq 0x0(%r13,%rax,4),%rax
   3196e:	4c 01 e8             	add    %r13,%rax
   31971:	ff e0                	jmpq   *%rax
   31973:	48 b8 ff ff ff ff 00 	movabs $0xffffff00ffffffff,%rax
   3197a:	ff ff ff 
   3197d:	49 21 c4             	and    %rax,%r12
   31980:	41 bf 03 00 00 00    	mov    $0x3,%r15d
   31986:	be 7d 00 00 00       	mov    $0x7d,%esi
   3198b:	eb a8                	jmp    31935 <<char as core::fmt::Debug>::fmt+0xd5>
   3198d:	48 8b 14 24          	mov    (%rsp),%rdx
   31991:	8d 0c 95 00 00 00 00 	lea    0x0(,%rdx,4),%ecx
   31998:	44 89 e0             	mov    %r12d,%eax
   3199b:	d3 e8                	shr    %cl,%eax
   3199d:	83 e0 0f             	and    $0xf,%eax
   319a0:	3c 0a                	cmp    $0xa,%al
   319a2:	be 57 00 00 00       	mov    $0x57,%esi
   319a7:	b9 30 00 00 00       	mov    $0x30,%ecx
   319ac:	0f 42 f1             	cmovb  %ecx,%esi
   319af:	01 c6                	add    %eax,%esi
   319b1:	48 85 d2             	test   %rdx,%rdx
   319b4:	0f 84 83 00 00 00    	je     31a3d <<char as core::fmt::Debug>::fmt+0x1dd>
   319ba:	48 89 d0             	mov    %rdx,%rax
   319bd:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
   319c1:	48 89 04 24          	mov    %rax,(%rsp)
   319c5:	41 bf 03 00 00 00    	mov    $0x3,%r15d
   319cb:	e9 65 ff ff ff       	jmpq   31935 <<char as core::fmt::Debug>::fmt+0xd5>
   319d0:	48 b8 ff ff ff ff 00 	movabs $0xffffff00ffffffff,%rax
   319d7:	ff ff ff 
   319da:	49 21 c4             	and    %rax,%r12
   319dd:	48 b8 00 00 00 00 02 	movabs $0x200000000,%rax
   319e4:	00 00 00 
   319e7:	49 09 c4             	or     %rax,%r12
   319ea:	41 bf 03 00 00 00    	mov    $0x3,%r15d
   319f0:	be 7b 00 00 00       	mov    $0x7b,%esi
   319f5:	e9 3b ff ff ff       	jmpq   31935 <<char as core::fmt::Debug>::fmt+0xd5>
   319fa:	48 b8 ff ff ff ff 00 	movabs $0xffffff00ffffffff,%rax
   31a01:	ff ff ff 
   31a04:	49 21 c4             	and    %rax,%r12
   31a07:	48 b8 00 00 00 00 03 	movabs $0x300000000,%rax
   31a0e:	00 00 00 
   31a11:	49 09 c4             	or     %rax,%r12
   31a14:	41 bf 03 00 00 00    	mov    $0x3,%r15d
   31a1a:	be 75 00 00 00       	mov    $0x75,%esi
   31a1f:	e9 11 ff ff ff       	jmpq   31935 <<char as core::fmt::Debug>::fmt+0xd5>
   31a24:	48 b8 ff ff ff ff 00 	movabs $0xffffff00ffffffff,%rax
   31a2b:	ff ff ff 
   31a2e:	49 21 c4             	and    %rax,%r12
   31a31:	48 b8 00 00 00 00 04 	movabs $0x400000000,%rax
   31a38:	00 00 00 
   31a3b:	eb 17                	jmp    31a54 <<char as core::fmt::Debug>::fmt+0x1f4>
   31a3d:	48 b8 ff ff ff ff 00 	movabs $0xffffff00ffffffff,%rax
   31a44:	ff ff ff 
   31a47:	49 21 c4             	and    %rax,%r12
   31a4a:	48 b8 00 00 00 00 01 	movabs $0x100000000,%rax
   31a51:	00 00 00 
   31a54:	49 09 c4             	or     %rax,%r12
   31a57:	41 bf 03 00 00 00    	mov    $0x3,%r15d
   31a5d:	e9 d3 fe ff ff       	jmpq   31935 <<char as core::fmt::Debug>::fmt+0xd5>
   31a62:	49 8b 7e 20          	mov    0x20(%r14),%rdi
   31a66:	49 8b 46 28          	mov    0x28(%r14),%rax
   31a6a:	48 8b 40 20          	mov    0x20(%rax),%rax
   31a6e:	be 27 00 00 00       	mov    $0x27,%esi
   31a73:	48 83 c4 08          	add    $0x8,%rsp
   31a77:	5b                   	pop    %rbx
   31a78:	41 5c                	pop    %r12
   31a7a:	41 5d                	pop    %r13
   31a7c:	41 5e                	pop    %r14
   31a7e:	41 5f                	pop    %r15
   31a80:	5d                   	pop    %rbp
   31a81:	ff e0                	jmpq   *%rax
   31a83:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   31a8a:	00 00 00 
   31a8d:	0f 1f 00             	nopl   (%rax)

0000000000031a90 <<char as core::fmt::Display>::fmt>:
   31a90:	50                   	push   %rax
   31a91:	48 83 3e 01          	cmpq   $0x1,(%rsi)
   31a95:	75 04                	jne    31a9b <<char as core::fmt::Display>::fmt+0xb>
   31a97:	8b 07                	mov    (%rdi),%eax
   31a99:	eb 09                	jmp    31aa4 <<char as core::fmt::Display>::fmt+0x14>
   31a9b:	48 83 7e 10 01       	cmpq   $0x1,0x10(%rsi)
   31aa0:	8b 07                	mov    (%rdi),%eax
   31aa2:	75 44                	jne    31ae8 <<char as core::fmt::Display>::fmt+0x58>
   31aa4:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
   31aab:	00 
   31aac:	48 8d 4c 24 04       	lea    0x4(%rsp),%rcx
   31ab1:	3d 80 00 00 00       	cmp    $0x80,%eax
   31ab6:	73 0e                	jae    31ac6 <<char as core::fmt::Display>::fmt+0x36>
   31ab8:	88 44 24 04          	mov    %al,0x4(%rsp)
   31abc:	ba 01 00 00 00       	mov    $0x1,%edx
   31ac1:	e9 97 00 00 00       	jmpq   31b5d <<char as core::fmt::Display>::fmt+0xcd>
   31ac6:	89 c2                	mov    %eax,%edx
   31ac8:	3d 00 08 00 00       	cmp    $0x800,%eax
   31acd:	73 2a                	jae    31af9 <<char as core::fmt::Display>::fmt+0x69>
   31acf:	c1 ea 06             	shr    $0x6,%edx
   31ad2:	80 ca c0             	or     $0xc0,%dl
   31ad5:	88 54 24 04          	mov    %dl,0x4(%rsp)
   31ad9:	24 3f                	and    $0x3f,%al
   31adb:	0c 80                	or     $0x80,%al
   31add:	88 44 24 05          	mov    %al,0x5(%rsp)
   31ae1:	ba 02 00 00 00       	mov    $0x2,%edx
   31ae6:	eb 75                	jmp    31b5d <<char as core::fmt::Display>::fmt+0xcd>
   31ae8:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
   31aec:	48 8b 4e 28          	mov    0x28(%rsi),%rcx
   31af0:	48 8b 49 20          	mov    0x20(%rcx),%rcx
   31af4:	89 c6                	mov    %eax,%esi
   31af6:	58                   	pop    %rax
   31af7:	ff e1                	jmpq   *%rcx
   31af9:	3d 00 00 01 00       	cmp    $0x10000,%eax
   31afe:	73 28                	jae    31b28 <<char as core::fmt::Display>::fmt+0x98>
   31b00:	c1 ea 0c             	shr    $0xc,%edx
   31b03:	80 ca e0             	or     $0xe0,%dl
   31b06:	88 54 24 04          	mov    %dl,0x4(%rsp)
   31b0a:	89 c2                	mov    %eax,%edx
   31b0c:	c1 ea 06             	shr    $0x6,%edx
   31b0f:	80 e2 3f             	and    $0x3f,%dl
   31b12:	80 ca 80             	or     $0x80,%dl
   31b15:	88 54 24 05          	mov    %dl,0x5(%rsp)
   31b19:	24 3f                	and    $0x3f,%al
   31b1b:	0c 80                	or     $0x80,%al
   31b1d:	88 44 24 06          	mov    %al,0x6(%rsp)
   31b21:	ba 03 00 00 00       	mov    $0x3,%edx
   31b26:	eb 35                	jmp    31b5d <<char as core::fmt::Display>::fmt+0xcd>
   31b28:	c1 ea 12             	shr    $0x12,%edx
   31b2b:	80 ca f0             	or     $0xf0,%dl
   31b2e:	88 54 24 04          	mov    %dl,0x4(%rsp)
   31b32:	89 c2                	mov    %eax,%edx
   31b34:	c1 ea 0c             	shr    $0xc,%edx
   31b37:	80 e2 3f             	and    $0x3f,%dl
   31b3a:	80 ca 80             	or     $0x80,%dl
   31b3d:	88 54 24 05          	mov    %dl,0x5(%rsp)
   31b41:	89 c2                	mov    %eax,%edx
   31b43:	c1 ea 06             	shr    $0x6,%edx
   31b46:	80 e2 3f             	and    $0x3f,%dl
   31b49:	80 ca 80             	or     $0x80,%dl
   31b4c:	88 54 24 06          	mov    %dl,0x6(%rsp)
   31b50:	24 3f                	and    $0x3f,%al
   31b52:	0c 80                	or     $0x80,%al
   31b54:	88 44 24 07          	mov    %al,0x7(%rsp)
   31b58:	ba 04 00 00 00       	mov    $0x4,%edx
   31b5d:	48 89 f7             	mov    %rsi,%rdi
   31b60:	48 89 ce             	mov    %rcx,%rsi
   31b63:	ff 15 a7 41 01 00    	callq  *0x141a7(%rip)        # 45d10 <_GLOBAL_OFFSET_TABLE_+0x380>
   31b69:	59                   	pop    %rcx
   31b6a:	c3                   	retq   
   31b6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000031b70 <core::slice::memchr::memchr_general_case>:
   31b70:	50                   	push   %rax
   31b71:	41 89 f9             	mov    %edi,%r9d
   31b74:	89 f7                	mov    %esi,%edi
   31b76:	f7 df                	neg    %edi
   31b78:	48 83 e7 07          	and    $0x7,%rdi
   31b7c:	74 22                	je     31ba0 <core::slice::memchr::memchr_general_case+0x30>
   31b7e:	48 39 d7             	cmp    %rdx,%rdi
   31b81:	48 0f 47 fa          	cmova  %rdx,%rdi
   31b85:	48 85 ff             	test   %rdi,%rdi
   31b88:	74 16                	je     31ba0 <core::slice::memchr::memchr_general_case+0x30>
   31b8a:	44 38 0e             	cmp    %r9b,(%rsi)
   31b8d:	0f 85 ae 00 00 00    	jne    31c41 <core::slice::memchr::memchr_general_case+0xd1>
   31b93:	45 31 c0             	xor    %r8d,%r8d
   31b96:	b8 01 00 00 00       	mov    $0x1,%eax
   31b9b:	4c 89 c2             	mov    %r8,%rdx
   31b9e:	59                   	pop    %rcx
   31b9f:	c3                   	retq   
   31ba0:	48 8d 42 f0          	lea    -0x10(%rdx),%rax
   31ba4:	31 ff                	xor    %edi,%edi
   31ba6:	45 0f b6 c1          	movzbl %r9b,%r8d
   31baa:	48 b9 01 01 01 01 01 	movabs $0x101010101010101,%rcx
   31bb1:	01 01 01 
   31bb4:	49 0f af c8          	imul   %r8,%rcx
   31bb8:	66 48 0f 6e c1       	movq   %rcx,%xmm0
   31bbd:	66 0f 70 c0 44       	pshufd $0x44,%xmm0,%xmm0
   31bc2:	66 0f 6f 0d 76 7e 00 	movdqa 0x7e76(%rip),%xmm1        # 39a40 <str.6+0x2720>
   31bc9:	00 
   31bca:	66 0f 6f 15 7e 7e 00 	movdqa 0x7e7e(%rip),%xmm2        # 39a50 <str.6+0x2730>
   31bd1:	00 
   31bd2:	66 0f ef db          	pxor   %xmm3,%xmm3
   31bd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   31bdd:	00 00 00 
   31be0:	f3 0f 6f 24 3e       	movdqu (%rsi,%rdi,1),%xmm4
   31be5:	66 0f ef e0          	pxor   %xmm0,%xmm4
   31be9:	66 0f 6f ec          	movdqa %xmm4,%xmm5
   31bed:	66 0f d4 e9          	paddq  %xmm1,%xmm5
   31bf1:	66 0f df e5          	pandn  %xmm5,%xmm4
   31bf5:	66 0f db e2          	pand   %xmm2,%xmm4
   31bf9:	66 0f 74 e3          	pcmpeqb %xmm3,%xmm4
   31bfd:	66 0f d7 cc          	pmovmskb %xmm4,%ecx
   31c01:	81 f9 ff ff 00 00    	cmp    $0xffff,%ecx
   31c07:	75 09                	jne    31c12 <core::slice::memchr::memchr_general_case+0xa2>
   31c09:	48 83 c7 10          	add    $0x10,%rdi
   31c0d:	48 39 c7             	cmp    %rax,%rdi
   31c10:	76 ce                	jbe    31be0 <core::slice::memchr::memchr_general_case+0x70>
   31c12:	48 39 d7             	cmp    %rdx,%rdi
   31c15:	0f 87 d5 00 00 00    	ja     31cf0 <core::slice::memchr::memchr_general_case+0x180>
   31c1b:	48 39 d7             	cmp    %rdx,%rdi
   31c1e:	75 06                	jne    31c26 <core::slice::memchr::memchr_general_case+0xb6>
   31c20:	31 d2                	xor    %edx,%edx
   31c22:	31 c0                	xor    %eax,%eax
   31c24:	eb 38                	jmp    31c5e <core::slice::memchr::memchr_general_case+0xee>
   31c26:	48 29 fa             	sub    %rdi,%rdx
   31c29:	48 01 fe             	add    %rdi,%rsi
   31c2c:	31 c0                	xor    %eax,%eax
   31c2e:	31 c9                	xor    %ecx,%ecx
   31c30:	44 38 0c 0e          	cmp    %r9b,(%rsi,%rcx,1)
   31c34:	74 20                	je     31c56 <core::slice::memchr::memchr_general_case+0xe6>
   31c36:	48 83 c1 01          	add    $0x1,%rcx
   31c3a:	48 39 ca             	cmp    %rcx,%rdx
   31c3d:	75 f1                	jne    31c30 <core::slice::memchr::memchr_general_case+0xc0>
   31c3f:	eb 1d                	jmp    31c5e <core::slice::memchr::memchr_general_case+0xee>
   31c41:	48 83 ff 01          	cmp    $0x1,%rdi
   31c45:	75 22                	jne    31c69 <core::slice::memchr::memchr_general_case+0xf9>
   31c47:	48 8d 42 f0          	lea    -0x10(%rdx),%rax
   31c4b:	48 39 c7             	cmp    %rax,%rdi
   31c4e:	0f 86 52 ff ff ff    	jbe    31ba6 <core::slice::memchr::memchr_general_case+0x36>
   31c54:	eb c5                	jmp    31c1b <core::slice::memchr::memchr_general_case+0xab>
   31c56:	b8 01 00 00 00       	mov    $0x1,%eax
   31c5b:	48 89 ca             	mov    %rcx,%rdx
   31c5e:	48 01 fa             	add    %rdi,%rdx
   31c61:	49 89 d0             	mov    %rdx,%r8
   31c64:	4c 89 c2             	mov    %r8,%rdx
   31c67:	59                   	pop    %rcx
   31c68:	c3                   	retq   
   31c69:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   31c6f:	44 38 4e 01          	cmp    %r9b,0x1(%rsi)
   31c73:	0f 84 1d ff ff ff    	je     31b96 <core::slice::memchr::memchr_general_case+0x26>
   31c79:	48 83 ff 02          	cmp    $0x2,%rdi
   31c7d:	74 c8                	je     31c47 <core::slice::memchr::memchr_general_case+0xd7>
   31c7f:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   31c85:	44 38 4e 02          	cmp    %r9b,0x2(%rsi)
   31c89:	0f 84 07 ff ff ff    	je     31b96 <core::slice::memchr::memchr_general_case+0x26>
   31c8f:	48 83 ff 03          	cmp    $0x3,%rdi
   31c93:	74 b2                	je     31c47 <core::slice::memchr::memchr_general_case+0xd7>
   31c95:	41 b8 03 00 00 00    	mov    $0x3,%r8d
   31c9b:	44 38 4e 03          	cmp    %r9b,0x3(%rsi)
   31c9f:	0f 84 f1 fe ff ff    	je     31b96 <core::slice::memchr::memchr_general_case+0x26>
   31ca5:	48 83 ff 04          	cmp    $0x4,%rdi
   31ca9:	74 9c                	je     31c47 <core::slice::memchr::memchr_general_case+0xd7>
   31cab:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   31cb1:	44 38 4e 04          	cmp    %r9b,0x4(%rsi)
   31cb5:	0f 84 db fe ff ff    	je     31b96 <core::slice::memchr::memchr_general_case+0x26>
   31cbb:	48 83 ff 05          	cmp    $0x5,%rdi
   31cbf:	74 86                	je     31c47 <core::slice::memchr::memchr_general_case+0xd7>
   31cc1:	41 b8 05 00 00 00    	mov    $0x5,%r8d
   31cc7:	44 38 4e 05          	cmp    %r9b,0x5(%rsi)
   31ccb:	0f 84 c5 fe ff ff    	je     31b96 <core::slice::memchr::memchr_general_case+0x26>
   31cd1:	48 83 ff 06          	cmp    $0x6,%rdi
   31cd5:	0f 84 6c ff ff ff    	je     31c47 <core::slice::memchr::memchr_general_case+0xd7>
   31cdb:	41 b8 06 00 00 00    	mov    $0x6,%r8d
   31ce1:	44 38 4e 06          	cmp    %r9b,0x6(%rsi)
   31ce5:	0f 84 ab fe ff ff    	je     31b96 <core::slice::memchr::memchr_general_case+0x26>
   31ceb:	e9 57 ff ff ff       	jmpq   31c47 <core::slice::memchr::memchr_general_case+0xd7>
   31cf0:	48 8d 05 49 36 01 00 	lea    0x13649(%rip),%rax        # 45340 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1de8>
   31cf7:	48 89 d6             	mov    %rdx,%rsi
   31cfa:	48 89 c2             	mov    %rax,%rdx
   31cfd:	ff 15 f5 40 01 00    	callq  *0x140f5(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x468>
   31d03:	0f 0b                	ud2    
   31d05:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   31d0c:	00 00 00 
   31d0f:	90                   	nop

0000000000031d10 <core::slice::index::slice_start_index_len_fail>:
   31d10:	48 83 ec 68          	sub    $0x68,%rsp
   31d14:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   31d19:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   31d1e:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   31d23:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   31d28:	48 8d 05 91 27 00 00 	lea    0x2791(%rip),%rax        # 344c0 <core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt>
   31d2f:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   31d34:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
   31d39:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   31d3e:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   31d43:	48 8d 05 0e 36 01 00 	lea    0x1360e(%rip),%rax        # 45358 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1e00>
   31d4a:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   31d4f:	48 c7 44 24 40 02 00 	movq   $0x2,0x40(%rsp)
   31d56:	00 00 
   31d58:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
   31d5f:	00 00 
   31d61:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
   31d66:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   31d6b:	48 c7 44 24 60 02 00 	movq   $0x2,0x60(%rsp)
   31d72:	00 00 
   31d74:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
   31d79:	48 89 d6             	mov    %rdx,%rsi
   31d7c:	ff 15 ce 3e 01 00    	callq  *0x13ece(%rip)        # 45c50 <_GLOBAL_OFFSET_TABLE_+0x2c0>
   31d82:	0f 0b                	ud2    
   31d84:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   31d8b:	00 00 00 
   31d8e:	66 90                	xchg   %ax,%ax

0000000000031d90 <core::slice::index::slice_end_index_len_fail>:
   31d90:	48 83 ec 68          	sub    $0x68,%rsp
   31d94:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   31d99:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   31d9e:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   31da3:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   31da8:	48 8d 05 11 27 00 00 	lea    0x2711(%rip),%rax        # 344c0 <core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt>
   31daf:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   31db4:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
   31db9:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   31dbe:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   31dc3:	48 8d 05 ae 35 01 00 	lea    0x135ae(%rip),%rax        # 45378 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1e20>
   31dca:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   31dcf:	48 c7 44 24 40 02 00 	movq   $0x2,0x40(%rsp)
   31dd6:	00 00 
   31dd8:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
   31ddf:	00 00 
   31de1:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
   31de6:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   31deb:	48 c7 44 24 60 02 00 	movq   $0x2,0x60(%rsp)
   31df2:	00 00 
   31df4:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
   31df9:	48 89 d6             	mov    %rdx,%rsi
   31dfc:	ff 15 4e 3e 01 00    	callq  *0x13e4e(%rip)        # 45c50 <_GLOBAL_OFFSET_TABLE_+0x2c0>
   31e02:	0f 0b                	ud2    
   31e04:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   31e0b:	00 00 00 
   31e0e:	66 90                	xchg   %ax,%ax

0000000000031e10 <core::slice::index::slice_index_order_fail>:
   31e10:	48 83 ec 68          	sub    $0x68,%rsp
   31e14:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   31e19:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   31e1e:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   31e23:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   31e28:	48 8d 05 91 26 00 00 	lea    0x2691(%rip),%rax        # 344c0 <core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt>
   31e2f:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   31e34:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
   31e39:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   31e3e:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   31e43:	48 8d 05 4e 35 01 00 	lea    0x1354e(%rip),%rax        # 45398 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1e40>
   31e4a:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   31e4f:	48 c7 44 24 40 02 00 	movq   $0x2,0x40(%rsp)
   31e56:	00 00 
   31e58:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
   31e5f:	00 00 
   31e61:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
   31e66:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   31e6b:	48 c7 44 24 60 02 00 	movq   $0x2,0x60(%rsp)
   31e72:	00 00 
   31e74:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
   31e79:	48 89 d6             	mov    %rdx,%rsi
   31e7c:	ff 15 ce 3d 01 00    	callq  *0x13dce(%rip)        # 45c50 <_GLOBAL_OFFSET_TABLE_+0x2c0>
   31e82:	0f 0b                	ud2    
   31e84:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   31e8b:	00 00 00 
   31e8e:	66 90                	xchg   %ax,%ax

0000000000031e90 <core::slice::<impl [T]>::copy_from_slice::len_mismatch_fail>:
   31e90:	48 83 ec 68          	sub    $0x68,%rsp
   31e94:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   31e99:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   31e9e:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   31ea3:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   31ea8:	48 8d 05 11 26 00 00 	lea    0x2611(%rip),%rax        # 344c0 <core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt>
   31eaf:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   31eb4:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
   31eb9:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   31ebe:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   31ec3:	48 8d 05 ee 34 01 00 	lea    0x134ee(%rip),%rax        # 453b8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1e60>
   31eca:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   31ecf:	48 c7 44 24 40 03 00 	movq   $0x3,0x40(%rsp)
   31ed6:	00 00 
   31ed8:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
   31edf:	00 00 
   31ee1:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
   31ee6:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   31eeb:	48 c7 44 24 60 02 00 	movq   $0x2,0x60(%rsp)
   31ef2:	00 00 
   31ef4:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
   31ef9:	48 89 d6             	mov    %rdx,%rsi
   31efc:	ff 15 4e 3d 01 00    	callq  *0x13d4e(%rip)        # 45c50 <_GLOBAL_OFFSET_TABLE_+0x2c0>
   31f02:	0f 0b                	ud2    
   31f04:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   31f0b:	00 00 00 
   31f0e:	66 90                	xchg   %ax,%ax

0000000000031f10 <core::str::converts::from_utf8>:
   31f10:	55                   	push   %rbp
   31f11:	41 56                	push   %r14
   31f13:	53                   	push   %rbx
   31f14:	48 89 f8             	mov    %rdi,%rax
   31f17:	31 ff                	xor    %edi,%edi
   31f19:	48 89 d1             	mov    %rdx,%rcx
   31f1c:	48 83 e9 0f          	sub    $0xf,%rcx
   31f20:	48 0f 43 f9          	cmovae %rcx,%rdi
   31f24:	48 85 d2             	test   %rdx,%rdx
   31f27:	0f 84 ef 01 00 00    	je     3211c <core::str::converts::from_utf8+0x20c>
   31f2d:	31 c9                	xor    %ecx,%ecx
   31f2f:	4c 8d 0d c3 81 00 00 	lea    0x81c3(%rip),%r9        # 3a0f9 <core::str::validations::UTF8_CHAR_WIDTH>
   31f36:	49 ba 80 80 80 80 80 	movabs $0x8080808080808080,%r10
   31f3d:	80 80 80 
   31f40:	41 bb 01 00 00 00    	mov    $0x1,%r11d
   31f46:	e9 15 00 00 00       	jmpq   31f60 <core::str::converts::from_utf8+0x50>
   31f4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   31f50:	48 83 c5 01          	add    $0x1,%rbp
   31f54:	48 89 e9             	mov    %rbp,%rcx
   31f57:	48 39 d1             	cmp    %rdx,%rcx
   31f5a:	0f 83 bc 01 00 00    	jae    3211c <core::str::converts::from_utf8+0x20c>
   31f60:	0f b6 1c 0e          	movzbl (%rsi,%rcx,1),%ebx
   31f64:	84 db                	test   %bl,%bl
   31f66:	78 58                	js     31fc0 <core::str::converts::from_utf8+0xb0>
   31f68:	8d 2c 31             	lea    (%rcx,%rsi,1),%ebp
   31f6b:	f7 dd                	neg    %ebp
   31f6d:	40 f6 c5 07          	test   $0x7,%bpl
   31f71:	74 11                	je     31f84 <core::str::converts::from_utf8+0x74>
   31f73:	48 83 c1 01          	add    $0x1,%rcx
   31f77:	e9 db ff ff ff       	jmpq   31f57 <core::str::converts::from_utf8+0x47>
   31f7c:	0f 1f 40 00          	nopl   0x0(%rax)
   31f80:	48 83 c1 10          	add    $0x10,%rcx
   31f84:	48 39 f9             	cmp    %rdi,%rcx
   31f87:	73 0e                	jae    31f97 <core::str::converts::from_utf8+0x87>
   31f89:	48 8b 6c 0e 08       	mov    0x8(%rsi,%rcx,1),%rbp
   31f8e:	48 0b 2c 0e          	or     (%rsi,%rcx,1),%rbp
   31f92:	4c 85 d5             	test   %r10,%rbp
   31f95:	74 e9                	je     31f80 <core::str::converts::from_utf8+0x70>
   31f97:	48 39 d1             	cmp    %rdx,%rcx
   31f9a:	0f 83 b7 ff ff ff    	jae    31f57 <core::str::converts::from_utf8+0x47>
   31fa0:	80 3c 0e 00          	cmpb   $0x0,(%rsi,%rcx,1)
   31fa4:	78 b1                	js     31f57 <core::str::converts::from_utf8+0x47>
   31fa6:	48 83 c1 01          	add    $0x1,%rcx
   31faa:	48 39 ca             	cmp    %rcx,%rdx
   31fad:	0f 85 ed ff ff ff    	jne    31fa0 <core::str::converts::from_utf8+0x90>
   31fb3:	e9 64 01 00 00       	jmpq   3211c <core::str::converts::from_utf8+0x20c>
   31fb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   31fbf:	00 
   31fc0:	42 8a 2c 0b          	mov    (%rbx,%r9,1),%bpl
   31fc4:	41 b0 01             	mov    $0x1,%r8b
   31fc7:	40 80 fd 04          	cmp    $0x4,%bpl
   31fcb:	74 31                	je     31ffe <core::str::converts::from_utf8+0xee>
   31fcd:	40 80 fd 03          	cmp    $0x3,%bpl
   31fd1:	74 55                	je     32028 <core::str::converts::from_utf8+0x118>
   31fd3:	40 80 fd 02          	cmp    $0x2,%bpl
   31fd7:	0f 85 51 01 00 00    	jne    3212e <core::str::converts::from_utf8+0x21e>
   31fdd:	48 8d 69 01          	lea    0x1(%rcx),%rbp
   31fe1:	48 39 d5             	cmp    %rdx,%rbp
   31fe4:	0f 83 3e 01 00 00    	jae    32128 <core::str::converts::from_utf8+0x218>
   31fea:	8a 1c 2e             	mov    (%rsi,%rbp,1),%bl
   31fed:	80 e3 c0             	and    $0xc0,%bl
   31ff0:	80 fb 80             	cmp    $0x80,%bl
   31ff3:	0f 84 57 ff ff ff    	je     31f50 <core::str::converts::from_utf8+0x40>
   31ff9:	e9 30 01 00 00       	jmpq   3212e <core::str::converts::from_utf8+0x21e>
   31ffe:	48 8d 69 01          	lea    0x1(%rcx),%rbp
   32002:	48 39 d5             	cmp    %rdx,%rbp
   32005:	0f 83 1d 01 00 00    	jae    32128 <core::str::converts::from_utf8+0x218>
   3200b:	40 8a 2c 2e          	mov    (%rsi,%rbp,1),%bpl
   3200f:	80 fb f4             	cmp    $0xf4,%bl
   32012:	74 4a                	je     3205e <core::str::converts::from_utf8+0x14e>
   32014:	80 fb f0             	cmp    $0xf0,%bl
   32017:	75 59                	jne    32072 <core::str::converts::from_utf8+0x162>
   32019:	40 80 c5 70          	add    $0x70,%bpl
   3201d:	40 80 fd 30          	cmp    $0x30,%bpl
   32021:	72 6e                	jb     32091 <core::str::converts::from_utf8+0x181>
   32023:	e9 06 01 00 00       	jmpq   3212e <core::str::converts::from_utf8+0x21e>
   32028:	48 8d 69 01          	lea    0x1(%rcx),%rbp
   3202c:	48 39 d5             	cmp    %rdx,%rbp
   3202f:	0f 83 f3 00 00 00    	jae    32128 <core::str::converts::from_utf8+0x218>
   32035:	44 8a 34 2e          	mov    (%rsi,%rbp,1),%r14b
   32039:	80 fb ed             	cmp    $0xed,%bl
   3203c:	0f 84 84 00 00 00    	je     320c6 <core::str::converts::from_utf8+0x1b6>
   32042:	80 fb e0             	cmp    $0xe0,%bl
   32045:	0f 85 88 00 00 00    	jne    320d3 <core::str::converts::from_utf8+0x1c3>
   3204b:	41 80 e6 e0          	and    $0xe0,%r14b
   3204f:	41 80 fe a0          	cmp    $0xa0,%r14b
   32053:	0f 84 a3 00 00 00    	je     320fc <core::str::converts::from_utf8+0x1ec>
   32059:	e9 d0 00 00 00       	jmpq   3212e <core::str::converts::from_utf8+0x21e>
   3205e:	40 84 ed             	test   %bpl,%bpl
   32061:	0f 89 c7 00 00 00    	jns    3212e <core::str::converts::from_utf8+0x21e>
   32067:	40 80 fd 90          	cmp    $0x90,%bpl
   3206b:	72 24                	jb     32091 <core::str::converts::from_utf8+0x181>
   3206d:	e9 bc 00 00 00       	jmpq   3212e <core::str::converts::from_utf8+0x21e>
   32072:	40 80 fd bf          	cmp    $0xbf,%bpl
   32076:	0f 87 b2 00 00 00    	ja     3212e <core::str::converts::from_utf8+0x21e>
   3207c:	80 c3 0f             	add    $0xf,%bl
   3207f:	80 fb 02             	cmp    $0x2,%bl
   32082:	0f 87 a6 00 00 00    	ja     3212e <core::str::converts::from_utf8+0x21e>
   32088:	40 84 ed             	test   %bpl,%bpl
   3208b:	0f 89 9d 00 00 00    	jns    3212e <core::str::converts::from_utf8+0x21e>
   32091:	48 8d 69 02          	lea    0x2(%rcx),%rbp
   32095:	48 39 d5             	cmp    %rdx,%rbp
   32098:	0f 83 8a 00 00 00    	jae    32128 <core::str::converts::from_utf8+0x218>
   3209e:	8a 1c 2e             	mov    (%rsi,%rbp,1),%bl
   320a1:	80 e3 c0             	and    $0xc0,%bl
   320a4:	80 fb 80             	cmp    $0x80,%bl
   320a7:	75 6b                	jne    32114 <core::str::converts::from_utf8+0x204>
   320a9:	48 8d 69 03          	lea    0x3(%rcx),%rbp
   320ad:	48 39 d5             	cmp    %rdx,%rbp
   320b0:	73 76                	jae    32128 <core::str::converts::from_utf8+0x218>
   320b2:	8a 1c 2e             	mov    (%rsi,%rbp,1),%bl
   320b5:	80 e3 c0             	and    $0xc0,%bl
   320b8:	80 fb 80             	cmp    $0x80,%bl
   320bb:	0f 84 8f fe ff ff    	je     31f50 <core::str::converts::from_utf8+0x40>
   320c1:	e9 88 00 00 00       	jmpq   3214e <core::str::converts::from_utf8+0x23e>
   320c6:	45 84 f6             	test   %r14b,%r14b
   320c9:	79 63                	jns    3212e <core::str::converts::from_utf8+0x21e>
   320cb:	41 80 fe a0          	cmp    $0xa0,%r14b
   320cf:	72 2b                	jb     320fc <core::str::converts::from_utf8+0x1ec>
   320d1:	eb 5b                	jmp    3212e <core::str::converts::from_utf8+0x21e>
   320d3:	8d 6b 1f             	lea    0x1f(%rbx),%ebp
   320d6:	40 80 fd 0b          	cmp    $0xb,%bpl
   320da:	77 0d                	ja     320e9 <core::str::converts::from_utf8+0x1d9>
   320dc:	45 84 f6             	test   %r14b,%r14b
   320df:	79 4d                	jns    3212e <core::str::converts::from_utf8+0x21e>
   320e1:	41 80 fe c0          	cmp    $0xc0,%r14b
   320e5:	72 15                	jb     320fc <core::str::converts::from_utf8+0x1ec>
   320e7:	eb 45                	jmp    3212e <core::str::converts::from_utf8+0x21e>
   320e9:	41 80 fe bf          	cmp    $0xbf,%r14b
   320ed:	77 3f                	ja     3212e <core::str::converts::from_utf8+0x21e>
   320ef:	80 e3 fe             	and    $0xfe,%bl
   320f2:	80 fb ee             	cmp    $0xee,%bl
   320f5:	75 37                	jne    3212e <core::str::converts::from_utf8+0x21e>
   320f7:	45 84 f6             	test   %r14b,%r14b
   320fa:	79 32                	jns    3212e <core::str::converts::from_utf8+0x21e>
   320fc:	48 8d 69 02          	lea    0x2(%rcx),%rbp
   32100:	48 39 d5             	cmp    %rdx,%rbp
   32103:	73 23                	jae    32128 <core::str::converts::from_utf8+0x218>
   32105:	8a 1c 2e             	mov    (%rsi,%rbp,1),%bl
   32108:	80 e3 c0             	and    $0xc0,%bl
   3210b:	80 fb 80             	cmp    $0x80,%bl
   3210e:	0f 84 3c fe ff ff    	je     31f50 <core::str::converts::from_utf8+0x40>
   32114:	41 bb 02 00 00 00    	mov    $0x2,%r11d
   3211a:	eb 12                	jmp    3212e <core::str::converts::from_utf8+0x21e>
   3211c:	48 89 70 08          	mov    %rsi,0x8(%rax)
   32120:	48 89 50 10          	mov    %rdx,0x10(%rax)
   32124:	31 c9                	xor    %ecx,%ecx
   32126:	eb 1e                	jmp    32146 <core::str::converts::from_utf8+0x236>
   32128:	45 31 db             	xor    %r11d,%r11d
   3212b:	45 31 c0             	xor    %r8d,%r8d
   3212e:	49 c1 e3 08          	shl    $0x8,%r11
   32132:	41 0f b6 d0          	movzbl %r8b,%edx
   32136:	4c 09 da             	or     %r11,%rdx
   32139:	48 89 48 08          	mov    %rcx,0x8(%rax)
   3213d:	48 89 50 10          	mov    %rdx,0x10(%rax)
   32141:	b9 01 00 00 00       	mov    $0x1,%ecx
   32146:	48 89 08             	mov    %rcx,(%rax)
   32149:	5b                   	pop    %rbx
   3214a:	41 5e                	pop    %r14
   3214c:	5d                   	pop    %rbp
   3214d:	c3                   	retq   
   3214e:	41 bb 03 00 00 00    	mov    $0x3,%r11d
   32154:	eb d8                	jmp    3212e <core::str::converts::from_utf8+0x21e>
   32156:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3215d:	00 00 00 

0000000000032160 <core::str::error::Utf8Error::valid_up_to>:
   32160:	48 8b 07             	mov    (%rdi),%rax
   32163:	c3                   	retq   
   32164:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3216b:	00 00 00 
   3216e:	66 90                	xchg   %ax,%ax

0000000000032170 <core::str::error::Utf8Error::error_len>:
   32170:	0f b6 47 08          	movzbl 0x8(%rdi),%eax
   32174:	0f b6 57 09          	movzbl 0x9(%rdi),%edx
   32178:	c3                   	retq   
   32179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000032180 <core::str::pattern::StrSearcher::new>:
   32180:	55                   	push   %rbp
   32181:	41 57                	push   %r15
   32183:	41 56                	push   %r14
   32185:	41 55                	push   %r13
   32187:	41 54                	push   %r12
   32189:	53                   	push   %rbx
   3218a:	48 83 ec 18          	sub    $0x18,%rsp
   3218e:	49 89 cc             	mov    %rcx,%r12
   32191:	48 89 f8             	mov    %rdi,%rax
   32194:	4d 85 c0             	test   %r8,%r8
   32197:	0f 84 51 02 00 00    	je     323ee <core::str::pattern::StrSearcher::new+0x26e>
   3219d:	4d 89 c6             	mov    %r8,%r14
   321a0:	49 83 f8 01          	cmp    $0x1,%r8
   321a4:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   321a9:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   321ae:	0f 85 65 02 00 00    	jne    32419 <core::str::pattern::StrSearcher::new+0x299>
   321b4:	45 31 c9             	xor    %r9d,%r9d
   321b7:	4d 89 f7             	mov    %r14,%r15
   321ba:	4c 89 f1             	mov    %r14,%rcx
   321bd:	45 31 ed             	xor    %r13d,%r13d
   321c0:	4d 39 e9             	cmp    %r13,%r9
   321c3:	4c 0f 46 f9          	cmovbe %rcx,%r15
   321c7:	4d 0f 47 e9          	cmova  %r9,%r13
   321cb:	4d 39 f5             	cmp    %r14,%r13
   321ce:	0f 87 2b 08 00 00    	ja     329ff <core::str::pattern::StrSearcher::new+0x87f>
   321d4:	4c 89 fe             	mov    %r15,%rsi
   321d7:	4c 01 ee             	add    %r13,%rsi
   321da:	0f 82 2b 08 00 00    	jb     32a0b <core::str::pattern::StrSearcher::new+0x88b>
   321e0:	48 89 04 24          	mov    %rax,(%rsp)
   321e4:	4c 39 f6             	cmp    %r14,%rsi
   321e7:	0f 87 30 08 00 00    	ja     32a1d <core::str::pattern::StrSearcher::new+0x89d>
   321ed:	4b 8d 34 3c          	lea    (%r12,%r15,1),%rsi
   321f1:	4d 85 ff             	test   %r15,%r15
   321f4:	74 3b                	je     32231 <core::str::pattern::StrSearcher::new+0xb1>
   321f6:	4c 89 e7             	mov    %r12,%rdi
   321f9:	4c 89 ea             	mov    %r13,%rdx
   321fc:	48 89 f3             	mov    %rsi,%rbx
   321ff:	ff 15 bb 3b 01 00    	callq  *0x13bbb(%rip)        # 45dc0 <bcmp@GLIBC_2.2.5>
   32205:	48 89 de             	mov    %rbx,%rsi
   32208:	85 c0                	test   %eax,%eax
   3220a:	74 25                	je     32231 <core::str::pattern::StrSearcher::new+0xb1>
   3220c:	4d 89 f7             	mov    %r14,%r15
   3220f:	4d 29 ef             	sub    %r13,%r15
   32212:	4d 39 fd             	cmp    %r15,%r13
   32215:	4d 0f 47 fd          	cmova  %r13,%r15
   32219:	49 83 fe 04          	cmp    $0x4,%r14
   3221d:	0f 83 2c 03 00 00    	jae    3254f <core::str::pattern::StrSearcher::new+0x3cf>
   32223:	31 d2                	xor    %edx,%edx
   32225:	4c 89 e5             	mov    %r12,%rbp
   32228:	48 8b 04 24          	mov    (%rsp),%rax
   3222c:	e9 f8 04 00 00       	jmpq   32729 <core::str::pattern::StrSearcher::new+0x5a9>
   32231:	bb 01 00 00 00       	mov    $0x1,%ebx
   32236:	45 31 c0             	xor    %r8d,%r8d
   32239:	31 d2                	xor    %edx,%edx
   3223b:	b9 01 00 00 00       	mov    $0x1,%ecx
   32240:	45 31 c9             	xor    %r9d,%r9d
   32243:	e9 2a 00 00 00       	jmpq   32272 <core::str::pattern::StrSearcher::new+0xf2>
   32248:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   3224f:	00 
   32250:	48 8d 2c 0a          	lea    (%rdx,%rcx,1),%rbp
   32254:	48 83 c5 01          	add    $0x1,%rbp
   32258:	48 89 eb             	mov    %rbp,%rbx
   3225b:	4c 29 cb             	sub    %r9,%rbx
   3225e:	31 d2                	xor    %edx,%edx
   32260:	4c 89 c9             	mov    %r9,%rcx
   32263:	49 89 c9             	mov    %rcx,%r9
   32266:	48 89 e9             	mov    %rbp,%rcx
   32269:	4c 39 fb             	cmp    %r15,%rbx
   3226c:	0f 84 84 00 00 00    	je     322f6 <core::str::pattern::StrSearcher::new+0x176>
   32272:	48 8d 04 11          	lea    (%rcx,%rdx,1),%rax
   32276:	4c 39 f0             	cmp    %r14,%rax
   32279:	73 7b                	jae    322f6 <core::str::pattern::StrSearcher::new+0x176>
   3227b:	48 89 c8             	mov    %rcx,%rax
   3227e:	48 f7 d0             	not    %rax
   32281:	4c 89 f7             	mov    %r14,%rdi
   32284:	48 29 d7             	sub    %rdx,%rdi
   32287:	48 01 c7             	add    %rax,%rdi
   3228a:	4c 39 f7             	cmp    %r14,%rdi
   3228d:	0f 83 4e 07 00 00    	jae    329e1 <core::str::pattern::StrSearcher::new+0x861>
   32293:	48 89 d0             	mov    %rdx,%rax
   32296:	48 f7 d0             	not    %rax
   32299:	4c 01 f0             	add    %r14,%rax
   3229c:	4c 29 c8             	sub    %r9,%rax
   3229f:	4c 39 f0             	cmp    %r14,%rax
   322a2:	0f 83 42 07 00 00    	jae    329ea <core::str::pattern::StrSearcher::new+0x86a>
   322a8:	48 8d 69 01          	lea    0x1(%rcx),%rbp
   322ac:	41 0f b6 04 04       	movzbl (%r12,%rax,1),%eax
   322b1:	41 38 04 3c          	cmp    %al,(%r12,%rdi,1)
   322b5:	72 99                	jb     32250 <core::str::pattern::StrSearcher::new+0xd0>
   322b7:	75 27                	jne    322e0 <core::str::pattern::StrSearcher::new+0x160>
   322b9:	48 83 c2 01          	add    $0x1,%rdx
   322bd:	48 39 da             	cmp    %rbx,%rdx
   322c0:	48 89 d0             	mov    %rdx,%rax
   322c3:	49 0f 44 c0          	cmove  %r8,%rax
   322c7:	49 0f 45 d0          	cmovne %r8,%rdx
   322cb:	48 89 d5             	mov    %rdx,%rbp
   322ce:	48 01 cd             	add    %rcx,%rbp
   322d1:	48 89 c2             	mov    %rax,%rdx
   322d4:	e9 87 ff ff ff       	jmpq   32260 <core::str::pattern::StrSearcher::new+0xe0>
   322d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   322e0:	bb 01 00 00 00       	mov    $0x1,%ebx
   322e5:	31 d2                	xor    %edx,%edx
   322e7:	49 89 c9             	mov    %rcx,%r9
   322ea:	48 89 e9             	mov    %rbp,%rcx
   322ed:	4c 39 fb             	cmp    %r15,%rbx
   322f0:	0f 85 7c ff ff ff    	jne    32272 <core::str::pattern::StrSearcher::new+0xf2>
   322f6:	41 ba 01 00 00 00    	mov    $0x1,%r10d
   322fc:	45 31 c0             	xor    %r8d,%r8d
   322ff:	31 ed                	xor    %ebp,%ebp
   32301:	b9 01 00 00 00       	mov    $0x1,%ecx
   32306:	31 d2                	xor    %edx,%edx
   32308:	e9 25 00 00 00       	jmpq   32332 <core::str::pattern::StrSearcher::new+0x1b2>
   3230d:	0f 1f 00             	nopl   (%rax)
   32310:	48 8d 1c 29          	lea    (%rcx,%rbp,1),%rbx
   32314:	48 83 c3 01          	add    $0x1,%rbx
   32318:	49 89 da             	mov    %rbx,%r10
   3231b:	49 29 d2             	sub    %rdx,%r10
   3231e:	31 ed                	xor    %ebp,%ebp
   32320:	48 89 d1             	mov    %rdx,%rcx
   32323:	48 89 ca             	mov    %rcx,%rdx
   32326:	48 89 d9             	mov    %rbx,%rcx
   32329:	4d 39 fa             	cmp    %r15,%r10
   3232c:	0f 84 85 00 00 00    	je     323b7 <core::str::pattern::StrSearcher::new+0x237>
   32332:	48 8d 04 29          	lea    (%rcx,%rbp,1),%rax
   32336:	4c 39 f0             	cmp    %r14,%rax
   32339:	73 7c                	jae    323b7 <core::str::pattern::StrSearcher::new+0x237>
   3233b:	48 89 c8             	mov    %rcx,%rax
   3233e:	48 f7 d0             	not    %rax
   32341:	4c 89 f7             	mov    %r14,%rdi
   32344:	48 29 ef             	sub    %rbp,%rdi
   32347:	48 01 c7             	add    %rax,%rdi
   3234a:	4c 39 f7             	cmp    %r14,%rdi
   3234d:	0f 83 8e 06 00 00    	jae    329e1 <core::str::pattern::StrSearcher::new+0x861>
   32353:	48 89 e8             	mov    %rbp,%rax
   32356:	48 f7 d0             	not    %rax
   32359:	4c 01 f0             	add    %r14,%rax
   3235c:	48 29 d0             	sub    %rdx,%rax
   3235f:	4c 39 f0             	cmp    %r14,%rax
   32362:	0f 83 82 06 00 00    	jae    329ea <core::str::pattern::StrSearcher::new+0x86a>
   32368:	48 8d 59 01          	lea    0x1(%rcx),%rbx
   3236c:	41 0f b6 04 04       	movzbl (%r12,%rax,1),%eax
   32371:	41 38 04 3c          	cmp    %al,(%r12,%rdi,1)
   32375:	77 99                	ja     32310 <core::str::pattern::StrSearcher::new+0x190>
   32377:	75 27                	jne    323a0 <core::str::pattern::StrSearcher::new+0x220>
   32379:	48 83 c5 01          	add    $0x1,%rbp
   3237d:	4c 39 d5             	cmp    %r10,%rbp
   32380:	48 89 e8             	mov    %rbp,%rax
   32383:	49 0f 44 c0          	cmove  %r8,%rax
   32387:	49 0f 45 e8          	cmovne %r8,%rbp
   3238b:	48 89 eb             	mov    %rbp,%rbx
   3238e:	48 01 cb             	add    %rcx,%rbx
   32391:	48 89 c5             	mov    %rax,%rbp
   32394:	e9 87 ff ff ff       	jmpq   32320 <core::str::pattern::StrSearcher::new+0x1a0>
   32399:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   323a0:	41 ba 01 00 00 00    	mov    $0x1,%r10d
   323a6:	31 ed                	xor    %ebp,%ebp
   323a8:	48 89 ca             	mov    %rcx,%rdx
   323ab:	48 89 d9             	mov    %rbx,%rcx
   323ae:	4d 39 fa             	cmp    %r15,%r10
   323b1:	0f 85 7b ff ff ff    	jne    32332 <core::str::pattern::StrSearcher::new+0x1b2>
   323b7:	49 39 d1             	cmp    %rdx,%r9
   323ba:	49 0f 47 d1          	cmova  %r9,%rdx
   323be:	4d 39 f7             	cmp    %r14,%r15
   323c1:	0f 87 62 06 00 00    	ja     32a29 <core::str::pattern::StrSearcher::new+0x8a9>
   323c7:	4c 89 f3             	mov    %r14,%rbx
   323ca:	48 29 d3             	sub    %rdx,%rbx
   323cd:	4d 85 ff             	test   %r15,%r15
   323d0:	48 8b 04 24          	mov    (%rsp),%rax
   323d4:	0f 84 66 01 00 00    	je     32540 <core::str::pattern::StrSearcher::new+0x3c0>
   323da:	49 83 ff 04          	cmp    $0x4,%r15
   323de:	0f 83 77 03 00 00    	jae    3275b <core::str::pattern::StrSearcher::new+0x5db>
   323e4:	31 d2                	xor    %edx,%edx
   323e6:	4c 89 e1             	mov    %r12,%rcx
   323e9:	e9 50 05 00 00       	jmpq   3293e <core::str::pattern::StrSearcher::new+0x7be>
   323ee:	48 89 30             	mov    %rsi,(%rax)
   323f1:	48 89 50 08          	mov    %rdx,0x8(%rax)
   323f5:	4c 89 60 10          	mov    %r12,0x10(%rax)
   323f9:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
   323fd:	66 0f 11 40 18       	movupd %xmm0,0x18(%rax)
   32402:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
   32409:	00 
   3240a:	48 89 50 30          	mov    %rdx,0x30(%rax)
   3240e:	66 c7 40 38 01 01    	movw   $0x101,0x38(%rax)
   32414:	e9 7f 05 00 00       	jmpq   32998 <core::str::pattern::StrSearcher::new+0x818>
   32419:	bd 01 00 00 00       	mov    $0x1,%ebp
   3241e:	45 31 c0             	xor    %r8d,%r8d
   32421:	45 31 c9             	xor    %r9d,%r9d
   32424:	41 ba 01 00 00 00    	mov    $0x1,%r10d
   3242a:	31 c9                	xor    %ecx,%ecx
   3242c:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   32432:	e9 25 00 00 00       	jmpq   3245c <core::str::pattern::StrSearcher::new+0x2dc>
   32437:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3243e:	00 00 
   32440:	49 8d 3c 0a          	lea    (%r10,%rcx,1),%rdi
   32444:	48 83 c7 01          	add    $0x1,%rdi
   32448:	49 89 ff             	mov    %rdi,%r15
   3244b:	4d 29 cf             	sub    %r9,%r15
   3244e:	31 c9                	xor    %ecx,%ecx
   32450:	48 8d 2c 0f          	lea    (%rdi,%rcx,1),%rbp
   32454:	49 89 fa             	mov    %rdi,%r10
   32457:	4c 39 f5             	cmp    %r14,%rbp
   3245a:	73 55                	jae    324b1 <core::str::pattern::StrSearcher::new+0x331>
   3245c:	4a 8d 3c 09          	lea    (%rcx,%r9,1),%rdi
   32460:	4c 39 f7             	cmp    %r14,%rdi
   32463:	0f 83 6f 05 00 00    	jae    329d8 <core::str::pattern::StrSearcher::new+0x858>
   32469:	41 0f b6 1c 3c       	movzbl (%r12,%rdi,1),%ebx
   3246e:	41 38 1c 2c          	cmp    %bl,(%r12,%rbp,1)
   32472:	72 cc                	jb     32440 <core::str::pattern::StrSearcher::new+0x2c0>
   32474:	75 2a                	jne    324a0 <core::str::pattern::StrSearcher::new+0x320>
   32476:	48 83 c1 01          	add    $0x1,%rcx
   3247a:	4c 39 f9             	cmp    %r15,%rcx
   3247d:	48 89 cd             	mov    %rcx,%rbp
   32480:	49 0f 44 e8          	cmove  %r8,%rbp
   32484:	49 0f 45 c8          	cmovne %r8,%rcx
   32488:	48 89 cf             	mov    %rcx,%rdi
   3248b:	4c 01 d7             	add    %r10,%rdi
   3248e:	48 89 e9             	mov    %rbp,%rcx
   32491:	e9 ba ff ff ff       	jmpq   32450 <core::str::pattern::StrSearcher::new+0x2d0>
   32496:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3249d:	00 00 00 
   324a0:	49 8d 7a 01          	lea    0x1(%r10),%rdi
   324a4:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   324aa:	31 c9                	xor    %ecx,%ecx
   324ac:	4d 89 d1             	mov    %r10,%r9
   324af:	eb 9f                	jmp    32450 <core::str::pattern::StrSearcher::new+0x2d0>
   324b1:	bb 01 00 00 00       	mov    $0x1,%ebx
   324b6:	45 31 c0             	xor    %r8d,%r8d
   324b9:	45 31 ed             	xor    %r13d,%r13d
   324bc:	bd 01 00 00 00       	mov    $0x1,%ebp
   324c1:	31 f6                	xor    %esi,%esi
   324c3:	b9 01 00 00 00       	mov    $0x1,%ecx
   324c8:	e9 23 00 00 00       	jmpq   324f0 <core::str::pattern::StrSearcher::new+0x370>
   324cd:	0f 1f 00             	nopl   (%rax)
   324d0:	48 8d 3c 2e          	lea    (%rsi,%rbp,1),%rdi
   324d4:	48 83 c7 01          	add    $0x1,%rdi
   324d8:	48 89 f9             	mov    %rdi,%rcx
   324db:	4c 29 e9             	sub    %r13,%rcx
   324de:	31 f6                	xor    %esi,%esi
   324e0:	48 8d 1c 37          	lea    (%rdi,%rsi,1),%rbx
   324e4:	48 89 fd             	mov    %rdi,%rbp
   324e7:	4c 39 f3             	cmp    %r14,%rbx
   324ea:	0f 83 d0 fc ff ff    	jae    321c0 <core::str::pattern::StrSearcher::new+0x40>
   324f0:	4a 8d 3c 2e          	lea    (%rsi,%r13,1),%rdi
   324f4:	4c 39 f7             	cmp    %r14,%rdi
   324f7:	0f 83 db 04 00 00    	jae    329d8 <core::str::pattern::StrSearcher::new+0x858>
   324fd:	41 0f b6 14 3c       	movzbl (%r12,%rdi,1),%edx
   32502:	41 38 14 1c          	cmp    %dl,(%r12,%rbx,1)
   32506:	77 c8                	ja     324d0 <core::str::pattern::StrSearcher::new+0x350>
   32508:	75 26                	jne    32530 <core::str::pattern::StrSearcher::new+0x3b0>
   3250a:	48 83 c6 01          	add    $0x1,%rsi
   3250e:	48 39 ce             	cmp    %rcx,%rsi
   32511:	48 89 f2             	mov    %rsi,%rdx
   32514:	49 0f 44 d0          	cmove  %r8,%rdx
   32518:	49 0f 45 f0          	cmovne %r8,%rsi
   3251c:	48 89 f7             	mov    %rsi,%rdi
   3251f:	48 01 ef             	add    %rbp,%rdi
   32522:	48 89 d6             	mov    %rdx,%rsi
   32525:	e9 b6 ff ff ff       	jmpq   324e0 <core::str::pattern::StrSearcher::new+0x360>
   3252a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   32530:	48 8d 7d 01          	lea    0x1(%rbp),%rdi
   32534:	b9 01 00 00 00       	mov    $0x1,%ecx
   32539:	31 f6                	xor    %esi,%esi
   3253b:	49 89 ed             	mov    %rbp,%r13
   3253e:	eb a0                	jmp    324e0 <core::str::pattern::StrSearcher::new+0x360>
   32540:	31 ed                	xor    %ebp,%ebp
   32542:	4c 89 f1             	mov    %r14,%rcx
   32545:	31 d2                	xor    %edx,%edx
   32547:	45 31 ff             	xor    %r15d,%r15d
   3254a:	e9 04 04 00 00       	jmpq   32953 <core::str::pattern::StrSearcher::new+0x7d3>
   3254f:	4c 89 f5             	mov    %r14,%rbp
   32552:	48 83 e5 fc          	and    $0xfffffffffffffffc,%rbp
   32556:	48 8d 4d fc          	lea    -0x4(%rbp),%rcx
   3255a:	48 89 ca             	mov    %rcx,%rdx
   3255d:	48 c1 ea 02          	shr    $0x2,%rdx
   32561:	48 83 c2 01          	add    $0x1,%rdx
   32565:	48 85 c9             	test   %rcx,%rcx
   32568:	48 8b 04 24          	mov    (%rsp),%rax
   3256c:	0f 84 35 04 00 00    	je     329a7 <core::str::pattern::StrSearcher::new+0x827>
   32572:	48 89 d6             	mov    %rdx,%rsi
   32575:	48 83 e6 fe          	and    $0xfffffffffffffffe,%rsi
   32579:	48 f7 de             	neg    %rsi
   3257c:	66 0f ef d2          	pxor   %xmm2,%xmm2
   32580:	31 c9                	xor    %ecx,%ecx
   32582:	66 44 0f 6f 05 f5 74 	movdqa 0x74f5(%rip),%xmm8        # 39a80 <str.6+0x2760>
   32589:	00 00 
   3258b:	66 0f 6f 25 ad 3a 00 	movdqa 0x3aad(%rip),%xmm4        # 36040 <_fini+0xfbc>
   32592:	00 
   32593:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
   32597:	66 0f 57 c9          	xorpd  %xmm1,%xmm1
   3259b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   325a0:	41 0f b7 3c 0c       	movzwl (%r12,%rcx,1),%edi
   325a5:	66 0f 6e ef          	movd   %edi,%xmm5
   325a9:	41 0f b7 7c 0c 02    	movzwl 0x2(%r12,%rcx,1),%edi
   325af:	66 0f 6e f7          	movd   %edi,%xmm6
   325b3:	66 41 0f db e8       	pand   %xmm8,%xmm5
   325b8:	66 41 0f db f0       	pand   %xmm8,%xmm6
   325bd:	66 0f 60 ea          	punpcklbw %xmm2,%xmm5
   325c1:	66 0f 61 ea          	punpcklwd %xmm2,%xmm5
   325c5:	66 0f 62 ea          	punpckldq %xmm2,%xmm5
   325c9:	66 0f 60 f2          	punpcklbw %xmm2,%xmm6
   325cd:	66 0f 61 f2          	punpcklwd %xmm2,%xmm6
   325d1:	66 0f 62 f2          	punpckldq %xmm2,%xmm6
   325d5:	66 0f 6f fc          	movdqa %xmm4,%xmm7
   325d9:	66 0f f3 fd          	psllq  %xmm5,%xmm7
   325dd:	66 0f 70 dd 4e       	pshufd $0x4e,%xmm5,%xmm3
   325e2:	66 0f 6f ec          	movdqa %xmm4,%xmm5
   325e6:	66 0f f3 eb          	psllq  %xmm3,%xmm5
   325ea:	f2 0f 10 ef          	movsd  %xmm7,%xmm5
   325ee:	66 0f 56 e8          	orpd   %xmm0,%xmm5
   325f2:	66 0f 6f c4          	movdqa %xmm4,%xmm0
   325f6:	66 0f f3 c6          	psllq  %xmm6,%xmm0
   325fa:	66 0f 70 de 4e       	pshufd $0x4e,%xmm6,%xmm3
   325ff:	66 0f 6f f4          	movdqa %xmm4,%xmm6
   32603:	66 0f f3 f3          	psllq  %xmm3,%xmm6
   32607:	f2 0f 10 f0          	movsd  %xmm0,%xmm6
   3260b:	66 0f 56 f1          	orpd   %xmm1,%xmm6
   3260f:	41 0f b7 7c 0c 04    	movzwl 0x4(%r12,%rcx,1),%edi
   32615:	66 0f 6e c7          	movd   %edi,%xmm0
   32619:	41 0f b7 7c 0c 06    	movzwl 0x6(%r12,%rcx,1),%edi
   3261f:	66 0f 6e cf          	movd   %edi,%xmm1
   32623:	66 41 0f db c0       	pand   %xmm8,%xmm0
   32628:	66 41 0f db c8       	pand   %xmm8,%xmm1
   3262d:	66 0f 60 c2          	punpcklbw %xmm2,%xmm0
   32631:	66 0f 61 c2          	punpcklwd %xmm2,%xmm0
   32635:	66 0f 62 c2          	punpckldq %xmm2,%xmm0
   32639:	66 0f 60 ca          	punpcklbw %xmm2,%xmm1
   3263d:	66 0f 6f dc          	movdqa %xmm4,%xmm3
   32641:	66 0f f3 d8          	psllq  %xmm0,%xmm3
   32645:	66 0f 61 ca          	punpcklwd %xmm2,%xmm1
   32649:	66 0f 70 f8 4e       	pshufd $0x4e,%xmm0,%xmm7
   3264e:	66 0f 6f c4          	movdqa %xmm4,%xmm0
   32652:	66 0f f3 c7          	psllq  %xmm7,%xmm0
   32656:	66 0f 62 ca          	punpckldq %xmm2,%xmm1
   3265a:	f2 0f 10 c3          	movsd  %xmm3,%xmm0
   3265e:	66 0f 6f dc          	movdqa %xmm4,%xmm3
   32662:	66 0f f3 d9          	psllq  %xmm1,%xmm3
   32666:	66 0f 56 c5          	orpd   %xmm5,%xmm0
   3266a:	66 0f 70 e9 4e       	pshufd $0x4e,%xmm1,%xmm5
   3266f:	66 0f 6f cc          	movdqa %xmm4,%xmm1
   32673:	66 0f f3 cd          	psllq  %xmm5,%xmm1
   32677:	f2 0f 10 cb          	movsd  %xmm3,%xmm1
   3267b:	66 0f 56 ce          	orpd   %xmm6,%xmm1
   3267f:	48 83 c1 08          	add    $0x8,%rcx
   32683:	48 83 c6 02          	add    $0x2,%rsi
   32687:	0f 85 13 ff ff ff    	jne    325a0 <core::str::pattern::StrSearcher::new+0x420>
   3268d:	f6 c2 01             	test   $0x1,%dl
   32690:	74 7d                	je     3270f <core::str::pattern::StrSearcher::new+0x58f>
   32692:	41 0f b7 54 0c 02    	movzwl 0x2(%r12,%rcx,1),%edx
   32698:	66 0f 6e d2          	movd   %edx,%xmm2
   3269c:	66 0f 6f 1d dc 73 00 	movdqa 0x73dc(%rip),%xmm3        # 39a80 <str.6+0x2760>
   326a3:	00 
   326a4:	66 0f db d3          	pand   %xmm3,%xmm2
   326a8:	66 0f ef e4          	pxor   %xmm4,%xmm4
   326ac:	66 0f 60 d4          	punpcklbw %xmm4,%xmm2
   326b0:	66 0f 61 d4          	punpcklwd %xmm4,%xmm2
   326b4:	66 0f 62 d4          	punpckldq %xmm4,%xmm2
   326b8:	66 0f 6f 2d 80 39 00 	movdqa 0x3980(%rip),%xmm5        # 36040 <_fini+0xfbc>
   326bf:	00 
   326c0:	66 0f 6f f5          	movdqa %xmm5,%xmm6
   326c4:	66 0f f3 f2          	psllq  %xmm2,%xmm6
   326c8:	66 0f 70 d2 4e       	pshufd $0x4e,%xmm2,%xmm2
   326cd:	66 0f 6f fd          	movdqa %xmm5,%xmm7
   326d1:	66 0f f3 fa          	psllq  %xmm2,%xmm7
   326d5:	f2 0f 10 fe          	movsd  %xmm6,%xmm7
   326d9:	66 0f 56 cf          	orpd   %xmm7,%xmm1
   326dd:	41 0f b7 0c 0c       	movzwl (%r12,%rcx,1),%ecx
   326e2:	66 0f 6e d1          	movd   %ecx,%xmm2
   326e6:	66 0f db d3          	pand   %xmm3,%xmm2
   326ea:	66 0f 60 d4          	punpcklbw %xmm4,%xmm2
   326ee:	66 0f 61 d4          	punpcklwd %xmm4,%xmm2
   326f2:	66 0f 62 d4          	punpckldq %xmm4,%xmm2
   326f6:	66 0f 6f dd          	movdqa %xmm5,%xmm3
   326fa:	66 0f f3 da          	psllq  %xmm2,%xmm3
   326fe:	66 0f 70 d2 4e       	pshufd $0x4e,%xmm2,%xmm2
   32703:	66 0f f3 ea          	psllq  %xmm2,%xmm5
   32707:	f2 0f 10 eb          	movsd  %xmm3,%xmm5
   3270b:	66 0f 56 c5          	orpd   %xmm5,%xmm0
   3270f:	66 0f 56 c1          	orpd   %xmm1,%xmm0
   32713:	66 0f 70 c8 4e       	pshufd $0x4e,%xmm0,%xmm1
   32718:	66 0f eb c8          	por    %xmm0,%xmm1
   3271c:	66 48 0f 7e ca       	movq   %xmm1,%rdx
   32721:	4c 39 f5             	cmp    %r14,%rbp
   32724:	74 1b                	je     32741 <core::str::pattern::StrSearcher::new+0x5c1>
   32726:	4c 01 e5             	add    %r12,%rbp
   32729:	4b 8d 0c 34          	lea    (%r12,%r14,1),%rcx
   3272d:	0f 1f 00             	nopl   (%rax)
   32730:	0f b6 75 00          	movzbl 0x0(%rbp),%esi
   32734:	48 83 c5 01          	add    $0x1,%rbp
   32738:	48 0f ab f2          	bts    %rsi,%rdx
   3273c:	48 39 e9             	cmp    %rbp,%rcx
   3273f:	75 ef                	jne    32730 <core::str::pattern::StrSearcher::new+0x5b0>
   32741:	49 83 c7 01          	add    $0x1,%r15
   32745:	48 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%rbp
   3274c:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
   32753:	4c 89 eb             	mov    %r13,%rbx
   32756:	e9 f8 01 00 00       	jmpq   32953 <core::str::pattern::StrSearcher::new+0x7d3>
   3275b:	4c 89 f9             	mov    %r15,%rcx
   3275e:	48 83 e1 fc          	and    $0xfffffffffffffffc,%rcx
   32762:	48 8d 51 fc          	lea    -0x4(%rcx),%rdx
   32766:	49 89 d0             	mov    %rdx,%r8
   32769:	49 c1 e8 02          	shr    $0x2,%r8
   3276d:	49 83 c0 01          	add    $0x1,%r8
   32771:	48 85 d2             	test   %rdx,%rdx
   32774:	0f 84 45 02 00 00    	je     329bf <core::str::pattern::StrSearcher::new+0x83f>
   3277a:	4c 89 c7             	mov    %r8,%rdi
   3277d:	48 83 e7 fe          	and    $0xfffffffffffffffe,%rdi
   32781:	48 f7 df             	neg    %rdi
   32784:	66 0f ef d2          	pxor   %xmm2,%xmm2
   32788:	31 d2                	xor    %edx,%edx
   3278a:	66 44 0f 6f 05 ed 72 	movdqa 0x72ed(%rip),%xmm8        # 39a80 <str.6+0x2760>
   32791:	00 00 
   32793:	66 0f 6f 25 a5 38 00 	movdqa 0x38a5(%rip),%xmm4        # 36040 <_fini+0xfbc>
   3279a:	00 
   3279b:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
   3279f:	66 0f 57 c9          	xorpd  %xmm1,%xmm1
   327a3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   327aa:	00 00 00 
   327ad:	0f 1f 00             	nopl   (%rax)
   327b0:	41 0f b7 2c 14       	movzwl (%r12,%rdx,1),%ebp
   327b5:	66 0f 6e ed          	movd   %ebp,%xmm5
   327b9:	41 0f b7 6c 14 02    	movzwl 0x2(%r12,%rdx,1),%ebp
   327bf:	66 0f 6e f5          	movd   %ebp,%xmm6
   327c3:	66 41 0f db e8       	pand   %xmm8,%xmm5
   327c8:	66 41 0f db f0       	pand   %xmm8,%xmm6
   327cd:	66 0f 60 ea          	punpcklbw %xmm2,%xmm5
   327d1:	66 0f 61 ea          	punpcklwd %xmm2,%xmm5
   327d5:	66 0f 62 ea          	punpckldq %xmm2,%xmm5
   327d9:	66 0f 60 f2          	punpcklbw %xmm2,%xmm6
   327dd:	66 0f 61 f2          	punpcklwd %xmm2,%xmm6
   327e1:	66 0f 62 f2          	punpckldq %xmm2,%xmm6
   327e5:	66 0f 6f fc          	movdqa %xmm4,%xmm7
   327e9:	66 0f f3 fd          	psllq  %xmm5,%xmm7
   327ed:	66 0f 70 dd 4e       	pshufd $0x4e,%xmm5,%xmm3
   327f2:	66 0f 6f ec          	movdqa %xmm4,%xmm5
   327f6:	66 0f f3 eb          	psllq  %xmm3,%xmm5
   327fa:	f2 0f 10 ef          	movsd  %xmm7,%xmm5
   327fe:	66 0f 56 e8          	orpd   %xmm0,%xmm5
   32802:	66 0f 6f c4          	movdqa %xmm4,%xmm0
   32806:	66 0f f3 c6          	psllq  %xmm6,%xmm0
   3280a:	66 0f 70 de 4e       	pshufd $0x4e,%xmm6,%xmm3
   3280f:	66 0f 6f f4          	movdqa %xmm4,%xmm6
   32813:	66 0f f3 f3          	psllq  %xmm3,%xmm6
   32817:	f2 0f 10 f0          	movsd  %xmm0,%xmm6
   3281b:	66 0f 56 f1          	orpd   %xmm1,%xmm6
   3281f:	41 0f b7 6c 14 04    	movzwl 0x4(%r12,%rdx,1),%ebp
   32825:	66 0f 6e c5          	movd   %ebp,%xmm0
   32829:	41 0f b7 6c 14 06    	movzwl 0x6(%r12,%rdx,1),%ebp
   3282f:	66 0f 6e cd          	movd   %ebp,%xmm1
   32833:	66 41 0f db c0       	pand   %xmm8,%xmm0
   32838:	66 41 0f db c8       	pand   %xmm8,%xmm1
   3283d:	66 0f 60 c2          	punpcklbw %xmm2,%xmm0
   32841:	66 0f 61 c2          	punpcklwd %xmm2,%xmm0
   32845:	66 0f 62 c2          	punpckldq %xmm2,%xmm0
   32849:	66 0f 60 ca          	punpcklbw %xmm2,%xmm1
   3284d:	66 0f 6f dc          	movdqa %xmm4,%xmm3
   32851:	66 0f f3 d8          	psllq  %xmm0,%xmm3
   32855:	66 0f 61 ca          	punpcklwd %xmm2,%xmm1
   32859:	66 0f 70 f8 4e       	pshufd $0x4e,%xmm0,%xmm7
   3285e:	66 0f 6f c4          	movdqa %xmm4,%xmm0
   32862:	66 0f f3 c7          	psllq  %xmm7,%xmm0
   32866:	66 0f 62 ca          	punpckldq %xmm2,%xmm1
   3286a:	f2 0f 10 c3          	movsd  %xmm3,%xmm0
   3286e:	66 0f 6f dc          	movdqa %xmm4,%xmm3
   32872:	66 0f f3 d9          	psllq  %xmm1,%xmm3
   32876:	66 0f 56 c5          	orpd   %xmm5,%xmm0
   3287a:	66 0f 70 e9 4e       	pshufd $0x4e,%xmm1,%xmm5
   3287f:	66 0f 6f cc          	movdqa %xmm4,%xmm1
   32883:	66 0f f3 cd          	psllq  %xmm5,%xmm1
   32887:	f2 0f 10 cb          	movsd  %xmm3,%xmm1
   3288b:	66 0f 56 ce          	orpd   %xmm6,%xmm1
   3288f:	48 83 c2 08          	add    $0x8,%rdx
   32893:	48 83 c7 02          	add    $0x2,%rdi
   32897:	0f 85 13 ff ff ff    	jne    327b0 <core::str::pattern::StrSearcher::new+0x630>
   3289d:	41 f6 c0 01          	test   $0x1,%r8b
   328a1:	74 7d                	je     32920 <core::str::pattern::StrSearcher::new+0x7a0>
   328a3:	41 0f b7 7c 14 02    	movzwl 0x2(%r12,%rdx,1),%edi
   328a9:	66 0f 6e d7          	movd   %edi,%xmm2
   328ad:	66 0f 6f 1d cb 71 00 	movdqa 0x71cb(%rip),%xmm3        # 39a80 <str.6+0x2760>
   328b4:	00 
   328b5:	66 0f db d3          	pand   %xmm3,%xmm2
   328b9:	66 0f ef e4          	pxor   %xmm4,%xmm4
   328bd:	66 0f 60 d4          	punpcklbw %xmm4,%xmm2
   328c1:	66 0f 61 d4          	punpcklwd %xmm4,%xmm2
   328c5:	66 0f 62 d4          	punpckldq %xmm4,%xmm2
   328c9:	66 0f 6f 2d 6f 37 00 	movdqa 0x376f(%rip),%xmm5        # 36040 <_fini+0xfbc>
   328d0:	00 
   328d1:	66 0f 6f f5          	movdqa %xmm5,%xmm6
   328d5:	66 0f f3 f2          	psllq  %xmm2,%xmm6
   328d9:	66 0f 70 d2 4e       	pshufd $0x4e,%xmm2,%xmm2
   328de:	66 0f 6f fd          	movdqa %xmm5,%xmm7
   328e2:	66 0f f3 fa          	psllq  %xmm2,%xmm7
   328e6:	f2 0f 10 fe          	movsd  %xmm6,%xmm7
   328ea:	66 0f 56 cf          	orpd   %xmm7,%xmm1
   328ee:	41 0f b7 14 14       	movzwl (%r12,%rdx,1),%edx
   328f3:	66 0f 6e d2          	movd   %edx,%xmm2
   328f7:	66 0f db d3          	pand   %xmm3,%xmm2
   328fb:	66 0f 60 d4          	punpcklbw %xmm4,%xmm2
   328ff:	66 0f 61 d4          	punpcklwd %xmm4,%xmm2
   32903:	66 0f 62 d4          	punpckldq %xmm4,%xmm2
   32907:	66 0f 6f dd          	movdqa %xmm5,%xmm3
   3290b:	66 0f f3 da          	psllq  %xmm2,%xmm3
   3290f:	66 0f 70 d2 4e       	pshufd $0x4e,%xmm2,%xmm2
   32914:	66 0f f3 ea          	psllq  %xmm2,%xmm5
   32918:	f2 0f 10 eb          	movsd  %xmm3,%xmm5
   3291c:	66 0f 56 c5          	orpd   %xmm5,%xmm0
   32920:	66 0f 56 c1          	orpd   %xmm1,%xmm0
   32924:	66 0f 70 c8 4e       	pshufd $0x4e,%xmm0,%xmm1
   32929:	66 0f eb c8          	por    %xmm0,%xmm1
   3292d:	66 48 0f 7e ca       	movq   %xmm1,%rdx
   32932:	49 39 cf             	cmp    %rcx,%r15
   32935:	75 04                	jne    3293b <core::str::pattern::StrSearcher::new+0x7bb>
   32937:	31 ed                	xor    %ebp,%ebp
   32939:	eb 15                	jmp    32950 <core::str::pattern::StrSearcher::new+0x7d0>
   3293b:	4c 01 e1             	add    %r12,%rcx
   3293e:	31 ed                	xor    %ebp,%ebp
   32940:	0f b6 39             	movzbl (%rcx),%edi
   32943:	48 83 c1 01          	add    $0x1,%rcx
   32947:	48 0f ab fa          	bts    %rdi,%rdx
   3294b:	48 39 ce             	cmp    %rcx,%rsi
   3294e:	75 f0                	jne    32940 <core::str::pattern::StrSearcher::new+0x7c0>
   32950:	4c 89 f1             	mov    %r14,%rcx
   32953:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   32958:	48 89 38             	mov    %rdi,(%rax)
   3295b:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   32960:	48 89 78 08          	mov    %rdi,0x8(%rax)
   32964:	4c 89 60 10          	mov    %r12,0x10(%rax)
   32968:	4c 89 70 18          	mov    %r14,0x18(%rax)
   3296c:	48 c7 40 20 01 00 00 	movq   $0x1,0x20(%rax)
   32973:	00 
   32974:	4c 89 68 28          	mov    %r13,0x28(%rax)
   32978:	48 89 58 30          	mov    %rbx,0x30(%rax)
   3297c:	4c 89 78 38          	mov    %r15,0x38(%rax)
   32980:	48 89 50 40          	mov    %rdx,0x40(%rax)
   32984:	48 c7 40 48 00 00 00 	movq   $0x0,0x48(%rax)
   3298b:	00 
   3298c:	48 89 78 50          	mov    %rdi,0x50(%rax)
   32990:	48 89 68 58          	mov    %rbp,0x58(%rax)
   32994:	48 89 48 60          	mov    %rcx,0x60(%rax)
   32998:	48 83 c4 18          	add    $0x18,%rsp
   3299c:	5b                   	pop    %rbx
   3299d:	41 5c                	pop    %r12
   3299f:	41 5d                	pop    %r13
   329a1:	41 5e                	pop    %r14
   329a3:	41 5f                	pop    %r15
   329a5:	5d                   	pop    %rbp
   329a6:	c3                   	retq   
   329a7:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
   329ab:	31 c9                	xor    %ecx,%ecx
   329ad:	66 0f 57 c9          	xorpd  %xmm1,%xmm1
   329b1:	f6 c2 01             	test   $0x1,%dl
   329b4:	0f 85 d8 fc ff ff    	jne    32692 <core::str::pattern::StrSearcher::new+0x512>
   329ba:	e9 50 fd ff ff       	jmpq   3270f <core::str::pattern::StrSearcher::new+0x58f>
   329bf:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
   329c3:	31 d2                	xor    %edx,%edx
   329c5:	66 0f 57 c9          	xorpd  %xmm1,%xmm1
   329c9:	41 f6 c0 01          	test   $0x1,%r8b
   329cd:	0f 85 d0 fe ff ff    	jne    328a3 <core::str::pattern::StrSearcher::new+0x723>
   329d3:	e9 48 ff ff ff       	jmpq   32920 <core::str::pattern::StrSearcher::new+0x7a0>
   329d8:	48 8d 15 51 2a 01 00 	lea    0x12a51(%rip),%rdx        # 45430 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1ed8>
   329df:	eb 13                	jmp    329f4 <core::str::pattern::StrSearcher::new+0x874>
   329e1:	48 8d 15 60 2a 01 00 	lea    0x12a60(%rip),%rdx        # 45448 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1ef0>
   329e8:	eb 0a                	jmp    329f4 <core::str::pattern::StrSearcher::new+0x874>
   329ea:	48 8d 15 6f 2a 01 00 	lea    0x12a6f(%rip),%rdx        # 45460 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1f08>
   329f1:	48 89 c7             	mov    %rax,%rdi
   329f4:	4c 89 f6             	mov    %r14,%rsi
   329f7:	ff 15 9b 32 01 00    	callq  *0x1329b(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   329fd:	0f 0b                	ud2    
   329ff:	48 8d 15 e2 29 01 00 	lea    0x129e2(%rip),%rdx        # 453e8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1e90>
   32a06:	4c 89 ef             	mov    %r13,%rdi
   32a09:	eb 28                	jmp    32a33 <core::str::pattern::StrSearcher::new+0x8b3>
   32a0b:	48 8d 15 ee 29 01 00 	lea    0x129ee(%rip),%rdx        # 45400 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1ea8>
   32a12:	4c 89 ff             	mov    %r15,%rdi
   32a15:	ff 15 8d 34 01 00    	callq  *0x1348d(%rip)        # 45ea8 <_GLOBAL_OFFSET_TABLE_+0x518>
   32a1b:	0f 0b                	ud2    
   32a1d:	48 8d 15 dc 29 01 00 	lea    0x129dc(%rip),%rdx        # 45400 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1ea8>
   32a24:	48 89 f7             	mov    %rsi,%rdi
   32a27:	eb 0a                	jmp    32a33 <core::str::pattern::StrSearcher::new+0x8b3>
   32a29:	48 8d 15 e8 29 01 00 	lea    0x129e8(%rip),%rdx        # 45418 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1ec0>
   32a30:	4c 89 ff             	mov    %r15,%rdi
   32a33:	4c 89 f6             	mov    %r14,%rsi
   32a36:	ff 15 f4 2f 01 00    	callq  *0x12ff4(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   32a3c:	0f 0b                	ud2    
   32a3e:	66 90                	xchg   %ax,%ax

0000000000032a40 <core::str::lossy::Utf8Lossy::from_bytes>:
   32a40:	48 89 f2             	mov    %rsi,%rdx
   32a43:	48 89 f8             	mov    %rdi,%rax
   32a46:	c3                   	retq   
   32a47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   32a4e:	00 00 

0000000000032a50 <core::str::lossy::Utf8Lossy::chunks>:
   32a50:	48 89 f2             	mov    %rsi,%rdx
   32a53:	48 89 f8             	mov    %rdi,%rax
   32a56:	c3                   	retq   
   32a57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   32a5e:	00 00 

0000000000032a60 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next>:
   32a60:	55                   	push   %rbp
   32a61:	41 57                	push   %r15
   32a63:	41 56                	push   %r14
   32a65:	53                   	push   %rbx
   32a66:	50                   	push   %rax
   32a67:	49 89 f0             	mov    %rsi,%r8
   32a6a:	48 89 f8             	mov    %rdi,%rax
   32a6d:	48 8b 76 08          	mov    0x8(%rsi),%rsi
   32a71:	48 85 f6             	test   %rsi,%rsi
   32a74:	0f 84 0b 02 00 00    	je     32c85 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x225>
   32a7a:	4d 8b 18             	mov    (%r8),%r11
   32a7d:	31 ff                	xor    %edi,%edi
   32a7f:	4c 8d 0d 73 76 00 00 	lea    0x7673(%rip),%r9        # 3a0f9 <core::str::validations::UTF8_CHAR_WIDTH>
   32a86:	4c 8d 15 a4 73 00 00 	lea    0x73a4(%rip),%r10        # 39e31 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x2e1>
   32a8d:	eb 13                	jmp    32aa2 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x42>
   32a8f:	48 83 c7 04          	add    $0x4,%rdi
   32a93:	48 89 f9             	mov    %rdi,%rcx
   32a96:	48 89 cf             	mov    %rcx,%rdi
   32a99:	48 39 f1             	cmp    %rsi,%rcx
   32a9c:	0f 83 ef 01 00 00    	jae    32c91 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x231>
   32aa2:	41 0f b6 14 3b       	movzbl (%r11,%rdi,1),%edx
   32aa7:	48 8d 4f 01          	lea    0x1(%rdi),%rcx
   32aab:	84 d2                	test   %dl,%dl
   32aad:	79 e7                	jns    32a96 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x36>
   32aaf:	42 0f b6 1c 0a       	movzbl (%rdx,%r9,1),%ebx
   32ab4:	80 fb 02             	cmp    $0x2,%bl
   32ab7:	0f 84 8a 00 00 00    	je     32b47 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0xe7>
   32abd:	80 fb 03             	cmp    $0x3,%bl
   32ac0:	74 49                	je     32b0b <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0xab>
   32ac2:	80 fb 04             	cmp    $0x4,%bl
   32ac5:	0f 85 f0 01 00 00    	jne    32cbb <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x25b>
   32acb:	4d 8d 34 0b          	lea    (%r11,%rcx,1),%r14
   32acf:	49 89 f7             	mov    %rsi,%r15
   32ad2:	49 29 cf             	sub    %rcx,%r15
   32ad5:	bb 00 00 00 00       	mov    $0x0,%ebx
   32ada:	49 0f 47 de          	cmova  %r14,%rbx
   32ade:	48 85 db             	test   %rbx,%rbx
   32ae1:	49 0f 44 da          	cmove  %r10,%rbx
   32ae5:	0f b6 1b             	movzbl (%rbx),%ebx
   32ae8:	80 fa f4             	cmp    $0xf4,%dl
   32aeb:	0f 84 88 00 00 00    	je     32b79 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x119>
   32af1:	80 fa f0             	cmp    $0xf0,%dl
   32af4:	0f 85 a7 00 00 00    	jne    32ba1 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x141>
   32afa:	80 c3 70             	add    $0x70,%bl
   32afd:	80 fb 30             	cmp    $0x30,%bl
   32b00:	0f 82 b8 00 00 00    	jb     32bbe <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x15e>
   32b06:	e9 05 02 00 00       	jmpq   32d10 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x2b0>
   32b0b:	4d 8d 34 0b          	lea    (%r11,%rcx,1),%r14
   32b0f:	49 89 f7             	mov    %rsi,%r15
   32b12:	49 29 cf             	sub    %rcx,%r15
   32b15:	bb 00 00 00 00       	mov    $0x0,%ebx
   32b1a:	49 0f 47 de          	cmova  %r14,%rbx
   32b1e:	48 85 db             	test   %rbx,%rbx
   32b21:	49 0f 44 da          	cmove  %r10,%rbx
   32b25:	0f b6 1b             	movzbl (%rbx),%ebx
   32b28:	80 fa ed             	cmp    $0xed,%dl
   32b2b:	74 5e                	je     32b8b <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x12b>
   32b2d:	80 fa e0             	cmp    $0xe0,%dl
   32b30:	0f 85 e3 00 00 00    	jne    32c19 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x1b9>
   32b36:	80 e3 e0             	and    $0xe0,%bl
   32b39:	80 fb a0             	cmp    $0xa0,%bl
   32b3c:	0f 84 0f 01 00 00    	je     32c51 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x1f1>
   32b42:	e9 e4 01 00 00       	jmpq   32d2b <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x2cb>
   32b47:	4d 8d 34 0b          	lea    (%r11,%rcx,1),%r14
   32b4b:	48 89 f3             	mov    %rsi,%rbx
   32b4e:	48 29 cb             	sub    %rcx,%rbx
   32b51:	ba 00 00 00 00       	mov    $0x0,%edx
   32b56:	49 0f 47 d6          	cmova  %r14,%rdx
   32b5a:	48 85 d2             	test   %rdx,%rdx
   32b5d:	49 0f 44 d2          	cmove  %r10,%rdx
   32b61:	0f b6 12             	movzbl (%rdx),%edx
   32b64:	80 e2 c0             	and    $0xc0,%dl
   32b67:	80 fa 80             	cmp    $0x80,%dl
   32b6a:	0f 85 6e 01 00 00    	jne    32cde <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x27e>
   32b70:	48 83 c7 02          	add    $0x2,%rdi
   32b74:	e9 1a ff ff ff       	jmpq   32a93 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x33>
   32b79:	84 db                	test   %bl,%bl
   32b7b:	0f 89 8f 01 00 00    	jns    32d10 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x2b0>
   32b81:	80 fb 90             	cmp    $0x90,%bl
   32b84:	72 38                	jb     32bbe <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x15e>
   32b86:	e9 85 01 00 00       	jmpq   32d10 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x2b0>
   32b8b:	84 db                	test   %bl,%bl
   32b8d:	0f 89 98 01 00 00    	jns    32d2b <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x2cb>
   32b93:	80 fb a0             	cmp    $0xa0,%bl
   32b96:	0f 82 b5 00 00 00    	jb     32c51 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x1f1>
   32b9c:	e9 8a 01 00 00       	jmpq   32d2b <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x2cb>
   32ba1:	80 fb bf             	cmp    $0xbf,%bl
   32ba4:	0f 87 66 01 00 00    	ja     32d10 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x2b0>
   32baa:	80 c2 0f             	add    $0xf,%dl
   32bad:	80 fa 02             	cmp    $0x2,%dl
   32bb0:	0f 87 5a 01 00 00    	ja     32d10 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x2b0>
   32bb6:	84 db                	test   %bl,%bl
   32bb8:	0f 89 52 01 00 00    	jns    32d10 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x2b0>
   32bbe:	48 8d 4f 02          	lea    0x2(%rdi),%rcx
   32bc2:	48 39 ce             	cmp    %rcx,%rsi
   32bc5:	49 8d 54 3b 02       	lea    0x2(%r11,%rdi,1),%rdx
   32bca:	bb 00 00 00 00       	mov    $0x0,%ebx
   32bcf:	48 0f 47 da          	cmova  %rdx,%rbx
   32bd3:	48 85 db             	test   %rbx,%rbx
   32bd6:	49 0f 44 da          	cmove  %r10,%rbx
   32bda:	0f b6 1b             	movzbl (%rbx),%ebx
   32bdd:	80 e3 c0             	and    $0xc0,%bl
   32be0:	80 fb 80             	cmp    $0x80,%bl
   32be3:	0f 85 9b 01 00 00    	jne    32d84 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x324>
   32be9:	48 8d 4f 03          	lea    0x3(%rdi),%rcx
   32bed:	48 39 ce             	cmp    %rcx,%rsi
   32bf0:	49 8d 54 3b 03       	lea    0x3(%r11,%rdi,1),%rdx
   32bf5:	bb 00 00 00 00       	mov    $0x0,%ebx
   32bfa:	48 0f 47 da          	cmova  %rdx,%rbx
   32bfe:	48 85 db             	test   %rbx,%rbx
   32c01:	49 0f 44 da          	cmove  %r10,%rbx
   32c05:	0f b6 1b             	movzbl (%rbx),%ebx
   32c08:	80 e3 c0             	and    $0xc0,%bl
   32c0b:	80 fb 80             	cmp    $0x80,%bl
   32c0e:	0f 84 7b fe ff ff    	je     32a8f <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x2f>
   32c14:	e9 a9 01 00 00       	jmpq   32dc2 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x362>
   32c19:	8d 6a 1f             	lea    0x1f(%rdx),%ebp
   32c1c:	40 80 fd 0b          	cmp    $0xb,%bpl
   32c20:	77 12                	ja     32c34 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x1d4>
   32c22:	84 db                	test   %bl,%bl
   32c24:	0f 89 01 01 00 00    	jns    32d2b <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x2cb>
   32c2a:	80 fb c0             	cmp    $0xc0,%bl
   32c2d:	72 22                	jb     32c51 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x1f1>
   32c2f:	e9 f7 00 00 00       	jmpq   32d2b <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x2cb>
   32c34:	80 fb bf             	cmp    $0xbf,%bl
   32c37:	0f 87 ee 00 00 00    	ja     32d2b <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x2cb>
   32c3d:	80 e2 fe             	and    $0xfe,%dl
   32c40:	80 fa ee             	cmp    $0xee,%dl
   32c43:	0f 85 e2 00 00 00    	jne    32d2b <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x2cb>
   32c49:	84 db                	test   %bl,%bl
   32c4b:	0f 89 da 00 00 00    	jns    32d2b <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x2cb>
   32c51:	48 8d 4f 02          	lea    0x2(%rdi),%rcx
   32c55:	48 39 ce             	cmp    %rcx,%rsi
   32c58:	49 8d 54 3b 02       	lea    0x2(%r11,%rdi,1),%rdx
   32c5d:	bb 00 00 00 00       	mov    $0x0,%ebx
   32c62:	48 0f 47 da          	cmova  %rdx,%rbx
   32c66:	48 85 db             	test   %rbx,%rbx
   32c69:	49 0f 44 da          	cmove  %r10,%rbx
   32c6d:	0f b6 1b             	movzbl (%rbx),%ebx
   32c70:	80 e3 c0             	and    $0xc0,%bl
   32c73:	80 fb 80             	cmp    $0x80,%bl
   32c76:	0f 85 e1 00 00 00    	jne    32d5d <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x2fd>
   32c7c:	48 83 c7 03          	add    $0x3,%rdi
   32c80:	e9 0e fe ff ff       	jmpq   32a93 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x33>
   32c85:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   32c8c:	e9 6d 01 00 00       	jmpq   32dfe <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x39e>
   32c91:	48 8d 0d 98 71 00 00 	lea    0x7198(%rip),%rcx        # 39e30 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x2e0>
   32c98:	49 89 08             	mov    %rcx,(%r8)
   32c9b:	49 c7 40 08 00 00 00 	movq   $0x0,0x8(%r8)
   32ca2:	00 
   32ca3:	4c 89 18             	mov    %r11,(%rax)
   32ca6:	48 89 70 08          	mov    %rsi,0x8(%rax)
   32caa:	48 89 48 10          	mov    %rcx,0x10(%rax)
   32cae:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
   32cb5:	00 
   32cb6:	e9 43 01 00 00       	jmpq   32dfe <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x39e>
   32cbb:	49 8d 14 3b          	lea    (%r11,%rdi,1),%rdx
   32cbf:	48 39 fe             	cmp    %rdi,%rsi
   32cc2:	0f 82 41 01 00 00    	jb     32e09 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x3a9>
   32cc8:	0f 86 4a 01 00 00    	jbe    32e18 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x3b8>
   32cce:	49 8d 1c 0b          	lea    (%r11,%rcx,1),%rbx
   32cd2:	48 29 ce             	sub    %rcx,%rsi
   32cd5:	49 89 18             	mov    %rbx,(%r8)
   32cd8:	49 89 70 08          	mov    %rsi,0x8(%r8)
   32cdc:	eb 67                	jmp    32d45 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x2e5>
   32cde:	4d 8d 0c 3b          	lea    (%r11,%rdi,1),%r9
   32ce2:	48 39 fe             	cmp    %rdi,%rsi
   32ce5:	0f 82 39 01 00 00    	jb     32e24 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x3c4>
   32ceb:	0f 86 42 01 00 00    	jbe    32e33 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x3d3>
   32cf1:	4d 89 30             	mov    %r14,(%r8)
   32cf4:	49 89 58 08          	mov    %rbx,0x8(%r8)
   32cf8:	4c 89 18             	mov    %r11,(%rax)
   32cfb:	48 89 78 08          	mov    %rdi,0x8(%rax)
   32cff:	4c 89 48 10          	mov    %r9,0x10(%rax)
   32d03:	48 c7 40 18 01 00 00 	movq   $0x1,0x18(%rax)
   32d0a:	00 
   32d0b:	e9 ee 00 00 00       	jmpq   32dfe <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x39e>
   32d10:	49 8d 14 3b          	lea    (%r11,%rdi,1),%rdx
   32d14:	48 39 fe             	cmp    %rdi,%rsi
   32d17:	0f 82 22 01 00 00    	jb     32e3f <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x3df>
   32d1d:	77 1f                	ja     32d3e <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x2de>
   32d1f:	48 8d 15 9a 27 01 00 	lea    0x1279a(%rip),%rdx        # 454c0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1f68>
   32d26:	e9 9c 01 00 00       	jmpq   32ec7 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x467>
   32d2b:	49 8d 14 3b          	lea    (%r11,%rdi,1),%rdx
   32d2f:	48 39 fe             	cmp    %rdi,%rsi
   32d32:	0f 82 16 01 00 00    	jb     32e4e <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x3ee>
   32d38:	0f 86 1f 01 00 00    	jbe    32e5d <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x3fd>
   32d3e:	4d 89 30             	mov    %r14,(%r8)
   32d41:	4d 89 78 08          	mov    %r15,0x8(%r8)
   32d45:	4c 89 18             	mov    %r11,(%rax)
   32d48:	48 89 78 08          	mov    %rdi,0x8(%rax)
   32d4c:	48 89 50 10          	mov    %rdx,0x10(%rax)
   32d50:	48 c7 40 18 01 00 00 	movq   $0x1,0x18(%rax)
   32d57:	00 
   32d58:	e9 a1 00 00 00       	jmpq   32dfe <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x39e>
   32d5d:	48 39 fe             	cmp    %rdi,%rsi
   32d60:	0f 82 00 01 00 00    	jb     32e66 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x406>
   32d66:	48 83 ff fd          	cmp    $0xfffffffffffffffd,%rdi
   32d6a:	0f 87 05 01 00 00    	ja     32e75 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x415>
   32d70:	48 89 f3             	mov    %rsi,%rbx
   32d73:	48 29 cb             	sub    %rcx,%rbx
   32d76:	73 2b                	jae    32da3 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x343>
   32d78:	48 8d 15 59 27 01 00 	lea    0x12759(%rip),%rdx        # 454d8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1f80>
   32d7f:	e9 43 01 00 00       	jmpq   32ec7 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x467>
   32d84:	48 39 fe             	cmp    %rdi,%rsi
   32d87:	0f 82 f1 00 00 00    	jb     32e7e <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x41e>
   32d8d:	48 83 ff fd          	cmp    $0xfffffffffffffffd,%rdi
   32d91:	0f 87 f6 00 00 00    	ja     32e8d <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x42d>
   32d97:	48 89 f3             	mov    %rsi,%rbx
   32d9a:	48 29 cb             	sub    %rcx,%rbx
   32d9d:	0f 82 f3 00 00 00    	jb     32e96 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x436>
   32da3:	49 89 10             	mov    %rdx,(%r8)
   32da6:	49 89 58 08          	mov    %rbx,0x8(%r8)
   32daa:	4c 89 18             	mov    %r11,(%rax)
   32dad:	49 01 fb             	add    %rdi,%r11
   32db0:	48 89 78 08          	mov    %rdi,0x8(%rax)
   32db4:	4c 89 58 10          	mov    %r11,0x10(%rax)
   32db8:	48 c7 40 18 02 00 00 	movq   $0x2,0x18(%rax)
   32dbf:	00 
   32dc0:	eb 3c                	jmp    32dfe <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x39e>
   32dc2:	48 39 fe             	cmp    %rdi,%rsi
   32dc5:	0f 82 d4 00 00 00    	jb     32e9f <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x43f>
   32dcb:	48 83 ff fc          	cmp    $0xfffffffffffffffc,%rdi
   32dcf:	0f 87 d9 00 00 00    	ja     32eae <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x44e>
   32dd5:	48 89 f3             	mov    %rsi,%rbx
   32dd8:	48 29 cb             	sub    %rcx,%rbx
   32ddb:	0f 82 df 00 00 00    	jb     32ec0 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x460>
   32de1:	49 89 10             	mov    %rdx,(%r8)
   32de4:	49 89 58 08          	mov    %rbx,0x8(%r8)
   32de8:	4c 89 18             	mov    %r11,(%rax)
   32deb:	49 01 fb             	add    %rdi,%r11
   32dee:	48 89 78 08          	mov    %rdi,0x8(%rax)
   32df2:	4c 89 58 10          	mov    %r11,0x10(%rax)
   32df6:	48 c7 40 18 03 00 00 	movq   $0x3,0x18(%rax)
   32dfd:	00 
   32dfe:	48 83 c4 08          	add    $0x8,%rsp
   32e02:	5b                   	pop    %rbx
   32e03:	41 5e                	pop    %r14
   32e05:	41 5f                	pop    %r15
   32e07:	5d                   	pop    %rbp
   32e08:	c3                   	retq   
   32e09:	48 8d 15 68 26 01 00 	lea    0x12668(%rip),%rdx        # 45478 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1f20>
   32e10:	ff 15 1a 2c 01 00    	callq  *0x12c1a(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   32e16:	0f 0b                	ud2    
   32e18:	48 8d 15 59 26 01 00 	lea    0x12659(%rip),%rdx        # 45478 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1f20>
   32e1f:	e9 a3 00 00 00       	jmpq   32ec7 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x467>
   32e24:	48 8d 15 dd 26 01 00 	lea    0x126dd(%rip),%rdx        # 45508 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1fb0>
   32e2b:	ff 15 ff 2b 01 00    	callq  *0x12bff(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   32e31:	0f 0b                	ud2    
   32e33:	48 8d 15 ce 26 01 00 	lea    0x126ce(%rip),%rdx        # 45508 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1fb0>
   32e3a:	e9 88 00 00 00       	jmpq   32ec7 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x467>
   32e3f:	48 8d 15 7a 26 01 00 	lea    0x1267a(%rip),%rdx        # 454c0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1f68>
   32e46:	ff 15 e4 2b 01 00    	callq  *0x12be4(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   32e4c:	0f 0b                	ud2    
   32e4e:	48 8d 15 9b 26 01 00 	lea    0x1269b(%rip),%rdx        # 454f0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1f98>
   32e55:	ff 15 d5 2b 01 00    	callq  *0x12bd5(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   32e5b:	0f 0b                	ud2    
   32e5d:	48 8d 15 8c 26 01 00 	lea    0x1268c(%rip),%rdx        # 454f0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1f98>
   32e64:	eb 61                	jmp    32ec7 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x467>
   32e66:	48 8d 15 6b 26 01 00 	lea    0x1266b(%rip),%rdx        # 454d8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1f80>
   32e6d:	ff 15 bd 2b 01 00    	callq  *0x12bbd(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   32e73:	0f 0b                	ud2    
   32e75:	48 8d 15 5c 26 01 00 	lea    0x1265c(%rip),%rdx        # 454d8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1f80>
   32e7c:	eb 37                	jmp    32eb5 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x455>
   32e7e:	48 8d 15 0b 26 01 00 	lea    0x1260b(%rip),%rdx        # 45490 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1f38>
   32e85:	ff 15 a5 2b 01 00    	callq  *0x12ba5(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   32e8b:	0f 0b                	ud2    
   32e8d:	48 8d 15 fc 25 01 00 	lea    0x125fc(%rip),%rdx        # 45490 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1f38>
   32e94:	eb 1f                	jmp    32eb5 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x455>
   32e96:	48 8d 15 f3 25 01 00 	lea    0x125f3(%rip),%rdx        # 45490 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1f38>
   32e9d:	eb 28                	jmp    32ec7 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next+0x467>
   32e9f:	48 8d 15 02 26 01 00 	lea    0x12602(%rip),%rdx        # 454a8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1f50>
   32ea6:	ff 15 84 2b 01 00    	callq  *0x12b84(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   32eac:	0f 0b                	ud2    
   32eae:	48 8d 15 f3 25 01 00 	lea    0x125f3(%rip),%rdx        # 454a8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1f50>
   32eb5:	48 89 ce             	mov    %rcx,%rsi
   32eb8:	ff 15 ea 2f 01 00    	callq  *0x12fea(%rip)        # 45ea8 <_GLOBAL_OFFSET_TABLE_+0x518>
   32ebe:	0f 0b                	ud2    
   32ec0:	48 8d 15 e1 25 01 00 	lea    0x125e1(%rip),%rdx        # 454a8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1f50>
   32ec7:	48 89 cf             	mov    %rcx,%rdi
   32eca:	ff 15 60 2b 01 00    	callq  *0x12b60(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   32ed0:	0f 0b                	ud2    
   32ed2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   32ed9:	00 00 00 
   32edc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000032ee0 <<core::str::lossy::Utf8Lossy as core::fmt::Display>::fmt>:
   32ee0:	55                   	push   %rbp
   32ee1:	41 57                	push   %r15
   32ee3:	41 56                	push   %r14
   32ee5:	41 55                	push   %r13
   32ee7:	41 54                	push   %r12
   32ee9:	53                   	push   %rbx
   32eea:	48 83 ec 38          	sub    $0x38,%rsp
   32eee:	48 89 d3             	mov    %rdx,%rbx
   32ef1:	48 85 f6             	test   %rsi,%rsi
   32ef4:	0f 84 97 00 00 00    	je     32f91 <<core::str::lossy::Utf8Lossy as core::fmt::Display>::fmt+0xb1>
   32efa:	49 89 f6             	mov    %rsi,%r14
   32efd:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   32f02:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   32f07:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   32f0c:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   32f11:	ff 15 a1 30 01 00    	callq  *0x130a1(%rip)        # 45fb8 <_GLOBAL_OFFSET_TABLE_+0x628>
   32f17:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   32f1c:	48 85 f6             	test   %rsi,%rsi
   32f1f:	0f 84 8c 00 00 00    	je     32fb1 <<core::str::lossy::Utf8Lossy as core::fmt::Display>::fmt+0xd1>
   32f25:	4c 8d 64 24 08       	lea    0x8(%rsp),%r12
   32f2a:	4c 8d 2d 2f fb ff ff 	lea    -0x4d1(%rip),%r13        # 32a60 <<core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next>
   32f31:	e9 1f 00 00 00       	jmpq   32f55 <<core::str::lossy::Utf8Lossy as core::fmt::Display>::fmt+0x75>
   32f36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   32f3d:	00 00 00 
   32f40:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   32f45:	4c 89 e6             	mov    %r12,%rsi
   32f48:	41 ff d5             	callq  *%r13
   32f4b:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   32f50:	48 85 f6             	test   %rsi,%rsi
   32f53:	74 5c                	je     32fb1 <<core::str::lossy::Utf8Lossy as core::fmt::Display>::fmt+0xd1>
   32f55:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   32f5a:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
   32f5f:	4c 39 f2             	cmp    %r14,%rdx
   32f62:	74 51                	je     32fb5 <<core::str::lossy::Utf8Lossy as core::fmt::Display>::fmt+0xd5>
   32f64:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   32f68:	48 8b 43 28          	mov    0x28(%rbx),%rax
   32f6c:	ff 50 18             	callq  *0x18(%rax)
   32f6f:	40 b5 01             	mov    $0x1,%bpl
   32f72:	84 c0                	test   %al,%al
   32f74:	75 52                	jne    32fc8 <<core::str::lossy::Utf8Lossy as core::fmt::Display>::fmt+0xe8>
   32f76:	4d 85 ff             	test   %r15,%r15
   32f79:	74 c5                	je     32f40 <<core::str::lossy::Utf8Lossy as core::fmt::Display>::fmt+0x60>
   32f7b:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   32f7f:	48 8b 43 28          	mov    0x28(%rbx),%rax
   32f83:	be fd ff 00 00       	mov    $0xfffd,%esi
   32f88:	ff 50 20             	callq  *0x20(%rax)
   32f8b:	84 c0                	test   %al,%al
   32f8d:	74 b1                	je     32f40 <<core::str::lossy::Utf8Lossy as core::fmt::Display>::fmt+0x60>
   32f8f:	eb 37                	jmp    32fc8 <<core::str::lossy::Utf8Lossy as core::fmt::Display>::fmt+0xe8>
   32f91:	48 8d 35 98 6e 00 00 	lea    0x6e98(%rip),%rsi        # 39e30 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x2e0>
   32f98:	48 89 df             	mov    %rbx,%rdi
   32f9b:	31 d2                	xor    %edx,%edx
   32f9d:	48 83 c4 38          	add    $0x38,%rsp
   32fa1:	5b                   	pop    %rbx
   32fa2:	41 5c                	pop    %r12
   32fa4:	41 5d                	pop    %r13
   32fa6:	41 5e                	pop    %r14
   32fa8:	41 5f                	pop    %r15
   32faa:	5d                   	pop    %rbp
   32fab:	ff 25 5f 2d 01 00    	jmpq   *0x12d5f(%rip)        # 45d10 <_GLOBAL_OFFSET_TABLE_+0x380>
   32fb1:	31 ed                	xor    %ebp,%ebp
   32fb3:	eb 13                	jmp    32fc8 <<core::str::lossy::Utf8Lossy as core::fmt::Display>::fmt+0xe8>
   32fb5:	4d 85 ff             	test   %r15,%r15
   32fb8:	75 1f                	jne    32fd9 <<core::str::lossy::Utf8Lossy as core::fmt::Display>::fmt+0xf9>
   32fba:	48 89 df             	mov    %rbx,%rdi
   32fbd:	4c 89 f2             	mov    %r14,%rdx
   32fc0:	ff 15 4a 2d 01 00    	callq  *0x12d4a(%rip)        # 45d10 <_GLOBAL_OFFSET_TABLE_+0x380>
   32fc6:	89 c5                	mov    %eax,%ebp
   32fc8:	89 e8                	mov    %ebp,%eax
   32fca:	48 83 c4 38          	add    $0x38,%rsp
   32fce:	5b                   	pop    %rbx
   32fcf:	41 5c                	pop    %r12
   32fd1:	41 5d                	pop    %r13
   32fd3:	41 5e                	pop    %r14
   32fd5:	41 5f                	pop    %r15
   32fd7:	5d                   	pop    %rbp
   32fd8:	c3                   	retq   
   32fd9:	48 8d 3d 55 72 00 00 	lea    0x7255(%rip),%rdi        # 3a235 <core::str::validations::UTF8_CHAR_WIDTH+0x13c>
   32fe0:	48 8d 15 39 25 01 00 	lea    0x12539(%rip),%rdx        # 45520 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1fc8>
   32fe7:	be 23 00 00 00       	mov    $0x23,%esi
   32fec:	ff 15 ee 2e 01 00    	callq  *0x12eee(%rip)        # 45ee0 <_GLOBAL_OFFSET_TABLE_+0x550>
   32ff2:	0f 0b                	ud2    
   32ff4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   32ffb:	00 00 00 
   32ffe:	66 90                	xchg   %ax,%ax

0000000000033000 <core::str::slice_error_fail>:
   33000:	53                   	push   %rbx
   33001:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
   33008:	48 89 94 24 b8 00 00 	mov    %rdx,0xb8(%rsp)
   3300f:	00 
   33010:	48 89 8c 24 c0 00 00 	mov    %rcx,0xc0(%rsp)
   33017:	00 
   33018:	41 b3 01             	mov    $0x1,%r11b
   3301b:	49 89 f1             	mov    %rsi,%r9
   3301e:	48 81 fe 01 01 00 00 	cmp    $0x101,%rsi
   33025:	72 3c                	jb     33063 <core::str::slice_error_fail+0x63>
   33027:	41 ba ff 00 00 00    	mov    $0xff,%r10d
   3302d:	49 29 f2             	sub    %rsi,%r10
   33030:	b8 00 01 00 00       	mov    $0x100,%eax
   33035:	45 31 db             	xor    %r11d,%r11d
   33038:	48 39 f0             	cmp    %rsi,%rax
   3303b:	73 06                	jae    33043 <core::str::slice_error_fail+0x43>
   3303d:	80 3c 07 bf          	cmpb   $0xbf,(%rdi,%rax,1)
   33041:	7f 1a                	jg     3305d <core::str::slice_error_fail+0x5d>
   33043:	4c 8d 48 ff          	lea    -0x1(%rax),%r9
   33047:	48 83 f8 01          	cmp    $0x1,%rax
   3304b:	74 16                	je     33063 <core::str::slice_error_fail+0x63>
   3304d:	4c 01 d0             	add    %r10,%rax
   33050:	48 3d 00 01 00 00    	cmp    $0x100,%rax
   33056:	4c 89 c8             	mov    %r9,%rax
   33059:	75 dd                	jne    33038 <core::str::slice_error_fail+0x38>
   3305b:	eb 06                	jmp    33063 <core::str::slice_error_fail+0x63>
   3305d:	45 31 db             	xor    %r11d,%r11d
   33060:	49 89 c1             	mov    %rax,%r9
   33063:	48 89 bc 24 98 00 00 	mov    %rdi,0x98(%rsp)
   3306a:	00 
   3306b:	4c 89 8c 24 a0 00 00 	mov    %r9,0xa0(%rsp)
   33072:	00 
   33073:	48 8d 05 b6 6d 00 00 	lea    0x6db6(%rip),%rax        # 39e30 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x2e0>
   3307a:	48 8d 1d d7 71 00 00 	lea    0x71d7(%rip),%rbx        # 3a258 <core::str::validations::UTF8_CHAR_WIDTH+0x15f>
   33081:	45 84 db             	test   %r11b,%r11b
   33084:	48 0f 45 d8          	cmovne %rax,%rbx
   33088:	41 80 f3 01          	xor    $0x1,%r11b
   3308c:	41 0f b6 c3          	movzbl %r11b,%eax
   33090:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
   33094:	48 89 9c 24 a8 00 00 	mov    %rbx,0xa8(%rsp)
   3309b:	00 
   3309c:	48 89 84 24 b0 00 00 	mov    %rax,0xb0(%rsp)
   330a3:	00 
   330a4:	48 39 f2             	cmp    %rsi,%rdx
   330a7:	0f 87 ac 00 00 00    	ja     33159 <core::str::slice_error_fail+0x159>
   330ad:	48 39 f1             	cmp    %rsi,%rcx
   330b0:	0f 87 a3 00 00 00    	ja     33159 <core::str::slice_error_fail+0x159>
   330b6:	48 39 ca             	cmp    %rcx,%rdx
   330b9:	0f 86 28 01 00 00    	jbe    331e7 <core::str::slice_error_fail+0x1e7>
   330bf:	48 8d 84 24 b8 00 00 	lea    0xb8(%rsp),%rax
   330c6:	00 
   330c7:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   330cc:	48 8d 05 ed 13 00 00 	lea    0x13ed(%rip),%rax        # 344c0 <core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt>
   330d3:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   330d8:	48 8d 8c 24 c0 00 00 	lea    0xc0(%rsp),%rcx
   330df:	00 
   330e0:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
   330e5:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   330ea:	48 8d 84 24 98 00 00 	lea    0x98(%rsp),%rax
   330f1:	00 
   330f2:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   330f7:	48 8d 05 22 18 00 00 	lea    0x1822(%rip),%rax        # 34920 <<&T as core::fmt::Display>::fmt>
   330fe:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   33103:	48 8d 8c 24 a8 00 00 	lea    0xa8(%rsp),%rcx
   3310a:	00 
   3310b:	48 89 4c 24 78       	mov    %rcx,0x78(%rsp)
   33110:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   33117:	00 
   33118:	48 8d 05 49 24 01 00 	lea    0x12449(%rip),%rax        # 45568 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2010>
   3311f:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   33124:	48 c7 44 24 20 04 00 	movq   $0x4,0x20(%rsp)
   3312b:	00 00 
   3312d:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   33134:	00 00 
   33136:	48 8d 44 24 48       	lea    0x48(%rsp),%rax
   3313b:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   33140:	48 c7 44 24 40 04 00 	movq   $0x4,0x40(%rsp)
   33147:	00 00 
   33149:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   3314e:	4c 89 c6             	mov    %r8,%rsi
   33151:	ff 15 f9 2a 01 00    	callq  *0x12af9(%rip)        # 45c50 <_GLOBAL_OFFSET_TABLE_+0x2c0>
   33157:	0f 0b                	ud2    
   33159:	48 39 f2             	cmp    %rsi,%rdx
   3315c:	48 0f 47 ca          	cmova  %rdx,%rcx
   33160:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   33165:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   3316a:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   3316f:	48 8d 05 4a 13 00 00 	lea    0x134a(%rip),%rax        # 344c0 <core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt>
   33176:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   3317b:	48 8d 84 24 98 00 00 	lea    0x98(%rsp),%rax
   33182:	00 
   33183:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   33188:	48 8d 05 91 17 00 00 	lea    0x1791(%rip),%rax        # 34920 <<&T as core::fmt::Display>::fmt>
   3318f:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   33194:	48 8d 8c 24 a8 00 00 	lea    0xa8(%rsp),%rcx
   3319b:	00 
   3319c:	48 89 4c 24 68       	mov    %rcx,0x68(%rsp)
   331a1:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   331a6:	48 8d 05 8b 23 01 00 	lea    0x1238b(%rip),%rax        # 45538 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1fe0>
   331ad:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   331b2:	48 c7 44 24 20 03 00 	movq   $0x3,0x20(%rsp)
   331b9:	00 00 
   331bb:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   331c2:	00 00 
   331c4:	48 8d 44 24 48       	lea    0x48(%rsp),%rax
   331c9:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   331ce:	48 c7 44 24 40 03 00 	movq   $0x3,0x40(%rsp)
   331d5:	00 00 
   331d7:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   331dc:	4c 89 c6             	mov    %r8,%rsi
   331df:	ff 15 6b 2a 01 00    	callq  *0x12a6b(%rip)        # 45c50 <_GLOBAL_OFFSET_TABLE_+0x2c0>
   331e5:	0f 0b                	ud2    
   331e7:	48 85 d2             	test   %rdx,%rdx
   331ea:	74 0d                	je     331f9 <core::str::slice_error_fail+0x1f9>
   331ec:	48 39 d6             	cmp    %rdx,%rsi
   331ef:	74 08                	je     331f9 <core::str::slice_error_fail+0x1f9>
   331f1:	76 09                	jbe    331fc <core::str::slice_error_fail+0x1fc>
   331f3:	80 3c 17 c0          	cmpb   $0xc0,(%rdi,%rdx,1)
   331f7:	7c 03                	jl     331fc <core::str::slice_error_fail+0x1fc>
   331f9:	48 89 ca             	mov    %rcx,%rdx
   331fc:	48 89 94 24 c8 00 00 	mov    %rdx,0xc8(%rsp)
   33203:	00 
   33204:	48 85 d2             	test   %rdx,%rdx
   33207:	74 38                	je     33241 <core::str::slice_error_fail+0x241>
   33209:	48 39 f2             	cmp    %rsi,%rdx
   3320c:	74 33                	je     33241 <core::str::slice_error_fail+0x241>
   3320e:	48 8d 46 01          	lea    0x1(%rsi),%rax
   33212:	48 39 f2             	cmp    %rsi,%rdx
   33215:	73 06                	jae    3321d <core::str::slice_error_fail+0x21d>
   33217:	80 3c 17 c0          	cmpb   $0xc0,(%rdi,%rdx,1)
   3321b:	7d 39                	jge    33256 <core::str::slice_error_fail+0x256>
   3321d:	48 8d 4a ff          	lea    -0x1(%rdx),%rcx
   33221:	48 83 fa 01          	cmp    $0x1,%rdx
   33225:	74 08                	je     3322f <core::str::slice_error_fail+0x22f>
   33227:	48 39 d0             	cmp    %rdx,%rax
   3322a:	48 89 ca             	mov    %rcx,%rdx
   3322d:	75 e3                	jne    33212 <core::str::slice_error_fail+0x212>
   3322f:	4c 8d 4c 24 04       	lea    0x4(%rsp),%r9
   33234:	48 89 ca             	mov    %rcx,%rdx
   33237:	48 39 f2             	cmp    %rsi,%rdx
   3323a:	75 28                	jne    33264 <core::str::slice_error_fail+0x264>
   3323c:	e9 ad 00 00 00       	jmpq   332ee <core::str::slice_error_fail+0x2ee>
   33241:	48 89 d1             	mov    %rdx,%rcx
   33244:	4c 8d 4c 24 04       	lea    0x4(%rsp),%r9
   33249:	48 89 ca             	mov    %rcx,%rdx
   3324c:	48 39 f2             	cmp    %rsi,%rdx
   3324f:	75 13                	jne    33264 <core::str::slice_error_fail+0x264>
   33251:	e9 98 00 00 00       	jmpq   332ee <core::str::slice_error_fail+0x2ee>
   33256:	4c 8d 4c 24 04       	lea    0x4(%rsp),%r9
   3325b:	48 39 f2             	cmp    %rsi,%rdx
   3325e:	0f 84 8a 00 00 00    	je     332ee <core::str::slice_error_fail+0x2ee>
   33264:	48 8d 0c 17          	lea    (%rdi,%rdx,1),%rcx
   33268:	0f b6 01             	movzbl (%rcx),%eax
   3326b:	84 c0                	test   %al,%al
   3326d:	78 13                	js     33282 <core::str::slice_error_fail+0x282>
   3326f:	89 44 24 04          	mov    %eax,0x4(%rsp)
   33273:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   33278:	be 01 00 00 00       	mov    $0x1,%esi
   3327d:	e9 bf 00 00 00       	jmpq   33341 <core::str::slice_error_fail+0x341>
   33282:	48 01 f7             	add    %rsi,%rdi
   33285:	48 8d 71 01          	lea    0x1(%rcx),%rsi
   33289:	31 db                	xor    %ebx,%ebx
   3328b:	49 89 fa             	mov    %rdi,%r10
   3328e:	48 39 fe             	cmp    %rdi,%rsi
   33291:	74 0e                	je     332a1 <core::str::slice_error_fail+0x2a1>
   33293:	0f b6 59 01          	movzbl 0x1(%rcx),%ebx
   33297:	48 83 c1 02          	add    $0x2,%rcx
   3329b:	83 e3 3f             	and    $0x3f,%ebx
   3329e:	49 89 ca             	mov    %rcx,%r10
   332a1:	89 c6                	mov    %eax,%esi
   332a3:	83 e6 1f             	and    $0x1f,%esi
   332a6:	3c df                	cmp    $0xdf,%al
   332a8:	76 5b                	jbe    33305 <core::str::slice_error_fail+0x305>
   332aa:	31 c9                	xor    %ecx,%ecx
   332ac:	49 89 fb             	mov    %rdi,%r11
   332af:	49 39 fa             	cmp    %rdi,%r10
   332b2:	74 0e                	je     332c2 <core::str::slice_error_fail+0x2c2>
   332b4:	41 0f b6 0a          	movzbl (%r10),%ecx
   332b8:	49 83 c2 01          	add    $0x1,%r10
   332bc:	83 e1 3f             	and    $0x3f,%ecx
   332bf:	4d 89 d3             	mov    %r10,%r11
   332c2:	c1 e3 06             	shl    $0x6,%ebx
   332c5:	09 cb                	or     %ecx,%ebx
   332c7:	3c f0                	cmp    $0xf0,%al
   332c9:	72 3f                	jb     3330a <core::str::slice_error_fail+0x30a>
   332cb:	31 c0                	xor    %eax,%eax
   332cd:	49 39 fb             	cmp    %rdi,%r11
   332d0:	74 07                	je     332d9 <core::str::slice_error_fail+0x2d9>
   332d2:	41 0f b6 03          	movzbl (%r11),%eax
   332d6:	83 e0 3f             	and    $0x3f,%eax
   332d9:	83 e6 07             	and    $0x7,%esi
   332dc:	c1 e6 12             	shl    $0x12,%esi
   332df:	c1 e3 06             	shl    $0x6,%ebx
   332e2:	09 f3                	or     %esi,%ebx
   332e4:	09 c3                	or     %eax,%ebx
   332e6:	81 fb 00 00 11 00    	cmp    $0x110000,%ebx
   332ec:	75 21                	jne    3330f <core::str::slice_error_fail+0x30f>
   332ee:	48 8d 3d d8 6b 00 00 	lea    0x6bd8(%rip),%rdi        # 39ecd <str.1+0x8d>
   332f5:	be 2b 00 00 00       	mov    $0x2b,%esi
   332fa:	4c 89 c2             	mov    %r8,%rdx
   332fd:	ff 15 dd 2b 01 00    	callq  *0x12bdd(%rip)        # 45ee0 <_GLOBAL_OFFSET_TABLE_+0x550>
   33303:	0f 0b                	ud2    
   33305:	c1 e6 06             	shl    $0x6,%esi
   33308:	eb 03                	jmp    3330d <core::str::slice_error_fail+0x30d>
   3330a:	c1 e6 0c             	shl    $0xc,%esi
   3330d:	09 f3                	or     %esi,%ebx
   3330f:	89 5c 24 04          	mov    %ebx,0x4(%rsp)
   33313:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   33318:	be 01 00 00 00       	mov    $0x1,%esi
   3331d:	81 fb 80 00 00 00    	cmp    $0x80,%ebx
   33323:	72 1c                	jb     33341 <core::str::slice_error_fail+0x341>
   33325:	be 02 00 00 00       	mov    $0x2,%esi
   3332a:	81 fb 00 08 00 00    	cmp    $0x800,%ebx
   33330:	72 0f                	jb     33341 <core::str::slice_error_fail+0x341>
   33332:	81 fb 00 00 01 00    	cmp    $0x10000,%ebx
   33338:	be 04 00 00 00       	mov    $0x4,%esi
   3333d:	48 83 de 00          	sbb    $0x0,%rsi
   33341:	48 01 d6             	add    %rdx,%rsi
   33344:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   33349:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   3334e:	48 8d 8c 24 c8 00 00 	lea    0xc8(%rsp),%rcx
   33355:	00 
   33356:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
   3335b:	48 8d 0d 5e 11 00 00 	lea    0x115e(%rip),%rcx        # 344c0 <core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt>
   33362:	48 89 4c 24 50       	mov    %rcx,0x50(%rsp)
   33367:	4c 89 4c 24 58       	mov    %r9,0x58(%rsp)
   3336c:	48 8d 0d ed e4 ff ff 	lea    -0x1b13(%rip),%rcx        # 31860 <<char as core::fmt::Debug>::fmt>
   33373:	48 89 4c 24 60       	mov    %rcx,0x60(%rsp)
   33378:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   3337d:	48 8d 05 0c c1 ff ff 	lea    -0x3ef4(%rip),%rax        # 2f490 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt>
   33384:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   33389:	48 8d 84 24 98 00 00 	lea    0x98(%rsp),%rax
   33390:	00 
   33391:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   33396:	48 8d 05 83 15 00 00 	lea    0x1583(%rip),%rax        # 34920 <<&T as core::fmt::Display>::fmt>
   3339d:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   333a4:	00 
   333a5:	48 8d 8c 24 a8 00 00 	lea    0xa8(%rsp),%rcx
   333ac:	00 
   333ad:	48 89 8c 24 88 00 00 	mov    %rcx,0x88(%rsp)
   333b4:	00 
   333b5:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
   333bc:	00 
   333bd:	48 8d 05 e4 21 01 00 	lea    0x121e4(%rip),%rax        # 455a8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2050>
   333c4:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   333c9:	48 c7 44 24 20 05 00 	movq   $0x5,0x20(%rsp)
   333d0:	00 00 
   333d2:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   333d9:	00 00 
   333db:	48 8d 44 24 48       	lea    0x48(%rsp),%rax
   333e0:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   333e5:	48 c7 44 24 40 05 00 	movq   $0x5,0x40(%rsp)
   333ec:	00 00 
   333ee:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   333f3:	4c 89 c6             	mov    %r8,%rsi
   333f6:	ff 15 54 28 01 00    	callq  *0x12854(%rip)        # 45c50 <_GLOBAL_OFFSET_TABLE_+0x2c0>
   333fc:	0f 0b                	ud2    
   333fe:	66 90                	xchg   %ax,%ax

0000000000033400 <<core::time::Duration as core::fmt::Debug>::fmt>:
   33400:	41 56                	push   %r14
   33402:	53                   	push   %rbx
   33403:	48 83 ec 38          	sub    $0x38,%rsp
   33407:	49 89 f6             	mov    %rsi,%r14
   3340a:	48 89 fb             	mov    %rdi,%rbx
   3340d:	f6 46 30 01          	testb  $0x1,0x30(%rsi)
   33411:	74 4e                	je     33461 <<core::time::Duration as core::fmt::Debug>::fmt+0x61>
   33413:	49 8b 7e 20          	mov    0x20(%r14),%rdi
   33417:	49 8b 76 28          	mov    0x28(%r14),%rsi
   3341b:	48 8d 05 d6 21 01 00 	lea    0x121d6(%rip),%rax        # 455f8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x20a0>
   33422:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   33427:	48 c7 44 24 10 01 00 	movq   $0x1,0x10(%rsp)
   3342e:	00 00 
   33430:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   33437:	00 00 
   33439:	48 8d 05 f0 69 00 00 	lea    0x69f0(%rip),%rax        # 39e30 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x2e0>
   33440:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   33445:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   3344c:	00 00 
   3344e:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   33453:	ff 15 a7 29 01 00    	callq  *0x129a7(%rip)        # 45e00 <_GLOBAL_OFFSET_TABLE_+0x470>
   33459:	84 c0                	test   %al,%al
   3345b:	0f 85 e8 00 00 00    	jne    33549 <<core::time::Duration as core::fmt::Debug>::fmt+0x149>
   33461:	48 8b 33             	mov    (%rbx),%rsi
   33464:	8b 53 08             	mov    0x8(%rbx),%edx
   33467:	48 85 f6             	test   %rsi,%rsi
   3346a:	74 36                	je     334a2 <<core::time::Duration as core::fmt::Debug>::fmt+0xa2>
   3346c:	4c 89 f7             	mov    %r14,%rdi
   3346f:	b9 00 e1 f5 05       	mov    $0x5f5e100,%ecx
   33474:	e8 07 01 00 00       	callq  33580 <<core::time::Duration as core::fmt::Debug>::fmt::fmt_decimal>
   33479:	84 c0                	test   %al,%al
   3347b:	0f 85 c8 00 00 00    	jne    33549 <<core::time::Duration as core::fmt::Debug>::fmt+0x149>
   33481:	49 8b 7e 20          	mov    0x20(%r14),%rdi
   33485:	49 8b 46 28          	mov    0x28(%r14),%rax
   33489:	48 8b 40 18          	mov    0x18(%rax),%rax
   3348d:	48 8d 35 3c 6e 00 00 	lea    0x6e3c(%rip),%rsi        # 3a2d0 <core::str::validations::UTF8_CHAR_WIDTH+0x1d7>
   33494:	ba 01 00 00 00       	mov    $0x1,%edx
   33499:	48 83 c4 38          	add    $0x38,%rsp
   3349d:	5b                   	pop    %rbx
   3349e:	41 5e                	pop    %r14
   334a0:	ff e0                	jmpq   *%rax
   334a2:	81 fa 3f 42 0f 00    	cmp    $0xf423f,%edx
   334a8:	76 3c                	jbe    334e6 <<core::time::Duration as core::fmt::Debug>::fmt+0xe6>
   334aa:	48 69 f2 83 de 1b 43 	imul   $0x431bde83,%rdx,%rsi
   334b1:	48 c1 ee 32          	shr    $0x32,%rsi
   334b5:	69 c6 40 42 0f 00    	imul   $0xf4240,%esi,%eax
   334bb:	29 c2                	sub    %eax,%edx
   334bd:	4c 89 f7             	mov    %r14,%rdi
   334c0:	b9 a0 86 01 00       	mov    $0x186a0,%ecx
   334c5:	e8 b6 00 00 00       	callq  33580 <<core::time::Duration as core::fmt::Debug>::fmt::fmt_decimal>
   334ca:	84 c0                	test   %al,%al
   334cc:	75 7b                	jne    33549 <<core::time::Duration as core::fmt::Debug>::fmt+0x149>
   334ce:	49 8b 7e 20          	mov    0x20(%r14),%rdi
   334d2:	49 8b 46 28          	mov    0x28(%r14),%rax
   334d6:	48 8b 40 18          	mov    0x18(%rax),%rax
   334da:	48 8d 35 f0 6d 00 00 	lea    0x6df0(%rip),%rsi        # 3a2d1 <core::str::validations::UTF8_CHAR_WIDTH+0x1d8>
   334e1:	e9 80 00 00 00       	jmpq   33566 <<core::time::Duration as core::fmt::Debug>::fmt+0x166>
   334e6:	81 fa e7 03 00 00    	cmp    $0x3e7,%edx
   334ec:	76 45                	jbe    33533 <<core::time::Duration as core::fmt::Debug>::fmt+0x133>
   334ee:	48 69 f2 d3 4d 62 10 	imul   $0x10624dd3,%rdx,%rsi
   334f5:	48 c1 ee 26          	shr    $0x26,%rsi
   334f9:	69 c6 e8 03 00 00    	imul   $0x3e8,%esi,%eax
   334ff:	29 c2                	sub    %eax,%edx
   33501:	4c 89 f7             	mov    %r14,%rdi
   33504:	b9 64 00 00 00       	mov    $0x64,%ecx
   33509:	e8 72 00 00 00       	callq  33580 <<core::time::Duration as core::fmt::Debug>::fmt::fmt_decimal>
   3350e:	84 c0                	test   %al,%al
   33510:	75 37                	jne    33549 <<core::time::Duration as core::fmt::Debug>::fmt+0x149>
   33512:	49 8b 7e 20          	mov    0x20(%r14),%rdi
   33516:	49 8b 46 28          	mov    0x28(%r14),%rax
   3351a:	48 8b 40 18          	mov    0x18(%rax),%rax
   3351e:	48 8d 35 ae 6d 00 00 	lea    0x6dae(%rip),%rsi        # 3a2d3 <core::str::validations::UTF8_CHAR_WIDTH+0x1da>
   33525:	ba 03 00 00 00       	mov    $0x3,%edx
   3352a:	48 83 c4 38          	add    $0x38,%rsp
   3352e:	5b                   	pop    %rbx
   3352f:	41 5e                	pop    %r14
   33531:	ff e0                	jmpq   *%rax
   33533:	4c 89 f7             	mov    %r14,%rdi
   33536:	48 89 d6             	mov    %rdx,%rsi
   33539:	31 d2                	xor    %edx,%edx
   3353b:	b9 01 00 00 00       	mov    $0x1,%ecx
   33540:	e8 3b 00 00 00       	callq  33580 <<core::time::Duration as core::fmt::Debug>::fmt::fmt_decimal>
   33545:	84 c0                	test   %al,%al
   33547:	74 0a                	je     33553 <<core::time::Duration as core::fmt::Debug>::fmt+0x153>
   33549:	b0 01                	mov    $0x1,%al
   3354b:	48 83 c4 38          	add    $0x38,%rsp
   3354f:	5b                   	pop    %rbx
   33550:	41 5e                	pop    %r14
   33552:	c3                   	retq   
   33553:	49 8b 7e 20          	mov    0x20(%r14),%rdi
   33557:	49 8b 46 28          	mov    0x28(%r14),%rax
   3355b:	48 8b 40 18          	mov    0x18(%rax),%rax
   3355f:	48 8d 35 70 6d 00 00 	lea    0x6d70(%rip),%rsi        # 3a2d6 <core::str::validations::UTF8_CHAR_WIDTH+0x1dd>
   33566:	ba 02 00 00 00       	mov    $0x2,%edx
   3356b:	48 83 c4 38          	add    $0x38,%rsp
   3356f:	5b                   	pop    %rbx
   33570:	41 5e                	pop    %r14
   33572:	ff e0                	jmpq   *%rax
   33574:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3357b:	00 00 00 
   3357e:	66 90                	xchg   %ax,%ax

0000000000033580 <<core::time::Duration as core::fmt::Debug>::fmt::fmt_decimal>:
   33580:	55                   	push   %rbp
   33581:	53                   	push   %rbx
   33582:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
   33589:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
   3358e:	48 b8 30 30 30 30 30 	movabs $0x3030303030303030,%rax
   33595:	30 30 30 
   33598:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   3359d:	c6 44 24 10 30       	movb   $0x30,0x10(%rsp)
   335a2:	4c 8b 4f 10          	mov    0x10(%rdi),%r9
   335a6:	4c 8b 47 18          	mov    0x18(%rdi),%r8
   335aa:	85 d2                	test   %edx,%edx
   335ac:	74 5a                	je     33608 <<core::time::Duration as core::fmt::Debug>::fmt::fmt_decimal+0x88>
   335ae:	4d 85 c9             	test   %r9,%r9
   335b1:	41 ba 09 00 00 00    	mov    $0x9,%r10d
   335b7:	4d 0f 45 d0          	cmovne %r8,%r10
   335bb:	45 31 db             	xor    %r11d,%r11d
   335be:	bb cd cc cc cc       	mov    $0xcccccccd,%ebx
   335c3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   335ca:	00 00 00 
   335cd:	0f 1f 00             	nopl   (%rax)
   335d0:	4d 39 da             	cmp    %r11,%r10
   335d3:	74 38                	je     3360d <<core::time::Duration as core::fmt::Debug>::fmt::fmt_decimal+0x8d>
   335d5:	85 c9                	test   %ecx,%ecx
   335d7:	0f 84 d6 01 00 00    	je     337b3 <<core::time::Duration as core::fmt::Debug>::fmt::fmt_decimal+0x233>
   335dd:	49 83 fb 09          	cmp    $0x9,%r11
   335e1:	0f 84 e7 01 00 00    	je     337ce <<core::time::Duration as core::fmt::Debug>::fmt::fmt_decimal+0x24e>
   335e7:	89 d0                	mov    %edx,%eax
   335e9:	31 d2                	xor    %edx,%edx
   335eb:	f7 f1                	div    %ecx
   335ed:	04 30                	add    $0x30,%al
   335ef:	42 88 44 1c 08       	mov    %al,0x8(%rsp,%r11,1)
   335f4:	89 c9                	mov    %ecx,%ecx
   335f6:	48 0f af cb          	imul   %rbx,%rcx
   335fa:	48 c1 e9 23          	shr    $0x23,%rcx
   335fe:	49 83 c3 01          	add    $0x1,%r11
   33602:	85 d2                	test   %edx,%edx
   33604:	75 ca                	jne    335d0 <<core::time::Duration as core::fmt::Debug>::fmt::fmt_decimal+0x50>
   33606:	eb 6d                	jmp    33675 <<core::time::Duration as core::fmt::Debug>::fmt::fmt_decimal+0xf5>
   33608:	45 31 db             	xor    %r11d,%r11d
   3360b:	eb 68                	jmp    33675 <<core::time::Duration as core::fmt::Debug>::fmt::fmt_decimal+0xf5>
   3360d:	8d 04 89             	lea    (%rcx,%rcx,4),%eax
   33610:	39 c2                	cmp    %eax,%edx
   33612:	72 5e                	jb     33672 <<core::time::Duration as core::fmt::Debug>::fmt::fmt_decimal+0xf2>
   33614:	4d 85 d2             	test   %r10,%r10
   33617:	74 50                	je     33669 <<core::time::Duration as core::fmt::Debug>::fmt::fmt_decimal+0xe9>
   33619:	49 8d 42 ff          	lea    -0x1(%r10),%rax
   3361d:	b1 01                	mov    $0x1,%cl
   3361f:	45 31 db             	xor    %r11d,%r11d
   33622:	bb 30 00 00 00       	mov    $0x30,%ebx
   33627:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3362e:	00 00 
   33630:	48 83 f8 08          	cmp    $0x8,%rax
   33634:	0f 87 ad 01 00 00    	ja     337e7 <<core::time::Duration as core::fmt::Debug>::fmt::fmt_decimal+0x267>
   3363a:	0f b6 54 04 08       	movzbl 0x8(%rsp,%rax,1),%edx
   3363f:	8d 6a 01             	lea    0x1(%rdx),%ebp
   33642:	80 fa 39             	cmp    $0x39,%dl
   33645:	40 0f b6 d5          	movzbl %bpl,%edx
   33649:	0f 43 d3             	cmovae %ebx,%edx
   3364c:	0f b6 c9             	movzbl %cl,%ecx
   3364f:	41 0f 42 cb          	cmovb  %r11d,%ecx
   33653:	88 54 04 08          	mov    %dl,0x8(%rsp,%rax,1)
   33657:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
   3365b:	73 07                	jae    33664 <<core::time::Duration as core::fmt::Debug>::fmt::fmt_decimal+0xe4>
   3365d:	89 ca                	mov    %ecx,%edx
   3365f:	80 e2 01             	and    $0x1,%dl
   33662:	75 cc                	jne    33630 <<core::time::Duration as core::fmt::Debug>::fmt::fmt_decimal+0xb0>
   33664:	f6 c1 01             	test   $0x1,%cl
   33667:	74 09                	je     33672 <<core::time::Duration as core::fmt::Debug>::fmt::fmt_decimal+0xf2>
   33669:	48 83 c6 01          	add    $0x1,%rsi
   3366d:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
   33672:	4d 89 d3             	mov    %r10,%r11
   33675:	49 83 f8 09          	cmp    $0x9,%r8
   33679:	b8 09 00 00 00       	mov    $0x9,%eax
   3367e:	49 0f 42 c0          	cmovb  %r8,%rax
   33682:	4d 85 c9             	test   %r9,%r9
   33685:	49 0f 44 c3          	cmove  %r11,%rax
   33689:	48 85 c0             	test   %rax,%rax
   3368c:	0f 84 ba 00 00 00    	je     3374c <<core::time::Duration as core::fmt::Debug>::fmt::fmt_decimal+0x1cc>
   33692:	48 83 f8 0a          	cmp    $0xa,%rax
   33696:	0f 83 62 01 00 00    	jae    337fe <<core::time::Duration as core::fmt::Debug>::fmt::fmt_decimal+0x27e>
   3369c:	4d 85 c9             	test   %r9,%r9
   3369f:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
   336a4:	48 89 8c 24 88 00 00 	mov    %rcx,0x88(%rsp)
   336ab:	00 
   336ac:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
   336b3:	00 
   336b4:	4d 0f 44 c3          	cmove  %r11,%r8
   336b8:	4c 89 44 24 50       	mov    %r8,0x50(%rsp)
   336bd:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
   336c2:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   336c7:	48 8d 05 f2 0d 00 00 	lea    0xdf2(%rip),%rax        # 344c0 <core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt>
   336ce:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   336d3:	48 8d 84 24 88 00 00 	lea    0x88(%rsp),%rax
   336da:	00 
   336db:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   336e0:	48 8d 05 39 12 00 00 	lea    0x1239(%rip),%rax        # 34920 <<&T as core::fmt::Display>::fmt>
   336e7:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   336ec:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
   336f1:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
   336f6:	48 8d 05 f3 bb ff ff 	lea    -0x440d(%rip),%rax        # 2f2f0 <core::ops::function::FnOnce::call_once>
   336fd:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   33704:	00 
   33705:	48 8b 47 20          	mov    0x20(%rdi),%rax
   33709:	48 8b 77 28          	mov    0x28(%rdi),%rsi
   3370d:	48 8d 0d 54 1f 01 00 	lea    0x11f54(%rip),%rcx        # 45668 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2110>
   33714:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   33719:	48 c7 44 24 28 02 00 	movq   $0x2,0x28(%rsp)
   33720:	00 00 
   33722:	48 8d 0d af 6b 00 00 	lea    0x6baf(%rip),%rcx        # 3a2d8 <core::str::validations::UTF8_CHAR_WIDTH+0x1df>
   33729:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   3372e:	48 c7 44 24 38 02 00 	movq   $0x2,0x38(%rsp)
   33735:	00 00 
   33737:	48 8d 4c 24 58       	lea    0x58(%rsp),%rcx
   3373c:	48 89 4c 24 40       	mov    %rcx,0x40(%rsp)
   33741:	48 c7 44 24 48 03 00 	movq   $0x3,0x48(%rsp)
   33748:	00 00 
   3374a:	eb 4f                	jmp    3379b <<core::time::Duration as core::fmt::Debug>::fmt::fmt_decimal+0x21b>
   3374c:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
   33751:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   33756:	48 8d 05 63 0d 00 00 	lea    0xd63(%rip),%rax        # 344c0 <core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt>
   3375d:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   33762:	48 8b 47 20          	mov    0x20(%rdi),%rax
   33766:	48 8b 77 28          	mov    0x28(%rdi),%rsi
   3376a:	48 8d 0d 07 1a 01 00 	lea    0x11a07(%rip),%rcx        # 45178 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1c20>
   33771:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   33776:	48 c7 44 24 28 01 00 	movq   $0x1,0x28(%rsp)
   3377d:	00 00 
   3377f:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   33786:	00 00 
   33788:	48 8d 4c 24 58       	lea    0x58(%rsp),%rcx
   3378d:	48 89 4c 24 40       	mov    %rcx,0x40(%rsp)
   33792:	48 c7 44 24 48 01 00 	movq   $0x1,0x48(%rsp)
   33799:	00 00 
   3379b:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
   337a0:	48 89 c7             	mov    %rax,%rdi
   337a3:	ff 15 57 26 01 00    	callq  *0x12657(%rip)        # 45e00 <_GLOBAL_OFFSET_TABLE_+0x470>
   337a9:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
   337b0:	5b                   	pop    %rbx
   337b1:	5d                   	pop    %rbp
   337b2:	c3                   	retq   
   337b3:	48 8d 3d 86 66 00 00 	lea    0x6686(%rip),%rdi        # 39e40 <str.1>
   337ba:	48 8d 15 47 1e 01 00 	lea    0x11e47(%rip),%rdx        # 45608 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x20b0>
   337c1:	be 19 00 00 00       	mov    $0x19,%esi
   337c6:	ff 15 14 27 01 00    	callq  *0x12714(%rip)        # 45ee0 <_GLOBAL_OFFSET_TABLE_+0x550>
   337cc:	0f 0b                	ud2    
   337ce:	48 8d 15 4b 1e 01 00 	lea    0x11e4b(%rip),%rdx        # 45620 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x20c8>
   337d5:	bf 09 00 00 00       	mov    $0x9,%edi
   337da:	be 09 00 00 00       	mov    $0x9,%esi
   337df:	ff 15 b3 24 01 00    	callq  *0x124b3(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   337e5:	0f 0b                	ud2    
   337e7:	48 8d 15 4a 1e 01 00 	lea    0x11e4a(%rip),%rdx        # 45638 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x20e0>
   337ee:	be 09 00 00 00       	mov    $0x9,%esi
   337f3:	48 89 c7             	mov    %rax,%rdi
   337f6:	ff 15 9c 24 01 00    	callq  *0x1249c(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   337fc:	0f 0b                	ud2    
   337fe:	48 8d 15 4b 1e 01 00 	lea    0x11e4b(%rip),%rdx        # 45650 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x20f8>
   33805:	be 09 00 00 00       	mov    $0x9,%esi
   3380a:	48 89 c7             	mov    %rax,%rdi
   3380d:	ff 15 1d 22 01 00    	callq  *0x1221d(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   33813:	0f 0b                	ud2    
   33815:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3381c:	00 00 00 
   3381f:	90                   	nop

0000000000033820 <core::unicode::printable::is_printable>:
   33820:	53                   	push   %rbx
   33821:	81 ff 00 00 01 00    	cmp    $0x10000,%edi
   33827:	0f 83 95 00 00 00    	jae    338c2 <core::unicode::printable::is_printable+0xa2>
   3382d:	41 89 f9             	mov    %edi,%r9d
   33830:	41 c1 e9 08          	shr    $0x8,%r9d
   33834:	4c 8d 15 32 6b 00 00 	lea    0x6b32(%rip),%r10        # 3a36d <core::str::validations::UTF8_CHAR_WIDTH+0x274>
   3383b:	31 c0                	xor    %eax,%eax
   3383d:	4c 8d 05 7b 6b 00 00 	lea    0x6b7b(%rip),%r8        # 3a3bf <core::str::validations::UTF8_CHAR_WIDTH+0x2c6>
   33844:	48 8d 15 74 6b 00 00 	lea    0x6b74(%rip),%rdx        # 3a3bf <core::str::validations::UTF8_CHAR_WIDTH+0x2c6>
   3384b:	4c 89 d1             	mov    %r10,%rcx
   3384e:	41 0f b6 72 01       	movzbl 0x1(%r10),%esi
   33853:	49 83 c2 02          	add    $0x2,%r10
   33857:	4c 8d 1c 30          	lea    (%rax,%rsi,1),%r11
   3385b:	44 38 09             	cmp    %r9b,(%rcx)
   3385e:	75 40                	jne    338a0 <core::unicode::printable::is_printable+0x80>
   33860:	49 39 c3             	cmp    %rax,%r11
   33863:	0f 82 ee 01 00 00    	jb     33a57 <core::unicode::printable::is_printable+0x237>
   33869:	49 81 fb 22 01 00 00 	cmp    $0x122,%r11
   33870:	0f 87 f6 01 00 00    	ja     33a6c <core::unicode::printable::is_printable+0x24c>
   33876:	31 c9                	xor    %ecx,%ecx
   33878:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   3387f:	00 
   33880:	48 39 ce             	cmp    %rcx,%rsi
   33883:	74 1d                	je     338a2 <core::unicode::printable::is_printable+0x82>
   33885:	48 8d 1c 08          	lea    (%rax,%rcx,1),%rbx
   33889:	48 83 c1 01          	add    $0x1,%rcx
   3388d:	40 38 3c 1a          	cmp    %dil,(%rdx,%rbx,1)
   33891:	0f 85 e9 ff ff ff    	jne    33880 <core::unicode::printable::is_printable+0x60>
   33897:	e9 c6 00 00 00       	jmpq   33962 <core::unicode::printable::is_printable+0x142>
   3389c:	0f 1f 40 00          	nopl   0x0(%rax)
   338a0:	77 08                	ja     338aa <core::unicode::printable::is_printable+0x8a>
   338a2:	4c 89 d8             	mov    %r11,%rax
   338a5:	4d 39 c2             	cmp    %r8,%r10
   338a8:	75 a1                	jne    3384b <core::unicode::printable::is_printable+0x2b>
   338aa:	0f b7 cf             	movzwl %di,%ecx
   338ad:	48 8d 15 2d 6c 00 00 	lea    0x6c2d(%rip),%rdx        # 3a4e1 <core::str::validations::UTF8_CHAR_WIDTH+0x3e8>
   338b4:	b0 01                	mov    $0x1,%al
   338b6:	4c 8d 05 59 6d 00 00 	lea    0x6d59(%rip),%r8        # 3a616 <core::str::validations::UTF8_CHAR_WIDTH+0x51d>
   338bd:	e9 c4 00 00 00       	jmpq   33986 <core::unicode::printable::is_printable+0x166>
   338c2:	81 ff 00 00 02 00    	cmp    $0x20000,%edi
   338c8:	0f 83 e6 00 00 00    	jae    339b4 <core::unicode::printable::is_printable+0x194>
   338ce:	41 89 f9             	mov    %edi,%r9d
   338d1:	41 c1 e9 08          	shr    $0x8,%r9d
   338d5:	4c 8d 15 3a 6d 00 00 	lea    0x6d3a(%rip),%r10        # 3a616 <core::str::validations::UTF8_CHAR_WIDTH+0x51d>
   338dc:	31 c0                	xor    %eax,%eax
   338de:	4c 8d 05 7d 6d 00 00 	lea    0x6d7d(%rip),%r8        # 3a662 <core::str::validations::UTF8_CHAR_WIDTH+0x569>
   338e5:	48 8d 15 76 6d 00 00 	lea    0x6d76(%rip),%rdx        # 3a662 <core::str::validations::UTF8_CHAR_WIDTH+0x569>
   338ec:	4c 89 d1             	mov    %r10,%rcx
   338ef:	41 0f b6 72 01       	movzbl 0x1(%r10),%esi
   338f4:	49 83 c2 02          	add    $0x2,%r10
   338f8:	4c 8d 1c 30          	lea    (%rax,%rsi,1),%r11
   338fc:	44 38 09             	cmp    %r9b,(%rcx)
   338ff:	75 3f                	jne    33940 <core::unicode::printable::is_printable+0x120>
   33901:	49 39 c3             	cmp    %rax,%r11
   33904:	0f 82 4d 01 00 00    	jb     33a57 <core::unicode::printable::is_printable+0x237>
   3390a:	49 81 fb af 00 00 00 	cmp    $0xaf,%r11
   33911:	0f 87 63 01 00 00    	ja     33a7a <core::unicode::printable::is_printable+0x25a>
   33917:	31 c9                	xor    %ecx,%ecx
   33919:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   33920:	48 39 ce             	cmp    %rcx,%rsi
   33923:	74 1d                	je     33942 <core::unicode::printable::is_printable+0x122>
   33925:	48 8d 1c 08          	lea    (%rax,%rcx,1),%rbx
   33929:	48 83 c1 01          	add    $0x1,%rcx
   3392d:	40 38 3c 1a          	cmp    %dil,(%rdx,%rbx,1)
   33931:	0f 85 e9 ff ff ff    	jne    33920 <core::unicode::printable::is_printable+0x100>
   33937:	e9 26 00 00 00       	jmpq   33962 <core::unicode::printable::is_printable+0x142>
   3393c:	0f 1f 40 00          	nopl   0x0(%rax)
   33940:	77 08                	ja     3394a <core::unicode::printable::is_printable+0x12a>
   33942:	4c 89 d8             	mov    %r11,%rax
   33945:	4d 39 c2             	cmp    %r8,%r10
   33948:	75 a2                	jne    338ec <core::unicode::printable::is_printable+0xcc>
   3394a:	0f b7 cf             	movzwl %di,%ecx
   3394d:	48 8d 15 bd 6d 00 00 	lea    0x6dbd(%rip),%rdx        # 3a711 <core::str::validations::UTF8_CHAR_WIDTH+0x618>
   33954:	b0 01                	mov    $0x1,%al
   33956:	4c 8d 05 57 6f 00 00 	lea    0x6f57(%rip),%r8        # 3a8b4 <core::str::validations::UTF8_CHAR_WIDTH+0x7bb>
   3395d:	e9 cc 00 00 00       	jmpq   33a2e <core::unicode::printable::is_printable+0x20e>
   33962:	31 c0                	xor    %eax,%eax
   33964:	24 01                	and    $0x1,%al
   33966:	5b                   	pop    %rbx
   33967:	c3                   	retq   
   33968:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   3396f:	00 
   33970:	48 89 f2             	mov    %rsi,%rdx
   33973:	29 f9                	sub    %edi,%ecx
   33975:	0f 88 d8 00 00 00    	js     33a53 <core::unicode::printable::is_printable+0x233>
   3397b:	34 01                	xor    $0x1,%al
   3397d:	4c 39 c2             	cmp    %r8,%rdx
   33980:	0f 84 cd 00 00 00    	je     33a53 <core::unicode::printable::is_printable+0x233>
   33986:	48 8d 72 01          	lea    0x1(%rdx),%rsi
   3398a:	0f b6 3a             	movzbl (%rdx),%edi
   3398d:	40 84 ff             	test   %dil,%dil
   33990:	79 de                	jns    33970 <core::unicode::printable::is_printable+0x150>
   33992:	4c 39 c6             	cmp    %r8,%rsi
   33995:	0f 84 f6 00 00 00    	je     33a91 <core::unicode::printable::is_printable+0x271>
   3399b:	83 e7 7f             	and    $0x7f,%edi
   3399e:	c1 e7 08             	shl    $0x8,%edi
   339a1:	0f b6 72 01          	movzbl 0x1(%rdx),%esi
   339a5:	48 83 c2 02          	add    $0x2,%rdx
   339a9:	09 f7                	or     %esi,%edi
   339ab:	29 f9                	sub    %edi,%ecx
   339ad:	79 cc                	jns    3397b <core::unicode::printable::is_printable+0x15b>
   339af:	e9 9f 00 00 00       	jmpq   33a53 <core::unicode::printable::is_printable+0x233>
   339b4:	66 0f 6e c7          	movd   %edi,%xmm0
   339b8:	66 0f 70 c0 00       	pshufd $0x0,%xmm0,%xmm0
   339bd:	66 0f fe 05 cb 60 00 	paddd  0x60cb(%rip),%xmm0        # 39a90 <str.6+0x2770>
   339c4:	00 
   339c5:	66 0f ef 05 73 50 00 	pxor   0x5073(%rip),%xmm0        # 38a40 <str.6+0x1720>
   339cc:	00 
   339cd:	66 0f 6f 0d cb 60 00 	movdqa 0x60cb(%rip),%xmm1        # 39aa0 <str.6+0x2780>
   339d4:	00 
   339d5:	66 0f 66 c8          	pcmpgtd %xmm0,%xmm1
   339d9:	0f 50 c9             	movmskps %xmm1,%ecx
   339dc:	31 c0                	xor    %eax,%eax
   339de:	84 c9                	test   %cl,%cl
   339e0:	75 71                	jne    33a53 <core::unicode::printable::is_printable+0x233>
   339e2:	89 f9                	mov    %edi,%ecx
   339e4:	81 e1 fe ff 1f 00    	and    $0x1ffffe,%ecx
   339ea:	81 f9 1e b8 02 00    	cmp    $0x2b81e,%ecx
   339f0:	74 61                	je     33a53 <core::unicode::printable::is_printable+0x233>
   339f2:	8d 8f 22 59 fd ff    	lea    -0x2a6de(%rdi),%ecx
   339f8:	83 f9 22             	cmp    $0x22,%ecx
   339fb:	72 56                	jb     33a53 <core::unicode::printable::is_printable+0x233>
   339fd:	8d 8f cb 48 fd ff    	lea    -0x2b735(%rdi),%ecx
   33a03:	83 f9 0b             	cmp    $0xb,%ecx
   33a06:	72 4b                	jb     33a53 <core::unicode::printable::is_printable+0x233>
   33a08:	81 ff f0 01 0e 00    	cmp    $0xe01f0,%edi
   33a0e:	0f 92 c0             	setb   %al
   33a11:	5b                   	pop    %rbx
   33a12:	c3                   	retq   
   33a13:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   33a1a:	00 00 00 
   33a1d:	0f 1f 00             	nopl   (%rax)
   33a20:	48 89 f2             	mov    %rsi,%rdx
   33a23:	29 f9                	sub    %edi,%ecx
   33a25:	78 2c                	js     33a53 <core::unicode::printable::is_printable+0x233>
   33a27:	34 01                	xor    $0x1,%al
   33a29:	4c 39 c2             	cmp    %r8,%rdx
   33a2c:	74 25                	je     33a53 <core::unicode::printable::is_printable+0x233>
   33a2e:	48 8d 72 01          	lea    0x1(%rdx),%rsi
   33a32:	0f b6 3a             	movzbl (%rdx),%edi
   33a35:	40 84 ff             	test   %dil,%dil
   33a38:	79 e6                	jns    33a20 <core::unicode::printable::is_printable+0x200>
   33a3a:	4c 39 c6             	cmp    %r8,%rsi
   33a3d:	74 52                	je     33a91 <core::unicode::printable::is_printable+0x271>
   33a3f:	83 e7 7f             	and    $0x7f,%edi
   33a42:	c1 e7 08             	shl    $0x8,%edi
   33a45:	0f b6 72 01          	movzbl 0x1(%rdx),%esi
   33a49:	48 83 c2 02          	add    $0x2,%rdx
   33a4d:	09 f7                	or     %esi,%edi
   33a4f:	29 f9                	sub    %edi,%ecx
   33a51:	79 d4                	jns    33a27 <core::unicode::printable::is_printable+0x207>
   33a53:	24 01                	and    $0x1,%al
   33a55:	5b                   	pop    %rbx
   33a56:	c3                   	retq   
   33a57:	48 8d 15 2a 1c 01 00 	lea    0x11c2a(%rip),%rdx        # 45688 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2130>
   33a5e:	48 89 c7             	mov    %rax,%rdi
   33a61:	4c 89 de             	mov    %r11,%rsi
   33a64:	ff 15 3e 24 01 00    	callq  *0x1243e(%rip)        # 45ea8 <_GLOBAL_OFFSET_TABLE_+0x518>
   33a6a:	0f 0b                	ud2    
   33a6c:	48 8d 15 15 1c 01 00 	lea    0x11c15(%rip),%rdx        # 45688 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2130>
   33a73:	be 22 01 00 00       	mov    $0x122,%esi
   33a78:	eb 0c                	jmp    33a86 <core::unicode::printable::is_printable+0x266>
   33a7a:	48 8d 15 07 1c 01 00 	lea    0x11c07(%rip),%rdx        # 45688 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2130>
   33a81:	be af 00 00 00       	mov    $0xaf,%esi
   33a86:	4c 89 df             	mov    %r11,%rdi
   33a89:	ff 15 a1 1f 01 00    	callq  *0x11fa1(%rip)        # 45a30 <_GLOBAL_OFFSET_TABLE_+0xa0>
   33a8f:	0f 0b                	ud2    
   33a91:	48 8d 3d 35 64 00 00 	lea    0x6435(%rip),%rdi        # 39ecd <str.1+0x8d>
   33a98:	48 8d 15 01 1c 01 00 	lea    0x11c01(%rip),%rdx        # 456a0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2148>
   33a9f:	be 2b 00 00 00       	mov    $0x2b,%esi
   33aa4:	ff 15 36 24 01 00    	callq  *0x12436(%rip)        # 45ee0 <_GLOBAL_OFFSET_TABLE_+0x550>
   33aaa:	0f 0b                	ud2    
   33aac:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000033ab0 <<core::num::error::ParseIntError as core::fmt::Debug>::fmt>:
   33ab0:	41 56                	push   %r14
   33ab2:	53                   	push   %rbx
   33ab3:	48 83 ec 18          	sub    $0x18,%rsp
   33ab7:	48 89 f3             	mov    %rsi,%rbx
   33aba:	49 89 fe             	mov    %rdi,%r14
   33abd:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
   33ac1:	48 8b 46 28          	mov    0x28(%rsi),%rax
   33ac5:	48 8d 35 15 6e 00 00 	lea    0x6e15(%rip),%rsi        # 3a8e1 <core::str::validations::UTF8_CHAR_WIDTH+0x7e8>
   33acc:	ba 0d 00 00 00       	mov    $0xd,%edx
   33ad1:	ff 50 18             	callq  *0x18(%rax)
   33ad4:	0f b6 c0             	movzbl %al,%eax
   33ad7:	48 89 1c 24          	mov    %rbx,(%rsp)
   33adb:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   33ae0:	4c 89 74 24 10       	mov    %r14,0x10(%rsp)
   33ae5:	48 8d 35 8c 3c 00 00 	lea    0x3c8c(%rip),%rsi        # 37778 <str.6+0x458>
   33aec:	4c 8d 05 2d 1c 01 00 	lea    0x11c2d(%rip),%r8        # 45720 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x21c8>
   33af3:	48 89 e7             	mov    %rsp,%rdi
   33af6:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
   33afb:	ba 04 00 00 00       	mov    $0x4,%edx
   33b00:	ff 15 ca 24 01 00    	callq  *0x124ca(%rip)        # 45fd0 <_GLOBAL_OFFSET_TABLE_+0x640>
   33b06:	80 7c 24 09 00       	cmpb   $0x0,0x9(%rsp)
   33b0b:	8a 44 24 08          	mov    0x8(%rsp),%al
   33b0f:	74 3c                	je     33b4d <<core::num::error::ParseIntError as core::fmt::Debug>::fmt+0x9d>
   33b11:	84 c0                	test   %al,%al
   33b13:	b0 01                	mov    $0x1,%al
   33b15:	75 32                	jne    33b49 <<core::num::error::ParseIntError as core::fmt::Debug>::fmt+0x99>
   33b17:	48 8b 04 24          	mov    (%rsp),%rax
   33b1b:	f6 40 30 04          	testb  $0x4,0x30(%rax)
   33b1f:	48 8b 78 20          	mov    0x20(%rax),%rdi
   33b23:	48 8b 40 28          	mov    0x28(%rax),%rax
   33b27:	48 8b 40 18          	mov    0x18(%rax),%rax
   33b2b:	75 0e                	jne    33b3b <<core::num::error::ParseIntError as core::fmt::Debug>::fmt+0x8b>
   33b2d:	48 8d 35 24 64 00 00 	lea    0x6424(%rip),%rsi        # 39f58 <str.1+0x118>
   33b34:	ba 02 00 00 00       	mov    $0x2,%edx
   33b39:	eb 0c                	jmp    33b47 <<core::num::error::ParseIntError as core::fmt::Debug>::fmt+0x97>
   33b3b:	48 8d 35 15 64 00 00 	lea    0x6415(%rip),%rsi        # 39f57 <str.1+0x117>
   33b42:	ba 01 00 00 00       	mov    $0x1,%edx
   33b47:	ff d0                	callq  *%rax
   33b49:	88 44 24 08          	mov    %al,0x8(%rsp)
   33b4d:	48 83 c4 18          	add    $0x18,%rsp
   33b51:	5b                   	pop    %rbx
   33b52:	41 5e                	pop    %r14
   33b54:	c3                   	retq   
   33b55:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   33b5c:	00 00 00 
   33b5f:	90                   	nop

0000000000033b60 <core::num::<impl u32>::from_str_radix>:
   33b60:	e9 bb b7 ff ff       	jmpq   2f320 <core::num::from_str_radix>
   33b65:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   33b6c:	00 00 00 
   33b6f:	90                   	nop

0000000000033b70 <core::num::<impl core::str::traits::FromStr for u64>::from_str>:
   33b70:	41 b0 01             	mov    $0x1,%r8b
   33b73:	48 85 f6             	test   %rsi,%rsi
   33b76:	74 57                	je     33bcf <core::num::<impl core::str::traits::FromStr for u64>::from_str+0x5f>
   33b78:	80 3f 2b             	cmpb   $0x2b,(%rdi)
   33b7b:	75 0a                	jne    33b87 <core::num::<impl core::str::traits::FromStr for u64>::from_str+0x17>
   33b7d:	48 83 c6 ff          	add    $0xffffffffffffffff,%rsi
   33b81:	74 4c                	je     33bcf <core::num::<impl core::str::traits::FromStr for u64>::from_str+0x5f>
   33b83:	48 83 c7 01          	add    $0x1,%rdi
   33b87:	45 31 db             	xor    %r11d,%r11d
   33b8a:	41 ba 0a 00 00 00    	mov    $0xa,%r10d
   33b90:	31 c0                	xor    %eax,%eax
   33b92:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   33b99:	00 00 00 
   33b9c:	0f 1f 40 00          	nopl   0x0(%rax)
   33ba0:	49 89 c1             	mov    %rax,%r9
   33ba3:	4c 39 de             	cmp    %r11,%rsi
   33ba6:	74 2b                	je     33bd3 <core::num::<impl core::str::traits::FromStr for u64>::from_str+0x63>
   33ba8:	42 0f b6 0c 1f       	movzbl (%rdi,%r11,1),%ecx
   33bad:	83 c1 d0             	add    $0xffffffd0,%ecx
   33bb0:	41 b0 01             	mov    $0x1,%r8b
   33bb3:	83 f9 09             	cmp    $0x9,%ecx
   33bb6:	77 20                	ja     33bd8 <core::num::<impl core::str::traits::FromStr for u64>::from_str+0x68>
   33bb8:	4c 89 c8             	mov    %r9,%rax
   33bbb:	49 f7 e2             	mul    %r10
   33bbe:	b2 02                	mov    $0x2,%dl
   33bc0:	70 18                	jo     33bda <core::num::<impl core::str::traits::FromStr for u64>::from_str+0x6a>
   33bc2:	89 c9                	mov    %ecx,%ecx
   33bc4:	49 83 c3 01          	add    $0x1,%r11
   33bc8:	48 01 c8             	add    %rcx,%rax
   33bcb:	73 d3                	jae    33ba0 <core::num::<impl core::str::traits::FromStr for u64>::from_str+0x30>
   33bcd:	eb 0b                	jmp    33bda <core::num::<impl core::str::traits::FromStr for u64>::from_str+0x6a>
   33bcf:	31 d2                	xor    %edx,%edx
   33bd1:	eb 07                	jmp    33bda <core::num::<impl core::str::traits::FromStr for u64>::from_str+0x6a>
   33bd3:	45 31 c0             	xor    %r8d,%r8d
   33bd6:	eb 02                	jmp    33bda <core::num::<impl core::str::traits::FromStr for u64>::from_str+0x6a>
   33bd8:	b2 01                	mov    $0x1,%dl
   33bda:	0f b6 ca             	movzbl %dl,%ecx
   33bdd:	48 c1 e1 08          	shl    $0x8,%rcx
   33be1:	41 0f b6 c0          	movzbl %r8b,%eax
   33be5:	48 09 c8             	or     %rcx,%rax
   33be8:	4c 89 ca             	mov    %r9,%rdx
   33beb:	c3                   	retq   
   33bec:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000033bf0 <core::fmt::num::<impl core::fmt::LowerHex for i8>::fmt>:
   33bf0:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   33bf7:	8a 07                	mov    (%rdi),%al
   33bf9:	4c 8d 84 24 88 00 00 	lea    0x88(%rsp),%r8
   33c00:	00 
   33c01:	45 31 c9             	xor    %r9d,%r9d
   33c04:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   33c0b:	00 00 00 
   33c0e:	66 90                	xchg   %ax,%ax
   33c10:	89 c1                	mov    %eax,%ecx
   33c12:	80 e1 0f             	and    $0xf,%cl
   33c15:	c0 e8 04             	shr    $0x4,%al
   33c18:	8d 51 30             	lea    0x30(%rcx),%edx
   33c1b:	8d 79 57             	lea    0x57(%rcx),%edi
   33c1e:	80 f9 0a             	cmp    $0xa,%cl
   33c21:	0f b6 ca             	movzbl %dl,%ecx
   33c24:	40 0f b6 d7          	movzbl %dil,%edx
   33c28:	0f 42 d1             	cmovb  %ecx,%edx
   33c2b:	41 88 50 ff          	mov    %dl,-0x1(%r8)
   33c2f:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   33c33:	49 83 c1 01          	add    $0x1,%r9
   33c37:	84 c0                	test   %al,%al
   33c39:	75 d5                	jne    33c10 <core::fmt::num::<impl core::fmt::LowerHex for i8>::fmt+0x20>
   33c3b:	bf 80 00 00 00       	mov    $0x80,%edi
   33c40:	4c 29 cf             	sub    %r9,%rdi
   33c43:	48 81 ff 81 00 00 00 	cmp    $0x81,%rdi
   33c4a:	73 22                	jae    33c6e <core::fmt::num::<impl core::fmt::LowerHex for i8>::fmt+0x7e>
   33c4c:	48 8d 15 2a 63 00 00 	lea    0x632a(%rip),%rdx        # 39f7d <str.1+0x13d>
   33c53:	b9 02 00 00 00       	mov    $0x2,%ecx
   33c58:	48 89 f7             	mov    %rsi,%rdi
   33c5b:	be 01 00 00 00       	mov    $0x1,%esi
   33c60:	ff 15 6a 1d 01 00    	callq  *0x11d6a(%rip)        # 459d0 <_GLOBAL_OFFSET_TABLE_+0x40>
   33c66:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   33c6d:	c3                   	retq   
   33c6e:	48 8d 15 23 16 01 00 	lea    0x11623(%rip),%rdx        # 45298 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1d40>
   33c75:	be 80 00 00 00       	mov    $0x80,%esi
   33c7a:	ff 15 78 21 01 00    	callq  *0x12178(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x468>
   33c80:	0f 0b                	ud2    
   33c82:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   33c89:	00 00 00 
   33c8c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000033c90 <core::fmt::num::<impl core::fmt::UpperHex for i8>::fmt>:
   33c90:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   33c97:	8a 07                	mov    (%rdi),%al
   33c99:	4c 8d 84 24 88 00 00 	lea    0x88(%rsp),%r8
   33ca0:	00 
   33ca1:	45 31 c9             	xor    %r9d,%r9d
   33ca4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   33cab:	00 00 00 
   33cae:	66 90                	xchg   %ax,%ax
   33cb0:	89 c1                	mov    %eax,%ecx
   33cb2:	80 e1 0f             	and    $0xf,%cl
   33cb5:	c0 e8 04             	shr    $0x4,%al
   33cb8:	8d 51 30             	lea    0x30(%rcx),%edx
   33cbb:	8d 79 37             	lea    0x37(%rcx),%edi
   33cbe:	80 f9 0a             	cmp    $0xa,%cl
   33cc1:	0f b6 ca             	movzbl %dl,%ecx
   33cc4:	40 0f b6 d7          	movzbl %dil,%edx
   33cc8:	0f 42 d1             	cmovb  %ecx,%edx
   33ccb:	41 88 50 ff          	mov    %dl,-0x1(%r8)
   33ccf:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   33cd3:	49 83 c1 01          	add    $0x1,%r9
   33cd7:	84 c0                	test   %al,%al
   33cd9:	75 d5                	jne    33cb0 <core::fmt::num::<impl core::fmt::UpperHex for i8>::fmt+0x20>
   33cdb:	bf 80 00 00 00       	mov    $0x80,%edi
   33ce0:	4c 29 cf             	sub    %r9,%rdi
   33ce3:	48 81 ff 81 00 00 00 	cmp    $0x81,%rdi
   33cea:	73 22                	jae    33d0e <core::fmt::num::<impl core::fmt::UpperHex for i8>::fmt+0x7e>
   33cec:	48 8d 15 8a 62 00 00 	lea    0x628a(%rip),%rdx        # 39f7d <str.1+0x13d>
   33cf3:	b9 02 00 00 00       	mov    $0x2,%ecx
   33cf8:	48 89 f7             	mov    %rsi,%rdi
   33cfb:	be 01 00 00 00       	mov    $0x1,%esi
   33d00:	ff 15 ca 1c 01 00    	callq  *0x11cca(%rip)        # 459d0 <_GLOBAL_OFFSET_TABLE_+0x40>
   33d06:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   33d0d:	c3                   	retq   
   33d0e:	48 8d 15 83 15 01 00 	lea    0x11583(%rip),%rdx        # 45298 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1d40>
   33d15:	be 80 00 00 00       	mov    $0x80,%esi
   33d1a:	ff 15 d8 20 01 00    	callq  *0x120d8(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x468>
   33d20:	0f 0b                	ud2    
   33d22:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   33d29:	00 00 00 
   33d2c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000033d30 <core::fmt::num::<impl core::fmt::LowerHex for i32>::fmt>:
   33d30:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   33d37:	8b 0f                	mov    (%rdi),%ecx
   33d39:	4c 8d 84 24 88 00 00 	lea    0x88(%rsp),%r8
   33d40:	00 
   33d41:	45 31 c9             	xor    %r9d,%r9d
   33d44:	89 c8                	mov    %ecx,%eax
   33d46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   33d4d:	00 00 00 
   33d50:	c1 e8 04             	shr    $0x4,%eax
   33d53:	80 e1 0f             	and    $0xf,%cl
   33d56:	8d 51 30             	lea    0x30(%rcx),%edx
   33d59:	8d 79 57             	lea    0x57(%rcx),%edi
   33d5c:	80 f9 0a             	cmp    $0xa,%cl
   33d5f:	0f b6 ca             	movzbl %dl,%ecx
   33d62:	40 0f b6 d7          	movzbl %dil,%edx
   33d66:	0f 42 d1             	cmovb  %ecx,%edx
   33d69:	41 88 50 ff          	mov    %dl,-0x1(%r8)
   33d6d:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   33d71:	49 83 c1 01          	add    $0x1,%r9
   33d75:	89 c1                	mov    %eax,%ecx
   33d77:	85 c0                	test   %eax,%eax
   33d79:	75 d5                	jne    33d50 <core::fmt::num::<impl core::fmt::LowerHex for i32>::fmt+0x20>
   33d7b:	bf 80 00 00 00       	mov    $0x80,%edi
   33d80:	4c 29 cf             	sub    %r9,%rdi
   33d83:	48 81 ff 81 00 00 00 	cmp    $0x81,%rdi
   33d8a:	73 22                	jae    33dae <core::fmt::num::<impl core::fmt::LowerHex for i32>::fmt+0x7e>
   33d8c:	48 8d 15 ea 61 00 00 	lea    0x61ea(%rip),%rdx        # 39f7d <str.1+0x13d>
   33d93:	b9 02 00 00 00       	mov    $0x2,%ecx
   33d98:	48 89 f7             	mov    %rsi,%rdi
   33d9b:	be 01 00 00 00       	mov    $0x1,%esi
   33da0:	ff 15 2a 1c 01 00    	callq  *0x11c2a(%rip)        # 459d0 <_GLOBAL_OFFSET_TABLE_+0x40>
   33da6:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   33dad:	c3                   	retq   
   33dae:	48 8d 15 e3 14 01 00 	lea    0x114e3(%rip),%rdx        # 45298 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1d40>
   33db5:	be 80 00 00 00       	mov    $0x80,%esi
   33dba:	ff 15 38 20 01 00    	callq  *0x12038(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x468>
   33dc0:	0f 0b                	ud2    
   33dc2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   33dc9:	00 00 00 
   33dcc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000033dd0 <core::fmt::num::<impl core::fmt::UpperHex for i32>::fmt>:
   33dd0:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   33dd7:	8b 0f                	mov    (%rdi),%ecx
   33dd9:	4c 8d 84 24 88 00 00 	lea    0x88(%rsp),%r8
   33de0:	00 
   33de1:	45 31 c9             	xor    %r9d,%r9d
   33de4:	89 c8                	mov    %ecx,%eax
   33de6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   33ded:	00 00 00 
   33df0:	c1 e8 04             	shr    $0x4,%eax
   33df3:	80 e1 0f             	and    $0xf,%cl
   33df6:	8d 51 30             	lea    0x30(%rcx),%edx
   33df9:	8d 79 37             	lea    0x37(%rcx),%edi
   33dfc:	80 f9 0a             	cmp    $0xa,%cl
   33dff:	0f b6 ca             	movzbl %dl,%ecx
   33e02:	40 0f b6 d7          	movzbl %dil,%edx
   33e06:	0f 42 d1             	cmovb  %ecx,%edx
   33e09:	41 88 50 ff          	mov    %dl,-0x1(%r8)
   33e0d:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   33e11:	49 83 c1 01          	add    $0x1,%r9
   33e15:	89 c1                	mov    %eax,%ecx
   33e17:	85 c0                	test   %eax,%eax
   33e19:	75 d5                	jne    33df0 <core::fmt::num::<impl core::fmt::UpperHex for i32>::fmt+0x20>
   33e1b:	bf 80 00 00 00       	mov    $0x80,%edi
   33e20:	4c 29 cf             	sub    %r9,%rdi
   33e23:	48 81 ff 81 00 00 00 	cmp    $0x81,%rdi
   33e2a:	73 22                	jae    33e4e <core::fmt::num::<impl core::fmt::UpperHex for i32>::fmt+0x7e>
   33e2c:	48 8d 15 4a 61 00 00 	lea    0x614a(%rip),%rdx        # 39f7d <str.1+0x13d>
   33e33:	b9 02 00 00 00       	mov    $0x2,%ecx
   33e38:	48 89 f7             	mov    %rsi,%rdi
   33e3b:	be 01 00 00 00       	mov    $0x1,%esi
   33e40:	ff 15 8a 1b 01 00    	callq  *0x11b8a(%rip)        # 459d0 <_GLOBAL_OFFSET_TABLE_+0x40>
   33e46:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   33e4d:	c3                   	retq   
   33e4e:	48 8d 15 43 14 01 00 	lea    0x11443(%rip),%rdx        # 45298 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1d40>
   33e55:	be 80 00 00 00       	mov    $0x80,%esi
   33e5a:	ff 15 98 1f 01 00    	callq  *0x11f98(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x468>
   33e60:	0f 0b                	ud2    
   33e62:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   33e69:	00 00 00 
   33e6c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000033e70 <core::fmt::num::<impl core::fmt::LowerHex for i64>::fmt>:
   33e70:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   33e77:	48 8b 0f             	mov    (%rdi),%rcx
   33e7a:	4c 8d 84 24 88 00 00 	lea    0x88(%rsp),%r8
   33e81:	00 
   33e82:	45 31 c9             	xor    %r9d,%r9d
   33e85:	48 89 c8             	mov    %rcx,%rax
   33e88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   33e8f:	00 
   33e90:	48 c1 e8 04          	shr    $0x4,%rax
   33e94:	80 e1 0f             	and    $0xf,%cl
   33e97:	8d 51 30             	lea    0x30(%rcx),%edx
   33e9a:	8d 79 57             	lea    0x57(%rcx),%edi
   33e9d:	80 f9 0a             	cmp    $0xa,%cl
   33ea0:	0f b6 ca             	movzbl %dl,%ecx
   33ea3:	40 0f b6 d7          	movzbl %dil,%edx
   33ea7:	0f 42 d1             	cmovb  %ecx,%edx
   33eaa:	41 88 50 ff          	mov    %dl,-0x1(%r8)
   33eae:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   33eb2:	49 83 c1 01          	add    $0x1,%r9
   33eb6:	48 89 c1             	mov    %rax,%rcx
   33eb9:	48 85 c0             	test   %rax,%rax
   33ebc:	75 d2                	jne    33e90 <core::fmt::num::<impl core::fmt::LowerHex for i64>::fmt+0x20>
   33ebe:	bf 80 00 00 00       	mov    $0x80,%edi
   33ec3:	4c 29 cf             	sub    %r9,%rdi
   33ec6:	48 81 ff 81 00 00 00 	cmp    $0x81,%rdi
   33ecd:	73 22                	jae    33ef1 <core::fmt::num::<impl core::fmt::LowerHex for i64>::fmt+0x81>
   33ecf:	48 8d 15 a7 60 00 00 	lea    0x60a7(%rip),%rdx        # 39f7d <str.1+0x13d>
   33ed6:	b9 02 00 00 00       	mov    $0x2,%ecx
   33edb:	48 89 f7             	mov    %rsi,%rdi
   33ede:	be 01 00 00 00       	mov    $0x1,%esi
   33ee3:	ff 15 e7 1a 01 00    	callq  *0x11ae7(%rip)        # 459d0 <_GLOBAL_OFFSET_TABLE_+0x40>
   33ee9:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   33ef0:	c3                   	retq   
   33ef1:	48 8d 15 a0 13 01 00 	lea    0x113a0(%rip),%rdx        # 45298 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1d40>
   33ef8:	be 80 00 00 00       	mov    $0x80,%esi
   33efd:	ff 15 f5 1e 01 00    	callq  *0x11ef5(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x468>
   33f03:	0f 0b                	ud2    
   33f05:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   33f0c:	00 00 00 
   33f0f:	90                   	nop

0000000000033f10 <core::fmt::num::<impl core::fmt::UpperHex for i64>::fmt>:
   33f10:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   33f17:	48 8b 0f             	mov    (%rdi),%rcx
   33f1a:	4c 8d 84 24 88 00 00 	lea    0x88(%rsp),%r8
   33f21:	00 
   33f22:	45 31 c9             	xor    %r9d,%r9d
   33f25:	48 89 c8             	mov    %rcx,%rax
   33f28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   33f2f:	00 
   33f30:	48 c1 e8 04          	shr    $0x4,%rax
   33f34:	80 e1 0f             	and    $0xf,%cl
   33f37:	8d 51 30             	lea    0x30(%rcx),%edx
   33f3a:	8d 79 37             	lea    0x37(%rcx),%edi
   33f3d:	80 f9 0a             	cmp    $0xa,%cl
   33f40:	0f b6 ca             	movzbl %dl,%ecx
   33f43:	40 0f b6 d7          	movzbl %dil,%edx
   33f47:	0f 42 d1             	cmovb  %ecx,%edx
   33f4a:	41 88 50 ff          	mov    %dl,-0x1(%r8)
   33f4e:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   33f52:	49 83 c1 01          	add    $0x1,%r9
   33f56:	48 89 c1             	mov    %rax,%rcx
   33f59:	48 85 c0             	test   %rax,%rax
   33f5c:	75 d2                	jne    33f30 <core::fmt::num::<impl core::fmt::UpperHex for i64>::fmt+0x20>
   33f5e:	bf 80 00 00 00       	mov    $0x80,%edi
   33f63:	4c 29 cf             	sub    %r9,%rdi
   33f66:	48 81 ff 81 00 00 00 	cmp    $0x81,%rdi
   33f6d:	73 22                	jae    33f91 <core::fmt::num::<impl core::fmt::UpperHex for i64>::fmt+0x81>
   33f6f:	48 8d 15 07 60 00 00 	lea    0x6007(%rip),%rdx        # 39f7d <str.1+0x13d>
   33f76:	b9 02 00 00 00       	mov    $0x2,%ecx
   33f7b:	48 89 f7             	mov    %rsi,%rdi
   33f7e:	be 01 00 00 00       	mov    $0x1,%esi
   33f83:	ff 15 47 1a 01 00    	callq  *0x11a47(%rip)        # 459d0 <_GLOBAL_OFFSET_TABLE_+0x40>
   33f89:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   33f90:	c3                   	retq   
   33f91:	48 8d 15 00 13 01 00 	lea    0x11300(%rip),%rdx        # 45298 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1d40>
   33f98:	be 80 00 00 00       	mov    $0x80,%esi
   33f9d:	ff 15 55 1e 01 00    	callq  *0x11e55(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x468>
   33fa3:	0f 0b                	ud2    
   33fa5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   33fac:	00 00 00 
   33faf:	90                   	nop

0000000000033fb0 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt>:
   33fb0:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   33fb7:	49 89 f2             	mov    %rsi,%r10
   33fba:	8b 46 30             	mov    0x30(%rsi),%eax
   33fbd:	a8 10                	test   $0x10,%al
   33fbf:	0f 85 dd 00 00 00    	jne    340a2 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt+0xf2>
   33fc5:	48 8b 0f             	mov    (%rdi),%rcx
   33fc8:	a8 20                	test   $0x20,%al
   33fca:	0f 85 20 01 00 00    	jne    340f0 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt+0x140>
   33fd0:	be 27 00 00 00       	mov    $0x27,%esi
   33fd5:	48 81 f9 10 27 00 00 	cmp    $0x2710,%rcx
   33fdc:	0f 82 7f 01 00 00    	jb     34161 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt+0x1b1>
   33fe2:	41 bb 27 00 00 00    	mov    $0x27,%r11d
   33fe8:	49 b8 4b 59 86 38 d6 	movabs $0x346dc5d63886594b,%r8
   33fef:	c5 6d 34 
   33ff2:	4c 8d 0d 86 5f 00 00 	lea    0x5f86(%rip),%r9        # 39f7f <str.1+0x13f>
   33ff9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   34000:	48 89 c8             	mov    %rcx,%rax
   34003:	49 f7 e0             	mul    %r8
   34006:	48 c1 ea 0b          	shr    $0xb,%rdx
   3400a:	69 c2 10 27 00 00    	imul   $0x2710,%edx,%eax
   34010:	89 ce                	mov    %ecx,%esi
   34012:	29 c6                	sub    %eax,%esi
   34014:	0f b7 c6             	movzwl %si,%eax
   34017:	c1 e8 02             	shr    $0x2,%eax
   3401a:	69 c0 7b 14 00 00    	imul   $0x147b,%eax,%eax
   34020:	c1 e8 11             	shr    $0x11,%eax
   34023:	6b f8 64             	imul   $0x64,%eax,%edi
   34026:	29 fe                	sub    %edi,%esi
   34028:	0f b7 fe             	movzwl %si,%edi
   3402b:	49 8d 73 fc          	lea    -0x4(%r11),%rsi
   3402f:	41 0f b7 04 41       	movzwl (%r9,%rax,2),%eax
   34034:	66 42 89 44 1c 04    	mov    %ax,0x4(%rsp,%r11,1)
   3403a:	41 0f b7 04 79       	movzwl (%r9,%rdi,2),%eax
   3403f:	66 42 89 44 1c 06    	mov    %ax,0x6(%rsp,%r11,1)
   34045:	49 89 f3             	mov    %rsi,%r11
   34048:	48 81 f9 ff e0 f5 05 	cmp    $0x5f5e0ff,%rcx
   3404f:	48 89 d1             	mov    %rdx,%rcx
   34052:	77 ac                	ja     34000 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt+0x50>
   34054:	48 83 fa 63          	cmp    $0x63,%rdx
   34058:	7e 2e                	jle    34088 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt+0xd8>
   3405a:	0f b7 c2             	movzwl %dx,%eax
   3405d:	c1 e8 02             	shr    $0x2,%eax
   34060:	69 c0 7b 14 00 00    	imul   $0x147b,%eax,%eax
   34066:	c1 e8 11             	shr    $0x11,%eax
   34069:	6b c8 64             	imul   $0x64,%eax,%ecx
   3406c:	29 ca                	sub    %ecx,%edx
   3406e:	0f b7 ca             	movzwl %dx,%ecx
   34071:	48 8d 15 07 5f 00 00 	lea    0x5f07(%rip),%rdx        # 39f7f <str.1+0x13f>
   34078:	0f b7 0c 4a          	movzwl (%rdx,%rcx,2),%ecx
   3407c:	66 89 4c 34 06       	mov    %cx,0x6(%rsp,%rsi,1)
   34081:	48 83 c6 fe          	add    $0xfffffffffffffffe,%rsi
   34085:	48 89 c2             	mov    %rax,%rdx
   34088:	48 83 fa 0a          	cmp    $0xa,%rdx
   3408c:	0f 8d e1 00 00 00    	jge    34173 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt+0x1c3>
   34092:	80 c2 30             	add    $0x30,%dl
   34095:	88 54 34 07          	mov    %dl,0x7(%rsp,%rsi,1)
   34099:	48 83 c6 ff          	add    $0xffffffffffffffff,%rsi
   3409d:	e9 e5 00 00 00       	jmpq   34187 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt+0x1d7>
   340a2:	48 8b 0f             	mov    (%rdi),%rcx
   340a5:	4c 8d 84 24 88 00 00 	lea    0x88(%rsp),%r8
   340ac:	00 
   340ad:	45 31 c9             	xor    %r9d,%r9d
   340b0:	48 89 c8             	mov    %rcx,%rax
   340b3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   340ba:	00 00 00 
   340bd:	0f 1f 00             	nopl   (%rax)
   340c0:	48 c1 e8 04          	shr    $0x4,%rax
   340c4:	80 e1 0f             	and    $0xf,%cl
   340c7:	8d 51 30             	lea    0x30(%rcx),%edx
   340ca:	8d 71 57             	lea    0x57(%rcx),%esi
   340cd:	80 f9 0a             	cmp    $0xa,%cl
   340d0:	0f b6 ca             	movzbl %dl,%ecx
   340d3:	40 0f b6 d6          	movzbl %sil,%edx
   340d7:	0f 42 d1             	cmovb  %ecx,%edx
   340da:	41 88 50 ff          	mov    %dl,-0x1(%r8)
   340de:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   340e2:	49 83 c1 01          	add    $0x1,%r9
   340e6:	48 89 c1             	mov    %rax,%rcx
   340e9:	48 85 c0             	test   %rax,%rax
   340ec:	75 d2                	jne    340c0 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt+0x110>
   340ee:	eb 3e                	jmp    3412e <core::fmt::num::<impl core::fmt::Debug for usize>::fmt+0x17e>
   340f0:	4c 8d 84 24 88 00 00 	lea    0x88(%rsp),%r8
   340f7:	00 
   340f8:	45 31 c9             	xor    %r9d,%r9d
   340fb:	48 89 c8             	mov    %rcx,%rax
   340fe:	66 90                	xchg   %ax,%ax
   34100:	48 c1 e8 04          	shr    $0x4,%rax
   34104:	80 e1 0f             	and    $0xf,%cl
   34107:	8d 51 30             	lea    0x30(%rcx),%edx
   3410a:	8d 71 37             	lea    0x37(%rcx),%esi
   3410d:	80 f9 0a             	cmp    $0xa,%cl
   34110:	0f b6 ca             	movzbl %dl,%ecx
   34113:	40 0f b6 d6          	movzbl %sil,%edx
   34117:	0f 42 d1             	cmovb  %ecx,%edx
   3411a:	41 88 50 ff          	mov    %dl,-0x1(%r8)
   3411e:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   34122:	49 83 c1 01          	add    $0x1,%r9
   34126:	48 89 c1             	mov    %rax,%rcx
   34129:	48 85 c0             	test   %rax,%rax
   3412c:	75 d2                	jne    34100 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt+0x150>
   3412e:	bf 80 00 00 00       	mov    $0x80,%edi
   34133:	4c 29 cf             	sub    %r9,%rdi
   34136:	48 81 ff 81 00 00 00 	cmp    $0x81,%rdi
   3413d:	73 78                	jae    341b7 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt+0x207>
   3413f:	48 8d 15 37 5e 00 00 	lea    0x5e37(%rip),%rdx        # 39f7d <str.1+0x13d>
   34146:	b9 02 00 00 00       	mov    $0x2,%ecx
   3414b:	4c 89 d7             	mov    %r10,%rdi
   3414e:	be 01 00 00 00       	mov    $0x1,%esi
   34153:	ff 15 77 18 01 00    	callq  *0x11877(%rip)        # 459d0 <_GLOBAL_OFFSET_TABLE_+0x40>
   34159:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   34160:	c3                   	retq   
   34161:	48 89 ca             	mov    %rcx,%rdx
   34164:	48 83 fa 63          	cmp    $0x63,%rdx
   34168:	0f 8f ec fe ff ff    	jg     3405a <core::fmt::num::<impl core::fmt::Debug for usize>::fmt+0xaa>
   3416e:	e9 15 ff ff ff       	jmpq   34088 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt+0xd8>
   34173:	48 8d 05 05 5e 00 00 	lea    0x5e05(%rip),%rax        # 39f7f <str.1+0x13f>
   3417a:	0f b7 04 50          	movzwl (%rax,%rdx,2),%eax
   3417e:	66 89 44 34 06       	mov    %ax,0x6(%rsp,%rsi,1)
   34183:	48 83 c6 fe          	add    $0xfffffffffffffffe,%rsi
   34187:	4c 8d 04 34          	lea    (%rsp,%rsi,1),%r8
   3418b:	49 83 c0 08          	add    $0x8,%r8
   3418f:	41 b9 27 00 00 00    	mov    $0x27,%r9d
   34195:	49 29 f1             	sub    %rsi,%r9
   34198:	48 8d 15 91 5c 00 00 	lea    0x5c91(%rip),%rdx        # 39e30 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x2e0>
   3419f:	4c 89 d7             	mov    %r10,%rdi
   341a2:	be 01 00 00 00       	mov    $0x1,%esi
   341a7:	31 c9                	xor    %ecx,%ecx
   341a9:	ff 15 21 18 01 00    	callq  *0x11821(%rip)        # 459d0 <_GLOBAL_OFFSET_TABLE_+0x40>
   341af:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   341b6:	c3                   	retq   
   341b7:	48 8d 15 da 10 01 00 	lea    0x110da(%rip),%rdx        # 45298 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1d40>
   341be:	be 80 00 00 00       	mov    $0x80,%esi
   341c3:	ff 15 2f 1c 01 00    	callq  *0x11c2f(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x468>
   341c9:	0f 0b                	ud2    
   341cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000341d0 <core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt>:
   341d0:	48 83 ec 28          	sub    $0x28,%rsp
   341d4:	0f b6 07             	movzbl (%rdi),%eax
   341d7:	48 83 f8 64          	cmp    $0x64,%rax
   341db:	72 2d                	jb     3420a <core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt+0x3a>
   341dd:	0f b6 c8             	movzbl %al,%ecx
   341e0:	8d 14 89             	lea    (%rcx,%rcx,4),%edx
   341e3:	8d 14 d1             	lea    (%rcx,%rdx,8),%edx
   341e6:	c1 ea 0c             	shr    $0xc,%edx
   341e9:	6b ca 64             	imul   $0x64,%edx,%ecx
   341ec:	28 c8                	sub    %cl,%al
   341ee:	0f b6 c0             	movzbl %al,%eax
   341f1:	48 8d 0d 87 5d 00 00 	lea    0x5d87(%rip),%rcx        # 39f7f <str.1+0x13f>
   341f8:	0f b7 04 41          	movzwl (%rcx,%rax,2),%eax
   341fc:	66 89 44 24 26       	mov    %ax,0x26(%rsp)
   34201:	b9 24 00 00 00       	mov    $0x24,%ecx
   34206:	89 d0                	mov    %edx,%eax
   34208:	eb 09                	jmp    34213 <core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt+0x43>
   3420a:	b9 26 00 00 00       	mov    $0x26,%ecx
   3420f:	3c 0a                	cmp    $0xa,%al
   34211:	73 08                	jae    3421b <core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt+0x4b>
   34213:	04 30                	add    $0x30,%al
   34215:	88 44 0c 01          	mov    %al,0x1(%rsp,%rcx,1)
   34219:	eb 15                	jmp    34230 <core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt+0x60>
   3421b:	48 8d 0d 5d 5d 00 00 	lea    0x5d5d(%rip),%rcx        # 39f7f <str.1+0x13f>
   34222:	0f b7 04 41          	movzwl (%rcx,%rax,2),%eax
   34226:	66 89 44 24 26       	mov    %ax,0x26(%rsp)
   3422b:	b9 25 00 00 00       	mov    $0x25,%ecx
   34230:	4c 8d 04 0c          	lea    (%rsp,%rcx,1),%r8
   34234:	49 83 c0 01          	add    $0x1,%r8
   34238:	41 b9 27 00 00 00    	mov    $0x27,%r9d
   3423e:	49 29 c9             	sub    %rcx,%r9
   34241:	48 8d 15 e8 5b 00 00 	lea    0x5be8(%rip),%rdx        # 39e30 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x2e0>
   34248:	48 89 f7             	mov    %rsi,%rdi
   3424b:	be 01 00 00 00       	mov    $0x1,%esi
   34250:	31 c9                	xor    %ecx,%ecx
   34252:	ff 15 78 17 01 00    	callq  *0x11778(%rip)        # 459d0 <_GLOBAL_OFFSET_TABLE_+0x40>
   34258:	48 83 c4 28          	add    $0x28,%rsp
   3425c:	c3                   	retq   
   3425d:	0f 1f 00             	nopl   (%rax)

0000000000034260 <core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt>:
   34260:	53                   	push   %rbx
   34261:	48 83 ec 30          	sub    $0x30,%rsp
   34265:	49 89 f2             	mov    %rsi,%r10
   34268:	48 63 37             	movslq (%rdi),%rsi
   3426b:	49 89 f3             	mov    %rsi,%r11
   3426e:	49 f7 db             	neg    %r11
   34271:	4c 0f 4c de          	cmovl  %rsi,%r11
   34275:	b8 27 00 00 00       	mov    $0x27,%eax
   3427a:	49 81 fb 10 27 00 00 	cmp    $0x2710,%r11
   34281:	0f 82 b3 00 00 00    	jb     3433a <core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt+0xda>
   34287:	b9 27 00 00 00       	mov    $0x27,%ecx
   3428c:	49 b8 4b 59 86 38 d6 	movabs $0x346dc5d63886594b,%r8
   34293:	c5 6d 34 
   34296:	4c 8d 0d e2 5c 00 00 	lea    0x5ce2(%rip),%r9        # 39f7f <str.1+0x13f>
   3429d:	0f 1f 00             	nopl   (%rax)
   342a0:	4c 89 d8             	mov    %r11,%rax
   342a3:	49 f7 e0             	mul    %r8
   342a6:	48 c1 ea 0b          	shr    $0xb,%rdx
   342aa:	69 c2 10 27 00 00    	imul   $0x2710,%edx,%eax
   342b0:	44 89 df             	mov    %r11d,%edi
   342b3:	29 c7                	sub    %eax,%edi
   342b5:	0f b7 c7             	movzwl %di,%eax
   342b8:	c1 e8 02             	shr    $0x2,%eax
   342bb:	69 d8 7b 14 00 00    	imul   $0x147b,%eax,%ebx
   342c1:	c1 eb 11             	shr    $0x11,%ebx
   342c4:	6b c3 64             	imul   $0x64,%ebx,%eax
   342c7:	29 c7                	sub    %eax,%edi
   342c9:	0f b7 ff             	movzwl %di,%edi
   342cc:	48 8d 41 fc          	lea    -0x4(%rcx),%rax
   342d0:	41 0f b7 1c 59       	movzwl (%r9,%rbx,2),%ebx
   342d5:	66 89 5c 0c 05       	mov    %bx,0x5(%rsp,%rcx,1)
   342da:	41 0f b7 3c 79       	movzwl (%r9,%rdi,2),%edi
   342df:	66 89 7c 0c 07       	mov    %di,0x7(%rsp,%rcx,1)
   342e4:	48 89 c1             	mov    %rax,%rcx
   342e7:	49 81 fb ff e0 f5 05 	cmp    $0x5f5e0ff,%r11
   342ee:	49 89 d3             	mov    %rdx,%r11
   342f1:	77 ad                	ja     342a0 <core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt+0x40>
   342f3:	48 83 fa 63          	cmp    $0x63,%rdx
   342f7:	76 2e                	jbe    34327 <core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt+0xc7>
   342f9:	0f b7 ca             	movzwl %dx,%ecx
   342fc:	c1 e9 02             	shr    $0x2,%ecx
   342ff:	69 c9 7b 14 00 00    	imul   $0x147b,%ecx,%ecx
   34305:	c1 e9 11             	shr    $0x11,%ecx
   34308:	6b f9 64             	imul   $0x64,%ecx,%edi
   3430b:	29 fa                	sub    %edi,%edx
   3430d:	0f b7 d2             	movzwl %dx,%edx
   34310:	48 8d 3d 68 5c 00 00 	lea    0x5c68(%rip),%rdi        # 39f7f <str.1+0x13f>
   34317:	0f b7 14 57          	movzwl (%rdi,%rdx,2),%edx
   3431b:	66 89 54 04 07       	mov    %dx,0x7(%rsp,%rax,1)
   34320:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
   34324:	48 89 ca             	mov    %rcx,%rdx
   34327:	48 83 fa 0a          	cmp    $0xa,%rdx
   3432b:	7d 18                	jge    34345 <core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt+0xe5>
   3432d:	80 c2 30             	add    $0x30,%dl
   34330:	88 54 04 08          	mov    %dl,0x8(%rsp,%rax,1)
   34334:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
   34338:	eb 1f                	jmp    34359 <core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt+0xf9>
   3433a:	4c 89 da             	mov    %r11,%rdx
   3433d:	48 83 fa 63          	cmp    $0x63,%rdx
   34341:	77 b6                	ja     342f9 <core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt+0x99>
   34343:	eb e2                	jmp    34327 <core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt+0xc7>
   34345:	48 8d 0d 33 5c 00 00 	lea    0x5c33(%rip),%rcx        # 39f7f <str.1+0x13f>
   3434c:	0f b7 0c 51          	movzwl (%rcx,%rdx,2),%ecx
   34350:	66 89 4c 04 07       	mov    %cx,0x7(%rsp,%rax,1)
   34355:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
   34359:	4c 8d 04 04          	lea    (%rsp,%rax,1),%r8
   3435d:	49 83 c0 09          	add    $0x9,%r8
   34361:	41 b9 27 00 00 00    	mov    $0x27,%r9d
   34367:	49 29 c1             	sub    %rax,%r9
   3436a:	f7 d6                	not    %esi
   3436c:	c1 ee 1f             	shr    $0x1f,%esi
   3436f:	48 8d 15 ba 5a 00 00 	lea    0x5aba(%rip),%rdx        # 39e30 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x2e0>
   34376:	4c 89 d7             	mov    %r10,%rdi
   34379:	31 c9                	xor    %ecx,%ecx
   3437b:	ff 15 4f 16 01 00    	callq  *0x1164f(%rip)        # 459d0 <_GLOBAL_OFFSET_TABLE_+0x40>
   34381:	48 83 c4 30          	add    $0x30,%rsp
   34385:	5b                   	pop    %rbx
   34386:	c3                   	retq   
   34387:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   3438e:	00 00 

0000000000034390 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt>:
   34390:	48 83 ec 28          	sub    $0x28,%rsp
   34394:	49 89 f2             	mov    %rsi,%r10
   34397:	44 8b 1f             	mov    (%rdi),%r11d
   3439a:	b9 27 00 00 00       	mov    $0x27,%ecx
   3439f:	49 81 fb 10 27 00 00 	cmp    $0x2710,%r11
   343a6:	0f 82 bd 00 00 00    	jb     34469 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt+0xd9>
   343ac:	bf 27 00 00 00       	mov    $0x27,%edi
   343b1:	49 b8 4b 59 86 38 d6 	movabs $0x346dc5d63886594b,%r8
   343b8:	c5 6d 34 
   343bb:	4c 8d 0d bd 5b 00 00 	lea    0x5bbd(%rip),%r9        # 39f7f <str.1+0x13f>
   343c2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   343c9:	00 00 00 
   343cc:	0f 1f 40 00          	nopl   0x0(%rax)
   343d0:	4c 89 d8             	mov    %r11,%rax
   343d3:	49 f7 e0             	mul    %r8
   343d6:	48 c1 ea 0b          	shr    $0xb,%rdx
   343da:	69 c2 10 27 00 00    	imul   $0x2710,%edx,%eax
   343e0:	44 89 d9             	mov    %r11d,%ecx
   343e3:	29 c1                	sub    %eax,%ecx
   343e5:	0f b7 c1             	movzwl %cx,%eax
   343e8:	c1 e8 02             	shr    $0x2,%eax
   343eb:	69 c0 7b 14 00 00    	imul   $0x147b,%eax,%eax
   343f1:	c1 e8 11             	shr    $0x11,%eax
   343f4:	6b f0 64             	imul   $0x64,%eax,%esi
   343f7:	29 f1                	sub    %esi,%ecx
   343f9:	0f b7 f1             	movzwl %cx,%esi
   343fc:	48 8d 4f fc          	lea    -0x4(%rdi),%rcx
   34400:	41 0f b7 04 41       	movzwl (%r9,%rax,2),%eax
   34405:	66 89 44 3c fd       	mov    %ax,-0x3(%rsp,%rdi,1)
   3440a:	41 0f b7 04 71       	movzwl (%r9,%rsi,2),%eax
   3440f:	66 89 44 3c ff       	mov    %ax,-0x1(%rsp,%rdi,1)
   34414:	48 89 cf             	mov    %rcx,%rdi
   34417:	49 81 fb ff e0 f5 05 	cmp    $0x5f5e0ff,%r11
   3441e:	49 89 d3             	mov    %rdx,%r11
   34421:	77 ad                	ja     343d0 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt+0x40>
   34423:	48 83 fa 63          	cmp    $0x63,%rdx
   34427:	76 2e                	jbe    34457 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt+0xc7>
   34429:	0f b7 c2             	movzwl %dx,%eax
   3442c:	c1 e8 02             	shr    $0x2,%eax
   3442f:	69 c0 7b 14 00 00    	imul   $0x147b,%eax,%eax
   34435:	c1 e8 11             	shr    $0x11,%eax
   34438:	6b f0 64             	imul   $0x64,%eax,%esi
   3443b:	29 f2                	sub    %esi,%edx
   3443d:	0f b7 d2             	movzwl %dx,%edx
   34440:	48 8d 35 38 5b 00 00 	lea    0x5b38(%rip),%rsi        # 39f7f <str.1+0x13f>
   34447:	0f b7 14 56          	movzwl (%rsi,%rdx,2),%edx
   3444b:	66 89 54 0c ff       	mov    %dx,-0x1(%rsp,%rcx,1)
   34450:	48 83 c1 fe          	add    $0xfffffffffffffffe,%rcx
   34454:	48 89 c2             	mov    %rax,%rdx
   34457:	48 83 fa 0a          	cmp    $0xa,%rdx
   3445b:	7d 17                	jge    34474 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt+0xe4>
   3445d:	80 c2 30             	add    $0x30,%dl
   34460:	88 14 0c             	mov    %dl,(%rsp,%rcx,1)
   34463:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
   34467:	eb 1f                	jmp    34488 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt+0xf8>
   34469:	4c 89 da             	mov    %r11,%rdx
   3446c:	48 83 fa 63          	cmp    $0x63,%rdx
   34470:	77 b7                	ja     34429 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt+0x99>
   34472:	eb e3                	jmp    34457 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt+0xc7>
   34474:	48 8d 05 04 5b 00 00 	lea    0x5b04(%rip),%rax        # 39f7f <str.1+0x13f>
   3447b:	0f b7 04 50          	movzwl (%rax,%rdx,2),%eax
   3447f:	66 89 44 0c ff       	mov    %ax,-0x1(%rsp,%rcx,1)
   34484:	48 83 c1 fe          	add    $0xfffffffffffffffe,%rcx
   34488:	4c 8d 04 0c          	lea    (%rsp,%rcx,1),%r8
   3448c:	49 83 c0 01          	add    $0x1,%r8
   34490:	41 b9 27 00 00 00    	mov    $0x27,%r9d
   34496:	49 29 c9             	sub    %rcx,%r9
   34499:	48 8d 15 90 59 00 00 	lea    0x5990(%rip),%rdx        # 39e30 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x2e0>
   344a0:	4c 89 d7             	mov    %r10,%rdi
   344a3:	be 01 00 00 00       	mov    $0x1,%esi
   344a8:	31 c9                	xor    %ecx,%ecx
   344aa:	ff 15 20 15 01 00    	callq  *0x11520(%rip)        # 459d0 <_GLOBAL_OFFSET_TABLE_+0x40>
   344b0:	48 83 c4 28          	add    $0x28,%rsp
   344b4:	c3                   	retq   
   344b5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   344bc:	00 00 00 
   344bf:	90                   	nop

00000000000344c0 <core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt>:
   344c0:	48 83 ec 28          	sub    $0x28,%rsp
   344c4:	49 89 f2             	mov    %rsi,%r10
   344c7:	4c 8b 1f             	mov    (%rdi),%r11
   344ca:	b9 27 00 00 00       	mov    $0x27,%ecx
   344cf:	49 81 fb 10 27 00 00 	cmp    $0x2710,%r11
   344d6:	0f 82 bd 00 00 00    	jb     34599 <core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt+0xd9>
   344dc:	bf 27 00 00 00       	mov    $0x27,%edi
   344e1:	49 b8 4b 59 86 38 d6 	movabs $0x346dc5d63886594b,%r8
   344e8:	c5 6d 34 
   344eb:	4c 8d 0d 8d 5a 00 00 	lea    0x5a8d(%rip),%r9        # 39f7f <str.1+0x13f>
   344f2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   344f9:	00 00 00 
   344fc:	0f 1f 40 00          	nopl   0x0(%rax)
   34500:	4c 89 d8             	mov    %r11,%rax
   34503:	49 f7 e0             	mul    %r8
   34506:	48 c1 ea 0b          	shr    $0xb,%rdx
   3450a:	69 c2 10 27 00 00    	imul   $0x2710,%edx,%eax
   34510:	44 89 d9             	mov    %r11d,%ecx
   34513:	29 c1                	sub    %eax,%ecx
   34515:	0f b7 c1             	movzwl %cx,%eax
   34518:	c1 e8 02             	shr    $0x2,%eax
   3451b:	69 c0 7b 14 00 00    	imul   $0x147b,%eax,%eax
   34521:	c1 e8 11             	shr    $0x11,%eax
   34524:	6b f0 64             	imul   $0x64,%eax,%esi
   34527:	29 f1                	sub    %esi,%ecx
   34529:	0f b7 f1             	movzwl %cx,%esi
   3452c:	48 8d 4f fc          	lea    -0x4(%rdi),%rcx
   34530:	41 0f b7 04 41       	movzwl (%r9,%rax,2),%eax
   34535:	66 89 44 3c fd       	mov    %ax,-0x3(%rsp,%rdi,1)
   3453a:	41 0f b7 04 71       	movzwl (%r9,%rsi,2),%eax
   3453f:	66 89 44 3c ff       	mov    %ax,-0x1(%rsp,%rdi,1)
   34544:	48 89 cf             	mov    %rcx,%rdi
   34547:	49 81 fb ff e0 f5 05 	cmp    $0x5f5e0ff,%r11
   3454e:	49 89 d3             	mov    %rdx,%r11
   34551:	77 ad                	ja     34500 <core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt+0x40>
   34553:	48 83 fa 63          	cmp    $0x63,%rdx
   34557:	7e 2e                	jle    34587 <core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt+0xc7>
   34559:	0f b7 c2             	movzwl %dx,%eax
   3455c:	c1 e8 02             	shr    $0x2,%eax
   3455f:	69 c0 7b 14 00 00    	imul   $0x147b,%eax,%eax
   34565:	c1 e8 11             	shr    $0x11,%eax
   34568:	6b f0 64             	imul   $0x64,%eax,%esi
   3456b:	29 f2                	sub    %esi,%edx
   3456d:	0f b7 d2             	movzwl %dx,%edx
   34570:	48 8d 35 08 5a 00 00 	lea    0x5a08(%rip),%rsi        # 39f7f <str.1+0x13f>
   34577:	0f b7 14 56          	movzwl (%rsi,%rdx,2),%edx
   3457b:	66 89 54 0c ff       	mov    %dx,-0x1(%rsp,%rcx,1)
   34580:	48 83 c1 fe          	add    $0xfffffffffffffffe,%rcx
   34584:	48 89 c2             	mov    %rax,%rdx
   34587:	48 83 fa 0a          	cmp    $0xa,%rdx
   3458b:	7d 17                	jge    345a4 <core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt+0xe4>
   3458d:	80 c2 30             	add    $0x30,%dl
   34590:	88 14 0c             	mov    %dl,(%rsp,%rcx,1)
   34593:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
   34597:	eb 1f                	jmp    345b8 <core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt+0xf8>
   34599:	4c 89 da             	mov    %r11,%rdx
   3459c:	48 83 fa 63          	cmp    $0x63,%rdx
   345a0:	7f b7                	jg     34559 <core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt+0x99>
   345a2:	eb e3                	jmp    34587 <core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt+0xc7>
   345a4:	48 8d 05 d4 59 00 00 	lea    0x59d4(%rip),%rax        # 39f7f <str.1+0x13f>
   345ab:	0f b7 04 50          	movzwl (%rax,%rdx,2),%eax
   345af:	66 89 44 0c ff       	mov    %ax,-0x1(%rsp,%rcx,1)
   345b4:	48 83 c1 fe          	add    $0xfffffffffffffffe,%rcx
   345b8:	4c 8d 04 0c          	lea    (%rsp,%rcx,1),%r8
   345bc:	49 83 c0 01          	add    $0x1,%r8
   345c0:	41 b9 27 00 00 00    	mov    $0x27,%r9d
   345c6:	49 29 c9             	sub    %rcx,%r9
   345c9:	48 8d 15 60 58 00 00 	lea    0x5860(%rip),%rdx        # 39e30 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x2e0>
   345d0:	4c 89 d7             	mov    %r10,%rdi
   345d3:	be 01 00 00 00       	mov    $0x1,%esi
   345d8:	31 c9                	xor    %ecx,%ecx
   345da:	ff 15 f0 13 01 00    	callq  *0x113f0(%rip)        # 459d0 <_GLOBAL_OFFSET_TABLE_+0x40>
   345e0:	48 83 c4 28          	add    $0x28,%rsp
   345e4:	c3                   	retq   
   345e5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   345ec:	00 00 00 
   345ef:	90                   	nop

00000000000345f0 <<&T as core::fmt::Debug>::fmt>:
   345f0:	48 8b 3f             	mov    (%rdi),%rdi
   345f3:	e9 b8 f9 ff ff       	jmpq   33fb0 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt>
   345f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   345ff:	00 

0000000000034600 <<&T as core::fmt::Debug>::fmt>:
   34600:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
   34607:	48 8b 07             	mov    (%rdi),%rax
   3460a:	8b 4e 30             	mov    0x30(%rsi),%ecx
   3460d:	f6 c1 10             	test   $0x10,%cl
   34610:	75 40                	jne    34652 <<&T as core::fmt::Debug>::fmt+0x52>
   34612:	8a 00                	mov    (%rax),%al
   34614:	f6 c1 20             	test   $0x20,%cl
   34617:	75 74                	jne    3468d <<&T as core::fmt::Debug>::fmt+0x8d>
   34619:	0f b6 d0             	movzbl %al,%edx
   3461c:	80 fa 64             	cmp    $0x64,%dl
   3461f:	0f 82 d9 00 00 00    	jb     346fe <<&T as core::fmt::Debug>::fmt+0xfe>
   34625:	8d 0c 92             	lea    (%rdx,%rdx,4),%ecx
   34628:	8d 14 ca             	lea    (%rdx,%rcx,8),%edx
   3462b:	c1 ea 0c             	shr    $0xc,%edx
   3462e:	6b ca 64             	imul   $0x64,%edx,%ecx
   34631:	28 c8                	sub    %cl,%al
   34633:	0f b6 c0             	movzbl %al,%eax
   34636:	48 8d 0d 42 59 00 00 	lea    0x5942(%rip),%rcx        # 39f7f <str.1+0x13f>
   3463d:	0f b7 04 41          	movzwl (%rcx,%rax,2),%eax
   34641:	66 89 44 24 2d       	mov    %ax,0x2d(%rsp)
   34646:	b9 24 00 00 00       	mov    $0x24,%ecx
   3464b:	89 d0                	mov    %edx,%eax
   3464d:	e9 b5 00 00 00       	jmpq   34707 <<&T as core::fmt::Debug>::fmt+0x107>
   34652:	8a 00                	mov    (%rax),%al
   34654:	4c 8d 84 24 88 00 00 	lea    0x88(%rsp),%r8
   3465b:	00 
   3465c:	45 31 c9             	xor    %r9d,%r9d
   3465f:	90                   	nop
   34660:	89 c1                	mov    %eax,%ecx
   34662:	80 e1 0f             	and    $0xf,%cl
   34665:	c0 e8 04             	shr    $0x4,%al
   34668:	8d 51 30             	lea    0x30(%rcx),%edx
   3466b:	8d 79 57             	lea    0x57(%rcx),%edi
   3466e:	80 f9 0a             	cmp    $0xa,%cl
   34671:	0f b6 ca             	movzbl %dl,%ecx
   34674:	40 0f b6 d7          	movzbl %dil,%edx
   34678:	0f 42 d1             	cmovb  %ecx,%edx
   3467b:	41 88 50 ff          	mov    %dl,-0x1(%r8)
   3467f:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   34683:	49 83 c1 01          	add    $0x1,%r9
   34687:	84 c0                	test   %al,%al
   34689:	75 d5                	jne    34660 <<&T as core::fmt::Debug>::fmt+0x60>
   3468b:	eb 3e                	jmp    346cb <<&T as core::fmt::Debug>::fmt+0xcb>
   3468d:	4c 8d 84 24 88 00 00 	lea    0x88(%rsp),%r8
   34694:	00 
   34695:	45 31 c9             	xor    %r9d,%r9d
   34698:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   3469f:	00 
   346a0:	89 c1                	mov    %eax,%ecx
   346a2:	80 e1 0f             	and    $0xf,%cl
   346a5:	c0 e8 04             	shr    $0x4,%al
   346a8:	8d 51 30             	lea    0x30(%rcx),%edx
   346ab:	8d 79 37             	lea    0x37(%rcx),%edi
   346ae:	80 f9 0a             	cmp    $0xa,%cl
   346b1:	0f b6 ca             	movzbl %dl,%ecx
   346b4:	40 0f b6 d7          	movzbl %dil,%edx
   346b8:	0f 42 d1             	cmovb  %ecx,%edx
   346bb:	41 88 50 ff          	mov    %dl,-0x1(%r8)
   346bf:	49 83 c0 ff          	add    $0xffffffffffffffff,%r8
   346c3:	49 83 c1 01          	add    $0x1,%r9
   346c7:	84 c0                	test   %al,%al
   346c9:	75 d5                	jne    346a0 <<&T as core::fmt::Debug>::fmt+0xa0>
   346cb:	bf 80 00 00 00       	mov    $0x80,%edi
   346d0:	4c 29 cf             	sub    %r9,%rdi
   346d3:	48 81 ff 81 00 00 00 	cmp    $0x81,%rdi
   346da:	73 78                	jae    34754 <<&T as core::fmt::Debug>::fmt+0x154>
   346dc:	48 8d 15 9a 58 00 00 	lea    0x589a(%rip),%rdx        # 39f7d <str.1+0x13d>
   346e3:	b9 02 00 00 00       	mov    $0x2,%ecx
   346e8:	48 89 f7             	mov    %rsi,%rdi
   346eb:	be 01 00 00 00       	mov    $0x1,%esi
   346f0:	ff 15 da 12 01 00    	callq  *0x112da(%rip)        # 459d0 <_GLOBAL_OFFSET_TABLE_+0x40>
   346f6:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   346fd:	c3                   	retq   
   346fe:	b9 26 00 00 00       	mov    $0x26,%ecx
   34703:	3c 0a                	cmp    $0xa,%al
   34705:	73 08                	jae    3470f <<&T as core::fmt::Debug>::fmt+0x10f>
   34707:	04 30                	add    $0x30,%al
   34709:	88 44 0c 08          	mov    %al,0x8(%rsp,%rcx,1)
   3470d:	eb 15                	jmp    34724 <<&T as core::fmt::Debug>::fmt+0x124>
   3470f:	48 8d 05 69 58 00 00 	lea    0x5869(%rip),%rax        # 39f7f <str.1+0x13f>
   34716:	0f b7 04 50          	movzwl (%rax,%rdx,2),%eax
   3471a:	66 89 44 24 2d       	mov    %ax,0x2d(%rsp)
   3471f:	b9 25 00 00 00       	mov    $0x25,%ecx
   34724:	4c 8d 04 0c          	lea    (%rsp,%rcx,1),%r8
   34728:	49 83 c0 08          	add    $0x8,%r8
   3472c:	41 b9 27 00 00 00    	mov    $0x27,%r9d
   34732:	49 29 c9             	sub    %rcx,%r9
   34735:	48 8d 15 f4 56 00 00 	lea    0x56f4(%rip),%rdx        # 39e30 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x2e0>
   3473c:	48 89 f7             	mov    %rsi,%rdi
   3473f:	be 01 00 00 00       	mov    $0x1,%esi
   34744:	31 c9                	xor    %ecx,%ecx
   34746:	ff 15 84 12 01 00    	callq  *0x11284(%rip)        # 459d0 <_GLOBAL_OFFSET_TABLE_+0x40>
   3474c:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
   34753:	c3                   	retq   
   34754:	48 8d 15 3d 0b 01 00 	lea    0x10b3d(%rip),%rdx        # 45298 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1d40>
   3475b:	be 80 00 00 00       	mov    $0x80,%esi
   34760:	ff 15 92 16 01 00    	callq  *0x11692(%rip)        # 45df8 <_GLOBAL_OFFSET_TABLE_+0x468>
   34766:	0f 0b                	ud2    
   34768:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   3476f:	00 

0000000000034770 <<&T as core::fmt::Debug>::fmt>:
   34770:	48 8b 07             	mov    (%rdi),%rax
   34773:	0f b6 00             	movzbl (%rax),%eax
   34776:	48 8d 0d 9b 56 00 00 	lea    0x569b(%rip),%rcx        # 39e18 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x2c8>
   3477d:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   34781:	48 01 c8             	add    %rcx,%rax
   34784:	ff e0                	jmpq   *%rax
   34786:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
   3478a:	48 8b 46 28          	mov    0x28(%rsi),%rax
   3478e:	48 8b 40 18          	mov    0x18(%rax),%rax
   34792:	48 8d 35 43 61 00 00 	lea    0x6143(%rip),%rsi        # 3a8dc <core::str::validations::UTF8_CHAR_WIDTH+0x7e3>
   34799:	ba 05 00 00 00       	mov    $0x5,%edx
   3479e:	ff e0                	jmpq   *%rax
   347a0:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
   347a4:	48 8b 46 28          	mov    0x28(%rsi),%rax
   347a8:	48 8b 40 18          	mov    0x18(%rax),%rax
   347ac:	48 8d 35 44 61 00 00 	lea    0x6144(%rip),%rsi        # 3a8f7 <core::str::validations::UTF8_CHAR_WIDTH+0x7fe>
   347b3:	ba 0c 00 00 00       	mov    $0xc,%edx
   347b8:	ff e0                	jmpq   *%rax
   347ba:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
   347be:	48 8b 46 28          	mov    0x28(%rsi),%rax
   347c2:	48 8b 40 18          	mov    0x18(%rax),%rax
   347c6:	48 8d 35 53 54 00 00 	lea    0x5453(%rip),%rsi        # 39c20 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0xd0>
   347cd:	ba 08 00 00 00       	mov    $0x8,%edx
   347d2:	ff e0                	jmpq   *%rax
   347d4:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
   347d8:	48 8b 46 28          	mov    0x28(%rsi),%rax
   347dc:	48 8b 40 18          	mov    0x18(%rax),%rax
   347e0:	48 8d 35 07 61 00 00 	lea    0x6107(%rip),%rsi        # 3a8ee <core::str::validations::UTF8_CHAR_WIDTH+0x7f5>
   347e7:	ba 09 00 00 00       	mov    $0x9,%edx
   347ec:	ff e0                	jmpq   *%rax
   347ee:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
   347f2:	48 8b 46 28          	mov    0x28(%rsi),%rax
   347f6:	48 8b 40 18          	mov    0x18(%rax),%rax
   347fa:	48 8d 35 7f 53 00 00 	lea    0x537f(%rip),%rsi        # 39b80 <core::unicode::unicode_data::white_space::SHORT_OFFSET_RUNS+0x30>
   34801:	ba 04 00 00 00       	mov    $0x4,%edx
   34806:	ff e0                	jmpq   *%rax
   34808:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   3480f:	00 

0000000000034810 <<&T as core::fmt::Debug>::fmt>:
   34810:	48 8b 07             	mov    (%rdi),%rax
   34813:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
   34817:	48 8b 49 18          	mov    0x18(%rcx),%rcx
   3481b:	48 89 c7             	mov    %rax,%rdi
   3481e:	ff e1                	jmpq   *%rcx

0000000000034820 <<&T as core::fmt::Debug>::fmt>:
   34820:	41 56                	push   %r14
   34822:	53                   	push   %rbx
   34823:	48 83 ec 28          	sub    $0x28,%rsp
   34827:	48 89 f3             	mov    %rsi,%rbx
   3482a:	4c 8b 37             	mov    (%rdi),%r14
   3482d:	41 80 3e 01          	cmpb   $0x1,(%r14)
   34831:	0f 85 c1 00 00 00    	jne    348f8 <<&T as core::fmt::Debug>::fmt+0xd8>
   34837:	49 83 c6 01          	add    $0x1,%r14
   3483b:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   3483f:	48 8b 43 28          	mov    0x28(%rbx),%rax
   34843:	48 8d 35 12 2f 00 00 	lea    0x2f12(%rip),%rsi        # 3775c <str.6+0x43c>
   3484a:	ba 04 00 00 00       	mov    $0x4,%edx
   3484f:	ff 50 18             	callq  *0x18(%rax)
   34852:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   34857:	88 44 24 18          	mov    %al,0x18(%rsp)
   3485b:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   34862:	00 00 
   34864:	c6 44 24 19 00       	movb   $0x0,0x19(%rsp)
   34869:	4c 89 74 24 20       	mov    %r14,0x20(%rsp)
   3486e:	48 8d 15 03 0a 01 00 	lea    0x10a03(%rip),%rdx        # 45278 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x1d20>
   34875:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   3487a:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
   3487f:	ff 15 b3 14 01 00    	callq  *0x114b3(%rip)        # 45d38 <_GLOBAL_OFFSET_TABLE_+0x3a8>
   34885:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   3488a:	8a 44 24 18          	mov    0x18(%rsp),%al
   3488e:	48 85 c9             	test   %rcx,%rcx
   34891:	74 5d                	je     348f0 <<&T as core::fmt::Debug>::fmt+0xd0>
   34893:	b3 01                	mov    $0x1,%bl
   34895:	84 c0                	test   %al,%al
   34897:	75 51                	jne    348ea <<&T as core::fmt::Debug>::fmt+0xca>
   34899:	48 83 f9 01          	cmp    $0x1,%rcx
   3489d:	75 2d                	jne    348cc <<&T as core::fmt::Debug>::fmt+0xac>
   3489f:	80 7c 24 19 00       	cmpb   $0x0,0x19(%rsp)
   348a4:	74 26                	je     348cc <<&T as core::fmt::Debug>::fmt+0xac>
   348a6:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   348ab:	f6 40 30 04          	testb  $0x4,0x30(%rax)
   348af:	75 1b                	jne    348cc <<&T as core::fmt::Debug>::fmt+0xac>
   348b1:	48 8b 78 20          	mov    0x20(%rax),%rdi
   348b5:	48 8b 40 28          	mov    0x28(%rax),%rax
   348b9:	48 8d 35 9d 56 00 00 	lea    0x569d(%rip),%rsi        # 39f5d <str.1+0x11d>
   348c0:	ba 01 00 00 00       	mov    $0x1,%edx
   348c5:	ff 50 18             	callq  *0x18(%rax)
   348c8:	84 c0                	test   %al,%al
   348ca:	75 1e                	jne    348ea <<&T as core::fmt::Debug>::fmt+0xca>
   348cc:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   348d1:	48 8b 78 20          	mov    0x20(%rax),%rdi
   348d5:	48 8b 40 28          	mov    0x28(%rax),%rax
   348d9:	48 8d 35 7e 56 00 00 	lea    0x567e(%rip),%rsi        # 39f5e <str.1+0x11e>
   348e0:	ba 01 00 00 00       	mov    $0x1,%edx
   348e5:	ff 50 18             	callq  *0x18(%rax)
   348e8:	89 c3                	mov    %eax,%ebx
   348ea:	88 5c 24 18          	mov    %bl,0x18(%rsp)
   348ee:	89 d8                	mov    %ebx,%eax
   348f0:	48 83 c4 28          	add    $0x28,%rsp
   348f4:	5b                   	pop    %rbx
   348f5:	41 5e                	pop    %r14
   348f7:	c3                   	retq   
   348f8:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   348fc:	48 8b 43 28          	mov    0x28(%rbx),%rax
   34900:	48 8b 40 18          	mov    0x18(%rax),%rax
   34904:	48 8d 35 55 2e 00 00 	lea    0x2e55(%rip),%rsi        # 37760 <str.6+0x440>
   3490b:	ba 04 00 00 00       	mov    $0x4,%edx
   34910:	48 83 c4 28          	add    $0x28,%rsp
   34914:	5b                   	pop    %rbx
   34915:	41 5e                	pop    %r14
   34917:	ff e0                	jmpq   *%rax
   34919:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000034920 <<&T as core::fmt::Display>::fmt>:
   34920:	48 89 f0             	mov    %rsi,%rax
   34923:	48 8b 37             	mov    (%rdi),%rsi
   34926:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   3492a:	48 89 c7             	mov    %rax,%rdi
   3492d:	ff 25 dd 13 01 00    	jmpq   *0x113dd(%rip)        # 45d10 <_GLOBAL_OFFSET_TABLE_+0x380>
   34933:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3493a:	00 00 00 
   3493d:	0f 1f 00             	nopl   (%rax)

0000000000034940 <<core::str::error::Utf8Error as core::fmt::Debug>::fmt>:
   34940:	41 57                	push   %r15
   34942:	41 56                	push   %r14
   34944:	53                   	push   %rbx
   34945:	48 83 ec 20          	sub    $0x20,%rsp
   34949:	48 89 f3             	mov    %rsi,%rbx
   3494c:	49 89 fe             	mov    %rdi,%r14
   3494f:	4c 8d 7f 08          	lea    0x8(%rdi),%r15
   34953:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
   34957:	48 8b 46 28          	mov    0x28(%rsi),%rax
   3495b:	48 8d 35 a1 5f 00 00 	lea    0x5fa1(%rip),%rsi        # 3a903 <core::str::validations::UTF8_CHAR_WIDTH+0x80a>
   34962:	ba 09 00 00 00       	mov    $0x9,%edx
   34967:	ff 50 18             	callq  *0x18(%rax)
   3496a:	0f b6 c0             	movzbl %al,%eax
   3496d:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
   34972:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   34977:	4c 89 74 24 08       	mov    %r14,0x8(%rsp)
   3497c:	48 8d 35 89 5f 00 00 	lea    0x5f89(%rip),%rsi        # 3a90c <core::str::validations::UTF8_CHAR_WIDTH+0x813>
   34983:	4c 8d 05 76 0d 01 00 	lea    0x10d76(%rip),%r8        # 45700 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x21a8>
   3498a:	4c 8d 35 6f b2 ff ff 	lea    -0x4d91(%rip),%r14        # 2fc00 <core::fmt::builders::DebugStruct::field>
   34991:	48 8d 5c 24 10       	lea    0x10(%rsp),%rbx
   34996:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
   3499b:	ba 0b 00 00 00       	mov    $0xb,%edx
   349a0:	48 89 df             	mov    %rbx,%rdi
   349a3:	41 ff d6             	callq  *%r14
   349a6:	4c 89 7c 24 08       	mov    %r15,0x8(%rsp)
   349ab:	48 8d 35 65 5f 00 00 	lea    0x5f65(%rip),%rsi        # 3a917 <core::str::validations::UTF8_CHAR_WIDTH+0x81e>
   349b2:	4c 8d 05 87 0d 01 00 	lea    0x10d87(%rip),%r8        # 45740 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x21e8>
   349b9:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
   349be:	ba 09 00 00 00       	mov    $0x9,%edx
   349c3:	48 89 df             	mov    %rbx,%rdi
   349c6:	41 ff d6             	callq  *%r14
   349c9:	80 7c 24 19 00       	cmpb   $0x0,0x19(%rsp)
   349ce:	8a 44 24 18          	mov    0x18(%rsp),%al
   349d2:	74 3d                	je     34a11 <<core::str::error::Utf8Error as core::fmt::Debug>::fmt+0xd1>
   349d4:	84 c0                	test   %al,%al
   349d6:	b0 01                	mov    $0x1,%al
   349d8:	75 33                	jne    34a0d <<core::str::error::Utf8Error as core::fmt::Debug>::fmt+0xcd>
   349da:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   349df:	f6 40 30 04          	testb  $0x4,0x30(%rax)
   349e3:	48 8b 78 20          	mov    0x20(%rax),%rdi
   349e7:	48 8b 40 28          	mov    0x28(%rax),%rax
   349eb:	48 8b 40 18          	mov    0x18(%rax),%rax
   349ef:	75 0e                	jne    349ff <<core::str::error::Utf8Error as core::fmt::Debug>::fmt+0xbf>
   349f1:	48 8d 35 60 55 00 00 	lea    0x5560(%rip),%rsi        # 39f58 <str.1+0x118>
   349f8:	ba 02 00 00 00       	mov    $0x2,%edx
   349fd:	eb 0c                	jmp    34a0b <<core::str::error::Utf8Error as core::fmt::Debug>::fmt+0xcb>
   349ff:	48 8d 35 51 55 00 00 	lea    0x5551(%rip),%rsi        # 39f57 <str.1+0x117>
   34a06:	ba 01 00 00 00       	mov    $0x1,%edx
   34a0b:	ff d0                	callq  *%rax
   34a0d:	88 44 24 18          	mov    %al,0x18(%rsp)
   34a11:	48 83 c4 20          	add    $0x20,%rsp
   34a15:	5b                   	pop    %rbx
   34a16:	41 5e                	pop    %r14
   34a18:	41 5f                	pop    %r15
   34a1a:	c3                   	retq   
   34a1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000034a20 <core::unicode::unicode_data::cc::lookup>:
   34a20:	83 ff 20             	cmp    $0x20,%edi
   34a23:	73 03                	jae    34a28 <core::unicode::unicode_data::cc::lookup+0x8>
   34a25:	b0 01                	mov    $0x1,%al
   34a27:	c3                   	retq   
   34a28:	83 c7 81             	add    $0xffffff81,%edi
   34a2b:	83 ff 21             	cmp    $0x21,%edi
   34a2e:	0f 92 c0             	setb   %al
   34a31:	c3                   	retq   
   34a32:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   34a39:	00 00 00 
   34a3c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000034a40 <core::unicode::unicode_data::grapheme_extend::lookup>:
   34a40:	50                   	push   %rax
   34a41:	89 f9                	mov    %edi,%ecx
   34a43:	c1 e1 0b             	shl    $0xb,%ecx
   34a46:	31 c0                	xor    %eax,%eax
   34a48:	81 ff 24 0d 01 00    	cmp    $0x10d24,%edi
   34a4e:	ba 0f 00 00 00       	mov    $0xf,%edx
   34a53:	48 0f 42 d0          	cmovb  %rax,%rdx
   34a57:	48 8d 42 08          	lea    0x8(%rdx),%rax
   34a5b:	4c 8d 05 be 5e 00 00 	lea    0x5ebe(%rip),%r8        # 3a920 <core::unicode::unicode_data::grapheme_extend::SHORT_OFFSET_RUNS>
   34a62:	41 8b 74 90 20       	mov    0x20(%r8,%rdx,4),%esi
   34a67:	c1 e6 0b             	shl    $0xb,%esi
   34a6a:	39 ce                	cmp    %ecx,%esi
   34a6c:	48 0f 47 c2          	cmova  %rdx,%rax
   34a70:	48 8d 50 04          	lea    0x4(%rax),%rdx
   34a74:	41 8b 74 80 10       	mov    0x10(%r8,%rax,4),%esi
   34a79:	c1 e6 0b             	shl    $0xb,%esi
   34a7c:	39 ce                	cmp    %ecx,%esi
   34a7e:	48 0f 47 d0          	cmova  %rax,%rdx
   34a82:	48 8d 42 02          	lea    0x2(%rdx),%rax
   34a86:	41 8b 74 90 08       	mov    0x8(%r8,%rdx,4),%esi
   34a8b:	c1 e6 0b             	shl    $0xb,%esi
   34a8e:	39 ce                	cmp    %ecx,%esi
   34a90:	48 0f 47 c2          	cmova  %rdx,%rax
   34a94:	48 8d 50 01          	lea    0x1(%rax),%rdx
   34a98:	41 8b 74 80 04       	mov    0x4(%r8,%rax,4),%esi
   34a9d:	c1 e6 0b             	shl    $0xb,%esi
   34aa0:	39 ce                	cmp    %ecx,%esi
   34aa2:	48 0f 47 d0          	cmova  %rax,%rdx
   34aa6:	41 8b 34 90          	mov    (%r8,%rdx,4),%esi
   34aaa:	c1 e6 0b             	shl    $0xb,%esi
   34aad:	31 c0                	xor    %eax,%eax
   34aaf:	39 ce                	cmp    %ecx,%esi
   34ab1:	0f 94 c0             	sete   %al
   34ab4:	48 83 d0 00          	adc    $0x0,%rax
   34ab8:	48 01 d0             	add    %rdx,%rax
   34abb:	48 83 f8 1e          	cmp    $0x1e,%rax
   34abf:	0f 87 a2 00 00 00    	ja     34b67 <core::unicode::unicode_data::grapheme_extend::lookup+0x127>
   34ac5:	41 b9 b1 02 00 00    	mov    $0x2b1,%r9d
   34acb:	48 83 f8 1e          	cmp    $0x1e,%rax
   34acf:	74 09                	je     34ada <core::unicode::unicode_data::grapheme_extend::lookup+0x9a>
   34ad1:	45 8b 4c 80 04       	mov    0x4(%r8,%rax,4),%r9d
   34ad6:	49 c1 e9 15          	shr    $0x15,%r9
   34ada:	31 d2                	xor    %edx,%edx
   34adc:	48 89 c1             	mov    %rax,%rcx
   34adf:	48 83 e9 01          	sub    $0x1,%rcx
   34ae3:	72 13                	jb     34af8 <core::unicode::unicode_data::grapheme_extend::lookup+0xb8>
   34ae5:	48 83 f9 1f          	cmp    $0x1f,%rcx
   34ae9:	0f 83 8f 00 00 00    	jae    34b7e <core::unicode::unicode_data::grapheme_extend::lookup+0x13e>
   34aef:	ba ff ff 1f 00       	mov    $0x1fffff,%edx
   34af4:	41 23 14 88          	and    (%r8,%rcx,4),%edx
   34af8:	41 8b 04 80          	mov    (%r8,%rax,4),%eax
   34afc:	48 c1 e8 15          	shr    $0x15,%rax
   34b00:	48 8d 48 01          	lea    0x1(%rax),%rcx
   34b04:	49 39 c9             	cmp    %rcx,%r9
   34b07:	74 43                	je     34b4c <core::unicode::unicode_data::grapheme_extend::lookup+0x10c>
   34b09:	29 d7                	sub    %edx,%edi
   34b0b:	48 3d b1 02 00 00    	cmp    $0x2b1,%rax
   34b11:	b9 b1 02 00 00       	mov    $0x2b1,%ecx
   34b16:	48 0f 47 c8          	cmova  %rax,%rcx
   34b1a:	49 83 c1 ff          	add    $0xffffffffffffffff,%r9
   34b1e:	31 d2                	xor    %edx,%edx
   34b20:	4c 8d 05 75 5e 00 00 	lea    0x5e75(%rip),%r8        # 3a99c <core::unicode::unicode_data::grapheme_extend::OFFSETS>
   34b27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   34b2e:	00 00 
   34b30:	48 39 c1             	cmp    %rax,%rcx
   34b33:	74 1b                	je     34b50 <core::unicode::unicode_data::grapheme_extend::lookup+0x110>
   34b35:	42 0f b6 34 00       	movzbl (%rax,%r8,1),%esi
   34b3a:	01 f2                	add    %esi,%edx
   34b3c:	39 fa                	cmp    %edi,%edx
   34b3e:	77 0c                	ja     34b4c <core::unicode::unicode_data::grapheme_extend::lookup+0x10c>
   34b40:	48 83 c0 01          	add    $0x1,%rax
   34b44:	49 39 c1             	cmp    %rax,%r9
   34b47:	75 e7                	jne    34b30 <core::unicode::unicode_data::grapheme_extend::lookup+0xf0>
   34b49:	4c 89 c8             	mov    %r9,%rax
   34b4c:	24 01                	and    $0x1,%al
   34b4e:	59                   	pop    %rcx
   34b4f:	c3                   	retq   
   34b50:	48 8d 15 79 0b 01 00 	lea    0x10b79(%rip),%rdx        # 456d0 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2178>
   34b57:	be b1 02 00 00       	mov    $0x2b1,%esi
   34b5c:	48 89 cf             	mov    %rcx,%rdi
   34b5f:	ff 15 33 11 01 00    	callq  *0x11133(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   34b65:	0f 0b                	ud2    
   34b67:	48 8d 15 4a 0b 01 00 	lea    0x10b4a(%rip),%rdx        # 456b8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2160>
   34b6e:	be 1f 00 00 00       	mov    $0x1f,%esi
   34b73:	48 89 c7             	mov    %rax,%rdi
   34b76:	ff 15 1c 11 01 00    	callq  *0x1111c(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   34b7c:	0f 0b                	ud2    
   34b7e:	48 8d 15 63 0b 01 00 	lea    0x10b63(%rip),%rdx        # 456e8 <anon.ba884165dbd12f0ef903bb9ecf4c9765.0.llvm.13585541832861257066+0x2190>
   34b85:	be 1f 00 00 00       	mov    $0x1f,%esi
   34b8a:	48 89 cf             	mov    %rcx,%rdi
   34b8d:	ff 15 05 11 01 00    	callq  *0x11105(%rip)        # 45c98 <_GLOBAL_OFFSET_TABLE_+0x308>
   34b93:	0f 0b                	ud2    
   34b95:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   34b9c:	00 00 00 
   34b9f:	90                   	nop

0000000000034ba0 <__udivti3>:
   34ba0:	45 31 c0             	xor    %r8d,%r8d
   34ba3:	e9 c8 00 00 00       	jmpq   34c70 <compiler_builtins::int::udiv::__udivmodti4>
   34ba8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   34baf:	00 

0000000000034bb0 <__divti3>:
   34bb0:	53                   	push   %rbx
   34bb1:	48 89 cb             	mov    %rcx,%rbx
   34bb4:	48 c1 fb 3f          	sar    $0x3f,%rbx
   34bb8:	48 31 d9             	xor    %rbx,%rcx
   34bbb:	48 31 da             	xor    %rbx,%rdx
   34bbe:	48 29 da             	sub    %rbx,%rdx
   34bc1:	48 19 d9             	sbb    %rbx,%rcx
   34bc4:	48 89 d0             	mov    %rdx,%rax
   34bc7:	48 09 c8             	or     %rcx,%rax
   34bca:	74 2a                	je     34bf6 <__divti3+0x46>
   34bcc:	48 89 f0             	mov    %rsi,%rax
   34bcf:	48 c1 f8 3f          	sar    $0x3f,%rax
   34bd3:	48 31 c3             	xor    %rax,%rbx
   34bd6:	48 31 c6             	xor    %rax,%rsi
   34bd9:	48 31 c7             	xor    %rax,%rdi
   34bdc:	48 29 c7             	sub    %rax,%rdi
   34bdf:	48 19 c6             	sbb    %rax,%rsi
   34be2:	ff 15 b0 13 01 00    	callq  *0x113b0(%rip)        # 45f98 <_GLOBAL_OFFSET_TABLE_+0x608>
   34be8:	48 31 da             	xor    %rbx,%rdx
   34beb:	48 31 d8             	xor    %rbx,%rax
   34bee:	48 29 d8             	sub    %rbx,%rax
   34bf1:	48 19 da             	sbb    %rbx,%rdx
   34bf4:	5b                   	pop    %rbx
   34bf5:	c3                   	retq   
   34bf6:	0f 0b                	ud2    
   34bf8:	0f 0b                	ud2    

0000000000034bfa <__rust_probestack>:
   34bfa:	55                   	push   %rbp
   34bfb:	48 89 e5             	mov    %rsp,%rbp
   34bfe:	49 89 c3             	mov    %rax,%r11
   34c01:	49 81 fb 00 10 00 00 	cmp    $0x1000,%r11
   34c08:	76 1c                	jbe    34c26 <__rust_probestack+0x2c>
   34c0a:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
   34c11:	48 85 64 24 08       	test   %rsp,0x8(%rsp)
   34c16:	49 81 eb 00 10 00 00 	sub    $0x1000,%r11
   34c1d:	49 81 fb 00 10 00 00 	cmp    $0x1000,%r11
   34c24:	77 e4                	ja     34c0a <__rust_probestack+0x10>
   34c26:	4c 29 dc             	sub    %r11,%rsp
   34c29:	48 85 64 24 08       	test   %rsp,0x8(%rsp)
   34c2e:	48 01 c4             	add    %rax,%rsp
   34c31:	c9                   	leaveq 
   34c32:	c3                   	retq   
   34c33:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   34c3a:	00 00 00 
   34c3d:	0f 1f 00             	nopl   (%rax)

0000000000034c40 <__umodti3>:
   34c40:	48 83 ec 18          	sub    $0x18,%rsp
   34c44:	0f 57 c0             	xorps  %xmm0,%xmm0
   34c47:	0f 11 44 24 08       	movups %xmm0,0x8(%rsp)
   34c4c:	4c 8d 44 24 08       	lea    0x8(%rsp),%r8
   34c51:	e8 1a 00 00 00       	callq  34c70 <compiler_builtins::int::udiv::__udivmodti4>
   34c56:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   34c5b:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   34c60:	48 83 c4 18          	add    $0x18,%rsp
   34c64:	c3                   	retq   
   34c65:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   34c6c:	00 00 00 
   34c6f:	90                   	nop

0000000000034c70 <compiler_builtins::int::udiv::__udivmodti4>:
   34c70:	41 57                	push   %r15
   34c72:	41 56                	push   %r14
   34c74:	41 54                	push   %r12
   34c76:	53                   	push   %rbx
   34c77:	49 89 ca             	mov    %rcx,%r10
   34c7a:	49 89 d1             	mov    %rdx,%r9
   34c7d:	49 89 f3             	mov    %rsi,%r11
   34c80:	49 89 ff             	mov    %rdi,%r15
   34c83:	48 85 f6             	test   %rsi,%rsi
   34c86:	74 2f                	je     34cb7 <compiler_builtins::int::udiv::__udivmodti4+0x47>
   34c88:	4d 85 c9             	test   %r9,%r9
   34c8b:	74 62                	je     34cef <compiler_builtins::int::udiv::__udivmodti4+0x7f>
   34c8d:	4d 85 d2             	test   %r10,%r10
   34c90:	0f 84 a1 00 00 00    	je     34d37 <compiler_builtins::int::udiv::__udivmodti4+0xc7>
   34c96:	4d 0f bd f2          	bsr    %r10,%r14
   34c9a:	41 83 f6 3f          	xor    $0x3f,%r14d
   34c9e:	49 0f bd c3          	bsr    %r11,%rax
   34ca2:	83 f0 3f             	xor    $0x3f,%eax
   34ca5:	41 29 c6             	sub    %eax,%r14d
   34ca8:	41 83 fe 3f          	cmp    $0x3f,%r14d
   34cac:	0f 87 31 01 00 00    	ja     34de3 <compiler_builtins::int::udiv::__udivmodti4+0x173>
   34cb2:	e9 40 01 00 00       	jmpq   34df7 <compiler_builtins::int::udiv::__udivmodti4+0x187>
   34cb7:	4d 85 d2             	test   %r10,%r10
   34cba:	0f 85 23 01 00 00    	jne    34de3 <compiler_builtins::int::udiv::__udivmodti4+0x173>
   34cc0:	4d 85 c0             	test   %r8,%r8
   34cc3:	0f 84 83 02 00 00    	je     34f4c <compiler_builtins::int::udiv::__udivmodti4+0x2dc>
   34cc9:	4d 85 c9             	test   %r9,%r9
   34ccc:	0f 84 0d 03 00 00    	je     34fdf <compiler_builtins::int::udiv::__udivmodti4+0x36f>
   34cd2:	4c 89 f8             	mov    %r15,%rax
   34cd5:	4c 09 c8             	or     %r9,%rax
   34cd8:	48 c1 e8 20          	shr    $0x20,%rax
   34cdc:	0f 84 8c 02 00 00    	je     34f6e <compiler_builtins::int::udiv::__udivmodti4+0x2fe>
   34ce2:	4c 89 f8             	mov    %r15,%rax
   34ce5:	31 d2                	xor    %edx,%edx
   34ce7:	49 f7 f1             	div    %r9
   34cea:	e9 87 02 00 00       	jmpq   34f76 <compiler_builtins::int::udiv::__udivmodti4+0x306>
   34cef:	4d 85 d2             	test   %r10,%r10
   34cf2:	0f 84 e7 02 00 00    	je     34fdf <compiler_builtins::int::udiv::__udivmodti4+0x36f>
   34cf8:	4d 85 ff             	test   %r15,%r15
   34cfb:	0f 84 84 00 00 00    	je     34d85 <compiler_builtins::int::udiv::__udivmodti4+0x115>
   34d01:	49 8d 42 ff          	lea    -0x1(%r10),%rax
   34d05:	49 85 c2             	test   %rax,%r10
   34d08:	0f 94 c1             	sete   %cl
   34d0b:	4d 85 d2             	test   %r10,%r10
   34d0e:	0f 95 c2             	setne  %dl
   34d11:	84 ca                	test   %cl,%dl
   34d13:	0f 84 b2 00 00 00    	je     34dcb <compiler_builtins::int::udiv::__udivmodti4+0x15b>
   34d19:	4d 85 c0             	test   %r8,%r8
   34d1c:	74 0a                	je     34d28 <compiler_builtins::int::udiv::__udivmodti4+0xb8>
   34d1e:	4c 21 d8             	and    %r11,%rax
   34d21:	4d 89 38             	mov    %r15,(%r8)
   34d24:	49 89 40 08          	mov    %rax,0x8(%r8)
   34d28:	49 0f bc ca          	bsf    %r10,%rcx
   34d2c:	49 d3 eb             	shr    %cl,%r11
   34d2f:	4d 89 df             	mov    %r11,%r15
   34d32:	e9 97 02 00 00       	jmpq   34fce <compiler_builtins::int::udiv::__udivmodti4+0x35e>
   34d37:	49 8d 41 ff          	lea    -0x1(%r9),%rax
   34d3b:	49 85 c1             	test   %rax,%r9
   34d3e:	0f 94 c1             	sete   %cl
   34d41:	4d 85 c9             	test   %r9,%r9
   34d44:	0f 95 c2             	setne  %dl
   34d47:	84 ca                	test   %cl,%dl
   34d49:	74 60                	je     34dab <compiler_builtins::int::udiv::__udivmodti4+0x13b>
   34d4b:	4d 85 c0             	test   %r8,%r8
   34d4e:	74 0e                	je     34d5e <compiler_builtins::int::udiv::__udivmodti4+0xee>
   34d50:	4c 21 f8             	and    %r15,%rax
   34d53:	49 89 00             	mov    %rax,(%r8)
   34d56:	49 c7 40 08 00 00 00 	movq   $0x0,0x8(%r8)
   34d5d:	00 
   34d5e:	49 83 f9 01          	cmp    $0x1,%r9
   34d62:	0f 84 69 02 00 00    	je     34fd1 <compiler_builtins::int::udiv::__udivmodti4+0x361>
   34d68:	49 0f bc c9          	bsf    %r9,%rcx
   34d6c:	4d 0f ad df          	shrd   %cl,%r11,%r15
   34d70:	49 d3 eb             	shr    %cl,%r11
   34d73:	31 c0                	xor    %eax,%eax
   34d75:	f6 c1 40             	test   $0x40,%cl
   34d78:	4d 0f 45 fb          	cmovne %r11,%r15
   34d7c:	4c 0f 45 d8          	cmovne %rax,%r11
   34d80:	e9 4c 02 00 00       	jmpq   34fd1 <compiler_builtins::int::udiv::__udivmodti4+0x361>
   34d85:	4d 85 c0             	test   %r8,%r8
   34d88:	0f 84 1c 02 00 00    	je     34faa <compiler_builtins::int::udiv::__udivmodti4+0x33a>
   34d8e:	4c 89 d8             	mov    %r11,%rax
   34d91:	4c 09 d0             	or     %r10,%rax
   34d94:	48 c1 e8 20          	shr    $0x20,%rax
   34d98:	0f 84 f9 01 00 00    	je     34f97 <compiler_builtins::int::udiv::__udivmodti4+0x327>
   34d9e:	4c 89 d8             	mov    %r11,%rax
   34da1:	31 d2                	xor    %edx,%edx
   34da3:	49 f7 f2             	div    %r10
   34da6:	e9 f4 01 00 00       	jmpq   34f9f <compiler_builtins::int::udiv::__udivmodti4+0x32f>
   34dab:	4d 0f bd f1          	bsr    %r9,%r14
   34daf:	41 83 f6 3f          	xor    $0x3f,%r14d
   34db3:	49 0f bd c3          	bsr    %r11,%rax
   34db7:	83 f0 3f             	xor    $0x3f,%eax
   34dba:	41 29 c6             	sub    %eax,%r14d
   34dbd:	ba bf ff ff ff       	mov    $0xffffffbf,%edx
   34dc2:	44 29 f2             	sub    %r14d,%edx
   34dc5:	41 83 c6 41          	add    $0x41,%r14d
   34dc9:	eb 38                	jmp    34e03 <compiler_builtins::int::udiv::__udivmodti4+0x193>
   34dcb:	4d 0f bd f2          	bsr    %r10,%r14
   34dcf:	41 83 f6 3f          	xor    $0x3f,%r14d
   34dd3:	49 0f bd c3          	bsr    %r11,%rax
   34dd7:	83 f0 3f             	xor    $0x3f,%eax
   34dda:	41 29 c6             	sub    %eax,%r14d
   34ddd:	41 83 fe 3e          	cmp    $0x3e,%r14d
   34de1:	76 14                	jbe    34df7 <compiler_builtins::int::udiv::__udivmodti4+0x187>
   34de3:	4d 85 c0             	test   %r8,%r8
   34de6:	74 07                	je     34def <compiler_builtins::int::udiv::__udivmodti4+0x17f>
   34de8:	4d 89 38             	mov    %r15,(%r8)
   34deb:	4d 89 58 08          	mov    %r11,0x8(%r8)
   34def:	45 31 ff             	xor    %r15d,%r15d
   34df2:	e9 d7 01 00 00       	jmpq   34fce <compiler_builtins::int::udiv::__udivmodti4+0x35e>
   34df7:	ba 7f 00 00 00       	mov    $0x7f,%edx
   34dfc:	44 29 f2             	sub    %r14d,%edx
   34dff:	41 83 c6 01          	add    $0x1,%r14d
   34e03:	4c 89 fe             	mov    %r15,%rsi
   34e06:	44 89 f1             	mov    %r14d,%ecx
   34e09:	4c 0f ad de          	shrd   %cl,%r11,%rsi
   34e0d:	4c 89 d8             	mov    %r11,%rax
   34e10:	48 d3 e8             	shr    %cl,%rax
   34e13:	45 31 e4             	xor    %r12d,%r12d
   34e16:	41 f6 c6 40          	test   $0x40,%r14b
   34e1a:	48 0f 45 f0          	cmovne %rax,%rsi
   34e1e:	49 0f 45 c4          	cmovne %r12,%rax
   34e22:	89 d1                	mov    %edx,%ecx
   34e24:	4d 0f a5 fb          	shld   %cl,%r15,%r11
   34e28:	49 d3 e7             	shl    %cl,%r15
   34e2b:	f6 c2 40             	test   $0x40,%dl
   34e2e:	4d 0f 45 df          	cmovne %r15,%r11
   34e32:	4d 0f 45 fc          	cmovne %r12,%r15
   34e36:	45 85 f6             	test   %r14d,%r14d
   34e39:	0f 84 f1 00 00 00    	je     34f30 <compiler_builtins::int::udiv::__udivmodti4+0x2c0>
   34e3f:	41 83 fe 01          	cmp    $0x1,%r14d
   34e43:	75 08                	jne    34e4d <compiler_builtins::int::udiv::__udivmodti4+0x1dd>
   34e45:	45 31 e4             	xor    %r12d,%r12d
   34e48:	e9 a2 00 00 00       	jmpq   34eef <compiler_builtins::int::udiv::__udivmodti4+0x27f>
   34e4d:	44 89 f1             	mov    %r14d,%ecx
   34e50:	83 e1 fe             	and    $0xfffffffe,%ecx
   34e53:	f7 d9                	neg    %ecx
   34e55:	45 31 e4             	xor    %r12d,%r12d
   34e58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   34e5f:	00 
   34e60:	48 0f a4 f0 01       	shld   $0x1,%rsi,%rax
   34e65:	4c 0f a4 de 01       	shld   $0x1,%r11,%rsi
   34e6a:	48 89 c3             	mov    %rax,%rbx
   34e6d:	48 f7 d3             	not    %rbx
   34e70:	48 89 f7             	mov    %rsi,%rdi
   34e73:	48 f7 d7             	not    %rdi
   34e76:	4c 01 cf             	add    %r9,%rdi
   34e79:	4c 11 d3             	adc    %r10,%rbx
   34e7c:	48 c1 fb 3f          	sar    $0x3f,%rbx
   34e80:	48 89 df             	mov    %rbx,%rdi
   34e83:	4c 21 d7             	and    %r10,%rdi
   34e86:	48 89 da             	mov    %rbx,%rdx
   34e89:	4c 21 ca             	and    %r9,%rdx
   34e8c:	48 29 d6             	sub    %rdx,%rsi
   34e8f:	48 19 f8             	sbb    %rdi,%rax
   34e92:	48 0f a4 f0 01       	shld   $0x1,%rsi,%rax
   34e97:	4c 89 da             	mov    %r11,%rdx
   34e9a:	48 c1 ea 3e          	shr    $0x3e,%rdx
   34e9e:	83 e2 01             	and    $0x1,%edx
   34ea1:	4d 0f a4 fb 02       	shld   $0x2,%r15,%r11
   34ea6:	48 8d 34 72          	lea    (%rdx,%rsi,2),%rsi
   34eaa:	49 c1 e7 02          	shl    $0x2,%r15
   34eae:	4d 01 e4             	add    %r12,%r12
   34eb1:	4d 09 e7             	or     %r12,%r15
   34eb4:	49 29 df             	sub    %rbx,%r15
   34eb7:	49 19 db             	sbb    %rbx,%r11
   34eba:	48 89 c2             	mov    %rax,%rdx
   34ebd:	48 f7 d2             	not    %rdx
   34ec0:	48 89 f7             	mov    %rsi,%rdi
   34ec3:	48 f7 d7             	not    %rdi
   34ec6:	4c 01 cf             	add    %r9,%rdi
   34ec9:	4c 11 d2             	adc    %r10,%rdx
   34ecc:	48 c1 fa 3f          	sar    $0x3f,%rdx
   34ed0:	41 89 d4             	mov    %edx,%r12d
   34ed3:	41 83 e4 01          	and    $0x1,%r12d
   34ed7:	48 89 d7             	mov    %rdx,%rdi
   34eda:	4c 21 d7             	and    %r10,%rdi
   34edd:	4c 21 ca             	and    %r9,%rdx
   34ee0:	48 29 d6             	sub    %rdx,%rsi
   34ee3:	48 19 f8             	sbb    %rdi,%rax
   34ee6:	83 c1 02             	add    $0x2,%ecx
   34ee9:	0f 85 71 ff ff ff    	jne    34e60 <compiler_builtins::int::udiv::__udivmodti4+0x1f0>
   34eef:	41 f6 c6 01          	test   $0x1,%r14b
   34ef3:	74 3b                	je     34f30 <compiler_builtins::int::udiv::__udivmodti4+0x2c0>
   34ef5:	48 0f a4 f0 01       	shld   $0x1,%rsi,%rax
   34efa:	4c 0f a4 de 01       	shld   $0x1,%r11,%rsi
   34eff:	48 89 c1             	mov    %rax,%rcx
   34f02:	48 f7 d1             	not    %rcx
   34f05:	48 89 f2             	mov    %rsi,%rdx
   34f08:	48 f7 d2             	not    %rdx
   34f0b:	4c 01 ca             	add    %r9,%rdx
   34f0e:	4c 11 d1             	adc    %r10,%rcx
   34f11:	48 c1 f9 3f          	sar    $0x3f,%rcx
   34f15:	49 21 ca             	and    %rcx,%r10
   34f18:	49 21 c9             	and    %rcx,%r9
   34f1b:	4c 29 ce             	sub    %r9,%rsi
   34f1e:	4c 19 d0             	sbb    %r10,%rax
   34f21:	83 e1 01             	and    $0x1,%ecx
   34f24:	4d 0f a4 fb 01       	shld   $0x1,%r15,%r11
   34f29:	4f 8d 3c 7c          	lea    (%r12,%r15,2),%r15
   34f2d:	49 89 cc             	mov    %rcx,%r12
   34f30:	4d 85 c0             	test   %r8,%r8
   34f33:	74 07                	je     34f3c <compiler_builtins::int::udiv::__udivmodti4+0x2cc>
   34f35:	49 89 30             	mov    %rsi,(%r8)
   34f38:	49 89 40 08          	mov    %rax,0x8(%r8)
   34f3c:	4d 0f a4 fb 01       	shld   $0x1,%r15,%r11
   34f41:	4d 01 ff             	add    %r15,%r15
   34f44:	4d 09 e7             	or     %r12,%r15
   34f47:	e9 85 00 00 00       	jmpq   34fd1 <compiler_builtins::int::udiv::__udivmodti4+0x361>
   34f4c:	4d 85 c9             	test   %r9,%r9
   34f4f:	0f 84 8a 00 00 00    	je     34fdf <compiler_builtins::int::udiv::__udivmodti4+0x36f>
   34f55:	4c 89 f8             	mov    %r15,%rax
   34f58:	4c 09 c8             	or     %r9,%rax
   34f5b:	48 c1 e8 20          	shr    $0x20,%rax
   34f5f:	74 2c                	je     34f8d <compiler_builtins::int::udiv::__udivmodti4+0x31d>
   34f61:	4c 89 f8             	mov    %r15,%rax
   34f64:	31 d2                	xor    %edx,%edx
   34f66:	49 f7 f1             	div    %r9
   34f69:	49 89 c7             	mov    %rax,%r15
   34f6c:	eb 60                	jmp    34fce <compiler_builtins::int::udiv::__udivmodti4+0x35e>
   34f6e:	44 89 f8             	mov    %r15d,%eax
   34f71:	31 d2                	xor    %edx,%edx
   34f73:	41 f7 f1             	div    %r9d
   34f76:	49 89 10             	mov    %rdx,(%r8)
   34f79:	49 c7 40 08 00 00 00 	movq   $0x0,0x8(%r8)
   34f80:	00 
   34f81:	4c 89 f8             	mov    %r15,%rax
   34f84:	4c 09 c8             	or     %r9,%rax
   34f87:	48 c1 e8 20          	shr    $0x20,%rax
   34f8b:	75 d4                	jne    34f61 <compiler_builtins::int::udiv::__udivmodti4+0x2f1>
   34f8d:	44 89 f8             	mov    %r15d,%eax
   34f90:	31 d2                	xor    %edx,%edx
   34f92:	41 f7 f1             	div    %r9d
   34f95:	eb 34                	jmp    34fcb <compiler_builtins::int::udiv::__udivmodti4+0x35b>
   34f97:	44 89 d8             	mov    %r11d,%eax
   34f9a:	31 d2                	xor    %edx,%edx
   34f9c:	41 f7 f2             	div    %r10d
   34f9f:	49 89 50 08          	mov    %rdx,0x8(%r8)
   34fa3:	49 c7 00 00 00 00 00 	movq   $0x0,(%r8)
   34faa:	4c 89 d8             	mov    %r11,%rax
   34fad:	4c 09 d0             	or     %r10,%rax
   34fb0:	48 c1 e8 20          	shr    $0x20,%rax
   34fb4:	74 0d                	je     34fc3 <compiler_builtins::int::udiv::__udivmodti4+0x353>
   34fb6:	4c 89 d8             	mov    %r11,%rax
   34fb9:	31 d2                	xor    %edx,%edx
   34fbb:	49 f7 f2             	div    %r10
   34fbe:	49 89 c7             	mov    %rax,%r15
   34fc1:	eb 0b                	jmp    34fce <compiler_builtins::int::udiv::__udivmodti4+0x35e>
   34fc3:	44 89 d8             	mov    %r11d,%eax
   34fc6:	31 d2                	xor    %edx,%edx
   34fc8:	41 f7 f2             	div    %r10d
   34fcb:	41 89 c7             	mov    %eax,%r15d
   34fce:	45 31 db             	xor    %r11d,%r11d
   34fd1:	4c 89 f8             	mov    %r15,%rax
   34fd4:	4c 89 da             	mov    %r11,%rdx
   34fd7:	5b                   	pop    %rbx
   34fd8:	41 5c                	pop    %r12
   34fda:	41 5e                	pop    %r14
   34fdc:	41 5f                	pop    %r15
   34fde:	c3                   	retq   
   34fdf:	0f 0b                	ud2    
   34fe1:	0f 0b                	ud2    
   34fe3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   34fea:	00 00 00 
   34fed:	0f 1f 00             	nopl   (%rax)

0000000000034ff0 <__libc_csu_init>:
   34ff0:	f3 0f 1e fa          	endbr64 
   34ff4:	41 57                	push   %r15
   34ff6:	4c 8d 3d c3 e4 00 00 	lea    0xe4c3(%rip),%r15        # 434c0 <std::sys::unix::args::imp::ARGV_INIT_ARRAY>
   34ffd:	41 56                	push   %r14
   34fff:	49 89 d6             	mov    %rdx,%r14
   35002:	41 55                	push   %r13
   35004:	49 89 f5             	mov    %rsi,%r13
   35007:	41 54                	push   %r12
   35009:	41 89 fc             	mov    %edi,%r12d
   3500c:	55                   	push   %rbp
   3500d:	48 8d 2d bc e4 00 00 	lea    0xe4bc(%rip),%rbp        # 434d0 <__do_global_dtors_aux_fini_array_entry>
   35014:	53                   	push   %rbx
   35015:	4c 29 fd             	sub    %r15,%rbp
   35018:	48 83 ec 08          	sub    $0x8,%rsp
   3501c:	e8 df ff fc ff       	callq  5000 <_init>
   35021:	48 c1 fd 03          	sar    $0x3,%rbp
   35025:	74 1f                	je     35046 <__libc_csu_init+0x56>
   35027:	31 db                	xor    %ebx,%ebx
   35029:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   35030:	4c 89 f2             	mov    %r14,%rdx
   35033:	4c 89 ee             	mov    %r13,%rsi
   35036:	44 89 e7             	mov    %r12d,%edi
   35039:	41 ff 14 df          	callq  *(%r15,%rbx,8)
   3503d:	48 83 c3 01          	add    $0x1,%rbx
   35041:	48 39 dd             	cmp    %rbx,%rbp
   35044:	75 ea                	jne    35030 <__libc_csu_init+0x40>
   35046:	48 83 c4 08          	add    $0x8,%rsp
   3504a:	5b                   	pop    %rbx
   3504b:	5d                   	pop    %rbp
   3504c:	41 5c                	pop    %r12
   3504e:	41 5d                	pop    %r13
   35050:	41 5e                	pop    %r14
   35052:	41 5f                	pop    %r15
   35054:	c3                   	retq   
   35055:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   3505c:	00 00 00 00 

0000000000035060 <__libc_csu_fini>:
   35060:	f3 0f 1e fa          	endbr64 
   35064:	c3                   	retq   
   35065:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   3506c:	00 00 00 
   3506f:	90                   	nop

0000000000035070 <fstat64>:
   35070:	f3 0f 1e fa          	endbr64 
   35074:	48 89 f2             	mov    %rsi,%rdx
   35077:	89 fe                	mov    %edi,%esi
   35079:	bf 01 00 00 00       	mov    $0x1,%edi
   3507e:	e9 bd ff fc ff       	jmpq   5040 <__fxstat64@plt>

Disassembly of section .fini:

0000000000035084 <_fini>:
   35084:	f3 0f 1e fa          	endbr64 
   35088:	48 83 ec 08          	sub    $0x8,%rsp
   3508c:	48 83 c4 08          	add    $0x8,%rsp
   35090:	c3                   	retq   
